

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Mar 25 02:07:58 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.41
    33                           ; Generated 25/01/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1827 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011D                     	;# 
   126  011E                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0191                     	;# 
   130  0191                     	;# 
   131  0192                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0194                     	;# 
   136  0195                     	;# 
   137  0196                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  020D                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0216                     	;# 
   163  0216                     	;# 
   164  0217                     	;# 
   165  0217                     	;# 
   166  0219                     	;# 
   167  021A                     	;# 
   168  021B                     	;# 
   169  021C                     	;# 
   170  021D                     	;# 
   171  021E                     	;# 
   172  021F                     	;# 
   173  0291                     	;# 
   174  0291                     	;# 
   175  0292                     	;# 
   176  0293                     	;# 
   177  0294                     	;# 
   178  0295                     	;# 
   179  0295                     	;# 
   180  0296                     	;# 
   181  0298                     	;# 
   182  0298                     	;# 
   183  0299                     	;# 
   184  029A                     	;# 
   185  029B                     	;# 
   186  029C                     	;# 
   187  029C                     	;# 
   188  029D                     	;# 
   189  029E                     	;# 
   190  029E                     	;# 
   191  0311                     	;# 
   192  0311                     	;# 
   193  0312                     	;# 
   194  0313                     	;# 
   195  0318                     	;# 
   196  0318                     	;# 
   197  0319                     	;# 
   198  031A                     	;# 
   199  0394                     	;# 
   200  0395                     	;# 
   201  0396                     	;# 
   202  039A                     	;# 
   203  039C                     	;# 
   204  039D                     	;# 
   205  039E                     	;# 
   206  039F                     	;# 
   207  0415                     	;# 
   208  0416                     	;# 
   209  0417                     	;# 
   210  041C                     	;# 
   211  041D                     	;# 
   212  041E                     	;# 
   213  0FE4                     	;# 
   214  0FE5                     	;# 
   215  0FE6                     	;# 
   216  0FE7                     	;# 
   217  0FE8                     	;# 
   218  0FE9                     	;# 
   219  0FEA                     	;# 
   220  0FEB                     	;# 
   221  0FED                     	;# 
   222  0FEE                     	;# 
   223  0FEF                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  010C                     	;# 
   271  010D                     	;# 
   272  0111                     	;# 
   273  0112                     	;# 
   274  0113                     	;# 
   275  0114                     	;# 
   276  0115                     	;# 
   277  0116                     	;# 
   278  0117                     	;# 
   279  0118                     	;# 
   280  0119                     	;# 
   281  011A                     	;# 
   282  011B                     	;# 
   283  011D                     	;# 
   284  011E                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0191                     	;# 
   288  0191                     	;# 
   289  0192                     	;# 
   290  0193                     	;# 
   291  0193                     	;# 
   292  0193                     	;# 
   293  0194                     	;# 
   294  0195                     	;# 
   295  0196                     	;# 
   296  0199                     	;# 
   297  019A                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019C                     	;# 
   303  019C                     	;# 
   304  019D                     	;# 
   305  019E                     	;# 
   306  019F                     	;# 
   307  020C                     	;# 
   308  020D                     	;# 
   309  0211                     	;# 
   310  0211                     	;# 
   311  0212                     	;# 
   312  0212                     	;# 
   313  0213                     	;# 
   314  0213                     	;# 
   315  0214                     	;# 
   316  0214                     	;# 
   317  0215                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0216                     	;# 
   321  0216                     	;# 
   322  0217                     	;# 
   323  0217                     	;# 
   324  0219                     	;# 
   325  021A                     	;# 
   326  021B                     	;# 
   327  021C                     	;# 
   328  021D                     	;# 
   329  021E                     	;# 
   330  021F                     	;# 
   331  0291                     	;# 
   332  0291                     	;# 
   333  0292                     	;# 
   334  0293                     	;# 
   335  0294                     	;# 
   336  0295                     	;# 
   337  0295                     	;# 
   338  0296                     	;# 
   339  0298                     	;# 
   340  0298                     	;# 
   341  0299                     	;# 
   342  029A                     	;# 
   343  029B                     	;# 
   344  029C                     	;# 
   345  029C                     	;# 
   346  029D                     	;# 
   347  029E                     	;# 
   348  029E                     	;# 
   349  0311                     	;# 
   350  0311                     	;# 
   351  0312                     	;# 
   352  0313                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  0394                     	;# 
   358  0395                     	;# 
   359  0396                     	;# 
   360  039A                     	;# 
   361  039C                     	;# 
   362  039D                     	;# 
   363  039E                     	;# 
   364  039F                     	;# 
   365  0415                     	;# 
   366  0416                     	;# 
   367  0417                     	;# 
   368  041C                     	;# 
   369  041D                     	;# 
   370  041E                     	;# 
   371  0FE4                     	;# 
   372  0FE5                     	;# 
   373  0FE6                     	;# 
   374  0FE7                     	;# 
   375  0FE8                     	;# 
   376  0FE9                     	;# 
   377  0FEA                     	;# 
   378  0FEB                     	;# 
   379  0FED                     	;# 
   380  0FEE                     	;# 
   381  0FEF                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  0111                     	;# 
   431  0112                     	;# 
   432  0113                     	;# 
   433  0114                     	;# 
   434  0115                     	;# 
   435  0116                     	;# 
   436  0117                     	;# 
   437  0118                     	;# 
   438  0119                     	;# 
   439  011A                     	;# 
   440  011B                     	;# 
   441  011D                     	;# 
   442  011E                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0191                     	;# 
   446  0191                     	;# 
   447  0192                     	;# 
   448  0193                     	;# 
   449  0193                     	;# 
   450  0193                     	;# 
   451  0194                     	;# 
   452  0195                     	;# 
   453  0196                     	;# 
   454  0199                     	;# 
   455  019A                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019C                     	;# 
   461  019C                     	;# 
   462  019D                     	;# 
   463  019E                     	;# 
   464  019F                     	;# 
   465  020C                     	;# 
   466  020D                     	;# 
   467  0211                     	;# 
   468  0211                     	;# 
   469  0212                     	;# 
   470  0212                     	;# 
   471  0213                     	;# 
   472  0213                     	;# 
   473  0214                     	;# 
   474  0214                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0216                     	;# 
   480  0217                     	;# 
   481  0217                     	;# 
   482  0219                     	;# 
   483  021A                     	;# 
   484  021B                     	;# 
   485  021C                     	;# 
   486  021D                     	;# 
   487  021E                     	;# 
   488  021F                     	;# 
   489  0291                     	;# 
   490  0291                     	;# 
   491  0292                     	;# 
   492  0293                     	;# 
   493  0294                     	;# 
   494  0295                     	;# 
   495  0295                     	;# 
   496  0296                     	;# 
   497  0298                     	;# 
   498  0298                     	;# 
   499  0299                     	;# 
   500  029A                     	;# 
   501  029B                     	;# 
   502  029C                     	;# 
   503  029C                     	;# 
   504  029D                     	;# 
   505  029E                     	;# 
   506  029E                     	;# 
   507  0311                     	;# 
   508  0311                     	;# 
   509  0312                     	;# 
   510  0313                     	;# 
   511  0318                     	;# 
   512  0318                     	;# 
   513  0319                     	;# 
   514  031A                     	;# 
   515  0394                     	;# 
   516  0395                     	;# 
   517  0396                     	;# 
   518  039A                     	;# 
   519  039C                     	;# 
   520  039D                     	;# 
   521  039E                     	;# 
   522  039F                     	;# 
   523  0415                     	;# 
   524  0416                     	;# 
   525  0417                     	;# 
   526  041C                     	;# 
   527  041D                     	;# 
   528  041E                     	;# 
   529  0FE4                     	;# 
   530  0FE5                     	;# 
   531  0FE6                     	;# 
   532  0FE7                     	;# 
   533  0FE8                     	;# 
   534  0FE9                     	;# 
   535  0FEA                     	;# 
   536  0FEB                     	;# 
   537  0FED                     	;# 
   538  0FEE                     	;# 
   539  0FEF                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  0011                     	;# 
   555  0012                     	;# 
   556  0013                     	;# 
   557  0014                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  008C                     	;# 
   570  008D                     	;# 
   571  0091                     	;# 
   572  0092                     	;# 
   573  0093                     	;# 
   574  0094                     	;# 
   575  0095                     	;# 
   576  0096                     	;# 
   577  0097                     	;# 
   578  0098                     	;# 
   579  0099                     	;# 
   580  009A                     	;# 
   581  009B                     	;# 
   582  009B                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009E                     	;# 
   586  010C                     	;# 
   587  010D                     	;# 
   588  0111                     	;# 
   589  0112                     	;# 
   590  0113                     	;# 
   591  0114                     	;# 
   592  0115                     	;# 
   593  0116                     	;# 
   594  0117                     	;# 
   595  0118                     	;# 
   596  0119                     	;# 
   597  011A                     	;# 
   598  011B                     	;# 
   599  011D                     	;# 
   600  011E                     	;# 
   601  018C                     	;# 
   602  018D                     	;# 
   603  0191                     	;# 
   604  0191                     	;# 
   605  0192                     	;# 
   606  0193                     	;# 
   607  0193                     	;# 
   608  0193                     	;# 
   609  0194                     	;# 
   610  0195                     	;# 
   611  0196                     	;# 
   612  0199                     	;# 
   613  019A                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019C                     	;# 
   619  019C                     	;# 
   620  019D                     	;# 
   621  019E                     	;# 
   622  019F                     	;# 
   623  020C                     	;# 
   624  020D                     	;# 
   625  0211                     	;# 
   626  0211                     	;# 
   627  0212                     	;# 
   628  0212                     	;# 
   629  0213                     	;# 
   630  0213                     	;# 
   631  0214                     	;# 
   632  0214                     	;# 
   633  0215                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0216                     	;# 
   637  0216                     	;# 
   638  0217                     	;# 
   639  0217                     	;# 
   640  0219                     	;# 
   641  021A                     	;# 
   642  021B                     	;# 
   643  021C                     	;# 
   644  021D                     	;# 
   645  021E                     	;# 
   646  021F                     	;# 
   647  0291                     	;# 
   648  0291                     	;# 
   649  0292                     	;# 
   650  0293                     	;# 
   651  0294                     	;# 
   652  0295                     	;# 
   653  0295                     	;# 
   654  0296                     	;# 
   655  0298                     	;# 
   656  0298                     	;# 
   657  0299                     	;# 
   658  029A                     	;# 
   659  029B                     	;# 
   660  029C                     	;# 
   661  029C                     	;# 
   662  029D                     	;# 
   663  029E                     	;# 
   664  029E                     	;# 
   665  0311                     	;# 
   666  0311                     	;# 
   667  0312                     	;# 
   668  0313                     	;# 
   669  0318                     	;# 
   670  0318                     	;# 
   671  0319                     	;# 
   672  031A                     	;# 
   673  0394                     	;# 
   674  0395                     	;# 
   675  0396                     	;# 
   676  039A                     	;# 
   677  039C                     	;# 
   678  039D                     	;# 
   679  039E                     	;# 
   680  039F                     	;# 
   681  0415                     	;# 
   682  0416                     	;# 
   683  0417                     	;# 
   684  041C                     	;# 
   685  041D                     	;# 
   686  041E                     	;# 
   687  0FE4                     	;# 
   688  0FE5                     	;# 
   689  0FE6                     	;# 
   690  0FE7                     	;# 
   691  0FE8                     	;# 
   692  0FE9                     	;# 
   693  0FEA                     	;# 
   694  0FEB                     	;# 
   695  0FED                     	;# 
   696  0FEE                     	;# 
   697  0FEF                     	;# 
   698  0000                     	;# 
   699  0001                     	;# 
   700  0002                     	;# 
   701  0003                     	;# 
   702  0004                     	;# 
   703  0005                     	;# 
   704  0006                     	;# 
   705  0007                     	;# 
   706  0008                     	;# 
   707  0009                     	;# 
   708  000A                     	;# 
   709  000B                     	;# 
   710  000C                     	;# 
   711  000D                     	;# 
   712  0011                     	;# 
   713  0012                     	;# 
   714  0013                     	;# 
   715  0014                     	;# 
   716  0015                     	;# 
   717  0016                     	;# 
   718  0016                     	;# 
   719  0017                     	;# 
   720  0018                     	;# 
   721  0019                     	;# 
   722  001A                     	;# 
   723  001B                     	;# 
   724  001C                     	;# 
   725  001E                     	;# 
   726  001F                     	;# 
   727  008C                     	;# 
   728  008D                     	;# 
   729  0091                     	;# 
   730  0092                     	;# 
   731  0093                     	;# 
   732  0094                     	;# 
   733  0095                     	;# 
   734  0096                     	;# 
   735  0097                     	;# 
   736  0098                     	;# 
   737  0099                     	;# 
   738  009A                     	;# 
   739  009B                     	;# 
   740  009B                     	;# 
   741  009C                     	;# 
   742  009D                     	;# 
   743  009E                     	;# 
   744  010C                     	;# 
   745  010D                     	;# 
   746  0111                     	;# 
   747  0112                     	;# 
   748  0113                     	;# 
   749  0114                     	;# 
   750  0115                     	;# 
   751  0116                     	;# 
   752  0117                     	;# 
   753  0118                     	;# 
   754  0119                     	;# 
   755  011A                     	;# 
   756  011B                     	;# 
   757  011D                     	;# 
   758  011E                     	;# 
   759  018C                     	;# 
   760  018D                     	;# 
   761  0191                     	;# 
   762  0191                     	;# 
   763  0192                     	;# 
   764  0193                     	;# 
   765  0193                     	;# 
   766  0193                     	;# 
   767  0194                     	;# 
   768  0195                     	;# 
   769  0196                     	;# 
   770  0199                     	;# 
   771  019A                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019C                     	;# 
   777  019C                     	;# 
   778  019D                     	;# 
   779  019E                     	;# 
   780  019F                     	;# 
   781  020C                     	;# 
   782  020D                     	;# 
   783  0211                     	;# 
   784  0211                     	;# 
   785  0212                     	;# 
   786  0212                     	;# 
   787  0213                     	;# 
   788  0213                     	;# 
   789  0214                     	;# 
   790  0214                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0215                     	;# 
   794  0216                     	;# 
   795  0216                     	;# 
   796  0217                     	;# 
   797  0217                     	;# 
   798  0219                     	;# 
   799  021A                     	;# 
   800  021B                     	;# 
   801  021C                     	;# 
   802  021D                     	;# 
   803  021E                     	;# 
   804  021F                     	;# 
   805  0291                     	;# 
   806  0291                     	;# 
   807  0292                     	;# 
   808  0293                     	;# 
   809  0294                     	;# 
   810  0295                     	;# 
   811  0295                     	;# 
   812  0296                     	;# 
   813  0298                     	;# 
   814  0298                     	;# 
   815  0299                     	;# 
   816  029A                     	;# 
   817  029B                     	;# 
   818  029C                     	;# 
   819  029C                     	;# 
   820  029D                     	;# 
   821  029E                     	;# 
   822  029E                     	;# 
   823  0311                     	;# 
   824  0311                     	;# 
   825  0312                     	;# 
   826  0313                     	;# 
   827  0318                     	;# 
   828  0318                     	;# 
   829  0319                     	;# 
   830  031A                     	;# 
   831  0394                     	;# 
   832  0395                     	;# 
   833  0396                     	;# 
   834  039A                     	;# 
   835  039C                     	;# 
   836  039D                     	;# 
   837  039E                     	;# 
   838  039F                     	;# 
   839  0415                     	;# 
   840  0416                     	;# 
   841  0417                     	;# 
   842  041C                     	;# 
   843  041D                     	;# 
   844  041E                     	;# 
   845  0FE4                     	;# 
   846  0FE5                     	;# 
   847  0FE6                     	;# 
   848  0FE7                     	;# 
   849  0FE8                     	;# 
   850  0FE9                     	;# 
   851  0FEA                     	;# 
   852  0FEB                     	;# 
   853  0FED                     	;# 
   854  0FEE                     	;# 
   855  0FEF                     	;# 
   856  0000                     	;# 
   857  0001                     	;# 
   858  0002                     	;# 
   859  0003                     	;# 
   860  0004                     	;# 
   861  0005                     	;# 
   862  0006                     	;# 
   863  0007                     	;# 
   864  0008                     	;# 
   865  0009                     	;# 
   866  000A                     	;# 
   867  000B                     	;# 
   868  000C                     	;# 
   869  000D                     	;# 
   870  0011                     	;# 
   871  0012                     	;# 
   872  0013                     	;# 
   873  0014                     	;# 
   874  0015                     	;# 
   875  0016                     	;# 
   876  0016                     	;# 
   877  0017                     	;# 
   878  0018                     	;# 
   879  0019                     	;# 
   880  001A                     	;# 
   881  001B                     	;# 
   882  001C                     	;# 
   883  001E                     	;# 
   884  001F                     	;# 
   885  008C                     	;# 
   886  008D                     	;# 
   887  0091                     	;# 
   888  0092                     	;# 
   889  0093                     	;# 
   890  0094                     	;# 
   891  0095                     	;# 
   892  0096                     	;# 
   893  0097                     	;# 
   894  0098                     	;# 
   895  0099                     	;# 
   896  009A                     	;# 
   897  009B                     	;# 
   898  009B                     	;# 
   899  009C                     	;# 
   900  009D                     	;# 
   901  009E                     	;# 
   902  010C                     	;# 
   903  010D                     	;# 
   904  0111                     	;# 
   905  0112                     	;# 
   906  0113                     	;# 
   907  0114                     	;# 
   908  0115                     	;# 
   909  0116                     	;# 
   910  0117                     	;# 
   911  0118                     	;# 
   912  0119                     	;# 
   913  011A                     	;# 
   914  011B                     	;# 
   915  011D                     	;# 
   916  011E                     	;# 
   917  018C                     	;# 
   918  018D                     	;# 
   919  0191                     	;# 
   920  0191                     	;# 
   921  0192                     	;# 
   922  0193                     	;# 
   923  0193                     	;# 
   924  0193                     	;# 
   925  0194                     	;# 
   926  0195                     	;# 
   927  0196                     	;# 
   928  0199                     	;# 
   929  019A                     	;# 
   930  019B                     	;# 
   931  019B                     	;# 
   932  019B                     	;# 
   933  019B                     	;# 
   934  019C                     	;# 
   935  019C                     	;# 
   936  019D                     	;# 
   937  019E                     	;# 
   938  019F                     	;# 
   939  020C                     	;# 
   940  020D                     	;# 
   941  0211                     	;# 
   942  0211                     	;# 
   943  0212                     	;# 
   944  0212                     	;# 
   945  0213                     	;# 
   946  0213                     	;# 
   947  0214                     	;# 
   948  0214                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0216                     	;# 
   953  0216                     	;# 
   954  0217                     	;# 
   955  0217                     	;# 
   956  0219                     	;# 
   957  021A                     	;# 
   958  021B                     	;# 
   959  021C                     	;# 
   960  021D                     	;# 
   961  021E                     	;# 
   962  021F                     	;# 
   963  0291                     	;# 
   964  0291                     	;# 
   965  0292                     	;# 
   966  0293                     	;# 
   967  0294                     	;# 
   968  0295                     	;# 
   969  0295                     	;# 
   970  0296                     	;# 
   971  0298                     	;# 
   972  0298                     	;# 
   973  0299                     	;# 
   974  029A                     	;# 
   975  029B                     	;# 
   976  029C                     	;# 
   977  029C                     	;# 
   978  029D                     	;# 
   979  029E                     	;# 
   980  029E                     	;# 
   981  0311                     	;# 
   982  0311                     	;# 
   983  0312                     	;# 
   984  0313                     	;# 
   985  0318                     	;# 
   986  0318                     	;# 
   987  0319                     	;# 
   988  031A                     	;# 
   989  0394                     	;# 
   990  0395                     	;# 
   991  0396                     	;# 
   992  039A                     	;# 
   993  039C                     	;# 
   994  039D                     	;# 
   995  039E                     	;# 
   996  039F                     	;# 
   997  0415                     	;# 
   998  0416                     	;# 
   999  0417                     	;# 
  1000  041C                     	;# 
  1001  041D                     	;# 
  1002  041E                     	;# 
  1003  0FE4                     	;# 
  1004  0FE5                     	;# 
  1005  0FE6                     	;# 
  1006  0FE7                     	;# 
  1007  0FE8                     	;# 
  1008  0FE9                     	;# 
  1009  0FEA                     	;# 
  1010  0FEB                     	;# 
  1011  0FED                     	;# 
  1012  0FEE                     	;# 
  1013  0FEF                     	;# 
  1014                           
  1015 ;; Function _LCD_Put is unused but had its address taken
  1016  000D                     _PORTB	set	13
  1017  000C                     _PORTA	set	12
  1018  005F                     _GIE	set	95
  1019  005E                     _PEIE	set	94
  1020  00A1                     _BCL2IF	set	161
  1021  00A0                     _SSP2IF	set	160
  1022  0093                     _BCL1IF	set	147
  1023  008B                     _SSP1IF	set	139
  1024  0064                     _RA4	set	100
  1025  0063                     _RA3	set	99
  1026  008D                     _TRISB	set	141
  1027  008C                     _TRISA	set	140
  1028  0099                     _OSCCON	set	153
  1029  04A1                     _BCL2IE	set	1185
  1030  04A0                     _SSP2IE	set	1184
  1031  0493                     _BCL1IE	set	1171
  1032  048B                     _SSP1IE	set	1163
  1033  011E                     _APFCON1	set	286
  1034  011D                     _APFCON0	set	285
  1035  0867                     _LATA7	set	2151
  1036  018D                     _ANSELB	set	397
  1037  018C                     _ANSELA	set	396
  1038  021C                     _SSP2STATbits	set	540
  1039  0219                     _SSP2BUF	set	537
  1040  021E                     _SSP2CON2	set	542
  1041  021B                     _SSP2MSK	set	539
  1042  021E                     _SSP2CON2bits	set	542
  1043  021D                     _SSP2CON1bits	set	541
  1044  021A                     _SSP2ADD	set	538
  1045  021C                     _SSP2STAT	set	540
  1046  021D                     _SSP2CON1	set	541
  1047  0214                     _SSP1STATbits	set	532
  1048  0211                     _SSP1BUF	set	529
  1049  0216                     _SSP1CON2	set	534
  1050  0213                     _SSP1MSK	set	531
  1051  0216                     _SSP1CON2bits	set	534
  1052  0215                     _SSP1CON1bits	set	533
  1053  0212                     _SSP1ADD	set	530
  1054  0214                     _SSP1STAT	set	532
  1055  0215                     _SSP1CON1	set	533
  1056                           
  1057                           	psect	stringtext
  1058  03A5                     __pstringtext:	
  1059  03A5                     STR_2:	
  1060  03A5  3425               	retlw	37	;'%'
  1061  03A6  3430               	retlw	48	;'0'
  1062  03A7  3438               	retlw	56	;'8'
  1063  03A8  346C               	retlw	108	;'l'
  1064  03A9  3458               	retlw	88	;'X'
  1065  03AA  3420               	retlw	32	;' '
  1066  03AB  3400               	retlw	0
  1067  03AC                     STR_5:	
  1068  03AC  3420               	retlw	32	;' '
  1069  03AD  3425               	retlw	37	;'%'
  1070  03AE  3430               	retlw	48	;'0'
  1071  03AF  3438               	retlw	56	;'8'
  1072  03B0  344C               	retlw	76	;'L'
  1073  03B1  3458               	retlw	88	;'X'
  1074  03B2  3400               	retlw	0
  1075  03B3                     STR_3:	
  1076  03B3  3420               	retlw	32	;' '
  1077  03B4  3425               	retlw	37	;'%'
  1078  03B5  3430               	retlw	48	;'0'
  1079  03B6  3432               	retlw	50	;'2'
  1080  03B7  3458               	retlw	88	;'X'
  1081  03B8  3400               	retlw	0
  1082  03B9                     STR_4:	
  1083  03B9  3420               	retlw	32	;' '
  1084  03BA  3425               	retlw	37	;'%'
  1085  03BB  3430               	retlw	48	;'0'
  1086  03BC  3434               	retlw	52	;'4'
  1087  03BD  3458               	retlw	88	;'X'
  1088  03BE  3400               	retlw	0
  1089  03BF                     STR_1:	
  1090  03BF  340D               	retlw	13
  1091  03C0  3400               	retlw	0
  1092                           
  1093                           ; #config settings
  1094  0000                     
  1095                           	psect	cinit
  1096  0012                     start_initialization:	
  1097  0012                     __initialization:	
  1098                           
  1099                           ; Clear objects allocated to COMMON
  1100  0012  01FB               	clrf	__pbssCOMMON& (0+127)
  1101                           
  1102                           ; Clear objects allocated to BANK0
  1103  0013  3020               	movlw	low __pbssBANK0
  1104  0014  0084               	movwf	4
  1105  0015  3000               	movlw	high __pbssBANK0
  1106  0016  0085               	movwf	5
  1107  0017  3030               	movlw	48
  1108  0018  3183  23FB         	fcall	clear_ram0
  1109  001A                     end_of_initialization:	
  1110                           ;End of C runtime variable initialization code
  1111                           
  1112  001A                     __end_of__initialization:	
  1113  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1114  001B  0020               	movlb	0
  1115  001C  3182  2AD6         	ljmp	_main	;jump to C main() function
  1116                           
  1117                           	psect	bssCOMMON
  1118  007B                     __pbssCOMMON:	
  1119  007B                     _outptr:	
  1120  007B                     	ds	1
  1121                           
  1122                           	psect	bssBANK0
  1123  0020                     __pbssBANK0:	
  1124  0020                     _MemoryReg:	
  1125  0020                     	ds	3
  1126  0023                     _xfunc_in:	
  1127  0023                     	ds	2
  1128  0025                     _xfunc_out:	
  1129  0025                     	ds	2
  1130  0027                     _I2C2_Config:	
  1131  0027                     	ds	19
  1132  003A                     _I2C1_Config:	
  1133  003A                     	ds	19
  1134  004D                     _VoltageReg:	
  1135  004D                     	ds	2
  1136  004F                     _ConfigReg:	
  1137  004F                     	ds	1
  1138                           
  1139                           	psect	clrtext
  1140  03FB                     clear_ram0:	
  1141                           ;	Called with FSR0 containing the base address, and
  1142                           ;	WREG with the size to clear
  1143                           
  1144  03FB  0064               	clrwdt	;clear the watchdog before getting into this loop
  1145  03FC                     clrloop0:	
  1146  03FC  0180               	clrf	0	;clear RAM location pointed to by FSR
  1147  03FD  3101               	addfsr 0,1
  1148  03FE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1149  03FF  2BFC               	goto	clrloop0	;have we reached the end yet?
  1150  0400  3400               	retlw	0	;all done for this memory range, return
  1151                           
  1152                           	psect	cstackCOMMON
  1153  0070                     __pcstackCOMMON:	
  1154  0070                     ?_Basic_Init:	
  1155  0070                     ?_LCD_Init:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_DAC_Initialize:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_I2C_CommonInterrupt:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_LCD_DisplayClear:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_main:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_hand:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_LCD_WriteData:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_I2C1_PinInit:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_I2C1_Interrupt:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ??_I2C1_Interrupt:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_I2C2_PinInit:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_I2C2_Interrupt:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ??_I2C2_Interrupt:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0x0
  1196  0070                     	ds	1
  1197  0071                     ??_I2C_CommonInterrupt:	
  1198  0071                     ??_hand:	
  1199                           ; 1 bytes @ 0x1
  1200                           
  1201                           
  1202                           ; 1 bytes @ 0x1
  1203  0071                     	ds	1
  1204  0072                     ??_Basic_Init:	
  1205  0072                     ??_LCD_WriteData:	
  1206                           ; 1 bytes @ 0x2
  1207                           
  1208  0072                     ??_I2C1_PinInit:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211  0072                     ?_I2C1_Transmit:	
  1212                           ; 1 bytes @ 0x2
  1213                           
  1214  0072                     ??_I2C2_PinInit:	
  1215                           ; 1 bytes @ 0x2
  1216                           
  1217  0072                     ?_I2C2_Transmit:	
  1218                           ; 1 bytes @ 0x2
  1219                           
  1220  0072                     I2C1_Transmit@pData:	
  1221                           ; 1 bytes @ 0x2
  1222                           
  1223  0072                     I2C2_Transmit@pData:	
  1224                           ; 1 bytes @ 0x2
  1225                           
  1226                           
  1227                           ; 1 bytes @ 0x2
  1228  0072                     	ds	1
  1229  0073                     ?_I2C1_Setting:	
  1230  0073                     ?_I2C2_Setting:	
  1231                           ; 1 bytes @ 0x3
  1232                           
  1233  0073                     I2C1_Setting@mode:	
  1234                           ; 1 bytes @ 0x3
  1235                           
  1236  0073                     I2C1_Transmit@size:	
  1237                           ; 1 bytes @ 0x3
  1238                           
  1239  0073                     I2C2_Setting@mode:	
  1240                           ; 1 bytes @ 0x3
  1241                           
  1242  0073                     I2C2_Transmit@size:	
  1243                           ; 1 bytes @ 0x3
  1244                           
  1245                           
  1246                           ; 1 bytes @ 0x3
  1247  0073                     	ds	1
  1248  0074                     ??_I2C1_Transmit:	
  1249  0074                     ??_I2C2_Transmit:	
  1250                           ; 1 bytes @ 0x4
  1251                           
  1252  0074                     LCD_WriteData@point:	
  1253                           ; 1 bytes @ 0x4
  1254                           
  1255  0074                     I2C1_Setting@Speed:	
  1256                           ; 1 bytes @ 0x4
  1257                           
  1258  0074                     I2C2_Setting@Speed:	
  1259                           ; 1 bytes @ 0x4
  1260                           
  1261                           
  1262                           ; 1 bytes @ 0x4
  1263  0074                     	ds	1
  1264  0075                     ??_LCD_DisplayClear:	
  1265  0075                     ??_I2C1_Setting:	
  1266                           ; 1 bytes @ 0x5
  1267                           
  1268  0075                     ??_I2C2_Setting:	
  1269                           ; 1 bytes @ 0x5
  1270                           
  1271                           
  1272                           ; 1 bytes @ 0x5
  1273  0075                     	ds	1
  1274  0076                     ??_LCD_Init:	
  1275  0076                     I2C1_Setting@address:	
  1276                           ; 1 bytes @ 0x6
  1277                           
  1278  0076                     I2C1_Transmit@address:	
  1279                           ; 1 bytes @ 0x6
  1280                           
  1281  0076                     I2C2_Setting@address:	
  1282                           ; 1 bytes @ 0x6
  1283                           
  1284  0076                     I2C2_Transmit@address:	
  1285                           ; 1 bytes @ 0x6
  1286                           
  1287                           
  1288                           ; 1 bytes @ 0x6
  1289  0076                     	ds	1
  1290  0077                     ?_I2C_Init:	
  1291  0077                     I2C1_Transmit@i:	
  1292                           ; 1 bytes @ 0x7
  1293                           
  1294  0077                     I2C2_Transmit@i:	
  1295                           ; 1 bytes @ 0x7
  1296                           
  1297  0077                     I2C_Init@address:	
  1298                           ; 1 bytes @ 0x7
  1299                           
  1300                           
  1301                           ; 1 bytes @ 0x7
  1302  0077                     	ds	1
  1303  0078                     I2C1_Transmit@i_368:	
  1304  0078                     I2C2_Transmit@i_512:	
  1305                           ; 1 bytes @ 0x8
  1306                           
  1307  0078                     I2C_Init@mode:	
  1308                           ; 1 bytes @ 0x8
  1309                           
  1310                           
  1311                           ; 1 bytes @ 0x8
  1312  0078                     	ds	1
  1313  0079                     I2C1_Transmit@result:	
  1314  0079                     I2C2_Transmit@result:	
  1315                           ; 1 bytes @ 0x9
  1316                           
  1317  0079                     I2C_Init@Speed:	
  1318                           ; 1 bytes @ 0x9
  1319                           
  1320                           
  1321                           ; 1 bytes @ 0x9
  1322  0079                     	ds	1
  1323  007A                     I2C_Init@I2Cx:	
  1324  007A                     DAC_WriteVoltage@result:	
  1325                           ; 1 bytes @ 0xA
  1326                           
  1327                           
  1328                           ; 1 bytes @ 0xA
  1329  007A                     	ds	1
  1330                           
  1331                           	psect	cstackBANK0
  1332  0050                     __pcstackBANK0:	
  1333  0050                     ??_I2C_Init:	
  1334  0050                     ?_I2C_Transmit:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0050                     I2C_Transmit@address:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340                           
  1341                           ; 1 bytes @ 0x0
  1342  0050                     	ds	1
  1343  0051                     I2C_Transmit@pData:	
  1344                           
  1345                           ; 1 bytes @ 0x1
  1346  0051                     	ds	1
  1347  0052                     I2C_Transmit@size:	
  1348                           
  1349                           ; 1 bytes @ 0x2
  1350  0052                     	ds	1
  1351  0053                     ??_I2C_Transmit:	
  1352                           
  1353                           ; 1 bytes @ 0x3
  1354  0053                     	ds	3
  1355  0056                     I2C_Transmit@I2Cx:	
  1356                           
  1357                           ; 1 bytes @ 0x6
  1358  0056                     	ds	1
  1359  0057                     I2C_Transmit@result:	
  1360                           
  1361                           ; 1 bytes @ 0x7
  1362  0057                     	ds	1
  1363  0058                     ??_DAC_Initialize:	
  1364  0058                     ?_DAC_WriteVoltage:	
  1365                           ; 1 bytes @ 0x8
  1366                           
  1367  0058                     DAC_WriteVoltage@volue:	
  1368                           ; 1 bytes @ 0x8
  1369                           
  1370                           
  1371                           ; 2 bytes @ 0x8
  1372  0058                     	ds	2
  1373  005A                     ??_DAC_WriteVoltage:	
  1374                           
  1375                           ; 1 bytes @ 0xA
  1376  005A                     	ds	4
  1377  005E                     ??_main:	
  1378                           
  1379                           ; 1 bytes @ 0xE
  1380  005E                     	ds	1
  1381  005F                     main@voltage:	
  1382                           
  1383                           ; 2 bytes @ 0xF
  1384  005F                     	ds	2
  1385                           
  1386                           	psect	maintext
  1387  02D6                     __pmaintext:	
  1388 ;;
  1389 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1390 ;;
  1391 ;; *************** function _main *****************
  1392 ;; Defined at:
  1393 ;;		line 12 in file "main.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  voltage         2   15[BANK0 ] unsigned int 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      char 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : B1F/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1407 ;;      Params:         0       0       0       0       0       0
  1408 ;;      Locals:         0       2       0       0       0       0
  1409 ;;      Temps:          0       1       0       0       0       0
  1410 ;;      Totals:         0       3       0       0       0       0
  1411 ;;Total ram usage:        3 bytes
  1412 ;; Hardware stack levels required when called:    7
  1413 ;; This function calls:
  1414 ;;		_Basic_Init
  1415 ;;		_DAC_Initialize
  1416 ;;		_DAC_WriteVoltage
  1417 ;;		_LCD_Init
  1418 ;; This function is called by:
  1419 ;;		Startup code after reset
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _main
  1425  02D6                     _main:	
  1426                           
  1427                           ;main.c: 14: Basic_Init();
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1431  02D6  3183  23C1  3182   	fcall	_Basic_Init
  1432                           
  1433                           ;main.c: 15: LCD_Init();
  1434  02D9  3181  211B  3182   	fcall	_LCD_Init
  1435                           
  1436                           ;main.c: 16: DAC_Initialize();
  1437  02DC  3183  2386  3182   	fcall	_DAC_Initialize
  1438                           
  1439                           ;main.c: 17: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  1440  02DF  3000               	movlw	0
  1441  02E0  0020               	movlb	0	; select bank0
  1442  02E1  00A5               	movwf	_xfunc_out
  1443  02E2  3000               	movlw	0
  1444  02E3  00A6               	movwf	_xfunc_out+1
  1445                           
  1446                           ;main.c: 18: LATA7 = 1;
  1447  02E4  0022               	movlb	2	; select bank2
  1448  02E5  178C               	bsf	12,7	;volatile
  1449  02E6                     l3003:	
  1450                           ;main.c: 20: while(1)
  1451                           
  1452                           
  1453                           ;main.c: 21: {
  1454                           ;main.c: 22: for(uint16_t voltage = 0;voltage<0x0FFF;voltage++)
  1455  02E6  0020               	movlb	0	; select bank0
  1456  02E7  01DF               	clrf	main@voltage
  1457  02E8  01E0               	clrf	main@voltage+1
  1458  02E9                     L1:	
  1459  02E9  300F               	movlw	15
  1460  02EA  0260               	subwf	main@voltage+1,w
  1461  02EB  30FF               	movlw	255
  1462  02EC  1903               	skipnz
  1463  02ED  025F               	subwf	main@voltage,w
  1464  02EE  1803               	btfsc	3,0
  1465  02EF  2AE6               	goto	l3003
  1466                           
  1467                           ;main.c: 23: {
  1468                           ;main.c: 24: if(!DAC_WriteVoltage(voltage))
  1469  02F0  0860               	movf	main@voltage+1,w
  1470  02F1  00D9               	movwf	DAC_WriteVoltage@volue+1
  1471  02F2  085F               	movf	main@voltage,w
  1472  02F3  00D8               	movwf	DAC_WriteVoltage@volue
  1473  02F4  3183  235F  3182   	fcall	_DAC_WriteVoltage
  1474  02F7  3A00               	xorlw	0
  1475  02F8  1D03               	skipz
  1476  02F9  2AFC               	goto	l3013
  1477                           
  1478                           ;main.c: 25: LATA7 = 0;
  1479  02FA  0022               	movlb	2	; select bank2
  1480  02FB  138C               	bcf	12,7	;volatile
  1481  02FC                     l3013:	
  1482                           
  1483                           ;main.c: 26: _delay((unsigned long)((10)*(32000000/4000.0)));
  1484  02FC  3068               	movlw	104
  1485  02FD  0020               	movlb	0	; select bank0
  1486  02FE  00DE               	movwf	??_main
  1487  02FF  30E4               	movlw	228
  1488  0300                     u2777:	
  1489  0300  0B89               	decfsz	9,f
  1490  0301  2B00               	goto	u2777
  1491  0302  0BDE               	decfsz	??_main,f
  1492  0303  2B00               	goto	u2777
  1493  0304  0000               	nop
  1494  0305  3001               	movlw	1
  1495  0306  0020               	movlb	0	; select bank0
  1496  0307  07DF               	addwf	main@voltage,f
  1497  0308  3000               	movlw	0
  1498  0309  3DE0               	addwfc	main@voltage+1,f
  1499  030A  2AE9               	goto	L1
  1500  030B                     __end_of_main:	
  1501                           ;main.c: 27: }
  1502                           ;main.c: 28: }
  1503                           ;main.c: 29: return 0;
  1504                           ;	Return value of _main is never used
  1505                           
  1506                           
  1507                           	psect	text1
  1508  011B                     __ptext1:	
  1509 ;; *************** function _LCD_Init *****************
  1510 ;; Defined at:
  1511 ;;		line 28 in file "LCD.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1525 ;;      Params:         0       0       0       0       0       0
  1526 ;;      Locals:         0       0       0       0       0       0
  1527 ;;      Temps:          2       0       0       0       0       0
  1528 ;;      Totals:         2       0       0       0       0       0
  1529 ;;Total ram usage:        2 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    5
  1532 ;; This function calls:
  1533 ;;		_LCD_DisplayClear
  1534 ;;		_LCD_WriteData
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _LCD_Init
  1542  011B                     _LCD_Init:	
  1543                           
  1544                           ;LCD.c: 30: RA4 = 0;
  1545                           
  1546                           ;incstack = 0
  1547                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1548  011B  0020               	movlb	0	; select bank0
  1549  011C  120C               	bcf	12,4	;volatile
  1550                           
  1551                           ;LCD.c: 31: RA3 = 0;
  1552  011D  118C               	bcf	12,3	;volatile
  1553                           
  1554                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  1555  011E  3002               	movlw	2
  1556  011F  00F7               	movwf	??_LCD_Init+1
  1557  0120  3038               	movlw	56
  1558  0121  00F6               	movwf	??_LCD_Init
  1559  0122  30AD               	movlw	173
  1560  0123                     u2787:	
  1561  0123  0B89               	decfsz	9,f
  1562  0124  2923               	goto	u2787
  1563  0125  0BF6               	decfsz	??_LCD_Init,f
  1564  0126  2923               	goto	u2787
  1565  0127  0BF7               	decfsz	??_LCD_Init+1,f
  1566  0128  2923               	goto	u2787
  1567  0129  0000               	nop
  1568                           
  1569                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  1570  012A  3003               	movlw	3
  1571  012B  0020               	movlb	0	; select bank0
  1572  012C  008D               	movwf	13	;volatile
  1573                           
  1574                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1575  012D  158C               	bsf	12,3	;volatile
  1576  012E  3200               	nop2	;2 cycle nop
  1577  012F  3200               	nop2	;2 cycle nop
  1578  0130  3200               	nop2	;2 cycle nop
  1579  0131  3200               	nop2	;2 cycle nop
  1580  0132  0020               	movlb	0	; select bank0
  1581  0133  118C               	bcf	12,3	;volatile
  1582  0134  3200               	nop2	;2 cycle nop
  1583  0135  3200               	nop2	;2 cycle nop
  1584  0136  3200               	nop2	;2 cycle nop
  1585  0137  3200               	nop2	;2 cycle nop
  1586                           
  1587                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  1588  0138  3034               	movlw	52
  1589  0139  00F6               	movwf	??_LCD_Init
  1590  013A  30F2               	movlw	242
  1591  013B                     u2797:	
  1592  013B  0B89               	decfsz	9,f
  1593  013C  293B               	goto	u2797
  1594  013D  0BF6               	decfsz	??_LCD_Init,f
  1595  013E  293B               	goto	u2797
  1596                           
  1597                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1598  013F  0020               	movlb	0	; select bank0
  1599  0140  158C               	bsf	12,3	;volatile
  1600  0141  3200               	nop2	;2 cycle nop
  1601  0142  3200               	nop2	;2 cycle nop
  1602  0143  3200               	nop2	;2 cycle nop
  1603  0144  3200               	nop2	;2 cycle nop
  1604  0145  0020               	movlb	0	; select bank0
  1605  0146  118C               	bcf	12,3	;volatile
  1606  0147  3200               	nop2	;2 cycle nop
  1607  0148  3200               	nop2	;2 cycle nop
  1608  0149  3200               	nop2	;2 cycle nop
  1609  014A  3200               	nop2	;2 cycle nop
  1610                           
  1611                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  1612  014B  3005               	movlw	5
  1613  014C  00F6               	movwf	??_LCD_Init
  1614  014D  3026               	movlw	38
  1615  014E                     u2807:	
  1616  014E  0B89               	decfsz	9,f
  1617  014F  294E               	goto	u2807
  1618  0150  0BF6               	decfsz	??_LCD_Init,f
  1619  0151  294E               	goto	u2807
  1620  0152  3200               	nop2
  1621                           
  1622                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1623  0153  0020               	movlb	0	; select bank0
  1624  0154  158C               	bsf	12,3	;volatile
  1625  0155  3200               	nop2	;2 cycle nop
  1626  0156  3200               	nop2	;2 cycle nop
  1627  0157  3200               	nop2	;2 cycle nop
  1628  0158  3200               	nop2	;2 cycle nop
  1629  0159  0020               	movlb	0	; select bank0
  1630  015A  118C               	bcf	12,3	;volatile
  1631  015B  3200               	nop2	;2 cycle nop
  1632  015C  3200               	nop2	;2 cycle nop
  1633  015D  3200               	nop2	;2 cycle nop
  1634  015E  3200               	nop2	;2 cycle nop
  1635                           
  1636                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  1637  015F  3005               	movlw	5
  1638  0160  00F6               	movwf	??_LCD_Init
  1639  0161  3026               	movlw	38
  1640  0162                     u2817:	
  1641  0162  0B89               	decfsz	9,f
  1642  0163  2962               	goto	u2817
  1643  0164  0BF6               	decfsz	??_LCD_Init,f
  1644  0165  2962               	goto	u2817
  1645  0166  3200               	nop2
  1646                           
  1647                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  1648  0167  3002               	movlw	2
  1649  0168  0020               	movlb	0	; select bank0
  1650  0169  008D               	movwf	13	;volatile
  1651                           
  1652                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1653  016A  158C               	bsf	12,3	;volatile
  1654  016B  3200               	nop2	;2 cycle nop
  1655  016C  3200               	nop2	;2 cycle nop
  1656  016D  3200               	nop2	;2 cycle nop
  1657  016E  3200               	nop2	;2 cycle nop
  1658  016F  0020               	movlb	0	; select bank0
  1659  0170  118C               	bcf	12,3	;volatile
  1660  0171  3200               	nop2	;2 cycle nop
  1661  0172  3200               	nop2	;2 cycle nop
  1662  0173  3200               	nop2	;2 cycle nop
  1663  0174  3200               	nop2	;2 cycle nop
  1664                           
  1665                           ;LCD.c: 44: LCD_WriteData(0x28);
  1666  0175  3028               	movlw	40
  1667  0176  3182  222C  3181   	fcall	_LCD_WriteData
  1668                           
  1669                           ;LCD.c: 45: LCD_WriteData(0x0c);
  1670  0179  300C               	movlw	12
  1671  017A  3182  222C  3181   	fcall	_LCD_WriteData
  1672                           
  1673                           ;LCD.c: 46: LCD_DisplayClear();
  1674  017D  3183  23D6  3181   	fcall	_LCD_DisplayClear
  1675                           
  1676                           ;LCD.c: 47: LCD_WriteData(0x06);
  1677  0180  3006               	movlw	6
  1678  0181  3182  222C         	fcall	_LCD_WriteData
  1679  0183  0008               	return
  1680  0184                     __end_of_LCD_Init:	
  1681                           
  1682                           	psect	text2
  1683  03D6                     __ptext2:	
  1684 ;; *************** function _LCD_DisplayClear *****************
  1685 ;; Defined at:
  1686 ;;		line 64 in file "LCD.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, pclath, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1700 ;;      Params:         0       0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0       0
  1702 ;;      Temps:          1       0       0       0       0       0
  1703 ;;      Totals:         1       0       0       0       0       0
  1704 ;;Total ram usage:        1 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    4
  1707 ;; This function calls:
  1708 ;;		_LCD_WriteData
  1709 ;; This function is called by:
  1710 ;;		_LCD_Init
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           
  1715                           ;psect for function _LCD_DisplayClear
  1716  03D6                     _LCD_DisplayClear:	
  1717                           
  1718                           ;LCD.c: 66: RA4 = 0;
  1719                           
  1720                           ;incstack = 0
  1721                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  1722  03D6  0020               	movlb	0	; select bank0
  1723  03D7  120C               	bcf	12,4	;volatile
  1724                           
  1725                           ;LCD.c: 67: LCD_WriteData(0x01);
  1726  03D8  3001               	movlw	1
  1727  03D9  3182  222C  3183   	fcall	_LCD_WriteData
  1728                           
  1729                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  1730  03DC  3015               	movlw	21
  1731  03DD  00F5               	movwf	??_LCD_DisplayClear
  1732  03DE  30C6               	movlw	198
  1733  03DF                     u2827:	
  1734  03DF  0B89               	decfsz	9,f
  1735  03E0  2BDF               	goto	u2827
  1736  03E1  0BF5               	decfsz	??_LCD_DisplayClear,f
  1737  03E2  2BDF               	goto	u2827
  1738  03E3  3200               	nop2
  1739  03E4  0008               	return
  1740  03E5                     __end_of_LCD_DisplayClear:	
  1741                           
  1742                           	psect	text3
  1743  022C                     __ptext3:	
  1744 ;; *************** function _LCD_WriteData *****************
  1745 ;; Defined at:
  1746 ;;		line 15 in file "LCD.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  point           1    wreg     char 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  point           1    4[COMMON] char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1760 ;;      Params:         0       0       0       0       0       0
  1761 ;;      Locals:         1       0       0       0       0       0
  1762 ;;      Temps:          2       0       0       0       0       0
  1763 ;;      Totals:         3       0       0       0       0       0
  1764 ;;Total ram usage:        3 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    3
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_LCD_Init
  1771 ;;		_LCD_Put
  1772 ;;		_LCD_DisplayClear
  1773 ;;		_LCD_CursorHome
  1774 ;;		_LCD_CursorPosition
  1775 ;;		_LCD_CursorShift
  1776 ;;		_LCD_DispShift
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function _LCD_WriteData
  1782  022C                     _LCD_WriteData:	
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  1786                           ;LCD_WriteData@point stored from wreg
  1787  022C  00F4               	movwf	LCD_WriteData@point
  1788                           
  1789                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  1790  022D  30D5               	movlw	213
  1791  022E                     u2837:	
  1792  022E  0B89               	decfsz	9,f
  1793  022F  2A2E               	goto	u2837
  1794  0230  0000               	nop
  1795                           
  1796                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  1797  0231  0874               	movf	LCD_WriteData@point,w
  1798  0232  00F2               	movwf	??_LCD_WriteData
  1799  0233  3004               	movlw	4
  1800  0234                     u1465:	
  1801  0234  1003               	clrc
  1802  0235  1BF2               	btfsc	??_LCD_WriteData,7
  1803  0236  1403               	setc
  1804  0237  0CF2               	rrf	??_LCD_WriteData,f
  1805  0238  0B89               	decfsz	9,f
  1806  0239  2A34               	goto	u1465
  1807  023A  3003               	movlw	3
  1808  023B  0572               	andwf	??_LCD_WriteData,w
  1809  023C  00F3               	movwf	??_LCD_WriteData+1
  1810  023D  0E74               	swapf	LCD_WriteData@point,w
  1811  023E  390F               	andlw	15
  1812  023F  1989               	btfsc	9,3
  1813  0240  38F0               	iorlw	240
  1814  0241  390C               	andlw	12
  1815  0242  0709               	addwf	9,w
  1816  0243  0473               	iorwf	??_LCD_WriteData+1,w
  1817  0244  0020               	movlb	0	; select bank0
  1818  0245  008D               	movwf	13	;volatile
  1819                           
  1820                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1821  0246  158C               	bsf	12,3	;volatile
  1822  0247  3200               	nop2	;2 cycle nop
  1823  0248  3200               	nop2	;2 cycle nop
  1824  0249  3200               	nop2	;2 cycle nop
  1825  024A  3200               	nop2	;2 cycle nop
  1826  024B  0020               	movlb	0	; select bank0
  1827  024C  118C               	bcf	12,3	;volatile
  1828  024D  3200               	nop2	;2 cycle nop
  1829  024E  3200               	nop2	;2 cycle nop
  1830  024F  3200               	nop2	;2 cycle nop
  1831  0250  3200               	nop2	;2 cycle nop
  1832                           
  1833                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  1834  0251  3003               	movlw	3
  1835  0252  0574               	andwf	LCD_WriteData@point,w
  1836  0253  00F2               	movwf	??_LCD_WriteData
  1837  0254  0874               	movf	LCD_WriteData@point,w
  1838  0255  390C               	andlw	12
  1839  0256  0709               	addwf	9,w
  1840  0257  0472               	iorwf	??_LCD_WriteData,w
  1841  0258  0020               	movlb	0	; select bank0
  1842  0259  008D               	movwf	13	;volatile
  1843                           
  1844                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1845  025A  158C               	bsf	12,3	;volatile
  1846  025B  3200               	nop2	;2 cycle nop
  1847  025C  3200               	nop2	;2 cycle nop
  1848  025D  3200               	nop2	;2 cycle nop
  1849  025E  3200               	nop2	;2 cycle nop
  1850  025F  0020               	movlb	0	; select bank0
  1851  0260  118C               	bcf	12,3	;volatile
  1852  0261  3200               	nop2	;2 cycle nop
  1853  0262  3200               	nop2	;2 cycle nop
  1854  0263  3200               	nop2	;2 cycle nop
  1855  0264  3200               	nop2	;2 cycle nop
  1856  0265  0008               	return
  1857  0266                     __end_of_LCD_WriteData:	
  1858                           
  1859                           	psect	text4
  1860  035F                     __ptext4:	
  1861 ;; *************** function _DAC_WriteVoltage *****************
  1862 ;; Defined at:
  1863 ;;		line 27 in file "MCP4726.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  volue           2    8[BANK0 ] unsigned int 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  result          1   10[COMMON] char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      char 
  1870 ;; Registers used:
  1871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1877 ;;      Params:         0       2       0       0       0       0
  1878 ;;      Locals:         1       0       0       0       0       0
  1879 ;;      Temps:          0       4       0       0       0       0
  1880 ;;      Totals:         1       6       0       0       0       0
  1881 ;;Total ram usage:        7 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    5
  1884 ;; This function calls:
  1885 ;;		_I2C_Transmit
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           
  1892                           ;psect for function _DAC_WriteVoltage
  1893  035F                     _DAC_WriteVoltage:	
  1894                           
  1895                           ;MCP4726.c: 29: int8_t result;
  1896                           ;MCP4726.c: 31: VoltageReg.Command = (uint8_t)(0x0);
  1897                           
  1898                           ;incstack = 0
  1899                           ; Regs used in _DAC_WriteVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1900  035F  303F               	movlw	-193
  1901  0360  0020               	movlb	0	; select bank0
  1902  0361  05CD               	andwf	_VoltageReg,f
  1903                           
  1904                           ;MCP4726.c: 32: VoltageReg.PowerDown = ConfigReg.PowerDown;
  1905  0362  0C4F               	rrf	_ConfigReg,w
  1906  0363  3903               	andlw	3
  1907  0364  00DA               	movwf	??_DAC_WriteVoltage
  1908  0365  0EDA               	swapf	??_DAC_WriteVoltage,f
  1909  0366  084D               	movf	_VoltageReg,w
  1910  0367  065A               	xorwf	??_DAC_WriteVoltage,w
  1911  0368  39CF               	andlw	-49
  1912  0369  065A               	xorwf	??_DAC_WriteVoltage,w
  1913  036A  00CD               	movwf	_VoltageReg
  1914                           
  1915                           ;MCP4726.c: 33: VoltageReg.Voltage4bits = (uint8_t)(volue&0x0F00)>>8;
  1916  036B  30F0               	movlw	-16
  1917  036C  05CD               	andwf	_VoltageReg,f
  1918                           
  1919                           ;MCP4726.c: 34: VoltageReg.Voltage8bits = (uint8_t)(volue&0x00FF);
  1920  036D  0858               	movf	DAC_WriteVoltage@volue,w
  1921  036E  00DA               	movwf	??_DAC_WriteVoltage
  1922  036F  085A               	movf	??_DAC_WriteVoltage,w
  1923  0370  00CE               	movwf	_VoltageReg+1
  1924                           
  1925                           ;MCP4726.c: 36: result = I2C_Transmit(I2C2_MODULE,0x60,VoltageReg.Voltage_Data,2);
  1926  0371  3060               	movlw	96
  1927  0372  00DA               	movwf	??_DAC_WriteVoltage
  1928  0373  085A               	movf	??_DAC_WriteVoltage,w
  1929  0374  00D0               	movwf	I2C_Transmit@address
  1930  0375  304D               	movlw	(low (_VoltageReg| 0))& (0+255)
  1931  0376  00DB               	movwf	??_DAC_WriteVoltage+1
  1932  0377  085B               	movf	??_DAC_WriteVoltage+1,w
  1933  0378  00D1               	movwf	I2C_Transmit@pData
  1934  0379  3002               	movlw	2
  1935  037A  00DC               	movwf	??_DAC_WriteVoltage+2
  1936  037B  085C               	movf	??_DAC_WriteVoltage+2,w
  1937  037C  00D2               	movwf	I2C_Transmit@size
  1938  037D  3001               	movlw	1
  1939  037E  3183  230B         	fcall	_I2C_Transmit
  1940  0380  0020               	movlb	0	; select bank0
  1941  0381  00DD               	movwf	??_DAC_WriteVoltage+3
  1942  0382  085D               	movf	??_DAC_WriteVoltage+3,w
  1943  0383  00FA               	movwf	DAC_WriteVoltage@result
  1944                           
  1945                           ;MCP4726.c: 38: return result;
  1946  0384  087A               	movf	DAC_WriteVoltage@result,w
  1947  0385  0008               	return
  1948  0386                     __end_of_DAC_WriteVoltage:	
  1949                           
  1950                           	psect	text5
  1951  0386                     __ptext5:	
  1952 ;; *************** function _DAC_Initialize *****************
  1953 ;; Defined at:
  1954 ;;		line 14 in file "MCP4726.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1968 ;;      Params:         0       0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0
  1970 ;;      Temps:          0       2       0       0       0       0
  1971 ;;      Totals:         0       2       0       0       0       0
  1972 ;;Total ram usage:        2 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    6
  1975 ;; This function calls:
  1976 ;;		_I2C_Init
  1977 ;;		_I2C_Transmit
  1978 ;; This function is called by:
  1979 ;;		_main
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _DAC_Initialize
  1985  0386                     _DAC_Initialize:	
  1986                           
  1987                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  1988                           
  1989                           ;incstack = 0
  1990                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1991  0386  01F7               	clrf	I2C_Init@address
  1992  0387  01F8               	clrf	I2C_Init@mode
  1993  0388  01F9               	clrf	I2C_Init@Speed
  1994  0389  3001               	movlw	1
  1995  038A  3183  2336  3183   	fcall	_I2C_Init
  1996                           
  1997                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  1998  038D  0020               	movlb	0	; select bank0
  1999  038E  084F               	movf	_ConfigReg,w
  2000  038F  391F               	andlw	-225
  2001  0390  3880               	iorlw	128
  2002  0391  00CF               	movwf	_ConfigReg
  2003                           
  2004                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  2005  0392  104F               	bcf	_ConfigReg,0
  2006                           
  2007                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  2008  0393  30F9               	movlw	-7
  2009  0394  05CF               	andwf	_ConfigReg,f
  2010                           
  2011                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  2012  0395  30E7               	movlw	-25
  2013  0396  05CF               	andwf	_ConfigReg,f
  2014                           
  2015                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  2016  0397  3060               	movlw	96
  2017  0398  00D8               	movwf	??_DAC_Initialize
  2018  0399  0858               	movf	??_DAC_Initialize,w
  2019  039A  00D0               	movwf	I2C_Transmit@address
  2020  039B  304F               	movlw	(low (_ConfigReg| 0))& (0+255)
  2021  039C  00D9               	movwf	??_DAC_Initialize+1
  2022  039D  0859               	movf	??_DAC_Initialize+1,w
  2023  039E  00D1               	movwf	I2C_Transmit@pData
  2024  039F  01D2               	clrf	I2C_Transmit@size
  2025  03A0  0AD2               	incf	I2C_Transmit@size,f
  2026  03A1  3001               	movlw	1
  2027  03A2  3183  230B         	fcall	_I2C_Transmit
  2028  03A4  0008               	return
  2029  03A5                     __end_of_DAC_Initialize:	
  2030                           
  2031                           	psect	text6
  2032  030B                     __ptext6:	
  2033 ;; *************** function _I2C_Transmit *****************
  2034 ;; Defined at:
  2035 ;;		line 23 in file "I2C_Common.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  I2Cx            1    wreg     enum E3036
  2038 ;;  address         1    0[BANK0 ] unsigned char 
  2039 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  2040 ;;		 -> VoltageReg(2), ConfigReg(1), 
  2041 ;;  size            1    2[BANK0 ] unsigned char 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  I2Cx            1    6[BANK0 ] enum E3036
  2044 ;;  result          1    7[BANK0 ] char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      char 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2054 ;;      Params:         0       3       0       0       0       0
  2055 ;;      Locals:         0       2       0       0       0       0
  2056 ;;      Temps:          0       3       0       0       0       0
  2057 ;;      Totals:         0       8       0       0       0       0
  2058 ;;Total ram usage:        8 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    4
  2061 ;; This function calls:
  2062 ;;		_I2C1_Transmit
  2063 ;;		_I2C2_Transmit
  2064 ;; This function is called by:
  2065 ;;		_DAC_Initialize
  2066 ;;		_DAC_WriteVoltage
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _I2C_Transmit
  2072  030B                     _I2C_Transmit:	
  2073                           
  2074                           ;incstack = 0
  2075                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2076                           ;I2C_Transmit@I2Cx stored from wreg
  2077  030B  0020               	movlb	0	; select bank0
  2078  030C  00D6               	movwf	I2C_Transmit@I2Cx
  2079                           
  2080                           ;I2C_Common.c: 25: int8_t result;
  2081                           ;I2C_Common.c: 27: switch(I2Cx)
  2082  030D  2B2C               	goto	l2967
  2083  030E                     l2961:	
  2084                           ;I2C_Common.c: 28: {
  2085                           ;I2C_Common.c: 29: case I2C1_MODULE:
  2086                           
  2087                           
  2088                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  2089  030E  0851               	movf	I2C_Transmit@pData,w
  2090  030F  00D3               	movwf	??_I2C_Transmit
  2091  0310  0853               	movf	??_I2C_Transmit,w
  2092  0311  00F2               	movwf	I2C1_Transmit@pData
  2093  0312  0852               	movf	I2C_Transmit@size,w
  2094  0313  00D4               	movwf	??_I2C_Transmit+1
  2095  0314  0854               	movf	??_I2C_Transmit+1,w
  2096  0315  00F3               	movwf	I2C1_Transmit@size
  2097  0316  0850               	movf	I2C_Transmit@address,w
  2098  0317  3180  209D  3183   	fcall	_I2C1_Transmit
  2099  031A  2B27               	goto	L2
  2100  031B                     l2963:	
  2101                           ;I2C_Common.c: 33: case I2C2_MODULE:
  2102                           
  2103                           ;I2C_Common.c: 31: break;
  2104                           
  2105                           
  2106                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  2107  031B  0851               	movf	I2C_Transmit@pData,w
  2108  031C  00D3               	movwf	??_I2C_Transmit
  2109  031D  0853               	movf	??_I2C_Transmit,w
  2110  031E  00F2               	movwf	I2C2_Transmit@pData
  2111  031F  0852               	movf	I2C_Transmit@size,w
  2112  0320  00D4               	movwf	??_I2C_Transmit+1
  2113  0321  0854               	movf	??_I2C_Transmit+1,w
  2114  0322  00F3               	movwf	I2C2_Transmit@size
  2115  0323  0850               	movf	I2C_Transmit@address,w
  2116  0324  3180  201E  3183   	fcall	_I2C2_Transmit
  2117  0327                     L2:	
  2118  0327  0020               	movlb	0	; select bank0
  2119  0328  00D5               	movwf	??_I2C_Transmit+2
  2120  0329  0855               	movf	??_I2C_Transmit+2,w
  2121  032A  00D7               	movwf	I2C_Transmit@result
  2122                           
  2123                           ;I2C_Common.c: 36: }
  2124                           
  2125                           ;I2C_Common.c: 35: break;
  2126  032B  2B34               	goto	l2969
  2127  032C                     l2967:	
  2128  032C  0856               	movf	I2C_Transmit@I2Cx,w
  2129                           
  2130                           ; Switch size 1, requested type "space"
  2131                           ; Number of cases is 2, Range of values is 0 to 1
  2132                           ; switch strategies available:
  2133                           ; Name         Instructions Cycles
  2134                           ; simple_byte            7     4 (average)
  2135                           ; direct_byte           10     6 (fixed)
  2136                           ; jumptable            260     6 (fixed)
  2137                           ;	Chosen strategy is simple_byte
  2138  032D  3A00               	xorlw	0	; case 0
  2139  032E  1903               	skipnz
  2140  032F  2B0E               	goto	l2961
  2141  0330  3A01               	xorlw	1	; case 1
  2142  0331  1903               	skipnz
  2143  0332  2B1B               	goto	l2963
  2144  0333  2B34               	goto	l2969
  2145  0334                     l2969:	
  2146                           
  2147                           ;I2C_Common.c: 37: return result;
  2148  0334  0857               	movf	I2C_Transmit@result,w
  2149  0335  0008               	return
  2150  0336                     __end_of_I2C_Transmit:	
  2151                           
  2152                           	psect	text7
  2153  001E                     __ptext7:	
  2154 ;; *************** function _I2C2_Transmit *****************
  2155 ;; Defined at:
  2156 ;;		line 52 in file "I2C2.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  address         1    wreg     unsigned char 
  2159 ;;  pData           1    2[COMMON] PTR unsigned char 
  2160 ;;		 -> VoltageReg(2), ConfigReg(1), 
  2161 ;;  size            1    3[COMMON] unsigned char 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  address         1    6[COMMON] unsigned char 
  2164 ;;  i               1    8[COMMON] unsigned char 
  2165 ;;  i               1    7[COMMON] unsigned char 
  2166 ;;  result          1    9[COMMON] char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      char 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2176 ;;      Params:         2       0       0       0       0       0
  2177 ;;      Locals:         4       0       0       0       0       0
  2178 ;;      Temps:          2       0       0       0       0       0
  2179 ;;      Totals:         8       0       0       0       0       0
  2180 ;;Total ram usage:        8 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    3
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_I2C_Transmit
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           
  2191                           ;psect for function _I2C2_Transmit
  2192  001E                     _I2C2_Transmit:	
  2193                           
  2194                           ;incstack = 0
  2195                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  2196                           ;I2C2_Transmit@address stored from wreg
  2197  001E  00F6               	movwf	I2C2_Transmit@address
  2198                           
  2199                           ;I2C2.c: 54: int8_t result = 0;
  2200  001F  01F9               	clrf	I2C2_Transmit@result
  2201                           
  2202                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  2203  0020  2892               	goto	l2943
  2204  0021                     l2899:	
  2205                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2206                           
  2207                           ;I2C2.c: 57: {
  2208                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  2209                           
  2210  0021  3005               	movlw	5
  2211  0022  0024               	movlb	4	; select bank4
  2212  0023  051C               	andwf	28,w	;volatile
  2213  0024  00F4               	movwf	??_I2C2_Transmit
  2214  0025  081E               	movf	30,w	;volatile
  2215  0026  391F               	andlw	31
  2216  0027  0474               	iorwf	??_I2C2_Transmit,w
  2217  0028  1D03               	btfss	3,2
  2218  0029  2821               	goto	l2899
  2219                           
  2220                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  2221  002A  141E               	bsf	30,0	;volatile
  2222  002B                     l2901:	
  2223                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2224                           
  2225  002B  3005               	movlw	5
  2226  002C  051C               	andwf	28,w	;volatile
  2227  002D  00F4               	movwf	??_I2C2_Transmit
  2228  002E  081E               	movf	30,w	;volatile
  2229  002F  391F               	andlw	31
  2230  0030  0474               	iorwf	??_I2C2_Transmit,w
  2231  0031  1D03               	btfss	3,2
  2232  0032  282B               	goto	l2901
  2233                           
  2234                           ;I2C2.c: 63: SSP2BUF = address << 1;
  2235  0033  3576               	lslf	I2C2_Transmit@address,w
  2236  0034  0099               	movwf	25	;volatile
  2237  0035                     l466:	
  2238                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  2239                           
  2240  0035  191C               	btfsc	28,2	;volatile
  2241  0036  2835               	goto	l466
  2242                           
  2243                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  2244  0037  3000               	movlw	0
  2245  0038  1B1E               	btfsc	30,6	;volatile
  2246  0039  3001               	movlw	1
  2247  003A  00F9               	movwf	I2C2_Transmit@result
  2248                           
  2249                           ;I2C2.c: 67: if (!result)
  2250  003B  0879               	movf	I2C2_Transmit@result,w
  2251  003C  1D03               	btfss	3,2
  2252  003D  2865               	goto	l2925
  2253                           
  2254                           ;I2C2.c: 68: {
  2255                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  2256  003E  01F7               	clrf	I2C2_Transmit@i
  2257  003F  2844               	goto	l2923
  2258  0040                     l2921:	
  2259                           ;I2C2.c: 79: break;
  2260                           
  2261  0040  3001               	movlw	1
  2262  0041  00F4               	movwf	??_I2C2_Transmit
  2263  0042  0874               	movf	??_I2C2_Transmit,w
  2264  0043  07F7               	addwf	I2C2_Transmit@i,f
  2265  0044                     l2923:	
  2266  0044  0873               	movf	I2C2_Transmit@size,w
  2267  0045  0277               	subwf	I2C2_Transmit@i,w
  2268  0046  1803               	btfsc	3,0
  2269  0047  2865               	goto	l2925
  2270  0048                     l2911:	
  2271                           ;I2C2.c: 70: {
  2272                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2273                           
  2274  0048  3005               	movlw	5
  2275  0049  051C               	andwf	28,w	;volatile
  2276  004A  00F4               	movwf	??_I2C2_Transmit
  2277  004B  081E               	movf	30,w	;volatile
  2278  004C  391F               	andlw	31
  2279  004D  0474               	iorwf	??_I2C2_Transmit,w
  2280  004E  1D03               	btfss	3,2
  2281  004F  2848               	goto	l2911
  2282                           
  2283                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  2284  0050  0877               	movf	I2C2_Transmit@i,w
  2285  0051  0772               	addwf	I2C2_Transmit@pData,w
  2286  0052  00F4               	movwf	??_I2C2_Transmit
  2287  0053  0874               	movf	??_I2C2_Transmit,w
  2288  0054  0086               	movwf	6
  2289  0055  0187               	clrf	7
  2290  0056  0801               	movf	1,w
  2291  0057  0099               	movwf	25	;volatile
  2292  0058                     l475:	
  2293                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  2294                           
  2295  0058  191C               	btfsc	28,2	;volatile
  2296  0059  2858               	goto	l475
  2297                           
  2298                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  2299  005A  3000               	movlw	0
  2300  005B  1B1E               	btfsc	30,6	;volatile
  2301  005C  3001               	movlw	1
  2302  005D  00F9               	movwf	I2C2_Transmit@result
  2303                           
  2304                           ;I2C2.c: 76: if (result)
  2305  005E  0879               	movf	I2C2_Transmit@result,w
  2306  005F  1903               	btfsc	3,2
  2307  0060  2840               	goto	l2921
  2308                           
  2309                           ;I2C2.c: 77: {
  2310                           ;I2C2.c: 78: result = 2;
  2311  0061  3002               	movlw	2
  2312  0062  00F4               	movwf	??_I2C2_Transmit
  2313  0063  0874               	movf	??_I2C2_Transmit,w
  2314  0064  00F9               	movwf	I2C2_Transmit@result
  2315  0065                     l2925:	
  2316                           ;I2C2.c: 80: }
  2317                           ;I2C2.c: 81: }
  2318                           ;I2C2.c: 82: }
  2319                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  2320                           
  2321  0065  3005               	movlw	5
  2322  0066  051C               	andwf	28,w	;volatile
  2323  0067  00F4               	movwf	??_I2C2_Transmit
  2324  0068  081E               	movf	30,w	;volatile
  2325  0069  391F               	andlw	31
  2326  006A  0474               	iorwf	??_I2C2_Transmit,w
  2327  006B  1D03               	btfss	3,2
  2328  006C  2865               	goto	l2925
  2329                           
  2330                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  2331  006D  151E               	bsf	30,2	;volatile
  2332                           
  2333                           ;I2C2.c: 86: break;
  2334  006E  289B               	goto	l2945
  2335  006F                     l484:	
  2336                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  2337                           
  2338                           
  2339                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  2340  006F  0024               	movlb	4	; select bank4
  2341  0070  1D9C               	btfss	28,3	;volatile
  2342  0071  1E1C               	btfss	28,4	;volatile
  2343  0072  2890               	goto	l2939
  2344                           
  2345                           ;I2C2.c: 90: {
  2346                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  2347  0073  01F8               	clrf	I2C2_Transmit@i_512
  2348  0074                     l2935:	
  2349  0074  0873               	movf	I2C2_Transmit@size,w
  2350  0075  0278               	subwf	I2C2_Transmit@i_512,w
  2351  0076  1803               	btfsc	3,0
  2352  0077  288B               	goto	l2937
  2353                           
  2354                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  2355  0078  0878               	movf	I2C2_Transmit@i_512,w
  2356  0079  0772               	addwf	I2C2_Transmit@pData,w
  2357  007A  00F4               	movwf	??_I2C2_Transmit
  2358  007B  0874               	movf	??_I2C2_Transmit,w
  2359  007C  0086               	movwf	6
  2360  007D  0187               	clrf	7
  2361  007E  0801               	movf	1,w
  2362  007F  00F5               	movwf	??_I2C2_Transmit+1
  2363  0080  0878               	movf	I2C2_Transmit@i_512,w
  2364  0081  3E27               	addlw	(low (_I2C2_Config| 0))& (0+255)
  2365  0082  0086               	movwf	6
  2366  0083  0187               	clrf	7
  2367  0084  0875               	movf	??_I2C2_Transmit+1,w
  2368  0085  0081               	movwf	1
  2369  0086  3001               	movlw	1
  2370  0087  00F4               	movwf	??_I2C2_Transmit
  2371  0088  0874               	movf	??_I2C2_Transmit,w
  2372  0089  07F8               	addwf	I2C2_Transmit@i_512,f
  2373  008A  2874               	goto	l2935
  2374  008B                     l2937:	
  2375                           
  2376                           ;I2C2.c: 93: result = size;
  2377  008B  0873               	movf	I2C2_Transmit@size,w
  2378  008C  00F4               	movwf	??_I2C2_Transmit
  2379  008D  0874               	movf	??_I2C2_Transmit,w
  2380  008E  00F9               	movwf	I2C2_Transmit@result
  2381                           
  2382                           ;I2C2.c: 94: }
  2383  008F  289B               	goto	l2945
  2384  0090                     l2939:	
  2385                           
  2386                           ;I2C2.c: 95: else
  2387                           ;I2C2.c: 96: result = 0;
  2388  0090  01F9               	clrf	I2C2_Transmit@result
  2389                           
  2390                           ;I2C2.c: 98: }
  2391                           
  2392                           ;I2C2.c: 97: break;
  2393  0091  289B               	goto	l2945
  2394  0092                     l2943:	
  2395  0092  0020               	movlb	0	; select bank0
  2396  0093  0839               	movf	_I2C2_Config+18,w
  2397                           
  2398                           ; Switch size 1, requested type "space"
  2399                           ; Number of cases is 2, Range of values is 0 to 1
  2400                           ; switch strategies available:
  2401                           ; Name         Instructions Cycles
  2402                           ; simple_byte            7     4 (average)
  2403                           ; direct_byte           10     6 (fixed)
  2404                           ; jumptable            260     6 (fixed)
  2405                           ;	Chosen strategy is simple_byte
  2406  0094  3A00               	xorlw	0	; case 0
  2407  0095  1903               	skipnz
  2408  0096  2821               	goto	l2899
  2409  0097  3A01               	xorlw	1	; case 1
  2410  0098  1903               	skipnz
  2411  0099  286F               	goto	l484
  2412  009A  289B               	goto	l2945
  2413  009B                     l2945:	
  2414                           
  2415                           ;I2C2.c: 100: return result;
  2416  009B  0879               	movf	I2C2_Transmit@result,w
  2417  009C  0008               	return
  2418  009D                     __end_of_I2C2_Transmit:	
  2419                           
  2420                           	psect	text8
  2421  009D                     __ptext8:	
  2422 ;; *************** function _I2C1_Transmit *****************
  2423 ;; Defined at:
  2424 ;;		line 52 in file "I2C1.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  address         1    wreg     unsigned char 
  2427 ;;  pData           1    2[COMMON] PTR unsigned char 
  2428 ;;		 -> VoltageReg(2), ConfigReg(1), 
  2429 ;;  size            1    3[COMMON] unsigned char 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  address         1    6[COMMON] unsigned char 
  2432 ;;  i               1    8[COMMON] unsigned char 
  2433 ;;  i               1    7[COMMON] unsigned char 
  2434 ;;  result          1    9[COMMON] char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      char 
  2437 ;; Registers used:
  2438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2444 ;;      Params:         2       0       0       0       0       0
  2445 ;;      Locals:         4       0       0       0       0       0
  2446 ;;      Temps:          2       0       0       0       0       0
  2447 ;;      Totals:         8       0       0       0       0       0
  2448 ;;Total ram usage:        8 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    3
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_I2C_Transmit
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           
  2459                           ;psect for function _I2C1_Transmit
  2460  009D                     _I2C1_Transmit:	
  2461                           
  2462                           ;incstack = 0
  2463                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  2464                           ;I2C1_Transmit@address stored from wreg
  2465  009D  00F6               	movwf	I2C1_Transmit@address
  2466                           
  2467                           ;I2C1.c: 54: int8_t result;
  2468                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  2469  009E  2910               	goto	l2857
  2470  009F                     l2813:	
  2471                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2472                           
  2473                           ;I2C1.c: 57: {
  2474                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  2475                           
  2476  009F  3005               	movlw	5
  2477  00A0  0024               	movlb	4	; select bank4
  2478  00A1  0514               	andwf	20,w	;volatile
  2479  00A2  00F4               	movwf	??_I2C1_Transmit
  2480  00A3  0816               	movf	22,w	;volatile
  2481  00A4  391F               	andlw	31
  2482  00A5  0474               	iorwf	??_I2C1_Transmit,w
  2483  00A6  1D03               	btfss	3,2
  2484  00A7  289F               	goto	l2813
  2485                           
  2486                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  2487  00A8  1416               	bsf	22,0	;volatile
  2488  00A9                     l2815:	
  2489                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2490                           
  2491  00A9  3005               	movlw	5
  2492  00AA  0514               	andwf	20,w	;volatile
  2493  00AB  00F4               	movwf	??_I2C1_Transmit
  2494  00AC  0816               	movf	22,w	;volatile
  2495  00AD  391F               	andlw	31
  2496  00AE  0474               	iorwf	??_I2C1_Transmit,w
  2497  00AF  1D03               	btfss	3,2
  2498  00B0  28A9               	goto	l2815
  2499                           
  2500                           ;I2C1.c: 63: SSP1BUF = address << 1;
  2501  00B1  3576               	lslf	I2C1_Transmit@address,w
  2502  00B2  0091               	movwf	17	;volatile
  2503  00B3                     l329:	
  2504                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  2505                           
  2506  00B3  1914               	btfsc	20,2	;volatile
  2507  00B4  28B3               	goto	l329
  2508                           
  2509                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  2510  00B5  3000               	movlw	0
  2511  00B6  1B16               	btfsc	22,6	;volatile
  2512  00B7  3001               	movlw	1
  2513  00B8  00F9               	movwf	I2C1_Transmit@result
  2514                           
  2515                           ;I2C1.c: 67: if (!result)
  2516  00B9  0879               	movf	I2C1_Transmit@result,w
  2517  00BA  1D03               	btfss	3,2
  2518  00BB  28E3               	goto	l2839
  2519                           
  2520                           ;I2C1.c: 68: {
  2521                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  2522  00BC  01F7               	clrf	I2C1_Transmit@i
  2523  00BD  28C2               	goto	l2837
  2524  00BE                     l2835:	
  2525                           ;I2C1.c: 79: break;
  2526                           
  2527  00BE  3001               	movlw	1
  2528  00BF  00F4               	movwf	??_I2C1_Transmit
  2529  00C0  0874               	movf	??_I2C1_Transmit,w
  2530  00C1  07F7               	addwf	I2C1_Transmit@i,f
  2531  00C2                     l2837:	
  2532  00C2  0873               	movf	I2C1_Transmit@size,w
  2533  00C3  0277               	subwf	I2C1_Transmit@i,w
  2534  00C4  1803               	btfsc	3,0
  2535  00C5  28E3               	goto	l2839
  2536  00C6                     l2825:	
  2537                           ;I2C1.c: 70: {
  2538                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2539                           
  2540  00C6  3005               	movlw	5
  2541  00C7  0514               	andwf	20,w	;volatile
  2542  00C8  00F4               	movwf	??_I2C1_Transmit
  2543  00C9  0816               	movf	22,w	;volatile
  2544  00CA  391F               	andlw	31
  2545  00CB  0474               	iorwf	??_I2C1_Transmit,w
  2546  00CC  1D03               	btfss	3,2
  2547  00CD  28C6               	goto	l2825
  2548                           
  2549                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  2550  00CE  0877               	movf	I2C1_Transmit@i,w
  2551  00CF  0772               	addwf	I2C1_Transmit@pData,w
  2552  00D0  00F4               	movwf	??_I2C1_Transmit
  2553  00D1  0874               	movf	??_I2C1_Transmit,w
  2554  00D2  0086               	movwf	6
  2555  00D3  0187               	clrf	7
  2556  00D4  0801               	movf	1,w
  2557  00D5  0091               	movwf	17	;volatile
  2558  00D6                     l338:	
  2559                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  2560                           
  2561  00D6  1914               	btfsc	20,2	;volatile
  2562  00D7  28D6               	goto	l338
  2563                           
  2564                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  2565  00D8  3000               	movlw	0
  2566  00D9  1B16               	btfsc	22,6	;volatile
  2567  00DA  3001               	movlw	1
  2568  00DB  00F9               	movwf	I2C1_Transmit@result
  2569                           
  2570                           ;I2C1.c: 76: if (result)
  2571  00DC  0879               	movf	I2C1_Transmit@result,w
  2572  00DD  1903               	btfsc	3,2
  2573  00DE  28BE               	goto	l2835
  2574                           
  2575                           ;I2C1.c: 77: {
  2576                           ;I2C1.c: 78: result = 2;
  2577  00DF  3002               	movlw	2
  2578  00E0  00F4               	movwf	??_I2C1_Transmit
  2579  00E1  0874               	movf	??_I2C1_Transmit,w
  2580  00E2  00F9               	movwf	I2C1_Transmit@result
  2581  00E3                     l2839:	
  2582                           ;I2C1.c: 80: }
  2583                           ;I2C1.c: 81: }
  2584                           ;I2C1.c: 82: }
  2585                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  2586                           
  2587  00E3  3005               	movlw	5
  2588  00E4  0514               	andwf	20,w	;volatile
  2589  00E5  00F4               	movwf	??_I2C1_Transmit
  2590  00E6  0816               	movf	22,w	;volatile
  2591  00E7  391F               	andlw	31
  2592  00E8  0474               	iorwf	??_I2C1_Transmit,w
  2593  00E9  1D03               	btfss	3,2
  2594  00EA  28E3               	goto	l2839
  2595                           
  2596                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  2597  00EB  1516               	bsf	22,2	;volatile
  2598                           
  2599                           ;I2C1.c: 86: break;
  2600  00EC  2919               	goto	l2859
  2601  00ED                     l347:	
  2602                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  2603                           
  2604                           
  2605                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  2606  00ED  0024               	movlb	4	; select bank4
  2607  00EE  1D94               	btfss	20,3	;volatile
  2608  00EF  1E14               	btfss	20,4	;volatile
  2609  00F0  290E               	goto	l2853
  2610                           
  2611                           ;I2C1.c: 90: {
  2612                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  2613  00F1  01F8               	clrf	I2C1_Transmit@i_368
  2614  00F2                     l2849:	
  2615  00F2  0873               	movf	I2C1_Transmit@size,w
  2616  00F3  0278               	subwf	I2C1_Transmit@i_368,w
  2617  00F4  1803               	btfsc	3,0
  2618  00F5  2909               	goto	l2851
  2619                           
  2620                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  2621  00F6  0878               	movf	I2C1_Transmit@i_368,w
  2622  00F7  0772               	addwf	I2C1_Transmit@pData,w
  2623  00F8  00F4               	movwf	??_I2C1_Transmit
  2624  00F9  0874               	movf	??_I2C1_Transmit,w
  2625  00FA  0086               	movwf	6
  2626  00FB  0187               	clrf	7
  2627  00FC  0801               	movf	1,w
  2628  00FD  00F5               	movwf	??_I2C1_Transmit+1
  2629  00FE  0878               	movf	I2C1_Transmit@i_368,w
  2630  00FF  3E3A               	addlw	(low (_I2C1_Config| 0))& (0+255)
  2631  0100  0086               	movwf	6
  2632  0101  0187               	clrf	7
  2633  0102  0875               	movf	??_I2C1_Transmit+1,w
  2634  0103  0081               	movwf	1
  2635  0104  3001               	movlw	1
  2636  0105  00F4               	movwf	??_I2C1_Transmit
  2637  0106  0874               	movf	??_I2C1_Transmit,w
  2638  0107  07F8               	addwf	I2C1_Transmit@i_368,f
  2639  0108  28F2               	goto	l2849
  2640  0109                     l2851:	
  2641                           
  2642                           ;I2C1.c: 93: result = size;
  2643  0109  0873               	movf	I2C1_Transmit@size,w
  2644  010A  00F4               	movwf	??_I2C1_Transmit
  2645  010B  0874               	movf	??_I2C1_Transmit,w
  2646  010C  00F9               	movwf	I2C1_Transmit@result
  2647                           
  2648                           ;I2C1.c: 94: }
  2649  010D  2919               	goto	l2859
  2650  010E                     l2853:	
  2651                           
  2652                           ;I2C1.c: 95: else
  2653                           ;I2C1.c: 96: result = 0;
  2654  010E  01F9               	clrf	I2C1_Transmit@result
  2655                           
  2656                           ;I2C1.c: 98: }
  2657                           
  2658                           ;I2C1.c: 97: break;
  2659  010F  2919               	goto	l2859
  2660  0110                     l2857:	
  2661  0110  0020               	movlb	0	; select bank0
  2662  0111  084C               	movf	_I2C1_Config+18,w
  2663                           
  2664                           ; Switch size 1, requested type "space"
  2665                           ; Number of cases is 2, Range of values is 0 to 1
  2666                           ; switch strategies available:
  2667                           ; Name         Instructions Cycles
  2668                           ; simple_byte            7     4 (average)
  2669                           ; direct_byte           10     6 (fixed)
  2670                           ; jumptable            260     6 (fixed)
  2671                           ;	Chosen strategy is simple_byte
  2672  0112  3A00               	xorlw	0	; case 0
  2673  0113  1903               	skipnz
  2674  0114  289F               	goto	l2813
  2675  0115  3A01               	xorlw	1	; case 1
  2676  0116  1903               	skipnz
  2677  0117  28ED               	goto	l347
  2678  0118  2919               	goto	l2859
  2679  0119                     l2859:	
  2680                           
  2681                           ;I2C1.c: 100: return result;
  2682  0119  0879               	movf	I2C1_Transmit@result,w
  2683  011A  0008               	return
  2684  011B                     __end_of_I2C1_Transmit:	
  2685                           
  2686                           	psect	text9
  2687  0336                     __ptext9:	
  2688 ;; *************** function _I2C_Init *****************
  2689 ;; Defined at:
  2690 ;;		line 6 in file "I2C_Common.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  I2Cx            1    wreg     enum E3036
  2693 ;;  address         1    7[COMMON] unsigned char 
  2694 ;;  mode            1    8[COMMON] enum E3027
  2695 ;;  Speed           1    9[COMMON] enum E3031
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  I2Cx            1   10[COMMON] enum E3036
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2707 ;;      Params:         3       0       0       0       0       0
  2708 ;;      Locals:         1       0       0       0       0       0
  2709 ;;      Temps:          0       2       0       0       0       0
  2710 ;;      Totals:         4       2       0       0       0       0
  2711 ;;Total ram usage:        6 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    5
  2714 ;; This function calls:
  2715 ;;		_I2C1_Setting
  2716 ;;		_I2C2_Setting
  2717 ;; This function is called by:
  2718 ;;		_DAC_Initialize
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _I2C_Init
  2724  0336                     _I2C_Init:	
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2728                           ;I2C_Init@I2Cx stored from wreg
  2729  0336  00FA               	movwf	I2C_Init@I2Cx
  2730                           
  2731                           ;I2C_Common.c: 8: switch(I2Cx)
  2732  0337  2B54               	goto	l2957
  2733  0338                     l2951:	
  2734                           ;I2C_Common.c: 9: {
  2735                           ;I2C_Common.c: 10: case I2C1_MODULE:
  2736                           
  2737                           
  2738                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  2739  0338  0878               	movf	I2C_Init@mode,w
  2740  0339  0020               	movlb	0	; select bank0
  2741  033A  00D0               	movwf	??_I2C_Init
  2742  033B  0850               	movf	??_I2C_Init,w
  2743  033C  00F3               	movwf	I2C1_Setting@mode
  2744  033D  0879               	movf	I2C_Init@Speed,w
  2745  033E  00D1               	movwf	??_I2C_Init+1
  2746  033F  0851               	movf	??_I2C_Init+1,w
  2747  0340  00F4               	movwf	I2C1_Setting@Speed
  2748  0341  0877               	movf	I2C_Init@address,w
  2749  0342  3182  229E  3183   	fcall	_I2C1_Setting
  2750                           
  2751                           ;I2C_Common.c: 12: break;
  2752  0345  2B5C               	goto	l576
  2753  0346                     l2953:	
  2754                           ;I2C_Common.c: 14: case I2C2_MODULE:
  2755                           
  2756                           
  2757                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  2758  0346  0878               	movf	I2C_Init@mode,w
  2759  0347  0020               	movlb	0	; select bank0
  2760  0348  00D0               	movwf	??_I2C_Init
  2761  0349  0850               	movf	??_I2C_Init,w
  2762  034A  00F3               	movwf	I2C2_Setting@mode
  2763  034B  0879               	movf	I2C_Init@Speed,w
  2764  034C  00D1               	movwf	??_I2C_Init+1
  2765  034D  0851               	movf	??_I2C_Init+1,w
  2766  034E  00F4               	movwf	I2C2_Setting@Speed
  2767  034F  0877               	movf	I2C_Init@address,w
  2768  0350  3182  2266  3183   	fcall	_I2C2_Setting
  2769                           
  2770                           ;I2C_Common.c: 17: }
  2771                           
  2772                           ;I2C_Common.c: 16: break;
  2773  0353  2B5C               	goto	l576
  2774  0354                     l2957:	
  2775  0354  087A               	movf	I2C_Init@I2Cx,w
  2776                           
  2777                           ; Switch size 1, requested type "space"
  2778                           ; Number of cases is 2, Range of values is 0 to 1
  2779                           ; switch strategies available:
  2780                           ; Name         Instructions Cycles
  2781                           ; simple_byte            7     4 (average)
  2782                           ; direct_byte           10     6 (fixed)
  2783                           ; jumptable            260     6 (fixed)
  2784                           ;	Chosen strategy is simple_byte
  2785  0355  3A00               	xorlw	0	; case 0
  2786  0356  1903               	skipnz
  2787  0357  2B38               	goto	l2951
  2788  0358  3A01               	xorlw	1	; case 1
  2789  0359  1903               	skipnz
  2790  035A  2B46               	goto	l2953
  2791  035B  2B5C               	goto	l576
  2792  035C                     l576:	
  2793                           
  2794                           ;I2C_Common.c: 19: PEIE = 1;
  2795  035C  170B               	bsf	11,6	;volatile
  2796                           
  2797                           ;I2C_Common.c: 20: GIE = 1;
  2798  035D  178B               	bsf	11,7	;volatile
  2799  035E  0008               	return
  2800  035F                     __end_of_I2C_Init:	
  2801                           
  2802                           	psect	text10
  2803  0266                     __ptext10:	
  2804 ;; *************** function _I2C2_Setting *****************
  2805 ;; Defined at:
  2806 ;;		line 15 in file "I2C2.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  address         1    wreg     unsigned char 
  2809 ;;  mode            1    3[COMMON] enum E3027
  2810 ;;  Speed           1    4[COMMON] enum E3031
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  address         1    6[COMMON] unsigned char 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2822 ;;      Params:         2       0       0       0       0       0
  2823 ;;      Locals:         1       0       0       0       0       0
  2824 ;;      Temps:          1       0       0       0       0       0
  2825 ;;      Totals:         4       0       0       0       0       0
  2826 ;;Total ram usage:        4 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    4
  2829 ;; This function calls:
  2830 ;;		_I2C2_PinInit
  2831 ;; This function is called by:
  2832 ;;		_I2C_Init
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           
  2837                           ;psect for function _I2C2_Setting
  2838  0266                     _I2C2_Setting:	
  2839                           
  2840                           ;incstack = 0
  2841                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2842                           ;I2C2_Setting@address stored from wreg
  2843  0266  00F6               	movwf	I2C2_Setting@address
  2844                           
  2845                           ;I2C2.c: 17: I2C2_PinInit();
  2846  0267  3183  23E5  3182   	fcall	_I2C2_PinInit
  2847                           
  2848                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  2849  026A  0873               	movf	I2C2_Setting@mode,w
  2850  026B  00F5               	movwf	??_I2C2_Setting
  2851  026C  0875               	movf	??_I2C2_Setting,w
  2852  026D  0020               	movlb	0	; select bank0
  2853  026E  00B9               	movwf	_I2C2_Config+18
  2854                           
  2855                           ;I2C2.c: 20: switch(mode)
  2856  026F  2A8F               	goto	l2895
  2857  0270                     l449:	
  2858                           ;I2C2.c: 21: {
  2859                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  2860                           
  2861                           
  2862                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  2863  0270  0024               	movlb	4	; select bank4
  2864  0271  159D               	bsf	29,3	;volatile
  2865                           
  2866                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  2867  0272  0874               	movf	I2C2_Setting@Speed,w
  2868  0273  1D03               	btfss	3,2
  2869  0274  2A78               	goto	l2873
  2870                           
  2871                           ;I2C2.c: 25: {
  2872                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  2873  0275  179C               	bsf	28,7	;volatile
  2874                           
  2875                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  2876  0276  304F               	movlw	79
  2877  0277  2A80               	goto	L3
  2878  0278                     l2873:	
  2879                           ;I2C2.c: 28: }
  2880                           
  2881                           
  2882                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  2883  0278  0374               	decf	I2C2_Setting@Speed,w
  2884  0279  1D03               	btfss	3,2
  2885  027A  2A8D               	goto	l2891
  2886                           
  2887                           ;I2C2.c: 30: {
  2888                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  2889  027B  307F               	movlw	127
  2890  027C  00F5               	movwf	??_I2C2_Setting
  2891  027D  0875               	movf	??_I2C2_Setting,w
  2892  027E  059C               	andwf	28,f	;volatile
  2893                           
  2894                           ;I2C2.c: 32: SSP2ADD = 0x13;
  2895  027F  3013               	movlw	19
  2896  0280                     L3:	
  2897  0280  009A               	movwf	26	;volatile
  2898  0281  2A8D               	goto	l2891
  2899  0282                     l2881:	
  2900                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  2901                           
  2902                           ;I2C2.c: 35: break;
  2903                           
  2904                           ;I2C2.c: 33: }
  2905                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  2906                           
  2907                           
  2908                           ;I2C2.c: 38: SSP2STAT = 0x00;
  2909  0282  0024               	movlb	4	; select bank4
  2910  0283  019C               	clrf	28	;volatile
  2911                           
  2912                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  2913  0284  3006               	movlw	6
  2914  0285  00F5               	movwf	??_I2C2_Setting
  2915  0286  0875               	movf	??_I2C2_Setting,w
  2916  0287  049D               	iorwf	29,f	;volatile
  2917                           
  2918                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  2919  0288  141E               	bsf	30,0	;volatile
  2920                           
  2921                           ;I2C2.c: 41: SSP2ADD = address << 1;
  2922  0289  3576               	lslf	I2C2_Setting@address,w
  2923  028A  009A               	movwf	26	;volatile
  2924                           
  2925                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  2926  028B  30FE               	movlw	254
  2927  028C  009B               	movwf	27	;volatile
  2928  028D                     l2891:	
  2929                           
  2930                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  2931  028D  169D               	bsf	29,5	;volatile
  2932                           
  2933                           ;I2C2.c: 45: }
  2934                           
  2935                           ;I2C2.c: 44: break;
  2936  028E  2A97               	goto	l453
  2937  028F                     l2895:	
  2938  028F  0873               	movf	I2C2_Setting@mode,w
  2939                           
  2940                           ; Switch size 1, requested type "space"
  2941                           ; Number of cases is 2, Range of values is 0 to 1
  2942                           ; switch strategies available:
  2943                           ; Name         Instructions Cycles
  2944                           ; simple_byte            7     4 (average)
  2945                           ; direct_byte           10     6 (fixed)
  2946                           ; jumptable            260     6 (fixed)
  2947                           ;	Chosen strategy is simple_byte
  2948  0290  3A00               	xorlw	0	; case 0
  2949  0291  1903               	skipnz
  2950  0292  2A70               	goto	l449
  2951  0293  3A01               	xorlw	1	; case 1
  2952  0294  1903               	skipnz
  2953  0295  2A82               	goto	l2881
  2954  0296  2A97               	goto	l453
  2955  0297                     l453:	
  2956                           
  2957                           ;I2C2.c: 46: SSP2IE = 1;
  2958  0297  0021               	movlb	1	; select bank1
  2959  0298  1414               	bsf	20,0	;volatile
  2960                           
  2961                           ;I2C2.c: 47: BCL2IE = 1;
  2962  0299  1494               	bsf	20,1	;volatile
  2963                           
  2964                           ;I2C2.c: 48: SSP2IF = 0;
  2965  029A  0020               	movlb	0	; select bank0
  2966  029B  1014               	bcf	20,0	;volatile
  2967                           
  2968                           ;I2C2.c: 49: BCL2IF = 0;
  2969  029C  1094               	bcf	20,1	;volatile
  2970  029D  0008               	return
  2971  029E                     __end_of_I2C2_Setting:	
  2972                           
  2973                           	psect	text11
  2974  03E5                     __ptext11:	
  2975 ;; *************** function _I2C2_PinInit *****************
  2976 ;; Defined at:
  2977 ;;		line 9 in file "I2C2.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2991 ;;      Params:         0       0       0       0       0       0
  2992 ;;      Locals:         0       0       0       0       0       0
  2993 ;;      Temps:          1       0       0       0       0       0
  2994 ;;      Totals:         1       0       0       0       0       0
  2995 ;;Total ram usage:        1 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    3
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_I2C2_Setting
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           
  3006                           ;psect for function _I2C2_PinInit
  3007  03E5                     _I2C2_PinInit:	
  3008                           
  3009                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  3010                           
  3011                           ;incstack = 0
  3012                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  3013  03E5  3024               	movlw	36
  3014  03E6  00F2               	movwf	??_I2C2_PinInit
  3015  03E7  0872               	movf	??_I2C2_PinInit,w
  3016  03E8  0021               	movlb	1	; select bank1
  3017  03E9  048D               	iorwf	13,f	;volatile
  3018                           
  3019                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  3020  03EA  30DB               	movlw	219
  3021  03EB  00F2               	movwf	??_I2C2_PinInit
  3022  03EC  0872               	movf	??_I2C2_PinInit,w
  3023  03ED  0023               	movlb	3	; select bank3
  3024  03EE  058D               	andwf	13,f	;volatile
  3025  03EF  0008               	return
  3026  03F0                     __end_of_I2C2_PinInit:	
  3027                           
  3028                           	psect	text12
  3029  029E                     __ptext12:	
  3030 ;; *************** function _I2C1_Setting *****************
  3031 ;; Defined at:
  3032 ;;		line 15 in file "I2C1.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  address         1    wreg     unsigned char 
  3035 ;;  mode            1    3[COMMON] enum E3027
  3036 ;;  Speed           1    4[COMMON] enum E3031
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  address         1    6[COMMON] unsigned char 
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3048 ;;      Params:         2       0       0       0       0       0
  3049 ;;      Locals:         1       0       0       0       0       0
  3050 ;;      Temps:          1       0       0       0       0       0
  3051 ;;      Totals:         4       0       0       0       0       0
  3052 ;;Total ram usage:        4 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    4
  3055 ;; This function calls:
  3056 ;;		_I2C1_PinInit
  3057 ;; This function is called by:
  3058 ;;		_I2C_Init
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           
  3063                           ;psect for function _I2C1_Setting
  3064  029E                     _I2C1_Setting:	
  3065                           
  3066                           ;incstack = 0
  3067                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3068                           ;I2C1_Setting@address stored from wreg
  3069  029E  00F6               	movwf	I2C1_Setting@address
  3070                           
  3071                           ;I2C1.c: 17: I2C1_PinInit();
  3072  029F  3183  23F0  3182   	fcall	_I2C1_PinInit
  3073                           
  3074                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  3075  02A2  0873               	movf	I2C1_Setting@mode,w
  3076  02A3  00F5               	movwf	??_I2C1_Setting
  3077  02A4  0875               	movf	??_I2C1_Setting,w
  3078  02A5  0020               	movlb	0	; select bank0
  3079  02A6  00CC               	movwf	_I2C1_Config+18
  3080                           
  3081                           ;I2C1.c: 20: switch(mode)
  3082  02A7  2AC7               	goto	l2809
  3083  02A8                     l312:	
  3084                           ;I2C1.c: 21: {
  3085                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  3086                           
  3087                           
  3088                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  3089  02A8  0024               	movlb	4	; select bank4
  3090  02A9  1595               	bsf	21,3	;volatile
  3091                           
  3092                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  3093  02AA  0874               	movf	I2C1_Setting@Speed,w
  3094  02AB  1D03               	btfss	3,2
  3095  02AC  2AB0               	goto	l2787
  3096                           
  3097                           ;I2C1.c: 25: {
  3098                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  3099  02AD  1794               	bsf	20,7	;volatile
  3100                           
  3101                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  3102  02AE  304F               	movlw	79
  3103  02AF  2AB8               	goto	L4
  3104  02B0                     l2787:	
  3105                           ;I2C1.c: 28: }
  3106                           
  3107                           
  3108                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  3109  02B0  0374               	decf	I2C1_Setting@Speed,w
  3110  02B1  1D03               	btfss	3,2
  3111  02B2  2AC5               	goto	l2805
  3112                           
  3113                           ;I2C1.c: 30: {
  3114                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  3115  02B3  307F               	movlw	127
  3116  02B4  00F5               	movwf	??_I2C1_Setting
  3117  02B5  0875               	movf	??_I2C1_Setting,w
  3118  02B6  0594               	andwf	20,f	;volatile
  3119                           
  3120                           ;I2C1.c: 32: SSP1ADD = 0x13;
  3121  02B7  3013               	movlw	19
  3122  02B8                     L4:	
  3123  02B8  0092               	movwf	18	;volatile
  3124  02B9  2AC5               	goto	l2805
  3125  02BA                     l2795:	
  3126                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  3127                           
  3128                           ;I2C1.c: 35: break;
  3129                           
  3130                           ;I2C1.c: 33: }
  3131                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  3132                           
  3133                           
  3134                           ;I2C1.c: 38: SSP1STAT = 0x00;
  3135  02BA  0024               	movlb	4	; select bank4
  3136  02BB  0194               	clrf	20	;volatile
  3137                           
  3138                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  3139  02BC  3006               	movlw	6
  3140  02BD  00F5               	movwf	??_I2C1_Setting
  3141  02BE  0875               	movf	??_I2C1_Setting,w
  3142  02BF  0495               	iorwf	21,f	;volatile
  3143                           
  3144                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  3145  02C0  1416               	bsf	22,0	;volatile
  3146                           
  3147                           ;I2C1.c: 41: SSP1ADD = address << 1;
  3148  02C1  3576               	lslf	I2C1_Setting@address,w
  3149  02C2  0092               	movwf	18	;volatile
  3150                           
  3151                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  3152  02C3  30FE               	movlw	254
  3153  02C4  0093               	movwf	19	;volatile
  3154  02C5                     l2805:	
  3155                           
  3156                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  3157  02C5  1695               	bsf	21,5	;volatile
  3158                           
  3159                           ;I2C1.c: 45: }
  3160                           
  3161                           ;I2C1.c: 44: break;
  3162  02C6  2ACF               	goto	l316
  3163  02C7                     l2809:	
  3164  02C7  0873               	movf	I2C1_Setting@mode,w
  3165                           
  3166                           ; Switch size 1, requested type "space"
  3167                           ; Number of cases is 2, Range of values is 0 to 1
  3168                           ; switch strategies available:
  3169                           ; Name         Instructions Cycles
  3170                           ; simple_byte            7     4 (average)
  3171                           ; direct_byte           10     6 (fixed)
  3172                           ; jumptable            260     6 (fixed)
  3173                           ;	Chosen strategy is simple_byte
  3174  02C8  3A00               	xorlw	0	; case 0
  3175  02C9  1903               	skipnz
  3176  02CA  2AA8               	goto	l312
  3177  02CB  3A01               	xorlw	1	; case 1
  3178  02CC  1903               	skipnz
  3179  02CD  2ABA               	goto	l2795
  3180  02CE  2ACF               	goto	l316
  3181  02CF                     l316:	
  3182                           
  3183                           ;I2C1.c: 46: SSP1IE = 1;
  3184  02CF  0021               	movlb	1	; select bank1
  3185  02D0  1591               	bsf	17,3	;volatile
  3186                           
  3187                           ;I2C1.c: 47: BCL1IE = 1;
  3188  02D1  1592               	bsf	18,3	;volatile
  3189                           
  3190                           ;I2C1.c: 48: SSP1IF = 0;
  3191  02D2  0020               	movlb	0	; select bank0
  3192  02D3  1191               	bcf	17,3	;volatile
  3193                           
  3194                           ;I2C1.c: 49: BCL1IF = 0;
  3195  02D4  1192               	bcf	18,3	;volatile
  3196  02D5  0008               	return
  3197  02D6                     __end_of_I2C1_Setting:	
  3198                           
  3199                           	psect	text13
  3200  03F0                     __ptext13:	
  3201 ;; *************** function _I2C1_PinInit *****************
  3202 ;; Defined at:
  3203 ;;		line 9 in file "I2C1.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3217 ;;      Params:         0       0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0
  3219 ;;      Temps:          1       0       0       0       0       0
  3220 ;;      Totals:         1       0       0       0       0       0
  3221 ;;Total ram usage:        1 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    3
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_I2C1_Setting
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           
  3232                           ;psect for function _I2C1_PinInit
  3233  03F0                     _I2C1_PinInit:	
  3234                           
  3235                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  3236                           
  3237                           ;incstack = 0
  3238                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  3239  03F0  3012               	movlw	18
  3240  03F1  00F2               	movwf	??_I2C1_PinInit
  3241  03F2  0872               	movf	??_I2C1_PinInit,w
  3242  03F3  0021               	movlb	1	; select bank1
  3243  03F4  048D               	iorwf	13,f	;volatile
  3244                           
  3245                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  3246  03F5  30ED               	movlw	237
  3247  03F6  00F2               	movwf	??_I2C1_PinInit
  3248  03F7  0872               	movf	??_I2C1_PinInit,w
  3249  03F8  0023               	movlb	3	; select bank3
  3250  03F9  058D               	andwf	13,f	;volatile
  3251  03FA  0008               	return
  3252  03FB                     __end_of_I2C1_PinInit:	
  3253                           
  3254                           	psect	text14
  3255  03C1                     __ptext14:	
  3256 ;; *************** function _Basic_Init *****************
  3257 ;; Defined at:
  3258 ;;		line 32 in file "main.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;		None
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;		None
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      char 
  3265 ;; Registers used:
  3266 ;;		wreg, status,2
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3272 ;;      Params:         0       0       0       0       0       0
  3273 ;;      Locals:         0       0       0       0       0       0
  3274 ;;      Temps:          0       0       0       0       0       0
  3275 ;;      Totals:         0       0       0       0       0       0
  3276 ;;Total ram usage:        0 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:    3
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_main
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           
  3287                           ;psect for function _Basic_Init
  3288  03C1                     _Basic_Init:	
  3289                           
  3290                           ;main.c: 34: OSCCON = 0xF0;
  3291                           
  3292                           ;incstack = 0
  3293                           ; Regs used in _Basic_Init: [wreg+status,2]
  3294  03C1  30F0               	movlw	240
  3295  03C2  0021               	movlb	1	; select bank1
  3296  03C3  0099               	movwf	25	;volatile
  3297                           
  3298                           ;main.c: 38: TRISA = 0x07;
  3299  03C4  3007               	movlw	7
  3300  03C5  008C               	movwf	12	;volatile
  3301                           
  3302                           ;main.c: 39: ANSELA = 0x07;
  3303  03C6  3007               	movlw	7
  3304  03C7  0023               	movlb	3	; select bank3
  3305  03C8  008C               	movwf	12	;volatile
  3306                           
  3307                           ;main.c: 41: TRISB = 0x40;
  3308  03C9  3040               	movlw	64
  3309  03CA  0021               	movlb	1	; select bank1
  3310  03CB  008D               	movwf	13	;volatile
  3311                           
  3312                           ;main.c: 42: ANSELB = 0x00;
  3313  03CC  0023               	movlb	3	; select bank3
  3314  03CD  018D               	clrf	13	;volatile
  3315                           
  3316                           ;main.c: 44: APFCON0 = 0x08;
  3317  03CE  3008               	movlw	8
  3318  03CF  0022               	movlb	2	; select bank2
  3319  03D0  009D               	movwf	29	;volatile
  3320                           
  3321                           ;main.c: 45: APFCON1 = 0x00;
  3322  03D1  019E               	clrf	30	;volatile
  3323                           
  3324                           ;main.c: 47: PORTA = 0x00;
  3325  03D2  0020               	movlb	0	; select bank0
  3326  03D3  018C               	clrf	12	;volatile
  3327                           
  3328                           ;main.c: 48: PORTB = 0x00;
  3329  03D4  018D               	clrf	13	;volatile
  3330  03D5  0008               	return
  3331  03D6                     __end_of_Basic_Init:	
  3332                           ;main.c: 50: return 0;
  3333                           ;	Return value of _Basic_Init is never used
  3334                           
  3335                           
  3336                           	psect	intentry
  3337  0004                     __pintentry:	
  3338 ;; *************** function _hand *****************
  3339 ;; Defined at:
  3340 ;;		line 54 in file "main.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;		None
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3354 ;;      Params:         0       0       0       0       0       0
  3355 ;;      Locals:         0       0       0       0       0       0
  3356 ;;      Temps:          1       0       0       0       0       0
  3357 ;;      Totals:         1       0       0       0       0       0
  3358 ;;Total ram usage:        1 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    2
  3361 ;; This function calls:
  3362 ;;		_I2C_CommonInterrupt
  3363 ;; This function is called by:
  3364 ;;		Interrupt level 1
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368  0004                     _hand:	
  3369                           
  3370                           ;incstack = 0
  3371  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3372                           
  3373                           ; Regs used in _hand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3374  0005  3180               	pagesel	$
  3375  0006  0020               	movlb	0	; select bank0
  3376  0007  087F               	movf	127,w
  3377  0008  00F1               	movwf	??_hand
  3378                           
  3379                           ;main.c: 56: I2C_CommonInterrupt();
  3380  0009  3184  2401         	fcall	_I2C_CommonInterrupt
  3381  000B  0871               	movf	??_hand,w
  3382  000C  0020               	movlb	0	; select bank0
  3383  000D  00FF               	movwf	127
  3384  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3385  000F  0009               	retfie
  3386  0010                     __end_of_hand:	
  3387                           
  3388                           	psect	text16
  3389  0401                     __ptext16:	
  3390 ;; *************** function _I2C_CommonInterrupt *****************
  3391 ;; Defined at:
  3392 ;;		line 58 in file "I2C_Common.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;		None
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;		None
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  1    wreg      void 
  3399 ;; Registers used:
  3400 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3406 ;;      Params:         0       0       0       0       0       0
  3407 ;;      Locals:         0       0       0       0       0       0
  3408 ;;      Temps:          0       0       0       0       0       0
  3409 ;;      Totals:         0       0       0       0       0       0
  3410 ;;Total ram usage:        0 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    1
  3413 ;; This function calls:
  3414 ;;		_I2C1_Interrupt
  3415 ;;		_I2C2_Interrupt
  3416 ;; This function is called by:
  3417 ;;		_hand
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           
  3422                           ;psect for function _I2C_CommonInterrupt
  3423  0401                     _I2C_CommonInterrupt:	
  3424                           
  3425                           ;I2C_Common.c: 60: I2C1_Interrupt();
  3426                           
  3427                           ;incstack = 0
  3428                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3429  0401  3181  21D8  3184   	fcall	_I2C1_Interrupt
  3430                           
  3431                           ;I2C_Common.c: 61: I2C2_Interrupt();
  3432  0404  3181  2184         	fcall	_I2C2_Interrupt
  3433  0406  0008               	return
  3434  0407                     __end_of_I2C_CommonInterrupt:	
  3435                           
  3436                           	psect	text17
  3437  0184                     __ptext17:	
  3438 ;; *************** function _I2C2_Interrupt *****************
  3439 ;; Defined at:
  3440 ;;		line 152 in file "I2C2.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3454 ;;      Params:         0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0
  3456 ;;      Temps:          1       0       0       0       0       0
  3457 ;;      Totals:         1       0       0       0       0       0
  3458 ;;Total ram usage:        1 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_I2C_CommonInterrupt
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _I2C2_Interrupt
  3469  0184                     _I2C2_Interrupt:	
  3470                           
  3471                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  3472                           
  3473                           ;incstack = 0
  3474                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3475  0184  0020               	movlb	0	; select bank0
  3476  0185  1C14               	btfss	20,0	;volatile
  3477  0186  29D0               	goto	i1l1565
  3478  0187  0021               	movlb	1	; select bank1
  3479  0188  1C14               	btfss	20,0	;volatile
  3480  0189  29D0               	goto	i1l1565
  3481                           
  3482                           ;I2C2.c: 155: {
  3483                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  3484  018A  0024               	movlb	4	; select bank4
  3485  018B  1E9C               	btfss	28,5	;volatile
  3486  018C  29A7               	goto	i1l532
  3487                           
  3488                           ;I2C2.c: 157: {
  3489                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  3490  018D  1D1C               	btfss	28,2	;volatile
  3491  018E  299A               	goto	i1l1541
  3492                           
  3493                           ;I2C2.c: 159: {
  3494                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  3495  018F  1B1E               	btfsc	30,6	;volatile
  3496  0190  29CE               	goto	i1l1563
  3497  0191                     i1l1533:	
  3498                           ;I2C2.c: 161: {
  3499                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  3500                           
  3501  0191  081C               	movf	28,w	;volatile
  3502  0192  3901               	andlw	1
  3503  0193  00F0               	movwf	??_I2C2_Interrupt
  3504  0194  0E1D               	swapf	29,w	;volatile
  3505  0195  3901               	andlw	1
  3506  0196  0470               	iorwf	??_I2C2_Interrupt,w
  3507  0197  1D03               	btfss	3,2
  3508  0198  2991               	goto	i1l1533
  3509  0199  29BA               	goto	L5
  3510  019A                     i1l1541:	
  3511                           ;I2C2.c: 166: }
  3512                           ;I2C2.c: 167: }
  3513                           
  3514                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  3515                           
  3516                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  3517                           
  3518                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  3519                           
  3520                           
  3521                           ;I2C2.c: 168: else
  3522                           ;I2C2.c: 169: {
  3523                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  3524  019A  0819               	movf	25,w	;volatile
  3525  019B  00F0               	movwf	??_I2C2_Interrupt
  3526  019C  0020               	movlb	0	; select bank0
  3527  019D  0838               	movf	low ((_I2C2_Config| 0+17)),w
  3528  019E  0086               	movwf	6
  3529  019F  0187               	clrf	7
  3530  01A0  0870               	movf	??_I2C2_Interrupt,w
  3531  01A1  0081               	movwf	1
  3532                           
  3533                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  3534  01A2  3001               	movlw	1
  3535  01A3  00F0               	movwf	??_I2C2_Interrupt
  3536  01A4  0870               	movf	??_I2C2_Interrupt,w
  3537  01A5  07B8               	addwf	low ((_I2C2_Config| 0+17)),f
  3538  01A6  29CC               	goto	i1l1561
  3539  01A7                     i1l532:	
  3540                           ;I2C2.c: 173: }
  3541                           ;I2C2.c: 174: }
  3542                           
  3543                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  3544                           
  3545                           
  3546                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  3547  01A7  1A9C               	btfsc	28,5	;volatile
  3548  01A8  29CE               	goto	i1l1563
  3549                           
  3550                           ;I2C2.c: 176: {
  3551                           ;I2C2.c: 177: SSP2BUF;
  3552  01A9  0819               	movf	25,w	;volatile
  3553                           
  3554                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  3555  01AA  1D1C               	btfss	28,2	;volatile
  3556  01AB  29C7               	goto	i1l1559
  3557                           
  3558                           ;I2C2.c: 180: {
  3559                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  3560  01AC  3027               	movlw	(low (_I2C2_Config| 0))& (0+255)
  3561  01AD  00F0               	movwf	??_I2C2_Interrupt
  3562  01AE  0870               	movf	??_I2C2_Interrupt,w
  3563  01AF  0020               	movlb	0	; select bank0
  3564  01B0  00B7               	movwf	low ((_I2C2_Config| 0+16))
  3565  01B1                     i1l1553:	
  3566                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  3567                           
  3568  01B1  0024               	movlb	4	; select bank4
  3569  01B2  081C               	movf	28,w	;volatile
  3570  01B3  3901               	andlw	1
  3571  01B4  00F0               	movwf	??_I2C2_Interrupt
  3572  01B5  0E1D               	swapf	29,w	;volatile
  3573  01B6  3901               	andlw	1
  3574  01B7  0470               	iorwf	??_I2C2_Interrupt,w
  3575  01B8  1D03               	btfss	3,2
  3576  01B9  29B1               	goto	i1l1553
  3577  01BA                     L5:	
  3578                           
  3579                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  3580  01BA  0020               	movlb	0	; select bank0
  3581  01BB  0837               	movf	low ((_I2C2_Config| 0+16)),w
  3582  01BC  0086               	movwf	6
  3583  01BD  0187               	clrf	7
  3584  01BE  0801               	movf	1,w
  3585  01BF  0024               	movlb	4	; select bank4
  3586  01C0  0099               	movwf	25	;volatile
  3587                           
  3588                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  3589  01C1  3001               	movlw	1
  3590  01C2  00F0               	movwf	??_I2C2_Interrupt
  3591  01C3  0870               	movf	??_I2C2_Interrupt,w
  3592  01C4  0020               	movlb	0	; select bank0
  3593  01C5  07B7               	addwf	low ((_I2C2_Config| 0+16)),f
  3594                           
  3595                           ;I2C2.c: 186: }
  3596  01C6  29CC               	goto	i1l1561
  3597  01C7                     i1l1559:	
  3598                           
  3599                           ;I2C2.c: 187: else
  3600                           ;I2C2.c: 188: {
  3601                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  3602  01C7  302F               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  3603  01C8  00F0               	movwf	??_I2C2_Interrupt
  3604  01C9  0870               	movf	??_I2C2_Interrupt,w
  3605  01CA  0020               	movlb	0	; select bank0
  3606  01CB  00B8               	movwf	low ((_I2C2_Config| 0+17))
  3607  01CC                     i1l1561:	
  3608                           
  3609                           ;I2C2.c: 190: }
  3610                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  3611  01CC  0024               	movlb	4	; select bank4
  3612  01CD  161D               	bsf	29,4	;volatile
  3613  01CE                     i1l1563:	
  3614                           
  3615                           ;I2C2.c: 192: }
  3616                           ;I2C2.c: 193: SSP2IF = 0;
  3617  01CE  0020               	movlb	0	; select bank0
  3618  01CF  1014               	bcf	20,0	;volatile
  3619  01D0                     i1l1565:	
  3620                           
  3621                           ;I2C2.c: 194: }
  3622                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  3623  01D0  0021               	movlb	1	; select bank1
  3624  01D1  1C94               	btfss	20,1	;volatile
  3625  01D2  0008               	return
  3626  01D3  0020               	movlb	0	; select bank0
  3627  01D4  1C94               	btfss	20,1	;volatile
  3628  01D5  0008               	return
  3629                           
  3630                           ;I2C2.c: 197: BCL2IF = 0;
  3631  01D6  1094               	bcf	20,1	;volatile
  3632  01D7  0008               	return
  3633  01D8                     __end_of_I2C2_Interrupt:	
  3634                           
  3635                           	psect	text18
  3636  01D8                     __ptext18:	
  3637 ;; *************** function _I2C1_Interrupt *****************
  3638 ;; Defined at:
  3639 ;;		line 152 in file "I2C1.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3653 ;;      Params:         0       0       0       0       0       0
  3654 ;;      Locals:         0       0       0       0       0       0
  3655 ;;      Temps:          1       0       0       0       0       0
  3656 ;;      Totals:         1       0       0       0       0       0
  3657 ;;Total ram usage:        1 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_I2C_CommonInterrupt
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           
  3667                           ;psect for function _I2C1_Interrupt
  3668  01D8                     _I2C1_Interrupt:	
  3669                           
  3670                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3674  01D8  0020               	movlb	0	; select bank0
  3675  01D9  1D91               	btfss	17,3	;volatile
  3676  01DA  2A24               	goto	i1l1515
  3677  01DB  0021               	movlb	1	; select bank1
  3678  01DC  1D91               	btfss	17,3	;volatile
  3679  01DD  2A24               	goto	i1l1515
  3680                           
  3681                           ;I2C1.c: 155: {
  3682                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  3683  01DE  0024               	movlb	4	; select bank4
  3684  01DF  1E94               	btfss	20,5	;volatile
  3685  01E0  29FB               	goto	i1l395
  3686                           
  3687                           ;I2C1.c: 157: {
  3688                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  3689  01E1  1D14               	btfss	20,2	;volatile
  3690  01E2  29EE               	goto	i1l1491
  3691                           
  3692                           ;I2C1.c: 159: {
  3693                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  3694  01E3  1B16               	btfsc	22,6	;volatile
  3695  01E4  2A22               	goto	i1l1513
  3696  01E5                     i1l1483:	
  3697                           ;I2C1.c: 161: {
  3698                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  3699                           
  3700  01E5  0814               	movf	20,w	;volatile
  3701  01E6  3901               	andlw	1
  3702  01E7  00F0               	movwf	??_I2C1_Interrupt
  3703  01E8  0E15               	swapf	21,w	;volatile
  3704  01E9  3901               	andlw	1
  3705  01EA  0470               	iorwf	??_I2C1_Interrupt,w
  3706  01EB  1D03               	btfss	3,2
  3707  01EC  29E5               	goto	i1l1483
  3708  01ED  2A0E               	goto	L6
  3709  01EE                     i1l1491:	
  3710                           ;I2C1.c: 166: }
  3711                           ;I2C1.c: 167: }
  3712                           
  3713                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  3714                           
  3715                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  3716                           
  3717                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  3718                           
  3719                           
  3720                           ;I2C1.c: 168: else
  3721                           ;I2C1.c: 169: {
  3722                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  3723  01EE  0811               	movf	17,w	;volatile
  3724  01EF  00F0               	movwf	??_I2C1_Interrupt
  3725  01F0  0020               	movlb	0	; select bank0
  3726  01F1  084B               	movf	low ((_I2C1_Config| 0+17)),w
  3727  01F2  0086               	movwf	6
  3728  01F3  0187               	clrf	7
  3729  01F4  0870               	movf	??_I2C1_Interrupt,w
  3730  01F5  0081               	movwf	1
  3731                           
  3732                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  3733  01F6  3001               	movlw	1
  3734  01F7  00F0               	movwf	??_I2C1_Interrupt
  3735  01F8  0870               	movf	??_I2C1_Interrupt,w
  3736  01F9  07CB               	addwf	low ((_I2C1_Config| 0+17)),f
  3737  01FA  2A20               	goto	i1l1511
  3738  01FB                     i1l395:	
  3739                           ;I2C1.c: 173: }
  3740                           ;I2C1.c: 174: }
  3741                           
  3742                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  3743                           
  3744                           
  3745                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  3746  01FB  1A94               	btfsc	20,5	;volatile
  3747  01FC  2A22               	goto	i1l1513
  3748                           
  3749                           ;I2C1.c: 176: {
  3750                           ;I2C1.c: 177: SSP1BUF;
  3751  01FD  0811               	movf	17,w	;volatile
  3752                           
  3753                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  3754  01FE  1D14               	btfss	20,2	;volatile
  3755  01FF  2A1B               	goto	i1l1509
  3756                           
  3757                           ;I2C1.c: 180: {
  3758                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  3759  0200  303A               	movlw	(low (_I2C1_Config| 0))& (0+255)
  3760  0201  00F0               	movwf	??_I2C1_Interrupt
  3761  0202  0870               	movf	??_I2C1_Interrupt,w
  3762  0203  0020               	movlb	0	; select bank0
  3763  0204  00CA               	movwf	low ((_I2C1_Config| 0+16))
  3764  0205                     i1l1503:	
  3765                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  3766                           
  3767  0205  0024               	movlb	4	; select bank4
  3768  0206  0814               	movf	20,w	;volatile
  3769  0207  3901               	andlw	1
  3770  0208  00F0               	movwf	??_I2C1_Interrupt
  3771  0209  0E15               	swapf	21,w	;volatile
  3772  020A  3901               	andlw	1
  3773  020B  0470               	iorwf	??_I2C1_Interrupt,w
  3774  020C  1D03               	btfss	3,2
  3775  020D  2A05               	goto	i1l1503
  3776  020E                     L6:	
  3777                           
  3778                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  3779  020E  0020               	movlb	0	; select bank0
  3780  020F  084A               	movf	low ((_I2C1_Config| 0+16)),w
  3781  0210  0086               	movwf	6
  3782  0211  0187               	clrf	7
  3783  0212  0801               	movf	1,w
  3784  0213  0024               	movlb	4	; select bank4
  3785  0214  0091               	movwf	17	;volatile
  3786                           
  3787                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  3788  0215  3001               	movlw	1
  3789  0216  00F0               	movwf	??_I2C1_Interrupt
  3790  0217  0870               	movf	??_I2C1_Interrupt,w
  3791  0218  0020               	movlb	0	; select bank0
  3792  0219  07CA               	addwf	low ((_I2C1_Config| 0+16)),f
  3793                           
  3794                           ;I2C1.c: 186: }
  3795  021A  2A20               	goto	i1l1511
  3796  021B                     i1l1509:	
  3797                           
  3798                           ;I2C1.c: 187: else
  3799                           ;I2C1.c: 188: {
  3800                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  3801  021B  3042               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  3802  021C  00F0               	movwf	??_I2C1_Interrupt
  3803  021D  0870               	movf	??_I2C1_Interrupt,w
  3804  021E  0020               	movlb	0	; select bank0
  3805  021F  00CB               	movwf	low ((_I2C1_Config| 0+17))
  3806  0220                     i1l1511:	
  3807                           
  3808                           ;I2C1.c: 190: }
  3809                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  3810  0220  0024               	movlb	4	; select bank4
  3811  0221  1615               	bsf	21,4	;volatile
  3812  0222                     i1l1513:	
  3813                           
  3814                           ;I2C1.c: 192: }
  3815                           ;I2C1.c: 193: SSP1IF = 0;
  3816  0222  0020               	movlb	0	; select bank0
  3817  0223  1191               	bcf	17,3	;volatile
  3818  0224                     i1l1515:	
  3819                           
  3820                           ;I2C1.c: 194: }
  3821                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  3822  0224  0021               	movlb	1	; select bank1
  3823  0225  1D92               	btfss	18,3	;volatile
  3824  0226  0008               	return
  3825  0227  0020               	movlb	0	; select bank0
  3826  0228  1D92               	btfss	18,3	;volatile
  3827  0229  0008               	return
  3828                           
  3829                           ;I2C1.c: 197: BCL1IF = 0;
  3830  022A  1192               	bcf	18,3	;volatile
  3831  022B  0008               	return
  3832  022C                     __end_of_I2C1_Interrupt:	
  3833  007E                     btemp	set	126	;btemp
  3834  007E                     int$flags	set	126
  3835  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     17      65
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK0[8]), I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK0[8]), I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S242$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config.SlaveReceiveBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    S242$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config(BANK0[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK0[19]), I2C1_Config.SlaveTransmitBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _main->_DAC_WriteVoltage
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _DAC_Initialize->_I2C_Init
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _hand in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt

Critical Paths under _main in BANK0

    _main->_DAC_WriteVoltage
    _DAC_WriteVoltage->_I2C_Transmit
    _DAC_Initialize->_I2C_Transmit

Critical Paths under _hand in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _hand in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hand in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hand in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hand in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5381
                                             14 BANK0      3     3      0
                         _Basic_Init
                     _DAC_Initialize
                   _DAC_WriteVoltage
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              6 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              5 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        3     3      0      88
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_WriteVoltage                                     7     5      2    2091
                                             10 COMMON     1     1      0
                                              8 BANK0      6     4      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                              8 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              0 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              7 COMMON     4     1      3
                                              0 BANK0      2     2      0
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _hand                                                 1     1      0       0
                                              1 COMMON     1     1      0
                _I2C_CommonInterrupt
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _DAC_WriteVoltage
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData

 _hand (ROOT)
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     11      41       6       81.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      4D      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Mar 25 02:07:58 2017

                 __CFG_CP$OFF 0000                I2C2_Transmit@i 0077         ??_I2C_CommonInterrupt 0071  
                         l312 02A8                           l316 02CF                           l329 00B3  
                         l338 00D6                           l347 00ED                           l453 0297  
                         l449 0270                           l466 0035                           l475 0058  
                         l484 006F                           l576 035C                           _GIE 005F  
                         _RA3 0063                           _RA4 0064                  __CFG_CPD$OFF 0000  
                __CFG_BORV$LO 0000                           wreg 0009                    _Basic_Init 03C1  
                __CFG_LVP$OFF 0000                          l3003 02E6                          l3013 02FC  
                        l2805 02C5                          l2813 009F                          l2901 002B  
                        l2815 00A9                          l2911 0048                          l2809 02C7  
                        l2825 00C6                          l2921 0040                          l2851 0109  
                        l2835 00BE                          l2923 0044                          l2853 010E  
                        l2837 00C2                          l2925 0065                          l2951 0338  
                        l2839 00E3                          l2935 0074                          l2943 0092  
                        l2881 0282                          l2873 0278                          l2953 0346  
                        l2849 00F2                          l2857 0110                          l2937 008B  
                        l2945 009B                          l2961 030E                          l2795 02BA  
                        l2787 02B0                          l2891 028D                          l2859 0119  
                        l2939 0090                          l2963 031B                          l2957 0354  
                        l2895 028F                          l2967 032C                          l2969 0334  
                        l2899 0021             ?_DAC_WriteVoltage 0058                          STR_1 03BF  
                        STR_2 03A5                          STR_3 03B3                          STR_4 03B9  
                        STR_5 03AC                          u1465 0234                          u2807 014E  
                        u2817 0162                          u2827 03DF                          _PEIE 005E  
                        u2837 022E                          u2777 0300                          u2787 0123  
                        u2797 013B               ??_I2C1_Transmit 0074                  __CFG_WRT$OFF 0000  
          ??_DAC_WriteVoltage 005A                          _hand 0004                          _main 02D6  
            __end_of_I2C_Init 035F                          fsr0h 0005                          fsr1h 0007  
                        indf0 0000                          fsr0l 0004                          indf1 0001  
                        fsr1l 0006                          btemp 007E                 __CFG_BOREN$ON 0000  
             ??_I2C2_Transmit 0074              ??_I2C1_Interrupt 0070                          start 0010  
               __CFG_IESO$OFF 0000                   main@voltage 005F                 _LCD_WriteData 022C  
               __CFG_MCLRE$ON 0000              ??_I2C2_Interrupt 0070      __end_of_LCD_DisplayClear 03E5  
       __size_of_I2C_Transmit 002B              __end_of_LCD_Init 0184                 __CFG_PLLEN$ON 0000  
                       ?_hand 0070                         ?_main 0070                 __CFG_WDTE$OFF 0000  
                       _LATA7 0867                         i1l532 01A7                         i1l395 01FB  
                       _PORTA 000C                         _PORTB 000D                         _TRISA 008C  
                       _TRISB 008D             I2C2_Transmit@size 0073                 __CFG_PWRTE$ON 0000  
              __CFG_FCMEN$OFF 0000                         status 0003                         wtemp0 007E  
                _I2C_Transmit 030B                ?_LCD_WriteData 0070              ??_DAC_Initialize 0058  
             __initialization 0012                  __end_of_hand 0010                  __end_of_main 030B  
                      ??_hand 0071                        ??_main 005E                   ?_Basic_Init 0070  
                      _BCL1IE 0493                        _BCL1IF 0093                        _BCL2IE 04A1  
                      _BCL2IF 00A1                        _ANSELA 018C                        _ANSELB 018D  
                      i1l1511 0220                        i1l1503 0205                        i1l1513 0222  
                      i1l1515 0224                        i1l1509 021B                        i1l1533 0191  
                      i1l1541 019A                        i1l1561 01CC                        i1l1553 01B1  
                      i1l1483 01E5                        i1l1491 01EE                        i1l1563 01CE  
                      i1l1565 01D0                        i1l1559 01C7            I2C2_Transmit@i_512 0078  
                      _OSCCON 0099            I2C2_Transmit@pData 0072                        _SSP1IE 048B  
                      _SSP1IF 008B                        _SSP2IE 04A0                        _SSP2IF 00A0  
                      _outptr 007B              I2C_Transmit@I2Cx 0056                     ?_I2C_Init 0077  
            I2C_Transmit@size 0052       __end_of__initialization 001A                     ?_LCD_Init 0070  
             ??_LCD_WriteData 0072                    _VoltageReg 004D                __pcstackCOMMON 0070  
         __size_of_Basic_Init 0015                    ??_I2C_Init 0050           I2C1_Transmit@result 0079  
                  __pbssBANK0 0020                    ??_LCD_Init 0076                  I2C_Init@I2Cx 007A  
      DAC_WriteVoltage@result 007A   __end_of_I2C_CommonInterrupt 0407                  I2C_Init@mode 0078  
                  __pmaintext 02D6     __size_of_DAC_WriteVoltage 0027                    __pintentry 0004  
           ?_LCD_DisplayClear 0070                       _APFCON0 011D                       _APFCON1 011E  
          ??_LCD_DisplayClear 0075                       _LCD_Put 0000                       _SSP1ADD 0212  
                     _SSP2ADD 021A                       _SSP1BUF 0211                       _SSP2BUF 0219  
                     _SSP1MSK 0213                       _SSP2MSK 021B           I2C2_Transmit@result 0079  
       __end_of_I2C1_Transmit 011B         __end_of_I2C2_Transmit 009D               __CFG_STVREN$OFF 0000  
                     __ptext1 011B                       __ptext2 03D6                       __ptext3 022C  
                     __ptext4 035F                       __ptext5 0386                       __ptext6 030B  
                     __ptext7 001E                       __ptext8 009D                       __ptext9 0336  
                ??_Basic_Init 0072                       clrloop0 03FC          end_of_initialization 001A  
               ?_I2C1_PinInit 0070                 ?_I2C2_PinInit 0070                   _I2C1_Config 003A  
                 _I2C2_Config 0027                 ?_I2C1_Setting 0073                 ?_I2C2_Setting 0073  
           I2C_Transmit@pData 0051            __end_of_Basic_Init 03D6                  __pstringtext 03A5  
     __size_of_I2C1_Interrupt 0054              __CFG_FOSC$INTOSC 0000       __size_of_I2C2_Interrupt 0054  
           __size_of_I2C_Init 0029           I2C1_Setting@address 0076                ??_I2C1_PinInit 0072  
              ??_I2C2_PinInit 0072                ??_I2C1_Setting 0075                ??_I2C2_Setting 0075  
           __size_of_LCD_Init 0069              _DAC_WriteVoltage 035F                     _ConfigReg 004F  
     __size_of_DAC_Initialize 001F           start_initialization 0012          I2C1_Transmit@address 0076  
                   _MemoryReg 0020           I2C2_Setting@address 0076         __end_of_LCD_WriteData 0266  
           I2C1_Setting@Speed 0074                   __pbssCOMMON 007B                     ___latbits 0001  
               __pcstackBANK0 0050            I2C1_Transmit@i_368 0078            I2C1_Transmit@pData 0072  
   __size_of_LCD_DisplayClear 000F               I2C_Init@address 0077                 ?_I2C_Transmit 0050  
               I2C_Init@Speed 0079         DAC_WriteVoltage@volue 0058                _I2C1_Interrupt 01D8  
        __end_of_I2C1_PinInit 03FB  __size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 03F0  
        __end_of_I2C1_Setting 02D6                      _I2C_Init 0336          __end_of_I2C2_Setting 029E  
              _I2C2_Interrupt 0184                      _LCD_Init 011B                ??_I2C_Transmit 0053  
                   clear_ram0 03FB        __end_of_I2C1_Interrupt 022C                      _SSP1CON1 0215  
                    _SSP1CON2 0216          I2C2_Transmit@address 0076                      _SSP2CON1 021D  
                    _SSP2CON2 021E                      _SSP1STAT 0214                      _SSP2STAT 021C  
              _DAC_Initialize 0386        __end_of_I2C2_Interrupt 01D8        __size_of_I2C1_Transmit 007E  
                   _xfunc_out 0025        __size_of_I2C2_Transmit 007F      __end_of_DAC_WriteVoltage 0386  
             ?_I2C1_Interrupt 0070        __end_of_DAC_Initialize 03A5              I2C1_Setting@mode 0073  
          LCD_WriteData@point 0074               ?_I2C2_Interrupt 0070             I2C1_Transmit@size 0073  
                    __ptext10 0266                      __ptext11 03E5                      __ptext12 029E  
                    __ptext13 03F0                      __ptext14 03C1                      __ptext16 0401  
                    __ptext17 0184                      __ptext18 01D8                  _SSP1CON1bits 0215  
                _SSP1CON2bits 0216              _LCD_DisplayClear 03D6                  _SSP2CON1bits 021D  
                _SSP2CON2bits 021E                 __size_of_hand 000C                 __size_of_main 0035  
               _I2C1_Transmit 009D                 _I2C2_Transmit 001E         __size_of_I2C1_PinInit 000B  
                    int$flags 007E         __size_of_I2C2_PinInit 000B           I2C_Transmit@address 0050  
       __size_of_I2C1_Setting 0038               ?_DAC_Initialize 0070                  _SSP1STATbits 0214  
                    _xfunc_in 0023         __size_of_I2C2_Setting 0038                  _SSP2STATbits 021C  
        __end_of_I2C_Transmit 0336             I2C2_Setting@Speed 0074                      intlevel1 0000  
         _I2C_CommonInterrupt 0401                  _I2C1_PinInit 03F0                ?_I2C1_Transmit 0072  
           __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 03E5                  _I2C1_Setting 029E  
              ?_I2C2_Transmit 0072                  _I2C2_Setting 0266            I2C_Transmit@result 0057  
            I2C2_Setting@mode 0073          ?_I2C_CommonInterrupt 0070        __size_of_LCD_WriteData 003A  
              I2C1_Transmit@i 0077  
