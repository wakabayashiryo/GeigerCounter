

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Mar  7 12:04:45 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 1.41
    41                           ; Generated 25/01/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F1827 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011D                     	;# 
   134  011E                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0194                     	;# 
   144  0195                     	;# 
   145  0196                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019D                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  020C                     	;# 
   158  020D                     	;# 
   159  0211                     	;# 
   160  0211                     	;# 
   161  0212                     	;# 
   162  0212                     	;# 
   163  0213                     	;# 
   164  0213                     	;# 
   165  0214                     	;# 
   166  0214                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0216                     	;# 
   171  0216                     	;# 
   172  0217                     	;# 
   173  0217                     	;# 
   174  0219                     	;# 
   175  021A                     	;# 
   176  021B                     	;# 
   177  021C                     	;# 
   178  021D                     	;# 
   179  021E                     	;# 
   180  021F                     	;# 
   181  0291                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0293                     	;# 
   185  0294                     	;# 
   186  0295                     	;# 
   187  0295                     	;# 
   188  0296                     	;# 
   189  0298                     	;# 
   190  0298                     	;# 
   191  0299                     	;# 
   192  029A                     	;# 
   193  029B                     	;# 
   194  029C                     	;# 
   195  029C                     	;# 
   196  029D                     	;# 
   197  029E                     	;# 
   198  029E                     	;# 
   199  0311                     	;# 
   200  0311                     	;# 
   201  0312                     	;# 
   202  0313                     	;# 
   203  0318                     	;# 
   204  0318                     	;# 
   205  0319                     	;# 
   206  031A                     	;# 
   207  0394                     	;# 
   208  0395                     	;# 
   209  0396                     	;# 
   210  039A                     	;# 
   211  039C                     	;# 
   212  039D                     	;# 
   213  039E                     	;# 
   214  039F                     	;# 
   215  0415                     	;# 
   216  0416                     	;# 
   217  0417                     	;# 
   218  041C                     	;# 
   219  041D                     	;# 
   220  041E                     	;# 
   221  0FE4                     	;# 
   222  0FE5                     	;# 
   223  0FE6                     	;# 
   224  0FE7                     	;# 
   225  0FE8                     	;# 
   226  0FE9                     	;# 
   227  0FEA                     	;# 
   228  0FEB                     	;# 
   229  0FED                     	;# 
   230  0FEE                     	;# 
   231  0FEF                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  0111                     	;# 
   281  0112                     	;# 
   282  0113                     	;# 
   283  0114                     	;# 
   284  0115                     	;# 
   285  0116                     	;# 
   286  0117                     	;# 
   287  0118                     	;# 
   288  0119                     	;# 
   289  011A                     	;# 
   290  011B                     	;# 
   291  011D                     	;# 
   292  011E                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0194                     	;# 
   302  0195                     	;# 
   303  0196                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019C                     	;# 
   312  019D                     	;# 
   313  019E                     	;# 
   314  019F                     	;# 
   315  020C                     	;# 
   316  020D                     	;# 
   317  0211                     	;# 
   318  0211                     	;# 
   319  0212                     	;# 
   320  0212                     	;# 
   321  0213                     	;# 
   322  0213                     	;# 
   323  0214                     	;# 
   324  0214                     	;# 
   325  0215                     	;# 
   326  0215                     	;# 
   327  0215                     	;# 
   328  0216                     	;# 
   329  0216                     	;# 
   330  0217                     	;# 
   331  0217                     	;# 
   332  0219                     	;# 
   333  021A                     	;# 
   334  021B                     	;# 
   335  021C                     	;# 
   336  021D                     	;# 
   337  021E                     	;# 
   338  021F                     	;# 
   339  0291                     	;# 
   340  0291                     	;# 
   341  0292                     	;# 
   342  0293                     	;# 
   343  0294                     	;# 
   344  0295                     	;# 
   345  0295                     	;# 
   346  0296                     	;# 
   347  0298                     	;# 
   348  0298                     	;# 
   349  0299                     	;# 
   350  029A                     	;# 
   351  029B                     	;# 
   352  029C                     	;# 
   353  029C                     	;# 
   354  029D                     	;# 
   355  029E                     	;# 
   356  029E                     	;# 
   357  0311                     	;# 
   358  0311                     	;# 
   359  0312                     	;# 
   360  0313                     	;# 
   361  0318                     	;# 
   362  0318                     	;# 
   363  0319                     	;# 
   364  031A                     	;# 
   365  0394                     	;# 
   366  0395                     	;# 
   367  0396                     	;# 
   368  039A                     	;# 
   369  039C                     	;# 
   370  039D                     	;# 
   371  039E                     	;# 
   372  039F                     	;# 
   373  0415                     	;# 
   374  0416                     	;# 
   375  0417                     	;# 
   376  041C                     	;# 
   377  041D                     	;# 
   378  041E                     	;# 
   379  0FE4                     	;# 
   380  0FE5                     	;# 
   381  0FE6                     	;# 
   382  0FE7                     	;# 
   383  0FE8                     	;# 
   384  0FE9                     	;# 
   385  0FEA                     	;# 
   386  0FEB                     	;# 
   387  0FED                     	;# 
   388  0FEE                     	;# 
   389  0FEF                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  0111                     	;# 
   439  0112                     	;# 
   440  0113                     	;# 
   441  0114                     	;# 
   442  0115                     	;# 
   443  0116                     	;# 
   444  0117                     	;# 
   445  0118                     	;# 
   446  0119                     	;# 
   447  011A                     	;# 
   448  011B                     	;# 
   449  011D                     	;# 
   450  011E                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0191                     	;# 
   454  0191                     	;# 
   455  0192                     	;# 
   456  0193                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0194                     	;# 
   460  0195                     	;# 
   461  0196                     	;# 
   462  0199                     	;# 
   463  019A                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019C                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020C                     	;# 
   474  020D                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0216                     	;# 
   487  0216                     	;# 
   488  0217                     	;# 
   489  0217                     	;# 
   490  0219                     	;# 
   491  021A                     	;# 
   492  021B                     	;# 
   493  021C                     	;# 
   494  021D                     	;# 
   495  021E                     	;# 
   496  021F                     	;# 
   497  0291                     	;# 
   498  0291                     	;# 
   499  0292                     	;# 
   500  0293                     	;# 
   501  0294                     	;# 
   502  0295                     	;# 
   503  0295                     	;# 
   504  0296                     	;# 
   505  0298                     	;# 
   506  0298                     	;# 
   507  0299                     	;# 
   508  029A                     	;# 
   509  029B                     	;# 
   510  029C                     	;# 
   511  029C                     	;# 
   512  029D                     	;# 
   513  029E                     	;# 
   514  029E                     	;# 
   515  0311                     	;# 
   516  0311                     	;# 
   517  0312                     	;# 
   518  0313                     	;# 
   519  0318                     	;# 
   520  0318                     	;# 
   521  0319                     	;# 
   522  031A                     	;# 
   523  0394                     	;# 
   524  0395                     	;# 
   525  0396                     	;# 
   526  039A                     	;# 
   527  039C                     	;# 
   528  039D                     	;# 
   529  039E                     	;# 
   530  039F                     	;# 
   531  0415                     	;# 
   532  0416                     	;# 
   533  0417                     	;# 
   534  041C                     	;# 
   535  041D                     	;# 
   536  041E                     	;# 
   537  0FE4                     	;# 
   538  0FE5                     	;# 
   539  0FE6                     	;# 
   540  0FE7                     	;# 
   541  0FE8                     	;# 
   542  0FE9                     	;# 
   543  0FEA                     	;# 
   544  0FEB                     	;# 
   545  0FED                     	;# 
   546  0FEE                     	;# 
   547  0FEF                     	;# 
   548  0000                     	;# 
   549  0001                     	;# 
   550  0002                     	;# 
   551  0003                     	;# 
   552  0004                     	;# 
   553  0005                     	;# 
   554  0006                     	;# 
   555  0007                     	;# 
   556  0008                     	;# 
   557  0009                     	;# 
   558  000A                     	;# 
   559  000B                     	;# 
   560  000C                     	;# 
   561  000D                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0014                     	;# 
   566  0015                     	;# 
   567  0016                     	;# 
   568  0016                     	;# 
   569  0017                     	;# 
   570  0018                     	;# 
   571  0019                     	;# 
   572  001A                     	;# 
   573  001B                     	;# 
   574  001C                     	;# 
   575  001E                     	;# 
   576  001F                     	;# 
   577  008C                     	;# 
   578  008D                     	;# 
   579  0091                     	;# 
   580  0092                     	;# 
   581  0093                     	;# 
   582  0094                     	;# 
   583  0095                     	;# 
   584  0096                     	;# 
   585  0097                     	;# 
   586  0098                     	;# 
   587  0099                     	;# 
   588  009A                     	;# 
   589  009B                     	;# 
   590  009B                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  010C                     	;# 
   595  010D                     	;# 
   596  0111                     	;# 
   597  0112                     	;# 
   598  0113                     	;# 
   599  0114                     	;# 
   600  0115                     	;# 
   601  0116                     	;# 
   602  0117                     	;# 
   603  0118                     	;# 
   604  0119                     	;# 
   605  011A                     	;# 
   606  011B                     	;# 
   607  011D                     	;# 
   608  011E                     	;# 
   609  018C                     	;# 
   610  018D                     	;# 
   611  0191                     	;# 
   612  0191                     	;# 
   613  0192                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0193                     	;# 
   617  0194                     	;# 
   618  0195                     	;# 
   619  0196                     	;# 
   620  0199                     	;# 
   621  019A                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019C                     	;# 
   627  019C                     	;# 
   628  019D                     	;# 
   629  019E                     	;# 
   630  019F                     	;# 
   631  020C                     	;# 
   632  020D                     	;# 
   633  0211                     	;# 
   634  0211                     	;# 
   635  0212                     	;# 
   636  0212                     	;# 
   637  0213                     	;# 
   638  0213                     	;# 
   639  0214                     	;# 
   640  0214                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0216                     	;# 
   645  0216                     	;# 
   646  0217                     	;# 
   647  0217                     	;# 
   648  0219                     	;# 
   649  021A                     	;# 
   650  021B                     	;# 
   651  021C                     	;# 
   652  021D                     	;# 
   653  021E                     	;# 
   654  021F                     	;# 
   655  0291                     	;# 
   656  0291                     	;# 
   657  0292                     	;# 
   658  0293                     	;# 
   659  0294                     	;# 
   660  0295                     	;# 
   661  0295                     	;# 
   662  0296                     	;# 
   663  0298                     	;# 
   664  0298                     	;# 
   665  0299                     	;# 
   666  029A                     	;# 
   667  029B                     	;# 
   668  029C                     	;# 
   669  029C                     	;# 
   670  029D                     	;# 
   671  029E                     	;# 
   672  029E                     	;# 
   673  0311                     	;# 
   674  0311                     	;# 
   675  0312                     	;# 
   676  0313                     	;# 
   677  0318                     	;# 
   678  0318                     	;# 
   679  0319                     	;# 
   680  031A                     	;# 
   681  0394                     	;# 
   682  0395                     	;# 
   683  0396                     	;# 
   684  039A                     	;# 
   685  039C                     	;# 
   686  039D                     	;# 
   687  039E                     	;# 
   688  039F                     	;# 
   689  0415                     	;# 
   690  0416                     	;# 
   691  0417                     	;# 
   692  041C                     	;# 
   693  041D                     	;# 
   694  041E                     	;# 
   695  0FE4                     	;# 
   696  0FE5                     	;# 
   697  0FE6                     	;# 
   698  0FE7                     	;# 
   699  0FE8                     	;# 
   700  0FE9                     	;# 
   701  0FEA                     	;# 
   702  0FEB                     	;# 
   703  0FED                     	;# 
   704  0FEE                     	;# 
   705  0FEF                     	;# 
   706  0000                     	;# 
   707  0001                     	;# 
   708  0002                     	;# 
   709  0003                     	;# 
   710  0004                     	;# 
   711  0005                     	;# 
   712  0006                     	;# 
   713  0007                     	;# 
   714  0008                     	;# 
   715  0009                     	;# 
   716  000A                     	;# 
   717  000B                     	;# 
   718  000C                     	;# 
   719  000D                     	;# 
   720  0011                     	;# 
   721  0012                     	;# 
   722  0013                     	;# 
   723  0014                     	;# 
   724  0015                     	;# 
   725  0016                     	;# 
   726  0016                     	;# 
   727  0017                     	;# 
   728  0018                     	;# 
   729  0019                     	;# 
   730  001A                     	;# 
   731  001B                     	;# 
   732  001C                     	;# 
   733  001E                     	;# 
   734  001F                     	;# 
   735  008C                     	;# 
   736  008D                     	;# 
   737  0091                     	;# 
   738  0092                     	;# 
   739  0093                     	;# 
   740  0094                     	;# 
   741  0095                     	;# 
   742  0096                     	;# 
   743  0097                     	;# 
   744  0098                     	;# 
   745  0099                     	;# 
   746  009A                     	;# 
   747  009B                     	;# 
   748  009B                     	;# 
   749  009C                     	;# 
   750  009D                     	;# 
   751  009E                     	;# 
   752  010C                     	;# 
   753  010D                     	;# 
   754  0111                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0115                     	;# 
   759  0116                     	;# 
   760  0117                     	;# 
   761  0118                     	;# 
   762  0119                     	;# 
   763  011A                     	;# 
   764  011B                     	;# 
   765  011D                     	;# 
   766  011E                     	;# 
   767  018C                     	;# 
   768  018D                     	;# 
   769  0191                     	;# 
   770  0191                     	;# 
   771  0192                     	;# 
   772  0193                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0194                     	;# 
   776  0195                     	;# 
   777  0196                     	;# 
   778  0199                     	;# 
   779  019A                     	;# 
   780  019B                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019C                     	;# 
   785  019C                     	;# 
   786  019D                     	;# 
   787  019E                     	;# 
   788  019F                     	;# 
   789  020C                     	;# 
   790  020D                     	;# 
   791  0211                     	;# 
   792  0211                     	;# 
   793  0212                     	;# 
   794  0212                     	;# 
   795  0213                     	;# 
   796  0213                     	;# 
   797  0214                     	;# 
   798  0214                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0216                     	;# 
   803  0216                     	;# 
   804  0217                     	;# 
   805  0217                     	;# 
   806  0219                     	;# 
   807  021A                     	;# 
   808  021B                     	;# 
   809  021C                     	;# 
   810  021D                     	;# 
   811  021E                     	;# 
   812  021F                     	;# 
   813  0291                     	;# 
   814  0291                     	;# 
   815  0292                     	;# 
   816  0293                     	;# 
   817  0294                     	;# 
   818  0295                     	;# 
   819  0295                     	;# 
   820  0296                     	;# 
   821  0298                     	;# 
   822  0298                     	;# 
   823  0299                     	;# 
   824  029A                     	;# 
   825  029B                     	;# 
   826  029C                     	;# 
   827  029C                     	;# 
   828  029D                     	;# 
   829  029E                     	;# 
   830  029E                     	;# 
   831  0311                     	;# 
   832  0311                     	;# 
   833  0312                     	;# 
   834  0313                     	;# 
   835  0318                     	;# 
   836  0318                     	;# 
   837  0319                     	;# 
   838  031A                     	;# 
   839  0394                     	;# 
   840  0395                     	;# 
   841  0396                     	;# 
   842  039A                     	;# 
   843  039C                     	;# 
   844  039D                     	;# 
   845  039E                     	;# 
   846  039F                     	;# 
   847  0415                     	;# 
   848  0416                     	;# 
   849  0417                     	;# 
   850  041C                     	;# 
   851  041D                     	;# 
   852  041E                     	;# 
   853  0FE4                     	;# 
   854  0FE5                     	;# 
   855  0FE6                     	;# 
   856  0FE7                     	;# 
   857  0FE8                     	;# 
   858  0FE9                     	;# 
   859  0FEA                     	;# 
   860  0FEB                     	;# 
   861  0FED                     	;# 
   862  0FEE                     	;# 
   863  0FEF                     	;# 
   864                           
   865                           	psect	idataBANK1
   866  0630                     __pidataBANK1:	
   867                           
   868                           ;initializer for main@F3055
   869  0630  3413               	retlw	19
   870  0631  3462               	retlw	98
   871  0632  3405               	retlw	5
   872  0633  3406               	retlw	6
   873  000D                     _PORTB	set	13
   874  000C                     _PORTA	set	12
   875  00A1                     _BCL2IF	set	161
   876  00A0                     _SSP2IF	set	160
   877  005F                     _GIE	set	95
   878  005E                     _PEIE	set	94
   879  0064                     _RA4	set	100
   880  0063                     _RA3	set	99
   881  008D                     _TRISB	set	141
   882  008C                     _TRISA	set	140
   883  0099                     _OSCCON	set	153
   884  04A1                     _BCL2IE	set	1185
   885  04A0                     _SSP2IE	set	1184
   886  011E                     _APFCON1	set	286
   887  011D                     _APFCON0	set	285
   888  018D                     _ANSELB	set	397
   889  018C                     _ANSELA	set	396
   890  0219                     _SSP2BUF	set	537
   891  021C                     _SSP2STATbits	set	540
   892  021B                     _SSP2MSK	set	539
   893  021E                     _SSP2CON2bits	set	542
   894  021D                     _SSP2CON1bits	set	541
   895  021A                     _SSP2ADD	set	538
   896  021C                     _SSP2STAT	set	540
   897  021D                     _SSP2CON1	set	541
   898                           
   899                           	psect	stringtext
   900  0541                     __pstringtext:	
   901  0541                     STR_1:	
   902  0541  3425               	retlw	37	;'%'
   903  0542  3464               	retlw	100	;'d'
   904  0543  3420               	retlw	32	;' '
   905  0544  3425               	retlw	37	;'%'
   906  0545  3464               	retlw	100	;'d'
   907  0546  3420               	retlw	32	;' '
   908  0547  3425               	retlw	37	;'%'
   909  0548  3464               	retlw	100	;'d'
   910  0549  3420               	retlw	32	;' '
   911  054A  3425               	retlw	37	;'%'
   912  054B  3464               	retlw	100	;'d'
   913  054C  3400               	retlw	0
   914  054D                     STR_3:	
   915  054D  3425               	retlw	37	;'%'
   916  054E  3430               	retlw	48	;'0'
   917  054F  3438               	retlw	56	;'8'
   918  0550  346C               	retlw	108	;'l'
   919  0551  3458               	retlw	88	;'X'
   920  0552  3420               	retlw	32	;' '
   921  0553  3400               	retlw	0
   922  0554                     STR_6:	
   923  0554  3420               	retlw	32	;' '
   924  0555  3425               	retlw	37	;'%'
   925  0556  3430               	retlw	48	;'0'
   926  0557  3438               	retlw	56	;'8'
   927  0558  344C               	retlw	76	;'L'
   928  0559  3458               	retlw	88	;'X'
   929  055A  3400               	retlw	0
   930  055B                     STR_4:	
   931  055B  3420               	retlw	32	;' '
   932  055C  3425               	retlw	37	;'%'
   933  055D  3430               	retlw	48	;'0'
   934  055E  3432               	retlw	50	;'2'
   935  055F  3458               	retlw	88	;'X'
   936  0560  3400               	retlw	0
   937  0561                     STR_5:	
   938  0561  3420               	retlw	32	;' '
   939  0562  3425               	retlw	37	;'%'
   940  0563  3430               	retlw	48	;'0'
   941  0564  3434               	retlw	52	;'4'
   942  0565  3458               	retlw	88	;'X'
   943  0566  3400               	retlw	0
   944  0567                     STR_2:	
   945  0567  340D               	retlw	13
   946  0568  3400               	retlw	0
   947                           
   948                           ; #config settings
   949  0000                     
   950                           	psect	cinit
   951  0012                     start_initialization:	
   952  0012                     __initialization:	
   953                           
   954                           ; Initialize objects allocated to BANK1
   955  0012  0021               	movlb	1	; select bank1
   956  0013  3186  2630  3180   	fcall	__pidataBANK1	;fetch initializer
   957  0016  00CB               	movwf	__pdataBANK1& (0+127)
   958  0017  3186  2631  3180   	fcall	__pidataBANK1+1	;fetch initializer
   959  001A  00CC               	movwf	(__pdataBANK1+1)& (0+127)
   960  001B  3186  2632  3180   	fcall	__pidataBANK1+2	;fetch initializer
   961  001E  00CD               	movwf	(__pdataBANK1+2)& (0+127)
   962  001F  3186  2633  3180   	fcall	__pidataBANK1+3	;fetch initializer
   963  0022  00CE               	movwf	(__pdataBANK1+3)& (0+127)
   964                           
   965                           ; Clear objects allocated to COMMON
   966  0023  01FB               	clrf	__pbssCOMMON& (0+127)
   967                           
   968                           ; Clear objects allocated to BANK0
   969  0024  0020               	movlb	0	; select bank0
   970  0025  01E9               	clrf	__pbssBANK0& (0+127)
   971  0026  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   972  0027  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   973  0028  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   974                           
   975                           ; Clear objects allocated to BANK1
   976  0029  30A0               	movlw	low __pbssBANK1
   977  002A  0084               	movwf	4
   978  002B  3000               	movlw	high __pbssBANK1
   979  002C  0085               	movwf	5
   980  002D  3023               	movlw	35
   981  002E  3186  2624  3180   	fcall	clear_ram0
   982                           
   983                           ; Clear objects allocated to BANK2
   984  0031  3020               	movlw	low __pbssBANK2
   985  0032  0084               	movwf	4
   986  0033  3001               	movlw	high __pbssBANK2
   987  0034  0085               	movwf	5
   988  0035  3023               	movlw	35
   989  0036  3186  2624         	fcall	clear_ram0
   990  0038                     end_of_initialization:	
   991                           ;End of C runtime variable initialization code
   992                           
   993  0038                     __end_of__initialization:	
   994  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   995  0039  0020               	movlb	0
   996  003A  3183  2B51         	ljmp	_main	;jump to C main() function
   997                           
   998                           	psect	bssCOMMON
   999  007B                     __pbssCOMMON:	
  1000  007B                     _outptr:	
  1001  007B                     	ds	1
  1002                           
  1003                           	psect	bssBANK0
  1004  0069                     __pbssBANK0:	
  1005  0069                     _xfunc_in:	
  1006  0069                     	ds	2
  1007  006B                     _xfunc_out:	
  1008  006B                     	ds	2
  1009                           
  1010                           	psect	bssBANK1
  1011  00A0                     __pbssBANK1:	
  1012  00A0                     _I2C2_Config:	
  1013  00A0                     	ds	35
  1014                           
  1015                           	psect	dataBANK1
  1016  00CB                     __pdataBANK1:	
  1017  00CB                     main@F3055:	
  1018  00CB                     	ds	4
  1019                           
  1020                           	psect	bssBANK2
  1021  0120                     __pbssBANK2:	
  1022  0120                     _I2C1_Config:	
  1023  0120                     	ds	35
  1024                           
  1025                           	psect	clrtext
  1026  0624                     clear_ram0:	
  1027                           ;	Called with FSR0 containing the base address, and
  1028                           ;	WREG with the size to clear
  1029                           
  1030  0624  0064               	clrwdt	;clear the watchdog before getting into this loop
  1031  0625                     clrloop0:	
  1032  0625  0180               	clrf	0	;clear RAM location pointed to by FSR
  1033  0626  3101               	addfsr 0,1
  1034  0627  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1035  0628  2E25               	goto	clrloop0	;have we reached the end yet?
  1036  0629  3400               	retlw	0	;all done for this memory range, return
  1037                           
  1038                           	psect	cstackBANK1
  1039  00C3                     __pcstackBANK1:	
  1040  00C3                     main@testdata:	
  1041                           
  1042                           ; 4 bytes @ 0x0
  1043  00C3                     	ds	4
  1044  00C7                     main@resultdata:	
  1045                           
  1046                           ; 4 bytes @ 0x4
  1047  00C7                     	ds	4
  1048                           
  1049                           	psect	cstackCOMMON
  1050  0070                     __pcstackCOMMON:	
  1051  0070                     ?_Basic_Init:	
  1052  0070                     ?_LCD_Init:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0070                     ?_I2C_CommonInterrupt:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0070                     ?_LCD_DisplayClear:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0070                     ?_I2C2_Interrupt:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0070                     ??_I2C2_Interrupt:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0070                     ?_main:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0070                     ?_hand:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0070                     ?_LCD_WriteData:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0070                     ?_xputc:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0070                     ?_xputs:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0070                     ?_I2C2_PinInit:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085                           
  1086                           ; 1 bytes @ 0x0
  1087  0070                     	ds	1
  1088  0071                     ??_I2C_CommonInterrupt:	
  1089  0071                     ??_hand:	
  1090                           ; 1 bytes @ 0x1
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0x1
  1094  0071                     	ds	1
  1095  0072                     ??_Basic_Init:	
  1096  0072                     ?_I2C2_Transmit:	
  1097                           ; 1 bytes @ 0x2
  1098                           
  1099  0072                     ??_LCD_WriteData:	
  1100                           ; 1 bytes @ 0x2
  1101                           
  1102  0072                     ??_I2C2_PinInit:	
  1103                           ; 1 bytes @ 0x2
  1104                           
  1105  0072                     ?___wmul:	
  1106                           ; 1 bytes @ 0x2
  1107                           
  1108  0072                     ?___lldiv:	
  1109                           ; 2 bytes @ 0x2
  1110                           
  1111  0072                     ?___llmod:	
  1112                           ; 4 bytes @ 0x2
  1113                           
  1114  0072                     I2C2_Transmit@pData:	
  1115                           ; 4 bytes @ 0x2
  1116                           
  1117  0072                     ___wmul@multiplier:	
  1118                           ; 1 bytes @ 0x2
  1119                           
  1120  0072                     ___lldiv@divisor:	
  1121                           ; 2 bytes @ 0x2
  1122                           
  1123  0072                     ___llmod@divisor:	
  1124                           ; 4 bytes @ 0x2
  1125                           
  1126                           
  1127                           ; 4 bytes @ 0x2
  1128  0072                     	ds	1
  1129  0073                     ?_I2C2_Setting:	
  1130  0073                     I2C2_Setting@mode:	
  1131                           ; 1 bytes @ 0x3
  1132                           
  1133  0073                     I2C2_Transmit@size:	
  1134                           ; 1 bytes @ 0x3
  1135                           
  1136                           
  1137                           ; 1 bytes @ 0x3
  1138  0073                     	ds	1
  1139  0074                     ??_I2C2_Transmit:	
  1140  0074                     LCD_WriteData@point:	
  1141                           ; 1 bytes @ 0x4
  1142                           
  1143  0074                     I2C2_Setting@Speed:	
  1144                           ; 1 bytes @ 0x4
  1145                           
  1146  0074                     ___wmul@multiplicand:	
  1147                           ; 1 bytes @ 0x4
  1148                           
  1149                           
  1150                           ; 2 bytes @ 0x4
  1151  0074                     	ds	1
  1152  0075                     ?_LCD_Put:	
  1153  0075                     ?_LCD_CursorPosition:	
  1154                           ; 1 bytes @ 0x5
  1155                           
  1156  0075                     ??_LCD_DisplayClear:	
  1157                           ; 1 bytes @ 0x5
  1158                           
  1159  0075                     ??_I2C2_Setting:	
  1160                           ; 1 bytes @ 0x5
  1161                           
  1162  0075                     LCD_Put@word:	
  1163                           ; 1 bytes @ 0x5
  1164                           
  1165  0075                     LCD_CursorPosition@ty:	
  1166                           ; 1 bytes @ 0x5
  1167                           
  1168                           
  1169                           ; 1 bytes @ 0x5
  1170  0075                     	ds	1
  1171  0076                     ??_LCD_Init:	
  1172  0076                     ??_LCD_Put:	
  1173                           ; 1 bytes @ 0x6
  1174                           
  1175  0076                     ??_LCD_CursorPosition:	
  1176                           ; 1 bytes @ 0x6
  1177                           
  1178  0076                     ??_xputc:	
  1179                           ; 1 bytes @ 0x6
  1180                           
  1181  0076                     ??___wmul:	
  1182                           ; 1 bytes @ 0x6
  1183                           
  1184  0076                     I2C2_Setting@address:	
  1185                           ; 1 bytes @ 0x6
  1186                           
  1187  0076                     I2C2_Transmit@address:	
  1188                           ; 1 bytes @ 0x6
  1189                           
  1190  0076                     ___wmul@product:	
  1191                           ; 1 bytes @ 0x6
  1192                           
  1193  0076                     ___lldiv@dividend:	
  1194                           ; 2 bytes @ 0x6
  1195                           
  1196  0076                     ___llmod@dividend:	
  1197                           ; 4 bytes @ 0x6
  1198                           
  1199                           
  1200                           ; 4 bytes @ 0x6
  1201  0076                     	ds	1
  1202  0077                     ?_I2C_Init:	
  1203  0077                     LCD_CursorPosition@tx:	
  1204                           ; 1 bytes @ 0x7
  1205                           
  1206  0077                     xputc@c:	
  1207                           ; 1 bytes @ 0x7
  1208                           
  1209  0077                     I2C_Init@address:	
  1210                           ; 1 bytes @ 0x7
  1211                           
  1212  0077                     I2C2_Transmit@i:	
  1213                           ; 1 bytes @ 0x7
  1214                           
  1215                           
  1216                           ; 1 bytes @ 0x7
  1217  0077                     	ds	1
  1218  0078                     ??_xputs:	
  1219  0078                     I2C_Init@mode:	
  1220                           ; 1 bytes @ 0x8
  1221                           
  1222  0078                     I2C2_Transmit@i_460:	
  1223                           ; 1 bytes @ 0x8
  1224                           
  1225                           
  1226                           ; 1 bytes @ 0x8
  1227  0078                     	ds	1
  1228  0079                     xputs@str:	
  1229  0079                     I2C_Init@Speed:	
  1230                           ; 1 bytes @ 0x9
  1231                           
  1232  0079                     I2C2_Transmit@result:	
  1233                           ; 1 bytes @ 0x9
  1234                           
  1235                           
  1236                           ; 1 bytes @ 0x9
  1237  0079                     	ds	1
  1238  007A                     ??___lldiv:	
  1239  007A                     ??___llmod:	
  1240                           ; 1 bytes @ 0xA
  1241                           
  1242  007A                     I2C_Init@I2Cx:	
  1243                           ; 1 bytes @ 0xA
  1244                           
  1245                           
  1246                           ; 1 bytes @ 0xA
  1247  007A                     	ds	1
  1248                           
  1249                           	psect	cstackBANK0
  1250  0020                     __pcstackBANK0:	
  1251  0020                     ??_I2C_Init:	
  1252  0020                     ?_I2C_Transmit:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0020                     I2C_Transmit@address:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0020                     ___llmod@counter:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0020                     ___lldiv@quotient:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264                           
  1265                           ; 4 bytes @ 0x0
  1266  0020                     	ds	1
  1267  0021                     I2C_Transmit@pData:	
  1268                           
  1269                           ; 1 bytes @ 0x1
  1270  0021                     	ds	1
  1271  0022                     I2C_Transmit@size:	
  1272                           
  1273                           ; 1 bytes @ 0x2
  1274  0022                     	ds	1
  1275  0023                     ??_I2C_Transmit:	
  1276                           
  1277                           ; 1 bytes @ 0x3
  1278  0023                     	ds	1
  1279  0024                     ___lldiv@counter:	
  1280                           
  1281                           ; 1 bytes @ 0x4
  1282  0024                     	ds	1
  1283  0025                     ?_xvprintf:	
  1284  0025                     xvprintf@fmt:	
  1285                           ; 1 bytes @ 0x5
  1286                           
  1287                           
  1288                           ; 2 bytes @ 0x5
  1289  0025                     	ds	1
  1290  0026                     I2C_Transmit@I2Cx:	
  1291                           
  1292                           ; 1 bytes @ 0x6
  1293  0026                     	ds	1
  1294  0027                     xvprintf@arp:	
  1295  0027                     I2C_Transmit@result:	
  1296                           ; 1 bytes @ 0x7
  1297                           
  1298                           
  1299                           ; 1 bytes @ 0x7
  1300  0027                     	ds	1
  1301  0028                     ??_xvprintf:	
  1302                           
  1303                           ; 1 bytes @ 0x8
  1304  0028                     	ds	4
  1305  002C                     xvprintf@s:	
  1306                           
  1307                           ; 16 bytes @ 0xC
  1308  002C                     	ds	16
  1309  003C                     _xvprintf$189:	
  1310                           
  1311                           ; 4 bytes @ 0x1C
  1312  003C                     	ds	4
  1313  0040                     _xvprintf$190:	
  1314                           
  1315                           ; 2 bytes @ 0x20
  1316  0040                     	ds	2
  1317  0042                     _xvprintf$191:	
  1318                           
  1319                           ; 2 bytes @ 0x22
  1320  0042                     	ds	2
  1321  0044                     xvprintf@p:	
  1322                           
  1323                           ; 1 bytes @ 0x24
  1324  0044                     	ds	1
  1325  0045                     xvprintf@r:	
  1326                           
  1327                           ; 2 bytes @ 0x25
  1328  0045                     	ds	2
  1329  0047                     xvprintf@w:	
  1330                           
  1331                           ; 2 bytes @ 0x27
  1332  0047                     	ds	2
  1333  0049                     xvprintf@j:	
  1334                           
  1335                           ; 2 bytes @ 0x29
  1336  0049                     	ds	2
  1337  004B                     xvprintf@v:	
  1338                           
  1339                           ; 4 bytes @ 0x2B
  1340  004B                     	ds	4
  1341  004F                     xvprintf@f:	
  1342                           
  1343                           ; 2 bytes @ 0x2F
  1344  004F                     	ds	2
  1345  0051                     xvprintf@i:	
  1346                           
  1347                           ; 2 bytes @ 0x31
  1348  0051                     	ds	2
  1349  0053                     xvprintf@d:	
  1350                           
  1351                           ; 1 bytes @ 0x33
  1352  0053                     	ds	1
  1353  0054                     xvprintf@c:	
  1354                           
  1355                           ; 1 bytes @ 0x34
  1356  0054                     	ds	1
  1357  0055                     ?_xprintf:	
  1358  0055                     xprintf@fmt:	
  1359                           ; 1 bytes @ 0x35
  1360                           
  1361                           
  1362                           ; 2 bytes @ 0x35
  1363  0055                     	ds	10
  1364  005F                     ??_xprintf:	
  1365                           
  1366                           ; 1 bytes @ 0x3F
  1367  005F                     	ds	1
  1368  0060                     xprintf@arp:	
  1369                           
  1370                           ; 1 bytes @ 0x40
  1371  0060                     	ds	1
  1372  0061                     ??_main:	
  1373                           
  1374                           ; 1 bytes @ 0x41
  1375  0061                     	ds	8
  1376                           
  1377                           	psect	maintext
  1378  0351                     __pmaintext:	
  1379 ;;
  1380 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1381 ;;
  1382 ;; *************** function _main *****************
  1383 ;; Defined at:
  1384 ;;		line 12 in file "main.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  resultdata      4    4[BANK1 ] unsigned char [4]
  1389 ;;  testdata        4    0[BANK1 ] unsigned char [4]
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      char 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : B1F/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1399 ;;      Params:         0       0       0       0       0       0
  1400 ;;      Locals:         0       0       8       0       0       0
  1401 ;;      Temps:          0       8       0       0       0       0
  1402 ;;      Totals:         0       8       8       0       0       0
  1403 ;;Total ram usage:       16 bytes
  1404 ;; Hardware stack levels required when called:    9
  1405 ;; This function calls:
  1406 ;;		_Basic_Init
  1407 ;;		_I2C_Init
  1408 ;;		_I2C_Transmit
  1409 ;;		_LCD_CursorPosition
  1410 ;;		_LCD_Init
  1411 ;;		_xprintf
  1412 ;; This function is called by:
  1413 ;;		Startup code after reset
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _main
  1419  0351                     _main:	
  1420                           
  1421                           ;main.c: 14: Basic_Init();
  1422                           
  1423                           ;incstack = 0
  1424                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1425  0351  3185  25D2  3183   	fcall	_Basic_Init
  1426                           
  1427                           ;main.c: 15: I2C_Init(I2C2_MODULE,0x56,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  1428  0354  3056               	movlw	86
  1429  0355  0020               	movlb	0	; select bank0
  1430  0356  00E1               	movwf	??_main
  1431  0357  0861               	movf	??_main,w
  1432  0358  00F7               	movwf	I2C_Init@address
  1433  0359  01F8               	clrf	I2C_Init@mode
  1434  035A  01F9               	clrf	I2C_Init@Speed
  1435  035B  3001               	movlw	1
  1436  035C  3185  25A2  3183   	fcall	_I2C_Init
  1437                           
  1438                           ;main.c: 16: LCD_Init();
  1439  035F  3182  22E8  3183   	fcall	_LCD_Init
  1440                           
  1441                           ;main.c: 17: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  1442  0362  302A               	movlw	low _LCD_Put
  1443  0363  0020               	movlb	0	; select bank0
  1444  0364  00EB               	movwf	_xfunc_out
  1445  0365  3006               	movlw	high _LCD_Put
  1446  0366  00EC               	movwf	_xfunc_out+1
  1447                           
  1448                           ;main.c: 19: uint8_t testdata[4]={
  1449                           ;main.c: 20: 19,98,05,06
  1450                           ;main.c: 21: };
  1451  0367  0021               	movlb	1	; select bank1
  1452  0368  084E               	movf	(main@F3055+3)^(0+128),w
  1453  0369  00C6               	movwf	(main@testdata+3)^(0+128)
  1454  036A  084D               	movf	(main@F3055+2)^(0+128),w
  1455  036B  00C5               	movwf	(main@testdata+2)^(0+128)
  1456  036C  084C               	movf	(main@F3055+1)^(0+128),w
  1457  036D  00C4               	movwf	(main@testdata+1)^(0+128)
  1458  036E  084B               	movf	main@F3055^(0+128),w
  1459  036F  00C3               	movwf	main@testdata^(0+128)
  1460  0370                     l2756:	
  1461                           ;main.c: 22: uint8_t resultdata[4];
  1462                           ;main.c: 24: while(1)
  1463                           
  1464                           
  1465                           ;main.c: 25: {
  1466                           ;main.c: 26: resultdata[0] = I2C_Transmit(I2C2_MODULE,0x56,testdata,4);
  1467  0370  3056               	movlw	86
  1468  0371  0020               	movlb	0	; select bank0
  1469  0372  00E1               	movwf	??_main
  1470  0373  0861               	movf	??_main,w
  1471  0374  00A0               	movwf	I2C_Transmit@address
  1472  0375  30C3               	movlw	(low (main@testdata| 0))& (0+255)
  1473  0376  00E2               	movwf	??_main+1
  1474  0377  0862               	movf	??_main+1,w
  1475  0378  00A1               	movwf	I2C_Transmit@pData
  1476  0379  3004               	movlw	4
  1477  037A  00E3               	movwf	??_main+2
  1478  037B  0863               	movf	??_main+2,w
  1479  037C  00A2               	movwf	I2C_Transmit@size
  1480  037D  3001               	movlw	1
  1481  037E  3185  2569  3183   	fcall	_I2C_Transmit
  1482  0381  0020               	movlb	0	; select bank0
  1483  0382  00E4               	movwf	??_main+3
  1484  0383  0864               	movf	??_main+3,w
  1485  0384  0021               	movlb	1	; select bank1
  1486  0385  00C7               	movwf	main@resultdata^(0+128)
  1487                           
  1488                           ;main.c: 28: LCD_CursorPosition(0,0);
  1489  0386  01F5               	clrf	LCD_CursorPosition@ty
  1490  0387  3000               	movlw	0
  1491  0388  3185  25BD  3183   	fcall	_LCD_CursorPosition
  1492                           
  1493                           ;main.c: 29: xprintf("%d %d %d %d",resultdata[0],resultdata[1],resultdata[2],resultdata[
      +                          3]);
  1494  038B  3041               	movlw	low (STR_1| (0+32768))
  1495  038C  0020               	movlb	0	; select bank0
  1496  038D  00D5               	movwf	xprintf@fmt
  1497  038E  3085               	movlw	high (STR_1| (0+32768))
  1498  038F  00D6               	movwf	xprintf@fmt+1
  1499  0390  0021               	movlb	1	; select bank1
  1500  0391  0847               	movf	main@resultdata^(0+128),w
  1501  0392  0020               	movlb	0	; select bank0
  1502  0393  00E1               	movwf	??_main
  1503  0394  01E2               	clrf	??_main+1
  1504  0395  0861               	movf	??_main,w
  1505  0396  00D7               	movwf	?_xprintf+2
  1506  0397  0862               	movf	??_main+1,w
  1507  0398  00D8               	movwf	?_xprintf+3
  1508  0399  0021               	movlb	1	; select bank1
  1509  039A  0848               	movf	(main@resultdata^(0+128)+1),w
  1510  039B  0020               	movlb	0	; select bank0
  1511  039C  00E3               	movwf	??_main+2
  1512  039D  01E4               	clrf	??_main+3
  1513  039E  0863               	movf	??_main+2,w
  1514  039F  00D9               	movwf	?_xprintf+4
  1515  03A0  0864               	movf	??_main+3,w
  1516  03A1  00DA               	movwf	?_xprintf+5
  1517  03A2  0021               	movlb	1	; select bank1
  1518  03A3  0849               	movf	(main@resultdata^(0+128)+2),w
  1519  03A4  0020               	movlb	0	; select bank0
  1520  03A5  00E5               	movwf	??_main+4
  1521  03A6  01E6               	clrf	??_main+5
  1522  03A7  0865               	movf	??_main+4,w
  1523  03A8  00DB               	movwf	?_xprintf+6
  1524  03A9  0866               	movf	??_main+5,w
  1525  03AA  00DC               	movwf	?_xprintf+7
  1526  03AB  0021               	movlb	1	; select bank1
  1527  03AC  084A               	movf	(main@resultdata^(0+128)+3),w
  1528  03AD  0020               	movlb	0	; select bank0
  1529  03AE  00E7               	movwf	??_main+6
  1530  03AF  01E8               	clrf	??_main+7
  1531  03B0  0867               	movf	??_main+6,w
  1532  03B1  00DD               	movwf	?_xprintf+8
  1533  03B2  0868               	movf	??_main+7,w
  1534  03B3  00DE               	movwf	?_xprintf+9
  1535  03B4  3185  25FA  3183   	fcall	_xprintf
  1536  03B7  2B70               	goto	l2756
  1537  03B8                     __end_of_main:	
  1538                           ;main.c: 30: }
  1539                           ;main.c: 31: return 0;
  1540                           ;	Return value of _main is never used
  1541                           
  1542                           
  1543                           	psect	text1
  1544  05FA                     __ptext1:	
  1545 ;; *************** function _xprintf *****************
  1546 ;; Defined at:
  1547 ;;		line 165 in file "xprintf.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  1550 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  1551 ;;		 -> STR_1(12), 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  arp             1   64[BANK0 ] PTR void [1]
  1554 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1564 ;;      Params:         0      10       0       0       0       0
  1565 ;;      Locals:         0       1       0       0       0       0
  1566 ;;      Temps:          0       1       0       0       0       0
  1567 ;;      Totals:         0      12       0       0       0       0
  1568 ;;Total ram usage:       12 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    8
  1571 ;; This function calls:
  1572 ;;		_xvprintf
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;;		_put_dump
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           
  1580                           ;psect for function _xprintf
  1581  05FA                     _xprintf:	
  1582                           
  1583                           ;xprintf.c: 170: va_list arp;
  1584                           ;xprintf.c: 173: *arp = __va_start();
  1585                           
  1586                           ;incstack = 0
  1587                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1588  05FA  3057               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  1589  05FB  0020               	movlb	0	; select bank0
  1590  05FC  00DF               	movwf	??_xprintf
  1591  05FD  085F               	movf	??_xprintf,w
  1592  05FE  00E0               	movwf	xprintf@arp
  1593                           
  1594                           ;xprintf.c: 174: xvprintf(fmt, arp);
  1595  05FF  0856               	movf	xprintf@fmt+1,w
  1596  0600  00A6               	movwf	xvprintf@fmt+1
  1597  0601  0855               	movf	xprintf@fmt,w
  1598  0602  00A5               	movwf	xvprintf@fmt
  1599  0603  3060               	movlw	(low (xprintf@arp| 0))& (0+255)
  1600  0604  00DF               	movwf	??_xprintf
  1601  0605  085F               	movf	??_xprintf,w
  1602  0606  00A7               	movwf	xvprintf@arp
  1603  0607  3180  203C         	fcall	_xvprintf
  1604  0609  0008               	return
  1605  060A                     __end_of_xprintf:	
  1606                           
  1607                           	psect	text2
  1608  003C                     __ptext2:	
  1609 ;; *************** function _xvprintf *****************
  1610 ;; Defined at:
  1611 ;;		line 88 in file "xprintf.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  fmt             2    5[BANK0 ] PTR const unsigned char 
  1614 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  1615 ;;		 -> STR_1(12), 
  1616 ;;  arp             1    7[BANK0 ] PTR PTR void 
  1617 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  s              16   12[BANK0 ] unsigned char [16]
  1620 ;;  v               4   43[BANK0 ] unsigned long 
  1621 ;;  i               2   49[BANK0 ] unsigned int 
  1622 ;;  f               2   47[BANK0 ] unsigned int 
  1623 ;;  j               2   41[BANK0 ] unsigned int 
  1624 ;;  w               2   39[BANK0 ] unsigned int 
  1625 ;;  r               2   37[BANK0 ] unsigned int 
  1626 ;;  c               1   52[BANK0 ] unsigned char 
  1627 ;;  d               1   51[BANK0 ] unsigned char 
  1628 ;;  p               1   36[BANK0 ] PTR unsigned char 
  1629 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1639 ;;      Params:         0       3       0       0       0       0
  1640 ;;      Locals:         0      41       0       0       0       0
  1641 ;;      Temps:          0       4       0       0       0       0
  1642 ;;      Totals:         0      48       0       0       0       0
  1643 ;;Total ram usage:       48 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    7
  1646 ;; This function calls:
  1647 ;;		___lldiv
  1648 ;;		___llmod
  1649 ;;		___wmul
  1650 ;;		_xputc
  1651 ;;		_xputs
  1652 ;; This function is called by:
  1653 ;;		_xprintf
  1654 ;;		_xsprintf
  1655 ;;		_xfprintf
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function _xvprintf
  1661  003C                     _xvprintf:	
  1662  003C                     l119:	
  1663                           ;incstack = 0
  1664                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1665                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  1666                           ;xprintf.c: 94: unsigned long v;
  1667                           ;xprintf.c: 95: char s[16], c, d, *p;
  1668                           ;xprintf.c: 98: for (;;) {
  1669                           
  1670                           
  1671                           ;xprintf.c: 99: c = *fmt++;
  1672  003C  0020               	movlb	0	; select bank0
  1673  003D  0825               	movf	xvprintf@fmt,w
  1674  003E  0084               	movwf	4
  1675  003F  0826               	movf	xvprintf@fmt+1,w
  1676  0040  0085               	movwf	5
  1677  0041  0800               	movf	0,w	;code access
  1678  0042  00A8               	movwf	??_xvprintf
  1679  0043  0828               	movf	??_xvprintf,w
  1680  0044  00D4               	movwf	xvprintf@c
  1681  0045  3001               	movlw	1
  1682  0046  07A5               	addwf	xvprintf@fmt,f
  1683  0047  3000               	movlw	0
  1684  0048  3DA6               	addwfc	xvprintf@fmt+1,f
  1685                           
  1686                           ;xprintf.c: 100: if (!c) break;
  1687  0049  0854               	movf	xvprintf@c,w
  1688  004A  1903               	btfsc	3,2
  1689  004B  0008               	return
  1690                           
  1691                           ;xprintf.c: 101: if (c != '%') {
  1692  004C  3025               	movlw	37
  1693  004D  0654               	xorwf	xvprintf@c,w
  1694  004E  1903               	btfsc	3,2
  1695  004F  2855               	goto	l2484
  1696                           
  1697                           ;xprintf.c: 102: xputc(c); continue;
  1698  0050  0854               	movf	xvprintf@c,w
  1699  0051  3185  2514  3180   	fcall	_xputc
  1700  0054  283C               	goto	l119
  1701  0055                     l2484:	
  1702                           
  1703                           ;xprintf.c: 103: }
  1704                           ;xprintf.c: 104: f = 0;
  1705  0055  0020               	movlb	0	; select bank0
  1706  0056  01CF               	clrf	xvprintf@f
  1707  0057  01D0               	clrf	xvprintf@f+1
  1708                           
  1709                           ;xprintf.c: 105: c = *fmt++;
  1710  0058  0825               	movf	xvprintf@fmt,w
  1711  0059  0084               	movwf	4
  1712  005A  0826               	movf	xvprintf@fmt+1,w
  1713  005B  0085               	movwf	5
  1714  005C  0800               	movf	0,w	;code access
  1715  005D  00A8               	movwf	??_xvprintf
  1716  005E  0828               	movf	??_xvprintf,w
  1717  005F  00D4               	movwf	xvprintf@c
  1718  0060  3001               	movlw	1
  1719  0061  07A5               	addwf	xvprintf@fmt,f
  1720  0062  3000               	movlw	0
  1721  0063  3DA6               	addwfc	xvprintf@fmt+1,f
  1722                           
  1723                           ;xprintf.c: 106: if (c == '0') {
  1724  0064  3030               	movlw	48
  1725  0065  0654               	xorwf	xvprintf@c,w
  1726  0066  1D03               	btfss	3,2
  1727  0067  286A               	goto	l2498
  1728                           
  1729                           ;xprintf.c: 107: f = 1; c = *fmt++;
  1730  0068  3001               	movlw	1
  1731  0069  286F               	goto	L6
  1732  006A                     l2498:	
  1733                           ;xprintf.c: 108: } else {
  1734                           
  1735                           
  1736                           ;xprintf.c: 109: if (c == '-') {
  1737  006A  302D               	movlw	45
  1738  006B  0654               	xorwf	xvprintf@c,w
  1739  006C  1D03               	btfss	3,2
  1740  006D  287E               	goto	l2506
  1741                           
  1742                           ;xprintf.c: 110: f = 2; c = *fmt++;
  1743  006E  3002               	movlw	2
  1744  006F                     L6:	
  1745  006F  00CF               	movwf	xvprintf@f
  1746  0070  3000               	movlw	0
  1747  0071  00D0               	movwf	xvprintf@f+1
  1748  0072  0825               	movf	xvprintf@fmt,w
  1749  0073  0084               	movwf	4
  1750  0074  0826               	movf	xvprintf@fmt+1,w
  1751  0075  0085               	movwf	5
  1752  0076  0800               	movf	0,w	;code access
  1753  0077  00A8               	movwf	??_xvprintf
  1754  0078  0828               	movf	??_xvprintf,w
  1755  0079  00D4               	movwf	xvprintf@c
  1756  007A  3001               	movlw	1
  1757  007B  07A5               	addwf	xvprintf@fmt,f
  1758  007C  3000               	movlw	0
  1759  007D  3DA6               	addwfc	xvprintf@fmt+1,f
  1760  007E                     l2506:	
  1761                           
  1762                           ;xprintf.c: 111: }
  1763                           ;xprintf.c: 112: }
  1764                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  1765  007E  01C7               	clrf	xvprintf@w
  1766  007F  01C8               	clrf	xvprintf@w+1
  1767  0080  28A8               	goto	l2514
  1768  0081                     l2508:	
  1769                           
  1770                           ;xprintf.c: 114: w = w * 10 + c - '0';
  1771  0081  0854               	movf	xvprintf@c,w
  1772  0082  00A8               	movwf	??_xvprintf
  1773  0083  01A9               	clrf	??_xvprintf+1
  1774  0084  0848               	movf	xvprintf@w+1,w
  1775  0085  00F3               	movwf	___wmul@multiplier+1
  1776  0086  0847               	movf	xvprintf@w,w
  1777  0087  00F2               	movwf	___wmul@multiplier
  1778  0088  300A               	movlw	10
  1779  0089  00F4               	movwf	___wmul@multiplicand
  1780  008A  3000               	movlw	0
  1781  008B  00F5               	movwf	___wmul@multiplicand+1
  1782  008C  3185  2587  3180   	fcall	___wmul
  1783  008F  0020               	movlb	0	; select bank0
  1784  0090  0828               	movf	??_xvprintf,w
  1785  0091  0772               	addwf	?___wmul,w
  1786  0092  00AA               	movwf	??_xvprintf+2
  1787  0093  0829               	movf	??_xvprintf+1,w
  1788  0094  3D73               	addwfc	?___wmul+1,w
  1789  0095  00AB               	movwf	??_xvprintf+3
  1790  0096  082A               	movf	??_xvprintf+2,w
  1791  0097  3ED0               	addlw	208
  1792  0098  00C7               	movwf	xvprintf@w
  1793  0099  30FF               	movlw	255
  1794  009A  3D2B               	addwfc	??_xvprintf+3,w
  1795  009B  00C8               	movwf	xvprintf@w+1
  1796  009C  0825               	movf	xvprintf@fmt,w
  1797  009D  0084               	movwf	4
  1798  009E  0826               	movf	xvprintf@fmt+1,w
  1799  009F  0085               	movwf	5
  1800  00A0  0800               	movf	0,w	;code access
  1801  00A1  00A8               	movwf	??_xvprintf
  1802  00A2  0828               	movf	??_xvprintf,w
  1803  00A3  00D4               	movwf	xvprintf@c
  1804  00A4  3001               	movlw	1
  1805  00A5  07A5               	addwf	xvprintf@fmt,f
  1806  00A6  3000               	movlw	0
  1807  00A7  3DA6               	addwfc	xvprintf@fmt+1,f
  1808  00A8                     l2514:	
  1809  00A8  3030               	movlw	48
  1810  00A9  0254               	subwf	xvprintf@c,w
  1811  00AA  1C03               	skipc
  1812  00AB  28B0               	goto	l2518
  1813  00AC  303A               	movlw	58
  1814  00AD  0254               	subwf	xvprintf@c,w
  1815  00AE  1C03               	skipc
  1816  00AF  2881               	goto	l2508
  1817  00B0                     l2518:	
  1818                           
  1819                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  1820  00B0  306C               	movlw	108
  1821  00B1  0654               	xorwf	xvprintf@c,w
  1822  00B2  1903               	btfsc	3,2
  1823  00B3  28B8               	goto	l134
  1824  00B4  304C               	movlw	76
  1825  00B5  0654               	xorwf	xvprintf@c,w
  1826  00B6  1D03               	btfss	3,2
  1827  00B7  28C5               	goto	l2526
  1828  00B8                     l134:	
  1829                           
  1830                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  1831  00B8  154F               	bsf	xvprintf@f,2
  1832  00B9  0825               	movf	xvprintf@fmt,w
  1833  00BA  0084               	movwf	4
  1834  00BB  0826               	movf	xvprintf@fmt+1,w
  1835  00BC  0085               	movwf	5
  1836  00BD  0800               	movf	0,w	;code access
  1837  00BE  00A8               	movwf	??_xvprintf
  1838  00BF  0828               	movf	??_xvprintf,w
  1839  00C0  00D4               	movwf	xvprintf@c
  1840  00C1  3001               	movlw	1
  1841  00C2  07A5               	addwf	xvprintf@fmt,f
  1842  00C3  3000               	movlw	0
  1843  00C4  3DA6               	addwfc	xvprintf@fmt+1,f
  1844  00C5                     l2526:	
  1845                           
  1846                           ;xprintf.c: 117: }
  1847                           ;xprintf.c: 118: if (!c) break;
  1848  00C5  0854               	movf	xvprintf@c,w
  1849  00C6  1903               	btfsc	3,2
  1850  00C7  0008               	return
  1851                           
  1852                           ;xprintf.c: 119: d = c;
  1853  00C8  0854               	movf	xvprintf@c,w
  1854  00C9  00A8               	movwf	??_xvprintf
  1855  00CA  0828               	movf	??_xvprintf,w
  1856  00CB  00D3               	movwf	xvprintf@d
  1857                           
  1858                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  1859  00CC  3061               	movlw	97
  1860  00CD  0253               	subwf	xvprintf@d,w
  1861  00CE  1C03               	skipc
  1862  00CF  293B               	goto	l2568
  1863  00D0  3020               	movlw	32
  1864  00D1  02D3               	subwf	xvprintf@d,f
  1865                           
  1866                           ;xprintf.c: 121: switch (d) {
  1867  00D2  293B               	goto	l2568
  1868  00D3                     l2534:	
  1869                           ;xprintf.c: 122: case 'S' :
  1870                           
  1871                           
  1872                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  1873  00D3  0827               	movf	xvprintf@arp,w
  1874  00D4  0086               	movwf	6
  1875  00D5  0187               	clrf	7
  1876  00D6  3F40               	moviw [0]fsr1
  1877  00D7  0084               	movwf	4
  1878  00D8  0185               	clrf	5
  1879  00D9  0A81               	incf	1,f
  1880  00DA  0800               	movf	0,w
  1881  00DB  00A8               	movwf	??_xvprintf
  1882  00DC  0828               	movf	??_xvprintf,w
  1883  00DD  00C4               	movwf	xvprintf@p
  1884                           
  1885                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  1886  00DE  01C9               	clrf	xvprintf@j
  1887  00DF  01CA               	clrf	xvprintf@j+1
  1888  00E0                     l2540:	
  1889  00E0  0849               	movf	xvprintf@j,w
  1890  00E1  0744               	addwf	xvprintf@p,w
  1891  00E2  00A8               	movwf	??_xvprintf
  1892  00E3  0828               	movf	??_xvprintf,w
  1893  00E4  0086               	movwf	6
  1894  00E5  0187               	clrf	7
  1895  00E6  0801               	movf	1,w
  1896  00E7  1903               	btfsc	3,2
  1897  00E8  28F2               	goto	l2544
  1898  00E9  3001               	movlw	1
  1899  00EA  07C9               	addwf	xvprintf@j,f
  1900  00EB  3000               	movlw	0
  1901  00EC  3DCA               	addwfc	xvprintf@j+1,f
  1902  00ED  28E0               	goto	l2540
  1903  00EE                     l2542:	
  1904                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  1905                           
  1906  00EE  3020               	movlw	32
  1907  00EF  3185  2514  3180   	fcall	_xputc
  1908  00F2                     l2544:	
  1909  00F2  0020               	movlb	0	; select bank0
  1910  00F3  18CF               	btfsc	xvprintf@f,1
  1911  00F4  2904               	goto	l2548
  1912  00F5  084A               	movf	xvprintf@j+1,w
  1913  00F6  00A9               	movwf	??_xvprintf+1
  1914  00F7  0849               	movf	xvprintf@j,w
  1915  00F8  00A8               	movwf	??_xvprintf
  1916  00F9  0AC9               	incf	xvprintf@j,f
  1917  00FA  1903               	skipnz
  1918  00FB  0ACA               	incf	xvprintf@j+1,f
  1919  00FC  0848               	movf	xvprintf@w+1,w
  1920  00FD  0229               	subwf	??_xvprintf+1,w
  1921  00FE  1D03               	skipz
  1922  00FF  2902               	goto	u2475
  1923  0100  0847               	movf	xvprintf@w,w
  1924  0101  0228               	subwf	??_xvprintf,w
  1925  0102                     u2475:	
  1926  0102  1C03               	skipc
  1927  0103  28EE               	goto	l2542
  1928  0104                     l2548:	
  1929                           
  1930                           ;xprintf.c: 126: xputs(p);
  1931  0104  0844               	movf	xvprintf@p,w
  1932  0105  3185  25E7  3180   	fcall	_xputs
  1933  0108                     l2552:	
  1934                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  1935                           
  1936  0108  0020               	movlb	0	; select bank0
  1937  0109  084A               	movf	xvprintf@j+1,w
  1938  010A  00A9               	movwf	??_xvprintf+1
  1939  010B  0849               	movf	xvprintf@j,w
  1940  010C  00A8               	movwf	??_xvprintf
  1941  010D  0AC9               	incf	xvprintf@j,f
  1942  010E  1903               	skipnz
  1943  010F  0ACA               	incf	xvprintf@j+1,f
  1944  0110  0848               	movf	xvprintf@w+1,w
  1945  0111  0229               	subwf	??_xvprintf+1,w
  1946  0112  1D03               	skipz
  1947  0113  2916               	goto	u2485
  1948  0114  0847               	movf	xvprintf@w,w
  1949  0115  0228               	subwf	??_xvprintf,w
  1950  0116                     u2485:	
  1951  0116  1803               	btfsc	3,0
  1952  0117  283C               	goto	l119
  1953  0118  3020               	movlw	32
  1954  0119  3185  2514  3180   	fcall	_xputc
  1955  011C  2908               	goto	l2552
  1956  011D                     l2554:	
  1957                           ;xprintf.c: 129: case 'C' :
  1958                           
  1959                           ;xprintf.c: 128: continue;
  1960                           
  1961                           
  1962                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  1963  011D  0827               	movf	xvprintf@arp,w
  1964  011E  0086               	movwf	6
  1965  011F  0187               	clrf	7
  1966  0120  0801               	movf	1,w
  1967  0121  0084               	movwf	4
  1968  0122  0185               	clrf	5
  1969  0123  3002               	movlw	2
  1970  0124  0781               	addwf	1,f
  1971  0125  0800               	movf	0,w
  1972  0126  3185  2514  3180   	fcall	_xputc
  1973  0129  283C               	goto	l119
  1974  012A                     l2556:	
  1975                           ;xprintf.c: 131: case 'B' :
  1976                           
  1977                           
  1978                           ;xprintf.c: 132: r = 2; break;
  1979  012A  3002               	movlw	2
  1980  012B  0020               	movlb	0	; select bank0
  1981  012C  2932               	goto	L3
  1982  012D                     l2558:	
  1983                           ;xprintf.c: 133: case 'O' :
  1984                           
  1985                           
  1986                           ;xprintf.c: 134: r = 8; break;
  1987  012D  3008               	movlw	8
  1988  012E  2932               	goto	L3
  1989  012F                     l2560:	
  1990                           ;xprintf.c: 135: case 'D' :
  1991                           
  1992                           
  1993                           ;xprintf.c: 136: case 'U' :
  1994                           ;xprintf.c: 137: r = 10; break;
  1995  012F  300A               	movlw	10
  1996  0130  2932               	goto	L3
  1997  0131                     l2562:	
  1998                           ;xprintf.c: 138: case 'X' :
  1999                           
  2000                           
  2001                           ;xprintf.c: 139: r = 16; break;
  2002  0131  3010               	movlw	16
  2003  0132                     L3:	
  2004  0132  00C5               	movwf	xvprintf@r
  2005  0133  3000               	movlw	0
  2006  0134  00C6               	movwf	xvprintf@r+1
  2007  0135  2953               	goto	l152
  2008  0136                     l2564:	
  2009                           ;xprintf.c: 140: default:
  2010                           
  2011                           
  2012                           ;xprintf.c: 141: xputc(c); continue;
  2013  0136  0854               	movf	xvprintf@c,w
  2014  0137  3185  2514  3180   	fcall	_xputc
  2015  013A  283C               	goto	l119
  2016  013B                     l2568:	
  2017                           ;xprintf.c: 142: }
  2018                           
  2019  013B  0020               	movlb	0	; select bank0
  2020  013C  0853               	movf	xvprintf@d,w
  2021                           
  2022                           ; Switch size 1, requested type "space"
  2023                           ; Number of cases is 7, Range of values is 66 to 88
  2024                           ; switch strategies available:
  2025                           ; Name         Instructions Cycles
  2026                           ; simple_byte           22    12 (average)
  2027                           ; direct_byte           55     9 (fixed)
  2028                           ; jumptable            263     9 (fixed)
  2029                           ;	Chosen strategy is simple_byte
  2030  013D  3A42               	xorlw	66	; case 66
  2031  013E  1903               	skipnz
  2032  013F  292A               	goto	l2556
  2033  0140  3A01               	xorlw	1	; case 67
  2034  0141  1903               	skipnz
  2035  0142  291D               	goto	l2554
  2036  0143  3A07               	xorlw	7	; case 68
  2037  0144  1903               	skipnz
  2038  0145  292F               	goto	l2560
  2039  0146  3A0B               	xorlw	11	; case 79
  2040  0147  1903               	skipnz
  2041  0148  292D               	goto	l2558
  2042  0149  3A1C               	xorlw	28	; case 83
  2043  014A  1903               	skipnz
  2044  014B  28D3               	goto	l2534
  2045  014C  3A06               	xorlw	6	; case 85
  2046  014D  1903               	skipnz
  2047  014E  292F               	goto	l2560
  2048  014F  3A0D               	xorlw	13	; case 88
  2049  0150  1903               	skipnz
  2050  0151  2931               	goto	l2562
  2051  0152  2936               	goto	l2564
  2052  0153                     l152:	
  2053                           
  2054                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  2055  0153  0020               	movlb	0	; select bank0
  2056  0154  194F               	btfsc	xvprintf@f,2
  2057  0155  298B               	goto	l2578
  2058  0156  3044               	movlw	68
  2059  0157  0653               	xorwf	xvprintf@d,w
  2060  0158  1903               	btfsc	3,2
  2061  0159  296D               	goto	l2574
  2062  015A  0827               	movf	xvprintf@arp,w
  2063  015B  0086               	movwf	6
  2064  015C  0187               	clrf	7
  2065  015D  0801               	movf	1,w
  2066  015E  0084               	movwf	4
  2067  015F  0185               	clrf	5
  2068  0160  3002               	movlw	2
  2069  0161  0781               	addwf	1,f
  2070  0162  3F00               	moviw [0]fsr0
  2071  0163  00A8               	movwf	??_xvprintf
  2072  0164  3F01               	moviw [1]fsr0
  2073  0165  00A9               	movwf	??_xvprintf+1
  2074  0166  0828               	movf	??_xvprintf,w
  2075  0167  00BC               	movwf	_xvprintf$189
  2076  0168  0829               	movf	??_xvprintf+1,w
  2077  0169  00BD               	movwf	_xvprintf$189+1
  2078  016A  01BE               	clrf	_xvprintf$189+2
  2079  016B  01BF               	clrf	_xvprintf$189+3
  2080  016C  2982               	goto	l2576
  2081  016D                     l2574:	
  2082  016D  0827               	movf	xvprintf@arp,w
  2083  016E  0086               	movwf	6
  2084  016F  0187               	clrf	7
  2085  0170  0801               	movf	1,w
  2086  0171  0084               	movwf	4
  2087  0172  0185               	clrf	5
  2088  0173  3002               	movlw	2
  2089  0174  0781               	addwf	1,f
  2090  0175  3F00               	moviw [0]fsr0
  2091  0176  00A8               	movwf	??_xvprintf
  2092  0177  3F01               	moviw [1]fsr0
  2093  0178  00A9               	movwf	??_xvprintf+1
  2094  0179  0828               	movf	??_xvprintf,w
  2095  017A  00BC               	movwf	_xvprintf$189
  2096  017B  0829               	movf	??_xvprintf+1,w
  2097  017C  00BD               	movwf	_xvprintf$189+1
  2098  017D  0D89               	rlf	9,f
  2099  017E  3B89               	subwfb	9,f
  2100  017F  0989               	comf	9,f
  2101  0180  00BE               	movwf	_xvprintf$189+2
  2102  0181  00BF               	movwf	_xvprintf$189+3
  2103  0182                     l2576:	
  2104  0182  083F               	movf	_xvprintf$189+3,w
  2105  0183  00CE               	movwf	xvprintf@v+3
  2106  0184  083E               	movf	_xvprintf$189+2,w
  2107  0185  00CD               	movwf	xvprintf@v+2
  2108  0186  083D               	movf	_xvprintf$189+1,w
  2109  0187  00CC               	movwf	xvprintf@v+1
  2110  0188  083C               	movf	_xvprintf$189,w
  2111  0189  00CB               	movwf	xvprintf@v
  2112  018A  299B               	goto	l2580
  2113  018B                     l2578:	
  2114  018B  0827               	movf	xvprintf@arp,w
  2115  018C  0086               	movwf	6
  2116  018D  0187               	clrf	7
  2117  018E  0801               	movf	1,w
  2118  018F  0084               	movwf	4
  2119  0190  0185               	clrf	5
  2120  0191  3004               	movlw	4
  2121  0192  0781               	addwf	1,f
  2122  0193  3F00               	moviw [0]fsr0
  2123  0194  00CB               	movwf	xvprintf@v
  2124  0195  3F01               	moviw [1]fsr0
  2125  0196  00CC               	movwf	xvprintf@v+1
  2126  0197  3F02               	moviw [2]fsr0
  2127  0198  00CD               	movwf	xvprintf@v+2
  2128  0199  3F03               	moviw [3]fsr0
  2129  019A  00CE               	movwf	xvprintf@v+3
  2130  019B                     l2580:	
  2131                           
  2132                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  2133  019B  3044               	movlw	68
  2134  019C  0653               	xorwf	xvprintf@d,w
  2135  019D  1903               	btfsc	3,2
  2136  019E  1FCE               	btfss	xvprintf@v+3,7
  2137  019F  29AC               	goto	l2586
  2138                           
  2139                           ;xprintf.c: 147: v = 0 - v;
  2140  01A0  09CB               	comf	xvprintf@v,f
  2141  01A1  09CC               	comf	xvprintf@v+1,f
  2142  01A2  09CD               	comf	xvprintf@v+2,f
  2143  01A3  09CE               	comf	xvprintf@v+3,f
  2144  01A4  0ACB               	incf	xvprintf@v,f
  2145  01A5  1903               	skipnz
  2146  01A6  0ACC               	incf	xvprintf@v+1,f
  2147  01A7  1903               	skipnz
  2148  01A8  0ACD               	incf	xvprintf@v+2,f
  2149  01A9  1903               	skipnz
  2150  01AA  0ACE               	incf	xvprintf@v+3,f
  2151                           
  2152                           ;xprintf.c: 148: f |= 8;
  2153  01AB  15CF               	bsf	xvprintf@f,3
  2154  01AC                     l2586:	
  2155                           
  2156                           ;xprintf.c: 149: }
  2157                           ;xprintf.c: 150: i = 0;
  2158  01AC  01D1               	clrf	xvprintf@i
  2159  01AD  01D2               	clrf	xvprintf@i+1
  2160  01AE                     l2588:	
  2161                           ;xprintf.c: 151: do {
  2162                           
  2163                           
  2164                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  2165  01AE  0845               	movf	xvprintf@r,w
  2166  01AF  00F2               	movwf	___llmod@divisor
  2167  01B0  0846               	movf	xvprintf@r+1,w
  2168  01B1  00F3               	movwf	___llmod@divisor+1
  2169  01B2  01F4               	clrf	___llmod@divisor+2
  2170  01B3  01F5               	clrf	___llmod@divisor+3
  2171  01B4  084E               	movf	xvprintf@v+3,w
  2172  01B5  00F9               	movwf	___llmod@dividend+3
  2173  01B6  084D               	movf	xvprintf@v+2,w
  2174  01B7  00F8               	movwf	___llmod@dividend+2
  2175  01B8  084C               	movf	xvprintf@v+1,w
  2176  01B9  00F7               	movwf	___llmod@dividend+1
  2177  01BA  084B               	movf	xvprintf@v,w
  2178  01BB  00F6               	movwf	___llmod@dividend
  2179  01BC  3184  245F  3180   	fcall	___llmod
  2180  01BF  0872               	movf	?___llmod,w
  2181  01C0  0020               	movlb	0	; select bank0
  2182  01C1  00A8               	movwf	??_xvprintf
  2183  01C2  0828               	movf	??_xvprintf,w
  2184  01C3  00D3               	movwf	xvprintf@d
  2185  01C4  0845               	movf	xvprintf@r,w
  2186  01C5  00F2               	movwf	___lldiv@divisor
  2187  01C6  0846               	movf	xvprintf@r+1,w
  2188  01C7  00F3               	movwf	___lldiv@divisor+1
  2189  01C8  01F4               	clrf	___lldiv@divisor+2
  2190  01C9  01F5               	clrf	___lldiv@divisor+3
  2191  01CA  084E               	movf	xvprintf@v+3,w
  2192  01CB  00F9               	movwf	___lldiv@dividend+3
  2193  01CC  084D               	movf	xvprintf@v+2,w
  2194  01CD  00F8               	movwf	___lldiv@dividend+2
  2195  01CE  084C               	movf	xvprintf@v+1,w
  2196  01CF  00F7               	movwf	___lldiv@dividend+1
  2197  01D0  084B               	movf	xvprintf@v,w
  2198  01D1  00F6               	movwf	___lldiv@dividend
  2199  01D2  3184  240C  3180   	fcall	___lldiv
  2200  01D5  0875               	movf	?___lldiv+3,w
  2201  01D6  0020               	movlb	0	; select bank0
  2202  01D7  00CE               	movwf	xvprintf@v+3
  2203  01D8  0874               	movf	?___lldiv+2,w
  2204  01D9  00CD               	movwf	xvprintf@v+2
  2205  01DA  0873               	movf	?___lldiv+1,w
  2206  01DB  00CC               	movwf	xvprintf@v+1
  2207  01DC  0872               	movf	?___lldiv,w
  2208  01DD  00CB               	movwf	xvprintf@v
  2209                           
  2210                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  2211  01DE  300A               	movlw	10
  2212  01DF  0253               	subwf	xvprintf@d,w
  2213  01E0  1C03               	skipc
  2214  01E1  29F0               	goto	l2602
  2215  01E2  3078               	movlw	120
  2216  01E3  0654               	xorwf	xvprintf@c,w
  2217  01E4  1903               	btfsc	3,2
  2218  01E5  29E8               	goto	l2598
  2219  01E6  3007               	movlw	7
  2220  01E7  29E9               	goto	L4
  2221  01E8                     l2598:	
  2222  01E8  3027               	movlw	39
  2223  01E9                     L4:	
  2224  01E9  00C0               	movwf	_xvprintf$190
  2225  01EA  3000               	movlw	0
  2226  01EB  00C1               	movwf	_xvprintf$190+1
  2227  01EC  0840               	movf	_xvprintf$190,w
  2228  01ED  00A8               	movwf	??_xvprintf
  2229  01EE  0828               	movf	??_xvprintf,w
  2230  01EF  07D3               	addwf	xvprintf@d,f
  2231  01F0                     l2602:	
  2232                           
  2233                           ;xprintf.c: 154: s[i++] = d + '0';
  2234  01F0  0853               	movf	xvprintf@d,w
  2235  01F1  3E30               	addlw	48
  2236  01F2  00A8               	movwf	??_xvprintf
  2237  01F3  0851               	movf	xvprintf@i,w
  2238  01F4  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  2239  01F5  0086               	movwf	6
  2240  01F6  0187               	clrf	7
  2241  01F7  0828               	movf	??_xvprintf,w
  2242  01F8  0081               	movwf	1
  2243  01F9  3001               	movlw	1
  2244  01FA  07D1               	addwf	xvprintf@i,f
  2245  01FB  3000               	movlw	0
  2246  01FC  3DD2               	addwfc	xvprintf@i+1,f
  2247                           
  2248                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  2249  01FD  084E               	movf	xvprintf@v+3,w
  2250  01FE  044D               	iorwf	xvprintf@v+2,w
  2251  01FF  044C               	iorwf	xvprintf@v+1,w
  2252  0200  044B               	iorwf	xvprintf@v,w
  2253  0201  1903               	skipnz
  2254  0202  2A0A               	goto	l175
  2255  0203  3000               	movlw	0
  2256  0204  0252               	subwf	xvprintf@i+1,w
  2257  0205  3010               	movlw	16
  2258  0206  1903               	skipnz
  2259  0207  0251               	subwf	xvprintf@i,w
  2260  0208  1C03               	skipc
  2261  0209  29AE               	goto	l2588
  2262  020A                     l175:	
  2263                           
  2264                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  2265  020A  1DCF               	btfss	xvprintf@f,3
  2266  020B  2A18               	goto	l2614
  2267  020C  302D               	movlw	45
  2268  020D  00A8               	movwf	??_xvprintf
  2269  020E  0851               	movf	xvprintf@i,w
  2270  020F  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  2271  0210  0086               	movwf	6
  2272  0211  0187               	clrf	7
  2273  0212  0828               	movf	??_xvprintf,w
  2274  0213  0081               	movwf	1
  2275  0214  3001               	movlw	1
  2276  0215  07D1               	addwf	xvprintf@i,f
  2277  0216  3000               	movlw	0
  2278  0217  3DD2               	addwfc	xvprintf@i+1,f
  2279  0218                     l2614:	
  2280                           
  2281                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  2282  0218  0852               	movf	xvprintf@i+1,w
  2283  0219  00CA               	movwf	xvprintf@j+1
  2284  021A  0851               	movf	xvprintf@i,w
  2285  021B  00C9               	movwf	xvprintf@j
  2286  021C  184F               	btfsc	xvprintf@f,0
  2287  021D  2A20               	goto	l2620
  2288  021E  3020               	movlw	32
  2289  021F  2A21               	goto	L5
  2290  0220                     l2620:	
  2291  0220  3030               	movlw	48
  2292  0221                     L5:	
  2293  0221  00C2               	movwf	_xvprintf$191
  2294  0222  3000               	movlw	0
  2295  0223  00C3               	movwf	_xvprintf$191+1
  2296  0224  0842               	movf	_xvprintf$191,w
  2297  0225  00A8               	movwf	??_xvprintf
  2298  0226  0828               	movf	??_xvprintf,w
  2299  0227  00D3               	movwf	xvprintf@d
  2300                           
  2301                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  2302  0228  2A2D               	goto	l2624
  2303  0229                     l2622:	
  2304  0229  0853               	movf	xvprintf@d,w
  2305  022A  3185  2514  3180   	fcall	_xputc
  2306  022D                     l2624:	
  2307  022D  0020               	movlb	0	; select bank0
  2308  022E  18CF               	btfsc	xvprintf@f,1
  2309  022F  2A3F               	goto	l2628
  2310  0230  084A               	movf	xvprintf@j+1,w
  2311  0231  00A9               	movwf	??_xvprintf+1
  2312  0232  0849               	movf	xvprintf@j,w
  2313  0233  00A8               	movwf	??_xvprintf
  2314  0234  0AC9               	incf	xvprintf@j,f
  2315  0235  1903               	skipnz
  2316  0236  0ACA               	incf	xvprintf@j+1,f
  2317  0237  0848               	movf	xvprintf@w+1,w
  2318  0238  0229               	subwf	??_xvprintf+1,w
  2319  0239  1D03               	skipz
  2320  023A  2A3D               	goto	u2605
  2321  023B  0847               	movf	xvprintf@w,w
  2322  023C  0228               	subwf	??_xvprintf,w
  2323  023D                     u2605:	
  2324  023D  1C03               	skipc
  2325  023E  2A29               	goto	l2622
  2326  023F                     l2628:	
  2327                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  2328                           
  2329  023F  3001               	movlw	1
  2330  0240  02D1               	subwf	xvprintf@i,f
  2331  0241  3000               	movlw	0
  2332  0242  3BD2               	subwfb	xvprintf@i+1,f
  2333  0243  0851               	movf	xvprintf@i,w
  2334  0244  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  2335  0245  0086               	movwf	6
  2336  0246  0187               	clrf	7
  2337  0247  0801               	movf	1,w
  2338  0248  3185  2514  3180   	fcall	_xputc
  2339  024B  0020               	movlb	0	; select bank0
  2340  024C  0851               	movf	xvprintf@i,w
  2341  024D  0452               	iorwf	xvprintf@i+1,w
  2342  024E  1903               	btfsc	3,2
  2343  024F  2A55               	goto	l2634
  2344  0250  2A3F               	goto	l2628
  2345  0251                     l2632:	
  2346                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  2347                           
  2348  0251  3020               	movlw	32
  2349  0252  3185  2514  3180   	fcall	_xputc
  2350  0255                     l2634:	
  2351  0255  0020               	movlb	0	; select bank0
  2352  0256  084A               	movf	xvprintf@j+1,w
  2353  0257  00A9               	movwf	??_xvprintf+1
  2354  0258  0849               	movf	xvprintf@j,w
  2355  0259  00A8               	movwf	??_xvprintf
  2356  025A  0AC9               	incf	xvprintf@j,f
  2357  025B  1903               	skipnz
  2358  025C  0ACA               	incf	xvprintf@j+1,f
  2359  025D  0848               	movf	xvprintf@w+1,w
  2360  025E  0229               	subwf	??_xvprintf+1,w
  2361  025F  1D03               	skipz
  2362  0260  2A63               	goto	u2625
  2363  0261  0847               	movf	xvprintf@w,w
  2364  0262  0228               	subwf	??_xvprintf,w
  2365  0263                     u2625:	
  2366  0263  1803               	btfsc	3,0
  2367  0264  283C               	goto	l119
  2368  0265  2A51               	goto	l2632
  2369  0266                     __end_of_xvprintf:	
  2370                           ;xprintf.c: 161: }
  2371                           
  2372                           
  2373                           	psect	text3
  2374  05E7                     __ptext3:	
  2375 ;; *************** function _xputs *****************
  2376 ;; Defined at:
  2377 ;;		line 44 in file "xprintf.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  str             1    wreg     PTR const unsigned char 
  2380 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  str             1    9[COMMON] PTR const unsigned char 
  2383 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2393 ;;      Params:         0       0       0       0       0       0
  2394 ;;      Locals:         1       0       0       0       0       0
  2395 ;;      Temps:          1       0       0       0       0       0
  2396 ;;      Totals:         2       0       0       0       0       0
  2397 ;;Total ram usage:        2 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    6
  2400 ;; This function calls:
  2401 ;;		_xputc
  2402 ;; This function is called by:
  2403 ;;		_xvprintf
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           
  2408                           ;psect for function _xputs
  2409  05E7                     _xputs:	
  2410                           
  2411                           ;incstack = 0
  2412                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2413                           ;xputs@str stored from wreg
  2414  05E7  00F9               	movwf	xputs@str
  2415  05E8                     l1766:	
  2416                           ;xprintf.c: 48: while (*str)
  2417                           
  2418  05E8  0879               	movf	xputs@str,w
  2419  05E9  0086               	movwf	6
  2420  05EA  0187               	clrf	7
  2421  05EB  0801               	movf	1,w
  2422  05EC  1903               	btfsc	3,2
  2423  05ED  0008               	return
  2424                           
  2425                           ;xprintf.c: 49: xputc(*str++);
  2426  05EE  0879               	movf	xputs@str,w
  2427  05EF  0086               	movwf	6
  2428  05F0  0187               	clrf	7
  2429  05F1  0801               	movf	1,w
  2430  05F2  3185  2514  3185   	fcall	_xputc
  2431  05F5  3001               	movlw	1
  2432  05F6  00F8               	movwf	??_xputs
  2433  05F7  0878               	movf	??_xputs,w
  2434  05F8  07F9               	addwf	xputs@str,f
  2435  05F9  2DE8               	goto	l1766
  2436  05FA                     __end_of_xputs:	
  2437                           
  2438                           	psect	text4
  2439  0514                     __ptext4:	
  2440 ;; *************** function _xputc *****************
  2441 ;; Defined at:
  2442 ;;		line 26 in file "xprintf.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  c               1    wreg     unsigned char 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  c               1    7[COMMON] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2456 ;;      Params:         0       0       0       0       0       0
  2457 ;;      Locals:         1       0       0       0       0       0
  2458 ;;      Temps:          1       0       0       0       0       0
  2459 ;;      Totals:         2       0       0       0       0       0
  2460 ;;Total ram usage:        2 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    5
  2463 ;; This function calls:
  2464 ;;		Absolute function
  2465 ;;		_LCD_Put
  2466 ;; This function is called by:
  2467 ;;		_xputs
  2468 ;;		_xvprintf
  2469 ;;		_xfputs
  2470 ;;		_put_dump
  2471 ;;		_xgets
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _xputc
  2477  0514                     _xputc:	
  2478                           
  2479                           ;incstack = 0
  2480                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2481                           ;xputc@c stored from wreg
  2482  0514  00F7               	movwf	xputc@c
  2483  0515  300A               	movlw	10
  2484  0516  0677               	xorwf	xputc@c,w
  2485  0517  1D03               	btfss	3,2
  2486  0518  2D23               	goto	l1748
  2487  0519  3067               	movlw	(low (STR_2| (0+32768)))& (0+255)
  2488  051A  00F6               	movwf	??_xputc
  2489  051B  0876               	movf	??_xputc,w
  2490  051C  00F5               	movwf	LCD_Put@word
  2491  051D  0020               	movlb	0	; select bank0
  2492  051E  086C               	movf	_xfunc_out+1,w
  2493  051F  008A               	movwf	10
  2494  0520  086B               	movf	_xfunc_out,w
  2495  0521  000A               	callw
  2496  0522  3185               	pagesel	$
  2497  0523                     l1748:	
  2498                           
  2499                           ;xprintf.c: 30: if (outptr) {
  2500  0523  087B               	movf	_outptr,w
  2501  0524  1903               	btfsc	3,2
  2502  0525  2D32               	goto	l1756
  2503                           
  2504                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  2505  0526  0877               	movf	xputc@c,w
  2506  0527  00F6               	movwf	??_xputc
  2507  0528  087B               	movf	_outptr,w
  2508  0529  0086               	movwf	6
  2509  052A  0187               	clrf	7
  2510  052B  0876               	movf	??_xputc,w
  2511  052C  0081               	movwf	1
  2512  052D  3001               	movlw	1
  2513  052E  00F6               	movwf	??_xputc
  2514  052F  0876               	movf	??_xputc,w
  2515  0530  07FB               	addwf	_outptr,f
  2516                           
  2517                           ;xprintf.c: 32: return;
  2518  0531  0008               	return
  2519  0532                     l1756:	
  2520                           
  2521                           ;xprintf.c: 33: }
  2522                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  2523  0532  0020               	movlb	0	; select bank0
  2524  0533  086B               	movf	_xfunc_out,w
  2525  0534  046C               	iorwf	_xfunc_out+1,w
  2526  0535  1903               	btfsc	3,2
  2527  0536  0008               	return
  2528  0537  0877               	movf	xputc@c,w
  2529  0538  00F6               	movwf	??_xputc
  2530  0539  0876               	movf	??_xputc,w
  2531  053A  00F5               	movwf	LCD_Put@word
  2532  053B  086C               	movf	_xfunc_out+1,w
  2533  053C  008A               	movwf	10
  2534  053D  086B               	movf	_xfunc_out,w
  2535  053E  000A               	callw
  2536  053F  3185               	pagesel	$
  2537  0540  0008               	return
  2538  0541                     __end_of_xputc:	
  2539                           
  2540                           	psect	text5
  2541  062A                     __ptext5:	
  2542 ;; *************** function _LCD_Put *****************
  2543 ;; Defined at:
  2544 ;;		line 54 in file "LCD.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  word            1    5[COMMON] char 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, pclath, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2558 ;;      Params:         1       0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0
  2561 ;;      Totals:         1       0       0       0       0       0
  2562 ;;Total ram usage:        1 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    4
  2565 ;; This function calls:
  2566 ;;		_LCD_WriteData
  2567 ;; This function is called by:
  2568 ;;		_main
  2569 ;;		_xputc
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _LCD_Put
  2575  062A                     _LCD_Put:	
  2576                           
  2577                           ;LCD.c: 56: RA4 = 1;
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  2581  062A  0020               	movlb	0	; select bank0
  2582  062B  160C               	bsf	12,4	;volatile
  2583                           
  2584                           ;LCD.c: 57: LCD_WriteData(word);
  2585  062C  0875               	movf	LCD_Put@word,w
  2586  062D  3184  24A2         	fcall	_LCD_WriteData
  2587  062F  0008               	return
  2588  0630                     __end_of_LCD_Put:	
  2589                           
  2590                           	psect	text6
  2591  0587                     __ptext6:	
  2592 ;; *************** function ___wmul *****************
  2593 ;; Defined at:
  2594 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  multiplier      2    2[COMMON] unsigned int 
  2597 ;;  multiplicand    2    4[COMMON] unsigned int 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  product         2    6[COMMON] unsigned int 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  2    2[COMMON] unsigned int 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2609 ;;      Params:         4       0       0       0       0       0
  2610 ;;      Locals:         2       0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0
  2612 ;;      Totals:         6       0       0       0       0       0
  2613 ;;Total ram usage:        6 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    3
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_xvprintf
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function ___wmul
  2625  0587                     ___wmul:	
  2626                           
  2627                           ;incstack = 0
  2628                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2629  0587  01F6               	clrf	___wmul@product
  2630  0588  01F7               	clrf	___wmul@product+1
  2631  0589                     l1772:	
  2632  0589  1C72               	btfss	___wmul@multiplier,0
  2633  058A  2D8F               	goto	l538
  2634  058B  0874               	movf	___wmul@multiplicand,w
  2635  058C  07F6               	addwf	___wmul@product,f
  2636  058D  0875               	movf	___wmul@multiplicand+1,w
  2637  058E  3DF7               	addwfc	___wmul@product+1,f
  2638  058F                     l538:	
  2639  058F  3001               	movlw	1
  2640  0590                     u1285:	
  2641  0590  35F4               	lslf	___wmul@multiplicand,f
  2642  0591  0DF5               	rlf	___wmul@multiplicand+1,f
  2643  0592  0B89               	decfsz	9,f
  2644  0593  2D90               	goto	u1285
  2645  0594  3001               	movlw	1
  2646  0595                     u1295:	
  2647  0595  36F3               	lsrf	___wmul@multiplier+1,f
  2648  0596  0CF2               	rrf	___wmul@multiplier,f
  2649  0597  0B89               	decfsz	9,f
  2650  0598  2D95               	goto	u1295
  2651  0599  0872               	movf	___wmul@multiplier,w
  2652  059A  0473               	iorwf	___wmul@multiplier+1,w
  2653  059B  1D03               	btfss	3,2
  2654  059C  2D89               	goto	l1772
  2655  059D  0877               	movf	___wmul@product+1,w
  2656  059E  00F3               	movwf	?___wmul+1
  2657  059F  0876               	movf	___wmul@product,w
  2658  05A0  00F2               	movwf	?___wmul
  2659  05A1  0008               	return
  2660  05A2                     __end_of___wmul:	
  2661                           
  2662                           	psect	text7
  2663  045F                     __ptext7:	
  2664 ;; *************** function ___llmod *****************
  2665 ;; Defined at:
  2666 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  divisor         4    2[COMMON] unsigned long 
  2669 ;;  dividend        4    6[COMMON] unsigned long 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  counter         1    0[BANK0 ] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  4    2[COMMON] unsigned long 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2681 ;;      Params:         8       0       0       0       0       0
  2682 ;;      Locals:         0       1       0       0       0       0
  2683 ;;      Temps:          1       0       0       0       0       0
  2684 ;;      Totals:         9       1       0       0       0       0
  2685 ;;Total ram usage:       10 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    3
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_xvprintf
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function ___llmod
  2697  045F                     ___llmod:	
  2698                           
  2699                           ;incstack = 0
  2700                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2701  045F  0875               	movf	___llmod@divisor+3,w
  2702  0460  0474               	iorwf	___llmod@divisor+2,w
  2703  0461  0473               	iorwf	___llmod@divisor+1,w
  2704  0462  0472               	iorwf	___llmod@divisor,w
  2705  0463  1903               	skipnz
  2706  0464  2C99               	goto	l2468
  2707  0465  0020               	movlb	0	; select bank0
  2708  0466  01A0               	clrf	___llmod@counter
  2709  0467  0AA0               	incf	___llmod@counter,f
  2710  0468                     l2458:	
  2711  0468  1BF5               	btfsc	___llmod@divisor+3,7
  2712  0469  2C76               	goto	l2460
  2713  046A  3001               	movlw	1
  2714  046B                     u2305:	
  2715  046B  35F2               	lslf	___llmod@divisor,f
  2716  046C  0DF3               	rlf	___llmod@divisor+1,f
  2717  046D  0DF4               	rlf	___llmod@divisor+2,f
  2718  046E  0DF5               	rlf	___llmod@divisor+3,f
  2719  046F  0B89               	decfsz	9,f
  2720  0470  2C6B               	goto	u2305
  2721  0471  3001               	movlw	1
  2722  0472  00FA               	movwf	??___llmod
  2723  0473  087A               	movf	??___llmod,w
  2724  0474  07A0               	addwf	___llmod@counter,f
  2725  0475  2C68               	goto	l2458
  2726  0476                     l2460:	
  2727  0476  0875               	movf	___llmod@divisor+3,w
  2728  0477  0279               	subwf	___llmod@dividend+3,w
  2729  0478  1D03               	skipz
  2730  0479  2C84               	goto	u2325
  2731  047A  0874               	movf	___llmod@divisor+2,w
  2732  047B  0278               	subwf	___llmod@dividend+2,w
  2733  047C  1D03               	skipz
  2734  047D  2C84               	goto	u2325
  2735  047E  0873               	movf	___llmod@divisor+1,w
  2736  047F  0277               	subwf	___llmod@dividend+1,w
  2737  0480  1D03               	skipz
  2738  0481  2C84               	goto	u2325
  2739  0482  0872               	movf	___llmod@divisor,w
  2740  0483  0276               	subwf	___llmod@dividend,w
  2741  0484                     u2325:	
  2742  0484  1C03               	skipc
  2743  0485  2C8E               	goto	l2464
  2744  0486  0872               	movf	___llmod@divisor,w
  2745  0487  02F6               	subwf	___llmod@dividend,f
  2746  0488  0873               	movf	___llmod@divisor+1,w
  2747  0489  3BF7               	subwfb	___llmod@dividend+1,f
  2748  048A  0874               	movf	___llmod@divisor+2,w
  2749  048B  3BF8               	subwfb	___llmod@dividend+2,f
  2750  048C  0875               	movf	___llmod@divisor+3,w
  2751  048D  3BF9               	subwfb	___llmod@dividend+3,f
  2752  048E                     l2464:	
  2753  048E  3001               	movlw	1
  2754  048F                     u2335:	
  2755  048F  36F5               	lsrf	___llmod@divisor+3,f
  2756  0490  0CF4               	rrf	___llmod@divisor+2,f
  2757  0491  0CF3               	rrf	___llmod@divisor+1,f
  2758  0492  0CF2               	rrf	___llmod@divisor,f
  2759  0493  0B89               	decfsz	9,f
  2760  0494  2C8F               	goto	u2335
  2761  0495  3001               	movlw	1
  2762  0496  02A0               	subwf	___llmod@counter,f
  2763  0497  1D03               	btfss	3,2
  2764  0498  2C76               	goto	l2460
  2765  0499                     l2468:	
  2766  0499  0879               	movf	___llmod@dividend+3,w
  2767  049A  00F5               	movwf	?___llmod+3
  2768  049B  0878               	movf	___llmod@dividend+2,w
  2769  049C  00F4               	movwf	?___llmod+2
  2770  049D  0877               	movf	___llmod@dividend+1,w
  2771  049E  00F3               	movwf	?___llmod+1
  2772  049F  0876               	movf	___llmod@dividend,w
  2773  04A0  00F2               	movwf	?___llmod
  2774  04A1  0008               	return
  2775  04A2                     __end_of___llmod:	
  2776                           
  2777                           	psect	text8
  2778  040C                     __ptext8:	
  2779 ;; *************** function ___lldiv *****************
  2780 ;; Defined at:
  2781 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  divisor         4    2[COMMON] unsigned long 
  2784 ;;  dividend        4    6[COMMON] unsigned long 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  quotient        4    0[BANK0 ] unsigned long 
  2787 ;;  counter         1    4[BANK0 ] unsigned char 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  4    2[COMMON] unsigned long 
  2790 ;; Registers used:
  2791 ;;		wreg, status,2, status,0
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2797 ;;      Params:         8       0       0       0       0       0
  2798 ;;      Locals:         0       5       0       0       0       0
  2799 ;;      Temps:          1       0       0       0       0       0
  2800 ;;      Totals:         9       5       0       0       0       0
  2801 ;;Total ram usage:       14 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    3
  2804 ;; This function calls:
  2805 ;;		Nothing
  2806 ;; This function is called by:
  2807 ;;		_xvprintf
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           
  2812                           ;psect for function ___lldiv
  2813  040C                     ___lldiv:	
  2814                           
  2815                           ;incstack = 0
  2816                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2817  040C  3000               	movlw	0
  2818  040D  0020               	movlb	0	; select bank0
  2819  040E  00A3               	movwf	___lldiv@quotient+3
  2820  040F  3000               	movlw	0
  2821  0410  00A2               	movwf	___lldiv@quotient+2
  2822  0411  3000               	movlw	0
  2823  0412  00A1               	movwf	___lldiv@quotient+1
  2824  0413  3000               	movlw	0
  2825  0414  00A0               	movwf	___lldiv@quotient
  2826  0415  0875               	movf	___lldiv@divisor+3,w
  2827  0416  0474               	iorwf	___lldiv@divisor+2,w
  2828  0417  0473               	iorwf	___lldiv@divisor+1,w
  2829  0418  0472               	iorwf	___lldiv@divisor,w
  2830  0419  1903               	skipnz
  2831  041A  2C56               	goto	l1804
  2832  041B  01A4               	clrf	___lldiv@counter
  2833  041C  0AA4               	incf	___lldiv@counter,f
  2834  041D                     l1790:	
  2835  041D  1BF5               	btfsc	___lldiv@divisor+3,7
  2836  041E  2C2B               	goto	l1792
  2837  041F  3001               	movlw	1
  2838  0420                     u1325:	
  2839  0420  35F2               	lslf	___lldiv@divisor,f
  2840  0421  0DF3               	rlf	___lldiv@divisor+1,f
  2841  0422  0DF4               	rlf	___lldiv@divisor+2,f
  2842  0423  0DF5               	rlf	___lldiv@divisor+3,f
  2843  0424  0B89               	decfsz	9,f
  2844  0425  2C20               	goto	u1325
  2845  0426  3001               	movlw	1
  2846  0427  00FA               	movwf	??___lldiv
  2847  0428  087A               	movf	??___lldiv,w
  2848  0429  07A4               	addwf	___lldiv@counter,f
  2849  042A  2C1D               	goto	l1790
  2850  042B                     l1792:	
  2851  042B  3001               	movlw	1
  2852  042C                     u1345:	
  2853  042C  35A0               	lslf	___lldiv@quotient,f
  2854  042D  0DA1               	rlf	___lldiv@quotient+1,f
  2855  042E  0DA2               	rlf	___lldiv@quotient+2,f
  2856  042F  0DA3               	rlf	___lldiv@quotient+3,f
  2857  0430  0B89               	decfsz	9,f
  2858  0431  2C2C               	goto	u1345
  2859  0432  0875               	movf	___lldiv@divisor+3,w
  2860  0433  0279               	subwf	___lldiv@dividend+3,w
  2861  0434  1D03               	skipz
  2862  0435  2C40               	goto	u1355
  2863  0436  0874               	movf	___lldiv@divisor+2,w
  2864  0437  0278               	subwf	___lldiv@dividend+2,w
  2865  0438  1D03               	skipz
  2866  0439  2C40               	goto	u1355
  2867  043A  0873               	movf	___lldiv@divisor+1,w
  2868  043B  0277               	subwf	___lldiv@dividend+1,w
  2869  043C  1D03               	skipz
  2870  043D  2C40               	goto	u1355
  2871  043E  0872               	movf	___lldiv@divisor,w
  2872  043F  0276               	subwf	___lldiv@dividend,w
  2873  0440                     u1355:	
  2874  0440  1C03               	skipc
  2875  0441  2C4B               	goto	l1800
  2876  0442  0872               	movf	___lldiv@divisor,w
  2877  0443  02F6               	subwf	___lldiv@dividend,f
  2878  0444  0873               	movf	___lldiv@divisor+1,w
  2879  0445  3BF7               	subwfb	___lldiv@dividend+1,f
  2880  0446  0874               	movf	___lldiv@divisor+2,w
  2881  0447  3BF8               	subwfb	___lldiv@dividend+2,f
  2882  0448  0875               	movf	___lldiv@divisor+3,w
  2883  0449  3BF9               	subwfb	___lldiv@dividend+3,f
  2884  044A  1420               	bsf	___lldiv@quotient,0
  2885  044B                     l1800:	
  2886  044B  3001               	movlw	1
  2887  044C                     u1365:	
  2888  044C  36F5               	lsrf	___lldiv@divisor+3,f
  2889  044D  0CF4               	rrf	___lldiv@divisor+2,f
  2890  044E  0CF3               	rrf	___lldiv@divisor+1,f
  2891  044F  0CF2               	rrf	___lldiv@divisor,f
  2892  0450  0B89               	decfsz	9,f
  2893  0451  2C4C               	goto	u1365
  2894  0452  3001               	movlw	1
  2895  0453  02A4               	subwf	___lldiv@counter,f
  2896  0454  1D03               	btfss	3,2
  2897  0455  2C2B               	goto	l1792
  2898  0456                     l1804:	
  2899  0456  0823               	movf	___lldiv@quotient+3,w
  2900  0457  00F5               	movwf	?___lldiv+3
  2901  0458  0822               	movf	___lldiv@quotient+2,w
  2902  0459  00F4               	movwf	?___lldiv+2
  2903  045A  0821               	movf	___lldiv@quotient+1,w
  2904  045B  00F3               	movwf	?___lldiv+1
  2905  045C  0820               	movf	___lldiv@quotient,w
  2906  045D  00F2               	movwf	?___lldiv
  2907  045E  0008               	return
  2908  045F                     __end_of___lldiv:	
  2909                           
  2910                           	psect	text9
  2911  02E8                     __ptext9:	
  2912 ;; *************** function _LCD_Init *****************
  2913 ;; Defined at:
  2914 ;;		line 28 in file "LCD.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0, pclath, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2928 ;;      Params:         0       0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0       0
  2930 ;;      Temps:          2       0       0       0       0       0
  2931 ;;      Totals:         2       0       0       0       0       0
  2932 ;;Total ram usage:        2 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    5
  2935 ;; This function calls:
  2936 ;;		_LCD_DisplayClear
  2937 ;;		_LCD_WriteData
  2938 ;; This function is called by:
  2939 ;;		_main
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           
  2944                           ;psect for function _LCD_Init
  2945  02E8                     _LCD_Init:	
  2946                           
  2947                           ;LCD.c: 30: RA4 = 0;
  2948                           
  2949                           ;incstack = 0
  2950                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2951  02E8  0020               	movlb	0	; select bank0
  2952  02E9  120C               	bcf	12,4	;volatile
  2953                           
  2954                           ;LCD.c: 31: RA3 = 0;
  2955  02EA  118C               	bcf	12,3	;volatile
  2956                           
  2957                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  2958  02EB  3002               	movlw	2
  2959  02EC  00F7               	movwf	??_LCD_Init+1
  2960  02ED  3038               	movlw	56
  2961  02EE  00F6               	movwf	??_LCD_Init
  2962  02EF  30AD               	movlw	173
  2963  02F0                     u2837:	
  2964  02F0  0B89               	decfsz	9,f
  2965  02F1  2AF0               	goto	u2837
  2966  02F2  0BF6               	decfsz	??_LCD_Init,f
  2967  02F3  2AF0               	goto	u2837
  2968  02F4  0BF7               	decfsz	??_LCD_Init+1,f
  2969  02F5  2AF0               	goto	u2837
  2970  02F6  0000               	nop
  2971                           
  2972                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  2973  02F7  3003               	movlw	3
  2974  02F8  0020               	movlb	0	; select bank0
  2975  02F9  008D               	movwf	13	;volatile
  2976                           
  2977                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2978  02FA  158C               	bsf	12,3	;volatile
  2979  02FB  3200               	nop2	;2 cycle nop
  2980  02FC  3200               	nop2	;2 cycle nop
  2981  02FD  3200               	nop2	;2 cycle nop
  2982  02FE  3200               	nop2	;2 cycle nop
  2983  02FF  0020               	movlb	0	; select bank0
  2984  0300  118C               	bcf	12,3	;volatile
  2985  0301  3200               	nop2	;2 cycle nop
  2986  0302  3200               	nop2	;2 cycle nop
  2987  0303  3200               	nop2	;2 cycle nop
  2988  0304  3200               	nop2	;2 cycle nop
  2989                           
  2990                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  2991  0305  3034               	movlw	52
  2992  0306  00F6               	movwf	??_LCD_Init
  2993  0307  30F2               	movlw	242
  2994  0308                     u2847:	
  2995  0308  0B89               	decfsz	9,f
  2996  0309  2B08               	goto	u2847
  2997  030A  0BF6               	decfsz	??_LCD_Init,f
  2998  030B  2B08               	goto	u2847
  2999                           
  3000                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3001  030C  0020               	movlb	0	; select bank0
  3002  030D  158C               	bsf	12,3	;volatile
  3003  030E  3200               	nop2	;2 cycle nop
  3004  030F  3200               	nop2	;2 cycle nop
  3005  0310  3200               	nop2	;2 cycle nop
  3006  0311  3200               	nop2	;2 cycle nop
  3007  0312  0020               	movlb	0	; select bank0
  3008  0313  118C               	bcf	12,3	;volatile
  3009  0314  3200               	nop2	;2 cycle nop
  3010  0315  3200               	nop2	;2 cycle nop
  3011  0316  3200               	nop2	;2 cycle nop
  3012  0317  3200               	nop2	;2 cycle nop
  3013                           
  3014                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  3015  0318  3005               	movlw	5
  3016  0319  00F6               	movwf	??_LCD_Init
  3017  031A  3026               	movlw	38
  3018  031B                     u2857:	
  3019  031B  0B89               	decfsz	9,f
  3020  031C  2B1B               	goto	u2857
  3021  031D  0BF6               	decfsz	??_LCD_Init,f
  3022  031E  2B1B               	goto	u2857
  3023  031F  3200               	nop2
  3024                           
  3025                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3026  0320  0020               	movlb	0	; select bank0
  3027  0321  158C               	bsf	12,3	;volatile
  3028  0322  3200               	nop2	;2 cycle nop
  3029  0323  3200               	nop2	;2 cycle nop
  3030  0324  3200               	nop2	;2 cycle nop
  3031  0325  3200               	nop2	;2 cycle nop
  3032  0326  0020               	movlb	0	; select bank0
  3033  0327  118C               	bcf	12,3	;volatile
  3034  0328  3200               	nop2	;2 cycle nop
  3035  0329  3200               	nop2	;2 cycle nop
  3036  032A  3200               	nop2	;2 cycle nop
  3037  032B  3200               	nop2	;2 cycle nop
  3038                           
  3039                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  3040  032C  3005               	movlw	5
  3041  032D  00F6               	movwf	??_LCD_Init
  3042  032E  3026               	movlw	38
  3043  032F                     u2867:	
  3044  032F  0B89               	decfsz	9,f
  3045  0330  2B2F               	goto	u2867
  3046  0331  0BF6               	decfsz	??_LCD_Init,f
  3047  0332  2B2F               	goto	u2867
  3048  0333  3200               	nop2
  3049                           
  3050                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  3051  0334  3002               	movlw	2
  3052  0335  0020               	movlb	0	; select bank0
  3053  0336  008D               	movwf	13	;volatile
  3054                           
  3055                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3056  0337  158C               	bsf	12,3	;volatile
  3057  0338  3200               	nop2	;2 cycle nop
  3058  0339  3200               	nop2	;2 cycle nop
  3059  033A  3200               	nop2	;2 cycle nop
  3060  033B  3200               	nop2	;2 cycle nop
  3061  033C  0020               	movlb	0	; select bank0
  3062  033D  118C               	bcf	12,3	;volatile
  3063  033E  3200               	nop2	;2 cycle nop
  3064  033F  3200               	nop2	;2 cycle nop
  3065  0340  3200               	nop2	;2 cycle nop
  3066  0341  3200               	nop2	;2 cycle nop
  3067                           
  3068                           ;LCD.c: 44: LCD_WriteData(0x28);
  3069  0342  3028               	movlw	40
  3070  0343  3184  24A2  3182   	fcall	_LCD_WriteData
  3071                           
  3072                           ;LCD.c: 45: LCD_WriteData(0x0c);
  3073  0346  300C               	movlw	12
  3074  0347  3184  24A2  3182   	fcall	_LCD_WriteData
  3075                           
  3076                           ;LCD.c: 46: LCD_DisplayClear();
  3077  034A  3186  260A  3182   	fcall	_LCD_DisplayClear
  3078                           
  3079                           ;LCD.c: 47: LCD_WriteData(0x06);
  3080  034D  3006               	movlw	6
  3081  034E  3184  24A2         	fcall	_LCD_WriteData
  3082  0350  0008               	return
  3083  0351                     __end_of_LCD_Init:	
  3084                           
  3085                           	psect	text10
  3086  060A                     __ptext10:	
  3087 ;; *************** function _LCD_DisplayClear *****************
  3088 ;; Defined at:
  3089 ;;		line 64 in file "LCD.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0, pclath, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3103 ;;      Params:         0       0       0       0       0       0
  3104 ;;      Locals:         0       0       0       0       0       0
  3105 ;;      Temps:          1       0       0       0       0       0
  3106 ;;      Totals:         1       0       0       0       0       0
  3107 ;;Total ram usage:        1 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    4
  3110 ;; This function calls:
  3111 ;;		_LCD_WriteData
  3112 ;; This function is called by:
  3113 ;;		_LCD_Init
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function _LCD_DisplayClear
  3119  060A                     _LCD_DisplayClear:	
  3120                           
  3121                           ;LCD.c: 66: RA4 = 0;
  3122                           
  3123                           ;incstack = 0
  3124                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  3125  060A  0020               	movlb	0	; select bank0
  3126  060B  120C               	bcf	12,4	;volatile
  3127                           
  3128                           ;LCD.c: 67: LCD_WriteData(0x01);
  3129  060C  3001               	movlw	1
  3130  060D  3184  24A2  3186   	fcall	_LCD_WriteData
  3131                           
  3132                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  3133  0610  3015               	movlw	21
  3134  0611  00F5               	movwf	??_LCD_DisplayClear
  3135  0612  30C6               	movlw	198
  3136  0613                     u2877:	
  3137  0613  0B89               	decfsz	9,f
  3138  0614  2E13               	goto	u2877
  3139  0615  0BF5               	decfsz	??_LCD_DisplayClear,f
  3140  0616  2E13               	goto	u2877
  3141  0617  3200               	nop2
  3142  0618  0008               	return
  3143  0619                     __end_of_LCD_DisplayClear:	
  3144                           
  3145                           	psect	text11
  3146  05BD                     __ptext11:	
  3147 ;; *************** function _LCD_CursorPosition *****************
  3148 ;; Defined at:
  3149 ;;		line 86 in file "LCD.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  tx              1    wreg     unsigned char 
  3152 ;;  ty              1    5[COMMON] unsigned char 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  tx              1    7[COMMON] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0, pclath, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3164 ;;      Params:         1       0       0       0       0       0
  3165 ;;      Locals:         1       0       0       0       0       0
  3166 ;;      Temps:          1       0       0       0       0       0
  3167 ;;      Totals:         3       0       0       0       0       0
  3168 ;;Total ram usage:        3 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    4
  3171 ;; This function calls:
  3172 ;;		_LCD_WriteData
  3173 ;; This function is called by:
  3174 ;;		_main
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           
  3179                           ;psect for function _LCD_CursorPosition
  3180  05BD                     _LCD_CursorPosition:	
  3181                           
  3182                           ;incstack = 0
  3183                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  3184                           ;LCD_CursorPosition@tx stored from wreg
  3185  05BD  00F7               	movwf	LCD_CursorPosition@tx
  3186                           
  3187                           ;LCD.c: 88: RA4 = 0;
  3188  05BE  0020               	movlb	0	; select bank0
  3189  05BF  120C               	bcf	12,4	;volatile
  3190                           
  3191                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  3192  05C0  0875               	movf	LCD_CursorPosition@ty,w
  3193  05C1  00F6               	movwf	??_LCD_CursorPosition
  3194  05C2  3005               	movlw	5
  3195  05C3                     u1975:	
  3196  05C3  35F6               	lslf	??_LCD_CursorPosition,f
  3197  05C4  3EFF               	addlw	-1
  3198  05C5  1D03               	skipz
  3199  05C6  2DC3               	goto	u1975
  3200  05C7  3576               	lslf	??_LCD_CursorPosition,w
  3201  05C8  0477               	iorwf	LCD_CursorPosition@tx,w
  3202  05C9  3880               	iorlw	-128
  3203  05CA  3184  24A2  3185   	fcall	_LCD_WriteData
  3204                           
  3205                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  3206  05CD  306A               	movlw	106
  3207  05CE                     u2887:	
  3208  05CE  0B89               	decfsz	9,f
  3209  05CF  2DCE               	goto	u2887
  3210  05D0  3200               	nop2
  3211  05D1  0008               	return
  3212  05D2                     __end_of_LCD_CursorPosition:	
  3213                           
  3214                           	psect	text12
  3215  04A2                     __ptext12:	
  3216 ;; *************** function _LCD_WriteData *****************
  3217 ;; Defined at:
  3218 ;;		line 15 in file "LCD.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  point           1    wreg     char 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  point           1    4[COMMON] char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3232 ;;      Params:         0       0       0       0       0       0
  3233 ;;      Locals:         1       0       0       0       0       0
  3234 ;;      Temps:          2       0       0       0       0       0
  3235 ;;      Totals:         3       0       0       0       0       0
  3236 ;;Total ram usage:        3 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    3
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_LCD_Init
  3243 ;;		_LCD_Put
  3244 ;;		_LCD_DisplayClear
  3245 ;;		_LCD_CursorPosition
  3246 ;;		_LCD_CursorHome
  3247 ;;		_LCD_CursorShift
  3248 ;;		_LCD_DispShift
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           
  3253                           ;psect for function _LCD_WriteData
  3254  04A2                     _LCD_WriteData:	
  3255                           
  3256                           ;incstack = 0
  3257                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  3258                           ;LCD_WriteData@point stored from wreg
  3259  04A2  00F4               	movwf	LCD_WriteData@point
  3260                           
  3261                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  3262  04A3  30D5               	movlw	213
  3263  04A4                     u2897:	
  3264  04A4  0B89               	decfsz	9,f
  3265  04A5  2CA4               	goto	u2897
  3266  04A6  0000               	nop
  3267                           
  3268                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  3269  04A7  0874               	movf	LCD_WriteData@point,w
  3270  04A8  00F2               	movwf	??_LCD_WriteData
  3271  04A9  3004               	movlw	4
  3272  04AA                     u1225:	
  3273  04AA  1003               	clrc
  3274  04AB  1BF2               	btfsc	??_LCD_WriteData,7
  3275  04AC  1403               	setc
  3276  04AD  0CF2               	rrf	??_LCD_WriteData,f
  3277  04AE  0B89               	decfsz	9,f
  3278  04AF  2CAA               	goto	u1225
  3279  04B0  3003               	movlw	3
  3280  04B1  0572               	andwf	??_LCD_WriteData,w
  3281  04B2  00F3               	movwf	??_LCD_WriteData+1
  3282  04B3  0E74               	swapf	LCD_WriteData@point,w
  3283  04B4  390F               	andlw	15
  3284  04B5  1989               	btfsc	9,3
  3285  04B6  38F0               	iorlw	240
  3286  04B7  390C               	andlw	12
  3287  04B8  0709               	addwf	9,w
  3288  04B9  0473               	iorwf	??_LCD_WriteData+1,w
  3289  04BA  0020               	movlb	0	; select bank0
  3290  04BB  008D               	movwf	13	;volatile
  3291                           
  3292                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3293  04BC  158C               	bsf	12,3	;volatile
  3294  04BD  3200               	nop2	;2 cycle nop
  3295  04BE  3200               	nop2	;2 cycle nop
  3296  04BF  3200               	nop2	;2 cycle nop
  3297  04C0  3200               	nop2	;2 cycle nop
  3298  04C1  0020               	movlb	0	; select bank0
  3299  04C2  118C               	bcf	12,3	;volatile
  3300  04C3  3200               	nop2	;2 cycle nop
  3301  04C4  3200               	nop2	;2 cycle nop
  3302  04C5  3200               	nop2	;2 cycle nop
  3303  04C6  3200               	nop2	;2 cycle nop
  3304                           
  3305                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  3306  04C7  3003               	movlw	3
  3307  04C8  0574               	andwf	LCD_WriteData@point,w
  3308  04C9  00F2               	movwf	??_LCD_WriteData
  3309  04CA  0874               	movf	LCD_WriteData@point,w
  3310  04CB  390C               	andlw	12
  3311  04CC  0709               	addwf	9,w
  3312  04CD  0472               	iorwf	??_LCD_WriteData,w
  3313  04CE  0020               	movlb	0	; select bank0
  3314  04CF  008D               	movwf	13	;volatile
  3315                           
  3316                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3317  04D0  158C               	bsf	12,3	;volatile
  3318  04D1  3200               	nop2	;2 cycle nop
  3319  04D2  3200               	nop2	;2 cycle nop
  3320  04D3  3200               	nop2	;2 cycle nop
  3321  04D4  3200               	nop2	;2 cycle nop
  3322  04D5  0020               	movlb	0	; select bank0
  3323  04D6  118C               	bcf	12,3	;volatile
  3324  04D7  3200               	nop2	;2 cycle nop
  3325  04D8  3200               	nop2	;2 cycle nop
  3326  04D9  3200               	nop2	;2 cycle nop
  3327  04DA  3200               	nop2	;2 cycle nop
  3328  04DB  0008               	return
  3329  04DC                     __end_of_LCD_WriteData:	
  3330                           
  3331                           	psect	text13
  3332  0569                     __ptext13:	
  3333 ;; *************** function _I2C_Transmit *****************
  3334 ;; Defined at:
  3335 ;;		line 23 in file "I2C_Common.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  I2Cx            1    wreg     enum E2992
  3338 ;;  address         1    0[BANK0 ] unsigned char 
  3339 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  3340 ;;		 -> main@testdata(4), 
  3341 ;;  size            1    2[BANK0 ] unsigned char 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  I2Cx            1    6[BANK0 ] enum E2992
  3344 ;;  result          1    7[BANK0 ] char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      char 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3354 ;;      Params:         0       3       0       0       0       0
  3355 ;;      Locals:         0       2       0       0       0       0
  3356 ;;      Temps:          0       3       0       0       0       0
  3357 ;;      Totals:         0       8       0       0       0       0
  3358 ;;Total ram usage:        8 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    4
  3361 ;; This function calls:
  3362 ;;		_I2C2_Transmit
  3363 ;; This function is called by:
  3364 ;;		_main
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function _I2C_Transmit
  3370  0569                     _I2C_Transmit:	
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3374                           ;I2C_Transmit@I2Cx stored from wreg
  3375  0569  0020               	movlb	0	; select bank0
  3376  056A  00A6               	movwf	I2C_Transmit@I2Cx
  3377                           
  3378                           ;I2C_Common.c: 25: int8_t result;
  3379                           ;I2C_Common.c: 27: switch(I2Cx)
  3380  056B  2D7D               	goto	l2736
  3381  056C                     l2732:	
  3382                           ;I2C_Common.c: 33: case I2C2_MODULE:
  3383                           
  3384                           ;I2C_Common.c: 31: break;
  3385                           
  3386                           ;I2C_Common.c: 28: {
  3387                           ;I2C_Common.c: 29: case I2C1_MODULE:
  3388                           
  3389                           
  3390                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  3391  056C  0821               	movf	I2C_Transmit@pData,w
  3392  056D  00A3               	movwf	??_I2C_Transmit
  3393  056E  0823               	movf	??_I2C_Transmit,w
  3394  056F  00F2               	movwf	I2C2_Transmit@pData
  3395  0570  0822               	movf	I2C_Transmit@size,w
  3396  0571  00A4               	movwf	??_I2C_Transmit+1
  3397  0572  0824               	movf	??_I2C_Transmit+1,w
  3398  0573  00F3               	movwf	I2C2_Transmit@size
  3399  0574  0820               	movf	I2C_Transmit@address,w
  3400  0575  3182  2266  3185   	fcall	_I2C2_Transmit
  3401  0578  0020               	movlb	0	; select bank0
  3402  0579  00A5               	movwf	??_I2C_Transmit+2
  3403  057A  0825               	movf	??_I2C_Transmit+2,w
  3404  057B  00A7               	movwf	I2C_Transmit@result
  3405                           
  3406                           ;I2C_Common.c: 36: }
  3407                           
  3408                           ;I2C_Common.c: 35: break;
  3409  057C  2D85               	goto	l2738
  3410  057D                     l2736:	
  3411  057D  0826               	movf	I2C_Transmit@I2Cx,w
  3412                           
  3413                           ; Switch size 1, requested type "space"
  3414                           ; Number of cases is 2, Range of values is 0 to 1
  3415                           ; switch strategies available:
  3416                           ; Name         Instructions Cycles
  3417                           ; simple_byte            7     4 (average)
  3418                           ; direct_byte           10     6 (fixed)
  3419                           ; jumptable            260     6 (fixed)
  3420                           ;	Chosen strategy is simple_byte
  3421  057E  3A00               	xorlw	0	; case 0
  3422  057F  1903               	skipnz
  3423  0580  2D85               	goto	l2738
  3424  0581  3A01               	xorlw	1	; case 1
  3425  0582  1903               	skipnz
  3426  0583  2D6C               	goto	l2732
  3427  0584  2D85               	goto	l2738
  3428  0585                     l2738:	
  3429                           
  3430                           ;I2C_Common.c: 37: return result;
  3431  0585  0827               	movf	I2C_Transmit@result,w
  3432  0586  0008               	return
  3433  0587                     __end_of_I2C_Transmit:	
  3434                           
  3435                           	psect	text14
  3436  0266                     __ptext14:	
  3437 ;; *************** function _I2C2_Transmit *****************
  3438 ;; Defined at:
  3439 ;;		line 52 in file "I2C2.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  address         1    wreg     unsigned char 
  3442 ;;  pData           1    2[COMMON] PTR unsigned char 
  3443 ;;		 -> main@testdata(4), 
  3444 ;;  size            1    3[COMMON] unsigned char 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  address         1    6[COMMON] unsigned char 
  3447 ;;  i               1    8[COMMON] unsigned char 
  3448 ;;  i               1    7[COMMON] unsigned char 
  3449 ;;  result          1    9[COMMON] char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      char 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3459 ;;      Params:         2       0       0       0       0       0
  3460 ;;      Locals:         4       0       0       0       0       0
  3461 ;;      Temps:          2       0       0       0       0       0
  3462 ;;      Totals:         8       0       0       0       0       0
  3463 ;;Total ram usage:        8 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:    3
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_I2C_Transmit
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           
  3474                           ;psect for function _I2C2_Transmit
  3475  0266                     _I2C2_Transmit:	
  3476                           
  3477                           ;incstack = 0
  3478                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  3479                           ;I2C2_Transmit@address stored from wreg
  3480  0266  00F6               	movwf	I2C2_Transmit@address
  3481                           
  3482                           ;I2C2.c: 54: int8_t result;
  3483                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  3484  0267  2ADD               	goto	l2716
  3485  0268                     l2672:	
  3486                           ;I2C2.c: 59: while(SSP2STATbits.R_nW|SSP2STATbits.BF);
  3487                           
  3488                           ;I2C2.c: 57: {
  3489                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  3490                           
  3491  0268  0024               	movlb	4	; select bank4
  3492  0269  081C               	movf	28,w	;volatile
  3493  026A  3901               	andlw	1
  3494  026B  00F4               	movwf	??_I2C2_Transmit
  3495  026C  0C1C               	rrf	28,w	;volatile
  3496  026D  0C89               	rrf	9,f
  3497  026E  3901               	andlw	1
  3498  026F  0474               	iorwf	??_I2C2_Transmit,w
  3499  0270  1D03               	btfss	3,2
  3500  0271  2A68               	goto	l2672
  3501                           
  3502                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  3503  0272  141E               	bsf	30,0	;volatile
  3504  0273                     l2674:	
  3505                           ;I2C2.c: 62: while(SSP2STATbits.R_nW|SSP2STATbits.BF);
  3506                           
  3507  0273  081C               	movf	28,w	;volatile
  3508  0274  3901               	andlw	1
  3509  0275  00F4               	movwf	??_I2C2_Transmit
  3510  0276  0C1C               	rrf	28,w	;volatile
  3511  0277  0C89               	rrf	9,f
  3512  0278  3901               	andlw	1
  3513  0279  0474               	iorwf	??_I2C2_Transmit,w
  3514  027A  1D03               	btfss	3,2
  3515  027B  2A73               	goto	l2674
  3516                           
  3517                           ;I2C2.c: 63: SSP2BUF = address << 1;
  3518  027C  3576               	lslf	I2C2_Transmit@address,w
  3519  027D  0099               	movwf	25	;volatile
  3520  027E                     l366:	
  3521                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  3522                           
  3523  027E  191C               	btfsc	28,2	;volatile
  3524  027F  2A7E               	goto	l366
  3525                           
  3526                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  3527  0280  3000               	movlw	0
  3528  0281  1B1E               	btfsc	30,6	;volatile
  3529  0282  3001               	movlw	1
  3530  0283  00F9               	movwf	I2C2_Transmit@result
  3531                           
  3532                           ;I2C2.c: 67: if (!result)
  3533  0284  0879               	movf	I2C2_Transmit@result,w
  3534  0285  1D03               	btfss	3,2
  3535  0286  2AAF               	goto	l2698
  3536                           
  3537                           ;I2C2.c: 68: {
  3538                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  3539  0287  01F7               	clrf	I2C2_Transmit@i
  3540  0288  2A8D               	goto	l2696
  3541  0289                     l2694:	
  3542                           ;I2C2.c: 79: break;
  3543                           
  3544  0289  3001               	movlw	1
  3545  028A  00F4               	movwf	??_I2C2_Transmit
  3546  028B  0874               	movf	??_I2C2_Transmit,w
  3547  028C  07F7               	addwf	I2C2_Transmit@i,f
  3548  028D                     l2696:	
  3549  028D  0873               	movf	I2C2_Transmit@size,w
  3550  028E  0277               	subwf	I2C2_Transmit@i,w
  3551  028F  1803               	btfsc	3,0
  3552  0290  2AAF               	goto	l2698
  3553  0291                     l2684:	
  3554                           ;I2C2.c: 70: {
  3555                           ;I2C2.c: 71: while(SSP2STATbits.R_nW|SSP2STATbits.BF);
  3556                           
  3557  0291  081C               	movf	28,w	;volatile
  3558  0292  3901               	andlw	1
  3559  0293  00F4               	movwf	??_I2C2_Transmit
  3560  0294  0C1C               	rrf	28,w	;volatile
  3561  0295  0C89               	rrf	9,f
  3562  0296  3901               	andlw	1
  3563  0297  0474               	iorwf	??_I2C2_Transmit,w
  3564  0298  1D03               	btfss	3,2
  3565  0299  2A91               	goto	l2684
  3566                           
  3567                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  3568  029A  0877               	movf	I2C2_Transmit@i,w
  3569  029B  0772               	addwf	I2C2_Transmit@pData,w
  3570  029C  00F4               	movwf	??_I2C2_Transmit
  3571  029D  0874               	movf	??_I2C2_Transmit,w
  3572  029E  0086               	movwf	6
  3573  029F  0187               	clrf	7
  3574  02A0  0801               	movf	1,w
  3575  02A1  0099               	movwf	25	;volatile
  3576  02A2                     l375:	
  3577                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  3578                           
  3579  02A2  191C               	btfsc	28,2	;volatile
  3580  02A3  2AA2               	goto	l375
  3581                           
  3582                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  3583  02A4  3000               	movlw	0
  3584  02A5  1B1E               	btfsc	30,6	;volatile
  3585  02A6  3001               	movlw	1
  3586  02A7  00F9               	movwf	I2C2_Transmit@result
  3587                           
  3588                           ;I2C2.c: 76: if (result)
  3589  02A8  0879               	movf	I2C2_Transmit@result,w
  3590  02A9  1903               	btfsc	3,2
  3591  02AA  2A89               	goto	l2694
  3592                           
  3593                           ;I2C2.c: 77: {
  3594                           ;I2C2.c: 78: result = 2;
  3595  02AB  3002               	movlw	2
  3596  02AC  00F4               	movwf	??_I2C2_Transmit
  3597  02AD  0874               	movf	??_I2C2_Transmit,w
  3598  02AE  00F9               	movwf	I2C2_Transmit@result
  3599  02AF                     l2698:	
  3600                           ;I2C2.c: 80: }
  3601                           ;I2C2.c: 81: }
  3602                           ;I2C2.c: 82: }
  3603                           ;I2C2.c: 84: while(SSP2STATbits.R_nW|SSP2STATbits.BF);
  3604                           
  3605  02AF  081C               	movf	28,w	;volatile
  3606  02B0  3901               	andlw	1
  3607  02B1  00F4               	movwf	??_I2C2_Transmit
  3608  02B2  0C1C               	rrf	28,w	;volatile
  3609  02B3  0C89               	rrf	9,f
  3610  02B4  3901               	andlw	1
  3611  02B5  0474               	iorwf	??_I2C2_Transmit,w
  3612  02B6  1D03               	btfss	3,2
  3613  02B7  2AAF               	goto	l2698
  3614                           
  3615                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  3616  02B8  151E               	bsf	30,2	;volatile
  3617                           
  3618                           ;I2C2.c: 86: break;
  3619  02B9  2AE6               	goto	l2718
  3620  02BA                     l384:	
  3621                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  3622                           
  3623                           
  3624                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  3625  02BA  0024               	movlb	4	; select bank4
  3626  02BB  1D9C               	btfss	28,3	;volatile
  3627  02BC  1E1C               	btfss	28,4	;volatile
  3628  02BD  2ADB               	goto	l2712
  3629                           
  3630                           ;I2C2.c: 90: {
  3631                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  3632  02BE  01F8               	clrf	I2C2_Transmit@i_460
  3633  02BF                     l2708:	
  3634  02BF  0873               	movf	I2C2_Transmit@size,w
  3635  02C0  0278               	subwf	I2C2_Transmit@i_460,w
  3636  02C1  1803               	btfsc	3,0
  3637  02C2  2AD6               	goto	l2710
  3638                           
  3639                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  3640  02C3  0878               	movf	I2C2_Transmit@i_460,w
  3641  02C4  0772               	addwf	I2C2_Transmit@pData,w
  3642  02C5  00F4               	movwf	??_I2C2_Transmit
  3643  02C6  0874               	movf	??_I2C2_Transmit,w
  3644  02C7  0086               	movwf	6
  3645  02C8  0187               	clrf	7
  3646  02C9  0801               	movf	1,w
  3647  02CA  00F5               	movwf	??_I2C2_Transmit+1
  3648  02CB  0878               	movf	I2C2_Transmit@i_460,w
  3649  02CC  3EA0               	addlw	(low (_I2C2_Config| 0))& (0+255)
  3650  02CD  0086               	movwf	6
  3651  02CE  0187               	clrf	7
  3652  02CF  0875               	movf	??_I2C2_Transmit+1,w
  3653  02D0  0081               	movwf	1
  3654  02D1  3001               	movlw	1
  3655  02D2  00F4               	movwf	??_I2C2_Transmit
  3656  02D3  0874               	movf	??_I2C2_Transmit,w
  3657  02D4  07F8               	addwf	I2C2_Transmit@i_460,f
  3658  02D5  2ABF               	goto	l2708
  3659  02D6                     l2710:	
  3660                           
  3661                           ;I2C2.c: 93: result = size;
  3662  02D6  0873               	movf	I2C2_Transmit@size,w
  3663  02D7  00F4               	movwf	??_I2C2_Transmit
  3664  02D8  0874               	movf	??_I2C2_Transmit,w
  3665  02D9  00F9               	movwf	I2C2_Transmit@result
  3666                           
  3667                           ;I2C2.c: 94: }
  3668  02DA  2AE6               	goto	l2718
  3669  02DB                     l2712:	
  3670                           
  3671                           ;I2C2.c: 95: else
  3672                           ;I2C2.c: 96: result = 0;
  3673  02DB  01F9               	clrf	I2C2_Transmit@result
  3674                           
  3675                           ;I2C2.c: 98: }
  3676                           
  3677                           ;I2C2.c: 97: break;
  3678  02DC  2AE6               	goto	l2718
  3679  02DD                     l2716:	
  3680  02DD  0021               	movlb	1	; select bank1
  3681  02DE  0842               	movf	(_I2C2_Config^(0+128)+34),w
  3682                           
  3683                           ; Switch size 1, requested type "space"
  3684                           ; Number of cases is 2, Range of values is 0 to 1
  3685                           ; switch strategies available:
  3686                           ; Name         Instructions Cycles
  3687                           ; simple_byte            7     4 (average)
  3688                           ; direct_byte           10     6 (fixed)
  3689                           ; jumptable            260     6 (fixed)
  3690                           ;	Chosen strategy is simple_byte
  3691  02DF  3A00               	xorlw	0	; case 0
  3692  02E0  1903               	skipnz
  3693  02E1  2A68               	goto	l2672
  3694  02E2  3A01               	xorlw	1	; case 1
  3695  02E3  1903               	skipnz
  3696  02E4  2ABA               	goto	l384
  3697  02E5  2AE6               	goto	l2718
  3698  02E6                     l2718:	
  3699                           
  3700                           ;I2C2.c: 100: return result;
  3701  02E6  0879               	movf	I2C2_Transmit@result,w
  3702  02E7  0008               	return
  3703  02E8                     __end_of_I2C2_Transmit:	
  3704                           
  3705                           	psect	text15
  3706  05A2                     __ptext15:	
  3707 ;; *************** function _I2C_Init *****************
  3708 ;; Defined at:
  3709 ;;		line 6 in file "I2C_Common.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  I2Cx            1    wreg     enum E2992
  3712 ;;  address         1    7[COMMON] unsigned char 
  3713 ;;  mode            1    8[COMMON] enum E2983
  3714 ;;  Speed           1    9[COMMON] enum E2987
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  I2Cx            1   10[COMMON] enum E2992
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3726 ;;      Params:         3       0       0       0       0       0
  3727 ;;      Locals:         1       0       0       0       0       0
  3728 ;;      Temps:          0       2       0       0       0       0
  3729 ;;      Totals:         4       2       0       0       0       0
  3730 ;;Total ram usage:        6 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    5
  3733 ;; This function calls:
  3734 ;;		_I2C2_Setting
  3735 ;; This function is called by:
  3736 ;;		_main
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           
  3741                           ;psect for function _I2C_Init
  3742  05A2                     _I2C_Init:	
  3743                           
  3744                           ;incstack = 0
  3745                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3746                           ;I2C_Init@I2Cx stored from wreg
  3747  05A2  00FA               	movwf	I2C_Init@I2Cx
  3748                           
  3749                           ;I2C_Common.c: 8: switch(I2Cx)
  3750  05A3  2DB2               	goto	l2728
  3751  05A4                     l2724:	
  3752                           ;I2C_Common.c: 14: case I2C2_MODULE:
  3753                           
  3754                           ;I2C_Common.c: 12: break;
  3755                           
  3756                           ;I2C_Common.c: 9: {
  3757                           ;I2C_Common.c: 10: case I2C1_MODULE:
  3758                           
  3759                           
  3760                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  3761  05A4  0878               	movf	I2C_Init@mode,w
  3762  05A5  0020               	movlb	0	; select bank0
  3763  05A6  00A0               	movwf	??_I2C_Init
  3764  05A7  0820               	movf	??_I2C_Init,w
  3765  05A8  00F3               	movwf	I2C2_Setting@mode
  3766  05A9  0879               	movf	I2C_Init@Speed,w
  3767  05AA  00A1               	movwf	??_I2C_Init+1
  3768  05AB  0821               	movf	??_I2C_Init+1,w
  3769  05AC  00F4               	movwf	I2C2_Setting@Speed
  3770  05AD  0877               	movf	I2C_Init@address,w
  3771  05AE  3184  24DC  3185   	fcall	_I2C2_Setting
  3772                           
  3773                           ;I2C_Common.c: 17: }
  3774                           
  3775                           ;I2C_Common.c: 16: break;
  3776  05B1  2DBA               	goto	l293
  3777  05B2                     l2728:	
  3778  05B2  087A               	movf	I2C_Init@I2Cx,w
  3779                           
  3780                           ; Switch size 1, requested type "space"
  3781                           ; Number of cases is 2, Range of values is 0 to 1
  3782                           ; switch strategies available:
  3783                           ; Name         Instructions Cycles
  3784                           ; simple_byte            7     4 (average)
  3785                           ; direct_byte           10     6 (fixed)
  3786                           ; jumptable            260     6 (fixed)
  3787                           ;	Chosen strategy is simple_byte
  3788  05B3  3A00               	xorlw	0	; case 0
  3789  05B4  1903               	skipnz
  3790  05B5  2DBA               	goto	l293
  3791  05B6  3A01               	xorlw	1	; case 1
  3792  05B7  1903               	skipnz
  3793  05B8  2DA4               	goto	l2724
  3794  05B9  2DBA               	goto	l293
  3795  05BA                     l293:	
  3796                           
  3797                           ;I2C_Common.c: 19: PEIE = 1;
  3798  05BA  170B               	bsf	11,6	;volatile
  3799                           
  3800                           ;I2C_Common.c: 20: GIE = 1;
  3801  05BB  178B               	bsf	11,7	;volatile
  3802  05BC  0008               	return
  3803  05BD                     __end_of_I2C_Init:	
  3804                           
  3805                           	psect	text16
  3806  04DC                     __ptext16:	
  3807 ;; *************** function _I2C2_Setting *****************
  3808 ;; Defined at:
  3809 ;;		line 15 in file "I2C2.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  address         1    wreg     unsigned char 
  3812 ;;  mode            1    3[COMMON] enum E2983
  3813 ;;  Speed           1    4[COMMON] enum E2987
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;  address         1    6[COMMON] unsigned char 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3825 ;;      Params:         2       0       0       0       0       0
  3826 ;;      Locals:         1       0       0       0       0       0
  3827 ;;      Temps:          1       0       0       0       0       0
  3828 ;;      Totals:         4       0       0       0       0       0
  3829 ;;Total ram usage:        4 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:    4
  3832 ;; This function calls:
  3833 ;;		_I2C2_PinInit
  3834 ;; This function is called by:
  3835 ;;		_I2C_Init
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           
  3840                           ;psect for function _I2C2_Setting
  3841  04DC                     _I2C2_Setting:	
  3842                           
  3843                           ;incstack = 0
  3844                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3845                           ;I2C2_Setting@address stored from wreg
  3846  04DC  00F6               	movwf	I2C2_Setting@address
  3847                           
  3848                           ;I2C2.c: 17: I2C2_PinInit();
  3849  04DD  3186  2619  3184   	fcall	_I2C2_PinInit
  3850                           
  3851                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  3852  04E0  0873               	movf	I2C2_Setting@mode,w
  3853  04E1  00F5               	movwf	??_I2C2_Setting
  3854  04E2  0875               	movf	??_I2C2_Setting,w
  3855  04E3  0021               	movlb	1	; select bank1
  3856  04E4  00C2               	movwf	(_I2C2_Config^(0+128)+34)
  3857                           
  3858                           ;I2C2.c: 20: switch(mode)
  3859  04E5  2D05               	goto	l2668
  3860  04E6                     l349:	
  3861                           ;I2C2.c: 21: {
  3862                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  3863                           
  3864                           
  3865                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  3866  04E6  0024               	movlb	4	; select bank4
  3867  04E7  159D               	bsf	29,3	;volatile
  3868                           
  3869                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  3870  04E8  0874               	movf	I2C2_Setting@Speed,w
  3871  04E9  1D03               	btfss	3,2
  3872  04EA  2CEE               	goto	l2646
  3873                           
  3874                           ;I2C2.c: 25: {
  3875                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  3876  04EB  179C               	bsf	28,7	;volatile
  3877                           
  3878                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  3879  04EC  304F               	movlw	79
  3880  04ED  2CF6               	goto	L7
  3881  04EE                     l2646:	
  3882                           ;I2C2.c: 28: }
  3883                           
  3884                           
  3885                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  3886  04EE  0374               	decf	I2C2_Setting@Speed,w
  3887  04EF  1D03               	btfss	3,2
  3888  04F0  2D03               	goto	l2664
  3889                           
  3890                           ;I2C2.c: 30: {
  3891                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  3892  04F1  307F               	movlw	127
  3893  04F2  00F5               	movwf	??_I2C2_Setting
  3894  04F3  0875               	movf	??_I2C2_Setting,w
  3895  04F4  059C               	andwf	28,f	;volatile
  3896                           
  3897                           ;I2C2.c: 32: SSP2ADD = 0x13;
  3898  04F5  3013               	movlw	19
  3899  04F6                     L7:	
  3900  04F6  009A               	movwf	26	;volatile
  3901  04F7  2D03               	goto	l2664
  3902  04F8                     l2654:	
  3903                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  3904                           
  3905                           ;I2C2.c: 35: break;
  3906                           
  3907                           ;I2C2.c: 33: }
  3908                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  3909                           
  3910                           
  3911                           ;I2C2.c: 38: SSP2STAT = 0x00;
  3912  04F8  0024               	movlb	4	; select bank4
  3913  04F9  019C               	clrf	28	;volatile
  3914                           
  3915                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  3916  04FA  3006               	movlw	6
  3917  04FB  00F5               	movwf	??_I2C2_Setting
  3918  04FC  0875               	movf	??_I2C2_Setting,w
  3919  04FD  049D               	iorwf	29,f	;volatile
  3920                           
  3921                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  3922  04FE  141E               	bsf	30,0	;volatile
  3923                           
  3924                           ;I2C2.c: 41: SSP2ADD = address << 1;
  3925  04FF  3576               	lslf	I2C2_Setting@address,w
  3926  0500  009A               	movwf	26	;volatile
  3927                           
  3928                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  3929  0501  30FE               	movlw	254
  3930  0502  009B               	movwf	27	;volatile
  3931  0503                     l2664:	
  3932                           
  3933                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  3934  0503  169D               	bsf	29,5	;volatile
  3935                           
  3936                           ;I2C2.c: 45: }
  3937                           
  3938                           ;I2C2.c: 44: break;
  3939  0504  2D0D               	goto	l353
  3940  0505                     l2668:	
  3941  0505  0873               	movf	I2C2_Setting@mode,w
  3942                           
  3943                           ; Switch size 1, requested type "space"
  3944                           ; Number of cases is 2, Range of values is 0 to 1
  3945                           ; switch strategies available:
  3946                           ; Name         Instructions Cycles
  3947                           ; simple_byte            7     4 (average)
  3948                           ; direct_byte           10     6 (fixed)
  3949                           ; jumptable            260     6 (fixed)
  3950                           ;	Chosen strategy is simple_byte
  3951  0506  3A00               	xorlw	0	; case 0
  3952  0507  1903               	skipnz
  3953  0508  2CE6               	goto	l349
  3954  0509  3A01               	xorlw	1	; case 1
  3955  050A  1903               	skipnz
  3956  050B  2CF8               	goto	l2654
  3957  050C  2D0D               	goto	l353
  3958  050D                     l353:	
  3959                           
  3960                           ;I2C2.c: 46: SSP2IE = 1;
  3961  050D  0021               	movlb	1	; select bank1
  3962  050E  1414               	bsf	20,0	;volatile
  3963                           
  3964                           ;I2C2.c: 47: BCL2IE = 1;
  3965  050F  1494               	bsf	20,1	;volatile
  3966                           
  3967                           ;I2C2.c: 48: SSP2IF = 0;
  3968  0510  0020               	movlb	0	; select bank0
  3969  0511  1014               	bcf	20,0	;volatile
  3970                           
  3971                           ;I2C2.c: 49: BCL2IF = 0;
  3972  0512  1094               	bcf	20,1	;volatile
  3973  0513  0008               	return
  3974  0514                     __end_of_I2C2_Setting:	
  3975                           
  3976                           	psect	text17
  3977  0619                     __ptext17:	
  3978 ;; *************** function _I2C2_PinInit *****************
  3979 ;; Defined at:
  3980 ;;		line 9 in file "I2C2.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg, status,2, status,0
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3994 ;;      Params:         0       0       0       0       0       0
  3995 ;;      Locals:         0       0       0       0       0       0
  3996 ;;      Temps:          1       0       0       0       0       0
  3997 ;;      Totals:         1       0       0       0       0       0
  3998 ;;Total ram usage:        1 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    3
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_I2C2_Setting
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           
  4009                           ;psect for function _I2C2_PinInit
  4010  0619                     _I2C2_PinInit:	
  4011                           
  4012                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  4013                           
  4014                           ;incstack = 0
  4015                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  4016  0619  3024               	movlw	36
  4017  061A  00F2               	movwf	??_I2C2_PinInit
  4018  061B  0872               	movf	??_I2C2_PinInit,w
  4019  061C  0021               	movlb	1	; select bank1
  4020  061D  048D               	iorwf	13,f	;volatile
  4021                           
  4022                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  4023  061E  30DB               	movlw	219
  4024  061F  00F2               	movwf	??_I2C2_PinInit
  4025  0620  0872               	movf	??_I2C2_PinInit,w
  4026  0621  0023               	movlb	3	; select bank3
  4027  0622  058D               	andwf	13,f	;volatile
  4028  0623  0008               	return
  4029  0624                     __end_of_I2C2_PinInit:	
  4030                           
  4031                           	psect	text18
  4032  05D2                     __ptext18:	
  4033 ;; *************** function _Basic_Init *****************
  4034 ;; Defined at:
  4035 ;;		line 34 in file "main.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      char 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4049 ;;      Params:         0       0       0       0       0       0
  4050 ;;      Locals:         0       0       0       0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0
  4052 ;;      Totals:         0       0       0       0       0       0
  4053 ;;Total ram usage:        0 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    3
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_main
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           
  4064                           ;psect for function _Basic_Init
  4065  05D2                     _Basic_Init:	
  4066                           
  4067                           ;main.c: 36: OSCCON = 0xF0;
  4068                           
  4069                           ;incstack = 0
  4070                           ; Regs used in _Basic_Init: [wreg+status,2]
  4071  05D2  30F0               	movlw	240
  4072  05D3  0021               	movlb	1	; select bank1
  4073  05D4  0099               	movwf	25	;volatile
  4074                           
  4075                           ;main.c: 40: TRISA = 0x07;
  4076  05D5  3007               	movlw	7
  4077  05D6  008C               	movwf	12	;volatile
  4078                           
  4079                           ;main.c: 41: ANSELA = 0x07;
  4080  05D7  3007               	movlw	7
  4081  05D8  0023               	movlb	3	; select bank3
  4082  05D9  008C               	movwf	12	;volatile
  4083                           
  4084                           ;main.c: 43: TRISB = 0x40;
  4085  05DA  3040               	movlw	64
  4086  05DB  0021               	movlb	1	; select bank1
  4087  05DC  008D               	movwf	13	;volatile
  4088                           
  4089                           ;main.c: 44: ANSELB = 0x00;
  4090  05DD  0023               	movlb	3	; select bank3
  4091  05DE  018D               	clrf	13	;volatile
  4092                           
  4093                           ;main.c: 46: APFCON0 = 0x08;
  4094  05DF  3008               	movlw	8
  4095  05E0  0022               	movlb	2	; select bank2
  4096  05E1  009D               	movwf	29	;volatile
  4097                           
  4098                           ;main.c: 47: APFCON1 = 0x00;
  4099  05E2  019E               	clrf	30	;volatile
  4100                           
  4101                           ;main.c: 49: PORTA = 0x00;
  4102  05E3  0020               	movlb	0	; select bank0
  4103  05E4  018C               	clrf	12	;volatile
  4104                           
  4105                           ;main.c: 50: PORTB = 0x00;
  4106  05E5  018D               	clrf	13	;volatile
  4107  05E6  0008               	return
  4108  05E7                     __end_of_Basic_Init:	
  4109                           ;main.c: 52: return 0;
  4110                           ;	Return value of _Basic_Init is never used
  4111                           
  4112                           
  4113                           	psect	intentry
  4114  0004                     __pintentry:	
  4115 ;; *************** function _hand *****************
  4116 ;; Defined at:
  4117 ;;		line 56 in file "main.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;		None
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4131 ;;      Params:         0       0       0       0       0       0
  4132 ;;      Locals:         0       0       0       0       0       0
  4133 ;;      Temps:          1       0       0       0       0       0
  4134 ;;      Totals:         1       0       0       0       0       0
  4135 ;;Total ram usage:        1 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    2
  4138 ;; This function calls:
  4139 ;;		_I2C_CommonInterrupt
  4140 ;; This function is called by:
  4141 ;;		Interrupt level 1
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145  0004                     _hand:	
  4146                           
  4147                           ;incstack = 0
  4148  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4149                           
  4150                           ; Regs used in _hand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4151  0005  3180               	pagesel	$
  4152  0006  0020               	movlb	0	; select bank0
  4153  0007  087F               	movf	127,w
  4154  0008  00F1               	movwf	??_hand
  4155                           
  4156                           ;main.c: 58: I2C_CommonInterrupt();
  4157  0009  3186  2634         	fcall	_I2C_CommonInterrupt
  4158  000B  0871               	movf	??_hand,w
  4159  000C  0020               	movlb	0	; select bank0
  4160  000D  00FF               	movwf	127
  4161  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4162  000F  0009               	retfie
  4163  0010                     __end_of_hand:	
  4164                           
  4165                           	psect	text20
  4166  0634                     __ptext20:	
  4167 ;; *************** function _I2C_CommonInterrupt *****************
  4168 ;; Defined at:
  4169 ;;		line 58 in file "I2C_Common.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4183 ;;      Params:         0       0       0       0       0       0
  4184 ;;      Locals:         0       0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0
  4186 ;;      Totals:         0       0       0       0       0       0
  4187 ;;Total ram usage:        0 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    1
  4190 ;; This function calls:
  4191 ;;		_I2C2_Interrupt
  4192 ;; This function is called by:
  4193 ;;		_hand
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _I2C_CommonInterrupt
  4199  0634                     _I2C_CommonInterrupt:	
  4200                           
  4201                           ;I2C_Common.c: 61: I2C2_Interrupt();
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4205  0634  3183  23B8         	fcall	_I2C2_Interrupt
  4206  0636  0008               	return
  4207  0637                     __end_of_I2C_CommonInterrupt:	
  4208                           
  4209                           	psect	text21
  4210  03B8                     __ptext21:	
  4211 ;; *************** function _I2C2_Interrupt *****************
  4212 ;; Defined at:
  4213 ;;		line 152 in file "I2C2.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;		None
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;		None
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4227 ;;      Params:         0       0       0       0       0       0
  4228 ;;      Locals:         0       0       0       0       0       0
  4229 ;;      Temps:          1       0       0       0       0       0
  4230 ;;      Totals:         1       0       0       0       0       0
  4231 ;;Total ram usage:        1 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_I2C_CommonInterrupt
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           
  4241                           ;psect for function _I2C2_Interrupt
  4242  03B8                     _I2C2_Interrupt:	
  4243                           
  4244                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  4245                           
  4246                           ;incstack = 0
  4247                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  4248  03B8  0020               	movlb	0	; select bank0
  4249  03B9  1C14               	btfss	20,0	;volatile
  4250  03BA  2C04               	goto	i1l2128
  4251  03BB  0021               	movlb	1	; select bank1
  4252  03BC  1C14               	btfss	20,0	;volatile
  4253  03BD  2C04               	goto	i1l2128
  4254                           
  4255                           ;I2C2.c: 155: {
  4256                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  4257  03BE  0024               	movlb	4	; select bank4
  4258  03BF  1E9C               	btfss	28,5	;volatile
  4259  03C0  2BDB               	goto	i1l432
  4260                           
  4261                           ;I2C2.c: 157: {
  4262                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  4263  03C1  1D1C               	btfss	28,2	;volatile
  4264  03C2  2BCE               	goto	i1l2104
  4265                           
  4266                           ;I2C2.c: 159: {
  4267                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  4268  03C3  1B1E               	btfsc	30,6	;volatile
  4269  03C4  2C02               	goto	i1l2126
  4270  03C5                     i1l2096:	
  4271                           ;I2C2.c: 161: {
  4272                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  4273                           
  4274  03C5  081C               	movf	28,w	;volatile
  4275  03C6  3901               	andlw	1
  4276  03C7  00F0               	movwf	??_I2C2_Interrupt
  4277  03C8  0E1D               	swapf	29,w	;volatile
  4278  03C9  3901               	andlw	1
  4279  03CA  0470               	iorwf	??_I2C2_Interrupt,w
  4280  03CB  1D03               	btfss	3,2
  4281  03CC  2BC5               	goto	i1l2096
  4282  03CD  2BEE               	goto	L8
  4283  03CE                     i1l2104:	
  4284                           ;I2C2.c: 166: }
  4285                           ;I2C2.c: 167: }
  4286                           
  4287                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  4288                           
  4289                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  4290                           
  4291                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  4292                           
  4293                           
  4294                           ;I2C2.c: 168: else
  4295                           ;I2C2.c: 169: {
  4296                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  4297  03CE  0819               	movf	25,w	;volatile
  4298  03CF  00F0               	movwf	??_I2C2_Interrupt
  4299  03D0  0021               	movlb	1	; select bank1
  4300  03D1  0841               	movf	(low ((_I2C2_Config| 0+33)))^(0+128),w
  4301  03D2  0086               	movwf	6
  4302  03D3  0187               	clrf	7
  4303  03D4  0870               	movf	??_I2C2_Interrupt,w
  4304  03D5  0081               	movwf	1
  4305                           
  4306                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  4307  03D6  3001               	movlw	1
  4308  03D7  00F0               	movwf	??_I2C2_Interrupt
  4309  03D8  0870               	movf	??_I2C2_Interrupt,w
  4310  03D9  07C1               	addwf	(low ((_I2C2_Config| 0+33)))^(0+128),f
  4311  03DA  2C00               	goto	i1l2124
  4312  03DB                     i1l432:	
  4313                           ;I2C2.c: 173: }
  4314                           ;I2C2.c: 174: }
  4315                           
  4316                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  4317                           
  4318                           
  4319                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  4320  03DB  1A9C               	btfsc	28,5	;volatile
  4321  03DC  2C02               	goto	i1l2126
  4322                           
  4323                           ;I2C2.c: 176: {
  4324                           ;I2C2.c: 177: SSP2BUF;
  4325  03DD  0819               	movf	25,w	;volatile
  4326                           
  4327                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  4328  03DE  1D1C               	btfss	28,2	;volatile
  4329  03DF  2BFB               	goto	i1l2122
  4330                           
  4331                           ;I2C2.c: 180: {
  4332                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  4333  03E0  30A0               	movlw	(low (_I2C2_Config| 0))& (0+255)
  4334  03E1  00F0               	movwf	??_I2C2_Interrupt
  4335  03E2  0870               	movf	??_I2C2_Interrupt,w
  4336  03E3  0021               	movlb	1	; select bank1
  4337  03E4  00C0               	movwf	(low ((_I2C2_Config| 0+32)))^(0+128)
  4338  03E5                     i1l2116:	
  4339                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  4340                           
  4341  03E5  0024               	movlb	4	; select bank4
  4342  03E6  081C               	movf	28,w	;volatile
  4343  03E7  3901               	andlw	1
  4344  03E8  00F0               	movwf	??_I2C2_Interrupt
  4345  03E9  0E1D               	swapf	29,w	;volatile
  4346  03EA  3901               	andlw	1
  4347  03EB  0470               	iorwf	??_I2C2_Interrupt,w
  4348  03EC  1D03               	btfss	3,2
  4349  03ED  2BE5               	goto	i1l2116
  4350  03EE                     L8:	
  4351                           
  4352                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  4353  03EE  0021               	movlb	1	; select bank1
  4354  03EF  0840               	movf	(low ((_I2C2_Config| 0+32)))^(0+128),w
  4355  03F0  0086               	movwf	6
  4356  03F1  0187               	clrf	7
  4357  03F2  0801               	movf	1,w
  4358  03F3  0024               	movlb	4	; select bank4
  4359  03F4  0099               	movwf	25	;volatile
  4360                           
  4361                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  4362  03F5  3001               	movlw	1
  4363  03F6  00F0               	movwf	??_I2C2_Interrupt
  4364  03F7  0870               	movf	??_I2C2_Interrupt,w
  4365  03F8  0021               	movlb	1	; select bank1
  4366  03F9  07C0               	addwf	(low ((_I2C2_Config| 0+32)))^(0+128),f
  4367                           
  4368                           ;I2C2.c: 186: }
  4369  03FA  2C00               	goto	i1l2124
  4370  03FB                     i1l2122:	
  4371                           
  4372                           ;I2C2.c: 187: else
  4373                           ;I2C2.c: 188: {
  4374                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  4375  03FB  30B0               	movlw	(low ((_I2C2_Config| 0+16)))& (0+255)
  4376  03FC  00F0               	movwf	??_I2C2_Interrupt
  4377  03FD  0870               	movf	??_I2C2_Interrupt,w
  4378  03FE  0021               	movlb	1	; select bank1
  4379  03FF  00C1               	movwf	(low ((_I2C2_Config| 0+33)))^(0+128)
  4380  0400                     i1l2124:	
  4381                           
  4382                           ;I2C2.c: 190: }
  4383                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  4384  0400  0024               	movlb	4	; select bank4
  4385  0401  161D               	bsf	29,4	;volatile
  4386  0402                     i1l2126:	
  4387                           
  4388                           ;I2C2.c: 192: }
  4389                           ;I2C2.c: 193: SSP2IF = 0;
  4390  0402  0020               	movlb	0	; select bank0
  4391  0403  1014               	bcf	20,0	;volatile
  4392  0404                     i1l2128:	
  4393                           
  4394                           ;I2C2.c: 194: }
  4395                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  4396  0404  0021               	movlb	1	; select bank1
  4397  0405  1C94               	btfss	20,1	;volatile
  4398  0406  0008               	return
  4399  0407  0020               	movlb	0	; select bank0
  4400  0408  1C94               	btfss	20,1	;volatile
  4401  0409  0008               	return
  4402                           
  4403                           ;I2C2.c: 197: BCL2IF = 0;
  4404  040A  1094               	bcf	20,1	;volatile
  4405  040B  0008               	return
  4406  040C                     __end_of_I2C2_Interrupt:	
  4407  007E                     btemp	set	126	;btemp
  4408  007E                     int$flags	set	126
  4409  007E                     wtemp0	set	126


Data Sizes:
    Strings     40
    Constant    0
    Data        4
    BSS         75
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     73      77
    BANK1            80      8      47
    BANK2            80      0      35
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 4
		 -> main@testdata(BANK1[4]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 4
		 -> main@testdata(BANK1[4]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 37
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[16]), I2C2_Config(BANK1[35]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 37
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[16]), I2C2_Config(BANK1[35]), 

    S261$ReceivePoint	PTR unsigned char  size(1) Largest target is 37
		 -> I2C2_Config(BANK1[35]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 37
		 -> I2C2_Config(BANK1[35]), 

    S261$TransmitPoint	PTR unsigned char  size(1) Largest target is 37
		 -> I2C2_Config(BANK1[35]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 37
		 -> I2C2_Config(BANK1[35]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[12]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[12]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _main->_I2C_Init
    _xvprintf->___lldiv
    _xvprintf->___llmod
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit

Critical Paths under _hand in COMMON

    _I2C_CommonInterrupt->_I2C2_Interrupt

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv

Critical Paths under _hand in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _hand in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hand in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hand in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hand in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    6911
                                             65 BANK0      8     8      0
                                              0 BANK1      8     8      0
                         _Basic_Init
                           _I2C_Init
                       _I2C_Transmit
                 _LCD_CursorPosition
                           _LCD_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                             12     2     10    4695
                                             53 BANK0     12     2     10
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    4215
                                              5 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     337
                                              8 COMMON     2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     262
                                              6 COMMON     2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     196
                                              5 COMMON     1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     220
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     290
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              6 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              5 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     196
                                              5 COMMON     3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0      88
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Transmit                                         8     5      3    1004
                                              0 BANK0      8     5      3
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C2_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             6     3      3     664
                                              7 COMMON     4     1      3
                                              0 BANK0      2     2      0
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (2) _I2C2_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (3) _I2C2_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _hand                                                 1     1      0       0
                                              1 COMMON     1     1      0
                _I2C_CommonInterrupt
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _I2C_Init
     _I2C2_Setting
       _I2C2_PinInit
   _I2C_Transmit
     _I2C2_Transmit
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _hand (ROOT)
   _I2C_CommonInterrupt
     _I2C2_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      AB       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     49      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      2F       8       58.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      23      10       43.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      AB      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Mar  7 12:04:45 2017

                 __CFG_CP$OFF 0000                I2C2_Transmit@i 0077         ??_I2C_CommonInterrupt 0071  
         ___wmul@multiplicand 0074                           l134 00B8                           l119 003C  
                         l152 0153                           l175 020A                           l353 050D  
                         l349 04E6                           l293 05BA                           l366 027E  
                         l375 02A2                           l384 02BA                           l538 058F  
                         _GIE 005F                           _RA3 0063                           _RA4 0064  
                __CFG_CPD$OFF 0000                  __CFG_BORV$LO 0000                           wreg 0009  
                  _Basic_Init 05D2                  __CFG_LVP$OFF 0000               __end_of_LCD_Put 0630  
                        l1800 044B                          l2602 01F0                          l2514 00A8  
                        l2506 007E                          l1804 0456                          l2460 0476  
                        l2620 0220                          l2540 00E0                          l2508 0081  
                        l2710 02D6                          l2622 0229                          l2614 0218  
                        l2542 00EE                          l2534 00D3                          l2526 00C5  
                        l2518 00B0                          l2712 02DB                          l2464 048E  
                        l2632 0251                          l2624 022D                          l2560 012F  
                        l2552 0108                          l2544 00F2                          l2458 0468  
                        l2634 0255                          l2562 0131                          l2554 011D  
                        l2724 05A4                          l2708 02BF                          l2716 02DD  
                        l2732 056C                          l2468 0499                          l1772 0589  
                        l1756 0532                          l1748 0523                          l2628 023F  
                        l2580 019B                          l2564 0136                          l2556 012A  
                        l2548 0104                          l2484 0055                          l2654 04F8  
                        l2646 04EE                          l2718 02E6                          l1790 041D  
                        l1766 05E8                          l2574 016D                          l2558 012D  
                        l2664 0503                          l2728 05B2                          l2672 0268  
                        l2736 057D                          l1792 042B                          l2576 0182  
                        l2568 013B                          l2674 0273                          l2738 0585  
                        l2586 01AC                          l2578 018B                          l2498 006A  
                        l2668 0505                          l2684 0291                          l2588 01AE  
                        l2756 0370                          l2694 0289                          l2598 01E8  
                        l2696 028D                          l2698 02AF                          STR_1 0541  
                        STR_2 0567                          STR_3 054D                          STR_4 055B  
                        STR_5 0561                          STR_6 0554                          u1225 04AA  
                        u1325 0420                          u1345 042C                          u2305 046B  
                        u1355 0440                          u1365 044C                          u2325 0484  
                        u1285 0590                          u2335 048F                          u1295 0595  
                        u2605 023D                          u2625 0263                          u2475 0102  
                        u2485 0116                          _PEIE 005E                          u2837 02F0  
                        u1975 05C3                          u2847 0308                          u2857 031B  
                        u2867 032F                          u2877 0613                          u2887 05CE  
                        u2897 04A4                  __CFG_WRT$OFF 0000                          _hand 0004  
                        _main 0351              __end_of_I2C_Init 05BD                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
               __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0074                          start 0010  
               __CFG_IESO$OFF 0000                 _LCD_WriteData 04A2                 __CFG_MCLRE$ON 0000  
            ??_I2C2_Interrupt 0070      __end_of_LCD_DisplayClear 0619         __size_of_I2C_Transmit 001E  
            __end_of_LCD_Init 0351                 __CFG_PLLEN$ON 0000                         ?_hand 0070  
                 LCD_Put@word 0075                         ?_main 0070                 __CFG_WDTE$OFF 0000  
             __end_of___lldiv 045F               __end_of___llmod 04A2                         i1l432 03DB  
                       _PORTA 000C                         _PORTB 000D                         _TRISA 008C  
                       _TRISB 008D             I2C2_Transmit@size 0073                 __CFG_PWRTE$ON 0000  
              __CFG_FCMEN$OFF 0000                         _xputc 0514                         _xputs 05E7  
                       pclath 000A                  main@testdata 00C3                         status 0003  
                       wtemp0 007E               __end_of_xprintf 060A                  _I2C_Transmit 0569  
          _LCD_CursorPosition 05BD                ?_LCD_WriteData 0070               __initialization 0012  
                __end_of_hand 0010                  __end_of_main 03B8           ?_LCD_CursorPosition 0075  
                      ??_hand 0071                        ??_main 0061                     ??_LCD_Put 0076  
                 ?_Basic_Init 0070                        _BCL2IE 04A1                        _BCL2IF 00A1  
            ___llmod@dividend 0076          ??_LCD_CursorPosition 0076                        _ANSELA 018C  
                      _ANSELB 018D                        ?_xputc 0070                        ?_xputs 0070  
                      i1l2104 03CE                        i1l2122 03FB                        i1l2124 0400  
                      i1l2116 03E5                        i1l2126 0402                        i1l2128 0404  
                      i1l2096 03C5            I2C2_Transmit@i_460 0078                        _OSCCON 0099  
          I2C2_Transmit@pData 0072                        _SSP2IE 04A0                        _SSP2IF 00A0  
                      ___wmul 0587                     ??___lldiv 007A                     ??___llmod 007A  
                      _outptr 007B              I2C_Transmit@I2Cx 0026                     ?_I2C_Init 0077  
            I2C_Transmit@size 0022                        xputc@c 0077                     ??_xprintf 005F  
     __end_of__initialization 0038                     ?_LCD_Init 0070               ??_LCD_WriteData 0072  
            __end_of_xvprintf 0266                __pcstackCOMMON 0070           __size_of_Basic_Init 0015  
                __pidataBANK1 0630                 __end_of_xputc 0541                 __end_of_xputs 05FA  
                  ??_I2C_Init 0020                       ??_xputc 0076                       ??_xputs 0078  
                  __pbssBANK0 0069                    __pbssBANK1 00A0                    __pbssBANK2 0120  
                  ??_LCD_Init 0076                  I2C_Init@I2Cx 007A   __end_of_I2C_CommonInterrupt 0637  
                I2C_Init@mode 0078                    __pmaintext 0351                       ?___wmul 0072  
                  __pintentry 0004             ?_LCD_DisplayClear 0070                       _APFCON0 011D  
                     _APFCON1 011E            ??_LCD_DisplayClear 0075                       _LCD_Put 062A  
                _xvprintf$190 0040                  _xvprintf$191 0042                  _xvprintf$189 003C  
                     _SSP2ADD 021A                       _SSP2BUF 0219                       _SSP2MSK 021B  
         I2C2_Transmit@result 0079         __end_of_I2C2_Transmit 02E8                       ___lldiv 040C  
             __size_of___wmul 001B                       ___llmod 045F               __CFG_STVREN$OFF 0000  
                     __ptext1 05FA                       __ptext2 003C                       __ptext3 05E7  
                     __ptext4 0514                       __ptext5 062A                       __ptext6 0587  
                     __ptext7 045F                       __ptext8 040C                       __ptext9 02E8  
                   ?_xvprintf 0025                  ??_Basic_Init 0072                       clrloop0 0625  
        end_of_initialization 0038                       _xprintf 05FA                main@resultdata 00C7  
               ?_I2C2_PinInit 0070                   _I2C1_Config 0120                   _I2C2_Config 00A0  
             ___lldiv@divisor 0072                 ?_I2C2_Setting 0073               ___lldiv@counter 0024  
           I2C_Transmit@pData 0021            __end_of_Basic_Init 05E7                  __pstringtext 0541  
            __CFG_FOSC$INTOSC 0000                    ??_xvprintf 0028       __size_of_I2C2_Interrupt 0054  
           __size_of_I2C_Init 001B   __size_of_LCD_CursorPosition 0015                ??_I2C2_PinInit 0072  
              ??_I2C2_Setting 0075             __size_of_LCD_Init 0069                __end_of___wmul 05A2  
         start_initialization 0012           I2C2_Setting@address 0076               ___llmod@divisor 0072  
             ___llmod@counter 0020          LCD_CursorPosition@tx 0077          LCD_CursorPosition@ty 0075  
       __end_of_LCD_WriteData 04DC                      ??___wmul 0076                   __pdataBANK1 00CB  
                    ?_LCD_Put 0075                   __pbssCOMMON 007B                     ___latbits 0001  
               __pcstackBANK0 0020                 __pcstackBANK1 00C3     __size_of_LCD_DisplayClear 000F  
             I2C_Init@address 0077                 ?_I2C_Transmit 0020                 I2C_Init@Speed 0079  
                    ?___lldiv 0072                      ?___llmod 0072  __size_of_I2C_CommonInterrupt 0003  
        __end_of_I2C2_PinInit 0624                      _I2C_Init 05A2          __end_of_I2C2_Setting 0514  
              _I2C2_Interrupt 03B8             __size_of_xvprintf 022A                      ?_xprintf 0055  
              __size_of_xputc 002D                __size_of_xputs 0013                      _LCD_Init 02E8  
              ___wmul@product 0076                ??_I2C_Transmit 0023                     clear_ram0 0624  
                   main@F3055 00CB          I2C2_Transmit@address 0076                      _SSP2CON1 021D  
                    _SSP2STAT 021C             ___wmul@multiplier 0072        __end_of_I2C2_Interrupt 040C  
                   _xfunc_out 006B              __size_of_LCD_Put 0006        __size_of_I2C2_Transmit 0082  
            __size_of___lldiv 0053              __size_of___llmod 0043            LCD_WriteData@point 0074  
             ?_I2C2_Interrupt 0070    __end_of_LCD_CursorPosition 05D2                      __ptext10 060A  
                    __ptext11 05BD                      __ptext20 0634                      __ptext12 04A2  
                    __ptext21 03B8                      __ptext13 0569                      __ptext14 0266  
                    __ptext15 05A2                      __ptext16 04DC                      __ptext17 0619  
                    __ptext18 05D2              _LCD_DisplayClear 060A                  _SSP2CON1bits 021D  
                _SSP2CON2bits 021E              __size_of_xprintf 0010                 __size_of_hand 000C  
               __size_of_main 0067                 _I2C2_Transmit 0266                      int$flags 007E  
       __size_of_I2C2_PinInit 000B           I2C_Transmit@address 0020                      _xfunc_in 0069  
       __size_of_I2C2_Setting 0038                  _SSP2STATbits 021C          __end_of_I2C_Transmit 0587  
           I2C2_Setting@Speed 0074                      _xvprintf 003C                    xprintf@arp 0060  
                  xprintf@fmt 0055                      intlevel1 0000           _I2C_CommonInterrupt 0634  
            ___lldiv@dividend 0076             __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 0619  
              ?_I2C2_Transmit 0072                  _I2C2_Setting 04DC                   xvprintf@arp 0027  
                 xvprintf@fmt 0025            I2C_Transmit@result 0027              I2C2_Setting@mode 0073  
        ?_I2C_CommonInterrupt 0070              ___lldiv@quotient 0020        __size_of_LCD_WriteData 003A  
                    xputs@str 0079                     xvprintf@c 0054                     xvprintf@d 0053  
                   xvprintf@f 004F                     xvprintf@i 0051                     xvprintf@j 0049  
                   xvprintf@p 0044                     xvprintf@r 0045                     xvprintf@s 002C  
                   xvprintf@v 004B                     xvprintf@w 0047  
