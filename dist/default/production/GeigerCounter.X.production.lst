

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun May 21 00:58:58 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.41
    26                           ; Generated 25/01/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F1827 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0113                     	;# 
   110  0114                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011A                     	;# 
   117  011B                     	;# 
   118  011D                     	;# 
   119  011E                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  0191                     	;# 
   123  0191                     	;# 
   124  0192                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0193                     	;# 
   128  0194                     	;# 
   129  0195                     	;# 
   130  0196                     	;# 
   131  0199                     	;# 
   132  019A                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019C                     	;# 
   138  019C                     	;# 
   139  019D                     	;# 
   140  019E                     	;# 
   141  019F                     	;# 
   142  020C                     	;# 
   143  020D                     	;# 
   144  0211                     	;# 
   145  0211                     	;# 
   146  0212                     	;# 
   147  0212                     	;# 
   148  0213                     	;# 
   149  0213                     	;# 
   150  0214                     	;# 
   151  0214                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0216                     	;# 
   157  0217                     	;# 
   158  0217                     	;# 
   159  0219                     	;# 
   160  021A                     	;# 
   161  021B                     	;# 
   162  021C                     	;# 
   163  021D                     	;# 
   164  021E                     	;# 
   165  021F                     	;# 
   166  0291                     	;# 
   167  0291                     	;# 
   168  0292                     	;# 
   169  0293                     	;# 
   170  0294                     	;# 
   171  0295                     	;# 
   172  0295                     	;# 
   173  0296                     	;# 
   174  0298                     	;# 
   175  0298                     	;# 
   176  0299                     	;# 
   177  029A                     	;# 
   178  029B                     	;# 
   179  029C                     	;# 
   180  029C                     	;# 
   181  029D                     	;# 
   182  029E                     	;# 
   183  029E                     	;# 
   184  0311                     	;# 
   185  0311                     	;# 
   186  0312                     	;# 
   187  0313                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  0394                     	;# 
   193  0395                     	;# 
   194  0396                     	;# 
   195  039A                     	;# 
   196  039C                     	;# 
   197  039D                     	;# 
   198  039E                     	;# 
   199  039F                     	;# 
   200  0415                     	;# 
   201  0416                     	;# 
   202  0417                     	;# 
   203  041C                     	;# 
   204  041D                     	;# 
   205  041E                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE9                     	;# 
   212  0FEA                     	;# 
   213  0FEB                     	;# 
   214  0FED                     	;# 
   215  0FEE                     	;# 
   216  0FEF                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0097                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009A                     	;# 
   258  009B                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  010C                     	;# 
   264  010D                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0113                     	;# 
   268  0114                     	;# 
   269  0115                     	;# 
   270  0116                     	;# 
   271  0117                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011A                     	;# 
   275  011B                     	;# 
   276  011D                     	;# 
   277  011E                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  0191                     	;# 
   281  0191                     	;# 
   282  0192                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0194                     	;# 
   287  0195                     	;# 
   288  0196                     	;# 
   289  0199                     	;# 
   290  019A                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019C                     	;# 
   296  019C                     	;# 
   297  019D                     	;# 
   298  019E                     	;# 
   299  019F                     	;# 
   300  020C                     	;# 
   301  020D                     	;# 
   302  0211                     	;# 
   303  0211                     	;# 
   304  0212                     	;# 
   305  0212                     	;# 
   306  0213                     	;# 
   307  0213                     	;# 
   308  0214                     	;# 
   309  0214                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0215                     	;# 
   313  0216                     	;# 
   314  0216                     	;# 
   315  0217                     	;# 
   316  0217                     	;# 
   317  0219                     	;# 
   318  021A                     	;# 
   319  021B                     	;# 
   320  021C                     	;# 
   321  021D                     	;# 
   322  021E                     	;# 
   323  021F                     	;# 
   324  0291                     	;# 
   325  0291                     	;# 
   326  0292                     	;# 
   327  0293                     	;# 
   328  0294                     	;# 
   329  0295                     	;# 
   330  0295                     	;# 
   331  0296                     	;# 
   332  0298                     	;# 
   333  0298                     	;# 
   334  0299                     	;# 
   335  029A                     	;# 
   336  029B                     	;# 
   337  029C                     	;# 
   338  029C                     	;# 
   339  029D                     	;# 
   340  029E                     	;# 
   341  029E                     	;# 
   342  0311                     	;# 
   343  0311                     	;# 
   344  0312                     	;# 
   345  0313                     	;# 
   346  0318                     	;# 
   347  0318                     	;# 
   348  0319                     	;# 
   349  031A                     	;# 
   350  0394                     	;# 
   351  0395                     	;# 
   352  0396                     	;# 
   353  039A                     	;# 
   354  039C                     	;# 
   355  039D                     	;# 
   356  039E                     	;# 
   357  039F                     	;# 
   358  0415                     	;# 
   359  0416                     	;# 
   360  0417                     	;# 
   361  041C                     	;# 
   362  041D                     	;# 
   363  041E                     	;# 
   364  0FE4                     	;# 
   365  0FE5                     	;# 
   366  0FE6                     	;# 
   367  0FE7                     	;# 
   368  0FE8                     	;# 
   369  0FE9                     	;# 
   370  0FEA                     	;# 
   371  0FEB                     	;# 
   372  0FED                     	;# 
   373  0FEE                     	;# 
   374  0FEF                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  0011                     	;# 
   390  0012                     	;# 
   391  0013                     	;# 
   392  0014                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  008C                     	;# 
   405  008D                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0093                     	;# 
   409  0094                     	;# 
   410  0095                     	;# 
   411  0096                     	;# 
   412  0097                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009A                     	;# 
   416  009B                     	;# 
   417  009B                     	;# 
   418  009C                     	;# 
   419  009D                     	;# 
   420  009E                     	;# 
   421  010C                     	;# 
   422  010D                     	;# 
   423  0111                     	;# 
   424  0112                     	;# 
   425  0113                     	;# 
   426  0114                     	;# 
   427  0115                     	;# 
   428  0116                     	;# 
   429  0117                     	;# 
   430  0118                     	;# 
   431  0119                     	;# 
   432  011A                     	;# 
   433  011B                     	;# 
   434  011D                     	;# 
   435  011E                     	;# 
   436  018C                     	;# 
   437  018D                     	;# 
   438  0191                     	;# 
   439  0191                     	;# 
   440  0192                     	;# 
   441  0193                     	;# 
   442  0193                     	;# 
   443  0193                     	;# 
   444  0194                     	;# 
   445  0195                     	;# 
   446  0196                     	;# 
   447  0199                     	;# 
   448  019A                     	;# 
   449  019B                     	;# 
   450  019B                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019C                     	;# 
   454  019C                     	;# 
   455  019D                     	;# 
   456  019E                     	;# 
   457  019F                     	;# 
   458  020C                     	;# 
   459  020D                     	;# 
   460  0211                     	;# 
   461  0211                     	;# 
   462  0212                     	;# 
   463  0212                     	;# 
   464  0213                     	;# 
   465  0213                     	;# 
   466  0214                     	;# 
   467  0214                     	;# 
   468  0215                     	;# 
   469  0215                     	;# 
   470  0215                     	;# 
   471  0216                     	;# 
   472  0216                     	;# 
   473  0217                     	;# 
   474  0217                     	;# 
   475  0219                     	;# 
   476  021A                     	;# 
   477  021B                     	;# 
   478  021C                     	;# 
   479  021D                     	;# 
   480  021E                     	;# 
   481  021F                     	;# 
   482  0291                     	;# 
   483  0291                     	;# 
   484  0292                     	;# 
   485  0293                     	;# 
   486  0294                     	;# 
   487  0295                     	;# 
   488  0295                     	;# 
   489  0296                     	;# 
   490  0298                     	;# 
   491  0298                     	;# 
   492  0299                     	;# 
   493  029A                     	;# 
   494  029B                     	;# 
   495  029C                     	;# 
   496  029C                     	;# 
   497  029D                     	;# 
   498  029E                     	;# 
   499  029E                     	;# 
   500  0311                     	;# 
   501  0311                     	;# 
   502  0312                     	;# 
   503  0313                     	;# 
   504  0318                     	;# 
   505  0318                     	;# 
   506  0319                     	;# 
   507  031A                     	;# 
   508  0394                     	;# 
   509  0395                     	;# 
   510  0396                     	;# 
   511  039A                     	;# 
   512  039C                     	;# 
   513  039D                     	;# 
   514  039E                     	;# 
   515  039F                     	;# 
   516  0415                     	;# 
   517  0416                     	;# 
   518  0417                     	;# 
   519  041C                     	;# 
   520  041D                     	;# 
   521  041E                     	;# 
   522  0FE4                     	;# 
   523  0FE5                     	;# 
   524  0FE6                     	;# 
   525  0FE7                     	;# 
   526  0FE8                     	;# 
   527  0FE9                     	;# 
   528  0FEA                     	;# 
   529  0FEB                     	;# 
   530  0FED                     	;# 
   531  0FEE                     	;# 
   532  0FEF                     	;# 
   533                           
   534                           	psect	stringtext
   535  01BA                     __pstringtext:	
   536  01BA                     _dpowers:	
   537  01BA  3401               	retlw	1
   538  01BB  3400               	retlw	0
   539  01BC  3400               	retlw	0
   540  01BD  3400               	retlw	0
   541  01BE  340A               	retlw	10
   542  01BF  3400               	retlw	0
   543  01C0  3400               	retlw	0
   544  01C1  3400               	retlw	0
   545  01C2  3464               	retlw	100
   546  01C3  3400               	retlw	0
   547  01C4  3400               	retlw	0
   548  01C5  3400               	retlw	0
   549  01C6  34E8               	retlw	232
   550  01C7  3403               	retlw	3
   551  01C8  3400               	retlw	0
   552  01C9  3400               	retlw	0
   553  01CA  3410               	retlw	16
   554  01CB  3427               	retlw	39
   555  01CC  3400               	retlw	0
   556  01CD  3400               	retlw	0
   557  01CE  34A0               	retlw	160
   558  01CF  3486               	retlw	134
   559  01D0  3401               	retlw	1
   560  01D1  3400               	retlw	0
   561  01D2  3440               	retlw	64
   562  01D3  3442               	retlw	66
   563  01D4  340F               	retlw	15
   564  01D5  3400               	retlw	0
   565  01D6  3480               	retlw	128
   566  01D7  3496               	retlw	150
   567  01D8  3498               	retlw	152
   568  01D9  3400               	retlw	0
   569  01DA  3400               	retlw	0
   570  01DB  34E1               	retlw	225
   571  01DC  34F5               	retlw	245
   572  01DD  3405               	retlw	5
   573  01DE  3400               	retlw	0
   574  01DF  34CA               	retlw	202
   575  01E0  349A               	retlw	154
   576  01E1  343B               	retlw	59
   577  01E2                     __end_of_dpowers:	
   578  0016                     _TMR1	set	22
   579  000C                     _PORTA	set	12
   580  0019                     _T1GCON	set	25
   581  0018                     _T1CON	set	24
   582  000D                     _PORTB	set	13
   583  00C0                     _TMR1ON	set	192
   584  005F                     _GIE	set	95
   585  005E                     _PEIE	set	94
   586  0088                     _TMR1IF	set	136
   587  0063                     _RA3	set	99
   588  0064                     _RA4	set	100
   589  008C                     _TRISA	set	140
   590  0099                     _OSCCON	set	153
   591  008D                     _TRISB	set	141
   592  0488                     _TMR1IE	set	1160
   593  011E                     _APFCON1	set	286
   594  011D                     _APFCON0	set	285
   595  018C                     _ANSELA	set	396
   596  018D                     _ANSELB	set	397
   597  01E2                     STR_3:	
   598  01E2  3425               	retlw	37	;'%'
   599  01E3  3430               	retlw	48	;'0'
   600  01E4  3438               	retlw	56	;'8'
   601  01E5  346C               	retlw	108	;'l'
   602  01E6  3458               	retlw	88	;'X'
   603  01E7  3420               	retlw	32	;' '
   604  01E8  3400               	retlw	0
   605  01E9                     STR_6:	
   606  01E9  3420               	retlw	32	;' '
   607  01EA  3425               	retlw	37	;'%'
   608  01EB  3430               	retlw	48	;'0'
   609  01EC  3438               	retlw	56	;'8'
   610  01ED  344C               	retlw	76	;'L'
   611  01EE  3458               	retlw	88	;'X'
   612  01EF  3400               	retlw	0
   613  01F0                     STR_4:	
   614  01F0  3420               	retlw	32	;' '
   615  01F1  3425               	retlw	37	;'%'
   616  01F2  3430               	retlw	48	;'0'
   617  01F3  3432               	retlw	50	;'2'
   618  01F4  3458               	retlw	88	;'X'
   619  01F5  3400               	retlw	0
   620  01F6                     STR_5:	
   621  01F6  3420               	retlw	32	;' '
   622  01F7  3425               	retlw	37	;'%'
   623  01F8  3430               	retlw	48	;'0'
   624  01F9  3434               	retlw	52	;'4'
   625  01FA  3458               	retlw	88	;'X'
   626  01FB  3400               	retlw	0
   627  01FC                     STR_1:	
   628  01FC  3425               	retlw	37	;'%'
   629  01FD  346C               	retlw	108	;'l'
   630  01FE  3475               	retlw	117	;'u'
   631  01FF  3420               	retlw	32	;' '
   632  0200  3400               	retlw	0
   633  0201                     STR_2:	
   634  0201  340D               	retlw	13
   635  0202  3400               	retlw	0
   636                           
   637                           ; #config settings
   638  0000                     
   639                           	psect	cinit
   640  000F                     start_initialization:	
   641  000F                     __initialization:	
   642                           
   643                           ; Clear objects allocated to COMMON
   644  000F  01FC               	clrf	__pbssCOMMON& (0+127)
   645                           
   646                           ; Clear objects allocated to BANK0
   647  0010  3040               	movlw	low __pbssBANK0
   648  0011  0084               	movwf	4
   649  0012  3000               	movlw	high __pbssBANK0
   650  0013  0085               	movwf	5
   651  0014  300E               	movlw	14
   652  0015  3182  22F7         	fcall	clear_ram0
   653  0017                     end_of_initialization:	
   654                           ;End of C runtime variable initialization code
   655                           
   656  0017                     __end_of__initialization:	
   657  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   658  0018  0020               	movlb	0
   659  0019  3182  2A80         	ljmp	_main	;jump to C main() function
   660                           
   661                           	psect	bssCOMMON
   662  007C                     __pbssCOMMON:	
   663  007C                     _outptr:	
   664  007C                     	ds	1
   665                           
   666                           	psect	bssBANK0
   667  0040                     __pbssBANK0:	
   668  0040                     _timesum:	
   669  0040                     	ds	4
   670  0044                     _countsum:	
   671  0044                     	ds	4
   672  0048                     _errno:	
   673  0048                     	ds	2
   674  004A                     _xfunc_in:	
   675  004A                     	ds	2
   676  004C                     _xfunc_out:	
   677  004C                     	ds	2
   678                           
   679                           	psect	clrtext
   680  02F7                     clear_ram0:	
   681                           ;	Called with FSR0 containing the base address, and
   682                           ;	WREG with the size to clear
   683                           
   684  02F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   685  02F8                     clrloop0:	
   686  02F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   687  02F9  3101               	addfsr 0,1
   688  02FA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   689  02FB  2AF8               	goto	clrloop0	;have we reached the end yet?
   690  02FC  3400               	retlw	0	;all done for this memory range, return
   691                           
   692                           	psect	cstackCOMMON
   693  0070                     __pcstackCOMMON:	
   694  0070                     ?_LCD_DisplayClear:	
   695  0070                     ?_Basic_Init:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_LCD_WriteData:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_LCD_Init:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_putch:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_Timer1_Init:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_main:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_Handler:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ??_Handler:	
   717                           ; 1 bytes @ 0x0
   718                           
   719                           
   720                           ; 1 bytes @ 0x0
   721  0070                     	ds	1
   722  0071                     ??_Basic_Init:	
   723  0071                     ??_LCD_WriteData:	
   724                           ; 1 bytes @ 0x1
   725                           
   726  0071                     ??_Timer1_Init:	
   727                           ; 1 bytes @ 0x1
   728                           
   729  0071                     ?___lldiv:	
   730                           ; 1 bytes @ 0x1
   731                           
   732  0071                     ___lldiv@divisor:	
   733                           ; 4 bytes @ 0x1
   734                           
   735                           
   736                           ; 4 bytes @ 0x1
   737  0071                     	ds	2
   738  0073                     LCD_WriteData@point:	
   739                           
   740                           ; 1 bytes @ 0x3
   741  0073                     	ds	1
   742  0074                     ??_LCD_DisplayClear:	
   743  0074                     ??_putch:	
   744                           ; 1 bytes @ 0x4
   745                           
   746  0074                     ?_LCD_CursorPosition:	
   747                           ; 1 bytes @ 0x4
   748                           
   749  0074                     putch@c:	
   750                           ; 1 bytes @ 0x4
   751                           
   752  0074                     LCD_CursorPosition@ty:	
   753                           ; 1 bytes @ 0x4
   754                           
   755                           
   756                           ; 1 bytes @ 0x4
   757  0074                     	ds	1
   758  0075                     ??_LCD_Init:	
   759  0075                     ??_LCD_CursorPosition:	
   760                           ; 1 bytes @ 0x5
   761                           
   762  0075                     ___lldiv@dividend:	
   763                           ; 1 bytes @ 0x5
   764                           
   765                           
   766                           ; 4 bytes @ 0x5
   767  0075                     	ds	1
   768  0076                     LCD_CursorPosition@tx:	
   769                           
   770                           ; 1 bytes @ 0x6
   771  0076                     	ds	3
   772  0079                     ??___lldiv:	
   773                           
   774                           ; 1 bytes @ 0x9
   775  0079                     	ds	1
   776  007A                     ??___llmod:	
   777                           
   778                           ; 1 bytes @ 0xA
   779  007A                     	ds	1
   780  007B                     ___llmod@counter:	
   781                           
   782                           ; 1 bytes @ 0xB
   783  007B                     	ds	1
   784  007C                     ??_main:	
   785                           
   786                           	psect	cstackBANK0
   787  0020                     __pcstackBANK0:	
   788                           ; 1 bytes @ 0xC
   789                           
   790  0020                     ___lldiv@quotient:	
   791                           
   792                           ; 4 bytes @ 0x0
   793  0020                     	ds	4
   794  0024                     ___lldiv@counter:	
   795                           
   796                           ; 1 bytes @ 0x4
   797  0024                     	ds	1
   798  0025                     ?___llmod:	
   799  0025                     ___llmod@divisor:	
   800                           ; 4 bytes @ 0x5
   801                           
   802                           
   803                           ; 4 bytes @ 0x5
   804  0025                     	ds	4
   805  0029                     ___llmod@dividend:	
   806                           
   807                           ; 4 bytes @ 0x9
   808  0029                     	ds	4
   809  002D                     ?_printf:	
   810  002D                     printf@f:	
   811                           ; 2 bytes @ 0xD
   812                           
   813                           
   814                           ; 2 bytes @ 0xD
   815  002D                     	ds	4
   816  0031                     ??_printf:	
   817                           
   818                           ; 1 bytes @ 0x11
   819  0031                     	ds	6
   820  0037                     printf@flag:	
   821                           
   822                           ; 1 bytes @ 0x17
   823  0037                     	ds	1
   824  0038                     printf@prec:	
   825                           
   826                           ; 2 bytes @ 0x18
   827  0038                     	ds	2
   828  003A                     printf@val:	
   829                           
   830                           ; 4 bytes @ 0x1A
   831  003A                     	ds	4
   832  003E                     printf@ap:	
   833                           
   834                           ; 1 bytes @ 0x1E
   835  003E                     	ds	1
   836  003F                     printf@c:	
   837                           
   838                           ; 1 bytes @ 0x1F
   839  003F                     	ds	1
   840                           
   841                           	psect	maintext
   842  0280                     __pmaintext:	
   843 ;;
   844 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   845 ;;
   846 ;; *************** function _main *****************
   847 ;; Defined at:
   848 ;;		line 13 in file "main.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      char 
   855 ;; Registers used:
   856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : B1F/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   862 ;;      Params:         0       0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0       0
   865 ;;      Totals:         0       0       0       0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels required when called:    4
   868 ;; This function calls:
   869 ;;		_Basic_Init
   870 ;;		_LCD_CursorPosition
   871 ;;		_LCD_Init
   872 ;;		_Timer1_Init
   873 ;;		_printf
   874 ;; This function is called by:
   875 ;;		Startup code after reset
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           
   880                           ;psect for function _main
   881  0280                     _main:	
   882                           
   883                           ;main.c: 15: Basic_Init();
   884                           
   885                           ;incstack = 0
   886                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   887  0280  3182  22CC  3182   	fcall	_Basic_Init
   888                           
   889                           ;main.c: 17: Timer1_Init();
   890  0283  3182  229D  3182   	fcall	_Timer1_Init
   891                           
   892                           ;main.c: 18: TMR1ON = 1;;
   893  0286  0020               	movlb	0	; select bank0
   894  0287  1418               	bsf	24,0	;volatile
   895                           
   896                           ;main.c: 20: LCD_Init();
   897  0288  3180  20FE  3182   	fcall	_LCD_Init
   898  028B                     l121:	
   899                           ;main.c: 22: while(1)
   900                           
   901                           
   902                           ;main.c: 23: {
   903                           ;main.c: 24: LCD_CursorPosition(0,0);
   904  028B  01F4               	clrf	LCD_CursorPosition@ty
   905  028C  3000               	movlw	0
   906  028D  3182  22B7  3182   	fcall	_LCD_CursorPosition
   907                           
   908                           ;main.c: 25: printf("%lu ",(uint16_t)TMR1);
   909  0290  30FC               	movlw	low (STR_1| (0+32768))
   910  0291  0020               	movlb	0	; select bank0
   911  0292  00AD               	movwf	printf@f
   912  0293  3081               	movlw	high (STR_1| (0+32768))
   913  0294  00AE               	movwf	printf@f+1
   914  0295  0817               	movf	23,w	;volatile
   915  0296  00B0               	movwf	?_printf+3
   916  0297  0816               	movf	22,w	;volatile
   917  0298  00AF               	movwf	?_printf+2
   918  0299  3180  201B  3182   	fcall	_printf
   919  029C  2A8B               	goto	l121
   920  029D                     __end_of_main:	
   921                           ;main.c: 26: }
   922                           ;main.c: 28: return 0;
   923                           ;	Return value of _main is never used
   924                           
   925                           
   926                           	psect	text1
   927  001B                     __ptext1:	
   928 ;; *************** function _printf *****************
   929 ;; Defined at:
   930 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  f               2   13[BANK0 ] PTR const unsigned char 
   933 ;;		 -> STR_1(5), 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  val             4   26[BANK0 ] unsigned long 
   936 ;;  tmpval          4    0        struct .
   937 ;;  prec            2   24[BANK0 ] int 
   938 ;;  cp              2    0        PTR const unsigned char 
   939 ;;  len             2    0        unsigned int 
   940 ;;  c               1   31[BANK0 ] char 
   941 ;;  ap              1   30[BANK0 ] PTR void [1]
   942 ;;		 -> ?_printf(2), 
   943 ;;  flag            1   23[BANK0 ] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  2   13[BANK0 ] int 
   946 ;; Registers used:
   947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   953 ;;      Params:         0       4       0       0       0       0
   954 ;;      Locals:         0       9       0       0       0       0
   955 ;;      Temps:          0       6       0       0       0       0
   956 ;;      Totals:         0      19       0       0       0       0
   957 ;;Total ram usage:       19 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    3
   960 ;; This function calls:
   961 ;;		___lldiv
   962 ;;		___llmod
   963 ;;		_putch
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _printf
   971  001B                     _printf:	
   972                           
   973                           ;doprnt.c: 466: va_list ap;
   974                           ;doprnt.c: 499: signed char c;
   975                           ;doprnt.c: 504: int prec;
   976                           ;doprnt.c: 508: unsigned char flag;
   977                           ;doprnt.c: 523: union {
   978                           ;doprnt.c: 524: unsigned long vd;
   979                           ;doprnt.c: 525: double integ;
   980                           ;doprnt.c: 526: } tmpval;
   981                           ;doprnt.c: 528: unsigned long val;
   982                           ;doprnt.c: 529: unsigned len;
   983                           ;doprnt.c: 530: const char * cp;
   984                           ;doprnt.c: 533: *ap = __va_start();
   985                           
   986                           ;incstack = 0
   987                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   988  001B  302F               	movlw	(low ((?_printf| 0+2)))& (0+255)
   989  001C  0020               	movlb	0	; select bank0
   990  001D  00B1               	movwf	??_printf
   991  001E  0831               	movf	??_printf,w
   992  001F  00BE               	movwf	printf@ap
   993  0020                     l1922:	
   994                           ;doprnt.c: 536: while(c = *f++) {
   995                           
   996  0020  0020               	movlb	0	; select bank0
   997  0021  082E               	movf	printf@f+1,w
   998  0022  00B2               	movwf	??_printf+1
   999  0023  082D               	movf	printf@f,w
  1000  0024  00B1               	movwf	??_printf
  1001  0025  0AAD               	incf	printf@f,f
  1002  0026  1903               	skipnz
  1003  0027  0AAE               	incf	printf@f+1,f
  1004  0028  0831               	movf	??_printf,w
  1005  0029  0084               	movwf	4
  1006  002A  0832               	movf	??_printf+1,w
  1007  002B  0085               	movwf	5
  1008  002C  0800               	movf	0,w	;code access
  1009  002D  00B3               	movwf	??_printf+2
  1010  002E  0833               	movf	??_printf+2,w
  1011  002F  00BF               	movwf	printf@c
  1012  0030  083F               	movf	printf@c,w
  1013  0031  1903               	btfsc	3,2
  1014  0032  0008               	return
  1015                           
  1016                           ;doprnt.c: 538: if(c != '%')
  1017  0033  3025               	movlw	37
  1018  0034  063F               	xorwf	printf@c,w
  1019  0035  1903               	btfsc	3,2
  1020  0036  283C               	goto	l1886
  1021                           
  1022                           ;doprnt.c: 540: {
  1023                           ;doprnt.c: 541: (putch(c) );
  1024  0037  083F               	movf	printf@c,w
  1025  0038  3182  22F0  3180   	fcall	_putch
  1026                           
  1027                           ;doprnt.c: 542: continue;
  1028  003B  2820               	goto	l1922
  1029  003C                     l1886:	
  1030                           
  1031                           ;doprnt.c: 543: }
  1032                           ;doprnt.c: 548: flag = 0;
  1033  003C  0020               	movlb	0	; select bank0
  1034  003D  01B7               	clrf	printf@flag
  1035                           
  1036                           ;doprnt.c: 635: switch(c = *f++) {
  1037                           
  1038                           ;doprnt.c: 633: loop:
  1039  003E  2846               	goto	l1892
  1040  003F                     l330:	
  1041                           ;doprnt.c: 641: case 'l':
  1042                           
  1043                           ;doprnt.c: 638: goto alldone;
  1044                           
  1045                           ;doprnt.c: 637: case 0:
  1046                           
  1047                           
  1048                           ;doprnt.c: 643: flag |= 0x10;
  1049  003F  1637               	bsf	printf@flag,4
  1050                           
  1051                           ;doprnt.c: 644: goto loop;
  1052  0040  2846               	goto	l1892
  1053  0041                     l1888:	
  1054                           ;doprnt.c: 817: case 'u':
  1055                           
  1056                           ;doprnt.c: 813: continue;
  1057                           
  1058                           ;doprnt.c: 802: default:
  1059                           
  1060                           
  1061                           ;doprnt.c: 818: flag |= 0xC0;
  1062  0041  30C0               	movlw	192
  1063  0042  00B1               	movwf	??_printf
  1064  0043  0831               	movf	??_printf,w
  1065  0044  04B7               	iorwf	printf@flag,f
  1066                           
  1067                           ;doprnt.c: 822: }
  1068                           
  1069                           ;doprnt.c: 819: break;
  1070  0045  285D               	goto	l333
  1071  0046                     l1892:	
  1072  0046  082E               	movf	printf@f+1,w
  1073  0047  00B2               	movwf	??_printf+1
  1074  0048  082D               	movf	printf@f,w
  1075  0049  00B1               	movwf	??_printf
  1076  004A  0AAD               	incf	printf@f,f
  1077  004B  1903               	skipnz
  1078  004C  0AAE               	incf	printf@f+1,f
  1079  004D  0831               	movf	??_printf,w
  1080  004E  0084               	movwf	4
  1081  004F  0832               	movf	??_printf+1,w
  1082  0050  0085               	movwf	5
  1083  0051  0800               	movf	0,w	;code access
  1084  0052  00BF               	movwf	printf@c
  1085                           
  1086                           ; Switch size 1, requested type "space"
  1087                           ; Number of cases is 3, Range of values is 0 to 117
  1088                           ; switch strategies available:
  1089                           ; Name         Instructions Cycles
  1090                           ; simple_byte           10     6 (average)
  1091                           ; direct_byte          242     6 (fixed)
  1092                           ; jumptable            260     6 (fixed)
  1093                           ;	Chosen strategy is simple_byte
  1094  0053  3A00               	xorlw	0	; case 0
  1095  0054  1903               	skipnz
  1096  0055  28FD               	goto	l343
  1097  0056  3A6C               	xorlw	108	; case 108
  1098  0057  1903               	skipnz
  1099  0058  283F               	goto	l330
  1100  0059  3A19               	xorlw	25	; case 117
  1101  005A  1903               	skipnz
  1102  005B  2841               	goto	l1888
  1103  005C  2820               	goto	l1922
  1104  005D                     l333:	
  1105                           
  1106                           ;doprnt.c: 1273: {
  1107                           ;doprnt.c: 1281: if(flag & 0x10)
  1108  005D  1E37               	btfss	printf@flag,4
  1109  005E  286C               	goto	l1898
  1110                           
  1111                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  1112  005F  083E               	movf	printf@ap,w
  1113  0060  0086               	movwf	6
  1114  0061  0187               	clrf	7
  1115  0062  3F40               	moviw [0]fsr1
  1116  0063  00BA               	movwf	printf@val
  1117  0064  3F41               	moviw [1]fsr1
  1118  0065  00BB               	movwf	printf@val+1
  1119  0066  3F42               	moviw [2]fsr1
  1120  0067  00BC               	movwf	printf@val+2
  1121  0068  3F43               	moviw [3]fsr1
  1122  0069  00BD               	movwf	printf@val+3
  1123  006A  3004               	movlw	4
  1124  006B  287A               	goto	L1
  1125  006C                     l1898:	
  1126                           
  1127                           ;doprnt.c: 1283: else
  1128                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1129  006C  083E               	movf	printf@ap,w
  1130  006D  0086               	movwf	6
  1131  006E  0187               	clrf	7
  1132  006F  3F40               	moviw [0]fsr1
  1133  0070  00B1               	movwf	??_printf
  1134  0071  3F41               	moviw [1]fsr1
  1135  0072  00B2               	movwf	??_printf+1
  1136  0073  0831               	movf	??_printf,w
  1137  0074  00BA               	movwf	printf@val
  1138  0075  0832               	movf	??_printf+1,w
  1139  0076  00BB               	movwf	printf@val+1
  1140  0077  01BC               	clrf	printf@val+2
  1141  0078  01BD               	clrf	printf@val+3
  1142  0079  3002               	movlw	2
  1143  007A                     L1:	
  1144  007A  00B1               	movwf	??_printf
  1145  007B  0831               	movf	??_printf,w
  1146  007C  07BE               	addwf	printf@ap,f
  1147                           
  1148                           ;doprnt.c: 1287: }
  1149                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1150  007D  01BF               	clrf	printf@c
  1151  007E  0ABF               	incf	printf@c,f
  1152  007F  300A               	movlw	10
  1153  0080  063F               	xorwf	printf@c,w
  1154  0081  1903               	btfsc	3,2
  1155  0082  28B0               	goto	l1914
  1156  0083                     l1908:	
  1157                           
  1158                           ;doprnt.c: 1306: if(val < dpowers[c])
  1159  0083  083F               	movf	printf@c,w
  1160  0084  00B1               	movwf	??_printf
  1161  0085  01B2               	clrf	??_printf+1
  1162  0086  35B1               	lslf	??_printf,f
  1163  0087  0DB2               	rlf	??_printf+1,f
  1164  0088  35B1               	lslf	??_printf,f
  1165  0089  0DB2               	rlf	??_printf+1,f
  1166  008A  30BA               	movlw	low (_dpowers| (0+32768))
  1167  008B  0731               	addwf	??_printf,w
  1168  008C  0084               	movwf	4
  1169  008D  3081               	movlw	high (_dpowers| (0+32768))
  1170  008E  3D32               	addwfc	??_printf+1,w
  1171  008F  0085               	movwf	5
  1172  0090  3F00               	moviw [0]fsr0
  1173  0091  00B3               	movwf	??_printf+2
  1174  0092  3F01               	moviw [1]fsr0
  1175  0093  00B4               	movwf	??_printf+3
  1176  0094  3F02               	moviw [2]fsr0
  1177  0095  00B5               	movwf	??_printf+4
  1178  0096  3F03               	moviw [3]fsr0
  1179  0097  00B6               	movwf	??_printf+5
  1180  0098  0836               	movf	??_printf+5,w
  1181  0099  023D               	subwf	printf@val+3,w
  1182  009A  1D03               	skipz
  1183  009B  28A6               	goto	u1705
  1184  009C  0835               	movf	??_printf+4,w
  1185  009D  023C               	subwf	printf@val+2,w
  1186  009E  1D03               	skipz
  1187  009F  28A6               	goto	u1705
  1188  00A0  0834               	movf	??_printf+3,w
  1189  00A1  023B               	subwf	printf@val+1,w
  1190  00A2  1D03               	skipz
  1191  00A3  28A6               	goto	u1705
  1192  00A4  0833               	movf	??_printf+2,w
  1193  00A5  023A               	subwf	printf@val,w
  1194  00A6                     u1705:	
  1195  00A6  1C03               	btfss	3,0
  1196  00A7  28B0               	goto	l1914
  1197                           
  1198                           ;doprnt.c: 1307: break;
  1199  00A8  3001               	movlw	1
  1200  00A9  00B1               	movwf	??_printf
  1201  00AA  0831               	movf	??_printf,w
  1202  00AB  07BF               	addwf	printf@c,f
  1203  00AC  300A               	movlw	10
  1204  00AD  063F               	xorwf	printf@c,w
  1205  00AE  1D03               	btfss	3,2
  1206  00AF  2883               	goto	l1908
  1207  00B0                     l1914:	
  1208                           
  1209                           ;doprnt.c: 1422: {
  1210                           ;doprnt.c: 1469: }
  1211                           ;doprnt.c: 1472: prec = c;
  1212  00B0  083F               	movf	printf@c,w
  1213  00B1  00B8               	movwf	printf@prec
  1214  00B2  01B9               	clrf	printf@prec+1
  1215  00B3  1BB8               	btfsc	printf@prec,7
  1216  00B4  03B9               	decf	printf@prec+1,f
  1217  00B5                     l1920:	
  1218                           ;doprnt.c: 1474: while(prec--) {
  1219                           
  1220  00B5  30FF               	movlw	255
  1221  00B6  0020               	movlb	0	; select bank0
  1222  00B7  07B8               	addwf	printf@prec,f
  1223  00B8  30FF               	movlw	255
  1224  00B9  3DB9               	addwfc	printf@prec+1,f
  1225  00BA  0A38               	incf	printf@prec,w
  1226  00BB  1903               	btfsc	3,2
  1227  00BC  0A39               	incf	printf@prec+1,w
  1228  00BD  1903               	btfsc	3,2
  1229  00BE  2820               	goto	l1922
  1230                           
  1231                           ;doprnt.c: 1478: {
  1232                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1233  00BF  3000               	movlw	0
  1234  00C0  00A8               	movwf	___llmod@divisor+3
  1235  00C1  3000               	movlw	0
  1236  00C2  00A7               	movwf	___llmod@divisor+2
  1237  00C3  3000               	movlw	0
  1238  00C4  00A6               	movwf	___llmod@divisor+1
  1239  00C5  300A               	movlw	10
  1240  00C6  00A5               	movwf	___llmod@divisor
  1241  00C7  0839               	movf	printf@prec+1,w
  1242  00C8  0085               	movwf	5
  1243  00C9  0838               	movf	printf@prec,w
  1244  00CA  0084               	movwf	4
  1245  00CB  3584               	lslf	4,f
  1246  00CC  0D85               	rlf	5,f
  1247  00CD  3584               	lslf	4,f
  1248  00CE  0D85               	rlf	5,f
  1249  00CF  30BA               	movlw	low (_dpowers| (0+32768))
  1250  00D0  0784               	addwf	4,f
  1251  00D1  3081               	movlw	high (_dpowers| (0+32768))
  1252  00D2  3D85               	addwfc	5,f
  1253  00D3  3F00               	moviw [0]fsr0
  1254  00D4  00F1               	movwf	___lldiv@divisor
  1255  00D5  3F01               	moviw [1]fsr0
  1256  00D6  00F2               	movwf	___lldiv@divisor+1
  1257  00D7  3F02               	moviw [2]fsr0
  1258  00D8  00F3               	movwf	___lldiv@divisor+2
  1259  00D9  3F03               	moviw [3]fsr0
  1260  00DA  00F4               	movwf	___lldiv@divisor+3
  1261  00DB  083D               	movf	printf@val+3,w
  1262  00DC  00F8               	movwf	___lldiv@dividend+3
  1263  00DD  083C               	movf	printf@val+2,w
  1264  00DE  00F7               	movwf	___lldiv@dividend+2
  1265  00DF  083B               	movf	printf@val+1,w
  1266  00E0  00F6               	movwf	___lldiv@dividend+1
  1267  00E1  083A               	movf	printf@val,w
  1268  00E2  00F5               	movwf	___lldiv@dividend
  1269  00E3  3181  2167  3180   	fcall	___lldiv
  1270  00E6  0874               	movf	?___lldiv+3,w
  1271  00E7  0020               	movlb	0	; select bank0
  1272  00E8  00AC               	movwf	___llmod@dividend+3
  1273  00E9  0873               	movf	?___lldiv+2,w
  1274  00EA  00AB               	movwf	___llmod@dividend+2
  1275  00EB  0872               	movf	?___lldiv+1,w
  1276  00EC  00AA               	movwf	___llmod@dividend+1
  1277  00ED  0871               	movf	?___lldiv,w
  1278  00EE  00A9               	movwf	___llmod@dividend
  1279  00EF  3182  2203  3180   	fcall	___llmod
  1280  00F2  0020               	movlb	0	; select bank0
  1281  00F3  0825               	movf	?___llmod,w
  1282  00F4  3E30               	addlw	48
  1283  00F5  00B1               	movwf	??_printf
  1284  00F6  0831               	movf	??_printf,w
  1285  00F7  00BF               	movwf	printf@c
  1286                           
  1287                           ;doprnt.c: 1523: }
  1288                           ;doprnt.c: 1524: (putch(c) );
  1289  00F8  083F               	movf	printf@c,w
  1290  00F9  3182  22F0  3180   	fcall	_putch
  1291  00FC  28B5               	goto	l1920
  1292  00FD                     l343:	
  1293                           ;doprnt.c: 1540: return 0;
  1294                           ;	Return value of _printf is never used
  1295                           
  1296                           ;doprnt.c: 1525: }
  1297                           ;doprnt.c: 1533: }
  1298                           ;doprnt.c: 1535: alldone:
  1299                           
  1300  00FD  0008               	return
  1301  00FE                     __end_of_printf:	
  1302                           
  1303                           	psect	text2
  1304  02F0                     __ptext2:	
  1305 ;; *************** function _putch *****************
  1306 ;; Defined at:
  1307 ;;		line 64 in file "LCD.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  c               1    wreg     unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  c               1    4[COMMON] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, pclath, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1321 ;;      Params:         0       0       0       0       0       0
  1322 ;;      Locals:         1       0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0
  1324 ;;      Totals:         1       0       0       0       0       0
  1325 ;;Total ram usage:        1 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    2
  1328 ;; This function calls:
  1329 ;;		_LCD_WriteData
  1330 ;; This function is called by:
  1331 ;;		_printf
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           
  1336                           ;psect for function _putch
  1337  02F0                     _putch:	
  1338                           
  1339                           ;incstack = 0
  1340                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  1341                           ;putch@c stored from wreg
  1342  02F0  00F4               	movwf	putch@c
  1343                           
  1344                           ;LCD.c: 66: RA3 = 1;
  1345  02F1  0020               	movlb	0	; select bank0
  1346  02F2  158C               	bsf	12,3	;volatile
  1347                           
  1348                           ;LCD.c: 67: LCD_WriteData(c);
  1349  02F3  0874               	movf	putch@c,w
  1350  02F4  3182  2246         	fcall	_LCD_WriteData
  1351  02F6  0008               	return
  1352  02F7                     __end_of_putch:	
  1353                           
  1354                           	psect	text3
  1355  0203                     __ptext3:	
  1356 ;; *************** function ___llmod *****************
  1357 ;; Defined at:
  1358 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  divisor         4    5[BANK0 ] unsigned long 
  1361 ;;  dividend        4    9[BANK0 ] unsigned long 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  counter         1   11[COMMON] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  4    5[BANK0 ] unsigned long 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, status,0
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1373 ;;      Params:         0       8       0       0       0       0
  1374 ;;      Locals:         1       0       0       0       0       0
  1375 ;;      Temps:          1       0       0       0       0       0
  1376 ;;      Totals:         2       8       0       0       0       0
  1377 ;;Total ram usage:       10 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_printf
  1384 ;;		_xvprintf
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function ___llmod
  1390  0203                     ___llmod:	
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  1394  0203  0020               	movlb	0	; select bank0
  1395  0204  0828               	movf	___llmod@divisor+3,w
  1396  0205  0427               	iorwf	___llmod@divisor+2,w
  1397  0206  0426               	iorwf	___llmod@divisor+1,w
  1398  0207  0425               	iorwf	___llmod@divisor,w
  1399  0208  1903               	skipnz
  1400  0209  2A3D               	goto	l1826
  1401  020A  01FB               	clrf	___llmod@counter
  1402  020B  0AFB               	incf	___llmod@counter,f
  1403  020C                     l1816:	
  1404  020C  1BA8               	btfsc	___llmod@divisor+3,7
  1405  020D  2A1A               	goto	l1818
  1406  020E  3001               	movlw	1
  1407  020F                     u1615:	
  1408  020F  35A5               	lslf	___llmod@divisor,f
  1409  0210  0DA6               	rlf	___llmod@divisor+1,f
  1410  0211  0DA7               	rlf	___llmod@divisor+2,f
  1411  0212  0DA8               	rlf	___llmod@divisor+3,f
  1412  0213  0B89               	decfsz	9,f
  1413  0214  2A0F               	goto	u1615
  1414  0215  3001               	movlw	1
  1415  0216  00FA               	movwf	??___llmod
  1416  0217  087A               	movf	??___llmod,w
  1417  0218  07FB               	addwf	___llmod@counter,f
  1418  0219  2A0C               	goto	l1816
  1419  021A                     l1818:	
  1420  021A  0828               	movf	___llmod@divisor+3,w
  1421  021B  022C               	subwf	___llmod@dividend+3,w
  1422  021C  1D03               	skipz
  1423  021D  2A28               	goto	u1635
  1424  021E  0827               	movf	___llmod@divisor+2,w
  1425  021F  022B               	subwf	___llmod@dividend+2,w
  1426  0220  1D03               	skipz
  1427  0221  2A28               	goto	u1635
  1428  0222  0826               	movf	___llmod@divisor+1,w
  1429  0223  022A               	subwf	___llmod@dividend+1,w
  1430  0224  1D03               	skipz
  1431  0225  2A28               	goto	u1635
  1432  0226  0825               	movf	___llmod@divisor,w
  1433  0227  0229               	subwf	___llmod@dividend,w
  1434  0228                     u1635:	
  1435  0228  1C03               	skipc
  1436  0229  2A32               	goto	l1822
  1437  022A  0825               	movf	___llmod@divisor,w
  1438  022B  02A9               	subwf	___llmod@dividend,f
  1439  022C  0826               	movf	___llmod@divisor+1,w
  1440  022D  3BAA               	subwfb	___llmod@dividend+1,f
  1441  022E  0827               	movf	___llmod@divisor+2,w
  1442  022F  3BAB               	subwfb	___llmod@dividend+2,f
  1443  0230  0828               	movf	___llmod@divisor+3,w
  1444  0231  3BAC               	subwfb	___llmod@dividend+3,f
  1445  0232                     l1822:	
  1446  0232  3001               	movlw	1
  1447  0233                     u1645:	
  1448  0233  36A8               	lsrf	___llmod@divisor+3,f
  1449  0234  0CA7               	rrf	___llmod@divisor+2,f
  1450  0235  0CA6               	rrf	___llmod@divisor+1,f
  1451  0236  0CA5               	rrf	___llmod@divisor,f
  1452  0237  0B89               	decfsz	9,f
  1453  0238  2A33               	goto	u1645
  1454  0239  3001               	movlw	1
  1455  023A  02FB               	subwf	___llmod@counter,f
  1456  023B  1D03               	btfss	3,2
  1457  023C  2A1A               	goto	l1818
  1458  023D                     l1826:	
  1459  023D  082C               	movf	___llmod@dividend+3,w
  1460  023E  00A8               	movwf	?___llmod+3
  1461  023F  082B               	movf	___llmod@dividend+2,w
  1462  0240  00A7               	movwf	?___llmod+2
  1463  0241  082A               	movf	___llmod@dividend+1,w
  1464  0242  00A6               	movwf	?___llmod+1
  1465  0243  0829               	movf	___llmod@dividend,w
  1466  0244  00A5               	movwf	?___llmod
  1467  0245  0008               	return
  1468  0246                     __end_of___llmod:	
  1469                           
  1470                           	psect	text4
  1471  0167                     __ptext4:	
  1472 ;; *************** function ___lldiv *****************
  1473 ;; Defined at:
  1474 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  divisor         4    1[COMMON] unsigned long 
  1477 ;;  dividend        4    5[COMMON] unsigned long 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  quotient        4    0[BANK0 ] unsigned long 
  1480 ;;  counter         1    4[BANK0 ] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  4    1[COMMON] unsigned long 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1490 ;;      Params:         8       0       0       0       0       0
  1491 ;;      Locals:         0       5       0       0       0       0
  1492 ;;      Temps:          1       0       0       0       0       0
  1493 ;;      Totals:         9       5       0       0       0       0
  1494 ;;Total ram usage:       14 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    1
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_printf
  1501 ;;		_Timer1_GetCPM
  1502 ;;		_xvprintf
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function ___lldiv
  1508  0167                     ___lldiv:	
  1509                           
  1510                           ;incstack = 0
  1511                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1512  0167  3000               	movlw	0
  1513  0168  0020               	movlb	0	; select bank0
  1514  0169  00A3               	movwf	___lldiv@quotient+3
  1515  016A  3000               	movlw	0
  1516  016B  00A2               	movwf	___lldiv@quotient+2
  1517  016C  3000               	movlw	0
  1518  016D  00A1               	movwf	___lldiv@quotient+1
  1519  016E  3000               	movlw	0
  1520  016F  00A0               	movwf	___lldiv@quotient
  1521  0170  0874               	movf	___lldiv@divisor+3,w
  1522  0171  0473               	iorwf	___lldiv@divisor+2,w
  1523  0172  0472               	iorwf	___lldiv@divisor+1,w
  1524  0173  0471               	iorwf	___lldiv@divisor,w
  1525  0174  1903               	skipnz
  1526  0175  29B1               	goto	l1806
  1527  0176  01A4               	clrf	___lldiv@counter
  1528  0177  0AA4               	incf	___lldiv@counter,f
  1529  0178                     l1792:	
  1530  0178  1BF4               	btfsc	___lldiv@divisor+3,7
  1531  0179  2986               	goto	l1794
  1532  017A  3001               	movlw	1
  1533  017B                     u1545:	
  1534  017B  35F1               	lslf	___lldiv@divisor,f
  1535  017C  0DF2               	rlf	___lldiv@divisor+1,f
  1536  017D  0DF3               	rlf	___lldiv@divisor+2,f
  1537  017E  0DF4               	rlf	___lldiv@divisor+3,f
  1538  017F  0B89               	decfsz	9,f
  1539  0180  297B               	goto	u1545
  1540  0181  3001               	movlw	1
  1541  0182  00F9               	movwf	??___lldiv
  1542  0183  0879               	movf	??___lldiv,w
  1543  0184  07A4               	addwf	___lldiv@counter,f
  1544  0185  2978               	goto	l1792
  1545  0186                     l1794:	
  1546  0186  3001               	movlw	1
  1547  0187                     u1565:	
  1548  0187  35A0               	lslf	___lldiv@quotient,f
  1549  0188  0DA1               	rlf	___lldiv@quotient+1,f
  1550  0189  0DA2               	rlf	___lldiv@quotient+2,f
  1551  018A  0DA3               	rlf	___lldiv@quotient+3,f
  1552  018B  0B89               	decfsz	9,f
  1553  018C  2987               	goto	u1565
  1554  018D  0874               	movf	___lldiv@divisor+3,w
  1555  018E  0278               	subwf	___lldiv@dividend+3,w
  1556  018F  1D03               	skipz
  1557  0190  299B               	goto	u1575
  1558  0191  0873               	movf	___lldiv@divisor+2,w
  1559  0192  0277               	subwf	___lldiv@dividend+2,w
  1560  0193  1D03               	skipz
  1561  0194  299B               	goto	u1575
  1562  0195  0872               	movf	___lldiv@divisor+1,w
  1563  0196  0276               	subwf	___lldiv@dividend+1,w
  1564  0197  1D03               	skipz
  1565  0198  299B               	goto	u1575
  1566  0199  0871               	movf	___lldiv@divisor,w
  1567  019A  0275               	subwf	___lldiv@dividend,w
  1568  019B                     u1575:	
  1569  019B  1C03               	skipc
  1570  019C  29A6               	goto	l1802
  1571  019D  0871               	movf	___lldiv@divisor,w
  1572  019E  02F5               	subwf	___lldiv@dividend,f
  1573  019F  0872               	movf	___lldiv@divisor+1,w
  1574  01A0  3BF6               	subwfb	___lldiv@dividend+1,f
  1575  01A1  0873               	movf	___lldiv@divisor+2,w
  1576  01A2  3BF7               	subwfb	___lldiv@dividend+2,f
  1577  01A3  0874               	movf	___lldiv@divisor+3,w
  1578  01A4  3BF8               	subwfb	___lldiv@dividend+3,f
  1579  01A5  1420               	bsf	___lldiv@quotient,0
  1580  01A6                     l1802:	
  1581  01A6  3001               	movlw	1
  1582  01A7                     u1585:	
  1583  01A7  36F4               	lsrf	___lldiv@divisor+3,f
  1584  01A8  0CF3               	rrf	___lldiv@divisor+2,f
  1585  01A9  0CF2               	rrf	___lldiv@divisor+1,f
  1586  01AA  0CF1               	rrf	___lldiv@divisor,f
  1587  01AB  0B89               	decfsz	9,f
  1588  01AC  29A7               	goto	u1585
  1589  01AD  3001               	movlw	1
  1590  01AE  02A4               	subwf	___lldiv@counter,f
  1591  01AF  1D03               	btfss	3,2
  1592  01B0  2986               	goto	l1794
  1593  01B1                     l1806:	
  1594  01B1  0823               	movf	___lldiv@quotient+3,w
  1595  01B2  00F4               	movwf	?___lldiv+3
  1596  01B3  0822               	movf	___lldiv@quotient+2,w
  1597  01B4  00F3               	movwf	?___lldiv+2
  1598  01B5  0821               	movf	___lldiv@quotient+1,w
  1599  01B6  00F2               	movwf	?___lldiv+1
  1600  01B7  0820               	movf	___lldiv@quotient,w
  1601  01B8  00F1               	movwf	?___lldiv
  1602  01B9  0008               	return
  1603  01BA                     __end_of___lldiv:	
  1604                           
  1605                           	psect	text5
  1606  029D                     __ptext5:	
  1607 ;; *************** function _Timer1_Init *****************
  1608 ;; Defined at:
  1609 ;;		line 6 in file "Timer1.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1623 ;;      Params:         0       0       0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0       0
  1625 ;;      Temps:          1       0       0       0       0       0
  1626 ;;      Totals:         1       0       0       0       0       0
  1627 ;;Total ram usage:        1 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    1
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _Timer1_Init
  1639  029D                     _Timer1_Init:	
  1640                           
  1641                           ;Timer1.c: 8: TRISB |= (1<<6);
  1642                           
  1643                           ;incstack = 0
  1644                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  1645  029D  0021               	movlb	1	; select bank1
  1646  029E  170D               	bsf	13,6	;volatile
  1647                           
  1648                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  1649  029F  30BF               	movlw	191
  1650  02A0  00F1               	movwf	??_Timer1_Init
  1651  02A1  0871               	movf	??_Timer1_Init,w
  1652  02A2  0023               	movlb	3	; select bank3
  1653  02A3  058D               	andwf	13,f	;volatile
  1654                           
  1655                           ;Timer1.c: 11: T1CON |= (0x01<<2);
  1656  02A4  0020               	movlb	0	; select bank0
  1657  02A5  1518               	bsf	24,2	;volatile
  1658                           
  1659                           ;Timer1.c: 12: T1CON &= ~(0x01<<3);
  1660  02A6  30F7               	movlw	247
  1661  02A7  00F1               	movwf	??_Timer1_Init
  1662  02A8  0871               	movf	??_Timer1_Init,w
  1663  02A9  0598               	andwf	24,f	;volatile
  1664                           
  1665                           ;Timer1.c: 13: T1CON |= (0x00<<4);
  1666  02AA  0818               	movf	24,w	;volatile
  1667                           
  1668                           ;Timer1.c: 14: T1CON |= (0x02<<6);
  1669  02AB  1798               	bsf	24,7	;volatile
  1670                           
  1671                           ;Timer1.c: 16: T1GCON = 0x00;
  1672  02AC  0199               	clrf	25	;volatile
  1673                           
  1674                           ;Timer1.c: 18: TMR1 = 0xFFFF-10;
  1675  02AD  30FF               	movlw	255
  1676  02AE  0097               	movwf	23	;volatile
  1677  02AF  30F5               	movlw	245
  1678  02B0  0096               	movwf	22	;volatile
  1679                           
  1680                           ;Timer1.c: 20: TMR1IF = 0;
  1681  02B1  1011               	bcf	17,0	;volatile
  1682                           
  1683                           ;Timer1.c: 21: TMR1IE = 1;
  1684  02B2  0021               	movlb	1	; select bank1
  1685  02B3  1411               	bsf	17,0	;volatile
  1686                           
  1687                           ;Timer1.c: 22: PEIE = 1;
  1688  02B4  170B               	bsf	11,6	;volatile
  1689                           
  1690                           ;Timer1.c: 23: GIE = 1;
  1691  02B5  178B               	bsf	11,7	;volatile
  1692  02B6  0008               	return
  1693  02B7                     __end_of_Timer1_Init:	
  1694                           
  1695                           	psect	text6
  1696  00FE                     __ptext6:	
  1697 ;; *************** function _LCD_Init *****************
  1698 ;; Defined at:
  1699 ;;		line 28 in file "LCD.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1713 ;;      Params:         0       0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0
  1715 ;;      Temps:          2       0       0       0       0       0
  1716 ;;      Totals:         2       0       0       0       0       0
  1717 ;;Total ram usage:        2 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    3
  1720 ;; This function calls:
  1721 ;;		_LCD_DisplayClear
  1722 ;;		_LCD_WriteData
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _LCD_Init
  1730  00FE                     _LCD_Init:	
  1731                           
  1732                           ;LCD.c: 30: RA3 = 0;
  1733                           
  1734                           ;incstack = 0
  1735                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1736  00FE  0020               	movlb	0	; select bank0
  1737  00FF  118C               	bcf	12,3	;volatile
  1738                           
  1739                           ;LCD.c: 31: RA4 = 0;
  1740  0100  120C               	bcf	12,4	;volatile
  1741                           
  1742                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  1743  0101  3002               	movlw	2
  1744  0102  00F6               	movwf	??_LCD_Init+1
  1745  0103  3038               	movlw	56
  1746  0104  00F5               	movwf	??_LCD_Init
  1747  0105  30AD               	movlw	173
  1748  0106                     u2387:	
  1749  0106  0B89               	decfsz	9,f
  1750  0107  2906               	goto	u2387
  1751  0108  0BF5               	decfsz	??_LCD_Init,f
  1752  0109  2906               	goto	u2387
  1753  010A  0BF6               	decfsz	??_LCD_Init+1,f
  1754  010B  2906               	goto	u2387
  1755  010C  0000               	nop
  1756                           
  1757                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  1758  010D  3003               	movlw	3
  1759  010E  0020               	movlb	0	; select bank0
  1760  010F  008D               	movwf	13	;volatile
  1761                           
  1762                           ;LCD.c: 35: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1763  0110  160C               	bsf	12,4	;volatile
  1764  0111  3200               	nop2	;2 cycle nop
  1765  0112  3200               	nop2	;2 cycle nop
  1766  0113  3200               	nop2	;2 cycle nop
  1767  0114  3200               	nop2	;2 cycle nop
  1768  0115  0020               	movlb	0	; select bank0
  1769  0116  120C               	bcf	12,4	;volatile
  1770  0117  3200               	nop2	;2 cycle nop
  1771  0118  3200               	nop2	;2 cycle nop
  1772  0119  3200               	nop2	;2 cycle nop
  1773  011A  3200               	nop2	;2 cycle nop
  1774                           
  1775                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  1776  011B  3034               	movlw	52
  1777  011C  00F5               	movwf	??_LCD_Init
  1778  011D  30F2               	movlw	242
  1779  011E                     u2397:	
  1780  011E  0B89               	decfsz	9,f
  1781  011F  291E               	goto	u2397
  1782  0120  0BF5               	decfsz	??_LCD_Init,f
  1783  0121  291E               	goto	u2397
  1784                           
  1785                           ;LCD.c: 37: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1786  0122  0020               	movlb	0	; select bank0
  1787  0123  160C               	bsf	12,4	;volatile
  1788  0124  3200               	nop2	;2 cycle nop
  1789  0125  3200               	nop2	;2 cycle nop
  1790  0126  3200               	nop2	;2 cycle nop
  1791  0127  3200               	nop2	;2 cycle nop
  1792  0128  0020               	movlb	0	; select bank0
  1793  0129  120C               	bcf	12,4	;volatile
  1794  012A  3200               	nop2	;2 cycle nop
  1795  012B  3200               	nop2	;2 cycle nop
  1796  012C  3200               	nop2	;2 cycle nop
  1797  012D  3200               	nop2	;2 cycle nop
  1798                           
  1799                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  1800  012E  3005               	movlw	5
  1801  012F  00F5               	movwf	??_LCD_Init
  1802  0130  3026               	movlw	38
  1803  0131                     u2407:	
  1804  0131  0B89               	decfsz	9,f
  1805  0132  2931               	goto	u2407
  1806  0133  0BF5               	decfsz	??_LCD_Init,f
  1807  0134  2931               	goto	u2407
  1808  0135  3200               	nop2
  1809                           
  1810                           ;LCD.c: 39: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1811  0136  0020               	movlb	0	; select bank0
  1812  0137  160C               	bsf	12,4	;volatile
  1813  0138  3200               	nop2	;2 cycle nop
  1814  0139  3200               	nop2	;2 cycle nop
  1815  013A  3200               	nop2	;2 cycle nop
  1816  013B  3200               	nop2	;2 cycle nop
  1817  013C  0020               	movlb	0	; select bank0
  1818  013D  120C               	bcf	12,4	;volatile
  1819  013E  3200               	nop2	;2 cycle nop
  1820  013F  3200               	nop2	;2 cycle nop
  1821  0140  3200               	nop2	;2 cycle nop
  1822  0141  3200               	nop2	;2 cycle nop
  1823                           
  1824                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  1825  0142  3005               	movlw	5
  1826  0143  00F5               	movwf	??_LCD_Init
  1827  0144  3026               	movlw	38
  1828  0145                     u2417:	
  1829  0145  0B89               	decfsz	9,f
  1830  0146  2945               	goto	u2417
  1831  0147  0BF5               	decfsz	??_LCD_Init,f
  1832  0148  2945               	goto	u2417
  1833  0149  3200               	nop2
  1834                           
  1835                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  1836  014A  3002               	movlw	2
  1837  014B  0020               	movlb	0	; select bank0
  1838  014C  008D               	movwf	13	;volatile
  1839                           
  1840                           ;LCD.c: 42: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1841  014D  160C               	bsf	12,4	;volatile
  1842  014E  3200               	nop2	;2 cycle nop
  1843  014F  3200               	nop2	;2 cycle nop
  1844  0150  3200               	nop2	;2 cycle nop
  1845  0151  3200               	nop2	;2 cycle nop
  1846  0152  0020               	movlb	0	; select bank0
  1847  0153  120C               	bcf	12,4	;volatile
  1848  0154  3200               	nop2	;2 cycle nop
  1849  0155  3200               	nop2	;2 cycle nop
  1850  0156  3200               	nop2	;2 cycle nop
  1851  0157  3200               	nop2	;2 cycle nop
  1852                           
  1853                           ;LCD.c: 44: LCD_WriteData(0x28);
  1854  0158  3028               	movlw	40
  1855  0159  3182  2246  3180   	fcall	_LCD_WriteData
  1856                           
  1857                           ;LCD.c: 45: LCD_WriteData(0x0c);
  1858  015C  300C               	movlw	12
  1859  015D  3182  2246  3180   	fcall	_LCD_WriteData
  1860                           
  1861                           ;LCD.c: 46: LCD_DisplayClear();
  1862  0160  3182  22E1  3180   	fcall	_LCD_DisplayClear
  1863                           
  1864                           ;LCD.c: 47: LCD_WriteData(0x06);
  1865  0163  3006               	movlw	6
  1866  0164  3182  2246         	fcall	_LCD_WriteData
  1867  0166  0008               	return
  1868  0167                     __end_of_LCD_Init:	
  1869                           
  1870                           	psect	text7
  1871  02E1                     __ptext7:	
  1872 ;; *************** function _LCD_DisplayClear *****************
  1873 ;; Defined at:
  1874 ;;		line 73 in file "LCD.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;		None
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, pclath, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1888 ;;      Params:         0       0       0       0       0       0
  1889 ;;      Locals:         0       0       0       0       0       0
  1890 ;;      Temps:          1       0       0       0       0       0
  1891 ;;      Totals:         1       0       0       0       0       0
  1892 ;;Total ram usage:        1 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    2
  1895 ;; This function calls:
  1896 ;;		_LCD_WriteData
  1897 ;; This function is called by:
  1898 ;;		_LCD_Init
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _LCD_DisplayClear
  1904  02E1                     _LCD_DisplayClear:	
  1905                           
  1906                           ;LCD.c: 75: RA3 = 0;
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  1910  02E1  0020               	movlb	0	; select bank0
  1911  02E2  118C               	bcf	12,3	;volatile
  1912                           
  1913                           ;LCD.c: 76: LCD_WriteData(0x01);
  1914  02E3  3001               	movlw	1
  1915  02E4  3182  2246  3182   	fcall	_LCD_WriteData
  1916                           
  1917                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  1918  02E7  3015               	movlw	21
  1919  02E8  00F4               	movwf	??_LCD_DisplayClear
  1920  02E9  30C6               	movlw	198
  1921  02EA                     u2427:	
  1922  02EA  0B89               	decfsz	9,f
  1923  02EB  2AEA               	goto	u2427
  1924  02EC  0BF4               	decfsz	??_LCD_DisplayClear,f
  1925  02ED  2AEA               	goto	u2427
  1926  02EE  3200               	nop2
  1927  02EF  0008               	return
  1928  02F0                     __end_of_LCD_DisplayClear:	
  1929                           
  1930                           	psect	text8
  1931  02B7                     __ptext8:	
  1932 ;; *************** function _LCD_CursorPosition *****************
  1933 ;; Defined at:
  1934 ;;		line 95 in file "LCD.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  tx              1    wreg     unsigned char 
  1937 ;;  ty              1    4[COMMON] unsigned char 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  tx              1    6[COMMON] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0, pclath, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1949 ;;      Params:         1       0       0       0       0       0
  1950 ;;      Locals:         1       0       0       0       0       0
  1951 ;;      Temps:          1       0       0       0       0       0
  1952 ;;      Totals:         3       0       0       0       0       0
  1953 ;;Total ram usage:        3 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    2
  1956 ;; This function calls:
  1957 ;;		_LCD_WriteData
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           
  1964                           ;psect for function _LCD_CursorPosition
  1965  02B7                     _LCD_CursorPosition:	
  1966                           
  1967                           ;incstack = 0
  1968                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  1969                           ;LCD_CursorPosition@tx stored from wreg
  1970  02B7  00F6               	movwf	LCD_CursorPosition@tx
  1971                           
  1972                           ;LCD.c: 97: RA3 = 0;
  1973  02B8  0020               	movlb	0	; select bank0
  1974  02B9  118C               	bcf	12,3	;volatile
  1975                           
  1976                           ;LCD.c: 98: LCD_WriteData(0x80|tx|(0x40*ty));
  1977  02BA  0874               	movf	LCD_CursorPosition@ty,w
  1978  02BB  00F5               	movwf	??_LCD_CursorPosition
  1979  02BC  3005               	movlw	5
  1980  02BD                     u1665:	
  1981  02BD  35F5               	lslf	??_LCD_CursorPosition,f
  1982  02BE  3EFF               	addlw	-1
  1983  02BF  1D03               	skipz
  1984  02C0  2ABD               	goto	u1665
  1985  02C1  3575               	lslf	??_LCD_CursorPosition,w
  1986  02C2  0476               	iorwf	LCD_CursorPosition@tx,w
  1987  02C3  3880               	iorlw	-128
  1988  02C4  3182  2246  3182   	fcall	_LCD_WriteData
  1989                           
  1990                           ;LCD.c: 99: _delay((unsigned long)((40)*(32000000/4000000.0)));
  1991  02C7  306A               	movlw	106
  1992  02C8                     u2437:	
  1993  02C8  0B89               	decfsz	9,f
  1994  02C9  2AC8               	goto	u2437
  1995  02CA  3200               	nop2
  1996  02CB  0008               	return
  1997  02CC                     __end_of_LCD_CursorPosition:	
  1998                           
  1999                           	psect	text9
  2000  0246                     __ptext9:	
  2001 ;; *************** function _LCD_WriteData *****************
  2002 ;; Defined at:
  2003 ;;		line 15 in file "LCD.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  point           1    wreg     char 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  point           1    3[COMMON] char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2017 ;;      Params:         0       0       0       0       0       0
  2018 ;;      Locals:         1       0       0       0       0       0
  2019 ;;      Temps:          2       0       0       0       0       0
  2020 ;;      Totals:         3       0       0       0       0       0
  2021 ;;Total ram usage:        3 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    1
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_LCD_Init
  2028 ;;		_putch
  2029 ;;		_LCD_DisplayClear
  2030 ;;		_LCD_CursorPosition
  2031 ;;		_LCD_Put
  2032 ;;		_LCD_CursorHome
  2033 ;;		_LCD_CursorShift
  2034 ;;		_LCD_DispShift
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function _LCD_WriteData
  2040  0246                     _LCD_WriteData:	
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  2044                           ;LCD_WriteData@point stored from wreg
  2045  0246  00F3               	movwf	LCD_WriteData@point
  2046                           
  2047                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  2048  0247  30D5               	movlw	213
  2049  0248                     u2447:	
  2050  0248  0B89               	decfsz	9,f
  2051  0249  2A48               	goto	u2447
  2052  024A  0000               	nop
  2053                           
  2054                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  2055  024B  0873               	movf	LCD_WriteData@point,w
  2056  024C  00F1               	movwf	??_LCD_WriteData
  2057  024D  3004               	movlw	4
  2058  024E                     u875:	
  2059  024E  1003               	clrc
  2060  024F  1BF1               	btfsc	??_LCD_WriteData,7
  2061  0250  1403               	setc
  2062  0251  0CF1               	rrf	??_LCD_WriteData,f
  2063  0252  0B89               	decfsz	9,f
  2064  0253  2A4E               	goto	u875
  2065  0254  3003               	movlw	3
  2066  0255  0571               	andwf	??_LCD_WriteData,w
  2067  0256  00F2               	movwf	??_LCD_WriteData+1
  2068  0257  0E73               	swapf	LCD_WriteData@point,w
  2069  0258  390F               	andlw	15
  2070  0259  1989               	btfsc	9,3
  2071  025A  38F0               	iorlw	240
  2072  025B  390C               	andlw	12
  2073  025C  0709               	addwf	9,w
  2074  025D  0472               	iorwf	??_LCD_WriteData+1,w
  2075  025E  0020               	movlb	0	; select bank0
  2076  025F  008D               	movwf	13	;volatile
  2077                           
  2078                           ;LCD.c: 19: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2079  0260  160C               	bsf	12,4	;volatile
  2080  0261  3200               	nop2	;2 cycle nop
  2081  0262  3200               	nop2	;2 cycle nop
  2082  0263  3200               	nop2	;2 cycle nop
  2083  0264  3200               	nop2	;2 cycle nop
  2084  0265  0020               	movlb	0	; select bank0
  2085  0266  120C               	bcf	12,4	;volatile
  2086  0267  3200               	nop2	;2 cycle nop
  2087  0268  3200               	nop2	;2 cycle nop
  2088  0269  3200               	nop2	;2 cycle nop
  2089  026A  3200               	nop2	;2 cycle nop
  2090                           
  2091                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  2092  026B  3003               	movlw	3
  2093  026C  0573               	andwf	LCD_WriteData@point,w
  2094  026D  00F1               	movwf	??_LCD_WriteData
  2095  026E  0873               	movf	LCD_WriteData@point,w
  2096  026F  390C               	andlw	12
  2097  0270  0709               	addwf	9,w
  2098  0271  0471               	iorwf	??_LCD_WriteData,w
  2099  0272  0020               	movlb	0	; select bank0
  2100  0273  008D               	movwf	13	;volatile
  2101                           
  2102                           ;LCD.c: 21: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2103  0274  160C               	bsf	12,4	;volatile
  2104  0275  3200               	nop2	;2 cycle nop
  2105  0276  3200               	nop2	;2 cycle nop
  2106  0277  3200               	nop2	;2 cycle nop
  2107  0278  3200               	nop2	;2 cycle nop
  2108  0279  0020               	movlb	0	; select bank0
  2109  027A  120C               	bcf	12,4	;volatile
  2110  027B  3200               	nop2	;2 cycle nop
  2111  027C  3200               	nop2	;2 cycle nop
  2112  027D  3200               	nop2	;2 cycle nop
  2113  027E  3200               	nop2	;2 cycle nop
  2114  027F  0008               	return
  2115  0280                     __end_of_LCD_WriteData:	
  2116                           
  2117                           	psect	text10
  2118  02CC                     __ptext10:	
  2119 ;; *************** function _Basic_Init *****************
  2120 ;; Defined at:
  2121 ;;		line 31 in file "main.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      char 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2135 ;;      Params:         0       0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0       0
  2138 ;;      Totals:         0       0       0       0       0       0
  2139 ;;Total ram usage:        0 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    1
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _Basic_Init
  2151  02CC                     _Basic_Init:	
  2152                           
  2153                           ;main.c: 33: OSCCON = 0xF0;
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in _Basic_Init: [wreg+status,2]
  2157  02CC  30F0               	movlw	240
  2158  02CD  0021               	movlb	1	; select bank1
  2159  02CE  0099               	movwf	25	;volatile
  2160                           
  2161                           ;main.c: 37: TRISA = 0x07;
  2162  02CF  3007               	movlw	7
  2163  02D0  008C               	movwf	12	;volatile
  2164                           
  2165                           ;main.c: 38: ANSELA = 0x07;
  2166  02D1  3007               	movlw	7
  2167  02D2  0023               	movlb	3	; select bank3
  2168  02D3  008C               	movwf	12	;volatile
  2169                           
  2170                           ;main.c: 40: TRISB = 0x40;
  2171  02D4  3040               	movlw	64
  2172  02D5  0021               	movlb	1	; select bank1
  2173  02D6  008D               	movwf	13	;volatile
  2174                           
  2175                           ;main.c: 41: ANSELB = 0x00;
  2176  02D7  0023               	movlb	3	; select bank3
  2177  02D8  018D               	clrf	13	;volatile
  2178                           
  2179                           ;main.c: 43: APFCON0 = 0x08;
  2180  02D9  3008               	movlw	8
  2181  02DA  0022               	movlb	2	; select bank2
  2182  02DB  009D               	movwf	29	;volatile
  2183                           
  2184                           ;main.c: 44: APFCON1 = 0x00;
  2185  02DC  019E               	clrf	30	;volatile
  2186                           
  2187                           ;main.c: 46: PORTA = 0x00;
  2188  02DD  0020               	movlb	0	; select bank0
  2189  02DE  018C               	clrf	12	;volatile
  2190                           
  2191                           ;main.c: 47: PORTB = 0x00;
  2192  02DF  018D               	clrf	13	;volatile
  2193  02E0  0008               	return
  2194  02E1                     __end_of_Basic_Init:	
  2195                           ;main.c: 49: return 0;
  2196                           ;	Return value of _Basic_Init is never used
  2197                           
  2198                           
  2199                           	psect	intentry
  2200  0004                     __pintentry:	
  2201 ;; *************** function _Handler *****************
  2202 ;; Defined at:
  2203 ;;		line 52 in file "main.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		None
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2217 ;;      Params:         0       0       0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0
  2219 ;;      Temps:          1       0       0       0       0       0
  2220 ;;      Totals:         1       0       0       0       0       0
  2221 ;;Total ram usage:        1 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		Interrupt level 1
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230  0004                     _Handler:	
  2231                           
  2232                           ;incstack = 0
  2233  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2234                           
  2235                           ; Regs used in _Handler: []
  2236  0005  3180               	pagesel	$
  2237  0006  0020               	movlb	0	; select bank0
  2238  0007  087F               	movf	127,w
  2239  0008  00F0               	movwf	??_Handler
  2240  0009  0870               	movf	??_Handler,w
  2241  000A  00FF               	movwf	127
  2242  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2243  000C  0009               	retfie
  2244  000D                     __end_of_Handler:	
  2245  007E                     btemp	set	126	;btemp
  2246  007E                     int$flags	set	126
  2247  007E                     wtemp0	set	126


Data Sizes:
    Strings     33
    Constant    40
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     32      46
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _printf->___llmod
    _putch->_LCD_WriteData
    ___llmod->___lldiv
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData

Critical Paths under _Handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___llmod
    ___llmod->___lldiv

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1873
                         _Basic_Init
                 _LCD_CursorPosition
                           _LCD_Init
                        _Timer1_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    23      4    1501
                                             13 BANK0     19    15      4
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     110
                                              4 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     415
                                             10 COMMON     2     2      0
                                              5 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     546
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              5 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              4 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     196
                                              4 COMMON     3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0      88
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Handler                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_Init
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _putch
       _LCD_WriteData

 _Handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     20      2E       6       57.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      3B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun May 21 00:58:58 2017

                __CFG_CP$OFF 0000                          l121 028B                          l330 003F  
                        l333 005D                          l343 00FD                          _GIE 005F  
                        _RA3 0063                          _RA4 0064                 __CFG_CPD$OFF 0000  
                        u875 024E                 __CFG_BORV$LO 0000                          wreg 0009  
                 _Basic_Init 02CC                 __CFG_LVP$OFF 0000                         l1802 01A6  
                       l1806 01B1                         l1822 0232                         l1816 020C  
                       l1920 00B5                         l1818 021A                         l1826 023D  
                       l1914 00B0                         l1922 0020                         l1908 0083  
                       l1792 0178                         l1794 0186                         l1892 0046  
                       l1886 003C                         l1888 0041                         l1898 006C  
                       STR_1 01FC                         STR_2 0201                         STR_3 01E2  
                       STR_4 01F0                         STR_5 01F6                         STR_6 01E9  
                       u2407 0131                         u1615 020F                         u2417 0145  
                       u1545 017B                         u1705 00A6                         u2427 02EA  
                       u1635 0228                         u2437 02C8                         u1565 0187  
                       u1645 0233                         u2447 0248                         u1575 019B  
                       u1665 02BD                         u1585 01A7                         u2387 0106  
                       u2397 011E                         _PEIE 005E                         _TMR1 0016  
               __CFG_WRT$OFF 0000                         _main 0280                         fsr0h 0005  
                       fsr1h 0007                         indf0 0000                         fsr0l 0004  
                       fsr1l 0006                         btemp 007E                __CFG_BOREN$ON 0000  
                       start 000D                __CFG_IESO$OFF 0000              __end_of_Handler 000D  
              _LCD_WriteData 0246                __CFG_MCLRE$ON 0000     __end_of_LCD_DisplayClear 02F0  
           __end_of_LCD_Init 0167                __CFG_PLLEN$ON 0000                        ?_main 0070  
              __CFG_WDTE$OFF 0000              __end_of___lldiv 01BA                        _T1CON 0018  
            __end_of___llmod 0246                        _PORTA 000C                        _PORTB 000D  
                      _TRISA 008C                        _TRISB 008D                __CFG_PWRTE$ON 0000  
             __CFG_FCMEN$OFF 0000              __end_of_dpowers 01E2                        _errno 0048  
                      _putch 02F0                        status 0003                        wtemp0 007E  
         _LCD_CursorPosition 02B7               ?_LCD_WriteData 0070              __initialization 000F  
               __end_of_main 029D          ?_LCD_CursorPosition 0074                       ??_main 007C  
                ?_Basic_Init 0070             ___llmod@dividend 0029         ??_LCD_CursorPosition 0075  
                     _ANSELA 018C                       ?_putch 0070                       _ANSELB 018D  
                     _T1GCON 0019                       _OSCCON 0099                       _TMR1IE 0488  
                     _TMR1IF 0088                    ??_Handler 0070                       _TMR1ON 00C0  
              ??_Timer1_Init 0071                    ??___lldiv 0079                    ??___llmod 007A  
                     _printf 001B                       _outptr 007C                       putch@c 0074  
    __end_of__initialization 0017                    ?_LCD_Init 0070              ??_LCD_WriteData 0071  
             __pcstackCOMMON 0070          __size_of_Basic_Init 0015                __end_of_putch 02F7  
        __end_of_Timer1_Init 02B7                      ??_putch 0074                   __pbssBANK0 0040  
                 ??_LCD_Init 0075                   __pmaintext 0280                   __pintentry 0004  
          ?_LCD_DisplayClear 0070                      _APFCON0 011D                      _APFCON1 011E  
                    ?_printf 002D           ??_LCD_DisplayClear 0074                      _Handler 0004  
                _Timer1_Init 029D                      ___lldiv 0167                      ___llmod 0203  
            __CFG_STVREN$OFF 0000                      __ptext1 001B                      __ptext2 02F0  
                    __ptext3 0203                      __ptext4 0167                      __ptext5 029D  
                    __ptext6 00FE                      __ptext7 02E1                      __ptext8 02B7  
                    __ptext9 0246              __size_of_printf 00E3                      _dpowers 01BA  
               ??_Basic_Init 0071                      _timesum 0040                      clrloop0 02F8  
       end_of_initialization 0017              ___lldiv@divisor 0071              ___lldiv@counter 0024  
                    printf@c 003F                      printf@f 002D           __end_of_Basic_Init 02E1  
               __pstringtext 01BA             __CFG_FOSC$INTOSC 0000  __size_of_LCD_CursorPosition 0015  
          __size_of_LCD_Init 0069               __end_of_printf 00FE          start_initialization 000F  
            ___llmod@divisor 0025              ___llmod@counter 007B         LCD_CursorPosition@tx 0076  
       LCD_CursorPosition@ty 0074        __end_of_LCD_WriteData 0280                     ??_printf 0031  
                __pbssCOMMON 007C                    ___latbits 0001                __pcstackBANK0 0020  
  __size_of_LCD_DisplayClear 000F                     ?_Handler 0070                 ?_Timer1_Init 0070  
                   ?___lldiv 0071                     ?___llmod 0025               __size_of_putch 0007  
                   _LCD_Init 00FE                    clear_ram0 02F7                   printf@flag 0037  
                 printf@prec 0038                    _xfunc_out 004C             __size_of_Handler 0009  
           __size_of___lldiv 0053             __size_of___llmod 0043           LCD_WriteData@point 0073  
 __end_of_LCD_CursorPosition 02CC                     __ptext10 02CC             _LCD_DisplayClear 02E1  
                   _countsum 0044                __size_of_main 001D         __size_of_Timer1_Init 001A  
                   int$flags 007E                    printf@val 003A                     _xfunc_in 004A  
                   intlevel1 0000             ___lldiv@dividend 0075            __CFG_CLKOUTEN$OFF 0000  
                   printf@ap 003E             ___lldiv@quotient 0020       __size_of_LCD_WriteData 003A  
