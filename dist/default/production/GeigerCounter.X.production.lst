

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Mar  7 12:36:49 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 1.41
    47                           ; Generated 25/01/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1827 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011A                     	;# 
   138  011B                     	;# 
   139  011D                     	;# 
   140  011E                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0191                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0194                     	;# 
   150  0195                     	;# 
   151  0196                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019D                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  020C                     	;# 
   164  020D                     	;# 
   165  0211                     	;# 
   166  0211                     	;# 
   167  0212                     	;# 
   168  0212                     	;# 
   169  0213                     	;# 
   170  0213                     	;# 
   171  0214                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0216                     	;# 
   177  0216                     	;# 
   178  0217                     	;# 
   179  0217                     	;# 
   180  0219                     	;# 
   181  021A                     	;# 
   182  021B                     	;# 
   183  021C                     	;# 
   184  021D                     	;# 
   185  021E                     	;# 
   186  021F                     	;# 
   187  0291                     	;# 
   188  0291                     	;# 
   189  0292                     	;# 
   190  0293                     	;# 
   191  0294                     	;# 
   192  0295                     	;# 
   193  0295                     	;# 
   194  0296                     	;# 
   195  0298                     	;# 
   196  0298                     	;# 
   197  0299                     	;# 
   198  029A                     	;# 
   199  029B                     	;# 
   200  029C                     	;# 
   201  029C                     	;# 
   202  029D                     	;# 
   203  029E                     	;# 
   204  029E                     	;# 
   205  0311                     	;# 
   206  0311                     	;# 
   207  0312                     	;# 
   208  0313                     	;# 
   209  0318                     	;# 
   210  0318                     	;# 
   211  0319                     	;# 
   212  031A                     	;# 
   213  0394                     	;# 
   214  0395                     	;# 
   215  0396                     	;# 
   216  039A                     	;# 
   217  039C                     	;# 
   218  039D                     	;# 
   219  039E                     	;# 
   220  039F                     	;# 
   221  0415                     	;# 
   222  0416                     	;# 
   223  0417                     	;# 
   224  041C                     	;# 
   225  041D                     	;# 
   226  041E                     	;# 
   227  0FE4                     	;# 
   228  0FE5                     	;# 
   229  0FE6                     	;# 
   230  0FE7                     	;# 
   231  0FE8                     	;# 
   232  0FE9                     	;# 
   233  0FEA                     	;# 
   234  0FEB                     	;# 
   235  0FED                     	;# 
   236  0FEE                     	;# 
   237  0FEF                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  0111                     	;# 
   287  0112                     	;# 
   288  0113                     	;# 
   289  0114                     	;# 
   290  0115                     	;# 
   291  0116                     	;# 
   292  0117                     	;# 
   293  0118                     	;# 
   294  0119                     	;# 
   295  011A                     	;# 
   296  011B                     	;# 
   297  011D                     	;# 
   298  011E                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0191                     	;# 
   302  0191                     	;# 
   303  0192                     	;# 
   304  0193                     	;# 
   305  0193                     	;# 
   306  0193                     	;# 
   307  0194                     	;# 
   308  0195                     	;# 
   309  0196                     	;# 
   310  0199                     	;# 
   311  019A                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019B                     	;# 
   315  019B                     	;# 
   316  019C                     	;# 
   317  019C                     	;# 
   318  019D                     	;# 
   319  019E                     	;# 
   320  019F                     	;# 
   321  020C                     	;# 
   322  020D                     	;# 
   323  0211                     	;# 
   324  0211                     	;# 
   325  0212                     	;# 
   326  0212                     	;# 
   327  0213                     	;# 
   328  0213                     	;# 
   329  0214                     	;# 
   330  0214                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0216                     	;# 
   336  0217                     	;# 
   337  0217                     	;# 
   338  0219                     	;# 
   339  021A                     	;# 
   340  021B                     	;# 
   341  021C                     	;# 
   342  021D                     	;# 
   343  021E                     	;# 
   344  021F                     	;# 
   345  0291                     	;# 
   346  0291                     	;# 
   347  0292                     	;# 
   348  0293                     	;# 
   349  0294                     	;# 
   350  0295                     	;# 
   351  0295                     	;# 
   352  0296                     	;# 
   353  0298                     	;# 
   354  0298                     	;# 
   355  0299                     	;# 
   356  029A                     	;# 
   357  029B                     	;# 
   358  029C                     	;# 
   359  029C                     	;# 
   360  029D                     	;# 
   361  029E                     	;# 
   362  029E                     	;# 
   363  0311                     	;# 
   364  0311                     	;# 
   365  0312                     	;# 
   366  0313                     	;# 
   367  0318                     	;# 
   368  0318                     	;# 
   369  0319                     	;# 
   370  031A                     	;# 
   371  0394                     	;# 
   372  0395                     	;# 
   373  0396                     	;# 
   374  039A                     	;# 
   375  039C                     	;# 
   376  039D                     	;# 
   377  039E                     	;# 
   378  039F                     	;# 
   379  0415                     	;# 
   380  0416                     	;# 
   381  0417                     	;# 
   382  041C                     	;# 
   383  041D                     	;# 
   384  041E                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0014                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  0111                     	;# 
   445  0112                     	;# 
   446  0113                     	;# 
   447  0114                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011A                     	;# 
   454  011B                     	;# 
   455  011D                     	;# 
   456  011E                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0191                     	;# 
   460  0191                     	;# 
   461  0192                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0199                     	;# 
   469  019A                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019C                     	;# 
   475  019C                     	;# 
   476  019D                     	;# 
   477  019E                     	;# 
   478  019F                     	;# 
   479  020C                     	;# 
   480  020D                     	;# 
   481  0211                     	;# 
   482  0211                     	;# 
   483  0212                     	;# 
   484  0212                     	;# 
   485  0213                     	;# 
   486  0213                     	;# 
   487  0214                     	;# 
   488  0214                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0215                     	;# 
   492  0216                     	;# 
   493  0216                     	;# 
   494  0217                     	;# 
   495  0217                     	;# 
   496  0219                     	;# 
   497  021A                     	;# 
   498  021B                     	;# 
   499  021C                     	;# 
   500  021D                     	;# 
   501  021E                     	;# 
   502  021F                     	;# 
   503  0291                     	;# 
   504  0291                     	;# 
   505  0292                     	;# 
   506  0293                     	;# 
   507  0294                     	;# 
   508  0295                     	;# 
   509  0295                     	;# 
   510  0296                     	;# 
   511  0298                     	;# 
   512  0298                     	;# 
   513  0299                     	;# 
   514  029A                     	;# 
   515  029B                     	;# 
   516  029C                     	;# 
   517  029C                     	;# 
   518  029D                     	;# 
   519  029E                     	;# 
   520  029E                     	;# 
   521  0311                     	;# 
   522  0311                     	;# 
   523  0312                     	;# 
   524  0313                     	;# 
   525  0318                     	;# 
   526  0318                     	;# 
   527  0319                     	;# 
   528  031A                     	;# 
   529  0394                     	;# 
   530  0395                     	;# 
   531  0396                     	;# 
   532  039A                     	;# 
   533  039C                     	;# 
   534  039D                     	;# 
   535  039E                     	;# 
   536  039F                     	;# 
   537  0415                     	;# 
   538  0416                     	;# 
   539  0417                     	;# 
   540  041C                     	;# 
   541  041D                     	;# 
   542  041E                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  0000                     	;# 
   555  0001                     	;# 
   556  0002                     	;# 
   557  0003                     	;# 
   558  0004                     	;# 
   559  0005                     	;# 
   560  0006                     	;# 
   561  0007                     	;# 
   562  0008                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000D                     	;# 
   568  0011                     	;# 
   569  0012                     	;# 
   570  0013                     	;# 
   571  0014                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0016                     	;# 
   575  0017                     	;# 
   576  0018                     	;# 
   577  0019                     	;# 
   578  001A                     	;# 
   579  001B                     	;# 
   580  001C                     	;# 
   581  001E                     	;# 
   582  001F                     	;# 
   583  008C                     	;# 
   584  008D                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0095                     	;# 
   590  0096                     	;# 
   591  0097                     	;# 
   592  0098                     	;# 
   593  0099                     	;# 
   594  009A                     	;# 
   595  009B                     	;# 
   596  009B                     	;# 
   597  009C                     	;# 
   598  009D                     	;# 
   599  009E                     	;# 
   600  010C                     	;# 
   601  010D                     	;# 
   602  0111                     	;# 
   603  0112                     	;# 
   604  0113                     	;# 
   605  0114                     	;# 
   606  0115                     	;# 
   607  0116                     	;# 
   608  0117                     	;# 
   609  0118                     	;# 
   610  0119                     	;# 
   611  011A                     	;# 
   612  011B                     	;# 
   613  011D                     	;# 
   614  011E                     	;# 
   615  018C                     	;# 
   616  018D                     	;# 
   617  0191                     	;# 
   618  0191                     	;# 
   619  0192                     	;# 
   620  0193                     	;# 
   621  0193                     	;# 
   622  0193                     	;# 
   623  0194                     	;# 
   624  0195                     	;# 
   625  0196                     	;# 
   626  0199                     	;# 
   627  019A                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019C                     	;# 
   633  019C                     	;# 
   634  019D                     	;# 
   635  019E                     	;# 
   636  019F                     	;# 
   637  020C                     	;# 
   638  020D                     	;# 
   639  0211                     	;# 
   640  0211                     	;# 
   641  0212                     	;# 
   642  0212                     	;# 
   643  0213                     	;# 
   644  0213                     	;# 
   645  0214                     	;# 
   646  0214                     	;# 
   647  0215                     	;# 
   648  0215                     	;# 
   649  0215                     	;# 
   650  0216                     	;# 
   651  0216                     	;# 
   652  0217                     	;# 
   653  0217                     	;# 
   654  0219                     	;# 
   655  021A                     	;# 
   656  021B                     	;# 
   657  021C                     	;# 
   658  021D                     	;# 
   659  021E                     	;# 
   660  021F                     	;# 
   661  0291                     	;# 
   662  0291                     	;# 
   663  0292                     	;# 
   664  0293                     	;# 
   665  0294                     	;# 
   666  0295                     	;# 
   667  0295                     	;# 
   668  0296                     	;# 
   669  0298                     	;# 
   670  0298                     	;# 
   671  0299                     	;# 
   672  029A                     	;# 
   673  029B                     	;# 
   674  029C                     	;# 
   675  029C                     	;# 
   676  029D                     	;# 
   677  029E                     	;# 
   678  029E                     	;# 
   679  0311                     	;# 
   680  0311                     	;# 
   681  0312                     	;# 
   682  0313                     	;# 
   683  0318                     	;# 
   684  0318                     	;# 
   685  0319                     	;# 
   686  031A                     	;# 
   687  0394                     	;# 
   688  0395                     	;# 
   689  0396                     	;# 
   690  039A                     	;# 
   691  039C                     	;# 
   692  039D                     	;# 
   693  039E                     	;# 
   694  039F                     	;# 
   695  0415                     	;# 
   696  0416                     	;# 
   697  0417                     	;# 
   698  041C                     	;# 
   699  041D                     	;# 
   700  041E                     	;# 
   701  0FE4                     	;# 
   702  0FE5                     	;# 
   703  0FE6                     	;# 
   704  0FE7                     	;# 
   705  0FE8                     	;# 
   706  0FE9                     	;# 
   707  0FEA                     	;# 
   708  0FEB                     	;# 
   709  0FED                     	;# 
   710  0FEE                     	;# 
   711  0FEF                     	;# 
   712  0000                     	;# 
   713  0001                     	;# 
   714  0002                     	;# 
   715  0003                     	;# 
   716  0004                     	;# 
   717  0005                     	;# 
   718  0006                     	;# 
   719  0007                     	;# 
   720  0008                     	;# 
   721  0009                     	;# 
   722  000A                     	;# 
   723  000B                     	;# 
   724  000C                     	;# 
   725  000D                     	;# 
   726  0011                     	;# 
   727  0012                     	;# 
   728  0013                     	;# 
   729  0014                     	;# 
   730  0015                     	;# 
   731  0016                     	;# 
   732  0016                     	;# 
   733  0017                     	;# 
   734  0018                     	;# 
   735  0019                     	;# 
   736  001A                     	;# 
   737  001B                     	;# 
   738  001C                     	;# 
   739  001E                     	;# 
   740  001F                     	;# 
   741  008C                     	;# 
   742  008D                     	;# 
   743  0091                     	;# 
   744  0092                     	;# 
   745  0093                     	;# 
   746  0094                     	;# 
   747  0095                     	;# 
   748  0096                     	;# 
   749  0097                     	;# 
   750  0098                     	;# 
   751  0099                     	;# 
   752  009A                     	;# 
   753  009B                     	;# 
   754  009B                     	;# 
   755  009C                     	;# 
   756  009D                     	;# 
   757  009E                     	;# 
   758  010C                     	;# 
   759  010D                     	;# 
   760  0111                     	;# 
   761  0112                     	;# 
   762  0113                     	;# 
   763  0114                     	;# 
   764  0115                     	;# 
   765  0116                     	;# 
   766  0117                     	;# 
   767  0118                     	;# 
   768  0119                     	;# 
   769  011A                     	;# 
   770  011B                     	;# 
   771  011D                     	;# 
   772  011E                     	;# 
   773  018C                     	;# 
   774  018D                     	;# 
   775  0191                     	;# 
   776  0191                     	;# 
   777  0192                     	;# 
   778  0193                     	;# 
   779  0193                     	;# 
   780  0193                     	;# 
   781  0194                     	;# 
   782  0195                     	;# 
   783  0196                     	;# 
   784  0199                     	;# 
   785  019A                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019C                     	;# 
   791  019C                     	;# 
   792  019D                     	;# 
   793  019E                     	;# 
   794  019F                     	;# 
   795  020C                     	;# 
   796  020D                     	;# 
   797  0211                     	;# 
   798  0211                     	;# 
   799  0212                     	;# 
   800  0212                     	;# 
   801  0213                     	;# 
   802  0213                     	;# 
   803  0214                     	;# 
   804  0214                     	;# 
   805  0215                     	;# 
   806  0215                     	;# 
   807  0215                     	;# 
   808  0216                     	;# 
   809  0216                     	;# 
   810  0217                     	;# 
   811  0217                     	;# 
   812  0219                     	;# 
   813  021A                     	;# 
   814  021B                     	;# 
   815  021C                     	;# 
   816  021D                     	;# 
   817  021E                     	;# 
   818  021F                     	;# 
   819  0291                     	;# 
   820  0291                     	;# 
   821  0292                     	;# 
   822  0293                     	;# 
   823  0294                     	;# 
   824  0295                     	;# 
   825  0295                     	;# 
   826  0296                     	;# 
   827  0298                     	;# 
   828  0298                     	;# 
   829  0299                     	;# 
   830  029A                     	;# 
   831  029B                     	;# 
   832  029C                     	;# 
   833  029C                     	;# 
   834  029D                     	;# 
   835  029E                     	;# 
   836  029E                     	;# 
   837  0311                     	;# 
   838  0311                     	;# 
   839  0312                     	;# 
   840  0313                     	;# 
   841  0318                     	;# 
   842  0318                     	;# 
   843  0319                     	;# 
   844  031A                     	;# 
   845  0394                     	;# 
   846  0395                     	;# 
   847  0396                     	;# 
   848  039A                     	;# 
   849  039C                     	;# 
   850  039D                     	;# 
   851  039E                     	;# 
   852  039F                     	;# 
   853  0415                     	;# 
   854  0416                     	;# 
   855  0417                     	;# 
   856  041C                     	;# 
   857  041D                     	;# 
   858  041E                     	;# 
   859  0FE4                     	;# 
   860  0FE5                     	;# 
   861  0FE6                     	;# 
   862  0FE7                     	;# 
   863  0FE8                     	;# 
   864  0FE9                     	;# 
   865  0FEA                     	;# 
   866  0FEB                     	;# 
   867  0FED                     	;# 
   868  0FEE                     	;# 
   869  0FEF                     	;# 
   870                           
   871                           	psect	idataBANK1
   872  0F5D                     __pidataBANK1:	
   873                           
   874                           ;initializer for main@F3055
   875  0F5D  3413               	retlw	19
   876  0F5E  3462               	retlw	98
   877  0F5F  3405               	retlw	5
   878  0F60  3406               	retlw	6
   879  000D                     _PORTB	set	13
   880  000C                     _PORTA	set	12
   881  0093                     _BCL1IF	set	147
   882  008B                     _SSP1IF	set	139
   883  00A1                     _BCL2IF	set	161
   884  00A0                     _SSP2IF	set	160
   885  005F                     _GIE	set	95
   886  005E                     _PEIE	set	94
   887  0064                     _RA4	set	100
   888  0063                     _RA3	set	99
   889  008D                     _TRISB	set	141
   890  008C                     _TRISA	set	140
   891  0099                     _OSCCON	set	153
   892  0493                     _BCL1IE	set	1171
   893  048B                     _SSP1IE	set	1163
   894  04A1                     _BCL2IE	set	1185
   895  04A0                     _SSP2IE	set	1184
   896  011E                     _APFCON1	set	286
   897  011D                     _APFCON0	set	285
   898  018D                     _ANSELB	set	397
   899  018C                     _ANSELA	set	396
   900  0214                     _SSP1STATbits	set	532
   901  0211                     _SSP1BUF	set	529
   902  0216                     _SSP1CON2	set	534
   903  0213                     _SSP1MSK	set	531
   904  0216                     _SSP1CON2bits	set	534
   905  0215                     _SSP1CON1bits	set	533
   906  0212                     _SSP1ADD	set	530
   907  0214                     _SSP1STAT	set	532
   908  0215                     _SSP1CON1	set	533
   909  021C                     _SSP2STATbits	set	540
   910  0219                     _SSP2BUF	set	537
   911  021E                     _SSP2CON2	set	542
   912  021B                     _SSP2MSK	set	539
   913  021E                     _SSP2CON2bits	set	542
   914  021D                     _SSP2CON1bits	set	541
   915  021A                     _SSP2ADD	set	538
   916  021C                     _SSP2STAT	set	540
   917  021D                     _SSP2CON1	set	541
   918                           
   919                           	psect	stringtext
   920  07F3                     __pstringtext:	
   921  07F3                     STR_1:	
   922  07F3  3425               	retlw	37	;'%'
   923  07F4  3464               	retlw	100	;'d'
   924  07F5  3420               	retlw	32	;' '
   925  07F6  3425               	retlw	37	;'%'
   926  07F7  3464               	retlw	100	;'d'
   927  07F8  3420               	retlw	32	;' '
   928  07F9  3425               	retlw	37	;'%'
   929  07FA  3464               	retlw	100	;'d'
   930  07FB  3420               	retlw	32	;' '
   931  07FC  3425               	retlw	37	;'%'
   932  07FD  3464               	retlw	100	;'d'
   933  07FE  3400               	retlw	0
   934  07FF                     STR_3:	
   935  07FF  3425               	retlw	37	;'%'
   936  0800  3430               	retlw	48	;'0'
   937  0801  3438               	retlw	56	;'8'
   938  0802  346C               	retlw	108	;'l'
   939  0803  3458               	retlw	88	;'X'
   940  0804  3420               	retlw	32	;' '
   941  0805  3400               	retlw	0
   942  0806                     STR_6:	
   943  0806  3420               	retlw	32	;' '
   944  0807  3425               	retlw	37	;'%'
   945  0808  3430               	retlw	48	;'0'
   946  0809  3438               	retlw	56	;'8'
   947  080A  344C               	retlw	76	;'L'
   948  080B  3458               	retlw	88	;'X'
   949  080C  3400               	retlw	0
   950  080D                     STR_4:	
   951  080D  3420               	retlw	32	;' '
   952  080E  3425               	retlw	37	;'%'
   953  080F  3430               	retlw	48	;'0'
   954  0810  3432               	retlw	50	;'2'
   955  0811  3458               	retlw	88	;'X'
   956  0812  3400               	retlw	0
   957  0813                     STR_5:	
   958  0813  3420               	retlw	32	;' '
   959  0814  3425               	retlw	37	;'%'
   960  0815  3430               	retlw	48	;'0'
   961  0816  3434               	retlw	52	;'4'
   962  0817  3458               	retlw	88	;'X'
   963  0818  3400               	retlw	0
   964  0819                     STR_2:	
   965  0819  340D               	retlw	13
   966  081A  3400               	retlw	0
   967                           
   968                           ; #config settings
   969  0000                     
   970                           	psect	cinit
   971  0012                     start_initialization:	
   972  0012                     __initialization:	
   973                           
   974                           ; Initialize objects allocated to BANK1
   975  0012  0021               	movlb	1	; select bank1
   976  0013  318F  275D  3180   	fcall	__pidataBANK1	;fetch initializer
   977  0016  00CE               	movwf	__pdataBANK1& (0+127)
   978  0017  318F  275E  3180   	fcall	__pidataBANK1+1	;fetch initializer
   979  001A  00CF               	movwf	(__pdataBANK1+1)& (0+127)
   980  001B  318F  275F  3180   	fcall	__pidataBANK1+2	;fetch initializer
   981  001E  00D0               	movwf	(__pdataBANK1+2)& (0+127)
   982  001F  318F  2760  3180   	fcall	__pidataBANK1+3	;fetch initializer
   983  0022  00D1               	movwf	(__pdataBANK1+3)& (0+127)
   984                           
   985                           ; Clear objects allocated to COMMON
   986  0023  01FB               	clrf	__pbssCOMMON& (0+127)
   987                           
   988                           ; Clear objects allocated to BANK0
   989  0024  0020               	movlb	0	; select bank0
   990  0025  01E9               	clrf	__pbssBANK0& (0+127)
   991  0026  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   992  0027  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   993  0028  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   994                           
   995                           ; Clear objects allocated to BANK1
   996  0029  30A0               	movlw	low __pbssBANK1
   997  002A  0084               	movwf	4
   998  002B  3000               	movlw	high __pbssBANK1
   999  002C  0085               	movwf	5
  1000  002D  3026               	movlw	38
  1001  002E  318F  276D         	fcall	clear_ram0
  1002  0030                     end_of_initialization:	
  1003                           ;End of C runtime variable initialization code
  1004                           
  1005  0030                     __end_of__initialization:	
  1006  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1007  0031  0020               	movlb	0
  1008  0032  3184  2C7C         	ljmp	_main	;jump to C main() function
  1009                           
  1010                           	psect	bssCOMMON
  1011  007B                     __pbssCOMMON:	
  1012  007B                     _outptr:	
  1013  007B                     	ds	1
  1014                           
  1015                           	psect	bssBANK0
  1016  0069                     __pbssBANK0:	
  1017  0069                     _xfunc_in:	
  1018  0069                     	ds	2
  1019  006B                     _xfunc_out:	
  1020  006B                     	ds	2
  1021                           
  1022                           	psect	bssBANK1
  1023  00A0                     __pbssBANK1:	
  1024  00A0                     _I2C2_Config:	
  1025  00A0                     	ds	19
  1026  00B3                     _I2C1_Config:	
  1027  00B3                     	ds	19
  1028                           
  1029                           	psect	dataBANK1
  1030  00CE                     __pdataBANK1:	
  1031  00CE                     main@F3055:	
  1032  00CE                     	ds	4
  1033                           
  1034                           	psect	clrtext
  1035  0F6D                     clear_ram0:	
  1036                           ;	Called with FSR0 containing the base address, and
  1037                           ;	WREG with the size to clear
  1038                           
  1039  0F6D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1040  0F6E                     clrloop0:	
  1041  0F6E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1042  0F6F  3101               	addfsr 0,1
  1043  0F70  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1044  0F71  2F6E               	goto	clrloop0	;have we reached the end yet?
  1045  0F72  3400               	retlw	0	;all done for this memory range, return
  1046                           
  1047                           	psect	cstackBANK1
  1048  00C6                     __pcstackBANK1:	
  1049  00C6                     main@testdata:	
  1050                           
  1051                           ; 4 bytes @ 0x0
  1052  00C6                     	ds	4
  1053  00CA                     main@resultdata:	
  1054                           
  1055                           ; 4 bytes @ 0x4
  1056  00CA                     	ds	4
  1057                           
  1058                           	psect	cstackCOMMON
  1059  0070                     __pcstackCOMMON:	
  1060  0070                     ?_Basic_Init:	
  1061  0070                     ?_LCD_Init:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0070                     ?_I2C_CommonInterrupt:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0070                     ?_LCD_DisplayClear:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0070                     ?_I2C1_Interrupt:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0070                     ??_I2C1_Interrupt:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0070                     ?_I2C2_Interrupt:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0070                     ??_I2C2_Interrupt:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0070                     ?_main:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0070                     ?_hand:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0070                     ?_LCD_WriteData:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0070                     ?_xputc:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0070                     ?_xputs:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0070                     ?_I2C2_PinInit:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0070                     ?_I2C1_PinInit:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103                           
  1104                           ; 1 bytes @ 0x0
  1105  0070                     	ds	1
  1106  0071                     ??_I2C_CommonInterrupt:	
  1107  0071                     ??_hand:	
  1108                           ; 1 bytes @ 0x1
  1109                           
  1110                           
  1111                           ; 1 bytes @ 0x1
  1112  0071                     	ds	1
  1113  0072                     ??_Basic_Init:	
  1114  0072                     ?_I2C1_Transmit:	
  1115                           ; 1 bytes @ 0x2
  1116                           
  1117  0072                     ?_I2C2_Transmit:	
  1118                           ; 1 bytes @ 0x2
  1119                           
  1120  0072                     ?_I2C1_Receive:	
  1121                           ; 1 bytes @ 0x2
  1122                           
  1123  0072                     ?_I2C2_Receive:	
  1124                           ; 1 bytes @ 0x2
  1125                           
  1126  0072                     ??_LCD_WriteData:	
  1127                           ; 1 bytes @ 0x2
  1128                           
  1129  0072                     ??_I2C2_PinInit:	
  1130                           ; 1 bytes @ 0x2
  1131                           
  1132  0072                     ??_I2C1_PinInit:	
  1133                           ; 1 bytes @ 0x2
  1134                           
  1135  0072                     ?___wmul:	
  1136                           ; 1 bytes @ 0x2
  1137                           
  1138  0072                     ?___lldiv:	
  1139                           ; 2 bytes @ 0x2
  1140                           
  1141  0072                     ?___llmod:	
  1142                           ; 4 bytes @ 0x2
  1143                           
  1144  0072                     I2C2_Transmit@pData:	
  1145                           ; 4 bytes @ 0x2
  1146                           
  1147  0072                     I2C2_Receive@pData:	
  1148                           ; 1 bytes @ 0x2
  1149                           
  1150  0072                     I2C1_Transmit@pData:	
  1151                           ; 1 bytes @ 0x2
  1152                           
  1153  0072                     I2C1_Receive@pData:	
  1154                           ; 1 bytes @ 0x2
  1155                           
  1156  0072                     ___wmul@multiplier:	
  1157                           ; 1 bytes @ 0x2
  1158                           
  1159  0072                     ___lldiv@divisor:	
  1160                           ; 2 bytes @ 0x2
  1161                           
  1162  0072                     ___llmod@divisor:	
  1163                           ; 4 bytes @ 0x2
  1164                           
  1165                           
  1166                           ; 4 bytes @ 0x2
  1167  0072                     	ds	1
  1168  0073                     ?_I2C1_Setting:	
  1169  0073                     ?_I2C2_Setting:	
  1170                           ; 1 bytes @ 0x3
  1171                           
  1172  0073                     I2C2_Setting@mode:	
  1173                           ; 1 bytes @ 0x3
  1174                           
  1175  0073                     I2C2_Transmit@size:	
  1176                           ; 1 bytes @ 0x3
  1177                           
  1178  0073                     I2C2_Receive@size:	
  1179                           ; 1 bytes @ 0x3
  1180                           
  1181  0073                     I2C1_Setting@mode:	
  1182                           ; 1 bytes @ 0x3
  1183                           
  1184  0073                     I2C1_Transmit@size:	
  1185                           ; 1 bytes @ 0x3
  1186                           
  1187  0073                     I2C1_Receive@size:	
  1188                           ; 1 bytes @ 0x3
  1189                           
  1190                           
  1191                           ; 1 bytes @ 0x3
  1192  0073                     	ds	1
  1193  0074                     ??_I2C1_Transmit:	
  1194  0074                     ??_I2C2_Transmit:	
  1195                           ; 1 bytes @ 0x4
  1196                           
  1197  0074                     ??_I2C1_Receive:	
  1198                           ; 1 bytes @ 0x4
  1199                           
  1200  0074                     ??_I2C2_Receive:	
  1201                           ; 1 bytes @ 0x4
  1202                           
  1203  0074                     LCD_WriteData@point:	
  1204                           ; 1 bytes @ 0x4
  1205                           
  1206  0074                     I2C2_Setting@Speed:	
  1207                           ; 1 bytes @ 0x4
  1208                           
  1209  0074                     I2C1_Setting@Speed:	
  1210                           ; 1 bytes @ 0x4
  1211                           
  1212  0074                     ___wmul@multiplicand:	
  1213                           ; 1 bytes @ 0x4
  1214                           
  1215                           
  1216                           ; 2 bytes @ 0x4
  1217  0074                     	ds	1
  1218  0075                     ?_LCD_Put:	
  1219  0075                     ?_LCD_CursorPosition:	
  1220                           ; 1 bytes @ 0x5
  1221                           
  1222  0075                     ??_LCD_DisplayClear:	
  1223                           ; 1 bytes @ 0x5
  1224                           
  1225  0075                     ??_I2C1_Setting:	
  1226                           ; 1 bytes @ 0x5
  1227                           
  1228  0075                     ??_I2C2_Setting:	
  1229                           ; 1 bytes @ 0x5
  1230                           
  1231  0075                     LCD_Put@word:	
  1232                           ; 1 bytes @ 0x5
  1233                           
  1234  0075                     LCD_CursorPosition@ty:	
  1235                           ; 1 bytes @ 0x5
  1236                           
  1237                           
  1238                           ; 1 bytes @ 0x5
  1239  0075                     	ds	1
  1240  0076                     ??_LCD_Init:	
  1241  0076                     ??_LCD_Put:	
  1242                           ; 1 bytes @ 0x6
  1243                           
  1244  0076                     ??_LCD_CursorPosition:	
  1245                           ; 1 bytes @ 0x6
  1246                           
  1247  0076                     ??_xputc:	
  1248                           ; 1 bytes @ 0x6
  1249                           
  1250  0076                     ??___wmul:	
  1251                           ; 1 bytes @ 0x6
  1252                           
  1253  0076                     I2C2_Setting@address:	
  1254                           ; 1 bytes @ 0x6
  1255                           
  1256  0076                     I2C2_Transmit@address:	
  1257                           ; 1 bytes @ 0x6
  1258                           
  1259  0076                     I2C2_Receive@address:	
  1260                           ; 1 bytes @ 0x6
  1261                           
  1262  0076                     I2C1_Setting@address:	
  1263                           ; 1 bytes @ 0x6
  1264                           
  1265  0076                     I2C1_Transmit@address:	
  1266                           ; 1 bytes @ 0x6
  1267                           
  1268  0076                     I2C1_Receive@address:	
  1269                           ; 1 bytes @ 0x6
  1270                           
  1271  0076                     ___wmul@product:	
  1272                           ; 1 bytes @ 0x6
  1273                           
  1274  0076                     ___lldiv@dividend:	
  1275                           ; 2 bytes @ 0x6
  1276                           
  1277  0076                     ___llmod@dividend:	
  1278                           ; 4 bytes @ 0x6
  1279                           
  1280                           
  1281                           ; 4 bytes @ 0x6
  1282  0076                     	ds	1
  1283  0077                     ?_I2C_Init:	
  1284  0077                     LCD_CursorPosition@tx:	
  1285                           ; 1 bytes @ 0x7
  1286                           
  1287  0077                     xputc@c:	
  1288                           ; 1 bytes @ 0x7
  1289                           
  1290  0077                     I2C_Init@address:	
  1291                           ; 1 bytes @ 0x7
  1292                           
  1293  0077                     I2C2_Transmit@i:	
  1294                           ; 1 bytes @ 0x7
  1295                           
  1296  0077                     I2C2_Receive@result:	
  1297                           ; 1 bytes @ 0x7
  1298                           
  1299  0077                     I2C1_Transmit@i:	
  1300                           ; 1 bytes @ 0x7
  1301                           
  1302  0077                     I2C1_Receive@result:	
  1303                           ; 1 bytes @ 0x7
  1304                           
  1305                           
  1306                           ; 1 bytes @ 0x7
  1307  0077                     	ds	1
  1308  0078                     ??_xputs:	
  1309  0078                     I2C_Init@mode:	
  1310                           ; 1 bytes @ 0x8
  1311                           
  1312  0078                     I2C2_Transmit@i_494:	
  1313                           ; 1 bytes @ 0x8
  1314                           
  1315  0078                     I2C2_Receive@i:	
  1316                           ; 1 bytes @ 0x8
  1317                           
  1318  0078                     I2C1_Transmit@i_633:	
  1319                           ; 1 bytes @ 0x8
  1320                           
  1321  0078                     I2C1_Receive@i:	
  1322                           ; 1 bytes @ 0x8
  1323                           
  1324                           
  1325                           ; 1 bytes @ 0x8
  1326  0078                     	ds	1
  1327  0079                     xputs@str:	
  1328  0079                     I2C_Init@Speed:	
  1329                           ; 1 bytes @ 0x9
  1330                           
  1331  0079                     I2C2_Transmit@result:	
  1332                           ; 1 bytes @ 0x9
  1333                           
  1334  0079                     I2C2_Receive@i_501:	
  1335                           ; 1 bytes @ 0x9
  1336                           
  1337  0079                     I2C1_Transmit@result:	
  1338                           ; 1 bytes @ 0x9
  1339                           
  1340  0079                     I2C1_Receive@i_640:	
  1341                           ; 1 bytes @ 0x9
  1342                           
  1343                           
  1344                           ; 1 bytes @ 0x9
  1345  0079                     	ds	1
  1346  007A                     ??___lldiv:	
  1347  007A                     ??___llmod:	
  1348                           ; 1 bytes @ 0xA
  1349                           
  1350  007A                     I2C_Init@I2Cx:	
  1351                           ; 1 bytes @ 0xA
  1352                           
  1353                           
  1354                           ; 1 bytes @ 0xA
  1355  007A                     	ds	1
  1356                           
  1357                           	psect	cstackBANK0
  1358  0020                     __pcstackBANK0:	
  1359  0020                     ??_I2C_Init:	
  1360  0020                     ?_I2C_Transmit:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0020                     ?_I2C_Receive:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0020                     I2C_Transmit@address:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0020                     I2C_Receive@address:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0020                     ___llmod@counter:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0020                     ___lldiv@quotient:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378                           
  1379                           ; 4 bytes @ 0x0
  1380  0020                     	ds	1
  1381  0021                     I2C_Transmit@pData:	
  1382  0021                     I2C_Receive@pData:	
  1383                           ; 1 bytes @ 0x1
  1384                           
  1385                           
  1386                           ; 1 bytes @ 0x1
  1387  0021                     	ds	1
  1388  0022                     I2C_Transmit@size:	
  1389  0022                     I2C_Receive@size:	
  1390                           ; 1 bytes @ 0x2
  1391                           
  1392                           
  1393                           ; 1 bytes @ 0x2
  1394  0022                     	ds	1
  1395  0023                     ??_I2C_Transmit:	
  1396  0023                     ??_I2C_Receive:	
  1397                           ; 1 bytes @ 0x3
  1398                           
  1399                           
  1400                           ; 1 bytes @ 0x3
  1401  0023                     	ds	1
  1402  0024                     ___lldiv@counter:	
  1403                           
  1404                           ; 1 bytes @ 0x4
  1405  0024                     	ds	1
  1406  0025                     ?_xvprintf:	
  1407  0025                     xvprintf@fmt:	
  1408                           ; 1 bytes @ 0x5
  1409                           
  1410                           
  1411                           ; 2 bytes @ 0x5
  1412  0025                     	ds	1
  1413  0026                     I2C_Transmit@I2Cx:	
  1414  0026                     I2C_Receive@result:	
  1415                           ; 1 bytes @ 0x6
  1416                           
  1417                           
  1418                           ; 1 bytes @ 0x6
  1419  0026                     	ds	1
  1420  0027                     xvprintf@arp:	
  1421  0027                     I2C_Transmit@result:	
  1422                           ; 1 bytes @ 0x7
  1423                           
  1424  0027                     I2C_Receive@I2Cx:	
  1425                           ; 1 bytes @ 0x7
  1426                           
  1427                           
  1428                           ; 1 bytes @ 0x7
  1429  0027                     	ds	1
  1430  0028                     ??_xvprintf:	
  1431                           
  1432                           ; 1 bytes @ 0x8
  1433  0028                     	ds	4
  1434  002C                     xvprintf@s:	
  1435                           
  1436                           ; 16 bytes @ 0xC
  1437  002C                     	ds	16
  1438  003C                     _xvprintf$197:	
  1439                           
  1440                           ; 4 bytes @ 0x1C
  1441  003C                     	ds	4
  1442  0040                     _xvprintf$198:	
  1443                           
  1444                           ; 2 bytes @ 0x20
  1445  0040                     	ds	2
  1446  0042                     _xvprintf$199:	
  1447                           
  1448                           ; 2 bytes @ 0x22
  1449  0042                     	ds	2
  1450  0044                     xvprintf@p:	
  1451                           
  1452                           ; 1 bytes @ 0x24
  1453  0044                     	ds	1
  1454  0045                     xvprintf@r:	
  1455                           
  1456                           ; 2 bytes @ 0x25
  1457  0045                     	ds	2
  1458  0047                     xvprintf@w:	
  1459                           
  1460                           ; 2 bytes @ 0x27
  1461  0047                     	ds	2
  1462  0049                     xvprintf@j:	
  1463                           
  1464                           ; 2 bytes @ 0x29
  1465  0049                     	ds	2
  1466  004B                     xvprintf@v:	
  1467                           
  1468                           ; 4 bytes @ 0x2B
  1469  004B                     	ds	4
  1470  004F                     xvprintf@f:	
  1471                           
  1472                           ; 2 bytes @ 0x2F
  1473  004F                     	ds	2
  1474  0051                     xvprintf@i:	
  1475                           
  1476                           ; 2 bytes @ 0x31
  1477  0051                     	ds	2
  1478  0053                     xvprintf@d:	
  1479                           
  1480                           ; 1 bytes @ 0x33
  1481  0053                     	ds	1
  1482  0054                     xvprintf@c:	
  1483                           
  1484                           ; 1 bytes @ 0x34
  1485  0054                     	ds	1
  1486  0055                     ?_xprintf:	
  1487  0055                     xprintf@fmt:	
  1488                           ; 1 bytes @ 0x35
  1489                           
  1490                           
  1491                           ; 2 bytes @ 0x35
  1492  0055                     	ds	10
  1493  005F                     ??_xprintf:	
  1494                           
  1495                           ; 1 bytes @ 0x3F
  1496  005F                     	ds	1
  1497  0060                     xprintf@arp:	
  1498                           
  1499                           ; 1 bytes @ 0x40
  1500  0060                     	ds	1
  1501  0061                     ??_main:	
  1502                           
  1503                           ; 1 bytes @ 0x41
  1504  0061                     	ds	8
  1505                           
  1506                           	psect	maintext
  1507  047C                     __pmaintext:	
  1508 ;;
  1509 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1510 ;;
  1511 ;; *************** function _main *****************
  1512 ;; Defined at:
  1513 ;;		line 12 in file "main.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  resultdata      4    4[BANK1 ] unsigned char [4]
  1518 ;;  testdata        4    0[BANK1 ] unsigned char [4]
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      char 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : B1F/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1528 ;;      Params:         0       0       0       0       0       0
  1529 ;;      Locals:         0       0       8       0       0       0
  1530 ;;      Temps:          0       8       0       0       0       0
  1531 ;;      Totals:         0       8       8       0       0       0
  1532 ;;Total ram usage:       16 bytes
  1533 ;; Hardware stack levels required when called:    9
  1534 ;; This function calls:
  1535 ;;		_Basic_Init
  1536 ;;		_I2C_Init
  1537 ;;		_I2C_Receive
  1538 ;;		_I2C_Transmit
  1539 ;;		_LCD_CursorPosition
  1540 ;;		_LCD_Init
  1541 ;;		_xprintf
  1542 ;; This function is called by:
  1543 ;;		Startup code after reset
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function _main
  1549  047C                     _main:	
  1550                           
  1551                           ;main.c: 14: Basic_Init();
  1552                           
  1553                           ;incstack = 0
  1554                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1555  047C  318F  27BB  3184   	fcall	_Basic_Init
  1556                           
  1557                           ;main.c: 15: I2C_Init(I2C2_MODULE,0x56,I2C_MODE_SLAVE,I2C_SPEED_STANDARD);
  1558  047F  3056               	movlw	86
  1559  0480  0020               	movlb	0	; select bank0
  1560  0481  00E1               	movwf	??_main
  1561  0482  0861               	movf	??_main,w
  1562  0483  00F7               	movwf	I2C_Init@address
  1563  0484  01F8               	clrf	I2C_Init@mode
  1564  0485  0AF8               	incf	I2C_Init@mode,f
  1565  0486  01F9               	clrf	I2C_Init@Speed
  1566  0487  3001               	movlw	1
  1567  0488  3187  27CA  3184   	fcall	_I2C_Init
  1568                           
  1569                           ;main.c: 16: LCD_Init();
  1570  048B  3184  24F5  3184   	fcall	_LCD_Init
  1571                           
  1572                           ;main.c: 17: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  1573  048E  3067               	movlw	low _LCD_Put
  1574  048F  0020               	movlb	0	; select bank0
  1575  0490  00EB               	movwf	_xfunc_out
  1576  0491  300F               	movlw	high _LCD_Put
  1577  0492  00EC               	movwf	_xfunc_out+1
  1578                           
  1579                           ;main.c: 19: uint8_t testdata[4]={
  1580                           ;main.c: 20: 19,98,05,06
  1581                           ;main.c: 21: };
  1582  0493  0021               	movlb	1	; select bank1
  1583  0494  0851               	movf	(main@F3055+3)^(0+128),w
  1584  0495  00C9               	movwf	(main@testdata+3)^(0+128)
  1585  0496  0850               	movf	(main@F3055+2)^(0+128),w
  1586  0497  00C8               	movwf	(main@testdata+2)^(0+128)
  1587  0498  084F               	movf	(main@F3055+1)^(0+128),w
  1588  0499  00C7               	movwf	(main@testdata+1)^(0+128)
  1589  049A  084E               	movf	main@F3055^(0+128),w
  1590  049B  00C6               	movwf	main@testdata^(0+128)
  1591  049C                     l3494:	
  1592                           ;main.c: 22: uint8_t resultdata[4];
  1593                           ;main.c: 24: while(1)
  1594                           
  1595                           
  1596                           ;main.c: 25: {
  1597                           ;main.c: 26: resultdata[0] = I2C_Transmit(I2C2_MODULE,0x56,testdata,4);
  1598  049C  3056               	movlw	86
  1599  049D  0020               	movlb	0	; select bank0
  1600  049E  00E1               	movwf	??_main
  1601  049F  0861               	movf	??_main,w
  1602  04A0  00A0               	movwf	I2C_Transmit@address
  1603  04A1  30C6               	movlw	(low (main@testdata| 0))& (0+255)
  1604  04A2  00E2               	movwf	??_main+1
  1605  04A3  0862               	movf	??_main+1,w
  1606  04A4  00A1               	movwf	I2C_Transmit@pData
  1607  04A5  3004               	movlw	4
  1608  04A6  00E3               	movwf	??_main+2
  1609  04A7  0863               	movf	??_main+2,w
  1610  04A8  00A2               	movwf	I2C_Transmit@size
  1611  04A9  3001               	movlw	1
  1612  04AA  3187  279F  3184   	fcall	_I2C_Transmit
  1613  04AD  0020               	movlb	0	; select bank0
  1614  04AE  00E4               	movwf	??_main+3
  1615  04AF  0864               	movf	??_main+3,w
  1616  04B0  0021               	movlb	1	; select bank1
  1617  04B1  00CA               	movwf	main@resultdata^(0+128)
  1618                           
  1619                           ;main.c: 27: I2C_Receive(I2C2_MODULE,0x56,resultdata,4);
  1620  04B2  3056               	movlw	86
  1621  04B3  0020               	movlb	0	; select bank0
  1622  04B4  00E1               	movwf	??_main
  1623  04B5  0861               	movf	??_main,w
  1624  04B6  00A0               	movwf	I2C_Receive@address
  1625  04B7  30CA               	movlw	(low (main@resultdata| 0))& (0+255)
  1626  04B8  00E2               	movwf	??_main+1
  1627  04B9  0862               	movf	??_main+1,w
  1628  04BA  00A1               	movwf	I2C_Receive@pData
  1629  04BB  3004               	movlw	4
  1630  04BC  00E3               	movwf	??_main+2
  1631  04BD  0863               	movf	??_main+2,w
  1632  04BE  00A2               	movwf	I2C_Receive@size
  1633  04BF  3001               	movlw	1
  1634  04C0  3187  2773  3184   	fcall	_I2C_Receive
  1635                           
  1636                           ;main.c: 28: LCD_CursorPosition(0,0);
  1637  04C3  01F5               	clrf	LCD_CursorPosition@ty
  1638  04C4  3000               	movlw	0
  1639  04C5  318F  27D0  3184   	fcall	_LCD_CursorPosition
  1640                           
  1641                           ;main.c: 29: xprintf("%d %d %d %d",resultdata[0],resultdata[1],resultdata[2],resultdata[
      +                          3]);
  1642  04C8  30F3               	movlw	low (STR_1| (0+32768))
  1643  04C9  0020               	movlb	0	; select bank0
  1644  04CA  00D5               	movwf	xprintf@fmt
  1645  04CB  3087               	movlw	high (STR_1| (0+32768))
  1646  04CC  00D6               	movwf	xprintf@fmt+1
  1647  04CD  0021               	movlb	1	; select bank1
  1648  04CE  084A               	movf	main@resultdata^(0+128),w
  1649  04CF  0020               	movlb	0	; select bank0
  1650  04D0  00E1               	movwf	??_main
  1651  04D1  01E2               	clrf	??_main+1
  1652  04D2  0861               	movf	??_main,w
  1653  04D3  00D7               	movwf	?_xprintf+2
  1654  04D4  0862               	movf	??_main+1,w
  1655  04D5  00D8               	movwf	?_xprintf+3
  1656  04D6  0021               	movlb	1	; select bank1
  1657  04D7  084B               	movf	(main@resultdata^(0+128)+1),w
  1658  04D8  0020               	movlb	0	; select bank0
  1659  04D9  00E3               	movwf	??_main+2
  1660  04DA  01E4               	clrf	??_main+3
  1661  04DB  0863               	movf	??_main+2,w
  1662  04DC  00D9               	movwf	?_xprintf+4
  1663  04DD  0864               	movf	??_main+3,w
  1664  04DE  00DA               	movwf	?_xprintf+5
  1665  04DF  0021               	movlb	1	; select bank1
  1666  04E0  084C               	movf	(main@resultdata^(0+128)+2),w
  1667  04E1  0020               	movlb	0	; select bank0
  1668  04E2  00E5               	movwf	??_main+4
  1669  04E3  01E6               	clrf	??_main+5
  1670  04E4  0865               	movf	??_main+4,w
  1671  04E5  00DB               	movwf	?_xprintf+6
  1672  04E6  0866               	movf	??_main+5,w
  1673  04E7  00DC               	movwf	?_xprintf+7
  1674  04E8  0021               	movlb	1	; select bank1
  1675  04E9  084D               	movf	(main@resultdata^(0+128)+3),w
  1676  04EA  0020               	movlb	0	; select bank0
  1677  04EB  00E7               	movwf	??_main+6
  1678  04EC  01E8               	clrf	??_main+7
  1679  04ED  0867               	movf	??_main+6,w
  1680  04EE  00DD               	movwf	?_xprintf+8
  1681  04EF  0868               	movf	??_main+7,w
  1682  04F0  00DE               	movwf	?_xprintf+9
  1683  04F1  318F  2798  3184   	fcall	_xprintf
  1684  04F4  2C9C               	goto	l3494
  1685  04F5                     __end_of_main:	
  1686                           ;main.c: 30: }
  1687                           ;main.c: 31: return 0;
  1688                           ;	Return value of _main is never used
  1689                           
  1690                           
  1691                           	psect	text1
  1692  0F98                     __ptext1:	
  1693 ;; *************** function _xprintf *****************
  1694 ;; Defined at:
  1695 ;;		line 165 in file "xprintf.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  1698 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  1699 ;;		 -> STR_1(12), 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  arp             1   64[BANK0 ] PTR void [1]
  1702 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1712 ;;      Params:         0      10       0       0       0       0
  1713 ;;      Locals:         0       1       0       0       0       0
  1714 ;;      Temps:          0       1       0       0       0       0
  1715 ;;      Totals:         0      12       0       0       0       0
  1716 ;;Total ram usage:       12 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    8
  1719 ;; This function calls:
  1720 ;;		_xvprintf
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;;		_put_dump
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           
  1728                           ;psect for function _xprintf
  1729  0F98                     _xprintf:	
  1730                           
  1731                           ;xprintf.c: 170: va_list arp;
  1732                           ;xprintf.c: 173: *arp = __va_start();
  1733                           
  1734                           ;incstack = 0
  1735                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1736  0F98  3057               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  1737  0F99  0020               	movlb	0	; select bank0
  1738  0F9A  00DF               	movwf	??_xprintf
  1739  0F9B  085F               	movf	??_xprintf,w
  1740  0F9C  00E0               	movwf	xprintf@arp
  1741                           
  1742                           ;xprintf.c: 174: xvprintf(fmt, arp);
  1743  0F9D  0856               	movf	xprintf@fmt+1,w
  1744  0F9E  00A6               	movwf	xvprintf@fmt+1
  1745  0F9F  0855               	movf	xprintf@fmt,w
  1746  0FA0  00A5               	movwf	xvprintf@fmt
  1747  0FA1  3060               	movlw	(low (xprintf@arp| 0))& (0+255)
  1748  0FA2  00DF               	movwf	??_xprintf
  1749  0FA3  085F               	movf	??_xprintf,w
  1750  0FA4  00A7               	movwf	xvprintf@arp
  1751  0FA5  3180  2034         	fcall	_xvprintf
  1752  0FA7  0008               	return
  1753  0FA8                     __end_of_xprintf:	
  1754                           
  1755                           	psect	text2
  1756  0034                     __ptext2:	
  1757 ;; *************** function _xvprintf *****************
  1758 ;; Defined at:
  1759 ;;		line 88 in file "xprintf.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  fmt             2    5[BANK0 ] PTR const unsigned char 
  1762 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  1763 ;;		 -> STR_1(12), 
  1764 ;;  arp             1    7[BANK0 ] PTR PTR void 
  1765 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  s              16   12[BANK0 ] unsigned char [16]
  1768 ;;  v               4   43[BANK0 ] unsigned long 
  1769 ;;  i               2   49[BANK0 ] unsigned int 
  1770 ;;  f               2   47[BANK0 ] unsigned int 
  1771 ;;  j               2   41[BANK0 ] unsigned int 
  1772 ;;  w               2   39[BANK0 ] unsigned int 
  1773 ;;  r               2   37[BANK0 ] unsigned int 
  1774 ;;  c               1   52[BANK0 ] unsigned char 
  1775 ;;  d               1   51[BANK0 ] unsigned char 
  1776 ;;  p               1   36[BANK0 ] PTR unsigned char 
  1777 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1787 ;;      Params:         0       3       0       0       0       0
  1788 ;;      Locals:         0      41       0       0       0       0
  1789 ;;      Temps:          0       4       0       0       0       0
  1790 ;;      Totals:         0      48       0       0       0       0
  1791 ;;Total ram usage:       48 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    7
  1794 ;; This function calls:
  1795 ;;		___lldiv
  1796 ;;		___llmod
  1797 ;;		___wmul
  1798 ;;		_xputc
  1799 ;;		_xputs
  1800 ;; This function is called by:
  1801 ;;		_xprintf
  1802 ;;		_xsprintf
  1803 ;;		_xfprintf
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           
  1808                           ;psect for function _xvprintf
  1809  0034                     _xvprintf:	
  1810  0034                     l121:	
  1811                           ;incstack = 0
  1812                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1813                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  1814                           ;xprintf.c: 94: unsigned long v;
  1815                           ;xprintf.c: 95: char s[16], c, d, *p;
  1816                           ;xprintf.c: 98: for (;;) {
  1817                           
  1818                           
  1819                           ;xprintf.c: 99: c = *fmt++;
  1820  0034  0020               	movlb	0	; select bank0
  1821  0035  0825               	movf	xvprintf@fmt,w
  1822  0036  0084               	movwf	4
  1823  0037  0826               	movf	xvprintf@fmt+1,w
  1824  0038  0085               	movwf	5
  1825  0039  0800               	movf	0,w	;code access
  1826  003A  00A8               	movwf	??_xvprintf
  1827  003B  0828               	movf	??_xvprintf,w
  1828  003C  00D4               	movwf	xvprintf@c
  1829  003D  3001               	movlw	1
  1830  003E  07A5               	addwf	xvprintf@fmt,f
  1831  003F  3000               	movlw	0
  1832  0040  3DA6               	addwfc	xvprintf@fmt+1,f
  1833                           
  1834                           ;xprintf.c: 100: if (!c) break;
  1835  0041  0854               	movf	xvprintf@c,w
  1836  0042  1903               	btfsc	3,2
  1837  0043  0008               	return
  1838                           
  1839                           ;xprintf.c: 101: if (c != '%') {
  1840  0044  3025               	movlw	37
  1841  0045  0654               	xorwf	xvprintf@c,w
  1842  0046  1903               	btfsc	3,2
  1843  0047  284D               	goto	l3022
  1844                           
  1845                           ;xprintf.c: 102: xputc(c); continue;
  1846  0048  0854               	movf	xvprintf@c,w
  1847  0049  3187  2746  3180   	fcall	_xputc
  1848  004C  2834               	goto	l121
  1849  004D                     l3022:	
  1850                           
  1851                           ;xprintf.c: 103: }
  1852                           ;xprintf.c: 104: f = 0;
  1853  004D  0020               	movlb	0	; select bank0
  1854  004E  01CF               	clrf	xvprintf@f
  1855  004F  01D0               	clrf	xvprintf@f+1
  1856                           
  1857                           ;xprintf.c: 105: c = *fmt++;
  1858  0050  0825               	movf	xvprintf@fmt,w
  1859  0051  0084               	movwf	4
  1860  0052  0826               	movf	xvprintf@fmt+1,w
  1861  0053  0085               	movwf	5
  1862  0054  0800               	movf	0,w	;code access
  1863  0055  00A8               	movwf	??_xvprintf
  1864  0056  0828               	movf	??_xvprintf,w
  1865  0057  00D4               	movwf	xvprintf@c
  1866  0058  3001               	movlw	1
  1867  0059  07A5               	addwf	xvprintf@fmt,f
  1868  005A  3000               	movlw	0
  1869  005B  3DA6               	addwfc	xvprintf@fmt+1,f
  1870                           
  1871                           ;xprintf.c: 106: if (c == '0') {
  1872  005C  3030               	movlw	48
  1873  005D  0654               	xorwf	xvprintf@c,w
  1874  005E  1D03               	btfss	3,2
  1875  005F  2862               	goto	l3036
  1876                           
  1877                           ;xprintf.c: 107: f = 1; c = *fmt++;
  1878  0060  3001               	movlw	1
  1879  0061  2867               	goto	L6
  1880  0062                     l3036:	
  1881                           ;xprintf.c: 108: } else {
  1882                           
  1883                           
  1884                           ;xprintf.c: 109: if (c == '-') {
  1885  0062  302D               	movlw	45
  1886  0063  0654               	xorwf	xvprintf@c,w
  1887  0064  1D03               	btfss	3,2
  1888  0065  2876               	goto	l3044
  1889                           
  1890                           ;xprintf.c: 110: f = 2; c = *fmt++;
  1891  0066  3002               	movlw	2
  1892  0067                     L6:	
  1893  0067  00CF               	movwf	xvprintf@f
  1894  0068  3000               	movlw	0
  1895  0069  00D0               	movwf	xvprintf@f+1
  1896  006A  0825               	movf	xvprintf@fmt,w
  1897  006B  0084               	movwf	4
  1898  006C  0826               	movf	xvprintf@fmt+1,w
  1899  006D  0085               	movwf	5
  1900  006E  0800               	movf	0,w	;code access
  1901  006F  00A8               	movwf	??_xvprintf
  1902  0070  0828               	movf	??_xvprintf,w
  1903  0071  00D4               	movwf	xvprintf@c
  1904  0072  3001               	movlw	1
  1905  0073  07A5               	addwf	xvprintf@fmt,f
  1906  0074  3000               	movlw	0
  1907  0075  3DA6               	addwfc	xvprintf@fmt+1,f
  1908  0076                     l3044:	
  1909                           
  1910                           ;xprintf.c: 111: }
  1911                           ;xprintf.c: 112: }
  1912                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  1913  0076  01C7               	clrf	xvprintf@w
  1914  0077  01C8               	clrf	xvprintf@w+1
  1915  0078  28A0               	goto	l3052
  1916  0079                     l3046:	
  1917                           
  1918                           ;xprintf.c: 114: w = w * 10 + c - '0';
  1919  0079  0854               	movf	xvprintf@c,w
  1920  007A  00A8               	movwf	??_xvprintf
  1921  007B  01A9               	clrf	??_xvprintf+1
  1922  007C  0848               	movf	xvprintf@w+1,w
  1923  007D  00F3               	movwf	___wmul@multiplier+1
  1924  007E  0847               	movf	xvprintf@w,w
  1925  007F  00F2               	movwf	___wmul@multiplier
  1926  0080  300A               	movlw	10
  1927  0081  00F4               	movwf	___wmul@multiplicand
  1928  0082  3000               	movlw	0
  1929  0083  00F5               	movwf	___wmul@multiplicand+1
  1930  0084  318F  27E5  3180   	fcall	___wmul
  1931  0087  0020               	movlb	0	; select bank0
  1932  0088  0828               	movf	??_xvprintf,w
  1933  0089  0772               	addwf	?___wmul,w
  1934  008A  00AA               	movwf	??_xvprintf+2
  1935  008B  0829               	movf	??_xvprintf+1,w
  1936  008C  3D73               	addwfc	?___wmul+1,w
  1937  008D  00AB               	movwf	??_xvprintf+3
  1938  008E  082A               	movf	??_xvprintf+2,w
  1939  008F  3ED0               	addlw	208
  1940  0090  00C7               	movwf	xvprintf@w
  1941  0091  30FF               	movlw	255
  1942  0092  3D2B               	addwfc	??_xvprintf+3,w
  1943  0093  00C8               	movwf	xvprintf@w+1
  1944  0094  0825               	movf	xvprintf@fmt,w
  1945  0095  0084               	movwf	4
  1946  0096  0826               	movf	xvprintf@fmt+1,w
  1947  0097  0085               	movwf	5
  1948  0098  0800               	movf	0,w	;code access
  1949  0099  00A8               	movwf	??_xvprintf
  1950  009A  0828               	movf	??_xvprintf,w
  1951  009B  00D4               	movwf	xvprintf@c
  1952  009C  3001               	movlw	1
  1953  009D  07A5               	addwf	xvprintf@fmt,f
  1954  009E  3000               	movlw	0
  1955  009F  3DA6               	addwfc	xvprintf@fmt+1,f
  1956  00A0                     l3052:	
  1957  00A0  3030               	movlw	48
  1958  00A1  0254               	subwf	xvprintf@c,w
  1959  00A2  1C03               	skipc
  1960  00A3  28A8               	goto	l3056
  1961  00A4  303A               	movlw	58
  1962  00A5  0254               	subwf	xvprintf@c,w
  1963  00A6  1C03               	skipc
  1964  00A7  2879               	goto	l3046
  1965  00A8                     l3056:	
  1966                           
  1967                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  1968  00A8  306C               	movlw	108
  1969  00A9  0654               	xorwf	xvprintf@c,w
  1970  00AA  1903               	btfsc	3,2
  1971  00AB  28B0               	goto	l136
  1972  00AC  304C               	movlw	76
  1973  00AD  0654               	xorwf	xvprintf@c,w
  1974  00AE  1D03               	btfss	3,2
  1975  00AF  28BD               	goto	l3064
  1976  00B0                     l136:	
  1977                           
  1978                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  1979  00B0  154F               	bsf	xvprintf@f,2
  1980  00B1  0825               	movf	xvprintf@fmt,w
  1981  00B2  0084               	movwf	4
  1982  00B3  0826               	movf	xvprintf@fmt+1,w
  1983  00B4  0085               	movwf	5
  1984  00B5  0800               	movf	0,w	;code access
  1985  00B6  00A8               	movwf	??_xvprintf
  1986  00B7  0828               	movf	??_xvprintf,w
  1987  00B8  00D4               	movwf	xvprintf@c
  1988  00B9  3001               	movlw	1
  1989  00BA  07A5               	addwf	xvprintf@fmt,f
  1990  00BB  3000               	movlw	0
  1991  00BC  3DA6               	addwfc	xvprintf@fmt+1,f
  1992  00BD                     l3064:	
  1993                           
  1994                           ;xprintf.c: 117: }
  1995                           ;xprintf.c: 118: if (!c) break;
  1996  00BD  0854               	movf	xvprintf@c,w
  1997  00BE  1903               	btfsc	3,2
  1998  00BF  0008               	return
  1999                           
  2000                           ;xprintf.c: 119: d = c;
  2001  00C0  0854               	movf	xvprintf@c,w
  2002  00C1  00A8               	movwf	??_xvprintf
  2003  00C2  0828               	movf	??_xvprintf,w
  2004  00C3  00D3               	movwf	xvprintf@d
  2005                           
  2006                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  2007  00C4  3061               	movlw	97
  2008  00C5  0253               	subwf	xvprintf@d,w
  2009  00C6  1C03               	skipc
  2010  00C7  2933               	goto	l3106
  2011  00C8  3020               	movlw	32
  2012  00C9  02D3               	subwf	xvprintf@d,f
  2013                           
  2014                           ;xprintf.c: 121: switch (d) {
  2015  00CA  2933               	goto	l3106
  2016  00CB                     l3072:	
  2017                           ;xprintf.c: 122: case 'S' :
  2018                           
  2019                           
  2020                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  2021  00CB  0827               	movf	xvprintf@arp,w
  2022  00CC  0086               	movwf	6
  2023  00CD  0187               	clrf	7
  2024  00CE  3F40               	moviw [0]fsr1
  2025  00CF  0084               	movwf	4
  2026  00D0  0185               	clrf	5
  2027  00D1  0A81               	incf	1,f
  2028  00D2  0800               	movf	0,w
  2029  00D3  00A8               	movwf	??_xvprintf
  2030  00D4  0828               	movf	??_xvprintf,w
  2031  00D5  00C4               	movwf	xvprintf@p
  2032                           
  2033                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  2034  00D6  01C9               	clrf	xvprintf@j
  2035  00D7  01CA               	clrf	xvprintf@j+1
  2036  00D8                     l3078:	
  2037  00D8  0849               	movf	xvprintf@j,w
  2038  00D9  0744               	addwf	xvprintf@p,w
  2039  00DA  00A8               	movwf	??_xvprintf
  2040  00DB  0828               	movf	??_xvprintf,w
  2041  00DC  0086               	movwf	6
  2042  00DD  0187               	clrf	7
  2043  00DE  0801               	movf	1,w
  2044  00DF  1903               	btfsc	3,2
  2045  00E0  28EA               	goto	l3082
  2046  00E1  3001               	movlw	1
  2047  00E2  07C9               	addwf	xvprintf@j,f
  2048  00E3  3000               	movlw	0
  2049  00E4  3DCA               	addwfc	xvprintf@j+1,f
  2050  00E5  28D8               	goto	l3078
  2051  00E6                     l3080:	
  2052                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  2053                           
  2054  00E6  3020               	movlw	32
  2055  00E7  3187  2746  3180   	fcall	_xputc
  2056  00EA                     l3082:	
  2057  00EA  0020               	movlb	0	; select bank0
  2058  00EB  18CF               	btfsc	xvprintf@f,1
  2059  00EC  28FC               	goto	l3086
  2060  00ED  084A               	movf	xvprintf@j+1,w
  2061  00EE  00A9               	movwf	??_xvprintf+1
  2062  00EF  0849               	movf	xvprintf@j,w
  2063  00F0  00A8               	movwf	??_xvprintf
  2064  00F1  0AC9               	incf	xvprintf@j,f
  2065  00F2  1903               	skipnz
  2066  00F3  0ACA               	incf	xvprintf@j+1,f
  2067  00F4  0848               	movf	xvprintf@w+1,w
  2068  00F5  0229               	subwf	??_xvprintf+1,w
  2069  00F6  1D03               	skipz
  2070  00F7  28FA               	goto	u3235
  2071  00F8  0847               	movf	xvprintf@w,w
  2072  00F9  0228               	subwf	??_xvprintf,w
  2073  00FA                     u3235:	
  2074  00FA  1C03               	skipc
  2075  00FB  28E6               	goto	l3080
  2076  00FC                     l3086:	
  2077                           
  2078                           ;xprintf.c: 126: xputs(p);
  2079  00FC  0844               	movf	xvprintf@p,w
  2080  00FD  318F  27A8  3180   	fcall	_xputs
  2081  0100                     l3090:	
  2082                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  2083                           
  2084  0100  0020               	movlb	0	; select bank0
  2085  0101  084A               	movf	xvprintf@j+1,w
  2086  0102  00A9               	movwf	??_xvprintf+1
  2087  0103  0849               	movf	xvprintf@j,w
  2088  0104  00A8               	movwf	??_xvprintf
  2089  0105  0AC9               	incf	xvprintf@j,f
  2090  0106  1903               	skipnz
  2091  0107  0ACA               	incf	xvprintf@j+1,f
  2092  0108  0848               	movf	xvprintf@w+1,w
  2093  0109  0229               	subwf	??_xvprintf+1,w
  2094  010A  1D03               	skipz
  2095  010B  290E               	goto	u3245
  2096  010C  0847               	movf	xvprintf@w,w
  2097  010D  0228               	subwf	??_xvprintf,w
  2098  010E                     u3245:	
  2099  010E  1803               	btfsc	3,0
  2100  010F  2834               	goto	l121
  2101  0110  3020               	movlw	32
  2102  0111  3187  2746  3180   	fcall	_xputc
  2103  0114  2900               	goto	l3090
  2104  0115                     l3092:	
  2105                           ;xprintf.c: 129: case 'C' :
  2106                           
  2107                           ;xprintf.c: 128: continue;
  2108                           
  2109                           
  2110                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  2111  0115  0827               	movf	xvprintf@arp,w
  2112  0116  0086               	movwf	6
  2113  0117  0187               	clrf	7
  2114  0118  0801               	movf	1,w
  2115  0119  0084               	movwf	4
  2116  011A  0185               	clrf	5
  2117  011B  3002               	movlw	2
  2118  011C  0781               	addwf	1,f
  2119  011D  0800               	movf	0,w
  2120  011E  3187  2746  3180   	fcall	_xputc
  2121  0121  2834               	goto	l121
  2122  0122                     l3094:	
  2123                           ;xprintf.c: 131: case 'B' :
  2124                           
  2125                           
  2126                           ;xprintf.c: 132: r = 2; break;
  2127  0122  3002               	movlw	2
  2128  0123  0020               	movlb	0	; select bank0
  2129  0124  292A               	goto	L3
  2130  0125                     l3096:	
  2131                           ;xprintf.c: 133: case 'O' :
  2132                           
  2133                           
  2134                           ;xprintf.c: 134: r = 8; break;
  2135  0125  3008               	movlw	8
  2136  0126  292A               	goto	L3
  2137  0127                     l3098:	
  2138                           ;xprintf.c: 135: case 'D' :
  2139                           
  2140                           
  2141                           ;xprintf.c: 136: case 'U' :
  2142                           ;xprintf.c: 137: r = 10; break;
  2143  0127  300A               	movlw	10
  2144  0128  292A               	goto	L3
  2145  0129                     l3100:	
  2146                           ;xprintf.c: 138: case 'X' :
  2147                           
  2148                           
  2149                           ;xprintf.c: 139: r = 16; break;
  2150  0129  3010               	movlw	16
  2151  012A                     L3:	
  2152  012A  00C5               	movwf	xvprintf@r
  2153  012B  3000               	movlw	0
  2154  012C  00C6               	movwf	xvprintf@r+1
  2155  012D  294B               	goto	l154
  2156  012E                     l3102:	
  2157                           ;xprintf.c: 140: default:
  2158                           
  2159                           
  2160                           ;xprintf.c: 141: xputc(c); continue;
  2161  012E  0854               	movf	xvprintf@c,w
  2162  012F  3187  2746  3180   	fcall	_xputc
  2163  0132  2834               	goto	l121
  2164  0133                     l3106:	
  2165                           ;xprintf.c: 142: }
  2166                           
  2167  0133  0020               	movlb	0	; select bank0
  2168  0134  0853               	movf	xvprintf@d,w
  2169                           
  2170                           ; Switch size 1, requested type "space"
  2171                           ; Number of cases is 7, Range of values is 66 to 88
  2172                           ; switch strategies available:
  2173                           ; Name         Instructions Cycles
  2174                           ; simple_byte           22    12 (average)
  2175                           ; direct_byte           55     9 (fixed)
  2176                           ; jumptable            263     9 (fixed)
  2177                           ;	Chosen strategy is simple_byte
  2178  0135  3A42               	xorlw	66	; case 66
  2179  0136  1903               	skipnz
  2180  0137  2922               	goto	l3094
  2181  0138  3A01               	xorlw	1	; case 67
  2182  0139  1903               	skipnz
  2183  013A  2915               	goto	l3092
  2184  013B  3A07               	xorlw	7	; case 68
  2185  013C  1903               	skipnz
  2186  013D  2927               	goto	l3098
  2187  013E  3A0B               	xorlw	11	; case 79
  2188  013F  1903               	skipnz
  2189  0140  2925               	goto	l3096
  2190  0141  3A1C               	xorlw	28	; case 83
  2191  0142  1903               	skipnz
  2192  0143  28CB               	goto	l3072
  2193  0144  3A06               	xorlw	6	; case 85
  2194  0145  1903               	skipnz
  2195  0146  2927               	goto	l3098
  2196  0147  3A0D               	xorlw	13	; case 88
  2197  0148  1903               	skipnz
  2198  0149  2929               	goto	l3100
  2199  014A  292E               	goto	l3102
  2200  014B                     l154:	
  2201                           
  2202                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  2203  014B  0020               	movlb	0	; select bank0
  2204  014C  194F               	btfsc	xvprintf@f,2
  2205  014D  2983               	goto	l3116
  2206  014E  3044               	movlw	68
  2207  014F  0653               	xorwf	xvprintf@d,w
  2208  0150  1903               	btfsc	3,2
  2209  0151  2965               	goto	l3112
  2210  0152  0827               	movf	xvprintf@arp,w
  2211  0153  0086               	movwf	6
  2212  0154  0187               	clrf	7
  2213  0155  0801               	movf	1,w
  2214  0156  0084               	movwf	4
  2215  0157  0185               	clrf	5
  2216  0158  3002               	movlw	2
  2217  0159  0781               	addwf	1,f
  2218  015A  3F00               	moviw [0]fsr0
  2219  015B  00A8               	movwf	??_xvprintf
  2220  015C  3F01               	moviw [1]fsr0
  2221  015D  00A9               	movwf	??_xvprintf+1
  2222  015E  0828               	movf	??_xvprintf,w
  2223  015F  00BC               	movwf	_xvprintf$197
  2224  0160  0829               	movf	??_xvprintf+1,w
  2225  0161  00BD               	movwf	_xvprintf$197+1
  2226  0162  01BE               	clrf	_xvprintf$197+2
  2227  0163  01BF               	clrf	_xvprintf$197+3
  2228  0164  297A               	goto	l3114
  2229  0165                     l3112:	
  2230  0165  0827               	movf	xvprintf@arp,w
  2231  0166  0086               	movwf	6
  2232  0167  0187               	clrf	7
  2233  0168  0801               	movf	1,w
  2234  0169  0084               	movwf	4
  2235  016A  0185               	clrf	5
  2236  016B  3002               	movlw	2
  2237  016C  0781               	addwf	1,f
  2238  016D  3F00               	moviw [0]fsr0
  2239  016E  00A8               	movwf	??_xvprintf
  2240  016F  3F01               	moviw [1]fsr0
  2241  0170  00A9               	movwf	??_xvprintf+1
  2242  0171  0828               	movf	??_xvprintf,w
  2243  0172  00BC               	movwf	_xvprintf$197
  2244  0173  0829               	movf	??_xvprintf+1,w
  2245  0174  00BD               	movwf	_xvprintf$197+1
  2246  0175  0D89               	rlf	9,f
  2247  0176  3B89               	subwfb	9,f
  2248  0177  0989               	comf	9,f
  2249  0178  00BE               	movwf	_xvprintf$197+2
  2250  0179  00BF               	movwf	_xvprintf$197+3
  2251  017A                     l3114:	
  2252  017A  083F               	movf	_xvprintf$197+3,w
  2253  017B  00CE               	movwf	xvprintf@v+3
  2254  017C  083E               	movf	_xvprintf$197+2,w
  2255  017D  00CD               	movwf	xvprintf@v+2
  2256  017E  083D               	movf	_xvprintf$197+1,w
  2257  017F  00CC               	movwf	xvprintf@v+1
  2258  0180  083C               	movf	_xvprintf$197,w
  2259  0181  00CB               	movwf	xvprintf@v
  2260  0182  2993               	goto	l3118
  2261  0183                     l3116:	
  2262  0183  0827               	movf	xvprintf@arp,w
  2263  0184  0086               	movwf	6
  2264  0185  0187               	clrf	7
  2265  0186  0801               	movf	1,w
  2266  0187  0084               	movwf	4
  2267  0188  0185               	clrf	5
  2268  0189  3004               	movlw	4
  2269  018A  0781               	addwf	1,f
  2270  018B  3F00               	moviw [0]fsr0
  2271  018C  00CB               	movwf	xvprintf@v
  2272  018D  3F01               	moviw [1]fsr0
  2273  018E  00CC               	movwf	xvprintf@v+1
  2274  018F  3F02               	moviw [2]fsr0
  2275  0190  00CD               	movwf	xvprintf@v+2
  2276  0191  3F03               	moviw [3]fsr0
  2277  0192  00CE               	movwf	xvprintf@v+3
  2278  0193                     l3118:	
  2279                           
  2280                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  2281  0193  3044               	movlw	68
  2282  0194  0653               	xorwf	xvprintf@d,w
  2283  0195  1903               	btfsc	3,2
  2284  0196  1FCE               	btfss	xvprintf@v+3,7
  2285  0197  29A4               	goto	l3124
  2286                           
  2287                           ;xprintf.c: 147: v = 0 - v;
  2288  0198  09CB               	comf	xvprintf@v,f
  2289  0199  09CC               	comf	xvprintf@v+1,f
  2290  019A  09CD               	comf	xvprintf@v+2,f
  2291  019B  09CE               	comf	xvprintf@v+3,f
  2292  019C  0ACB               	incf	xvprintf@v,f
  2293  019D  1903               	skipnz
  2294  019E  0ACC               	incf	xvprintf@v+1,f
  2295  019F  1903               	skipnz
  2296  01A0  0ACD               	incf	xvprintf@v+2,f
  2297  01A1  1903               	skipnz
  2298  01A2  0ACE               	incf	xvprintf@v+3,f
  2299                           
  2300                           ;xprintf.c: 148: f |= 8;
  2301  01A3  15CF               	bsf	xvprintf@f,3
  2302  01A4                     l3124:	
  2303                           
  2304                           ;xprintf.c: 149: }
  2305                           ;xprintf.c: 150: i = 0;
  2306  01A4  01D1               	clrf	xvprintf@i
  2307  01A5  01D2               	clrf	xvprintf@i+1
  2308  01A6                     l3126:	
  2309                           ;xprintf.c: 151: do {
  2310                           
  2311                           
  2312                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  2313  01A6  0845               	movf	xvprintf@r,w
  2314  01A7  00F2               	movwf	___llmod@divisor
  2315  01A8  0846               	movf	xvprintf@r+1,w
  2316  01A9  00F3               	movwf	___llmod@divisor+1
  2317  01AA  01F4               	clrf	___llmod@divisor+2
  2318  01AB  01F5               	clrf	___llmod@divisor+3
  2319  01AC  084E               	movf	xvprintf@v+3,w
  2320  01AD  00F9               	movwf	___llmod@dividend+3
  2321  01AE  084D               	movf	xvprintf@v+2,w
  2322  01AF  00F8               	movwf	___llmod@dividend+2
  2323  01B0  084C               	movf	xvprintf@v+1,w
  2324  01B1  00F7               	movwf	___llmod@dividend+1
  2325  01B2  084B               	movf	xvprintf@v,w
  2326  01B3  00F6               	movwf	___llmod@dividend
  2327  01B4  3186  2659  3180   	fcall	___llmod
  2328  01B7  0872               	movf	?___llmod,w
  2329  01B8  0020               	movlb	0	; select bank0
  2330  01B9  00A8               	movwf	??_xvprintf
  2331  01BA  0828               	movf	??_xvprintf,w
  2332  01BB  00D3               	movwf	xvprintf@d
  2333  01BC  0845               	movf	xvprintf@r,w
  2334  01BD  00F2               	movwf	___lldiv@divisor
  2335  01BE  0846               	movf	xvprintf@r+1,w
  2336  01BF  00F3               	movwf	___lldiv@divisor+1
  2337  01C0  01F4               	clrf	___lldiv@divisor+2
  2338  01C1  01F5               	clrf	___lldiv@divisor+3
  2339  01C2  084E               	movf	xvprintf@v+3,w
  2340  01C3  00F9               	movwf	___lldiv@dividend+3
  2341  01C4  084D               	movf	xvprintf@v+2,w
  2342  01C5  00F8               	movwf	___lldiv@dividend+2
  2343  01C6  084C               	movf	xvprintf@v+1,w
  2344  01C7  00F7               	movwf	___lldiv@dividend+1
  2345  01C8  084B               	movf	xvprintf@v,w
  2346  01C9  00F6               	movwf	___lldiv@dividend
  2347  01CA  3186  2606  3180   	fcall	___lldiv
  2348  01CD  0875               	movf	?___lldiv+3,w
  2349  01CE  0020               	movlb	0	; select bank0
  2350  01CF  00CE               	movwf	xvprintf@v+3
  2351  01D0  0874               	movf	?___lldiv+2,w
  2352  01D1  00CD               	movwf	xvprintf@v+2
  2353  01D2  0873               	movf	?___lldiv+1,w
  2354  01D3  00CC               	movwf	xvprintf@v+1
  2355  01D4  0872               	movf	?___lldiv,w
  2356  01D5  00CB               	movwf	xvprintf@v
  2357                           
  2358                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  2359  01D6  300A               	movlw	10
  2360  01D7  0253               	subwf	xvprintf@d,w
  2361  01D8  1C03               	skipc
  2362  01D9  29E8               	goto	l3140
  2363  01DA  3078               	movlw	120
  2364  01DB  0654               	xorwf	xvprintf@c,w
  2365  01DC  1903               	btfsc	3,2
  2366  01DD  29E0               	goto	l3136
  2367  01DE  3007               	movlw	7
  2368  01DF  29E1               	goto	L4
  2369  01E0                     l3136:	
  2370  01E0  3027               	movlw	39
  2371  01E1                     L4:	
  2372  01E1  00C0               	movwf	_xvprintf$198
  2373  01E2  3000               	movlw	0
  2374  01E3  00C1               	movwf	_xvprintf$198+1
  2375  01E4  0840               	movf	_xvprintf$198,w
  2376  01E5  00A8               	movwf	??_xvprintf
  2377  01E6  0828               	movf	??_xvprintf,w
  2378  01E7  07D3               	addwf	xvprintf@d,f
  2379  01E8                     l3140:	
  2380                           
  2381                           ;xprintf.c: 154: s[i++] = d + '0';
  2382  01E8  0853               	movf	xvprintf@d,w
  2383  01E9  3E30               	addlw	48
  2384  01EA  00A8               	movwf	??_xvprintf
  2385  01EB  0851               	movf	xvprintf@i,w
  2386  01EC  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  2387  01ED  0086               	movwf	6
  2388  01EE  0187               	clrf	7
  2389  01EF  0828               	movf	??_xvprintf,w
  2390  01F0  0081               	movwf	1
  2391  01F1  3001               	movlw	1
  2392  01F2  07D1               	addwf	xvprintf@i,f
  2393  01F3  3000               	movlw	0
  2394  01F4  3DD2               	addwfc	xvprintf@i+1,f
  2395                           
  2396                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  2397  01F5  084E               	movf	xvprintf@v+3,w
  2398  01F6  044D               	iorwf	xvprintf@v+2,w
  2399  01F7  044C               	iorwf	xvprintf@v+1,w
  2400  01F8  044B               	iorwf	xvprintf@v,w
  2401  01F9  1903               	skipnz
  2402  01FA  2A02               	goto	l177
  2403  01FB  3000               	movlw	0
  2404  01FC  0252               	subwf	xvprintf@i+1,w
  2405  01FD  3010               	movlw	16
  2406  01FE  1903               	skipnz
  2407  01FF  0251               	subwf	xvprintf@i,w
  2408  0200  1C03               	skipc
  2409  0201  29A6               	goto	l3126
  2410  0202                     l177:	
  2411                           
  2412                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  2413  0202  1DCF               	btfss	xvprintf@f,3
  2414  0203  2A10               	goto	l3152
  2415  0204  302D               	movlw	45
  2416  0205  00A8               	movwf	??_xvprintf
  2417  0206  0851               	movf	xvprintf@i,w
  2418  0207  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  2419  0208  0086               	movwf	6
  2420  0209  0187               	clrf	7
  2421  020A  0828               	movf	??_xvprintf,w
  2422  020B  0081               	movwf	1
  2423  020C  3001               	movlw	1
  2424  020D  07D1               	addwf	xvprintf@i,f
  2425  020E  3000               	movlw	0
  2426  020F  3DD2               	addwfc	xvprintf@i+1,f
  2427  0210                     l3152:	
  2428                           
  2429                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  2430  0210  0852               	movf	xvprintf@i+1,w
  2431  0211  00CA               	movwf	xvprintf@j+1
  2432  0212  0851               	movf	xvprintf@i,w
  2433  0213  00C9               	movwf	xvprintf@j
  2434  0214  184F               	btfsc	xvprintf@f,0
  2435  0215  2A18               	goto	l3158
  2436  0216  3020               	movlw	32
  2437  0217  2A19               	goto	L5
  2438  0218                     l3158:	
  2439  0218  3030               	movlw	48
  2440  0219                     L5:	
  2441  0219  00C2               	movwf	_xvprintf$199
  2442  021A  3000               	movlw	0
  2443  021B  00C3               	movwf	_xvprintf$199+1
  2444  021C  0842               	movf	_xvprintf$199,w
  2445  021D  00A8               	movwf	??_xvprintf
  2446  021E  0828               	movf	??_xvprintf,w
  2447  021F  00D3               	movwf	xvprintf@d
  2448                           
  2449                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  2450  0220  2A25               	goto	l3162
  2451  0221                     l3160:	
  2452  0221  0853               	movf	xvprintf@d,w
  2453  0222  3187  2746  3180   	fcall	_xputc
  2454  0225                     l3162:	
  2455  0225  0020               	movlb	0	; select bank0
  2456  0226  18CF               	btfsc	xvprintf@f,1
  2457  0227  2A37               	goto	l3166
  2458  0228  084A               	movf	xvprintf@j+1,w
  2459  0229  00A9               	movwf	??_xvprintf+1
  2460  022A  0849               	movf	xvprintf@j,w
  2461  022B  00A8               	movwf	??_xvprintf
  2462  022C  0AC9               	incf	xvprintf@j,f
  2463  022D  1903               	skipnz
  2464  022E  0ACA               	incf	xvprintf@j+1,f
  2465  022F  0848               	movf	xvprintf@w+1,w
  2466  0230  0229               	subwf	??_xvprintf+1,w
  2467  0231  1D03               	skipz
  2468  0232  2A35               	goto	u3365
  2469  0233  0847               	movf	xvprintf@w,w
  2470  0234  0228               	subwf	??_xvprintf,w
  2471  0235                     u3365:	
  2472  0235  1C03               	skipc
  2473  0236  2A21               	goto	l3160
  2474  0237                     l3166:	
  2475                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  2476                           
  2477  0237  3001               	movlw	1
  2478  0238  02D1               	subwf	xvprintf@i,f
  2479  0239  3000               	movlw	0
  2480  023A  3BD2               	subwfb	xvprintf@i+1,f
  2481  023B  0851               	movf	xvprintf@i,w
  2482  023C  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  2483  023D  0086               	movwf	6
  2484  023E  0187               	clrf	7
  2485  023F  0801               	movf	1,w
  2486  0240  3187  2746  3180   	fcall	_xputc
  2487  0243  0020               	movlb	0	; select bank0
  2488  0244  0851               	movf	xvprintf@i,w
  2489  0245  0452               	iorwf	xvprintf@i+1,w
  2490  0246  1903               	btfsc	3,2
  2491  0247  2A4D               	goto	l3172
  2492  0248  2A37               	goto	l3166
  2493  0249                     l3170:	
  2494                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  2495                           
  2496  0249  3020               	movlw	32
  2497  024A  3187  2746  3180   	fcall	_xputc
  2498  024D                     l3172:	
  2499  024D  0020               	movlb	0	; select bank0
  2500  024E  084A               	movf	xvprintf@j+1,w
  2501  024F  00A9               	movwf	??_xvprintf+1
  2502  0250  0849               	movf	xvprintf@j,w
  2503  0251  00A8               	movwf	??_xvprintf
  2504  0252  0AC9               	incf	xvprintf@j,f
  2505  0253  1903               	skipnz
  2506  0254  0ACA               	incf	xvprintf@j+1,f
  2507  0255  0848               	movf	xvprintf@w+1,w
  2508  0256  0229               	subwf	??_xvprintf+1,w
  2509  0257  1D03               	skipz
  2510  0258  2A5B               	goto	u3385
  2511  0259  0847               	movf	xvprintf@w,w
  2512  025A  0228               	subwf	??_xvprintf,w
  2513  025B                     u3385:	
  2514  025B  1803               	btfsc	3,0
  2515  025C  2834               	goto	l121
  2516  025D  2A49               	goto	l3170
  2517  025E                     __end_of_xvprintf:	
  2518                           ;xprintf.c: 161: }
  2519                           
  2520                           
  2521                           	psect	text3
  2522  0FA8                     __ptext3:	
  2523 ;; *************** function _xputs *****************
  2524 ;; Defined at:
  2525 ;;		line 44 in file "xprintf.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  str             1    wreg     PTR const unsigned char 
  2528 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  str             1    9[COMMON] PTR const unsigned char 
  2531 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2541 ;;      Params:         0       0       0       0       0       0
  2542 ;;      Locals:         1       0       0       0       0       0
  2543 ;;      Temps:          1       0       0       0       0       0
  2544 ;;      Totals:         2       0       0       0       0       0
  2545 ;;Total ram usage:        2 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    6
  2548 ;; This function calls:
  2549 ;;		_xputc
  2550 ;; This function is called by:
  2551 ;;		_xvprintf
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           
  2556                           ;psect for function _xputs
  2557  0FA8                     _xputs:	
  2558                           
  2559                           ;incstack = 0
  2560                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2561                           ;xputs@str stored from wreg
  2562  0FA8  00F9               	movwf	xputs@str
  2563  0FA9                     l2104:	
  2564                           ;xprintf.c: 48: while (*str)
  2565                           
  2566  0FA9  0879               	movf	xputs@str,w
  2567  0FAA  0086               	movwf	6
  2568  0FAB  0187               	clrf	7
  2569  0FAC  0801               	movf	1,w
  2570  0FAD  1903               	btfsc	3,2
  2571  0FAE  0008               	return
  2572                           
  2573                           ;xprintf.c: 49: xputc(*str++);
  2574  0FAF  0879               	movf	xputs@str,w
  2575  0FB0  0086               	movwf	6
  2576  0FB1  0187               	clrf	7
  2577  0FB2  0801               	movf	1,w
  2578  0FB3  3187  2746  318F   	fcall	_xputc
  2579  0FB6  3001               	movlw	1
  2580  0FB7  00F8               	movwf	??_xputs
  2581  0FB8  0878               	movf	??_xputs,w
  2582  0FB9  07F9               	addwf	xputs@str,f
  2583  0FBA  2FA9               	goto	l2104
  2584  0FBB                     __end_of_xputs:	
  2585                           
  2586                           	psect	text4
  2587  0746                     __ptext4:	
  2588 ;; *************** function _xputc *****************
  2589 ;; Defined at:
  2590 ;;		line 26 in file "xprintf.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  c               1    wreg     unsigned char 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  c               1    7[COMMON] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2604 ;;      Params:         0       0       0       0       0       0
  2605 ;;      Locals:         1       0       0       0       0       0
  2606 ;;      Temps:          1       0       0       0       0       0
  2607 ;;      Totals:         2       0       0       0       0       0
  2608 ;;Total ram usage:        2 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    5
  2611 ;; This function calls:
  2612 ;;		Absolute function
  2613 ;;		_LCD_Put
  2614 ;; This function is called by:
  2615 ;;		_xputs
  2616 ;;		_xvprintf
  2617 ;;		_xfputs
  2618 ;;		_put_dump
  2619 ;;		_xgets
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _xputc
  2625  0746                     _xputc:	
  2626                           
  2627                           ;incstack = 0
  2628                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2629                           ;xputc@c stored from wreg
  2630  0746  00F7               	movwf	xputc@c
  2631  0747  300A               	movlw	10
  2632  0748  0677               	xorwf	xputc@c,w
  2633  0749  1D03               	btfss	3,2
  2634  074A  2F55               	goto	l2086
  2635  074B  3019               	movlw	(low (STR_2| (0+32768)))& (0+255)
  2636  074C  00F6               	movwf	??_xputc
  2637  074D  0876               	movf	??_xputc,w
  2638  074E  00F5               	movwf	LCD_Put@word
  2639  074F  0020               	movlb	0	; select bank0
  2640  0750  086C               	movf	_xfunc_out+1,w
  2641  0751  008A               	movwf	10
  2642  0752  086B               	movf	_xfunc_out,w
  2643  0753  000A               	callw
  2644  0754  3187               	pagesel	$
  2645  0755                     l2086:	
  2646                           
  2647                           ;xprintf.c: 30: if (outptr) {
  2648  0755  087B               	movf	_outptr,w
  2649  0756  1903               	btfsc	3,2
  2650  0757  2F64               	goto	l2094
  2651                           
  2652                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  2653  0758  0877               	movf	xputc@c,w
  2654  0759  00F6               	movwf	??_xputc
  2655  075A  087B               	movf	_outptr,w
  2656  075B  0086               	movwf	6
  2657  075C  0187               	clrf	7
  2658  075D  0876               	movf	??_xputc,w
  2659  075E  0081               	movwf	1
  2660  075F  3001               	movlw	1
  2661  0760  00F6               	movwf	??_xputc
  2662  0761  0876               	movf	??_xputc,w
  2663  0762  07FB               	addwf	_outptr,f
  2664                           
  2665                           ;xprintf.c: 32: return;
  2666  0763  0008               	return
  2667  0764                     l2094:	
  2668                           
  2669                           ;xprintf.c: 33: }
  2670                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  2671  0764  0020               	movlb	0	; select bank0
  2672  0765  086B               	movf	_xfunc_out,w
  2673  0766  046C               	iorwf	_xfunc_out+1,w
  2674  0767  1903               	btfsc	3,2
  2675  0768  0008               	return
  2676  0769  0877               	movf	xputc@c,w
  2677  076A  00F6               	movwf	??_xputc
  2678  076B  0876               	movf	??_xputc,w
  2679  076C  00F5               	movwf	LCD_Put@word
  2680  076D  086C               	movf	_xfunc_out+1,w
  2681  076E  008A               	movwf	10
  2682  076F  086B               	movf	_xfunc_out,w
  2683  0770  000A               	callw
  2684  0771  3187               	pagesel	$
  2685  0772  0008               	return
  2686  0773                     __end_of_xputc:	
  2687                           
  2688                           	psect	text5
  2689  0F67                     __ptext5:	
  2690 ;; *************** function _LCD_Put *****************
  2691 ;; Defined at:
  2692 ;;		line 54 in file "LCD.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  word            1    5[COMMON] char 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0, pclath, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2706 ;;      Params:         1       0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0
  2709 ;;      Totals:         1       0       0       0       0       0
  2710 ;;Total ram usage:        1 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    4
  2713 ;; This function calls:
  2714 ;;		_LCD_WriteData
  2715 ;; This function is called by:
  2716 ;;		_main
  2717 ;;		_xputc
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           
  2722                           ;psect for function _LCD_Put
  2723  0F67                     _LCD_Put:	
  2724                           
  2725                           ;LCD.c: 56: RA4 = 1;
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  2729  0F67  0020               	movlb	0	; select bank0
  2730  0F68  160C               	bsf	12,4	;volatile
  2731                           
  2732                           ;LCD.c: 57: LCD_WriteData(word);
  2733  0F69  0875               	movf	LCD_Put@word,w
  2734  0F6A  3186  269C         	fcall	_LCD_WriteData
  2735  0F6C  0008               	return
  2736  0F6D                     __end_of_LCD_Put:	
  2737                           
  2738                           	psect	text6
  2739  0FE5                     __ptext6:	
  2740 ;; *************** function ___wmul *****************
  2741 ;; Defined at:
  2742 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  multiplier      2    2[COMMON] unsigned int 
  2745 ;;  multiplicand    2    4[COMMON] unsigned int 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  product         2    6[COMMON] unsigned int 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  2    2[COMMON] unsigned int 
  2750 ;; Registers used:
  2751 ;;		wreg, status,2, status,0
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2757 ;;      Params:         4       0       0       0       0       0
  2758 ;;      Locals:         2       0       0       0       0       0
  2759 ;;      Temps:          0       0       0       0       0       0
  2760 ;;      Totals:         6       0       0       0       0       0
  2761 ;;Total ram usage:        6 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    3
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_xvprintf
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           
  2772                           ;psect for function ___wmul
  2773  0FE5                     ___wmul:	
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2777  0FE5  01F6               	clrf	___wmul@product
  2778  0FE6  01F7               	clrf	___wmul@product+1
  2779  0FE7                     l2112:	
  2780  0FE7  1C72               	btfss	___wmul@multiplier,0
  2781  0FE8  2FED               	goto	l680
  2782  0FE9  0874               	movf	___wmul@multiplicand,w
  2783  0FEA  07F6               	addwf	___wmul@product,f
  2784  0FEB  0875               	movf	___wmul@multiplicand+1,w
  2785  0FEC  3DF7               	addwfc	___wmul@product+1,f
  2786  0FED                     l680:	
  2787  0FED  3001               	movlw	1
  2788  0FEE                     u1665:	
  2789  0FEE  35F4               	lslf	___wmul@multiplicand,f
  2790  0FEF  0DF5               	rlf	___wmul@multiplicand+1,f
  2791  0FF0  0B89               	decfsz	9,f
  2792  0FF1  2FEE               	goto	u1665
  2793  0FF2  3001               	movlw	1
  2794  0FF3                     u1675:	
  2795  0FF3  36F3               	lsrf	___wmul@multiplier+1,f
  2796  0FF4  0CF2               	rrf	___wmul@multiplier,f
  2797  0FF5  0B89               	decfsz	9,f
  2798  0FF6  2FF3               	goto	u1675
  2799  0FF7  0872               	movf	___wmul@multiplier,w
  2800  0FF8  0473               	iorwf	___wmul@multiplier+1,w
  2801  0FF9  1D03               	btfss	3,2
  2802  0FFA  2FE7               	goto	l2112
  2803  0FFB  0877               	movf	___wmul@product+1,w
  2804  0FFC  00F3               	movwf	?___wmul+1
  2805  0FFD  0876               	movf	___wmul@product,w
  2806  0FFE  00F2               	movwf	?___wmul
  2807  0FFF  0008               	return
  2808  1000                     __end_of___wmul:	
  2809                           
  2810                           	psect	text7
  2811  0659                     __ptext7:	
  2812 ;; *************** function ___llmod *****************
  2813 ;; Defined at:
  2814 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  divisor         4    2[COMMON] unsigned long 
  2817 ;;  dividend        4    6[COMMON] unsigned long 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  counter         1    0[BANK0 ] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  4    2[COMMON] unsigned long 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2829 ;;      Params:         8       0       0       0       0       0
  2830 ;;      Locals:         0       1       0       0       0       0
  2831 ;;      Temps:          1       0       0       0       0       0
  2832 ;;      Totals:         9       1       0       0       0       0
  2833 ;;Total ram usage:       10 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    3
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_xvprintf
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function ___llmod
  2845  0659                     ___llmod:	
  2846                           
  2847                           ;incstack = 0
  2848                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2849  0659  0875               	movf	___llmod@divisor+3,w
  2850  065A  0474               	iorwf	___llmod@divisor+2,w
  2851  065B  0473               	iorwf	___llmod@divisor+1,w
  2852  065C  0472               	iorwf	___llmod@divisor,w
  2853  065D  1903               	skipnz
  2854  065E  2E93               	goto	l3006
  2855  065F  0020               	movlb	0	; select bank0
  2856  0660  01A0               	clrf	___llmod@counter
  2857  0661  0AA0               	incf	___llmod@counter,f
  2858  0662                     l2996:	
  2859  0662  1BF5               	btfsc	___llmod@divisor+3,7
  2860  0663  2E70               	goto	l2998
  2861  0664  3001               	movlw	1
  2862  0665                     u3065:	
  2863  0665  35F2               	lslf	___llmod@divisor,f
  2864  0666  0DF3               	rlf	___llmod@divisor+1,f
  2865  0667  0DF4               	rlf	___llmod@divisor+2,f
  2866  0668  0DF5               	rlf	___llmod@divisor+3,f
  2867  0669  0B89               	decfsz	9,f
  2868  066A  2E65               	goto	u3065
  2869  066B  3001               	movlw	1
  2870  066C  00FA               	movwf	??___llmod
  2871  066D  087A               	movf	??___llmod,w
  2872  066E  07A0               	addwf	___llmod@counter,f
  2873  066F  2E62               	goto	l2996
  2874  0670                     l2998:	
  2875  0670  0875               	movf	___llmod@divisor+3,w
  2876  0671  0279               	subwf	___llmod@dividend+3,w
  2877  0672  1D03               	skipz
  2878  0673  2E7E               	goto	u3085
  2879  0674  0874               	movf	___llmod@divisor+2,w
  2880  0675  0278               	subwf	___llmod@dividend+2,w
  2881  0676  1D03               	skipz
  2882  0677  2E7E               	goto	u3085
  2883  0678  0873               	movf	___llmod@divisor+1,w
  2884  0679  0277               	subwf	___llmod@dividend+1,w
  2885  067A  1D03               	skipz
  2886  067B  2E7E               	goto	u3085
  2887  067C  0872               	movf	___llmod@divisor,w
  2888  067D  0276               	subwf	___llmod@dividend,w
  2889  067E                     u3085:	
  2890  067E  1C03               	skipc
  2891  067F  2E88               	goto	l3002
  2892  0680  0872               	movf	___llmod@divisor,w
  2893  0681  02F6               	subwf	___llmod@dividend,f
  2894  0682  0873               	movf	___llmod@divisor+1,w
  2895  0683  3BF7               	subwfb	___llmod@dividend+1,f
  2896  0684  0874               	movf	___llmod@divisor+2,w
  2897  0685  3BF8               	subwfb	___llmod@dividend+2,f
  2898  0686  0875               	movf	___llmod@divisor+3,w
  2899  0687  3BF9               	subwfb	___llmod@dividend+3,f
  2900  0688                     l3002:	
  2901  0688  3001               	movlw	1
  2902  0689                     u3095:	
  2903  0689  36F5               	lsrf	___llmod@divisor+3,f
  2904  068A  0CF4               	rrf	___llmod@divisor+2,f
  2905  068B  0CF3               	rrf	___llmod@divisor+1,f
  2906  068C  0CF2               	rrf	___llmod@divisor,f
  2907  068D  0B89               	decfsz	9,f
  2908  068E  2E89               	goto	u3095
  2909  068F  3001               	movlw	1
  2910  0690  02A0               	subwf	___llmod@counter,f
  2911  0691  1D03               	btfss	3,2
  2912  0692  2E70               	goto	l2998
  2913  0693                     l3006:	
  2914  0693  0879               	movf	___llmod@dividend+3,w
  2915  0694  00F5               	movwf	?___llmod+3
  2916  0695  0878               	movf	___llmod@dividend+2,w
  2917  0696  00F4               	movwf	?___llmod+2
  2918  0697  0877               	movf	___llmod@dividend+1,w
  2919  0698  00F3               	movwf	?___llmod+1
  2920  0699  0876               	movf	___llmod@dividend,w
  2921  069A  00F2               	movwf	?___llmod
  2922  069B  0008               	return
  2923  069C                     __end_of___llmod:	
  2924                           
  2925                           	psect	text8
  2926  0606                     __ptext8:	
  2927 ;; *************** function ___lldiv *****************
  2928 ;; Defined at:
  2929 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  divisor         4    2[COMMON] unsigned long 
  2932 ;;  dividend        4    6[COMMON] unsigned long 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  quotient        4    0[BANK0 ] unsigned long 
  2935 ;;  counter         1    4[BANK0 ] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  4    2[COMMON] unsigned long 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2945 ;;      Params:         8       0       0       0       0       0
  2946 ;;      Locals:         0       5       0       0       0       0
  2947 ;;      Temps:          1       0       0       0       0       0
  2948 ;;      Totals:         9       5       0       0       0       0
  2949 ;;Total ram usage:       14 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    3
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_xvprintf
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function ___lldiv
  2961  0606                     ___lldiv:	
  2962                           
  2963                           ;incstack = 0
  2964                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2965  0606  3000               	movlw	0
  2966  0607  0020               	movlb	0	; select bank0
  2967  0608  00A3               	movwf	___lldiv@quotient+3
  2968  0609  3000               	movlw	0
  2969  060A  00A2               	movwf	___lldiv@quotient+2
  2970  060B  3000               	movlw	0
  2971  060C  00A1               	movwf	___lldiv@quotient+1
  2972  060D  3000               	movlw	0
  2973  060E  00A0               	movwf	___lldiv@quotient
  2974  060F  0875               	movf	___lldiv@divisor+3,w
  2975  0610  0474               	iorwf	___lldiv@divisor+2,w
  2976  0611  0473               	iorwf	___lldiv@divisor+1,w
  2977  0612  0472               	iorwf	___lldiv@divisor,w
  2978  0613  1903               	skipnz
  2979  0614  2E50               	goto	l2144
  2980  0615  01A4               	clrf	___lldiv@counter
  2981  0616  0AA4               	incf	___lldiv@counter,f
  2982  0617                     l2130:	
  2983  0617  1BF5               	btfsc	___lldiv@divisor+3,7
  2984  0618  2E25               	goto	l2132
  2985  0619  3001               	movlw	1
  2986  061A                     u1705:	
  2987  061A  35F2               	lslf	___lldiv@divisor,f
  2988  061B  0DF3               	rlf	___lldiv@divisor+1,f
  2989  061C  0DF4               	rlf	___lldiv@divisor+2,f
  2990  061D  0DF5               	rlf	___lldiv@divisor+3,f
  2991  061E  0B89               	decfsz	9,f
  2992  061F  2E1A               	goto	u1705
  2993  0620  3001               	movlw	1
  2994  0621  00FA               	movwf	??___lldiv
  2995  0622  087A               	movf	??___lldiv,w
  2996  0623  07A4               	addwf	___lldiv@counter,f
  2997  0624  2E17               	goto	l2130
  2998  0625                     l2132:	
  2999  0625  3001               	movlw	1
  3000  0626                     u1725:	
  3001  0626  35A0               	lslf	___lldiv@quotient,f
  3002  0627  0DA1               	rlf	___lldiv@quotient+1,f
  3003  0628  0DA2               	rlf	___lldiv@quotient+2,f
  3004  0629  0DA3               	rlf	___lldiv@quotient+3,f
  3005  062A  0B89               	decfsz	9,f
  3006  062B  2E26               	goto	u1725
  3007  062C  0875               	movf	___lldiv@divisor+3,w
  3008  062D  0279               	subwf	___lldiv@dividend+3,w
  3009  062E  1D03               	skipz
  3010  062F  2E3A               	goto	u1735
  3011  0630  0874               	movf	___lldiv@divisor+2,w
  3012  0631  0278               	subwf	___lldiv@dividend+2,w
  3013  0632  1D03               	skipz
  3014  0633  2E3A               	goto	u1735
  3015  0634  0873               	movf	___lldiv@divisor+1,w
  3016  0635  0277               	subwf	___lldiv@dividend+1,w
  3017  0636  1D03               	skipz
  3018  0637  2E3A               	goto	u1735
  3019  0638  0872               	movf	___lldiv@divisor,w
  3020  0639  0276               	subwf	___lldiv@dividend,w
  3021  063A                     u1735:	
  3022  063A  1C03               	skipc
  3023  063B  2E45               	goto	l2140
  3024  063C  0872               	movf	___lldiv@divisor,w
  3025  063D  02F6               	subwf	___lldiv@dividend,f
  3026  063E  0873               	movf	___lldiv@divisor+1,w
  3027  063F  3BF7               	subwfb	___lldiv@dividend+1,f
  3028  0640  0874               	movf	___lldiv@divisor+2,w
  3029  0641  3BF8               	subwfb	___lldiv@dividend+2,f
  3030  0642  0875               	movf	___lldiv@divisor+3,w
  3031  0643  3BF9               	subwfb	___lldiv@dividend+3,f
  3032  0644  1420               	bsf	___lldiv@quotient,0
  3033  0645                     l2140:	
  3034  0645  3001               	movlw	1
  3035  0646                     u1745:	
  3036  0646  36F5               	lsrf	___lldiv@divisor+3,f
  3037  0647  0CF4               	rrf	___lldiv@divisor+2,f
  3038  0648  0CF3               	rrf	___lldiv@divisor+1,f
  3039  0649  0CF2               	rrf	___lldiv@divisor,f
  3040  064A  0B89               	decfsz	9,f
  3041  064B  2E46               	goto	u1745
  3042  064C  3001               	movlw	1
  3043  064D  02A4               	subwf	___lldiv@counter,f
  3044  064E  1D03               	btfss	3,2
  3045  064F  2E25               	goto	l2132
  3046  0650                     l2144:	
  3047  0650  0823               	movf	___lldiv@quotient+3,w
  3048  0651  00F5               	movwf	?___lldiv+3
  3049  0652  0822               	movf	___lldiv@quotient+2,w
  3050  0653  00F4               	movwf	?___lldiv+2
  3051  0654  0821               	movf	___lldiv@quotient+1,w
  3052  0655  00F3               	movwf	?___lldiv+1
  3053  0656  0820               	movf	___lldiv@quotient,w
  3054  0657  00F2               	movwf	?___lldiv
  3055  0658  0008               	return
  3056  0659                     __end_of___lldiv:	
  3057                           
  3058                           	psect	text9
  3059  04F5                     __ptext9:	
  3060 ;; *************** function _LCD_Init *****************
  3061 ;; Defined at:
  3062 ;;		line 28 in file "LCD.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0, pclath, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3076 ;;      Params:         0       0       0       0       0       0
  3077 ;;      Locals:         0       0       0       0       0       0
  3078 ;;      Temps:          2       0       0       0       0       0
  3079 ;;      Totals:         2       0       0       0       0       0
  3080 ;;Total ram usage:        2 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    5
  3083 ;; This function calls:
  3084 ;;		_LCD_DisplayClear
  3085 ;;		_LCD_WriteData
  3086 ;; This function is called by:
  3087 ;;		_main
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function _LCD_Init
  3093  04F5                     _LCD_Init:	
  3094                           
  3095                           ;LCD.c: 30: RA4 = 0;
  3096                           
  3097                           ;incstack = 0
  3098                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3099  04F5  0020               	movlb	0	; select bank0
  3100  04F6  120C               	bcf	12,4	;volatile
  3101                           
  3102                           ;LCD.c: 31: RA3 = 0;
  3103  04F7  118C               	bcf	12,3	;volatile
  3104                           
  3105                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  3106  04F8  3002               	movlw	2
  3107  04F9  00F7               	movwf	??_LCD_Init+1
  3108  04FA  3038               	movlw	56
  3109  04FB  00F6               	movwf	??_LCD_Init
  3110  04FC  30AD               	movlw	173
  3111  04FD                     u3997:	
  3112  04FD  0B89               	decfsz	9,f
  3113  04FE  2CFD               	goto	u3997
  3114  04FF  0BF6               	decfsz	??_LCD_Init,f
  3115  0500  2CFD               	goto	u3997
  3116  0501  0BF7               	decfsz	??_LCD_Init+1,f
  3117  0502  2CFD               	goto	u3997
  3118  0503  0000               	nop
  3119                           
  3120                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  3121  0504  3003               	movlw	3
  3122  0505  0020               	movlb	0	; select bank0
  3123  0506  008D               	movwf	13	;volatile
  3124                           
  3125                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3126  0507  158C               	bsf	12,3	;volatile
  3127  0508  3200               	nop2	;2 cycle nop
  3128  0509  3200               	nop2	;2 cycle nop
  3129  050A  3200               	nop2	;2 cycle nop
  3130  050B  3200               	nop2	;2 cycle nop
  3131  050C  0020               	movlb	0	; select bank0
  3132  050D  118C               	bcf	12,3	;volatile
  3133  050E  3200               	nop2	;2 cycle nop
  3134  050F  3200               	nop2	;2 cycle nop
  3135  0510  3200               	nop2	;2 cycle nop
  3136  0511  3200               	nop2	;2 cycle nop
  3137                           
  3138                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  3139  0512  3034               	movlw	52
  3140  0513  00F6               	movwf	??_LCD_Init
  3141  0514  30F2               	movlw	242
  3142  0515                     u4007:	
  3143  0515  0B89               	decfsz	9,f
  3144  0516  2D15               	goto	u4007
  3145  0517  0BF6               	decfsz	??_LCD_Init,f
  3146  0518  2D15               	goto	u4007
  3147                           
  3148                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3149  0519  0020               	movlb	0	; select bank0
  3150  051A  158C               	bsf	12,3	;volatile
  3151  051B  3200               	nop2	;2 cycle nop
  3152  051C  3200               	nop2	;2 cycle nop
  3153  051D  3200               	nop2	;2 cycle nop
  3154  051E  3200               	nop2	;2 cycle nop
  3155  051F  0020               	movlb	0	; select bank0
  3156  0520  118C               	bcf	12,3	;volatile
  3157  0521  3200               	nop2	;2 cycle nop
  3158  0522  3200               	nop2	;2 cycle nop
  3159  0523  3200               	nop2	;2 cycle nop
  3160  0524  3200               	nop2	;2 cycle nop
  3161                           
  3162                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  3163  0525  3005               	movlw	5
  3164  0526  00F6               	movwf	??_LCD_Init
  3165  0527  3026               	movlw	38
  3166  0528                     u4017:	
  3167  0528  0B89               	decfsz	9,f
  3168  0529  2D28               	goto	u4017
  3169  052A  0BF6               	decfsz	??_LCD_Init,f
  3170  052B  2D28               	goto	u4017
  3171  052C  3200               	nop2
  3172                           
  3173                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3174  052D  0020               	movlb	0	; select bank0
  3175  052E  158C               	bsf	12,3	;volatile
  3176  052F  3200               	nop2	;2 cycle nop
  3177  0530  3200               	nop2	;2 cycle nop
  3178  0531  3200               	nop2	;2 cycle nop
  3179  0532  3200               	nop2	;2 cycle nop
  3180  0533  0020               	movlb	0	; select bank0
  3181  0534  118C               	bcf	12,3	;volatile
  3182  0535  3200               	nop2	;2 cycle nop
  3183  0536  3200               	nop2	;2 cycle nop
  3184  0537  3200               	nop2	;2 cycle nop
  3185  0538  3200               	nop2	;2 cycle nop
  3186                           
  3187                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  3188  0539  3005               	movlw	5
  3189  053A  00F6               	movwf	??_LCD_Init
  3190  053B  3026               	movlw	38
  3191  053C                     u4027:	
  3192  053C  0B89               	decfsz	9,f
  3193  053D  2D3C               	goto	u4027
  3194  053E  0BF6               	decfsz	??_LCD_Init,f
  3195  053F  2D3C               	goto	u4027
  3196  0540  3200               	nop2
  3197                           
  3198                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  3199  0541  3002               	movlw	2
  3200  0542  0020               	movlb	0	; select bank0
  3201  0543  008D               	movwf	13	;volatile
  3202                           
  3203                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3204  0544  158C               	bsf	12,3	;volatile
  3205  0545  3200               	nop2	;2 cycle nop
  3206  0546  3200               	nop2	;2 cycle nop
  3207  0547  3200               	nop2	;2 cycle nop
  3208  0548  3200               	nop2	;2 cycle nop
  3209  0549  0020               	movlb	0	; select bank0
  3210  054A  118C               	bcf	12,3	;volatile
  3211  054B  3200               	nop2	;2 cycle nop
  3212  054C  3200               	nop2	;2 cycle nop
  3213  054D  3200               	nop2	;2 cycle nop
  3214  054E  3200               	nop2	;2 cycle nop
  3215                           
  3216                           ;LCD.c: 44: LCD_WriteData(0x28);
  3217  054F  3028               	movlw	40
  3218  0550  3186  269C  3184   	fcall	_LCD_WriteData
  3219                           
  3220                           ;LCD.c: 45: LCD_WriteData(0x0c);
  3221  0553  300C               	movlw	12
  3222  0554  3186  269C  3184   	fcall	_LCD_WriteData
  3223                           
  3224                           ;LCD.c: 46: LCD_DisplayClear();
  3225  0557  318F  2789  3184   	fcall	_LCD_DisplayClear
  3226                           
  3227                           ;LCD.c: 47: LCD_WriteData(0x06);
  3228  055A  3006               	movlw	6
  3229  055B  3186  269C         	fcall	_LCD_WriteData
  3230  055D  0008               	return
  3231  055E                     __end_of_LCD_Init:	
  3232                           
  3233                           	psect	text10
  3234  0F89                     __ptext10:	
  3235 ;; *************** function _LCD_DisplayClear *****************
  3236 ;; Defined at:
  3237 ;;		line 64 in file "LCD.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;		None
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, pclath, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3251 ;;      Params:         0       0       0       0       0       0
  3252 ;;      Locals:         0       0       0       0       0       0
  3253 ;;      Temps:          1       0       0       0       0       0
  3254 ;;      Totals:         1       0       0       0       0       0
  3255 ;;Total ram usage:        1 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    4
  3258 ;; This function calls:
  3259 ;;		_LCD_WriteData
  3260 ;; This function is called by:
  3261 ;;		_LCD_Init
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           
  3266                           ;psect for function _LCD_DisplayClear
  3267  0F89                     _LCD_DisplayClear:	
  3268                           
  3269                           ;LCD.c: 66: RA4 = 0;
  3270                           
  3271                           ;incstack = 0
  3272                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  3273  0F89  0020               	movlb	0	; select bank0
  3274  0F8A  120C               	bcf	12,4	;volatile
  3275                           
  3276                           ;LCD.c: 67: LCD_WriteData(0x01);
  3277  0F8B  3001               	movlw	1
  3278  0F8C  3186  269C  318F   	fcall	_LCD_WriteData
  3279                           
  3280                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  3281  0F8F  3015               	movlw	21
  3282  0F90  00F5               	movwf	??_LCD_DisplayClear
  3283  0F91  30C6               	movlw	198
  3284  0F92                     u4037:	
  3285  0F92  0B89               	decfsz	9,f
  3286  0F93  2F92               	goto	u4037
  3287  0F94  0BF5               	decfsz	??_LCD_DisplayClear,f
  3288  0F95  2F92               	goto	u4037
  3289  0F96  3200               	nop2
  3290  0F97  0008               	return
  3291  0F98                     __end_of_LCD_DisplayClear:	
  3292                           
  3293                           	psect	text11
  3294  0FD0                     __ptext11:	
  3295 ;; *************** function _LCD_CursorPosition *****************
  3296 ;; Defined at:
  3297 ;;		line 86 in file "LCD.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  tx              1    wreg     unsigned char 
  3300 ;;  ty              1    5[COMMON] unsigned char 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  tx              1    7[COMMON] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0, pclath, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3312 ;;      Params:         1       0       0       0       0       0
  3313 ;;      Locals:         1       0       0       0       0       0
  3314 ;;      Temps:          1       0       0       0       0       0
  3315 ;;      Totals:         3       0       0       0       0       0
  3316 ;;Total ram usage:        3 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; Hardware stack levels required when called:    4
  3319 ;; This function calls:
  3320 ;;		_LCD_WriteData
  3321 ;; This function is called by:
  3322 ;;		_main
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           
  3327                           ;psect for function _LCD_CursorPosition
  3328  0FD0                     _LCD_CursorPosition:	
  3329                           
  3330                           ;incstack = 0
  3331                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  3332                           ;LCD_CursorPosition@tx stored from wreg
  3333  0FD0  00F7               	movwf	LCD_CursorPosition@tx
  3334                           
  3335                           ;LCD.c: 88: RA4 = 0;
  3336  0FD1  0020               	movlb	0	; select bank0
  3337  0FD2  120C               	bcf	12,4	;volatile
  3338                           
  3339                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  3340  0FD3  0875               	movf	LCD_CursorPosition@ty,w
  3341  0FD4  00F6               	movwf	??_LCD_CursorPosition
  3342  0FD5  3005               	movlw	5
  3343  0FD6                     u2865:	
  3344  0FD6  35F6               	lslf	??_LCD_CursorPosition,f
  3345  0FD7  3EFF               	addlw	-1
  3346  0FD8  1D03               	skipz
  3347  0FD9  2FD6               	goto	u2865
  3348  0FDA  3576               	lslf	??_LCD_CursorPosition,w
  3349  0FDB  0477               	iorwf	LCD_CursorPosition@tx,w
  3350  0FDC  3880               	iorlw	-128
  3351  0FDD  3186  269C  318F   	fcall	_LCD_WriteData
  3352                           
  3353                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  3354  0FE0  306A               	movlw	106
  3355  0FE1                     u4047:	
  3356  0FE1  0B89               	decfsz	9,f
  3357  0FE2  2FE1               	goto	u4047
  3358  0FE3  3200               	nop2
  3359  0FE4  0008               	return
  3360  0FE5                     __end_of_LCD_CursorPosition:	
  3361                           
  3362                           	psect	text12
  3363  069C                     __ptext12:	
  3364 ;; *************** function _LCD_WriteData *****************
  3365 ;; Defined at:
  3366 ;;		line 15 in file "LCD.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  point           1    wreg     char 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  point           1    4[COMMON] char 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3380 ;;      Params:         0       0       0       0       0       0
  3381 ;;      Locals:         1       0       0       0       0       0
  3382 ;;      Temps:          2       0       0       0       0       0
  3383 ;;      Totals:         3       0       0       0       0       0
  3384 ;;Total ram usage:        3 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    3
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_LCD_Init
  3391 ;;		_LCD_Put
  3392 ;;		_LCD_DisplayClear
  3393 ;;		_LCD_CursorPosition
  3394 ;;		_LCD_CursorHome
  3395 ;;		_LCD_CursorShift
  3396 ;;		_LCD_DispShift
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           
  3401                           ;psect for function _LCD_WriteData
  3402  069C                     _LCD_WriteData:	
  3403                           
  3404                           ;incstack = 0
  3405                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  3406                           ;LCD_WriteData@point stored from wreg
  3407  069C  00F4               	movwf	LCD_WriteData@point
  3408                           
  3409                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  3410  069D  30D5               	movlw	213
  3411  069E                     u4057:	
  3412  069E  0B89               	decfsz	9,f
  3413  069F  2E9E               	goto	u4057
  3414  06A0  0000               	nop
  3415                           
  3416                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  3417  06A1  0874               	movf	LCD_WriteData@point,w
  3418  06A2  00F2               	movwf	??_LCD_WriteData
  3419  06A3  3004               	movlw	4
  3420  06A4                     u1605:	
  3421  06A4  1003               	clrc
  3422  06A5  1BF2               	btfsc	??_LCD_WriteData,7
  3423  06A6  1403               	setc
  3424  06A7  0CF2               	rrf	??_LCD_WriteData,f
  3425  06A8  0B89               	decfsz	9,f
  3426  06A9  2EA4               	goto	u1605
  3427  06AA  3003               	movlw	3
  3428  06AB  0572               	andwf	??_LCD_WriteData,w
  3429  06AC  00F3               	movwf	??_LCD_WriteData+1
  3430  06AD  0E74               	swapf	LCD_WriteData@point,w
  3431  06AE  390F               	andlw	15
  3432  06AF  1989               	btfsc	9,3
  3433  06B0  38F0               	iorlw	240
  3434  06B1  390C               	andlw	12
  3435  06B2  0709               	addwf	9,w
  3436  06B3  0473               	iorwf	??_LCD_WriteData+1,w
  3437  06B4  0020               	movlb	0	; select bank0
  3438  06B5  008D               	movwf	13	;volatile
  3439                           
  3440                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3441  06B6  158C               	bsf	12,3	;volatile
  3442  06B7  3200               	nop2	;2 cycle nop
  3443  06B8  3200               	nop2	;2 cycle nop
  3444  06B9  3200               	nop2	;2 cycle nop
  3445  06BA  3200               	nop2	;2 cycle nop
  3446  06BB  0020               	movlb	0	; select bank0
  3447  06BC  118C               	bcf	12,3	;volatile
  3448  06BD  3200               	nop2	;2 cycle nop
  3449  06BE  3200               	nop2	;2 cycle nop
  3450  06BF  3200               	nop2	;2 cycle nop
  3451  06C0  3200               	nop2	;2 cycle nop
  3452                           
  3453                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  3454  06C1  3003               	movlw	3
  3455  06C2  0574               	andwf	LCD_WriteData@point,w
  3456  06C3  00F2               	movwf	??_LCD_WriteData
  3457  06C4  0874               	movf	LCD_WriteData@point,w
  3458  06C5  390C               	andlw	12
  3459  06C6  0709               	addwf	9,w
  3460  06C7  0472               	iorwf	??_LCD_WriteData,w
  3461  06C8  0020               	movlb	0	; select bank0
  3462  06C9  008D               	movwf	13	;volatile
  3463                           
  3464                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3465  06CA  158C               	bsf	12,3	;volatile
  3466  06CB  3200               	nop2	;2 cycle nop
  3467  06CC  3200               	nop2	;2 cycle nop
  3468  06CD  3200               	nop2	;2 cycle nop
  3469  06CE  3200               	nop2	;2 cycle nop
  3470  06CF  0020               	movlb	0	; select bank0
  3471  06D0  118C               	bcf	12,3	;volatile
  3472  06D1  3200               	nop2	;2 cycle nop
  3473  06D2  3200               	nop2	;2 cycle nop
  3474  06D3  3200               	nop2	;2 cycle nop
  3475  06D4  3200               	nop2	;2 cycle nop
  3476  06D5  0008               	return
  3477  06D6                     __end_of_LCD_WriteData:	
  3478                           
  3479                           	psect	text13
  3480  079F                     __ptext13:	
  3481 ;; *************** function _I2C_Transmit *****************
  3482 ;; Defined at:
  3483 ;;		line 23 in file "I2C_Common.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  I2Cx            1    wreg     enum E2992
  3486 ;;  address         1    0[BANK0 ] unsigned char 
  3487 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  3488 ;;		 -> main@testdata(4), 
  3489 ;;  size            1    2[BANK0 ] unsigned char 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  I2Cx            1    6[BANK0 ] enum E2992
  3492 ;;  result          1    7[BANK0 ] char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      char 
  3495 ;; Registers used:
  3496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3502 ;;      Params:         0       3       0       0       0       0
  3503 ;;      Locals:         0       2       0       0       0       0
  3504 ;;      Temps:          0       3       0       0       0       0
  3505 ;;      Totals:         0       8       0       0       0       0
  3506 ;;Total ram usage:        8 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    4
  3509 ;; This function calls:
  3510 ;;		_I2C1_Transmit
  3511 ;;		_I2C2_Transmit
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           
  3518                           ;psect for function _I2C_Transmit
  3519  079F                     _I2C_Transmit:	
  3520                           
  3521                           ;incstack = 0
  3522                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3523                           ;I2C_Transmit@I2Cx stored from wreg
  3524  079F  0020               	movlb	0	; select bank0
  3525  07A0  00A6               	movwf	I2C_Transmit@I2Cx
  3526                           
  3527                           ;I2C_Common.c: 25: int8_t result;
  3528                           ;I2C_Common.c: 27: switch(I2Cx)
  3529  07A1  2FC0               	goto	l3464
  3530  07A2                     l3458:	
  3531                           ;I2C_Common.c: 28: {
  3532                           ;I2C_Common.c: 29: case I2C1_MODULE:
  3533                           
  3534                           
  3535                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  3536  07A2  0821               	movf	I2C_Transmit@pData,w
  3537  07A3  00A3               	movwf	??_I2C_Transmit
  3538  07A4  0823               	movf	??_I2C_Transmit,w
  3539  07A5  00F2               	movwf	I2C1_Transmit@pData
  3540  07A6  0822               	movf	I2C_Transmit@size,w
  3541  07A7  00A4               	movwf	??_I2C_Transmit+1
  3542  07A8  0824               	movf	??_I2C_Transmit+1,w
  3543  07A9  00F3               	movwf	I2C1_Transmit@size
  3544  07AA  0820               	movf	I2C_Transmit@address,w
  3545  07AB  3183  23FE  3187   	fcall	_I2C1_Transmit
  3546  07AE  2FBB               	goto	L7
  3547  07AF                     l3460:	
  3548                           ;I2C_Common.c: 33: case I2C2_MODULE:
  3549                           
  3550                           ;I2C_Common.c: 31: break;
  3551                           
  3552                           
  3553                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  3554  07AF  0821               	movf	I2C_Transmit@pData,w
  3555  07B0  00A3               	movwf	??_I2C_Transmit
  3556  07B1  0823               	movf	??_I2C_Transmit,w
  3557  07B2  00F2               	movwf	I2C2_Transmit@pData
  3558  07B3  0822               	movf	I2C_Transmit@size,w
  3559  07B4  00A4               	movwf	??_I2C_Transmit+1
  3560  07B5  0824               	movf	??_I2C_Transmit+1,w
  3561  07B6  00F3               	movwf	I2C2_Transmit@size
  3562  07B7  0820               	movf	I2C_Transmit@address,w
  3563  07B8  3183  2380  3187   	fcall	_I2C2_Transmit
  3564  07BB                     L7:	
  3565  07BB  0020               	movlb	0	; select bank0
  3566  07BC  00A5               	movwf	??_I2C_Transmit+2
  3567  07BD  0825               	movf	??_I2C_Transmit+2,w
  3568  07BE  00A7               	movwf	I2C_Transmit@result
  3569                           
  3570                           ;I2C_Common.c: 36: }
  3571                           
  3572                           ;I2C_Common.c: 35: break;
  3573  07BF  2FC8               	goto	l3466
  3574  07C0                     l3464:	
  3575  07C0  0826               	movf	I2C_Transmit@I2Cx,w
  3576                           
  3577                           ; Switch size 1, requested type "space"
  3578                           ; Number of cases is 2, Range of values is 0 to 1
  3579                           ; switch strategies available:
  3580                           ; Name         Instructions Cycles
  3581                           ; simple_byte            7     4 (average)
  3582                           ; direct_byte           10     6 (fixed)
  3583                           ; jumptable            260     6 (fixed)
  3584                           ;	Chosen strategy is simple_byte
  3585  07C1  3A00               	xorlw	0	; case 0
  3586  07C2  1903               	skipnz
  3587  07C3  2FA2               	goto	l3458
  3588  07C4  3A01               	xorlw	1	; case 1
  3589  07C5  1903               	skipnz
  3590  07C6  2FAF               	goto	l3460
  3591  07C7  2FC8               	goto	l3466
  3592  07C8                     l3466:	
  3593                           
  3594                           ;I2C_Common.c: 37: return result;
  3595  07C8  0827               	movf	I2C_Transmit@result,w
  3596  07C9  0008               	return
  3597  07CA                     __end_of_I2C_Transmit:	
  3598                           
  3599                           	psect	text14
  3600  0380                     __ptext14:	
  3601 ;; *************** function _I2C2_Transmit *****************
  3602 ;; Defined at:
  3603 ;;		line 52 in file "I2C2.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  address         1    wreg     unsigned char 
  3606 ;;  pData           1    2[COMMON] PTR unsigned char 
  3607 ;;		 -> main@testdata(4), 
  3608 ;;  size            1    3[COMMON] unsigned char 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  address         1    6[COMMON] unsigned char 
  3611 ;;  i               1    8[COMMON] unsigned char 
  3612 ;;  i               1    7[COMMON] unsigned char 
  3613 ;;  result          1    9[COMMON] char 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      char 
  3616 ;; Registers used:
  3617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3623 ;;      Params:         2       0       0       0       0       0
  3624 ;;      Locals:         4       0       0       0       0       0
  3625 ;;      Temps:          2       0       0       0       0       0
  3626 ;;      Totals:         8       0       0       0       0       0
  3627 ;;Total ram usage:        8 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    3
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_I2C_Transmit
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function _I2C2_Transmit
  3639  0380                     _I2C2_Transmit:	
  3640                           
  3641                           ;incstack = 0
  3642                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  3643                           ;I2C2_Transmit@address stored from wreg
  3644  0380  00F6               	movwf	I2C2_Transmit@address
  3645                           
  3646                           ;I2C2.c: 54: int8_t result;
  3647                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  3648  0381  2BF3               	goto	l3340
  3649  0382                     l3296:	
  3650                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  3651                           
  3652                           ;I2C2.c: 57: {
  3653                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  3654                           
  3655  0382  3005               	movlw	5
  3656  0383  0024               	movlb	4	; select bank4
  3657  0384  051C               	andwf	28,w	;volatile
  3658  0385  00F4               	movwf	??_I2C2_Transmit
  3659  0386  081E               	movf	30,w	;volatile
  3660  0387  391F               	andlw	31
  3661  0388  0474               	iorwf	??_I2C2_Transmit,w
  3662  0389  1D03               	btfss	3,2
  3663  038A  2B82               	goto	l3296
  3664                           
  3665                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  3666  038B  141E               	bsf	30,0	;volatile
  3667  038C                     l3298:	
  3668                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  3669                           
  3670  038C  3005               	movlw	5
  3671  038D  051C               	andwf	28,w	;volatile
  3672  038E  00F4               	movwf	??_I2C2_Transmit
  3673  038F  081E               	movf	30,w	;volatile
  3674  0390  391F               	andlw	31
  3675  0391  0474               	iorwf	??_I2C2_Transmit,w
  3676  0392  1D03               	btfss	3,2
  3677  0393  2B8C               	goto	l3298
  3678                           
  3679                           ;I2C2.c: 63: SSP2BUF = address << 1;
  3680  0394  3576               	lslf	I2C2_Transmit@address,w
  3681  0395  0099               	movwf	25	;volatile
  3682  0396                     l378:	
  3683                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  3684                           
  3685  0396  191C               	btfsc	28,2	;volatile
  3686  0397  2B96               	goto	l378
  3687                           
  3688                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  3689  0398  3000               	movlw	0
  3690  0399  1B1E               	btfsc	30,6	;volatile
  3691  039A  3001               	movlw	1
  3692  039B  00F9               	movwf	I2C2_Transmit@result
  3693                           
  3694                           ;I2C2.c: 67: if (!result)
  3695  039C  0879               	movf	I2C2_Transmit@result,w
  3696  039D  1D03               	btfss	3,2
  3697  039E  2BC6               	goto	l3322
  3698                           
  3699                           ;I2C2.c: 68: {
  3700                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  3701  039F  01F7               	clrf	I2C2_Transmit@i
  3702  03A0  2BA5               	goto	l3320
  3703  03A1                     l3318:	
  3704                           ;I2C2.c: 79: break;
  3705                           
  3706  03A1  3001               	movlw	1
  3707  03A2  00F4               	movwf	??_I2C2_Transmit
  3708  03A3  0874               	movf	??_I2C2_Transmit,w
  3709  03A4  07F7               	addwf	I2C2_Transmit@i,f
  3710  03A5                     l3320:	
  3711  03A5  0873               	movf	I2C2_Transmit@size,w
  3712  03A6  0277               	subwf	I2C2_Transmit@i,w
  3713  03A7  1803               	btfsc	3,0
  3714  03A8  2BC6               	goto	l3322
  3715  03A9                     l3308:	
  3716                           ;I2C2.c: 70: {
  3717                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  3718                           
  3719  03A9  3005               	movlw	5
  3720  03AA  051C               	andwf	28,w	;volatile
  3721  03AB  00F4               	movwf	??_I2C2_Transmit
  3722  03AC  081E               	movf	30,w	;volatile
  3723  03AD  391F               	andlw	31
  3724  03AE  0474               	iorwf	??_I2C2_Transmit,w
  3725  03AF  1D03               	btfss	3,2
  3726  03B0  2BA9               	goto	l3308
  3727                           
  3728                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  3729  03B1  0877               	movf	I2C2_Transmit@i,w
  3730  03B2  0772               	addwf	I2C2_Transmit@pData,w
  3731  03B3  00F4               	movwf	??_I2C2_Transmit
  3732  03B4  0874               	movf	??_I2C2_Transmit,w
  3733  03B5  0086               	movwf	6
  3734  03B6  0187               	clrf	7
  3735  03B7  0801               	movf	1,w
  3736  03B8  0099               	movwf	25	;volatile
  3737  03B9                     l387:	
  3738                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  3739                           
  3740  03B9  191C               	btfsc	28,2	;volatile
  3741  03BA  2BB9               	goto	l387
  3742                           
  3743                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  3744  03BB  3000               	movlw	0
  3745  03BC  1B1E               	btfsc	30,6	;volatile
  3746  03BD  3001               	movlw	1
  3747  03BE  00F9               	movwf	I2C2_Transmit@result
  3748                           
  3749                           ;I2C2.c: 76: if (result)
  3750  03BF  0879               	movf	I2C2_Transmit@result,w
  3751  03C0  1903               	btfsc	3,2
  3752  03C1  2BA1               	goto	l3318
  3753                           
  3754                           ;I2C2.c: 77: {
  3755                           ;I2C2.c: 78: result = 2;
  3756  03C2  3002               	movlw	2
  3757  03C3  00F4               	movwf	??_I2C2_Transmit
  3758  03C4  0874               	movf	??_I2C2_Transmit,w
  3759  03C5  00F9               	movwf	I2C2_Transmit@result
  3760  03C6                     l3322:	
  3761                           ;I2C2.c: 80: }
  3762                           ;I2C2.c: 81: }
  3763                           ;I2C2.c: 82: }
  3764                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  3765                           
  3766  03C6  3005               	movlw	5
  3767  03C7  051C               	andwf	28,w	;volatile
  3768  03C8  00F4               	movwf	??_I2C2_Transmit
  3769  03C9  081E               	movf	30,w	;volatile
  3770  03CA  391F               	andlw	31
  3771  03CB  0474               	iorwf	??_I2C2_Transmit,w
  3772  03CC  1D03               	btfss	3,2
  3773  03CD  2BC6               	goto	l3322
  3774                           
  3775                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  3776  03CE  151E               	bsf	30,2	;volatile
  3777                           
  3778                           ;I2C2.c: 86: break;
  3779  03CF  2BFC               	goto	l3342
  3780  03D0                     l396:	
  3781                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  3782                           
  3783                           
  3784                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  3785  03D0  0024               	movlb	4	; select bank4
  3786  03D1  1D9C               	btfss	28,3	;volatile
  3787  03D2  1E1C               	btfss	28,4	;volatile
  3788  03D3  2BF1               	goto	l3336
  3789                           
  3790                           ;I2C2.c: 90: {
  3791                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  3792  03D4  01F8               	clrf	I2C2_Transmit@i_494
  3793  03D5                     l3332:	
  3794  03D5  0873               	movf	I2C2_Transmit@size,w
  3795  03D6  0278               	subwf	I2C2_Transmit@i_494,w
  3796  03D7  1803               	btfsc	3,0
  3797  03D8  2BEC               	goto	l3334
  3798                           
  3799                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  3800  03D9  0878               	movf	I2C2_Transmit@i_494,w
  3801  03DA  0772               	addwf	I2C2_Transmit@pData,w
  3802  03DB  00F4               	movwf	??_I2C2_Transmit
  3803  03DC  0874               	movf	??_I2C2_Transmit,w
  3804  03DD  0086               	movwf	6
  3805  03DE  0187               	clrf	7
  3806  03DF  0801               	movf	1,w
  3807  03E0  00F5               	movwf	??_I2C2_Transmit+1
  3808  03E1  0878               	movf	I2C2_Transmit@i_494,w
  3809  03E2  3EA0               	addlw	(low (_I2C2_Config| 0))& (0+255)
  3810  03E3  0086               	movwf	6
  3811  03E4  0187               	clrf	7
  3812  03E5  0875               	movf	??_I2C2_Transmit+1,w
  3813  03E6  0081               	movwf	1
  3814  03E7  3001               	movlw	1
  3815  03E8  00F4               	movwf	??_I2C2_Transmit
  3816  03E9  0874               	movf	??_I2C2_Transmit,w
  3817  03EA  07F8               	addwf	I2C2_Transmit@i_494,f
  3818  03EB  2BD5               	goto	l3332
  3819  03EC                     l3334:	
  3820                           
  3821                           ;I2C2.c: 93: result = size;
  3822  03EC  0873               	movf	I2C2_Transmit@size,w
  3823  03ED  00F4               	movwf	??_I2C2_Transmit
  3824  03EE  0874               	movf	??_I2C2_Transmit,w
  3825  03EF  00F9               	movwf	I2C2_Transmit@result
  3826                           
  3827                           ;I2C2.c: 94: }
  3828  03F0  2BFC               	goto	l3342
  3829  03F1                     l3336:	
  3830                           
  3831                           ;I2C2.c: 95: else
  3832                           ;I2C2.c: 96: result = 0;
  3833  03F1  01F9               	clrf	I2C2_Transmit@result
  3834                           
  3835                           ;I2C2.c: 98: }
  3836                           
  3837                           ;I2C2.c: 97: break;
  3838  03F2  2BFC               	goto	l3342
  3839  03F3                     l3340:	
  3840  03F3  0021               	movlb	1	; select bank1
  3841  03F4  0832               	movf	(_I2C2_Config^(0+128)+18),w
  3842                           
  3843                           ; Switch size 1, requested type "space"
  3844                           ; Number of cases is 2, Range of values is 0 to 1
  3845                           ; switch strategies available:
  3846                           ; Name         Instructions Cycles
  3847                           ; simple_byte            7     4 (average)
  3848                           ; direct_byte           10     6 (fixed)
  3849                           ; jumptable            260     6 (fixed)
  3850                           ;	Chosen strategy is simple_byte
  3851  03F5  3A00               	xorlw	0	; case 0
  3852  03F6  1903               	skipnz
  3853  03F7  2B82               	goto	l3296
  3854  03F8  3A01               	xorlw	1	; case 1
  3855  03F9  1903               	skipnz
  3856  03FA  2BD0               	goto	l396
  3857  03FB  2BFC               	goto	l3342
  3858  03FC                     l3342:	
  3859                           
  3860                           ;I2C2.c: 100: return result;
  3861  03FC  0879               	movf	I2C2_Transmit@result,w
  3862  03FD  0008               	return
  3863  03FE                     __end_of_I2C2_Transmit:	
  3864                           
  3865                           	psect	text15
  3866  03FE                     __ptext15:	
  3867 ;; *************** function _I2C1_Transmit *****************
  3868 ;; Defined at:
  3869 ;;		line 52 in file "I2C1.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  address         1    wreg     unsigned char 
  3872 ;;  pData           1    2[COMMON] PTR unsigned char 
  3873 ;;		 -> main@testdata(4), 
  3874 ;;  size            1    3[COMMON] unsigned char 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  address         1    6[COMMON] unsigned char 
  3877 ;;  i               1    8[COMMON] unsigned char 
  3878 ;;  i               1    7[COMMON] unsigned char 
  3879 ;;  result          1    9[COMMON] char 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      char 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3889 ;;      Params:         2       0       0       0       0       0
  3890 ;;      Locals:         4       0       0       0       0       0
  3891 ;;      Temps:          2       0       0       0       0       0
  3892 ;;      Totals:         8       0       0       0       0       0
  3893 ;;Total ram usage:        8 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    3
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_I2C_Transmit
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           
  3904                           ;psect for function _I2C1_Transmit
  3905  03FE                     _I2C1_Transmit:	
  3906                           
  3907                           ;incstack = 0
  3908                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  3909                           ;I2C1_Transmit@address stored from wreg
  3910  03FE  00F6               	movwf	I2C1_Transmit@address
  3911                           
  3912                           ;I2C1.c: 54: int8_t result;
  3913                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  3914  03FF  2C71               	goto	l3288
  3915  0400                     l3244:	
  3916                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  3917                           
  3918                           ;I2C1.c: 57: {
  3919                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  3920                           
  3921  0400  3005               	movlw	5
  3922  0401  0024               	movlb	4	; select bank4
  3923  0402  0514               	andwf	20,w	;volatile
  3924  0403  00F4               	movwf	??_I2C1_Transmit
  3925  0404  0816               	movf	22,w	;volatile
  3926  0405  391F               	andlw	31
  3927  0406  0474               	iorwf	??_I2C1_Transmit,w
  3928  0407  1D03               	btfss	3,2
  3929  0408  2C00               	goto	l3244
  3930                           
  3931                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  3932  0409  1416               	bsf	22,0	;volatile
  3933  040A                     l3246:	
  3934                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  3935                           
  3936  040A  3005               	movlw	5
  3937  040B  0514               	andwf	20,w	;volatile
  3938  040C  00F4               	movwf	??_I2C1_Transmit
  3939  040D  0816               	movf	22,w	;volatile
  3940  040E  391F               	andlw	31
  3941  040F  0474               	iorwf	??_I2C1_Transmit,w
  3942  0410  1D03               	btfss	3,2
  3943  0411  2C0A               	goto	l3246
  3944                           
  3945                           ;I2C1.c: 63: SSP1BUF = address << 1;
  3946  0412  3576               	lslf	I2C1_Transmit@address,w
  3947  0413  0091               	movwf	17	;volatile
  3948  0414                     l515:	
  3949                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  3950                           
  3951  0414  1914               	btfsc	20,2	;volatile
  3952  0415  2C14               	goto	l515
  3953                           
  3954                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  3955  0416  3000               	movlw	0
  3956  0417  1B16               	btfsc	22,6	;volatile
  3957  0418  3001               	movlw	1
  3958  0419  00F9               	movwf	I2C1_Transmit@result
  3959                           
  3960                           ;I2C1.c: 67: if (!result)
  3961  041A  0879               	movf	I2C1_Transmit@result,w
  3962  041B  1D03               	btfss	3,2
  3963  041C  2C44               	goto	l3270
  3964                           
  3965                           ;I2C1.c: 68: {
  3966                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  3967  041D  01F7               	clrf	I2C1_Transmit@i
  3968  041E  2C23               	goto	l3268
  3969  041F                     l3266:	
  3970                           ;I2C1.c: 79: break;
  3971                           
  3972  041F  3001               	movlw	1
  3973  0420  00F4               	movwf	??_I2C1_Transmit
  3974  0421  0874               	movf	??_I2C1_Transmit,w
  3975  0422  07F7               	addwf	I2C1_Transmit@i,f
  3976  0423                     l3268:	
  3977  0423  0873               	movf	I2C1_Transmit@size,w
  3978  0424  0277               	subwf	I2C1_Transmit@i,w
  3979  0425  1803               	btfsc	3,0
  3980  0426  2C44               	goto	l3270
  3981  0427                     l3256:	
  3982                           ;I2C1.c: 70: {
  3983                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  3984                           
  3985  0427  3005               	movlw	5
  3986  0428  0514               	andwf	20,w	;volatile
  3987  0429  00F4               	movwf	??_I2C1_Transmit
  3988  042A  0816               	movf	22,w	;volatile
  3989  042B  391F               	andlw	31
  3990  042C  0474               	iorwf	??_I2C1_Transmit,w
  3991  042D  1D03               	btfss	3,2
  3992  042E  2C27               	goto	l3256
  3993                           
  3994                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  3995  042F  0877               	movf	I2C1_Transmit@i,w
  3996  0430  0772               	addwf	I2C1_Transmit@pData,w
  3997  0431  00F4               	movwf	??_I2C1_Transmit
  3998  0432  0874               	movf	??_I2C1_Transmit,w
  3999  0433  0086               	movwf	6
  4000  0434  0187               	clrf	7
  4001  0435  0801               	movf	1,w
  4002  0436  0091               	movwf	17	;volatile
  4003  0437                     l524:	
  4004                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  4005                           
  4006  0437  1914               	btfsc	20,2	;volatile
  4007  0438  2C37               	goto	l524
  4008                           
  4009                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  4010  0439  3000               	movlw	0
  4011  043A  1B16               	btfsc	22,6	;volatile
  4012  043B  3001               	movlw	1
  4013  043C  00F9               	movwf	I2C1_Transmit@result
  4014                           
  4015                           ;I2C1.c: 76: if (result)
  4016  043D  0879               	movf	I2C1_Transmit@result,w
  4017  043E  1903               	btfsc	3,2
  4018  043F  2C1F               	goto	l3266
  4019                           
  4020                           ;I2C1.c: 77: {
  4021                           ;I2C1.c: 78: result = 2;
  4022  0440  3002               	movlw	2
  4023  0441  00F4               	movwf	??_I2C1_Transmit
  4024  0442  0874               	movf	??_I2C1_Transmit,w
  4025  0443  00F9               	movwf	I2C1_Transmit@result
  4026  0444                     l3270:	
  4027                           ;I2C1.c: 80: }
  4028                           ;I2C1.c: 81: }
  4029                           ;I2C1.c: 82: }
  4030                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4031                           
  4032  0444  3005               	movlw	5
  4033  0445  0514               	andwf	20,w	;volatile
  4034  0446  00F4               	movwf	??_I2C1_Transmit
  4035  0447  0816               	movf	22,w	;volatile
  4036  0448  391F               	andlw	31
  4037  0449  0474               	iorwf	??_I2C1_Transmit,w
  4038  044A  1D03               	btfss	3,2
  4039  044B  2C44               	goto	l3270
  4040                           
  4041                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  4042  044C  1516               	bsf	22,2	;volatile
  4043                           
  4044                           ;I2C1.c: 86: break;
  4045  044D  2C7A               	goto	l3290
  4046  044E                     l533:	
  4047                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  4048                           
  4049                           
  4050                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  4051  044E  0024               	movlb	4	; select bank4
  4052  044F  1D94               	btfss	20,3	;volatile
  4053  0450  1E14               	btfss	20,4	;volatile
  4054  0451  2C6F               	goto	l3284
  4055                           
  4056                           ;I2C1.c: 90: {
  4057                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  4058  0452  01F8               	clrf	I2C1_Transmit@i_633
  4059  0453                     l3280:	
  4060  0453  0873               	movf	I2C1_Transmit@size,w
  4061  0454  0278               	subwf	I2C1_Transmit@i_633,w
  4062  0455  1803               	btfsc	3,0
  4063  0456  2C6A               	goto	l3282
  4064                           
  4065                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  4066  0457  0878               	movf	I2C1_Transmit@i_633,w
  4067  0458  0772               	addwf	I2C1_Transmit@pData,w
  4068  0459  00F4               	movwf	??_I2C1_Transmit
  4069  045A  0874               	movf	??_I2C1_Transmit,w
  4070  045B  0086               	movwf	6
  4071  045C  0187               	clrf	7
  4072  045D  0801               	movf	1,w
  4073  045E  00F5               	movwf	??_I2C1_Transmit+1
  4074  045F  0878               	movf	I2C1_Transmit@i_633,w
  4075  0460  3EB3               	addlw	(low (_I2C1_Config| 0))& (0+255)
  4076  0461  0086               	movwf	6
  4077  0462  0187               	clrf	7
  4078  0463  0875               	movf	??_I2C1_Transmit+1,w
  4079  0464  0081               	movwf	1
  4080  0465  3001               	movlw	1
  4081  0466  00F4               	movwf	??_I2C1_Transmit
  4082  0467  0874               	movf	??_I2C1_Transmit,w
  4083  0468  07F8               	addwf	I2C1_Transmit@i_633,f
  4084  0469  2C53               	goto	l3280
  4085  046A                     l3282:	
  4086                           
  4087                           ;I2C1.c: 93: result = size;
  4088  046A  0873               	movf	I2C1_Transmit@size,w
  4089  046B  00F4               	movwf	??_I2C1_Transmit
  4090  046C  0874               	movf	??_I2C1_Transmit,w
  4091  046D  00F9               	movwf	I2C1_Transmit@result
  4092                           
  4093                           ;I2C1.c: 94: }
  4094  046E  2C7A               	goto	l3290
  4095  046F                     l3284:	
  4096                           
  4097                           ;I2C1.c: 95: else
  4098                           ;I2C1.c: 96: result = 0;
  4099  046F  01F9               	clrf	I2C1_Transmit@result
  4100                           
  4101                           ;I2C1.c: 98: }
  4102                           
  4103                           ;I2C1.c: 97: break;
  4104  0470  2C7A               	goto	l3290
  4105  0471                     l3288:	
  4106  0471  0021               	movlb	1	; select bank1
  4107  0472  0845               	movf	(_I2C1_Config^(0+128)+18),w
  4108                           
  4109                           ; Switch size 1, requested type "space"
  4110                           ; Number of cases is 2, Range of values is 0 to 1
  4111                           ; switch strategies available:
  4112                           ; Name         Instructions Cycles
  4113                           ; simple_byte            7     4 (average)
  4114                           ; direct_byte           10     6 (fixed)
  4115                           ; jumptable            260     6 (fixed)
  4116                           ;	Chosen strategy is simple_byte
  4117  0473  3A00               	xorlw	0	; case 0
  4118  0474  1903               	skipnz
  4119  0475  2C00               	goto	l3244
  4120  0476  3A01               	xorlw	1	; case 1
  4121  0477  1903               	skipnz
  4122  0478  2C4E               	goto	l533
  4123  0479  2C7A               	goto	l3290
  4124  047A                     l3290:	
  4125                           
  4126                           ;I2C1.c: 100: return result;
  4127  047A  0879               	movf	I2C1_Transmit@result,w
  4128  047B  0008               	return
  4129  047C                     __end_of_I2C1_Transmit:	
  4130                           
  4131                           	psect	text16
  4132  0773                     __ptext16:	
  4133 ;; *************** function _I2C_Receive *****************
  4134 ;; Defined at:
  4135 ;;		line 40 in file "I2C_Common.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  I2Cx            1    wreg     enum E2992
  4138 ;;  address         1    0[BANK0 ] unsigned char 
  4139 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  4140 ;;		 -> main@resultdata(4), 
  4141 ;;  size            1    2[BANK0 ] unsigned char 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  I2Cx            1    7[BANK0 ] enum E2992
  4144 ;;  result          1    6[BANK0 ] char 
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      char 
  4147 ;; Registers used:
  4148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4154 ;;      Params:         0       3       0       0       0       0
  4155 ;;      Locals:         0       2       0       0       0       0
  4156 ;;      Temps:          0       3       0       0       0       0
  4157 ;;      Totals:         0       8       0       0       0       0
  4158 ;;Total ram usage:        8 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; Hardware stack levels required when called:    4
  4161 ;; This function calls:
  4162 ;;		_I2C1_Receive
  4163 ;;		_I2C2_Receive
  4164 ;; This function is called by:
  4165 ;;		_main
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           
  4170                           ;psect for function _I2C_Receive
  4171  0773                     _I2C_Receive:	
  4172                           
  4173                           ;incstack = 0
  4174                           ; Regs used in _I2C_Receive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4175                           ;I2C_Receive@I2Cx stored from wreg
  4176  0773  0020               	movlb	0	; select bank0
  4177  0774  00A7               	movwf	I2C_Receive@I2Cx
  4178                           
  4179                           ;I2C_Common.c: 42: int8_t result;
  4180                           ;I2C_Common.c: 44: switch(I2Cx)
  4181  0775  2F96               	goto	l3478
  4182  0776                     l3472:	
  4183                           ;I2C_Common.c: 45: {
  4184                           ;I2C_Common.c: 46: case I2C1_MODULE:
  4185                           
  4186                           
  4187                           ;I2C_Common.c: 47: result = I2C1_Receive(address,pData,size);
  4188  0776  0821               	movf	I2C_Receive@pData,w
  4189  0777  00A3               	movwf	??_I2C_Receive
  4190  0778  0823               	movf	??_I2C_Receive,w
  4191  0779  00F2               	movwf	I2C1_Receive@pData
  4192  077A  0822               	movf	I2C_Receive@size,w
  4193  077B  00A4               	movwf	??_I2C_Receive+1
  4194  077C  0824               	movf	??_I2C_Receive+1,w
  4195  077D  00F3               	movwf	I2C1_Receive@size
  4196  077E  0820               	movf	I2C_Receive@address,w
  4197  077F  3182  22EF         	fcall	_I2C1_Receive
  4198  0781  0020               	movlb	0	; select bank0
  4199  0782  00A5               	movwf	??_I2C_Receive+2
  4200  0783  0825               	movf	??_I2C_Receive+2,w
  4201  0784  00A6               	movwf	I2C_Receive@result
  4202                           
  4203                           ;I2C_Common.c: 48: break;
  4204  0785  0008               	return
  4205  0786                     l3474:	
  4206                           ;I2C_Common.c: 50: case I2C2_MODULE:
  4207                           
  4208                           
  4209                           ;I2C_Common.c: 51: result = I2C2_Receive(address,pData,size);
  4210  0786  0821               	movf	I2C_Receive@pData,w
  4211  0787  00A3               	movwf	??_I2C_Receive
  4212  0788  0823               	movf	??_I2C_Receive,w
  4213  0789  00F2               	movwf	I2C2_Receive@pData
  4214  078A  0822               	movf	I2C_Receive@size,w
  4215  078B  00A4               	movwf	??_I2C_Receive+1
  4216  078C  0824               	movf	??_I2C_Receive+1,w
  4217  078D  00F3               	movwf	I2C2_Receive@size
  4218  078E  0820               	movf	I2C_Receive@address,w
  4219  078F  3182  225E         	fcall	_I2C2_Receive
  4220  0791  0020               	movlb	0	; select bank0
  4221  0792  00A5               	movwf	??_I2C_Receive+2
  4222  0793  0825               	movf	??_I2C_Receive+2,w
  4223  0794  00A6               	movwf	I2C_Receive@result
  4224                           
  4225                           ;I2C_Common.c: 53: }
  4226                           
  4227                           ;I2C_Common.c: 52: break;
  4228  0795  0008               	return
  4229  0796                     l3478:	
  4230  0796  0827               	movf	I2C_Receive@I2Cx,w
  4231                           
  4232                           ; Switch size 1, requested type "space"
  4233                           ; Number of cases is 2, Range of values is 0 to 1
  4234                           ; switch strategies available:
  4235                           ; Name         Instructions Cycles
  4236                           ; simple_byte            7     4 (average)
  4237                           ; direct_byte           10     6 (fixed)
  4238                           ; jumptable            260     6 (fixed)
  4239                           ;	Chosen strategy is simple_byte
  4240  0797  3A00               	xorlw	0	; case 0
  4241  0798  1903               	skipnz
  4242  0799  2F76               	goto	l3472
  4243  079A  3A01               	xorlw	1	; case 1
  4244  079B  1903               	skipnz
  4245  079C  2F86               	goto	l3474
  4246  079D  2F9E               	goto	l319
  4247  079E                     l319:	
  4248                           ;I2C_Common.c: 55: return result;
  4249                           ;	Return value of _I2C_Receive is never used
  4250                           
  4251  079E  0008               	return
  4252  079F                     __end_of_I2C_Receive:	
  4253                           
  4254                           	psect	text17
  4255  025E                     __ptext17:	
  4256 ;; *************** function _I2C2_Receive *****************
  4257 ;; Defined at:
  4258 ;;		line 103 in file "I2C2.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  address         1    wreg     unsigned char 
  4261 ;;  pData           1    2[COMMON] PTR unsigned char 
  4262 ;;		 -> main@resultdata(4), 
  4263 ;;  size            1    3[COMMON] unsigned char 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  address         1    6[COMMON] unsigned char 
  4266 ;;  i               1    9[COMMON] unsigned char 
  4267 ;;  i               1    8[COMMON] unsigned char 
  4268 ;;  result          1    7[COMMON] char 
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      char 
  4271 ;; Registers used:
  4272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4278 ;;      Params:         2       0       0       0       0       0
  4279 ;;      Locals:         4       0       0       0       0       0
  4280 ;;      Temps:          2       0       0       0       0       0
  4281 ;;      Totals:         8       0       0       0       0       0
  4282 ;;Total ram usage:        8 bytes
  4283 ;; Hardware stack levels used:    1
  4284 ;; Hardware stack levels required when called:    3
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_I2C_Receive
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           
  4293                           ;psect for function _I2C2_Receive
  4294  025E                     _I2C2_Receive:	
  4295                           
  4296                           ;incstack = 0
  4297                           ; Regs used in _I2C2_Receive: [wreg-fsr1h+status,2+status,0]
  4298                           ;I2C2_Receive@address stored from wreg
  4299  025E  00F6               	movwf	I2C2_Receive@address
  4300                           
  4301                           ;I2C2.c: 105: int8_t result;
  4302                           ;I2C2.c: 107: switch(I2C2_Config.Mode)
  4303  025F  2AE4               	goto	l3440
  4304  0260                     l3398:	
  4305                           ;I2C2.c: 110: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4306                           
  4307                           ;I2C2.c: 108: {
  4308                           ;I2C2.c: 109: case I2C_MODE_MASTER:
  4309                           
  4310  0260  3005               	movlw	5
  4311  0261  0024               	movlb	4	; select bank4
  4312  0262  051C               	andwf	28,w	;volatile
  4313  0263  00F4               	movwf	??_I2C2_Receive
  4314  0264  081E               	movf	30,w	;volatile
  4315  0265  391F               	andlw	31
  4316  0266  0474               	iorwf	??_I2C2_Receive,w
  4317  0267  1D03               	btfss	3,2
  4318  0268  2A60               	goto	l3398
  4319                           
  4320                           ;I2C2.c: 111: SSP2CON2bits.SEN = 1;
  4321  0269  141E               	bsf	30,0	;volatile
  4322  026A                     l3400:	
  4323                           ;I2C2.c: 113: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4324                           
  4325  026A  3005               	movlw	5
  4326  026B  051C               	andwf	28,w	;volatile
  4327  026C  00F4               	movwf	??_I2C2_Receive
  4328  026D  081E               	movf	30,w	;volatile
  4329  026E  391F               	andlw	31
  4330  026F  0474               	iorwf	??_I2C2_Receive,w
  4331  0270  1D03               	btfss	3,2
  4332  0271  2A6A               	goto	l3400
  4333                           
  4334                           ;I2C2.c: 114: SSP2BUF = ((address << 1)|0x01);
  4335  0272  1403               	setc
  4336  0273  0D76               	rlf	I2C2_Receive@address,w
  4337  0274  0099               	movwf	25	;volatile
  4338  0275                     l413:	
  4339                           ;I2C2.c: 115: while(SSP2STATbits.R_nW);
  4340                           
  4341  0275  191C               	btfsc	28,2	;volatile
  4342  0276  2A75               	goto	l413
  4343                           
  4344                           ;I2C2.c: 117: result = SSP2CON2bits.ACKSTAT;
  4345  0277  3000               	movlw	0
  4346  0278  1B1E               	btfsc	30,6	;volatile
  4347  0279  3001               	movlw	1
  4348  027A  00F7               	movwf	I2C2_Receive@result
  4349                           
  4350                           ;I2C2.c: 118: if (!result)
  4351  027B  0877               	movf	I2C2_Receive@result,w
  4352  027C  1D03               	btfss	3,2
  4353  027D  2AB5               	goto	l3424
  4354                           
  4355                           ;I2C2.c: 119: {
  4356                           ;I2C2.c: 120: for (uint8_t i=0;i<size;i++)
  4357  027E  01F8               	clrf	I2C2_Receive@i
  4358  027F                     l3422:	
  4359  027F  0873               	movf	I2C2_Receive@size,w
  4360  0280  0278               	subwf	I2C2_Receive@i,w
  4361  0281  1803               	btfsc	3,0
  4362  0282  2AB5               	goto	l3424
  4363  0283                     l3410:	
  4364                           ;I2C2.c: 121: {
  4365                           ;I2C2.c: 122: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4366                           
  4367  0283  3005               	movlw	5
  4368  0284  051C               	andwf	28,w	;volatile
  4369  0285  00F4               	movwf	??_I2C2_Receive
  4370  0286  081E               	movf	30,w	;volatile
  4371  0287  391F               	andlw	31
  4372  0288  0474               	iorwf	??_I2C2_Receive,w
  4373  0289  1D03               	btfss	3,2
  4374  028A  2A83               	goto	l3410
  4375                           
  4376                           ;I2C2.c: 123: SSP2CON2bits.RCEN = 1;
  4377  028B  159E               	bsf	30,3	;volatile
  4378  028C                     l422:	
  4379                           ;I2C2.c: 124: while(SSP2CON2bits.RCEN);
  4380                           
  4381  028C  199E               	btfsc	30,3	;volatile
  4382  028D  2A8C               	goto	l422
  4383                           
  4384                           ;I2C2.c: 125: *(pData+i) = SSP2BUF;
  4385  028E  0819               	movf	25,w	;volatile
  4386  028F  00F4               	movwf	??_I2C2_Receive
  4387  0290  0878               	movf	I2C2_Receive@i,w
  4388  0291  0772               	addwf	I2C2_Receive@pData,w
  4389  0292  00F5               	movwf	??_I2C2_Receive+1
  4390  0293  0875               	movf	??_I2C2_Receive+1,w
  4391  0294  0086               	movwf	6
  4392  0295  0187               	clrf	7
  4393  0296  0874               	movf	??_I2C2_Receive,w
  4394  0297  0081               	movwf	1
  4395  0298                     l3414:	
  4396                           ;I2C2.c: 126: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4397                           
  4398  0298  3005               	movlw	5
  4399  0299  051C               	andwf	28,w	;volatile
  4400  029A  00F4               	movwf	??_I2C2_Receive
  4401  029B  081E               	movf	30,w	;volatile
  4402  029C  391F               	andlw	31
  4403  029D  0474               	iorwf	??_I2C2_Receive,w
  4404  029E  1D03               	btfss	3,2
  4405  029F  2A98               	goto	l3414
  4406                           
  4407                           ;I2C2.c: 127: if (i == size-1)
  4408  02A0  0873               	movf	I2C2_Receive@size,w
  4409  02A1  3EFF               	addlw	255
  4410  02A2  00F4               	movwf	??_I2C2_Receive
  4411  02A3  30FF               	movlw	255
  4412  02A4  1803               	skipnc
  4413  02A5  3000               	movlw	0
  4414  02A6  00F5               	movwf	??_I2C2_Receive+1
  4415  02A7  0878               	movf	I2C2_Receive@i,w
  4416  02A8  0674               	xorwf	??_I2C2_Receive,w
  4417  02A9  0475               	iorwf	??_I2C2_Receive+1,w
  4418  02AA  1D03               	skipz
  4419  02AB  2AAE               	goto	l428
  4420                           
  4421                           ;I2C2.c: 128: SSP2CON2bits.ACKDT = 1;
  4422  02AC  169E               	bsf	30,5	;volatile
  4423  02AD  2AAF               	goto	l429
  4424  02AE                     l428:	
  4425                           
  4426                           ;I2C2.c: 129: else
  4427                           ;I2C2.c: 130: SSP2CON2bits.ACKDT = 0;
  4428  02AE  129E               	bcf	30,5	;volatile
  4429  02AF                     l429:	
  4430                           
  4431                           ;I2C2.c: 131: SSP2CON2bits.ACKEN = 1;
  4432  02AF  161E               	bsf	30,4	;volatile
  4433  02B0  3001               	movlw	1
  4434  02B1  00F4               	movwf	??_I2C2_Receive
  4435  02B2  0874               	movf	??_I2C2_Receive,w
  4436  02B3  07F8               	addwf	I2C2_Receive@i,f
  4437  02B4  2A7F               	goto	l3422
  4438  02B5                     l3424:	
  4439                           ;I2C2.c: 132: }
  4440                           ;I2C2.c: 133: }
  4441                           ;I2C2.c: 135: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4442                           
  4443  02B5  3005               	movlw	5
  4444  02B6  051C               	andwf	28,w	;volatile
  4445  02B7  00F4               	movwf	??_I2C2_Receive
  4446  02B8  081E               	movf	30,w	;volatile
  4447  02B9  391F               	andlw	31
  4448  02BA  0474               	iorwf	??_I2C2_Receive,w
  4449  02BB  1D03               	btfss	3,2
  4450  02BC  2AB5               	goto	l3424
  4451                           
  4452                           ;I2C2.c: 136: SSP2CON2bits.PEN = 1;
  4453  02BD  151E               	bsf	30,2	;volatile
  4454                           
  4455                           ;I2C2.c: 137: break;
  4456  02BE  2AED               	goto	l3442
  4457  02BF                     l435:	
  4458                           ;I2C2.c: 139: case I2C_MODE_SLAVE:
  4459                           
  4460                           
  4461                           ;I2C2.c: 140: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  4462  02BF  0024               	movlb	4	; select bank4
  4463  02C0  1D9C               	btfss	28,3	;volatile
  4464  02C1  1E1C               	btfss	28,4	;volatile
  4465  02C2  2AED               	goto	l3442
  4466                           
  4467                           ;I2C2.c: 141: {
  4468                           ;I2C2.c: 142: for(uint8_t i = 0;i<size;i++)
  4469  02C3  01F9               	clrf	I2C2_Receive@i_501
  4470  02C4                     l3434:	
  4471  02C4  0873               	movf	I2C2_Receive@size,w
  4472  02C5  0279               	subwf	I2C2_Receive@i_501,w
  4473  02C6  1803               	btfsc	3,0
  4474  02C7  2ADB               	goto	l3436
  4475                           
  4476                           ;I2C2.c: 143: pData[i] = I2C2_Config.SlaveReceiveBuff[i];
  4477  02C8  0879               	movf	I2C2_Receive@i_501,w
  4478  02C9  3EA8               	addlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  4479  02CA  0086               	movwf	6
  4480  02CB  0187               	clrf	7
  4481  02CC  0801               	movf	1,w
  4482  02CD  00F4               	movwf	??_I2C2_Receive
  4483  02CE  0879               	movf	I2C2_Receive@i_501,w
  4484  02CF  0772               	addwf	I2C2_Receive@pData,w
  4485  02D0  00F5               	movwf	??_I2C2_Receive+1
  4486  02D1  0875               	movf	??_I2C2_Receive+1,w
  4487  02D2  0086               	movwf	6
  4488  02D3  0187               	clrf	7
  4489  02D4  0874               	movf	??_I2C2_Receive,w
  4490  02D5  0081               	movwf	1
  4491  02D6  3001               	movlw	1
  4492  02D7  00F4               	movwf	??_I2C2_Receive
  4493  02D8  0874               	movf	??_I2C2_Receive,w
  4494  02D9  07F9               	addwf	I2C2_Receive@i_501,f
  4495  02DA  2AC4               	goto	l3434
  4496  02DB                     l3436:	
  4497                           
  4498                           ;I2C2.c: 144: result = I2C2_Config.ReceivePoint - I2C2_Config.SlaveReceiveBuff;
  4499  02DB  30A8               	movlw	(low (_I2C2_Config+8))& (0+255)
  4500  02DC  3AFF               	xorlw	255
  4501  02DD  3E01               	addlw	1
  4502  02DE  0021               	movlb	1	; select bank1
  4503  02DF  0731               	addwf	(_I2C2_Config^(0+128)+17),w
  4504  02E0  00F4               	movwf	??_I2C2_Receive
  4505  02E1  0874               	movf	??_I2C2_Receive,w
  4506  02E2  00F7               	movwf	I2C2_Receive@result
  4507                           
  4508                           ;I2C2.c: 147: }
  4509                           
  4510                           ;I2C2.c: 145: }
  4511                           ;I2C2.c: 146: break;
  4512  02E3  2AED               	goto	l3442
  4513  02E4                     l3440:	
  4514  02E4  0021               	movlb	1	; select bank1
  4515  02E5  0832               	movf	(_I2C2_Config^(0+128)+18),w
  4516                           
  4517                           ; Switch size 1, requested type "space"
  4518                           ; Number of cases is 2, Range of values is 0 to 1
  4519                           ; switch strategies available:
  4520                           ; Name         Instructions Cycles
  4521                           ; simple_byte            7     4 (average)
  4522                           ; direct_byte           10     6 (fixed)
  4523                           ; jumptable            260     6 (fixed)
  4524                           ;	Chosen strategy is simple_byte
  4525  02E6  3A00               	xorlw	0	; case 0
  4526  02E7  1903               	skipnz
  4527  02E8  2A60               	goto	l3398
  4528  02E9  3A01               	xorlw	1	; case 1
  4529  02EA  1903               	skipnz
  4530  02EB  2ABF               	goto	l435
  4531  02EC  2AED               	goto	l3442
  4532  02ED                     l3442:	
  4533                           
  4534                           ;I2C2.c: 149: return result;
  4535  02ED  0877               	movf	I2C2_Receive@result,w
  4536  02EE  0008               	return
  4537  02EF                     __end_of_I2C2_Receive:	
  4538                           
  4539                           	psect	text18
  4540  02EF                     __ptext18:	
  4541 ;; *************** function _I2C1_Receive *****************
  4542 ;; Defined at:
  4543 ;;		line 103 in file "I2C1.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  address         1    wreg     unsigned char 
  4546 ;;  pData           1    2[COMMON] PTR unsigned char 
  4547 ;;		 -> main@resultdata(4), 
  4548 ;;  size            1    3[COMMON] unsigned char 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  address         1    6[COMMON] unsigned char 
  4551 ;;  i               1    9[COMMON] unsigned char 
  4552 ;;  i               1    8[COMMON] unsigned char 
  4553 ;;  result          1    7[COMMON] char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      char 
  4556 ;; Registers used:
  4557 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4563 ;;      Params:         2       0       0       0       0       0
  4564 ;;      Locals:         4       0       0       0       0       0
  4565 ;;      Temps:          2       0       0       0       0       0
  4566 ;;      Totals:         8       0       0       0       0       0
  4567 ;;Total ram usage:        8 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    3
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_I2C_Receive
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           
  4578                           ;psect for function _I2C1_Receive
  4579  02EF                     _I2C1_Receive:	
  4580                           
  4581                           ;incstack = 0
  4582                           ; Regs used in _I2C1_Receive: [wreg-fsr1h+status,2+status,0]
  4583                           ;I2C1_Receive@address stored from wreg
  4584  02EF  00F6               	movwf	I2C1_Receive@address
  4585                           
  4586                           ;I2C1.c: 105: int8_t result;
  4587                           ;I2C1.c: 107: switch(I2C1_Config.Mode)
  4588  02F0  2B75               	goto	l3390
  4589  02F1                     l3348:	
  4590                           ;I2C1.c: 110: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4591                           
  4592                           ;I2C1.c: 108: {
  4593                           ;I2C1.c: 109: case I2C_MODE_MASTER:
  4594                           
  4595  02F1  3005               	movlw	5
  4596  02F2  0024               	movlb	4	; select bank4
  4597  02F3  0514               	andwf	20,w	;volatile
  4598  02F4  00F4               	movwf	??_I2C1_Receive
  4599  02F5  0816               	movf	22,w	;volatile
  4600  02F6  391F               	andlw	31
  4601  02F7  0474               	iorwf	??_I2C1_Receive,w
  4602  02F8  1D03               	btfss	3,2
  4603  02F9  2AF1               	goto	l3348
  4604                           
  4605                           ;I2C1.c: 111: SSP1CON2bits.SEN = 1;
  4606  02FA  1416               	bsf	22,0	;volatile
  4607  02FB                     l3350:	
  4608                           ;I2C1.c: 113: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4609                           
  4610  02FB  3005               	movlw	5
  4611  02FC  0514               	andwf	20,w	;volatile
  4612  02FD  00F4               	movwf	??_I2C1_Receive
  4613  02FE  0816               	movf	22,w	;volatile
  4614  02FF  391F               	andlw	31
  4615  0300  0474               	iorwf	??_I2C1_Receive,w
  4616  0301  1D03               	btfss	3,2
  4617  0302  2AFB               	goto	l3350
  4618                           
  4619                           ;I2C1.c: 114: SSP1BUF = ((address << 1)|0x01);
  4620  0303  1403               	setc
  4621  0304  0D76               	rlf	I2C1_Receive@address,w
  4622  0305  0091               	movwf	17	;volatile
  4623  0306                     l550:	
  4624                           ;I2C1.c: 115: while(SSP1STATbits.R_nW);
  4625                           
  4626  0306  1914               	btfsc	20,2	;volatile
  4627  0307  2B06               	goto	l550
  4628                           
  4629                           ;I2C1.c: 117: result = SSP1CON2bits.ACKSTAT;
  4630  0308  3000               	movlw	0
  4631  0309  1B16               	btfsc	22,6	;volatile
  4632  030A  3001               	movlw	1
  4633  030B  00F7               	movwf	I2C1_Receive@result
  4634                           
  4635                           ;I2C1.c: 118: if (!result)
  4636  030C  0877               	movf	I2C1_Receive@result,w
  4637  030D  1D03               	btfss	3,2
  4638  030E  2B46               	goto	l3374
  4639                           
  4640                           ;I2C1.c: 119: {
  4641                           ;I2C1.c: 120: for (uint8_t i=0;i<size;i++)
  4642  030F  01F8               	clrf	I2C1_Receive@i
  4643  0310                     l3372:	
  4644  0310  0873               	movf	I2C1_Receive@size,w
  4645  0311  0278               	subwf	I2C1_Receive@i,w
  4646  0312  1803               	btfsc	3,0
  4647  0313  2B46               	goto	l3374
  4648  0314                     l3360:	
  4649                           ;I2C1.c: 121: {
  4650                           ;I2C1.c: 122: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4651                           
  4652  0314  3005               	movlw	5
  4653  0315  0514               	andwf	20,w	;volatile
  4654  0316  00F4               	movwf	??_I2C1_Receive
  4655  0317  0816               	movf	22,w	;volatile
  4656  0318  391F               	andlw	31
  4657  0319  0474               	iorwf	??_I2C1_Receive,w
  4658  031A  1D03               	btfss	3,2
  4659  031B  2B14               	goto	l3360
  4660                           
  4661                           ;I2C1.c: 123: SSP1CON2bits.RCEN = 1;
  4662  031C  1596               	bsf	22,3	;volatile
  4663  031D                     l559:	
  4664                           ;I2C1.c: 124: while(SSP1CON2bits.RCEN);
  4665                           
  4666  031D  1996               	btfsc	22,3	;volatile
  4667  031E  2B1D               	goto	l559
  4668                           
  4669                           ;I2C1.c: 125: *(pData+i) = SSP1BUF;
  4670  031F  0811               	movf	17,w	;volatile
  4671  0320  00F4               	movwf	??_I2C1_Receive
  4672  0321  0878               	movf	I2C1_Receive@i,w
  4673  0322  0772               	addwf	I2C1_Receive@pData,w
  4674  0323  00F5               	movwf	??_I2C1_Receive+1
  4675  0324  0875               	movf	??_I2C1_Receive+1,w
  4676  0325  0086               	movwf	6
  4677  0326  0187               	clrf	7
  4678  0327  0874               	movf	??_I2C1_Receive,w
  4679  0328  0081               	movwf	1
  4680  0329                     l3364:	
  4681                           ;I2C1.c: 126: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4682                           
  4683  0329  3005               	movlw	5
  4684  032A  0514               	andwf	20,w	;volatile
  4685  032B  00F4               	movwf	??_I2C1_Receive
  4686  032C  0816               	movf	22,w	;volatile
  4687  032D  391F               	andlw	31
  4688  032E  0474               	iorwf	??_I2C1_Receive,w
  4689  032F  1D03               	btfss	3,2
  4690  0330  2B29               	goto	l3364
  4691                           
  4692                           ;I2C1.c: 127: if (i == size-1)
  4693  0331  0873               	movf	I2C1_Receive@size,w
  4694  0332  3EFF               	addlw	255
  4695  0333  00F4               	movwf	??_I2C1_Receive
  4696  0334  30FF               	movlw	255
  4697  0335  1803               	skipnc
  4698  0336  3000               	movlw	0
  4699  0337  00F5               	movwf	??_I2C1_Receive+1
  4700  0338  0878               	movf	I2C1_Receive@i,w
  4701  0339  0674               	xorwf	??_I2C1_Receive,w
  4702  033A  0475               	iorwf	??_I2C1_Receive+1,w
  4703  033B  1D03               	skipz
  4704  033C  2B3F               	goto	l565
  4705                           
  4706                           ;I2C1.c: 128: SSP1CON2bits.ACKDT = 1;
  4707  033D  1696               	bsf	22,5	;volatile
  4708  033E  2B40               	goto	l566
  4709  033F                     l565:	
  4710                           
  4711                           ;I2C1.c: 129: else
  4712                           ;I2C1.c: 130: SSP1CON2bits.ACKDT = 0;
  4713  033F  1296               	bcf	22,5	;volatile
  4714  0340                     l566:	
  4715                           
  4716                           ;I2C1.c: 131: SSP1CON2bits.ACKEN = 1;
  4717  0340  1616               	bsf	22,4	;volatile
  4718  0341  3001               	movlw	1
  4719  0342  00F4               	movwf	??_I2C1_Receive
  4720  0343  0874               	movf	??_I2C1_Receive,w
  4721  0344  07F8               	addwf	I2C1_Receive@i,f
  4722  0345  2B10               	goto	l3372
  4723  0346                     l3374:	
  4724                           ;I2C1.c: 132: }
  4725                           ;I2C1.c: 133: }
  4726                           ;I2C1.c: 135: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4727                           
  4728  0346  3005               	movlw	5
  4729  0347  0514               	andwf	20,w	;volatile
  4730  0348  00F4               	movwf	??_I2C1_Receive
  4731  0349  0816               	movf	22,w	;volatile
  4732  034A  391F               	andlw	31
  4733  034B  0474               	iorwf	??_I2C1_Receive,w
  4734  034C  1D03               	btfss	3,2
  4735  034D  2B46               	goto	l3374
  4736                           
  4737                           ;I2C1.c: 136: SSP1CON2bits.PEN = 1;
  4738  034E  1516               	bsf	22,2	;volatile
  4739                           
  4740                           ;I2C1.c: 137: break;
  4741  034F  2B7E               	goto	l3392
  4742  0350                     l572:	
  4743                           ;I2C1.c: 139: case I2C_MODE_SLAVE:
  4744                           
  4745                           
  4746                           ;I2C1.c: 140: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  4747  0350  0024               	movlb	4	; select bank4
  4748  0351  1D94               	btfss	20,3	;volatile
  4749  0352  1E14               	btfss	20,4	;volatile
  4750  0353  2B7E               	goto	l3392
  4751                           
  4752                           ;I2C1.c: 141: {
  4753                           ;I2C1.c: 142: for(uint8_t i = 0;i<size;i++)
  4754  0354  01F9               	clrf	I2C1_Receive@i_640
  4755  0355                     l3384:	
  4756  0355  0873               	movf	I2C1_Receive@size,w
  4757  0356  0279               	subwf	I2C1_Receive@i_640,w
  4758  0357  1803               	btfsc	3,0
  4759  0358  2B6C               	goto	l3386
  4760                           
  4761                           ;I2C1.c: 143: pData[i] = I2C1_Config.SlaveReceiveBuff[i];
  4762  0359  0879               	movf	I2C1_Receive@i_640,w
  4763  035A  3EBB               	addlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  4764  035B  0086               	movwf	6
  4765  035C  0187               	clrf	7
  4766  035D  0801               	movf	1,w
  4767  035E  00F4               	movwf	??_I2C1_Receive
  4768  035F  0879               	movf	I2C1_Receive@i_640,w
  4769  0360  0772               	addwf	I2C1_Receive@pData,w
  4770  0361  00F5               	movwf	??_I2C1_Receive+1
  4771  0362  0875               	movf	??_I2C1_Receive+1,w
  4772  0363  0086               	movwf	6
  4773  0364  0187               	clrf	7
  4774  0365  0874               	movf	??_I2C1_Receive,w
  4775  0366  0081               	movwf	1
  4776  0367  3001               	movlw	1
  4777  0368  00F4               	movwf	??_I2C1_Receive
  4778  0369  0874               	movf	??_I2C1_Receive,w
  4779  036A  07F9               	addwf	I2C1_Receive@i_640,f
  4780  036B  2B55               	goto	l3384
  4781  036C                     l3386:	
  4782                           
  4783                           ;I2C1.c: 144: result = I2C1_Config.ReceivePoint - I2C1_Config.SlaveReceiveBuff;
  4784  036C  30BB               	movlw	(low (_I2C1_Config+8))& (0+255)
  4785  036D  3AFF               	xorlw	255
  4786  036E  3E01               	addlw	1
  4787  036F  0021               	movlb	1	; select bank1
  4788  0370  0744               	addwf	(_I2C1_Config^(0+128)+17),w
  4789  0371  00F4               	movwf	??_I2C1_Receive
  4790  0372  0874               	movf	??_I2C1_Receive,w
  4791  0373  00F7               	movwf	I2C1_Receive@result
  4792                           
  4793                           ;I2C1.c: 147: }
  4794                           
  4795                           ;I2C1.c: 145: }
  4796                           ;I2C1.c: 146: break;
  4797  0374  2B7E               	goto	l3392
  4798  0375                     l3390:	
  4799  0375  0021               	movlb	1	; select bank1
  4800  0376  0845               	movf	(_I2C1_Config^(0+128)+18),w
  4801                           
  4802                           ; Switch size 1, requested type "space"
  4803                           ; Number of cases is 2, Range of values is 0 to 1
  4804                           ; switch strategies available:
  4805                           ; Name         Instructions Cycles
  4806                           ; simple_byte            7     4 (average)
  4807                           ; direct_byte           10     6 (fixed)
  4808                           ; jumptable            260     6 (fixed)
  4809                           ;	Chosen strategy is simple_byte
  4810  0377  3A00               	xorlw	0	; case 0
  4811  0378  1903               	skipnz
  4812  0379  2AF1               	goto	l3348
  4813  037A  3A01               	xorlw	1	; case 1
  4814  037B  1903               	skipnz
  4815  037C  2B50               	goto	l572
  4816  037D  2B7E               	goto	l3392
  4817  037E                     l3392:	
  4818                           
  4819                           ;I2C1.c: 149: return result;
  4820  037E  0877               	movf	I2C1_Receive@result,w
  4821  037F  0008               	return
  4822  0380                     __end_of_I2C1_Receive:	
  4823                           
  4824                           	psect	text19
  4825  07CA                     __ptext19:	
  4826 ;; *************** function _I2C_Init *****************
  4827 ;; Defined at:
  4828 ;;		line 6 in file "I2C_Common.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  I2Cx            1    wreg     enum E2992
  4831 ;;  address         1    7[COMMON] unsigned char 
  4832 ;;  mode            1    8[COMMON] enum E2983
  4833 ;;  Speed           1    9[COMMON] enum E2987
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  I2Cx            1   10[COMMON] enum E2992
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      void 
  4838 ;; Registers used:
  4839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4845 ;;      Params:         3       0       0       0       0       0
  4846 ;;      Locals:         1       0       0       0       0       0
  4847 ;;      Temps:          0       2       0       0       0       0
  4848 ;;      Totals:         4       2       0       0       0       0
  4849 ;;Total ram usage:        6 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    5
  4852 ;; This function calls:
  4853 ;;		_I2C1_Setting
  4854 ;;		_I2C2_Setting
  4855 ;; This function is called by:
  4856 ;;		_main
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           
  4861                           ;psect for function _I2C_Init
  4862  07CA                     _I2C_Init:	
  4863                           
  4864                           ;incstack = 0
  4865                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4866                           ;I2C_Init@I2Cx stored from wreg
  4867  07CA  00FA               	movwf	I2C_Init@I2Cx
  4868                           
  4869                           ;I2C_Common.c: 8: switch(I2Cx)
  4870  07CB  2FE8               	goto	l3454
  4871  07CC                     l3448:	
  4872                           ;I2C_Common.c: 9: {
  4873                           ;I2C_Common.c: 10: case I2C1_MODULE:
  4874                           
  4875                           
  4876                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  4877  07CC  0878               	movf	I2C_Init@mode,w
  4878  07CD  0020               	movlb	0	; select bank0
  4879  07CE  00A0               	movwf	??_I2C_Init
  4880  07CF  0820               	movf	??_I2C_Init,w
  4881  07D0  00F3               	movwf	I2C1_Setting@mode
  4882  07D1  0879               	movf	I2C_Init@Speed,w
  4883  07D2  00A1               	movwf	??_I2C_Init+1
  4884  07D3  0821               	movf	??_I2C_Init+1,w
  4885  07D4  00F4               	movwf	I2C1_Setting@Speed
  4886  07D5  0877               	movf	I2C_Init@address,w
  4887  07D6  3187  270E  3187   	fcall	_I2C1_Setting
  4888                           
  4889                           ;I2C_Common.c: 12: break;
  4890  07D9  2FF0               	goto	l303
  4891  07DA                     l3450:	
  4892                           ;I2C_Common.c: 14: case I2C2_MODULE:
  4893                           
  4894                           
  4895                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  4896  07DA  0878               	movf	I2C_Init@mode,w
  4897  07DB  0020               	movlb	0	; select bank0
  4898  07DC  00A0               	movwf	??_I2C_Init
  4899  07DD  0820               	movf	??_I2C_Init,w
  4900  07DE  00F3               	movwf	I2C2_Setting@mode
  4901  07DF  0879               	movf	I2C_Init@Speed,w
  4902  07E0  00A1               	movwf	??_I2C_Init+1
  4903  07E1  0821               	movf	??_I2C_Init+1,w
  4904  07E2  00F4               	movwf	I2C2_Setting@Speed
  4905  07E3  0877               	movf	I2C_Init@address,w
  4906  07E4  3186  26D6  3187   	fcall	_I2C2_Setting
  4907                           
  4908                           ;I2C_Common.c: 17: }
  4909                           
  4910                           ;I2C_Common.c: 16: break;
  4911  07E7  2FF0               	goto	l303
  4912  07E8                     l3454:	
  4913  07E8  087A               	movf	I2C_Init@I2Cx,w
  4914                           
  4915                           ; Switch size 1, requested type "space"
  4916                           ; Number of cases is 2, Range of values is 0 to 1
  4917                           ; switch strategies available:
  4918                           ; Name         Instructions Cycles
  4919                           ; simple_byte            7     4 (average)
  4920                           ; direct_byte           10     6 (fixed)
  4921                           ; jumptable            260     6 (fixed)
  4922                           ;	Chosen strategy is simple_byte
  4923  07E9  3A00               	xorlw	0	; case 0
  4924  07EA  1903               	skipnz
  4925  07EB  2FCC               	goto	l3448
  4926  07EC  3A01               	xorlw	1	; case 1
  4927  07ED  1903               	skipnz
  4928  07EE  2FDA               	goto	l3450
  4929  07EF  2FF0               	goto	l303
  4930  07F0                     l303:	
  4931                           
  4932                           ;I2C_Common.c: 19: PEIE = 1;
  4933  07F0  170B               	bsf	11,6	;volatile
  4934                           
  4935                           ;I2C_Common.c: 20: GIE = 1;
  4936  07F1  178B               	bsf	11,7	;volatile
  4937  07F2  0008               	return
  4938  07F3                     __end_of_I2C_Init:	
  4939                           
  4940                           	psect	text20
  4941  06D6                     __ptext20:	
  4942 ;; *************** function _I2C2_Setting *****************
  4943 ;; Defined at:
  4944 ;;		line 15 in file "I2C2.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;  address         1    wreg     unsigned char 
  4947 ;;  mode            1    3[COMMON] enum E2983
  4948 ;;  Speed           1    4[COMMON] enum E2987
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  address         1    6[COMMON] unsigned char 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4960 ;;      Params:         2       0       0       0       0       0
  4961 ;;      Locals:         1       0       0       0       0       0
  4962 ;;      Temps:          1       0       0       0       0       0
  4963 ;;      Totals:         4       0       0       0       0       0
  4964 ;;Total ram usage:        4 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    4
  4967 ;; This function calls:
  4968 ;;		_I2C2_PinInit
  4969 ;; This function is called by:
  4970 ;;		_I2C_Init
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           
  4975                           ;psect for function _I2C2_Setting
  4976  06D6                     _I2C2_Setting:	
  4977                           
  4978                           ;incstack = 0
  4979                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4980                           ;I2C2_Setting@address stored from wreg
  4981  06D6  00F6               	movwf	I2C2_Setting@address
  4982                           
  4983                           ;I2C2.c: 17: I2C2_PinInit();
  4984  06D7  318F  277E  3186   	fcall	_I2C2_PinInit
  4985                           
  4986                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  4987  06DA  0873               	movf	I2C2_Setting@mode,w
  4988  06DB  00F5               	movwf	??_I2C2_Setting
  4989  06DC  0875               	movf	??_I2C2_Setting,w
  4990  06DD  0021               	movlb	1	; select bank1
  4991  06DE  00B2               	movwf	(_I2C2_Config^(0+128)+18)
  4992                           
  4993                           ;I2C2.c: 20: switch(mode)
  4994  06DF  2EFF               	goto	l3240
  4995  06E0                     l361:	
  4996                           ;I2C2.c: 21: {
  4997                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  4998                           
  4999                           
  5000                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  5001  06E0  0024               	movlb	4	; select bank4
  5002  06E1  159D               	bsf	29,3	;volatile
  5003                           
  5004                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5005  06E2  0874               	movf	I2C2_Setting@Speed,w
  5006  06E3  1D03               	btfss	3,2
  5007  06E4  2EE8               	goto	l3218
  5008                           
  5009                           ;I2C2.c: 25: {
  5010                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  5011  06E5  179C               	bsf	28,7	;volatile
  5012                           
  5013                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  5014  06E6  304F               	movlw	79
  5015  06E7  2EF0               	goto	L8
  5016  06E8                     l3218:	
  5017                           ;I2C2.c: 28: }
  5018                           
  5019                           
  5020                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5021  06E8  0374               	decf	I2C2_Setting@Speed,w
  5022  06E9  1D03               	btfss	3,2
  5023  06EA  2EFD               	goto	l3236
  5024                           
  5025                           ;I2C2.c: 30: {
  5026                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  5027  06EB  307F               	movlw	127
  5028  06EC  00F5               	movwf	??_I2C2_Setting
  5029  06ED  0875               	movf	??_I2C2_Setting,w
  5030  06EE  059C               	andwf	28,f	;volatile
  5031                           
  5032                           ;I2C2.c: 32: SSP2ADD = 0x13;
  5033  06EF  3013               	movlw	19
  5034  06F0                     L8:	
  5035  06F0  009A               	movwf	26	;volatile
  5036  06F1  2EFD               	goto	l3236
  5037  06F2                     l3226:	
  5038                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  5039                           
  5040                           ;I2C2.c: 35: break;
  5041                           
  5042                           ;I2C2.c: 33: }
  5043                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  5044                           
  5045                           
  5046                           ;I2C2.c: 38: SSP2STAT = 0x00;
  5047  06F2  0024               	movlb	4	; select bank4
  5048  06F3  019C               	clrf	28	;volatile
  5049                           
  5050                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  5051  06F4  3006               	movlw	6
  5052  06F5  00F5               	movwf	??_I2C2_Setting
  5053  06F6  0875               	movf	??_I2C2_Setting,w
  5054  06F7  049D               	iorwf	29,f	;volatile
  5055                           
  5056                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  5057  06F8  141E               	bsf	30,0	;volatile
  5058                           
  5059                           ;I2C2.c: 41: SSP2ADD = address << 1;
  5060  06F9  3576               	lslf	I2C2_Setting@address,w
  5061  06FA  009A               	movwf	26	;volatile
  5062                           
  5063                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  5064  06FB  30FE               	movlw	254
  5065  06FC  009B               	movwf	27	;volatile
  5066  06FD                     l3236:	
  5067                           
  5068                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  5069  06FD  169D               	bsf	29,5	;volatile
  5070                           
  5071                           ;I2C2.c: 45: }
  5072                           
  5073                           ;I2C2.c: 44: break;
  5074  06FE  2F07               	goto	l365
  5075  06FF                     l3240:	
  5076  06FF  0873               	movf	I2C2_Setting@mode,w
  5077                           
  5078                           ; Switch size 1, requested type "space"
  5079                           ; Number of cases is 2, Range of values is 0 to 1
  5080                           ; switch strategies available:
  5081                           ; Name         Instructions Cycles
  5082                           ; simple_byte            7     4 (average)
  5083                           ; direct_byte           10     6 (fixed)
  5084                           ; jumptable            260     6 (fixed)
  5085                           ;	Chosen strategy is simple_byte
  5086  0700  3A00               	xorlw	0	; case 0
  5087  0701  1903               	skipnz
  5088  0702  2EE0               	goto	l361
  5089  0703  3A01               	xorlw	1	; case 1
  5090  0704  1903               	skipnz
  5091  0705  2EF2               	goto	l3226
  5092  0706  2F07               	goto	l365
  5093  0707                     l365:	
  5094                           
  5095                           ;I2C2.c: 46: SSP2IE = 1;
  5096  0707  0021               	movlb	1	; select bank1
  5097  0708  1414               	bsf	20,0	;volatile
  5098                           
  5099                           ;I2C2.c: 47: BCL2IE = 1;
  5100  0709  1494               	bsf	20,1	;volatile
  5101                           
  5102                           ;I2C2.c: 48: SSP2IF = 0;
  5103  070A  0020               	movlb	0	; select bank0
  5104  070B  1014               	bcf	20,0	;volatile
  5105                           
  5106                           ;I2C2.c: 49: BCL2IF = 0;
  5107  070C  1094               	bcf	20,1	;volatile
  5108  070D  0008               	return
  5109  070E                     __end_of_I2C2_Setting:	
  5110                           
  5111                           	psect	text21
  5112  0F7E                     __ptext21:	
  5113 ;; *************** function _I2C2_PinInit *****************
  5114 ;; Defined at:
  5115 ;;		line 9 in file "I2C2.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;		None
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;		None
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      void 
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5129 ;;      Params:         0       0       0       0       0       0
  5130 ;;      Locals:         0       0       0       0       0       0
  5131 ;;      Temps:          1       0       0       0       0       0
  5132 ;;      Totals:         1       0       0       0       0       0
  5133 ;;Total ram usage:        1 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    3
  5136 ;; This function calls:
  5137 ;;		Nothing
  5138 ;; This function is called by:
  5139 ;;		_I2C2_Setting
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           
  5144                           ;psect for function _I2C2_PinInit
  5145  0F7E                     _I2C2_PinInit:	
  5146                           
  5147                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  5148                           
  5149                           ;incstack = 0
  5150                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  5151  0F7E  3024               	movlw	36
  5152  0F7F  00F2               	movwf	??_I2C2_PinInit
  5153  0F80  0872               	movf	??_I2C2_PinInit,w
  5154  0F81  0021               	movlb	1	; select bank1
  5155  0F82  048D               	iorwf	13,f	;volatile
  5156                           
  5157                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  5158  0F83  30DB               	movlw	219
  5159  0F84  00F2               	movwf	??_I2C2_PinInit
  5160  0F85  0872               	movf	??_I2C2_PinInit,w
  5161  0F86  0023               	movlb	3	; select bank3
  5162  0F87  058D               	andwf	13,f	;volatile
  5163  0F88  0008               	return
  5164  0F89                     __end_of_I2C2_PinInit:	
  5165                           
  5166                           	psect	text22
  5167  070E                     __ptext22:	
  5168 ;; *************** function _I2C1_Setting *****************
  5169 ;; Defined at:
  5170 ;;		line 15 in file "I2C1.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  address         1    wreg     unsigned char 
  5173 ;;  mode            1    3[COMMON] enum E2983
  5174 ;;  Speed           1    4[COMMON] enum E2987
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  address         1    6[COMMON] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5186 ;;      Params:         2       0       0       0       0       0
  5187 ;;      Locals:         1       0       0       0       0       0
  5188 ;;      Temps:          1       0       0       0       0       0
  5189 ;;      Totals:         4       0       0       0       0       0
  5190 ;;Total ram usage:        4 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    4
  5193 ;; This function calls:
  5194 ;;		_I2C1_PinInit
  5195 ;; This function is called by:
  5196 ;;		_I2C_Init
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           
  5201                           ;psect for function _I2C1_Setting
  5202  070E                     _I2C1_Setting:	
  5203                           
  5204                           ;incstack = 0
  5205                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5206                           ;I2C1_Setting@address stored from wreg
  5207  070E  00F6               	movwf	I2C1_Setting@address
  5208                           
  5209                           ;I2C1.c: 17: I2C1_PinInit();
  5210  070F  318F  2773  3187   	fcall	_I2C1_PinInit
  5211                           
  5212                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  5213  0712  0873               	movf	I2C1_Setting@mode,w
  5214  0713  00F5               	movwf	??_I2C1_Setting
  5215  0714  0875               	movf	??_I2C1_Setting,w
  5216  0715  0021               	movlb	1	; select bank1
  5217  0716  00C5               	movwf	(_I2C1_Config^(0+128)+18)
  5218                           
  5219                           ;I2C1.c: 20: switch(mode)
  5220  0717  2F37               	goto	l3206
  5221  0718                     l498:	
  5222                           ;I2C1.c: 21: {
  5223                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  5224                           
  5225                           
  5226                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  5227  0718  0024               	movlb	4	; select bank4
  5228  0719  1595               	bsf	21,3	;volatile
  5229                           
  5230                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5231  071A  0874               	movf	I2C1_Setting@Speed,w
  5232  071B  1D03               	btfss	3,2
  5233  071C  2F20               	goto	l3184
  5234                           
  5235                           ;I2C1.c: 25: {
  5236                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  5237  071D  1794               	bsf	20,7	;volatile
  5238                           
  5239                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  5240  071E  304F               	movlw	79
  5241  071F  2F28               	goto	L9
  5242  0720                     l3184:	
  5243                           ;I2C1.c: 28: }
  5244                           
  5245                           
  5246                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5247  0720  0374               	decf	I2C1_Setting@Speed,w
  5248  0721  1D03               	btfss	3,2
  5249  0722  2F35               	goto	l3202
  5250                           
  5251                           ;I2C1.c: 30: {
  5252                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  5253  0723  307F               	movlw	127
  5254  0724  00F5               	movwf	??_I2C1_Setting
  5255  0725  0875               	movf	??_I2C1_Setting,w
  5256  0726  0594               	andwf	20,f	;volatile
  5257                           
  5258                           ;I2C1.c: 32: SSP1ADD = 0x13;
  5259  0727  3013               	movlw	19
  5260  0728                     L9:	
  5261  0728  0092               	movwf	18	;volatile
  5262  0729  2F35               	goto	l3202
  5263  072A                     l3192:	
  5264                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  5265                           
  5266                           ;I2C1.c: 35: break;
  5267                           
  5268                           ;I2C1.c: 33: }
  5269                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  5270                           
  5271                           
  5272                           ;I2C1.c: 38: SSP1STAT = 0x00;
  5273  072A  0024               	movlb	4	; select bank4
  5274  072B  0194               	clrf	20	;volatile
  5275                           
  5276                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  5277  072C  3006               	movlw	6
  5278  072D  00F5               	movwf	??_I2C1_Setting
  5279  072E  0875               	movf	??_I2C1_Setting,w
  5280  072F  0495               	iorwf	21,f	;volatile
  5281                           
  5282                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  5283  0730  1416               	bsf	22,0	;volatile
  5284                           
  5285                           ;I2C1.c: 41: SSP1ADD = address << 1;
  5286  0731  3576               	lslf	I2C1_Setting@address,w
  5287  0732  0092               	movwf	18	;volatile
  5288                           
  5289                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  5290  0733  30FE               	movlw	254
  5291  0734  0093               	movwf	19	;volatile
  5292  0735                     l3202:	
  5293                           
  5294                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  5295  0735  1695               	bsf	21,5	;volatile
  5296                           
  5297                           ;I2C1.c: 45: }
  5298                           
  5299                           ;I2C1.c: 44: break;
  5300  0736  2F3F               	goto	l502
  5301  0737                     l3206:	
  5302  0737  0873               	movf	I2C1_Setting@mode,w
  5303                           
  5304                           ; Switch size 1, requested type "space"
  5305                           ; Number of cases is 2, Range of values is 0 to 1
  5306                           ; switch strategies available:
  5307                           ; Name         Instructions Cycles
  5308                           ; simple_byte            7     4 (average)
  5309                           ; direct_byte           10     6 (fixed)
  5310                           ; jumptable            260     6 (fixed)
  5311                           ;	Chosen strategy is simple_byte
  5312  0738  3A00               	xorlw	0	; case 0
  5313  0739  1903               	skipnz
  5314  073A  2F18               	goto	l498
  5315  073B  3A01               	xorlw	1	; case 1
  5316  073C  1903               	skipnz
  5317  073D  2F2A               	goto	l3192
  5318  073E  2F3F               	goto	l502
  5319  073F                     l502:	
  5320                           
  5321                           ;I2C1.c: 46: SSP1IE = 1;
  5322  073F  0021               	movlb	1	; select bank1
  5323  0740  1591               	bsf	17,3	;volatile
  5324                           
  5325                           ;I2C1.c: 47: BCL1IE = 1;
  5326  0741  1592               	bsf	18,3	;volatile
  5327                           
  5328                           ;I2C1.c: 48: SSP1IF = 0;
  5329  0742  0020               	movlb	0	; select bank0
  5330  0743  1191               	bcf	17,3	;volatile
  5331                           
  5332                           ;I2C1.c: 49: BCL1IF = 0;
  5333  0744  1192               	bcf	18,3	;volatile
  5334  0745  0008               	return
  5335  0746                     __end_of_I2C1_Setting:	
  5336                           
  5337                           	psect	text23
  5338  0F73                     __ptext23:	
  5339 ;; *************** function _I2C1_PinInit *****************
  5340 ;; Defined at:
  5341 ;;		line 9 in file "I2C1.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5355 ;;      Params:         0       0       0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0       0
  5357 ;;      Temps:          1       0       0       0       0       0
  5358 ;;      Totals:         1       0       0       0       0       0
  5359 ;;Total ram usage:        1 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    3
  5362 ;; This function calls:
  5363 ;;		Nothing
  5364 ;; This function is called by:
  5365 ;;		_I2C1_Setting
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           
  5370                           ;psect for function _I2C1_PinInit
  5371  0F73                     _I2C1_PinInit:	
  5372                           
  5373                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  5374                           
  5375                           ;incstack = 0
  5376                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  5377  0F73  3012               	movlw	18
  5378  0F74  00F2               	movwf	??_I2C1_PinInit
  5379  0F75  0872               	movf	??_I2C1_PinInit,w
  5380  0F76  0021               	movlb	1	; select bank1
  5381  0F77  048D               	iorwf	13,f	;volatile
  5382                           
  5383                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  5384  0F78  30ED               	movlw	237
  5385  0F79  00F2               	movwf	??_I2C1_PinInit
  5386  0F7A  0872               	movf	??_I2C1_PinInit,w
  5387  0F7B  0023               	movlb	3	; select bank3
  5388  0F7C  058D               	andwf	13,f	;volatile
  5389  0F7D  0008               	return
  5390  0F7E                     __end_of_I2C1_PinInit:	
  5391                           
  5392                           	psect	text24
  5393  0FBB                     __ptext24:	
  5394 ;; *************** function _Basic_Init *****************
  5395 ;; Defined at:
  5396 ;;		line 34 in file "main.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;		None
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;		None
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      char 
  5403 ;; Registers used:
  5404 ;;		wreg, status,2
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5410 ;;      Params:         0       0       0       0       0       0
  5411 ;;      Locals:         0       0       0       0       0       0
  5412 ;;      Temps:          0       0       0       0       0       0
  5413 ;;      Totals:         0       0       0       0       0       0
  5414 ;;Total ram usage:        0 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    3
  5417 ;; This function calls:
  5418 ;;		Nothing
  5419 ;; This function is called by:
  5420 ;;		_main
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           
  5425                           ;psect for function _Basic_Init
  5426  0FBB                     _Basic_Init:	
  5427                           
  5428                           ;main.c: 36: OSCCON = 0xF0;
  5429                           
  5430                           ;incstack = 0
  5431                           ; Regs used in _Basic_Init: [wreg+status,2]
  5432  0FBB  30F0               	movlw	240
  5433  0FBC  0021               	movlb	1	; select bank1
  5434  0FBD  0099               	movwf	25	;volatile
  5435                           
  5436                           ;main.c: 40: TRISA = 0x07;
  5437  0FBE  3007               	movlw	7
  5438  0FBF  008C               	movwf	12	;volatile
  5439                           
  5440                           ;main.c: 41: ANSELA = 0x07;
  5441  0FC0  3007               	movlw	7
  5442  0FC1  0023               	movlb	3	; select bank3
  5443  0FC2  008C               	movwf	12	;volatile
  5444                           
  5445                           ;main.c: 43: TRISB = 0x40;
  5446  0FC3  3040               	movlw	64
  5447  0FC4  0021               	movlb	1	; select bank1
  5448  0FC5  008D               	movwf	13	;volatile
  5449                           
  5450                           ;main.c: 44: ANSELB = 0x00;
  5451  0FC6  0023               	movlb	3	; select bank3
  5452  0FC7  018D               	clrf	13	;volatile
  5453                           
  5454                           ;main.c: 46: APFCON0 = 0x08;
  5455  0FC8  3008               	movlw	8
  5456  0FC9  0022               	movlb	2	; select bank2
  5457  0FCA  009D               	movwf	29	;volatile
  5458                           
  5459                           ;main.c: 47: APFCON1 = 0x00;
  5460  0FCB  019E               	clrf	30	;volatile
  5461                           
  5462                           ;main.c: 49: PORTA = 0x00;
  5463  0FCC  0020               	movlb	0	; select bank0
  5464  0FCD  018C               	clrf	12	;volatile
  5465                           
  5466                           ;main.c: 50: PORTB = 0x00;
  5467  0FCE  018D               	clrf	13	;volatile
  5468  0FCF  0008               	return
  5469  0FD0                     __end_of_Basic_Init:	
  5470                           ;main.c: 52: return 0;
  5471                           ;	Return value of _Basic_Init is never used
  5472                           
  5473                           
  5474                           	psect	intentry
  5475  0004                     __pintentry:	
  5476 ;; *************** function _hand *****************
  5477 ;; Defined at:
  5478 ;;		line 56 in file "main.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;		None
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;		None
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1    wreg      void 
  5485 ;; Registers used:
  5486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5492 ;;      Params:         0       0       0       0       0       0
  5493 ;;      Locals:         0       0       0       0       0       0
  5494 ;;      Temps:          1       0       0       0       0       0
  5495 ;;      Totals:         1       0       0       0       0       0
  5496 ;;Total ram usage:        1 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    2
  5499 ;; This function calls:
  5500 ;;		_I2C_CommonInterrupt
  5501 ;; This function is called by:
  5502 ;;		Interrupt level 1
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506  0004                     _hand:	
  5507                           
  5508                           ;incstack = 0
  5509  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5510                           
  5511                           ; Regs used in _hand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5512  0005  3180               	pagesel	$
  5513  0006  0020               	movlb	0	; select bank0
  5514  0007  087F               	movf	127,w
  5515  0008  00F1               	movwf	??_hand
  5516                           
  5517                           ;main.c: 58: I2C_CommonInterrupt();
  5518  0009  318F  2761         	fcall	_I2C_CommonInterrupt
  5519  000B  0871               	movf	??_hand,w
  5520  000C  0020               	movlb	0	; select bank0
  5521  000D  00FF               	movwf	127
  5522  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5523  000F  0009               	retfie
  5524  0010                     __end_of_hand:	
  5525                           
  5526                           	psect	text26
  5527  0F61                     __ptext26:	
  5528 ;; *************** function _I2C_CommonInterrupt *****************
  5529 ;; Defined at:
  5530 ;;		line 58 in file "I2C_Common.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;		None
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;		None
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5544 ;;      Params:         0       0       0       0       0       0
  5545 ;;      Locals:         0       0       0       0       0       0
  5546 ;;      Temps:          0       0       0       0       0       0
  5547 ;;      Totals:         0       0       0       0       0       0
  5548 ;;Total ram usage:        0 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    1
  5551 ;; This function calls:
  5552 ;;		_I2C1_Interrupt
  5553 ;;		_I2C2_Interrupt
  5554 ;; This function is called by:
  5555 ;;		_hand
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           
  5560                           ;psect for function _I2C_CommonInterrupt
  5561  0F61                     _I2C_CommonInterrupt:	
  5562                           
  5563                           ;I2C_Common.c: 60: I2C1_Interrupt();
  5564                           
  5565                           ;incstack = 0
  5566                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5567  0F61  3185  25B2  318F   	fcall	_I2C1_Interrupt
  5568                           
  5569                           ;I2C_Common.c: 61: I2C2_Interrupt();
  5570  0F64  3185  255E         	fcall	_I2C2_Interrupt
  5571  0F66  0008               	return
  5572  0F67                     __end_of_I2C_CommonInterrupt:	
  5573                           
  5574                           	psect	text27
  5575  055E                     __ptext27:	
  5576 ;; *************** function _I2C2_Interrupt *****************
  5577 ;; Defined at:
  5578 ;;		line 152 in file "I2C2.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5592 ;;      Params:         0       0       0       0       0       0
  5593 ;;      Locals:         0       0       0       0       0       0
  5594 ;;      Temps:          1       0       0       0       0       0
  5595 ;;      Totals:         1       0       0       0       0       0
  5596 ;;Total ram usage:        1 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		_I2C_CommonInterrupt
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           
  5606                           ;psect for function _I2C2_Interrupt
  5607  055E                     _I2C2_Interrupt:	
  5608                           
  5609                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  5610                           
  5611                           ;incstack = 0
  5612                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  5613  055E  0020               	movlb	0	; select bank0
  5614  055F  1C14               	btfss	20,0	;volatile
  5615  0560  2DAA               	goto	i1l2704
  5616  0561  0021               	movlb	1	; select bank1
  5617  0562  1C14               	btfss	20,0	;volatile
  5618  0563  2DAA               	goto	i1l2704
  5619                           
  5620                           ;I2C2.c: 155: {
  5621                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  5622  0564  0024               	movlb	4	; select bank4
  5623  0565  1E9C               	btfss	28,5	;volatile
  5624  0566  2D81               	goto	i1l444
  5625                           
  5626                           ;I2C2.c: 157: {
  5627                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  5628  0567  1D1C               	btfss	28,2	;volatile
  5629  0568  2D74               	goto	i1l2680
  5630                           
  5631                           ;I2C2.c: 159: {
  5632                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  5633  0569  1B1E               	btfsc	30,6	;volatile
  5634  056A  2DA8               	goto	i1l2702
  5635  056B                     i1l2672:	
  5636                           ;I2C2.c: 161: {
  5637                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  5638                           
  5639  056B  081C               	movf	28,w	;volatile
  5640  056C  3901               	andlw	1
  5641  056D  00F0               	movwf	??_I2C2_Interrupt
  5642  056E  0E1D               	swapf	29,w	;volatile
  5643  056F  3901               	andlw	1
  5644  0570  0470               	iorwf	??_I2C2_Interrupt,w
  5645  0571  1D03               	btfss	3,2
  5646  0572  2D6B               	goto	i1l2672
  5647  0573  2D94               	goto	L10
  5648  0574                     i1l2680:	
  5649                           ;I2C2.c: 166: }
  5650                           ;I2C2.c: 167: }
  5651                           
  5652                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  5653                           
  5654                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  5655                           
  5656                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  5657                           
  5658                           
  5659                           ;I2C2.c: 168: else
  5660                           ;I2C2.c: 169: {
  5661                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  5662  0574  0819               	movf	25,w	;volatile
  5663  0575  00F0               	movwf	??_I2C2_Interrupt
  5664  0576  0021               	movlb	1	; select bank1
  5665  0577  0831               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  5666  0578  0086               	movwf	6
  5667  0579  0187               	clrf	7
  5668  057A  0870               	movf	??_I2C2_Interrupt,w
  5669  057B  0081               	movwf	1
  5670                           
  5671                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  5672  057C  3001               	movlw	1
  5673  057D  00F0               	movwf	??_I2C2_Interrupt
  5674  057E  0870               	movf	??_I2C2_Interrupt,w
  5675  057F  07B1               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  5676  0580  2DA6               	goto	i1l2700
  5677  0581                     i1l444:	
  5678                           ;I2C2.c: 173: }
  5679                           ;I2C2.c: 174: }
  5680                           
  5681                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  5682                           
  5683                           
  5684                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  5685  0581  1A9C               	btfsc	28,5	;volatile
  5686  0582  2DA8               	goto	i1l2702
  5687                           
  5688                           ;I2C2.c: 176: {
  5689                           ;I2C2.c: 177: SSP2BUF;
  5690  0583  0819               	movf	25,w	;volatile
  5691                           
  5692                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  5693  0584  1D1C               	btfss	28,2	;volatile
  5694  0585  2DA1               	goto	i1l2698
  5695                           
  5696                           ;I2C2.c: 180: {
  5697                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  5698  0586  30A0               	movlw	(low (_I2C2_Config| 0))& (0+255)
  5699  0587  00F0               	movwf	??_I2C2_Interrupt
  5700  0588  0870               	movf	??_I2C2_Interrupt,w
  5701  0589  0021               	movlb	1	; select bank1
  5702  058A  00B0               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  5703  058B                     i1l2692:	
  5704                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  5705                           
  5706  058B  0024               	movlb	4	; select bank4
  5707  058C  081C               	movf	28,w	;volatile
  5708  058D  3901               	andlw	1
  5709  058E  00F0               	movwf	??_I2C2_Interrupt
  5710  058F  0E1D               	swapf	29,w	;volatile
  5711  0590  3901               	andlw	1
  5712  0591  0470               	iorwf	??_I2C2_Interrupt,w
  5713  0592  1D03               	btfss	3,2
  5714  0593  2D8B               	goto	i1l2692
  5715  0594                     L10:	
  5716                           
  5717                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  5718  0594  0021               	movlb	1	; select bank1
  5719  0595  0830               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  5720  0596  0086               	movwf	6
  5721  0597  0187               	clrf	7
  5722  0598  0801               	movf	1,w
  5723  0599  0024               	movlb	4	; select bank4
  5724  059A  0099               	movwf	25	;volatile
  5725                           
  5726                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  5727  059B  3001               	movlw	1
  5728  059C  00F0               	movwf	??_I2C2_Interrupt
  5729  059D  0870               	movf	??_I2C2_Interrupt,w
  5730  059E  0021               	movlb	1	; select bank1
  5731  059F  07B0               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  5732                           
  5733                           ;I2C2.c: 186: }
  5734  05A0  2DA6               	goto	i1l2700
  5735  05A1                     i1l2698:	
  5736                           
  5737                           ;I2C2.c: 187: else
  5738                           ;I2C2.c: 188: {
  5739                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  5740  05A1  30A8               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  5741  05A2  00F0               	movwf	??_I2C2_Interrupt
  5742  05A3  0870               	movf	??_I2C2_Interrupt,w
  5743  05A4  0021               	movlb	1	; select bank1
  5744  05A5  00B1               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  5745  05A6                     i1l2700:	
  5746                           
  5747                           ;I2C2.c: 190: }
  5748                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  5749  05A6  0024               	movlb	4	; select bank4
  5750  05A7  161D               	bsf	29,4	;volatile
  5751  05A8                     i1l2702:	
  5752                           
  5753                           ;I2C2.c: 192: }
  5754                           ;I2C2.c: 193: SSP2IF = 0;
  5755  05A8  0020               	movlb	0	; select bank0
  5756  05A9  1014               	bcf	20,0	;volatile
  5757  05AA                     i1l2704:	
  5758                           
  5759                           ;I2C2.c: 194: }
  5760                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  5761  05AA  0021               	movlb	1	; select bank1
  5762  05AB  1C94               	btfss	20,1	;volatile
  5763  05AC  0008               	return
  5764  05AD  0020               	movlb	0	; select bank0
  5765  05AE  1C94               	btfss	20,1	;volatile
  5766  05AF  0008               	return
  5767                           
  5768                           ;I2C2.c: 197: BCL2IF = 0;
  5769  05B0  1094               	bcf	20,1	;volatile
  5770  05B1  0008               	return
  5771  05B2                     __end_of_I2C2_Interrupt:	
  5772                           
  5773                           	psect	text28
  5774  05B2                     __ptext28:	
  5775 ;; *************** function _I2C1_Interrupt *****************
  5776 ;; Defined at:
  5777 ;;		line 152 in file "I2C1.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;		None
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      void 
  5784 ;; Registers used:
  5785 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5791 ;;      Params:         0       0       0       0       0       0
  5792 ;;      Locals:         0       0       0       0       0       0
  5793 ;;      Temps:          1       0       0       0       0       0
  5794 ;;      Totals:         1       0       0       0       0       0
  5795 ;;Total ram usage:        1 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; This function calls:
  5798 ;;		Nothing
  5799 ;; This function is called by:
  5800 ;;		_I2C_CommonInterrupt
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           
  5805                           ;psect for function _I2C1_Interrupt
  5806  05B2                     _I2C1_Interrupt:	
  5807                           
  5808                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  5809                           
  5810                           ;incstack = 0
  5811                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  5812  05B2  0020               	movlb	0	; select bank0
  5813  05B3  1D91               	btfss	17,3	;volatile
  5814  05B4  2DFE               	goto	i1l2654
  5815  05B5  0021               	movlb	1	; select bank1
  5816  05B6  1D91               	btfss	17,3	;volatile
  5817  05B7  2DFE               	goto	i1l2654
  5818                           
  5819                           ;I2C1.c: 155: {
  5820                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  5821  05B8  0024               	movlb	4	; select bank4
  5822  05B9  1E94               	btfss	20,5	;volatile
  5823  05BA  2DD5               	goto	i1l581
  5824                           
  5825                           ;I2C1.c: 157: {
  5826                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  5827  05BB  1D14               	btfss	20,2	;volatile
  5828  05BC  2DC8               	goto	i1l2630
  5829                           
  5830                           ;I2C1.c: 159: {
  5831                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  5832  05BD  1B16               	btfsc	22,6	;volatile
  5833  05BE  2DFC               	goto	i1l2652
  5834  05BF                     i1l2622:	
  5835                           ;I2C1.c: 161: {
  5836                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  5837                           
  5838  05BF  0814               	movf	20,w	;volatile
  5839  05C0  3901               	andlw	1
  5840  05C1  00F0               	movwf	??_I2C1_Interrupt
  5841  05C2  0E15               	swapf	21,w	;volatile
  5842  05C3  3901               	andlw	1
  5843  05C4  0470               	iorwf	??_I2C1_Interrupt,w
  5844  05C5  1D03               	btfss	3,2
  5845  05C6  2DBF               	goto	i1l2622
  5846  05C7  2DE8               	goto	L11
  5847  05C8                     i1l2630:	
  5848                           ;I2C1.c: 166: }
  5849                           ;I2C1.c: 167: }
  5850                           
  5851                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  5852                           
  5853                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  5854                           
  5855                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  5856                           
  5857                           
  5858                           ;I2C1.c: 168: else
  5859                           ;I2C1.c: 169: {
  5860                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  5861  05C8  0811               	movf	17,w	;volatile
  5862  05C9  00F0               	movwf	??_I2C1_Interrupt
  5863  05CA  0021               	movlb	1	; select bank1
  5864  05CB  0844               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  5865  05CC  0086               	movwf	6
  5866  05CD  0187               	clrf	7
  5867  05CE  0870               	movf	??_I2C1_Interrupt,w
  5868  05CF  0081               	movwf	1
  5869                           
  5870                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  5871  05D0  3001               	movlw	1
  5872  05D1  00F0               	movwf	??_I2C1_Interrupt
  5873  05D2  0870               	movf	??_I2C1_Interrupt,w
  5874  05D3  07C4               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  5875  05D4  2DFA               	goto	i1l2650
  5876  05D5                     i1l581:	
  5877                           ;I2C1.c: 173: }
  5878                           ;I2C1.c: 174: }
  5879                           
  5880                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  5881                           
  5882                           
  5883                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  5884  05D5  1A94               	btfsc	20,5	;volatile
  5885  05D6  2DFC               	goto	i1l2652
  5886                           
  5887                           ;I2C1.c: 176: {
  5888                           ;I2C1.c: 177: SSP1BUF;
  5889  05D7  0811               	movf	17,w	;volatile
  5890                           
  5891                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  5892  05D8  1D14               	btfss	20,2	;volatile
  5893  05D9  2DF5               	goto	i1l2648
  5894                           
  5895                           ;I2C1.c: 180: {
  5896                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  5897  05DA  30B3               	movlw	(low (_I2C1_Config| 0))& (0+255)
  5898  05DB  00F0               	movwf	??_I2C1_Interrupt
  5899  05DC  0870               	movf	??_I2C1_Interrupt,w
  5900  05DD  0021               	movlb	1	; select bank1
  5901  05DE  00C3               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  5902  05DF                     i1l2642:	
  5903                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  5904                           
  5905  05DF  0024               	movlb	4	; select bank4
  5906  05E0  0814               	movf	20,w	;volatile
  5907  05E1  3901               	andlw	1
  5908  05E2  00F0               	movwf	??_I2C1_Interrupt
  5909  05E3  0E15               	swapf	21,w	;volatile
  5910  05E4  3901               	andlw	1
  5911  05E5  0470               	iorwf	??_I2C1_Interrupt,w
  5912  05E6  1D03               	btfss	3,2
  5913  05E7  2DDF               	goto	i1l2642
  5914  05E8                     L11:	
  5915                           
  5916                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  5917  05E8  0021               	movlb	1	; select bank1
  5918  05E9  0843               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  5919  05EA  0086               	movwf	6
  5920  05EB  0187               	clrf	7
  5921  05EC  0801               	movf	1,w
  5922  05ED  0024               	movlb	4	; select bank4
  5923  05EE  0091               	movwf	17	;volatile
  5924                           
  5925                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  5926  05EF  3001               	movlw	1
  5927  05F0  00F0               	movwf	??_I2C1_Interrupt
  5928  05F1  0870               	movf	??_I2C1_Interrupt,w
  5929  05F2  0021               	movlb	1	; select bank1
  5930  05F3  07C3               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  5931                           
  5932                           ;I2C1.c: 186: }
  5933  05F4  2DFA               	goto	i1l2650
  5934  05F5                     i1l2648:	
  5935                           
  5936                           ;I2C1.c: 187: else
  5937                           ;I2C1.c: 188: {
  5938                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  5939  05F5  30BB               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  5940  05F6  00F0               	movwf	??_I2C1_Interrupt
  5941  05F7  0870               	movf	??_I2C1_Interrupt,w
  5942  05F8  0021               	movlb	1	; select bank1
  5943  05F9  00C4               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  5944  05FA                     i1l2650:	
  5945                           
  5946                           ;I2C1.c: 190: }
  5947                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  5948  05FA  0024               	movlb	4	; select bank4
  5949  05FB  1615               	bsf	21,4	;volatile
  5950  05FC                     i1l2652:	
  5951                           
  5952                           ;I2C1.c: 192: }
  5953                           ;I2C1.c: 193: SSP1IF = 0;
  5954  05FC  0020               	movlb	0	; select bank0
  5955  05FD  1191               	bcf	17,3	;volatile
  5956  05FE                     i1l2654:	
  5957                           
  5958                           ;I2C1.c: 194: }
  5959                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  5960  05FE  0021               	movlb	1	; select bank1
  5961  05FF  1D92               	btfss	18,3	;volatile
  5962  0600  0008               	return
  5963  0601  0020               	movlb	0	; select bank0
  5964  0602  1D92               	btfss	18,3	;volatile
  5965  0603  0008               	return
  5966                           
  5967                           ;I2C1.c: 197: BCL1IF = 0;
  5968  0604  1192               	bcf	18,3	;volatile
  5969  0605  0008               	return
  5970  0606                     __end_of_I2C1_Interrupt:	
  5971  007E                     btemp	set	126	;btemp
  5972  007E                     int$flags	set	126
  5973  007E                     wtemp0	set	126


Data Sizes:
    Strings     40
    Constant    0
    Data        4
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     73      77
    BANK1            80      8      50
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    I2C1_Receive@pData	PTR unsigned char  size(1) Largest target is 4
		 -> main@resultdata(BANK1[4]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 4
		 -> main@testdata(BANK1[4]), 

    I2C2_Receive@pData	PTR unsigned char  size(1) Largest target is 4
		 -> main@resultdata(BANK1[4]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 4
		 -> main@testdata(BANK1[4]), 

    I2C_Receive@pData	PTR unsigned char  size(1) Largest target is 4
		 -> main@resultdata(BANK1[4]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 4
		 -> main@testdata(BANK1[4]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK1[19]), I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK1[19]), I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), 

    S269$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK1[19]), I2C2_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), I2C2_Config(BANK1[19]), 

    S269$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK1[19]), I2C2_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), I2C2_Config(BANK1[19]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[12]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[12]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _main->_I2C_Init
    _xvprintf->___lldiv
    _xvprintf->___llmod
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Receive->_I2C1_Receive
    _I2C_Receive->_I2C2_Receive
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _hand in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv

Critical Paths under _hand in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _hand in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hand in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hand in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hand in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    9758
                                             65 BANK0      8     8      0
                                              0 BANK1      8     8      0
                         _Basic_Init
                           _I2C_Init
                        _I2C_Receive
                       _I2C_Transmit
                 _LCD_CursorPosition
                           _LCD_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                             12     2     10    4695
                                             53 BANK0     12     2     10
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    4215
                                              5 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     337
                                              8 COMMON     2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     262
                                              6 COMMON     2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     196
                                              5 COMMON     1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     220
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     290
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              6 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              5 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     196
                                              5 COMMON     3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0      88
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Transmit                                         8     5      3    1715
                                              0 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C2_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Receive                                          8     5      3    1673
                                              0 BANK0      8     5      3
                       _I2C1_Receive
                       _I2C2_Receive
 ---------------------------------------------------------------------------------
 (2) _I2C2_Receive                                         8     6      2     606
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Receive                                         8     6      2     606
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             6     3      3    1066
                                              7 COMMON     4     1      3
                                              0 BANK0      2     2      0
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (2) _I2C2_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (3) _I2C2_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (3) _I2C1_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _hand                                                 1     1      0       0
                                              1 COMMON     1     1      0
                _I2C_CommonInterrupt
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _I2C_Init
     _I2C1_Setting
       _I2C1_PinInit
     _I2C2_Setting
       _I2C2_PinInit
   _I2C_Receive
     _I2C1_Receive
     _I2C2_Receive
   _I2C_Transmit
     _I2C1_Transmit
     _I2C2_Transmit
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _hand (ROOT)
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     49      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      32       8       62.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      8B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Mar  7 12:36:49 2017

                 __CFG_CP$OFF 0000                I2C2_Transmit@i 0077         ??_I2C_CommonInterrupt 0071  
         ___wmul@multiplicand 0074                           l121 0034                           l303 07F0  
                         l136 00B0                           l154 014B                           l413 0275  
                         l502 073F                           l422 028C                           l319 079E  
                         l361 06E0                           l177 0202                           l435 02BF  
                         l515 0414                           l428 02AE                           l524 0437  
                         l365 0707                           l429 02AF                           l533 044E  
                         l550 0306                           l378 0396                           l387 03B9  
                         l572 0350                           l396 03D0                           l565 033F  
                         l566 0340                           l559 031D                           l680 0FED  
                         l498 0718                           _GIE 005F                           _RA3 0063  
                         _RA4 0064                  __CFG_CPD$OFF 0000          __size_of_I2C_Receive 002C  
                __CFG_BORV$LO 0000                           wreg 0009                    _Basic_Init 0FBB  
                __CFG_LVP$OFF 0000               __end_of_LCD_Put 0F6D                          l2112 0FE7  
                        l2104 0FA9                          l2130 0617                          l3002 0688  
                        l2140 0645                          l2132 0625                          l3100 0129  
                        l3006 0693                          l3102 012E                          l3022 004D  
                        l2144 0650                          l3112 0165                          l3202 0735  
                        l3114 017A                          l3106 0133                          l3140 01E8  
                        l3124 01A4                          l3116 0183                          l3052 00A0  
                        l3044 0076                          l3036 0062                          l3206 0737  
                        l2094 0764                          l2086 0755                          l3126 01A6  
                        l3118 0193                          l3046 0079                          l3240 06FF  
                        l3400 026A                          l3320 03A5                          l3160 0221  
                        l3152 0210                          l3136 01E0                          l3080 00E6  
                        l3072 00CB                          l3064 00BD                          l3056 00A8  
                        l3226 06F2                          l3218 06E8                          l3410 0283  
                        l3322 03C6                          l3170 0249                          l3162 0225  
                        l3090 0100                          l3082 00EA                          l3236 06FD  
                        l3244 0400                          l3332 03D5                          l3308 03A9  
                        l3340 03F3                          l3172 024D                          l3092 0115  
                        l3350 02FB                          l3414 0298                          l3422 027F  
                        l3270 0444                          l3246 040A                          l3334 03EC  
                        l3342 03FC                          l3318 03A1                          l3166 0237  
                        l3158 0218                          l3094 0122                          l3086 00FC  
                        l3078 00D8                          l3192 072A                          l3184 0720  
                        l3360 0314                          l3424 02B5                          l3440 02E4  
                        l3280 0453                          l3256 0427                          l3336 03F1  
                        l3096 0125                          l3450 07DA                          l3434 02C4  
                        l3442 02ED                          l3282 046A                          l3290 047A  
                        l3266 041F                          l3098 0127                          l3364 0329  
                        l3372 0310                          l3348 02F1                          l3436 02DB  
                        l3284 046F                          l3268 0423                          l3460 07AF  
                        l3454 07E8                          l3374 0346                          l3390 0375  
                        l3448 07CC                          l3384 0355                          l3392 037E  
                        l3472 0776                          l3288 0471                          l3296 0382  
                        l3464 07C0                          l3386 036C                          l3474 0786  
                        l3298 038C                          l3466 07C8                          l3458 07A2  
                        l3398 0260                          l3478 0796                          l3494 049C  
                        l2996 0662                          l2998 0670                          STR_1 07F3  
                        STR_2 0819                          STR_3 07FF                          STR_4 080D  
                        STR_5 0813                          STR_6 0806                          u1605 06A4  
                        u4007 0515                          u4017 0528                          u1705 061A  
                        u3065 0665                          u4027 053C                          u3235 00FA  
                        u4037 0F92                          u1725 0626                          u3085 067E  
                        u3245 010E                          u4047 0FE1                          u1735 063A  
                        u3095 0689                          u4057 069E                          u1745 0646  
                        u1665 0FEE                          u1675 0FF3                          u3365 0235  
                        u3385 025B                          _PEIE 005E                          u2865 0FD6  
                        u3997 04FD               ??_I2C1_Transmit 0074                  __CFG_WRT$OFF 0000  
                        _hand 0004                          _main 047C              __end_of_I2C_Init 07F3  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0074  
            ??_I2C1_Interrupt 0070                          start 0010                 __CFG_IESO$OFF 0000  
               _LCD_WriteData 069C                 __CFG_MCLRE$ON 0000              ??_I2C2_Interrupt 0070  
    __end_of_LCD_DisplayClear 0F98         __size_of_I2C_Transmit 002B              __end_of_LCD_Init 055E  
               __CFG_PLLEN$ON 0000                         ?_hand 0070                   LCD_Put@word 0075  
                       ?_main 0070                 __CFG_WDTE$OFF 0000               __end_of___lldiv 0659  
             __end_of___llmod 069C                         i1l444 0581                         i1l581 05D5  
                       _PORTA 000C                         _PORTB 000D                         _TRISA 008C  
                       _TRISB 008D             I2C2_Transmit@size 0073                 __CFG_PWRTE$ON 0000  
              __CFG_FCMEN$OFF 0000                         _xputc 0746                         _xputs 0FA8  
                       pclath 000A                  main@testdata 00C6                         status 0003  
                       wtemp0 007E               __end_of_xprintf 0FA8                  _I2C_Transmit 079F  
          _LCD_CursorPosition 0FD0                ?_LCD_WriteData 0070               __initialization 0012  
                __end_of_hand 0010                  __end_of_main 04F5           ?_LCD_CursorPosition 0075  
                      ??_hand 0071                        ??_main 0061             I2C_Receive@result 0026  
           I2C1_Receive@i_640 0079             I2C1_Receive@pData 0072                     ??_LCD_Put 0076  
                 ?_Basic_Init 0070                        _BCL1IE 0493                        _BCL1IF 0093  
                      _BCL2IE 04A1                        _BCL2IF 00A1              ___llmod@dividend 0076  
        ??_LCD_CursorPosition 0076                        _ANSELA 018C                        _ANSELB 018D  
                      ?_xputc 0070                        ?_xputs 0070                        i1l2700 05A6  
                      i1l2622 05BF                        i1l2630 05C8                        i1l2702 05A8  
                      i1l2704 05AA                        i1l2650 05FA                        i1l2642 05DF  
                      i1l2652 05FC                        i1l2654 05FE                        i1l2648 05F5  
                      i1l2672 056B                        i1l2680 0574                        i1l2692 058B  
                      i1l2698 05A1            I2C2_Transmit@i_494 0078                        _OSCCON 0099  
          I2C2_Transmit@pData 0072                        _SSP1IE 048B                        _SSP1IF 008B  
                      _SSP2IE 04A0                        _SSP2IF 00A0                        ___wmul 0FE5  
                   ??___lldiv 007A                     ??___llmod 007A                        _outptr 007B  
            I2C_Transmit@I2Cx 0026                     ?_I2C_Init 0077              I2C_Transmit@size 0022  
                      xputc@c 0077                     ??_xprintf 005F       __end_of__initialization 0030  
                   ?_LCD_Init 0070               ??_LCD_WriteData 0072              __end_of_xvprintf 025E  
              __pcstackCOMMON 0070           __size_of_Basic_Init 0015                  __pidataBANK1 0F5D  
               __end_of_xputc 0773                 __end_of_xputs 0FBB            I2C_Receive@address 0020  
                  ??_I2C_Init 0020           I2C1_Transmit@result 0079                       ??_xputc 0076  
                     ??_xputs 0078                    __pbssBANK0 0069                    __pbssBANK1 00A0  
                  ??_LCD_Init 0076                  I2C_Init@I2Cx 007A            I2C1_Receive@result 0077  
 __end_of_I2C_CommonInterrupt 0F67                  I2C_Init@mode 0078                    __pmaintext 047C  
                     ?___wmul 0072                    __pintentry 0004             ?_LCD_DisplayClear 0070  
                     _APFCON0 011D                       _APFCON1 011E                 ??_I2C_Receive 0023  
          ??_LCD_DisplayClear 0075                       _LCD_Put 0F67                  _xvprintf$197 003C  
                _xvprintf$198 0040                  _xvprintf$199 0042                       _SSP1ADD 0212  
                     _SSP2ADD 021A                       _SSP1BUF 0211                       _SSP2BUF 0219  
                     _SSP1MSK 0213                       _SSP2MSK 021B           I2C2_Transmit@result 0079  
       __end_of_I2C1_Transmit 047C         __end_of_I2C2_Transmit 03FE                       ___lldiv 0606  
             __size_of___wmul 001B                       ___llmod 0659               __CFG_STVREN$OFF 0000  
                     __ptext1 0F98                       __ptext2 0034                       __ptext3 0FA8  
                     __ptext4 0746                       __ptext5 0F67                       __ptext6 0FE5  
                     __ptext7 0659                       __ptext8 0606                       __ptext9 04F5  
           I2C2_Receive@i_501 0079             I2C2_Receive@pData 0072                     ?_xvprintf 0025  
                ??_Basic_Init 0072           __end_of_I2C_Receive 079F                       clrloop0 0F6E  
        end_of_initialization 0030                       _xprintf 0F98                main@resultdata 00CA  
               ?_I2C1_PinInit 0070                 ?_I2C1_Receive 0072                 ?_I2C2_PinInit 0070  
               ?_I2C2_Receive 0072                   _I2C1_Config 00B3                   _I2C2_Config 00A0  
               ?_I2C1_Setting 0073               ___lldiv@divisor 0072                 ?_I2C2_Setting 0073  
             ___lldiv@counter 0024             I2C_Transmit@pData 0021            __end_of_Basic_Init 0FD0  
                __pstringtext 07F3       __size_of_I2C1_Interrupt 0054              __CFG_FOSC$INTOSC 0000  
                  ??_xvprintf 0028       __size_of_I2C2_Interrupt 0054             __size_of_I2C_Init 0029  
         I2C1_Setting@address 0076   __size_of_LCD_CursorPosition 0015                ??_I2C1_PinInit 0072  
              ??_I2C1_Receive 0074                ??_I2C2_PinInit 0072                ??_I2C2_Receive 0074  
              ??_I2C1_Setting 0075                ??_I2C2_Setting 0075             __size_of_LCD_Init 0069  
              __end_of___wmul 1000                   _I2C_Receive 0773           start_initialization 0012  
            I2C_Receive@pData 0021          I2C1_Transmit@address 0076              I2C1_Receive@size 0073  
         I2C2_Setting@address 0076               ___llmod@divisor 0072               ___llmod@counter 0020  
        LCD_CursorPosition@tx 0077          LCD_CursorPosition@ty 0075         __end_of_LCD_WriteData 06D6  
                    ??___wmul 0076                   __pdataBANK1 00CE             I2C1_Setting@Speed 0074  
                    ?_LCD_Put 0075                   __pbssCOMMON 007B                     ___latbits 0001  
               __pcstackBANK0 0020                 __pcstackBANK1 00C6           I2C1_Receive@address 0076  
          I2C1_Transmit@i_633 0078            I2C1_Transmit@pData 0072     __size_of_LCD_DisplayClear 000F  
             I2C_Init@address 0077                 ?_I2C_Transmit 0020                 I2C_Init@Speed 0079  
                    ?___lldiv 0072                      ?___llmod 0072                _I2C1_Interrupt 05B2  
        __end_of_I2C1_PinInit 0F7E          __end_of_I2C1_Receive 0380  __size_of_I2C_CommonInterrupt 0006  
        __end_of_I2C2_PinInit 0F89          __end_of_I2C2_Receive 02EF          __end_of_I2C1_Setting 0746  
                    _I2C_Init 07CA          __end_of_I2C2_Setting 070E                _I2C2_Interrupt 055E  
           __size_of_xvprintf 022A                      ?_xprintf 0055                __size_of_xputc 002D  
              __size_of_xputs 0013           I2C2_Receive@address 0076              I2C2_Receive@size 0073  
                    _LCD_Init 04F5                ___wmul@product 0076                ??_I2C_Transmit 0023  
                   clear_ram0 0F6D                     main@F3055 00CE        __end_of_I2C1_Interrupt 0606  
                    _SSP1CON1 0215                      _SSP1CON2 0216          I2C2_Transmit@address 0076  
                    _SSP2CON1 021D                      _SSP2CON2 021E                      _SSP1STAT 0214  
                    _SSP2STAT 021C             ___wmul@multiplier 0072        __end_of_I2C2_Interrupt 05B2  
      __size_of_I2C1_Transmit 007E                     _xfunc_out 006B              __size_of_LCD_Put 0006  
      __size_of_I2C2_Transmit 007E               I2C_Receive@I2Cx 0027               I2C_Receive@size 0022  
             ?_I2C1_Interrupt 0070              __size_of___lldiv 0053              __size_of___llmod 0043  
            I2C1_Setting@mode 0073            LCD_WriteData@point 0074                  ?_I2C_Receive 0020  
             ?_I2C2_Interrupt 0070             I2C1_Transmit@size 0073    __end_of_LCD_CursorPosition 0FE5  
                    __ptext10 0F89                      __ptext11 0FD0                      __ptext20 06D6  
                    __ptext12 069C                      __ptext21 0F7E                      __ptext13 079F  
                    __ptext22 070E                      __ptext14 0380                      __ptext23 0F73  
                    __ptext15 03FE                      __ptext24 0FBB                      __ptext16 0773  
                    __ptext17 025E                      __ptext26 0F61                      __ptext18 02EF  
                    __ptext27 055E                      __ptext19 07CA                      __ptext28 05B2  
                _SSP1CON1bits 0215                  _SSP1CON2bits 0216              _LCD_DisplayClear 0F89  
                _SSP2CON1bits 021D                  _SSP2CON2bits 021E              __size_of_xprintf 0010  
               __size_of_hand 000C                 __size_of_main 0079                 _I2C1_Transmit 03FE  
               _I2C2_Transmit 0380         __size_of_I2C1_PinInit 000B            I2C2_Receive@result 0077  
       __size_of_I2C1_Receive 0091                      int$flags 007E         __size_of_I2C2_PinInit 000B  
         I2C_Transmit@address 0020         __size_of_I2C2_Receive 0091         __size_of_I2C1_Setting 0038  
                _SSP1STATbits 0214                      _xfunc_in 0069         __size_of_I2C2_Setting 0038  
                _SSP2STATbits 021C          __end_of_I2C_Transmit 07CA             I2C2_Setting@Speed 0074  
                    _xvprintf 0034                    xprintf@arp 0060                    xprintf@fmt 0055  
                    intlevel1 0000           _I2C_CommonInterrupt 0F61                  _I2C1_PinInit 0F73  
                _I2C1_Receive 02EF              ___lldiv@dividend 0076                ?_I2C1_Transmit 0072  
           __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 0F7E                  _I2C2_Receive 025E  
                _I2C1_Setting 070E                ?_I2C2_Transmit 0072                  _I2C2_Setting 06D6  
                 xvprintf@arp 0027                   xvprintf@fmt 0025                 I2C1_Receive@i 0078  
          I2C_Transmit@result 0027              I2C2_Setting@mode 0073          ?_I2C_CommonInterrupt 0070  
            ___lldiv@quotient 0020                 I2C2_Receive@i 0078        __size_of_LCD_WriteData 003A  
              I2C1_Transmit@i 0077                      xputs@str 0079                     xvprintf@c 0054  
                   xvprintf@d 0053                     xvprintf@f 004F                     xvprintf@i 0051  
                   xvprintf@j 0049                     xvprintf@p 0044                     xvprintf@r 0045  
                   xvprintf@s 002C                     xvprintf@v 004B                     xvprintf@w 0047  
