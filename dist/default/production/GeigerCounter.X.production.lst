

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Jun 22 08:44:18 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	dabs	1,0x7E,2
    65  0000                     
    66                           ; Version 1.41
    67                           ; Generated 25/01/2017 GMT
    68                           ; 
    69                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F1827 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0014                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0016                     	;# 
   121  0017                     	;# 
   122  0018                     	;# 
   123  0019                     	;# 
   124  001A                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  0111                     	;# 
   149  0112                     	;# 
   150  0113                     	;# 
   151  0114                     	;# 
   152  0115                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  0118                     	;# 
   156  0119                     	;# 
   157  011A                     	;# 
   158  011B                     	;# 
   159  011D                     	;# 
   160  011E                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0191                     	;# 
   164  0191                     	;# 
   165  0192                     	;# 
   166  0193                     	;# 
   167  0193                     	;# 
   168  0193                     	;# 
   169  0194                     	;# 
   170  0195                     	;# 
   171  0196                     	;# 
   172  0199                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019C                     	;# 
   179  019C                     	;# 
   180  019D                     	;# 
   181  019E                     	;# 
   182  019F                     	;# 
   183  020C                     	;# 
   184  020D                     	;# 
   185  0211                     	;# 
   186  0211                     	;# 
   187  0212                     	;# 
   188  0212                     	;# 
   189  0213                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0214                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0216                     	;# 
   197  0216                     	;# 
   198  0217                     	;# 
   199  0217                     	;# 
   200  0219                     	;# 
   201  021A                     	;# 
   202  021B                     	;# 
   203  021C                     	;# 
   204  021D                     	;# 
   205  021E                     	;# 
   206  021F                     	;# 
   207  0291                     	;# 
   208  0291                     	;# 
   209  0292                     	;# 
   210  0293                     	;# 
   211  0294                     	;# 
   212  0295                     	;# 
   213  0295                     	;# 
   214  0296                     	;# 
   215  0298                     	;# 
   216  0298                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029B                     	;# 
   220  029C                     	;# 
   221  029C                     	;# 
   222  029D                     	;# 
   223  029E                     	;# 
   224  029E                     	;# 
   225  0311                     	;# 
   226  0311                     	;# 
   227  0312                     	;# 
   228  0313                     	;# 
   229  0318                     	;# 
   230  0318                     	;# 
   231  0319                     	;# 
   232  031A                     	;# 
   233  0394                     	;# 
   234  0395                     	;# 
   235  0396                     	;# 
   236  039A                     	;# 
   237  039C                     	;# 
   238  039D                     	;# 
   239  039E                     	;# 
   240  039F                     	;# 
   241  0415                     	;# 
   242  0416                     	;# 
   243  0417                     	;# 
   244  041C                     	;# 
   245  041D                     	;# 
   246  041E                     	;# 
   247  0FE4                     	;# 
   248  0FE5                     	;# 
   249  0FE6                     	;# 
   250  0FE7                     	;# 
   251  0FE8                     	;# 
   252  0FE9                     	;# 
   253  0FEA                     	;# 
   254  0FEB                     	;# 
   255  0FED                     	;# 
   256  0FEE                     	;# 
   257  0FEF                     	;# 
   258  0000                     	;# 
   259  0001                     	;# 
   260  0002                     	;# 
   261  0003                     	;# 
   262  0004                     	;# 
   263  0005                     	;# 
   264  0006                     	;# 
   265  0007                     	;# 
   266  0008                     	;# 
   267  0009                     	;# 
   268  000A                     	;# 
   269  000B                     	;# 
   270  000C                     	;# 
   271  000D                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001E                     	;# 
   286  001F                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  0111                     	;# 
   307  0112                     	;# 
   308  0113                     	;# 
   309  0114                     	;# 
   310  0115                     	;# 
   311  0116                     	;# 
   312  0117                     	;# 
   313  0118                     	;# 
   314  0119                     	;# 
   315  011A                     	;# 
   316  011B                     	;# 
   317  011D                     	;# 
   318  011E                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0191                     	;# 
   322  0191                     	;# 
   323  0192                     	;# 
   324  0193                     	;# 
   325  0193                     	;# 
   326  0193                     	;# 
   327  0194                     	;# 
   328  0195                     	;# 
   329  0196                     	;# 
   330  0199                     	;# 
   331  019A                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019B                     	;# 
   335  019B                     	;# 
   336  019C                     	;# 
   337  019C                     	;# 
   338  019D                     	;# 
   339  019E                     	;# 
   340  019F                     	;# 
   341  020C                     	;# 
   342  020D                     	;# 
   343  0211                     	;# 
   344  0211                     	;# 
   345  0212                     	;# 
   346  0212                     	;# 
   347  0213                     	;# 
   348  0213                     	;# 
   349  0214                     	;# 
   350  0214                     	;# 
   351  0215                     	;# 
   352  0215                     	;# 
   353  0215                     	;# 
   354  0216                     	;# 
   355  0216                     	;# 
   356  0217                     	;# 
   357  0217                     	;# 
   358  0219                     	;# 
   359  021A                     	;# 
   360  021B                     	;# 
   361  021C                     	;# 
   362  021D                     	;# 
   363  021E                     	;# 
   364  021F                     	;# 
   365  0291                     	;# 
   366  0291                     	;# 
   367  0292                     	;# 
   368  0293                     	;# 
   369  0294                     	;# 
   370  0295                     	;# 
   371  0295                     	;# 
   372  0296                     	;# 
   373  0298                     	;# 
   374  0298                     	;# 
   375  0299                     	;# 
   376  029A                     	;# 
   377  029B                     	;# 
   378  029C                     	;# 
   379  029C                     	;# 
   380  029D                     	;# 
   381  029E                     	;# 
   382  029E                     	;# 
   383  0311                     	;# 
   384  0311                     	;# 
   385  0312                     	;# 
   386  0313                     	;# 
   387  0318                     	;# 
   388  0318                     	;# 
   389  0319                     	;# 
   390  031A                     	;# 
   391  0394                     	;# 
   392  0395                     	;# 
   393  0396                     	;# 
   394  039A                     	;# 
   395  039C                     	;# 
   396  039D                     	;# 
   397  039E                     	;# 
   398  039F                     	;# 
   399  0415                     	;# 
   400  0416                     	;# 
   401  0417                     	;# 
   402  041C                     	;# 
   403  041D                     	;# 
   404  041E                     	;# 
   405  0FE4                     	;# 
   406  0FE5                     	;# 
   407  0FE6                     	;# 
   408  0FE7                     	;# 
   409  0FE8                     	;# 
   410  0FE9                     	;# 
   411  0FEA                     	;# 
   412  0FEB                     	;# 
   413  0FED                     	;# 
   414  0FEE                     	;# 
   415  0FEF                     	;# 
   416  0000                     	;# 
   417  0001                     	;# 
   418  0002                     	;# 
   419  0003                     	;# 
   420  0004                     	;# 
   421  0005                     	;# 
   422  0006                     	;# 
   423  0007                     	;# 
   424  0008                     	;# 
   425  0009                     	;# 
   426  000A                     	;# 
   427  000B                     	;# 
   428  000C                     	;# 
   429  000D                     	;# 
   430  0011                     	;# 
   431  0012                     	;# 
   432  0013                     	;# 
   433  0014                     	;# 
   434  0015                     	;# 
   435  0016                     	;# 
   436  0016                     	;# 
   437  0017                     	;# 
   438  0018                     	;# 
   439  0019                     	;# 
   440  001A                     	;# 
   441  001B                     	;# 
   442  001C                     	;# 
   443  001E                     	;# 
   444  001F                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0094                     	;# 
   451  0095                     	;# 
   452  0096                     	;# 
   453  0097                     	;# 
   454  0098                     	;# 
   455  0099                     	;# 
   456  009A                     	;# 
   457  009B                     	;# 
   458  009B                     	;# 
   459  009C                     	;# 
   460  009D                     	;# 
   461  009E                     	;# 
   462  010C                     	;# 
   463  010D                     	;# 
   464  0111                     	;# 
   465  0112                     	;# 
   466  0113                     	;# 
   467  0114                     	;# 
   468  0115                     	;# 
   469  0116                     	;# 
   470  0117                     	;# 
   471  0118                     	;# 
   472  0119                     	;# 
   473  011A                     	;# 
   474  011B                     	;# 
   475  011D                     	;# 
   476  011E                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0191                     	;# 
   480  0191                     	;# 
   481  0192                     	;# 
   482  0193                     	;# 
   483  0193                     	;# 
   484  0193                     	;# 
   485  0194                     	;# 
   486  0195                     	;# 
   487  0196                     	;# 
   488  0199                     	;# 
   489  019A                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019B                     	;# 
   494  019C                     	;# 
   495  019C                     	;# 
   496  019D                     	;# 
   497  019E                     	;# 
   498  019F                     	;# 
   499  020C                     	;# 
   500  020D                     	;# 
   501  0211                     	;# 
   502  0211                     	;# 
   503  0212                     	;# 
   504  0212                     	;# 
   505  0213                     	;# 
   506  0213                     	;# 
   507  0214                     	;# 
   508  0214                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0215                     	;# 
   512  0216                     	;# 
   513  0216                     	;# 
   514  0217                     	;# 
   515  0217                     	;# 
   516  0219                     	;# 
   517  021A                     	;# 
   518  021B                     	;# 
   519  021C                     	;# 
   520  021D                     	;# 
   521  021E                     	;# 
   522  021F                     	;# 
   523  0291                     	;# 
   524  0291                     	;# 
   525  0292                     	;# 
   526  0293                     	;# 
   527  0294                     	;# 
   528  0295                     	;# 
   529  0295                     	;# 
   530  0296                     	;# 
   531  0298                     	;# 
   532  0298                     	;# 
   533  0299                     	;# 
   534  029A                     	;# 
   535  029B                     	;# 
   536  029C                     	;# 
   537  029C                     	;# 
   538  029D                     	;# 
   539  029E                     	;# 
   540  029E                     	;# 
   541  0311                     	;# 
   542  0311                     	;# 
   543  0312                     	;# 
   544  0313                     	;# 
   545  0318                     	;# 
   546  0318                     	;# 
   547  0319                     	;# 
   548  031A                     	;# 
   549  0394                     	;# 
   550  0395                     	;# 
   551  0396                     	;# 
   552  039A                     	;# 
   553  039C                     	;# 
   554  039D                     	;# 
   555  039E                     	;# 
   556  039F                     	;# 
   557  0415                     	;# 
   558  0416                     	;# 
   559  0417                     	;# 
   560  041C                     	;# 
   561  041D                     	;# 
   562  041E                     	;# 
   563  0FE4                     	;# 
   564  0FE5                     	;# 
   565  0FE6                     	;# 
   566  0FE7                     	;# 
   567  0FE8                     	;# 
   568  0FE9                     	;# 
   569  0FEA                     	;# 
   570  0FEB                     	;# 
   571  0FED                     	;# 
   572  0FEE                     	;# 
   573  0FEF                     	;# 
   574  0000                     	;# 
   575  0001                     	;# 
   576  0002                     	;# 
   577  0003                     	;# 
   578  0004                     	;# 
   579  0005                     	;# 
   580  0006                     	;# 
   581  0007                     	;# 
   582  0008                     	;# 
   583  0009                     	;# 
   584  000A                     	;# 
   585  000B                     	;# 
   586  000C                     	;# 
   587  000D                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0014                     	;# 
   592  0015                     	;# 
   593  0016                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  0019                     	;# 
   598  001A                     	;# 
   599  001B                     	;# 
   600  001C                     	;# 
   601  001E                     	;# 
   602  001F                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  0091                     	;# 
   606  0092                     	;# 
   607  0093                     	;# 
   608  0094                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0097                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009A                     	;# 
   615  009B                     	;# 
   616  009B                     	;# 
   617  009C                     	;# 
   618  009D                     	;# 
   619  009E                     	;# 
   620  010C                     	;# 
   621  010D                     	;# 
   622  0111                     	;# 
   623  0112                     	;# 
   624  0113                     	;# 
   625  0114                     	;# 
   626  0115                     	;# 
   627  0116                     	;# 
   628  0117                     	;# 
   629  0118                     	;# 
   630  0119                     	;# 
   631  011A                     	;# 
   632  011B                     	;# 
   633  011D                     	;# 
   634  011E                     	;# 
   635  018C                     	;# 
   636  018D                     	;# 
   637  0191                     	;# 
   638  0191                     	;# 
   639  0192                     	;# 
   640  0193                     	;# 
   641  0193                     	;# 
   642  0193                     	;# 
   643  0194                     	;# 
   644  0195                     	;# 
   645  0196                     	;# 
   646  0199                     	;# 
   647  019A                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019B                     	;# 
   652  019C                     	;# 
   653  019C                     	;# 
   654  019D                     	;# 
   655  019E                     	;# 
   656  019F                     	;# 
   657  020C                     	;# 
   658  020D                     	;# 
   659  0211                     	;# 
   660  0211                     	;# 
   661  0212                     	;# 
   662  0212                     	;# 
   663  0213                     	;# 
   664  0213                     	;# 
   665  0214                     	;# 
   666  0214                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0216                     	;# 
   671  0216                     	;# 
   672  0217                     	;# 
   673  0217                     	;# 
   674  0219                     	;# 
   675  021A                     	;# 
   676  021B                     	;# 
   677  021C                     	;# 
   678  021D                     	;# 
   679  021E                     	;# 
   680  021F                     	;# 
   681  0291                     	;# 
   682  0291                     	;# 
   683  0292                     	;# 
   684  0293                     	;# 
   685  0294                     	;# 
   686  0295                     	;# 
   687  0295                     	;# 
   688  0296                     	;# 
   689  0298                     	;# 
   690  0298                     	;# 
   691  0299                     	;# 
   692  029A                     	;# 
   693  029B                     	;# 
   694  029C                     	;# 
   695  029C                     	;# 
   696  029D                     	;# 
   697  029E                     	;# 
   698  029E                     	;# 
   699  0311                     	;# 
   700  0311                     	;# 
   701  0312                     	;# 
   702  0313                     	;# 
   703  0318                     	;# 
   704  0318                     	;# 
   705  0319                     	;# 
   706  031A                     	;# 
   707  0394                     	;# 
   708  0395                     	;# 
   709  0396                     	;# 
   710  039A                     	;# 
   711  039C                     	;# 
   712  039D                     	;# 
   713  039E                     	;# 
   714  039F                     	;# 
   715  0415                     	;# 
   716  0416                     	;# 
   717  0417                     	;# 
   718  041C                     	;# 
   719  041D                     	;# 
   720  041E                     	;# 
   721  0FE4                     	;# 
   722  0FE5                     	;# 
   723  0FE6                     	;# 
   724  0FE7                     	;# 
   725  0FE8                     	;# 
   726  0FE9                     	;# 
   727  0FEA                     	;# 
   728  0FEB                     	;# 
   729  0FED                     	;# 
   730  0FEE                     	;# 
   731  0FEF                     	;# 
   732  0000                     	;# 
   733  0001                     	;# 
   734  0002                     	;# 
   735  0003                     	;# 
   736  0004                     	;# 
   737  0005                     	;# 
   738  0006                     	;# 
   739  0007                     	;# 
   740  0008                     	;# 
   741  0009                     	;# 
   742  000A                     	;# 
   743  000B                     	;# 
   744  000C                     	;# 
   745  000D                     	;# 
   746  0011                     	;# 
   747  0012                     	;# 
   748  0013                     	;# 
   749  0014                     	;# 
   750  0015                     	;# 
   751  0016                     	;# 
   752  0016                     	;# 
   753  0017                     	;# 
   754  0018                     	;# 
   755  0019                     	;# 
   756  001A                     	;# 
   757  001B                     	;# 
   758  001C                     	;# 
   759  001E                     	;# 
   760  001F                     	;# 
   761  008C                     	;# 
   762  008D                     	;# 
   763  0091                     	;# 
   764  0092                     	;# 
   765  0093                     	;# 
   766  0094                     	;# 
   767  0095                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0098                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  010C                     	;# 
   779  010D                     	;# 
   780  0111                     	;# 
   781  0112                     	;# 
   782  0113                     	;# 
   783  0114                     	;# 
   784  0115                     	;# 
   785  0116                     	;# 
   786  0117                     	;# 
   787  0118                     	;# 
   788  0119                     	;# 
   789  011A                     	;# 
   790  011B                     	;# 
   791  011D                     	;# 
   792  011E                     	;# 
   793  018C                     	;# 
   794  018D                     	;# 
   795  0191                     	;# 
   796  0191                     	;# 
   797  0192                     	;# 
   798  0193                     	;# 
   799  0193                     	;# 
   800  0193                     	;# 
   801  0194                     	;# 
   802  0195                     	;# 
   803  0196                     	;# 
   804  0199                     	;# 
   805  019A                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019B                     	;# 
   809  019B                     	;# 
   810  019C                     	;# 
   811  019C                     	;# 
   812  019D                     	;# 
   813  019E                     	;# 
   814  019F                     	;# 
   815  020C                     	;# 
   816  020D                     	;# 
   817  0211                     	;# 
   818  0211                     	;# 
   819  0212                     	;# 
   820  0212                     	;# 
   821  0213                     	;# 
   822  0213                     	;# 
   823  0214                     	;# 
   824  0214                     	;# 
   825  0215                     	;# 
   826  0215                     	;# 
   827  0215                     	;# 
   828  0216                     	;# 
   829  0216                     	;# 
   830  0217                     	;# 
   831  0217                     	;# 
   832  0219                     	;# 
   833  021A                     	;# 
   834  021B                     	;# 
   835  021C                     	;# 
   836  021D                     	;# 
   837  021E                     	;# 
   838  021F                     	;# 
   839  0291                     	;# 
   840  0291                     	;# 
   841  0292                     	;# 
   842  0293                     	;# 
   843  0294                     	;# 
   844  0295                     	;# 
   845  0295                     	;# 
   846  0296                     	;# 
   847  0298                     	;# 
   848  0298                     	;# 
   849  0299                     	;# 
   850  029A                     	;# 
   851  029B                     	;# 
   852  029C                     	;# 
   853  029C                     	;# 
   854  029D                     	;# 
   855  029E                     	;# 
   856  029E                     	;# 
   857  0311                     	;# 
   858  0311                     	;# 
   859  0312                     	;# 
   860  0313                     	;# 
   861  0318                     	;# 
   862  0318                     	;# 
   863  0319                     	;# 
   864  031A                     	;# 
   865  0394                     	;# 
   866  0395                     	;# 
   867  0396                     	;# 
   868  039A                     	;# 
   869  039C                     	;# 
   870  039D                     	;# 
   871  039E                     	;# 
   872  039F                     	;# 
   873  0415                     	;# 
   874  0416                     	;# 
   875  0417                     	;# 
   876  041C                     	;# 
   877  041D                     	;# 
   878  041E                     	;# 
   879  0FE4                     	;# 
   880  0FE5                     	;# 
   881  0FE6                     	;# 
   882  0FE7                     	;# 
   883  0FE8                     	;# 
   884  0FE9                     	;# 
   885  0FEA                     	;# 
   886  0FEB                     	;# 
   887  0FED                     	;# 
   888  0FEE                     	;# 
   889  0FEF                     	;# 
   890  0000                     	;# 
   891  0001                     	;# 
   892  0002                     	;# 
   893  0003                     	;# 
   894  0004                     	;# 
   895  0005                     	;# 
   896  0006                     	;# 
   897  0007                     	;# 
   898  0008                     	;# 
   899  0009                     	;# 
   900  000A                     	;# 
   901  000B                     	;# 
   902  000C                     	;# 
   903  000D                     	;# 
   904  0011                     	;# 
   905  0012                     	;# 
   906  0013                     	;# 
   907  0014                     	;# 
   908  0015                     	;# 
   909  0016                     	;# 
   910  0016                     	;# 
   911  0017                     	;# 
   912  0018                     	;# 
   913  0019                     	;# 
   914  001A                     	;# 
   915  001B                     	;# 
   916  001C                     	;# 
   917  001E                     	;# 
   918  001F                     	;# 
   919  008C                     	;# 
   920  008D                     	;# 
   921  0091                     	;# 
   922  0092                     	;# 
   923  0093                     	;# 
   924  0094                     	;# 
   925  0095                     	;# 
   926  0096                     	;# 
   927  0097                     	;# 
   928  0098                     	;# 
   929  0099                     	;# 
   930  009A                     	;# 
   931  009B                     	;# 
   932  009B                     	;# 
   933  009C                     	;# 
   934  009D                     	;# 
   935  009E                     	;# 
   936  010C                     	;# 
   937  010D                     	;# 
   938  0111                     	;# 
   939  0112                     	;# 
   940  0113                     	;# 
   941  0114                     	;# 
   942  0115                     	;# 
   943  0116                     	;# 
   944  0117                     	;# 
   945  0118                     	;# 
   946  0119                     	;# 
   947  011A                     	;# 
   948  011B                     	;# 
   949  011D                     	;# 
   950  011E                     	;# 
   951  018C                     	;# 
   952  018D                     	;# 
   953  0191                     	;# 
   954  0191                     	;# 
   955  0192                     	;# 
   956  0193                     	;# 
   957  0193                     	;# 
   958  0193                     	;# 
   959  0194                     	;# 
   960  0195                     	;# 
   961  0196                     	;# 
   962  0199                     	;# 
   963  019A                     	;# 
   964  019B                     	;# 
   965  019B                     	;# 
   966  019B                     	;# 
   967  019B                     	;# 
   968  019C                     	;# 
   969  019C                     	;# 
   970  019D                     	;# 
   971  019E                     	;# 
   972  019F                     	;# 
   973  020C                     	;# 
   974  020D                     	;# 
   975  0211                     	;# 
   976  0211                     	;# 
   977  0212                     	;# 
   978  0212                     	;# 
   979  0213                     	;# 
   980  0213                     	;# 
   981  0214                     	;# 
   982  0214                     	;# 
   983  0215                     	;# 
   984  0215                     	;# 
   985  0215                     	;# 
   986  0216                     	;# 
   987  0216                     	;# 
   988  0217                     	;# 
   989  0217                     	;# 
   990  0219                     	;# 
   991  021A                     	;# 
   992  021B                     	;# 
   993  021C                     	;# 
   994  021D                     	;# 
   995  021E                     	;# 
   996  021F                     	;# 
   997  0291                     	;# 
   998  0291                     	;# 
   999  0292                     	;# 
  1000  0293                     	;# 
  1001  0294                     	;# 
  1002  0295                     	;# 
  1003  0295                     	;# 
  1004  0296                     	;# 
  1005  0298                     	;# 
  1006  0298                     	;# 
  1007  0299                     	;# 
  1008  029A                     	;# 
  1009  029B                     	;# 
  1010  029C                     	;# 
  1011  029C                     	;# 
  1012  029D                     	;# 
  1013  029E                     	;# 
  1014  029E                     	;# 
  1015  0311                     	;# 
  1016  0311                     	;# 
  1017  0312                     	;# 
  1018  0313                     	;# 
  1019  0318                     	;# 
  1020  0318                     	;# 
  1021  0319                     	;# 
  1022  031A                     	;# 
  1023  0394                     	;# 
  1024  0395                     	;# 
  1025  0396                     	;# 
  1026  039A                     	;# 
  1027  039C                     	;# 
  1028  039D                     	;# 
  1029  039E                     	;# 
  1030  039F                     	;# 
  1031  0415                     	;# 
  1032  0416                     	;# 
  1033  0417                     	;# 
  1034  041C                     	;# 
  1035  041D                     	;# 
  1036  041E                     	;# 
  1037  0FE4                     	;# 
  1038  0FE5                     	;# 
  1039  0FE6                     	;# 
  1040  0FE7                     	;# 
  1041  0FE8                     	;# 
  1042  0FE9                     	;# 
  1043  0FEA                     	;# 
  1044  0FEB                     	;# 
  1045  0FED                     	;# 
  1046  0FEE                     	;# 
  1047  0FEF                     	;# 
  1048  0000                     	;# 
  1049  0001                     	;# 
  1050  0002                     	;# 
  1051  0003                     	;# 
  1052  0004                     	;# 
  1053  0005                     	;# 
  1054  0006                     	;# 
  1055  0007                     	;# 
  1056  0008                     	;# 
  1057  0009                     	;# 
  1058  000A                     	;# 
  1059  000B                     	;# 
  1060  000C                     	;# 
  1061  000D                     	;# 
  1062  0011                     	;# 
  1063  0012                     	;# 
  1064  0013                     	;# 
  1065  0014                     	;# 
  1066  0015                     	;# 
  1067  0016                     	;# 
  1068  0016                     	;# 
  1069  0017                     	;# 
  1070  0018                     	;# 
  1071  0019                     	;# 
  1072  001A                     	;# 
  1073  001B                     	;# 
  1074  001C                     	;# 
  1075  001E                     	;# 
  1076  001F                     	;# 
  1077  008C                     	;# 
  1078  008D                     	;# 
  1079  0091                     	;# 
  1080  0092                     	;# 
  1081  0093                     	;# 
  1082  0094                     	;# 
  1083  0095                     	;# 
  1084  0096                     	;# 
  1085  0097                     	;# 
  1086  0098                     	;# 
  1087  0099                     	;# 
  1088  009A                     	;# 
  1089  009B                     	;# 
  1090  009B                     	;# 
  1091  009C                     	;# 
  1092  009D                     	;# 
  1093  009E                     	;# 
  1094  010C                     	;# 
  1095  010D                     	;# 
  1096  0111                     	;# 
  1097  0112                     	;# 
  1098  0113                     	;# 
  1099  0114                     	;# 
  1100  0115                     	;# 
  1101  0116                     	;# 
  1102  0117                     	;# 
  1103  0118                     	;# 
  1104  0119                     	;# 
  1105  011A                     	;# 
  1106  011B                     	;# 
  1107  011D                     	;# 
  1108  011E                     	;# 
  1109  018C                     	;# 
  1110  018D                     	;# 
  1111  0191                     	;# 
  1112  0191                     	;# 
  1113  0192                     	;# 
  1114  0193                     	;# 
  1115  0193                     	;# 
  1116  0193                     	;# 
  1117  0194                     	;# 
  1118  0195                     	;# 
  1119  0196                     	;# 
  1120  0199                     	;# 
  1121  019A                     	;# 
  1122  019B                     	;# 
  1123  019B                     	;# 
  1124  019B                     	;# 
  1125  019B                     	;# 
  1126  019C                     	;# 
  1127  019C                     	;# 
  1128  019D                     	;# 
  1129  019E                     	;# 
  1130  019F                     	;# 
  1131  020C                     	;# 
  1132  020D                     	;# 
  1133  0211                     	;# 
  1134  0211                     	;# 
  1135  0212                     	;# 
  1136  0212                     	;# 
  1137  0213                     	;# 
  1138  0213                     	;# 
  1139  0214                     	;# 
  1140  0214                     	;# 
  1141  0215                     	;# 
  1142  0215                     	;# 
  1143  0215                     	;# 
  1144  0216                     	;# 
  1145  0216                     	;# 
  1146  0217                     	;# 
  1147  0217                     	;# 
  1148  0219                     	;# 
  1149  021A                     	;# 
  1150  021B                     	;# 
  1151  021C                     	;# 
  1152  021D                     	;# 
  1153  021E                     	;# 
  1154  021F                     	;# 
  1155  0291                     	;# 
  1156  0291                     	;# 
  1157  0292                     	;# 
  1158  0293                     	;# 
  1159  0294                     	;# 
  1160  0295                     	;# 
  1161  0295                     	;# 
  1162  0296                     	;# 
  1163  0298                     	;# 
  1164  0298                     	;# 
  1165  0299                     	;# 
  1166  029A                     	;# 
  1167  029B                     	;# 
  1168  029C                     	;# 
  1169  029C                     	;# 
  1170  029D                     	;# 
  1171  029E                     	;# 
  1172  029E                     	;# 
  1173  0311                     	;# 
  1174  0311                     	;# 
  1175  0312                     	;# 
  1176  0313                     	;# 
  1177  0318                     	;# 
  1178  0318                     	;# 
  1179  0319                     	;# 
  1180  031A                     	;# 
  1181  0394                     	;# 
  1182  0395                     	;# 
  1183  0396                     	;# 
  1184  039A                     	;# 
  1185  039C                     	;# 
  1186  039D                     	;# 
  1187  039E                     	;# 
  1188  039F                     	;# 
  1189  0415                     	;# 
  1190  0416                     	;# 
  1191  0417                     	;# 
  1192  041C                     	;# 
  1193  041D                     	;# 
  1194  041E                     	;# 
  1195  0FE4                     	;# 
  1196  0FE5                     	;# 
  1197  0FE6                     	;# 
  1198  0FE7                     	;# 
  1199  0FE8                     	;# 
  1200  0FE9                     	;# 
  1201  0FEA                     	;# 
  1202  0FEB                     	;# 
  1203  0FED                     	;# 
  1204  0FEE                     	;# 
  1205  0FEF                     	;# 
  1206  0000                     	;# 
  1207  0001                     	;# 
  1208  0002                     	;# 
  1209  0003                     	;# 
  1210  0004                     	;# 
  1211  0005                     	;# 
  1212  0006                     	;# 
  1213  0007                     	;# 
  1214  0008                     	;# 
  1215  0009                     	;# 
  1216  000A                     	;# 
  1217  000B                     	;# 
  1218  000C                     	;# 
  1219  000D                     	;# 
  1220  0011                     	;# 
  1221  0012                     	;# 
  1222  0013                     	;# 
  1223  0014                     	;# 
  1224  0015                     	;# 
  1225  0016                     	;# 
  1226  0016                     	;# 
  1227  0017                     	;# 
  1228  0018                     	;# 
  1229  0019                     	;# 
  1230  001A                     	;# 
  1231  001B                     	;# 
  1232  001C                     	;# 
  1233  001E                     	;# 
  1234  001F                     	;# 
  1235  008C                     	;# 
  1236  008D                     	;# 
  1237  0091                     	;# 
  1238  0092                     	;# 
  1239  0093                     	;# 
  1240  0094                     	;# 
  1241  0095                     	;# 
  1242  0096                     	;# 
  1243  0097                     	;# 
  1244  0098                     	;# 
  1245  0099                     	;# 
  1246  009A                     	;# 
  1247  009B                     	;# 
  1248  009B                     	;# 
  1249  009C                     	;# 
  1250  009D                     	;# 
  1251  009E                     	;# 
  1252  010C                     	;# 
  1253  010D                     	;# 
  1254  0111                     	;# 
  1255  0112                     	;# 
  1256  0113                     	;# 
  1257  0114                     	;# 
  1258  0115                     	;# 
  1259  0116                     	;# 
  1260  0117                     	;# 
  1261  0118                     	;# 
  1262  0119                     	;# 
  1263  011A                     	;# 
  1264  011B                     	;# 
  1265  011D                     	;# 
  1266  011E                     	;# 
  1267  018C                     	;# 
  1268  018D                     	;# 
  1269  0191                     	;# 
  1270  0191                     	;# 
  1271  0192                     	;# 
  1272  0193                     	;# 
  1273  0193                     	;# 
  1274  0193                     	;# 
  1275  0194                     	;# 
  1276  0195                     	;# 
  1277  0196                     	;# 
  1278  0199                     	;# 
  1279  019A                     	;# 
  1280  019B                     	;# 
  1281  019B                     	;# 
  1282  019B                     	;# 
  1283  019B                     	;# 
  1284  019C                     	;# 
  1285  019C                     	;# 
  1286  019D                     	;# 
  1287  019E                     	;# 
  1288  019F                     	;# 
  1289  020C                     	;# 
  1290  020D                     	;# 
  1291  0211                     	;# 
  1292  0211                     	;# 
  1293  0212                     	;# 
  1294  0212                     	;# 
  1295  0213                     	;# 
  1296  0213                     	;# 
  1297  0214                     	;# 
  1298  0214                     	;# 
  1299  0215                     	;# 
  1300  0215                     	;# 
  1301  0215                     	;# 
  1302  0216                     	;# 
  1303  0216                     	;# 
  1304  0217                     	;# 
  1305  0217                     	;# 
  1306  0219                     	;# 
  1307  021A                     	;# 
  1308  021B                     	;# 
  1309  021C                     	;# 
  1310  021D                     	;# 
  1311  021E                     	;# 
  1312  021F                     	;# 
  1313  0291                     	;# 
  1314  0291                     	;# 
  1315  0292                     	;# 
  1316  0293                     	;# 
  1317  0294                     	;# 
  1318  0295                     	;# 
  1319  0295                     	;# 
  1320  0296                     	;# 
  1321  0298                     	;# 
  1322  0298                     	;# 
  1323  0299                     	;# 
  1324  029A                     	;# 
  1325  029B                     	;# 
  1326  029C                     	;# 
  1327  029C                     	;# 
  1328  029D                     	;# 
  1329  029E                     	;# 
  1330  029E                     	;# 
  1331  0311                     	;# 
  1332  0311                     	;# 
  1333  0312                     	;# 
  1334  0313                     	;# 
  1335  0318                     	;# 
  1336  0318                     	;# 
  1337  0319                     	;# 
  1338  031A                     	;# 
  1339  0394                     	;# 
  1340  0395                     	;# 
  1341  0396                     	;# 
  1342  039A                     	;# 
  1343  039C                     	;# 
  1344  039D                     	;# 
  1345  039E                     	;# 
  1346  039F                     	;# 
  1347  0415                     	;# 
  1348  0416                     	;# 
  1349  0417                     	;# 
  1350  041C                     	;# 
  1351  041D                     	;# 
  1352  041E                     	;# 
  1353  0FE4                     	;# 
  1354  0FE5                     	;# 
  1355  0FE6                     	;# 
  1356  0FE7                     	;# 
  1357  0FE8                     	;# 
  1358  0FE9                     	;# 
  1359  0FEA                     	;# 
  1360  0FEB                     	;# 
  1361  0FED                     	;# 
  1362  0FEE                     	;# 
  1363  0FEF                     	;# 
  1364  0000                     	;# 
  1365  0001                     	;# 
  1366  0002                     	;# 
  1367  0003                     	;# 
  1368  0004                     	;# 
  1369  0005                     	;# 
  1370  0006                     	;# 
  1371  0007                     	;# 
  1372  0008                     	;# 
  1373  0009                     	;# 
  1374  000A                     	;# 
  1375  000B                     	;# 
  1376  000C                     	;# 
  1377  000D                     	;# 
  1378  0011                     	;# 
  1379  0012                     	;# 
  1380  0013                     	;# 
  1381  0014                     	;# 
  1382  0015                     	;# 
  1383  0016                     	;# 
  1384  0016                     	;# 
  1385  0017                     	;# 
  1386  0018                     	;# 
  1387  0019                     	;# 
  1388  001A                     	;# 
  1389  001B                     	;# 
  1390  001C                     	;# 
  1391  001E                     	;# 
  1392  001F                     	;# 
  1393  008C                     	;# 
  1394  008D                     	;# 
  1395  0091                     	;# 
  1396  0092                     	;# 
  1397  0093                     	;# 
  1398  0094                     	;# 
  1399  0095                     	;# 
  1400  0096                     	;# 
  1401  0097                     	;# 
  1402  0098                     	;# 
  1403  0099                     	;# 
  1404  009A                     	;# 
  1405  009B                     	;# 
  1406  009B                     	;# 
  1407  009C                     	;# 
  1408  009D                     	;# 
  1409  009E                     	;# 
  1410  010C                     	;# 
  1411  010D                     	;# 
  1412  0111                     	;# 
  1413  0112                     	;# 
  1414  0113                     	;# 
  1415  0114                     	;# 
  1416  0115                     	;# 
  1417  0116                     	;# 
  1418  0117                     	;# 
  1419  0118                     	;# 
  1420  0119                     	;# 
  1421  011A                     	;# 
  1422  011B                     	;# 
  1423  011D                     	;# 
  1424  011E                     	;# 
  1425  018C                     	;# 
  1426  018D                     	;# 
  1427  0191                     	;# 
  1428  0191                     	;# 
  1429  0192                     	;# 
  1430  0193                     	;# 
  1431  0193                     	;# 
  1432  0193                     	;# 
  1433  0194                     	;# 
  1434  0195                     	;# 
  1435  0196                     	;# 
  1436  0199                     	;# 
  1437  019A                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019C                     	;# 
  1443  019C                     	;# 
  1444  019D                     	;# 
  1445  019E                     	;# 
  1446  019F                     	;# 
  1447  020C                     	;# 
  1448  020D                     	;# 
  1449  0211                     	;# 
  1450  0211                     	;# 
  1451  0212                     	;# 
  1452  0212                     	;# 
  1453  0213                     	;# 
  1454  0213                     	;# 
  1455  0214                     	;# 
  1456  0214                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0215                     	;# 
  1460  0216                     	;# 
  1461  0216                     	;# 
  1462  0217                     	;# 
  1463  0217                     	;# 
  1464  0219                     	;# 
  1465  021A                     	;# 
  1466  021B                     	;# 
  1467  021C                     	;# 
  1468  021D                     	;# 
  1469  021E                     	;# 
  1470  021F                     	;# 
  1471  0291                     	;# 
  1472  0291                     	;# 
  1473  0292                     	;# 
  1474  0293                     	;# 
  1475  0294                     	;# 
  1476  0295                     	;# 
  1477  0295                     	;# 
  1478  0296                     	;# 
  1479  0298                     	;# 
  1480  0298                     	;# 
  1481  0299                     	;# 
  1482  029A                     	;# 
  1483  029B                     	;# 
  1484  029C                     	;# 
  1485  029C                     	;# 
  1486  029D                     	;# 
  1487  029E                     	;# 
  1488  029E                     	;# 
  1489  0311                     	;# 
  1490  0311                     	;# 
  1491  0312                     	;# 
  1492  0313                     	;# 
  1493  0318                     	;# 
  1494  0318                     	;# 
  1495  0319                     	;# 
  1496  031A                     	;# 
  1497  0394                     	;# 
  1498  0395                     	;# 
  1499  0396                     	;# 
  1500  039A                     	;# 
  1501  039C                     	;# 
  1502  039D                     	;# 
  1503  039E                     	;# 
  1504  039F                     	;# 
  1505  0415                     	;# 
  1506  0416                     	;# 
  1507  0417                     	;# 
  1508  041C                     	;# 
  1509  041D                     	;# 
  1510  041E                     	;# 
  1511  0FE4                     	;# 
  1512  0FE5                     	;# 
  1513  0FE6                     	;# 
  1514  0FE7                     	;# 
  1515  0FE8                     	;# 
  1516  0FE9                     	;# 
  1517  0FEA                     	;# 
  1518  0FEB                     	;# 
  1519  0FED                     	;# 
  1520  0FEE                     	;# 
  1521  0FEF                     	;# 
  1522  0000                     	;# 
  1523  0001                     	;# 
  1524  0002                     	;# 
  1525  0003                     	;# 
  1526  0004                     	;# 
  1527  0005                     	;# 
  1528  0006                     	;# 
  1529  0007                     	;# 
  1530  0008                     	;# 
  1531  0009                     	;# 
  1532  000A                     	;# 
  1533  000B                     	;# 
  1534  000C                     	;# 
  1535  000D                     	;# 
  1536  0011                     	;# 
  1537  0012                     	;# 
  1538  0013                     	;# 
  1539  0014                     	;# 
  1540  0015                     	;# 
  1541  0016                     	;# 
  1542  0016                     	;# 
  1543  0017                     	;# 
  1544  0018                     	;# 
  1545  0019                     	;# 
  1546  001A                     	;# 
  1547  001B                     	;# 
  1548  001C                     	;# 
  1549  001E                     	;# 
  1550  001F                     	;# 
  1551  008C                     	;# 
  1552  008D                     	;# 
  1553  0091                     	;# 
  1554  0092                     	;# 
  1555  0093                     	;# 
  1556  0094                     	;# 
  1557  0095                     	;# 
  1558  0096                     	;# 
  1559  0097                     	;# 
  1560  0098                     	;# 
  1561  0099                     	;# 
  1562  009A                     	;# 
  1563  009B                     	;# 
  1564  009B                     	;# 
  1565  009C                     	;# 
  1566  009D                     	;# 
  1567  009E                     	;# 
  1568  010C                     	;# 
  1569  010D                     	;# 
  1570  0111                     	;# 
  1571  0112                     	;# 
  1572  0113                     	;# 
  1573  0114                     	;# 
  1574  0115                     	;# 
  1575  0116                     	;# 
  1576  0117                     	;# 
  1577  0118                     	;# 
  1578  0119                     	;# 
  1579  011A                     	;# 
  1580  011B                     	;# 
  1581  011D                     	;# 
  1582  011E                     	;# 
  1583  018C                     	;# 
  1584  018D                     	;# 
  1585  0191                     	;# 
  1586  0191                     	;# 
  1587  0192                     	;# 
  1588  0193                     	;# 
  1589  0193                     	;# 
  1590  0193                     	;# 
  1591  0194                     	;# 
  1592  0195                     	;# 
  1593  0196                     	;# 
  1594  0199                     	;# 
  1595  019A                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019B                     	;# 
  1599  019B                     	;# 
  1600  019C                     	;# 
  1601  019C                     	;# 
  1602  019D                     	;# 
  1603  019E                     	;# 
  1604  019F                     	;# 
  1605  020C                     	;# 
  1606  020D                     	;# 
  1607  0211                     	;# 
  1608  0211                     	;# 
  1609  0212                     	;# 
  1610  0212                     	;# 
  1611  0213                     	;# 
  1612  0213                     	;# 
  1613  0214                     	;# 
  1614  0214                     	;# 
  1615  0215                     	;# 
  1616  0215                     	;# 
  1617  0215                     	;# 
  1618  0216                     	;# 
  1619  0216                     	;# 
  1620  0217                     	;# 
  1621  0217                     	;# 
  1622  0219                     	;# 
  1623  021A                     	;# 
  1624  021B                     	;# 
  1625  021C                     	;# 
  1626  021D                     	;# 
  1627  021E                     	;# 
  1628  021F                     	;# 
  1629  0291                     	;# 
  1630  0291                     	;# 
  1631  0292                     	;# 
  1632  0293                     	;# 
  1633  0294                     	;# 
  1634  0295                     	;# 
  1635  0295                     	;# 
  1636  0296                     	;# 
  1637  0298                     	;# 
  1638  0298                     	;# 
  1639  0299                     	;# 
  1640  029A                     	;# 
  1641  029B                     	;# 
  1642  029C                     	;# 
  1643  029C                     	;# 
  1644  029D                     	;# 
  1645  029E                     	;# 
  1646  029E                     	;# 
  1647  0311                     	;# 
  1648  0311                     	;# 
  1649  0312                     	;# 
  1650  0313                     	;# 
  1651  0318                     	;# 
  1652  0318                     	;# 
  1653  0319                     	;# 
  1654  031A                     	;# 
  1655  0394                     	;# 
  1656  0395                     	;# 
  1657  0396                     	;# 
  1658  039A                     	;# 
  1659  039C                     	;# 
  1660  039D                     	;# 
  1661  039E                     	;# 
  1662  039F                     	;# 
  1663  0415                     	;# 
  1664  0416                     	;# 
  1665  0417                     	;# 
  1666  041C                     	;# 
  1667  041D                     	;# 
  1668  041E                     	;# 
  1669  0FE4                     	;# 
  1670  0FE5                     	;# 
  1671  0FE6                     	;# 
  1672  0FE7                     	;# 
  1673  0FE8                     	;# 
  1674  0FE9                     	;# 
  1675  0FEA                     	;# 
  1676  0FEB                     	;# 
  1677  0FED                     	;# 
  1678  0FEE                     	;# 
  1679  0FEF                     	;# 
  1680  0000                     	;# 
  1681  0001                     	;# 
  1682  0002                     	;# 
  1683  0003                     	;# 
  1684  0004                     	;# 
  1685  0005                     	;# 
  1686  0006                     	;# 
  1687  0007                     	;# 
  1688  0008                     	;# 
  1689  0009                     	;# 
  1690  000A                     	;# 
  1691  000B                     	;# 
  1692  000C                     	;# 
  1693  000D                     	;# 
  1694  0011                     	;# 
  1695  0012                     	;# 
  1696  0013                     	;# 
  1697  0014                     	;# 
  1698  0015                     	;# 
  1699  0016                     	;# 
  1700  0016                     	;# 
  1701  0017                     	;# 
  1702  0018                     	;# 
  1703  0019                     	;# 
  1704  001A                     	;# 
  1705  001B                     	;# 
  1706  001C                     	;# 
  1707  001E                     	;# 
  1708  001F                     	;# 
  1709  008C                     	;# 
  1710  008D                     	;# 
  1711  0091                     	;# 
  1712  0092                     	;# 
  1713  0093                     	;# 
  1714  0094                     	;# 
  1715  0095                     	;# 
  1716  0096                     	;# 
  1717  0097                     	;# 
  1718  0098                     	;# 
  1719  0099                     	;# 
  1720  009A                     	;# 
  1721  009B                     	;# 
  1722  009B                     	;# 
  1723  009C                     	;# 
  1724  009D                     	;# 
  1725  009E                     	;# 
  1726  010C                     	;# 
  1727  010D                     	;# 
  1728  0111                     	;# 
  1729  0112                     	;# 
  1730  0113                     	;# 
  1731  0114                     	;# 
  1732  0115                     	;# 
  1733  0116                     	;# 
  1734  0117                     	;# 
  1735  0118                     	;# 
  1736  0119                     	;# 
  1737  011A                     	;# 
  1738  011B                     	;# 
  1739  011D                     	;# 
  1740  011E                     	;# 
  1741  018C                     	;# 
  1742  018D                     	;# 
  1743  0191                     	;# 
  1744  0191                     	;# 
  1745  0192                     	;# 
  1746  0193                     	;# 
  1747  0193                     	;# 
  1748  0193                     	;# 
  1749  0194                     	;# 
  1750  0195                     	;# 
  1751  0196                     	;# 
  1752  0199                     	;# 
  1753  019A                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019B                     	;# 
  1757  019B                     	;# 
  1758  019C                     	;# 
  1759  019C                     	;# 
  1760  019D                     	;# 
  1761  019E                     	;# 
  1762  019F                     	;# 
  1763  020C                     	;# 
  1764  020D                     	;# 
  1765  0211                     	;# 
  1766  0211                     	;# 
  1767  0212                     	;# 
  1768  0212                     	;# 
  1769  0213                     	;# 
  1770  0213                     	;# 
  1771  0214                     	;# 
  1772  0214                     	;# 
  1773  0215                     	;# 
  1774  0215                     	;# 
  1775  0215                     	;# 
  1776  0216                     	;# 
  1777  0216                     	;# 
  1778  0217                     	;# 
  1779  0217                     	;# 
  1780  0219                     	;# 
  1781  021A                     	;# 
  1782  021B                     	;# 
  1783  021C                     	;# 
  1784  021D                     	;# 
  1785  021E                     	;# 
  1786  021F                     	;# 
  1787  0291                     	;# 
  1788  0291                     	;# 
  1789  0292                     	;# 
  1790  0293                     	;# 
  1791  0294                     	;# 
  1792  0295                     	;# 
  1793  0295                     	;# 
  1794  0296                     	;# 
  1795  0298                     	;# 
  1796  0298                     	;# 
  1797  0299                     	;# 
  1798  029A                     	;# 
  1799  029B                     	;# 
  1800  029C                     	;# 
  1801  029C                     	;# 
  1802  029D                     	;# 
  1803  029E                     	;# 
  1804  029E                     	;# 
  1805  0311                     	;# 
  1806  0311                     	;# 
  1807  0312                     	;# 
  1808  0313                     	;# 
  1809  0318                     	;# 
  1810  0318                     	;# 
  1811  0319                     	;# 
  1812  031A                     	;# 
  1813  0394                     	;# 
  1814  0395                     	;# 
  1815  0396                     	;# 
  1816  039A                     	;# 
  1817  039C                     	;# 
  1818  039D                     	;# 
  1819  039E                     	;# 
  1820  039F                     	;# 
  1821  0415                     	;# 
  1822  0416                     	;# 
  1823  0417                     	;# 
  1824  041C                     	;# 
  1825  041D                     	;# 
  1826  041E                     	;# 
  1827  0FE4                     	;# 
  1828  0FE5                     	;# 
  1829  0FE6                     	;# 
  1830  0FE7                     	;# 
  1831  0FE8                     	;# 
  1832  0FE9                     	;# 
  1833  0FEA                     	;# 
  1834  0FEB                     	;# 
  1835  0FED                     	;# 
  1836  0FEE                     	;# 
  1837  0FEF                     	;# 
  1838  0000                     	;# 
  1839  0001                     	;# 
  1840  0002                     	;# 
  1841  0003                     	;# 
  1842  0004                     	;# 
  1843  0005                     	;# 
  1844  0006                     	;# 
  1845  0007                     	;# 
  1846  0008                     	;# 
  1847  0009                     	;# 
  1848  000A                     	;# 
  1849  000B                     	;# 
  1850  000C                     	;# 
  1851  000D                     	;# 
  1852  0011                     	;# 
  1853  0012                     	;# 
  1854  0013                     	;# 
  1855  0014                     	;# 
  1856  0015                     	;# 
  1857  0016                     	;# 
  1858  0016                     	;# 
  1859  0017                     	;# 
  1860  0018                     	;# 
  1861  0019                     	;# 
  1862  001A                     	;# 
  1863  001B                     	;# 
  1864  001C                     	;# 
  1865  001E                     	;# 
  1866  001F                     	;# 
  1867  008C                     	;# 
  1868  008D                     	;# 
  1869  0091                     	;# 
  1870  0092                     	;# 
  1871  0093                     	;# 
  1872  0094                     	;# 
  1873  0095                     	;# 
  1874  0096                     	;# 
  1875  0097                     	;# 
  1876  0098                     	;# 
  1877  0099                     	;# 
  1878  009A                     	;# 
  1879  009B                     	;# 
  1880  009B                     	;# 
  1881  009C                     	;# 
  1882  009D                     	;# 
  1883  009E                     	;# 
  1884  010C                     	;# 
  1885  010D                     	;# 
  1886  0111                     	;# 
  1887  0112                     	;# 
  1888  0113                     	;# 
  1889  0114                     	;# 
  1890  0115                     	;# 
  1891  0116                     	;# 
  1892  0117                     	;# 
  1893  0118                     	;# 
  1894  0119                     	;# 
  1895  011A                     	;# 
  1896  011B                     	;# 
  1897  011D                     	;# 
  1898  011E                     	;# 
  1899  018C                     	;# 
  1900  018D                     	;# 
  1901  0191                     	;# 
  1902  0191                     	;# 
  1903  0192                     	;# 
  1904  0193                     	;# 
  1905  0193                     	;# 
  1906  0193                     	;# 
  1907  0194                     	;# 
  1908  0195                     	;# 
  1909  0196                     	;# 
  1910  0199                     	;# 
  1911  019A                     	;# 
  1912  019B                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019C                     	;# 
  1917  019C                     	;# 
  1918  019D                     	;# 
  1919  019E                     	;# 
  1920  019F                     	;# 
  1921  020C                     	;# 
  1922  020D                     	;# 
  1923  0211                     	;# 
  1924  0211                     	;# 
  1925  0212                     	;# 
  1926  0212                     	;# 
  1927  0213                     	;# 
  1928  0213                     	;# 
  1929  0214                     	;# 
  1930  0214                     	;# 
  1931  0215                     	;# 
  1932  0215                     	;# 
  1933  0215                     	;# 
  1934  0216                     	;# 
  1935  0216                     	;# 
  1936  0217                     	;# 
  1937  0217                     	;# 
  1938  0219                     	;# 
  1939  021A                     	;# 
  1940  021B                     	;# 
  1941  021C                     	;# 
  1942  021D                     	;# 
  1943  021E                     	;# 
  1944  021F                     	;# 
  1945  0291                     	;# 
  1946  0291                     	;# 
  1947  0292                     	;# 
  1948  0293                     	;# 
  1949  0294                     	;# 
  1950  0295                     	;# 
  1951  0295                     	;# 
  1952  0296                     	;# 
  1953  0298                     	;# 
  1954  0298                     	;# 
  1955  0299                     	;# 
  1956  029A                     	;# 
  1957  029B                     	;# 
  1958  029C                     	;# 
  1959  029C                     	;# 
  1960  029D                     	;# 
  1961  029E                     	;# 
  1962  029E                     	;# 
  1963  0311                     	;# 
  1964  0311                     	;# 
  1965  0312                     	;# 
  1966  0313                     	;# 
  1967  0318                     	;# 
  1968  0318                     	;# 
  1969  0319                     	;# 
  1970  031A                     	;# 
  1971  0394                     	;# 
  1972  0395                     	;# 
  1973  0396                     	;# 
  1974  039A                     	;# 
  1975  039C                     	;# 
  1976  039D                     	;# 
  1977  039E                     	;# 
  1978  039F                     	;# 
  1979  0415                     	;# 
  1980  0416                     	;# 
  1981  0417                     	;# 
  1982  041C                     	;# 
  1983  041D                     	;# 
  1984  041E                     	;# 
  1985  0FE4                     	;# 
  1986  0FE5                     	;# 
  1987  0FE6                     	;# 
  1988  0FE7                     	;# 
  1989  0FE8                     	;# 
  1990  0FE9                     	;# 
  1991  0FEA                     	;# 
  1992  0FEB                     	;# 
  1993  0FED                     	;# 
  1994  0FEE                     	;# 
  1995  0FEF                     	;# 
  1996                           
  1997                           	psect	idataBANK2
  1998  0F44                     __pidataBANK2:	
  1999                           
  2000                           ;initializer for _H7826_Gain
  2001  0F44  3498               	retlw	low (STR_22| (0+32768))
  2002  0F45  3483               	retlw	high (STR_22| (0+32768))
  2003  0F46  3493               	retlw	low (STR_23| (0+32768))
  2004  0F47  3483               	retlw	high (STR_23| (0+32768))
  2005  0F48  34A2               	retlw	low (STR_24| (0+32768))
  2006  0F49  3483               	retlw	high (STR_24| (0+32768))
  2007  0F4A  3454               	retlw	low (STR_25| (0+32768))
  2008  0F4B  3483               	retlw	high (STR_25| (0+32768))
  2009  0F4C  342A               	retlw	low (STR_26| (0+32768))
  2010  0F4D  3483               	retlw	high (STR_26| (0+32768))
  2011  0F4E  3436               	retlw	low (STR_27| (0+32768))
  2012  0F4F  3483               	retlw	high (STR_27| (0+32768))
  2013  0F50  344E               	retlw	low (STR_28| (0+32768))
  2014  0F51  3483               	retlw	high (STR_28| (0+32768))
  2015  0F52  3407               	retlw	low (STR_29| (0+32768))
  2016  0F53  3483               	retlw	high (STR_29| (0+32768))
  2017  0F54  3400               	retlw	low (STR_30| (0+32768))
  2018  0F55  3483               	retlw	high (STR_30| (0+32768))
  2019  0F56  340E               	retlw	low (STR_31| (0+32768))
  2020  0F57  3483               	retlw	high (STR_31| (0+32768))
  2021  0F58  34D6               	retlw	low (STR_32| (0+32768))
  2022  0F59  3482               	retlw	high (STR_32| (0+32768))
  2023  0F5A  341C               	retlw	low (STR_33| (0+32768))
  2024  0F5B  3483               	retlw	high (STR_33| (0+32768))
  2025  0F5C  34C6               	retlw	low (STR_34| (0+32768))
  2026  0F5D  3482               	retlw	high (STR_34| (0+32768))
  2027  0F5E  34BE               	retlw	low (STR_35| (0+32768))
  2028  0F5F  3482               	retlw	high (STR_35| (0+32768))
  2029  0F60  34B6               	retlw	low (STR_36| (0+32768))
  2030  0F61  3482               	retlw	high (STR_36| (0+32768))
  2031                           
  2032                           ;initializer for _DAC_VoltageTable
  2033  0F62  34B6               	retlw	low (STR_7| (0+32768))
  2034  0F63  3483               	retlw	high (STR_7| (0+32768))
  2035  0F64  3466               	retlw	low (STR_8| (0+32768))
  2036  0F65  3483               	retlw	high (STR_8| (0+32768))
  2037  0F66  34BB               	retlw	low (STR_9| (0+32768))
  2038  0F67  3483               	retlw	high (STR_9| (0+32768))
  2039  0F68  346C               	retlw	low (STR_10| (0+32768))
  2040  0F69  3483               	retlw	high (STR_10| (0+32768))
  2041  0F6A  34C0               	retlw	low (STR_11| (0+32768))
  2042  0F6B  3483               	retlw	high (STR_11| (0+32768))
  2043  0F6C  3472               	retlw	low (STR_12| (0+32768))
  2044  0F6D  3483               	retlw	high (STR_12| (0+32768))
  2045  0F6E  34C5               	retlw	low (STR_13| (0+32768))
  2046  0F6F  3483               	retlw	high (STR_13| (0+32768))
  2047  0F70  3478               	retlw	low (STR_14| (0+32768))
  2048  0F71  3483               	retlw	high (STR_14| (0+32768))
  2049  0F72  34CA               	retlw	low (STR_15| (0+32768))
  2050  0F73  3483               	retlw	high (STR_15| (0+32768))
  2051  0F74  347E               	retlw	low (STR_16| (0+32768))
  2052  0F75  3483               	retlw	high (STR_16| (0+32768))
  2053  0F76  34A7               	retlw	low (STR_17| (0+32768))
  2054  0F77  3483               	retlw	high (STR_17| (0+32768))
  2055  0F78  345A               	retlw	low (STR_18| (0+32768))
  2056  0F79  3483               	retlw	high (STR_18| (0+32768))
  2057  0F7A  34AC               	retlw	low (STR_19| (0+32768))
  2058  0F7B  3483               	retlw	high (STR_19| (0+32768))
  2059  0F7C  3460               	retlw	low (STR_20| (0+32768))
  2060  0F7D  3483               	retlw	high (STR_20| (0+32768))
  2061  0F7E  34B1               	retlw	low (STR_21| (0+32768))
  2062  0F7F  3483               	retlw	high (STR_21| (0+32768))
  2063                           
  2064                           	psect	idataBANK3
  2065  0E00                     __pidataBANK3:	
  2066                           
  2067                           ;initializer for _H7826_01_Gain
  2068  0E00  3484               	retlw	low (STR_37| (0+32768))
  2069  0E01  3483               	retlw	high (STR_37| (0+32768))
  2070  0E02  3489               	retlw	low (STR_38| (0+32768))
  2071  0E03  3483               	retlw	high (STR_38| (0+32768))
  2072  0E04  349D               	retlw	low (STR_39| (0+32768))
  2073  0E05  3483               	retlw	high (STR_39| (0+32768))
  2074  0E06  348E               	retlw	low (STR_40| (0+32768))
  2075  0E07  3483               	retlw	high (STR_40| (0+32768))
  2076  0E08  343C               	retlw	low (STR_41| (0+32768))
  2077  0E09  3483               	retlw	high (STR_41| (0+32768))
  2078  0E0A  3442               	retlw	low (STR_42| (0+32768))
  2079  0E0B  3483               	retlw	high (STR_42| (0+32768))
  2080  0E0C  3448               	retlw	low (STR_43| (0+32768))
  2081  0E0D  3483               	retlw	high (STR_43| (0+32768))
  2082  0E0E  3430               	retlw	low (STR_44| (0+32768))
  2083  0E0F  3483               	retlw	high (STR_44| (0+32768))
  2084  0E10  34EB               	retlw	low (STR_45| (0+32768))
  2085  0E11  3482               	retlw	high (STR_45| (0+32768))
  2086  0E12  3415               	retlw	low (STR_46| (0+32768))
  2087  0E13  3483               	retlw	high (STR_46| (0+32768))
  2088  0E14  34F2               	retlw	low (STR_47| (0+32768))
  2089  0E15  3482               	retlw	high (STR_47| (0+32768))
  2090  0E16  34F9               	retlw	low (STR_48| (0+32768))
  2091  0E17  3482               	retlw	high (STR_48| (0+32768))
  2092  0E18  3423               	retlw	low (STR_49| (0+32768))
  2093  0E19  3483               	retlw	high (STR_49| (0+32768))
  2094  0E1A  34DD               	retlw	low (STR_50| (0+32768))
  2095  0E1B  3482               	retlw	high (STR_50| (0+32768))
  2096  0E1C  34E4               	retlw	low (STR_51| (0+32768))
  2097  0E1D  3482               	retlw	high (STR_51| (0+32768))
  2098                           
  2099                           	psect	stringtext
  2100  0243                     __pstringtext:	
  2101  0243                     _dpowers:	
  2102  0243  3401               	retlw	1
  2103  0244  3400               	retlw	0
  2104  0245  3400               	retlw	0
  2105  0246  3400               	retlw	0
  2106  0247  340A               	retlw	10
  2107  0248  3400               	retlw	0
  2108  0249  3400               	retlw	0
  2109  024A  3400               	retlw	0
  2110  024B  3464               	retlw	100
  2111  024C  3400               	retlw	0
  2112  024D  3400               	retlw	0
  2113  024E  3400               	retlw	0
  2114  024F  34E8               	retlw	232
  2115  0250  3403               	retlw	3
  2116  0251  3400               	retlw	0
  2117  0252  3400               	retlw	0
  2118  0253  3410               	retlw	16
  2119  0254  3427               	retlw	39
  2120  0255  3400               	retlw	0
  2121  0256  3400               	retlw	0
  2122  0257  34A0               	retlw	160
  2123  0258  3486               	retlw	134
  2124  0259  3401               	retlw	1
  2125  025A  3400               	retlw	0
  2126  025B  3440               	retlw	64
  2127  025C  3442               	retlw	66
  2128  025D  340F               	retlw	15
  2129  025E  3400               	retlw	0
  2130  025F  3480               	retlw	128
  2131  0260  3496               	retlw	150
  2132  0261  3498               	retlw	152
  2133  0262  3400               	retlw	0
  2134  0263  3400               	retlw	0
  2135  0264  34E1               	retlw	225
  2136  0265  34F5               	retlw	245
  2137  0266  3405               	retlw	5
  2138  0267  3400               	retlw	0
  2139  0268  34CA               	retlw	202
  2140  0269  349A               	retlw	154
  2141  026A  343B               	retlw	59
  2142  026B                     __end_of_dpowers:	
  2143  026B                     _DAC_DataTable:	
  2144  026B  3499               	retlw	153
  2145  026C  3401               	retlw	1
  2146  026D  34C2               	retlw	194
  2147  026E  3401               	retlw	1
  2148  026F  34EB               	retlw	235
  2149  0270  3401               	retlw	1
  2150  0271  3414               	retlw	20
  2151  0272  3402               	retlw	2
  2152  0273  343D               	retlw	61
  2153  0274  3402               	retlw	2
  2154  0275  3466               	retlw	102
  2155  0276  3402               	retlw	2
  2156  0277  348F               	retlw	143
  2157  0278  3402               	retlw	2
  2158  0279  34B8               	retlw	184
  2159  027A  3402               	retlw	2
  2160  027B  34E1               	retlw	225
  2161  027C  3402               	retlw	2
  2162  027D  340A               	retlw	10
  2163  027E  3403               	retlw	3
  2164  027F  3433               	retlw	51
  2165  0280  3403               	retlw	3
  2166  0281  345B               	retlw	91
  2167  0282  3403               	retlw	3
  2168  0283  3484               	retlw	132
  2169  0284  3403               	retlw	3
  2170  0285  34AD               	retlw	173
  2171  0286  3403               	retlw	3
  2172  0287  34D6               	retlw	214
  2173  0288  3403               	retlw	3
  2174  0289                     __end_of_DAC_DataTable:	
  2175  0016                     _TMR1	set	22
  2176  000C                     _PORTA	set	12
  2177  001F                     _CPSCON1	set	31
  2178  001E                     _CPSCON0	set	30
  2179  0015                     _TMR0	set	21
  2180  0019                     _T1GCON	set	25
  2181  0018                     _T1CON	set	24
  2182  000D                     _PORTB	set	13
  2183  001B                     _PR2	set	27
  2184  001A                     _TMR2	set	26
  2185  001C                     _T2CON	set	28
  2186  00A1                     _BCL2IF	set	161
  2187  00A0                     _SSP2IF	set	160
  2188  009B                     _TMR6IF	set	155
  2189  0099                     _TMR4IF	set	153
  2190  0088                     _TMR1IF	set	136
  2191  00C0                     _TMR1ON	set	192
  2192  005F                     _GIE	set	95
  2193  005E                     _PEIE	set	94
  2194  0099                     _OSCCON	set	153
  2195  0095                     _OPTION_REG	set	149
  2196  008D                     _TRISB	set	141
  2197  008C                     _TRISA	set	140
  2198  04A1                     _BCL2IE	set	1185
  2199  04A0                     _SSP2IE	set	1184
  2200  049B                     _TMR6IE	set	1179
  2201  0499                     _TMR4IE	set	1177
  2202  0488                     _TMR1IE	set	1160
  2203  011E                     _APFCON1	set	286
  2204  011D                     _APFCON0	set	285
  2205  0866                     _LATA6	set	2150
  2206  0863                     _LATA3	set	2147
  2207  0864                     _LATA4	set	2148
  2208  018D                     _ANSELB	set	397
  2209  018C                     _ANSELA	set	396
  2210  021C                     _SSP2STATbits	set	540
  2211  0219                     _SSP2BUF	set	537
  2212  021E                     _SSP2CON2	set	542
  2213  021B                     _SSP2MSK	set	539
  2214  021E                     _SSP2CON2bits	set	542
  2215  021D                     _SSP2CON1bits	set	541
  2216  021A                     _SSP2ADD	set	538
  2217  021C                     _SSP2STAT	set	540
  2218  021D                     _SSP2CON1	set	541
  2219  020D                     _WPUB	set	525
  2220  0298                     _CCPR2L	set	664
  2221  029E                     _CCPTMRS	set	670
  2222  029A                     _CCP2CON	set	666
  2223  041E                     _T6CON	set	1054
  2224  041C                     _TMR6	set	1052
  2225  041D                     _PR6	set	1053
  2226  0417                     _T4CON	set	1047
  2227  0415                     _TMR4	set	1045
  2228  0416                     _PR4	set	1046
  2229  0289                     STR_3:	
  2230  0289  3420               	retlw	32	;' '
  2231  028A  3420               	retlw	32	;' '
  2232  028B  3420               	retlw	32	;' '
  2233  028C  3420               	retlw	32	;' '
  2234  028D  3425               	retlw	37	;'%'
  2235  028E  3430               	retlw	48	;'0'
  2236  028F  3432               	retlw	50	;'2'
  2237  0290  3464               	retlw	100	;'d'
  2238  0291  343A               	retlw	58	;':'
  2239  0292  3425               	retlw	37	;'%'
  2240  0293  3430               	retlw	48	;'0'
  2241  0294  3432               	retlw	50	;'2'
  2242  0295  3464               	retlw	100	;'d'
  2243  0296  3400               	retlw	0
  2244  0297                     STR_4:	
  2245  0297  3453               	retlw	83	;'S'
  2246  0298  3445               	retlw	69	;'E'
  2247  0299  344C               	retlw	76	;'L'
  2248  029A  3445               	retlw	69	;'E'
  2249  029B  3443               	retlw	67	;'C'
  2250  029C  3454               	retlw	84	;'T'
  2251  029D  3446               	retlw	70	;'F'
  2252  029E  3455               	retlw	85	;'U'
  2253  029F  344E               	retlw	78	;'N'
  2254  02A0  3443               	retlw	67	;'C'
  2255  02A1  3400               	retlw	0
  2256  02A2                     STR_6:	
  2257  02A2  3450               	retlw	80	;'P'
  2258  02A3  344D               	retlw	77	;'M'
  2259  02A4  3454               	retlw	84	;'T'
  2260  02A5  3444               	retlw	68	;'D'
  2261  02A6  3445               	retlw	69	;'E'
  2262  02A7  3456               	retlw	86	;'V'
  2263  02A8  3449               	retlw	73	;'I'
  2264  02A9  3443               	retlw	67	;'C'
  2265  02AA  3445               	retlw	69	;'E'
  2266  02AB  3400               	retlw	0
  2267  02AC                     STR_1:	
  2268  02AC  3425               	retlw	37	;'%'
  2269  02AD  3437               	retlw	55	;'7'
  2270  02AE  346C               	retlw	108	;'l'
  2271  02AF  3475               	retlw	117	;'u'
  2272  02B0  3420               	retlw	32	;' '
  2273  02B1  3425               	retlw	37	;'%'
  2274  02B2  3437               	retlw	55	;'7'
  2275  02B3  346C               	retlw	108	;'l'
  2276  02B4  3475               	retlw	117	;'u'
  2277  02B5  3400               	retlw	0
  2278  02B6                     STR_36:	
  2279  02B6  3432               	retlw	50	;'2'
  2280  02B7  3437               	retlw	55	;'7'
  2281  02B8  3437               	retlw	55	;'7'
  2282  02B9  3434               	retlw	52	;'4'
  2283  02BA  3435               	retlw	53	;'5'
  2284  02BB  3436               	retlw	54	;'6'
  2285  02BC  3432               	retlw	50	;'2'
  2286  02BD  3400               	retlw	0
  2287  02BE                     STR_35:	
  2288  02BE  3431               	retlw	49	;'1'
  2289  02BF  3439               	retlw	57	;'9'
  2290  02C0  3434               	retlw	52	;'4'
  2291  02C1  3430               	retlw	48	;'0'
  2292  02C2  3436               	retlw	54	;'6'
  2293  02C3  3437               	retlw	55	;'7'
  2294  02C4  3433               	retlw	51	;'3'
  2295  02C5  3400               	retlw	0
  2296  02C6                     STR_34:	
  2297  02C6  3431               	retlw	49	;'1'
  2298  02C7  3433               	retlw	51	;'3'
  2299  02C8  3433               	retlw	51	;'3'
  2300  02C9  3436               	retlw	54	;'6'
  2301  02CA  3430               	retlw	48	;'0'
  2302  02CB  3430               	retlw	48	;'0'
  2303  02CC  3436               	retlw	54	;'6'
  2304  02CD  3400               	retlw	0
  2305  02CE                     STR_5:	
  2306  02CE  3441               	retlw	65	;'A'
  2307  02CF  3444               	retlw	68	;'D'
  2308  02D0  344A               	retlw	74	;'J'
  2309  02D1  3447               	retlw	71	;'G'
  2310  02D2  3441               	retlw	65	;'A'
  2311  02D3  3449               	retlw	73	;'I'
  2312  02D4  344E               	retlw	78	;'N'
  2313  02D5  3400               	retlw	0
  2314  02D6                     STR_32:	
  2315  02D6  3436               	retlw	54	;'6'
  2316  02D7  3430               	retlw	48	;'0'
  2317  02D8  3430               	retlw	48	;'0'
  2318  02D9  3430               	retlw	48	;'0'
  2319  02DA  3430               	retlw	48	;'0'
  2320  02DB  3430               	retlw	48	;'0'
  2321  02DC  3400               	retlw	0
  2322  02DD                     STR_50:	
  2323  02DD  3437               	retlw	55	;'7'
  2324  02DE  3430               	retlw	48	;'0'
  2325  02DF  3430               	retlw	48	;'0'
  2326  02E0  3438               	retlw	56	;'8'
  2327  02E1  3439               	retlw	57	;'9'
  2328  02E2  3430               	retlw	48	;'0'
  2329  02E3  3400               	retlw	0
  2330  02E4                     STR_51:	
  2331  02E4  3439               	retlw	57	;'9'
  2332  02E5  3436               	retlw	54	;'6'
  2333  02E6  3438               	retlw	56	;'8'
  2334  02E7  3434               	retlw	52	;'4'
  2335  02E8  3437               	retlw	55	;'7'
  2336  02E9  3432               	retlw	50	;'2'
  2337  02EA  3400               	retlw	0
  2338  02EB                     STR_45:	
  2339  02EB  3431               	retlw	49	;'1'
  2340  02EC  3430               	retlw	48	;'0'
  2341  02ED  3438               	retlw	56	;'8'
  2342  02EE  3438               	retlw	56	;'8'
  2343  02EF  3434               	retlw	52	;'4'
  2344  02F0  3433               	retlw	51	;'3'
  2345  02F1  3400               	retlw	0
  2346  02F2                     STR_47:	
  2347  02F2  3432               	retlw	50	;'2'
  2348  02F3  3434               	retlw	52	;'4'
  2349  02F4  3432               	retlw	50	;'2'
  2350  02F5  3433               	retlw	51	;'3'
  2351  02F6  3436               	retlw	54	;'6'
  2352  02F7  3434               	retlw	52	;'4'
  2353  02F8  3400               	retlw	0
  2354  02F9                     STR_48:	
  2355  02F9  3433               	retlw	51	;'3'
  2356  02FA  3435               	retlw	53	;'5'
  2357  02FB  3431               	retlw	49	;'1'
  2358  02FC  3431               	retlw	49	;'1'
  2359  02FD  3432               	retlw	50	;'2'
  2360  02FE  3437               	retlw	55	;'7'
  2361  02FF  3400               	retlw	0
  2362  0300                     STR_30:	
  2363  0300  3432               	retlw	50	;'2'
  2364  0301  3434               	retlw	52	;'4'
  2365  0302  3437               	retlw	55	;'7'
  2366  0303  3436               	retlw	54	;'6'
  2367  0304  3434               	retlw	52	;'4'
  2368  0305  3437               	retlw	55	;'7'
  2369  0306  3400               	retlw	0
  2370  0307                     STR_29:	
  2371  0307  3431               	retlw	49	;'1'
  2372  0308  3435               	retlw	53	;'5'
  2373  0309  3433               	retlw	51	;'3'
  2374  030A  3432               	retlw	50	;'2'
  2375  030B  3432               	retlw	50	;'2'
  2376  030C  3438               	retlw	56	;'8'
  2377  030D  3400               	retlw	0
  2378  030E                     STR_31:	
  2379  030E  3433               	retlw	51	;'3'
  2380  030F  3438               	retlw	56	;'8'
  2381  0310  3439               	retlw	57	;'9'
  2382  0311  3439               	retlw	57	;'9'
  2383  0312  3438               	retlw	56	;'8'
  2384  0313  3438               	retlw	56	;'8'
  2385  0314  3400               	retlw	0
  2386  0315                     STR_46:	
  2387  0315  3431               	retlw	49	;'1'
  2388  0316  3436               	retlw	54	;'6'
  2389  0317  3434               	retlw	52	;'4'
  2390  0318  3431               	retlw	49	;'1'
  2391  0319  3433               	retlw	51	;'3'
  2392  031A  3439               	retlw	57	;'9'
  2393  031B  3400               	retlw	0
  2394  031C                     STR_33:	
  2395  031C  3439               	retlw	57	;'9'
  2396  031D  3430               	retlw	48	;'0'
  2397  031E  3433               	retlw	51	;'3'
  2398  031F  3438               	retlw	56	;'8'
  2399  0320  3439               	retlw	57	;'9'
  2400  0321  3439               	retlw	57	;'9'
  2401  0322  3400               	retlw	0
  2402  0323                     STR_49:	
  2403  0323  3434               	retlw	52	;'4'
  2404  0324  3439               	retlw	57	;'9'
  2405  0325  3439               	retlw	57	;'9'
  2406  0326  3439               	retlw	57	;'9'
  2407  0327  3439               	retlw	57	;'9'
  2408  0328  3439               	retlw	57	;'9'
  2409  0329  3400               	retlw	0
  2410  032A                     STR_26:	
  2411  032A  3433               	retlw	51	;'3'
  2412  032B  3430               	retlw	48	;'0'
  2413  032C  3430               	retlw	48	;'0'
  2414  032D  3430               	retlw	48	;'0'
  2415  032E  3430               	retlw	48	;'0'
  2416  032F  3400               	retlw	0
  2417  0330                     STR_44:	
  2418  0330  3437               	retlw	55	;'7'
  2419  0331  3430               	retlw	48	;'0'
  2420  0332  3435               	retlw	53	;'5'
  2421  0333  3430               	retlw	48	;'0'
  2422  0334  3430               	retlw	48	;'0'
  2423  0335  3400               	retlw	0
  2424  0336                     STR_27:	
  2425  0336  3435               	retlw	53	;'5'
  2426  0337  3433               	retlw	51	;'3'
  2427  0338  3435               	retlw	53	;'5'
  2428  0339  3435               	retlw	53	;'5'
  2429  033A  3433               	retlw	51	;'3'
  2430  033B  3400               	retlw	0
  2431  033C                     STR_41:	
  2432  033C  3431               	retlw	49	;'1'
  2433  033D  3436               	retlw	54	;'6'
  2434  033E  3431               	retlw	49	;'1'
  2435  033F  3432               	retlw	50	;'2'
  2436  0340  3435               	retlw	53	;'5'
  2437  0341  3400               	retlw	0
  2438  0342                     STR_42:	
  2439  0342  3432               	retlw	50	;'2'
  2440  0343  3437               	retlw	55	;'7'
  2441  0344  3432               	retlw	50	;'2'
  2442  0345  3433               	retlw	51	;'3'
  2443  0346  3438               	retlw	56	;'8'
  2444  0347  3400               	retlw	0
  2445  0348                     STR_43:	
  2446  0348  3434               	retlw	52	;'4'
  2447  0349  3434               	retlw	52	;'4'
  2448  034A  3434               	retlw	52	;'4'
  2449  034B  3437               	retlw	55	;'7'
  2450  034C  3438               	retlw	56	;'8'
  2451  034D  3400               	retlw	0
  2452  034E                     STR_28:	
  2453  034E  3439               	retlw	57	;'9'
  2454  034F  3432               	retlw	50	;'2'
  2455  0350  3430               	retlw	48	;'0'
  2456  0351  3438               	retlw	56	;'8'
  2457  0352  3438               	retlw	56	;'8'
  2458  0353  3400               	retlw	0
  2459  0354                     STR_25:	
  2460  0354  3431               	retlw	49	;'1'
  2461  0355  3436               	retlw	54	;'6'
  2462  0356  3430               	retlw	48	;'0'
  2463  0357  3439               	retlw	57	;'9'
  2464  0358  3439               	retlw	57	;'9'
  2465  0359  3400               	retlw	0
  2466  035A                     STR_18:	
  2467  035A  3431               	retlw	49	;'1'
  2468  035B  342E               	retlw	46	;'.'
  2469  035C  3430               	retlw	48	;'0'
  2470  035D  3435               	retlw	53	;'5'
  2471  035E  3456               	retlw	86	;'V'
  2472  035F  3400               	retlw	0
  2473  0360                     STR_20:	
  2474  0360  3431               	retlw	49	;'1'
  2475  0361  342E               	retlw	46	;'.'
  2476  0362  3431               	retlw	49	;'1'
  2477  0363  3435               	retlw	53	;'5'
  2478  0364  3456               	retlw	86	;'V'
  2479  0365  3400               	retlw	0
  2480  0366                     STR_8:	
  2481  0366  3430               	retlw	48	;'0'
  2482  0367  342E               	retlw	46	;'.'
  2483  0368  3435               	retlw	53	;'5'
  2484  0369  3435               	retlw	53	;'5'
  2485  036A  3456               	retlw	86	;'V'
  2486  036B  3400               	retlw	0
  2487  036C                     STR_10:	
  2488  036C  3430               	retlw	48	;'0'
  2489  036D  342E               	retlw	46	;'.'
  2490  036E  3436               	retlw	54	;'6'
  2491  036F  3435               	retlw	53	;'5'
  2492  0370  3456               	retlw	86	;'V'
  2493  0371  3400               	retlw	0
  2494  0372                     STR_12:	
  2495  0372  3430               	retlw	48	;'0'
  2496  0373  342E               	retlw	46	;'.'
  2497  0374  3437               	retlw	55	;'7'
  2498  0375  3435               	retlw	53	;'5'
  2499  0376  3456               	retlw	86	;'V'
  2500  0377  3400               	retlw	0
  2501  0378                     STR_14:	
  2502  0378  3430               	retlw	48	;'0'
  2503  0379  342E               	retlw	46	;'.'
  2504  037A  3438               	retlw	56	;'8'
  2505  037B  3435               	retlw	53	;'5'
  2506  037C  3456               	retlw	86	;'V'
  2507  037D  3400               	retlw	0
  2508  037E                     STR_16:	
  2509  037E  3430               	retlw	48	;'0'
  2510  037F  342E               	retlw	46	;'.'
  2511  0380  3439               	retlw	57	;'9'
  2512  0381  3435               	retlw	53	;'5'
  2513  0382  3456               	retlw	86	;'V'
  2514  0383  3400               	retlw	0
  2515  0384                     STR_37:	
  2516  0384  3431               	retlw	49	;'1'
  2517  0385  3432               	retlw	50	;'2'
  2518  0386  3435               	retlw	53	;'5'
  2519  0387  3430               	retlw	48	;'0'
  2520  0388  3400               	retlw	0
  2521  0389                     STR_38:	
  2522  0389  3432               	retlw	50	;'2'
  2523  038A  3435               	retlw	53	;'5'
  2524  038B  3438               	retlw	56	;'8'
  2525  038C  3430               	retlw	48	;'0'
  2526  038D  3400               	retlw	0
  2527  038E                     STR_40:	
  2528  038E  3439               	retlw	57	;'9'
  2529  038F  3431               	retlw	49	;'1'
  2530  0390  3438               	retlw	56	;'8'
  2531  0391  3432               	retlw	50	;'2'
  2532  0392  3400               	retlw	0
  2533  0393                     STR_23:	
  2534  0393  3433               	retlw	51	;'3'
  2535  0394  3439               	retlw	57	;'9'
  2536  0395  3435               	retlw	53	;'5'
  2537  0396  3437               	retlw	55	;'7'
  2538  0397  3400               	retlw	0
  2539  0398                     STR_22:	
  2540  0398  3431               	retlw	49	;'1'
  2541  0399  3437               	retlw	55	;'7'
  2542  039A  3437               	retlw	55	;'7'
  2543  039B  3437               	retlw	55	;'7'
  2544  039C  3400               	retlw	0
  2545  039D                     STR_39:	
  2546  039D  3434               	retlw	52	;'4'
  2547  039E  3439               	retlw	57	;'9'
  2548  039F  3439               	retlw	57	;'9'
  2549  03A0  3438               	retlw	56	;'8'
  2550  03A1  3400               	retlw	0
  2551  03A2                     STR_24:	
  2552  03A2  3438               	retlw	56	;'8'
  2553  03A3  3432               	retlw	50	;'2'
  2554  03A4  3431               	retlw	49	;'1'
  2555  03A5  3439               	retlw	57	;'9'
  2556  03A6  3400               	retlw	0
  2557  03A7                     STR_17:	
  2558  03A7  3431               	retlw	49	;'1'
  2559  03A8  342E               	retlw	46	;'.'
  2560  03A9  3430               	retlw	48	;'0'
  2561  03AA  3456               	retlw	86	;'V'
  2562  03AB  3400               	retlw	0
  2563  03AC                     STR_19:	
  2564  03AC  3431               	retlw	49	;'1'
  2565  03AD  342E               	retlw	46	;'.'
  2566  03AE  3431               	retlw	49	;'1'
  2567  03AF  3456               	retlw	86	;'V'
  2568  03B0  3400               	retlw	0
  2569  03B1                     STR_21:	
  2570  03B1  3431               	retlw	49	;'1'
  2571  03B2  342E               	retlw	46	;'.'
  2572  03B3  3432               	retlw	50	;'2'
  2573  03B4  3456               	retlw	86	;'V'
  2574  03B5  3400               	retlw	0
  2575  03B6                     STR_7:	
  2576  03B6  3430               	retlw	48	;'0'
  2577  03B7  342E               	retlw	46	;'.'
  2578  03B8  3435               	retlw	53	;'5'
  2579  03B9  3456               	retlw	86	;'V'
  2580  03BA  3400               	retlw	0
  2581  03BB                     STR_9:	
  2582  03BB  3430               	retlw	48	;'0'
  2583  03BC  342E               	retlw	46	;'.'
  2584  03BD  3436               	retlw	54	;'6'
  2585  03BE  3456               	retlw	86	;'V'
  2586  03BF  3400               	retlw	0
  2587  03C0                     STR_11:	
  2588  03C0  3430               	retlw	48	;'0'
  2589  03C1  342E               	retlw	46	;'.'
  2590  03C2  3437               	retlw	55	;'7'
  2591  03C3  3456               	retlw	86	;'V'
  2592  03C4  3400               	retlw	0
  2593  03C5                     STR_13:	
  2594  03C5  3430               	retlw	48	;'0'
  2595  03C6  342E               	retlw	46	;'.'
  2596  03C7  3438               	retlw	56	;'8'
  2597  03C8  3456               	retlw	86	;'V'
  2598  03C9  3400               	retlw	0
  2599  03CA                     STR_15:	
  2600  03CA  3430               	retlw	48	;'0'
  2601  03CB  342E               	retlw	46	;'.'
  2602  03CC  3439               	retlw	57	;'9'
  2603  03CD  3456               	retlw	86	;'V'
  2604  03CE  3400               	retlw	0
  2605  03CF                     STR_2:	
  2606  03CF  3425               	retlw	37	;'%'
  2607  03D0  3436               	retlw	54	;'6'
  2608  03D1  346C               	retlw	108	;'l'
  2609  03D2  3475               	retlw	117	;'u'
  2610  03D3  3400               	retlw	0
  2611                           
  2612                           ; #config settings
  2613  0000                     
  2614                           	psect	cinit
  2615  002D                     start_initialization:	
  2616  002D                     __initialization:	
  2617                           
  2618                           ; Initialize objects allocated to BANK2
  2619  002D  3044               	movlw	low __pidataBANK2
  2620  002E  0084               	movwf	4
  2621  002F  308F               	movlw	(high __pidataBANK2)| (0+128)
  2622  0030  0085               	movwf	5
  2623  0031  3020               	movlw	low __pdataBANK2
  2624  0032  0086               	movwf	6
  2625  0033  3001               	movlw	high __pdataBANK2
  2626  0034  0087               	movwf	7
  2627  0035  303C               	movlw	60
  2628  0036  3187  27FA  3180   	fcall	init_ram
  2629                           
  2630                           ; Initialize objects allocated to BANK3
  2631  0039  3000               	movlw	low __pidataBANK3
  2632  003A  0084               	movwf	4
  2633  003B  308E               	movlw	(high __pidataBANK3)| (0+128)
  2634  003C  0085               	movwf	5
  2635  003D  30A0               	movlw	low __pdataBANK3
  2636  003E  0086               	movwf	6
  2637  003F  3001               	movlw	high __pdataBANK3
  2638  0040  0087               	movwf	7
  2639  0041  301E               	movlw	30
  2640  0042  3187  27FA  3180   	fcall	init_ram
  2641                           
  2642                           ; Clear objects allocated to BANK0
  2643  0045  3054               	movlw	low __pbssBANK0
  2644  0046  0084               	movwf	4
  2645  0047  3000               	movlw	high __pbssBANK0
  2646  0048  0085               	movwf	5
  2647  0049  300E               	movlw	14
  2648  004A  318C  247B  3180   	fcall	clear_ram0
  2649                           
  2650                           ; Clear objects allocated to BANK1
  2651  004D  30A0               	movlw	low __pbssBANK1
  2652  004E  0084               	movwf	4
  2653  004F  3000               	movlw	high __pbssBANK1
  2654  0050  0085               	movwf	5
  2655  0051  3034               	movlw	52
  2656  0052  318C  247B         	fcall	clear_ram0
  2657  0054                     end_of_initialization:	
  2658                           ;End of C runtime variable initialization code
  2659                           
  2660  0054                     __end_of__initialization:	
  2661  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2662  0055  0020               	movlb	0
  2663  0056  3183  2BD4         	ljmp	_main	;jump to C main() function
  2664                           
  2665                           	psect	bssBANK0
  2666  0054                     __pbssBANK0:	
  2667  0054                     _tcnt:	
  2668  0054                     	ds	8
  2669  005C                     _mode:	
  2670  005C                     	ds	2
  2671  005E                     _count:	
  2672  005E                     	ds	2
  2673  0060                     mTouch_Read@channel:	
  2674  0060                     	ds	1
  2675  0061                     _ConfigReg:	
  2676  0061                     	ds	1
  2677                           
  2678                           	psect	bssBANK1
  2679  00A0                     __pbssBANK1:	
  2680  00A0                     _cnts:	
  2681  00A0                     	ds	20
  2682  00B4                     _mTouch_Interval:	
  2683  00B4                     	ds	3
  2684  00B7                     _CPS_Data:	
  2685  00B7                     	ds	3
  2686  00BA                     _CPS_PreData:	
  2687  00BA                     	ds	3
  2688  00BD                     Timer1_DetectAssignCount@PreviousTimer1:	
  2689  00BD                     	ds	2
  2690  00BF                     _I2C2_Config:	
  2691  00BF                     	ds	19
  2692  00D2                     _VoltageReg:	
  2693  00D2                     	ds	2
  2694                           
  2695                           	psect	dataBANK2
  2696  0120                     __pdataBANK2:	
  2697  0120                     _H7826_Gain:	
  2698  0120                     	ds	30
  2699  013E                     _DAC_VoltageTable:	
  2700  013E                     	ds	30
  2701                           
  2702                           	psect	dataBANK3
  2703  01A0                     __pdataBANK3:	
  2704  01A0                     _H7826_01_Gain:	
  2705  01A0                     	ds	30
  2706                           
  2707                           	psect	inittext
  2708  07FA                     init_ram:	
  2709  07FA  00FE               	movwf	126
  2710  07FB                     initloop:	
  2711  07FB  0012               	moviw fsr0++
  2712  07FC  001E               	movwi fsr1++
  2713  07FD  0BFE               	decfsz	126,f
  2714  07FE  2FFB               	goto	initloop
  2715  07FF  3400               	retlw	0
  2716                           
  2717                           	psect	clrtext
  2718  0C7B                     clear_ram0:	
  2719                           ;	Called with FSR0 containing the base address, and
  2720                           ;	WREG with the size to clear
  2721                           
  2722  0C7B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2723  0C7C                     clrloop0:	
  2724  0C7C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2725  0C7D  3101               	addfsr 0,1
  2726  0C7E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2727  0C7F  2C7C               	goto	clrloop0	;have we reached the end yet?
  2728  0C80  3400               	retlw	0	;all done for this memory range, return
  2729                           
  2730                           	psect	cstackBANK1
  2731  00D4                     __pcstackBANK1:	
  2732  00D4                     ??_printf:	
  2733                           
  2734                           ; 1 bytes @ 0x0
  2735  00D4                     	ds	6
  2736  00DA                     printf@prec:	
  2737                           
  2738                           ; 2 bytes @ 0x6
  2739  00DA                     	ds	2
  2740  00DC                     printf@val:	
  2741                           
  2742                           ; 4 bytes @ 0x8
  2743  00DC                     	ds	4
  2744  00E0                     printf@ap:	
  2745                           
  2746                           ; 1 bytes @ 0xC
  2747  00E0                     	ds	1
  2748  00E1                     printf@flag:	
  2749                           
  2750                           ; 1 bytes @ 0xD
  2751  00E1                     	ds	1
  2752  00E2                     printf@width:	
  2753                           
  2754                           ; 2 bytes @ 0xE
  2755  00E2                     	ds	2
  2756  00E4                     printf@c:	
  2757                           
  2758                           ; 1 bytes @ 0x10
  2759  00E4                     	ds	1
  2760                           
  2761                           	psect	cstackCOMMON
  2762  0070                     __pcstackCOMMON:	
  2763  0070                     ?_isdigit:	
  2764  0070                     ?_I2C2_Interrupt:	
  2765                           ; 1 bit 
  2766                           
  2767  0070                     ??_I2C2_Interrupt:	
  2768                           ; 1 bytes @ 0x0
  2769                           
  2770  0070                     ?_LCD_DisplayClear:	
  2771                           ; 1 bytes @ 0x0
  2772                           
  2773  0070                     ?_Timer1_ClearRecord:	
  2774                           ; 1 bytes @ 0x0
  2775                           
  2776  0070                     ?_Basic_Init:	
  2777                           ; 1 bytes @ 0x0
  2778                           
  2779  0070                     ?_mTouch_Check:	
  2780                           ; 1 bytes @ 0x0
  2781                           
  2782  0070                     ?_mTouch_IntervalDecrement:	
  2783                           ; 1 bytes @ 0x0
  2784                           
  2785  0070                     ??_mTouch_IntervalDecrement:	
  2786                           ; 1 bytes @ 0x0
  2787                           
  2788  0070                     ?_Buzzer_Init:	
  2789                           ; 1 bytes @ 0x0
  2790                           
  2791  0070                     ?_Buzzer_SetDuty:	
  2792                           ; 1 bytes @ 0x0
  2793                           
  2794  0070                     ?_Buzzer_Count1ms:	
  2795                           ; 1 bytes @ 0x0
  2796                           
  2797  0070                     ?_I2C_CommonInterrupt:	
  2798                           ; 1 bytes @ 0x0
  2799                           
  2800  0070                     ?_LCD_WriteData:	
  2801                           ; 1 bytes @ 0x0
  2802                           
  2803  0070                     ?_LCD_Init:	
  2804                           ; 1 bytes @ 0x0
  2805                           
  2806  0070                     ?_putch:	
  2807                           ; 1 bytes @ 0x0
  2808                           
  2809  0070                     ?_LCD_CursorHome:	
  2810                           ; 1 bytes @ 0x0
  2811                           
  2812  0070                     ?_DAC_Initialize:	
  2813                           ; 1 bytes @ 0x0
  2814                           
  2815  0070                     ?_Timer1_Init:	
  2816                           ; 1 bytes @ 0x0
  2817                           
  2818  0070                     ?_Timer1_StartCount:	
  2819                           ; 1 bytes @ 0x0
  2820                           
  2821  0070                     ?_Timer1_GetSecond:	
  2822                           ; 1 bytes @ 0x0
  2823                           
  2824  0070                     ?_Timer1_GetMinute:	
  2825                           ; 1 bytes @ 0x0
  2826                           
  2827  0070                     ?_Timer1_Count1ms:	
  2828                           ; 1 bytes @ 0x0
  2829                           
  2830  0070                     ?_Timer1_DetectAssignCount:	
  2831                           ; 1 bytes @ 0x0
  2832                           
  2833  0070                     ??_Timer1_DetectAssignCount:	
  2834                           ; 1 bytes @ 0x0
  2835                           
  2836  0070                     ?_Timer6_Init:	
  2837                           ; 1 bytes @ 0x0
  2838                           
  2839  0070                     ?_Timer6_CheckFlag:	
  2840                           ; 1 bytes @ 0x0
  2841                           
  2842  0070                     ??_Timer6_CheckFlag:	
  2843                           ; 1 bytes @ 0x0
  2844                           
  2845  0070                     ?_mTouch_PortInit:	
  2846                           ; 1 bytes @ 0x0
  2847                           
  2848  0070                     ?_mTouch_Init:	
  2849                           ; 1 bytes @ 0x0
  2850                           
  2851  0070                     ?_mTouch_Read:	
  2852                           ; 1 bytes @ 0x0
  2853                           
  2854  0070                     ??_mTouch_Read:	
  2855                           ; 1 bytes @ 0x0
  2856                           
  2857  0070                     ?_main:	
  2858                           ; 1 bytes @ 0x0
  2859                           
  2860  0070                     ?_Handler:	
  2861                           ; 1 bytes @ 0x0
  2862                           
  2863  0070                     ?_I2C2_PinInit:	
  2864                           ; 1 bytes @ 0x0
  2865                           
  2866  0070                     ?i1_Buzzer_MiliSecond:	
  2867                           ; 1 bytes @ 0x0
  2868                           
  2869  0070                     ?___lmul:	
  2870                           ; 1 bytes @ 0x0
  2871                           
  2872  0070                     Buzzer_SetDuty@duty:	
  2873                           ; 4 bytes @ 0x0
  2874                           
  2875  0070                     i1Buzzer_MiliSecond@time:	
  2876                           ; 2 bytes @ 0x0
  2877                           
  2878  0070                     ___lmul@multiplier:	
  2879                           ; 2 bytes @ 0x0
  2880                           
  2881                           
  2882                           ; 4 bytes @ 0x0
  2883  0070                     	ds	1
  2884  0071                     ??_I2C_CommonInterrupt:	
  2885                           
  2886                           ; 1 bytes @ 0x1
  2887  0071                     	ds	1
  2888  0072                     ??_Buzzer_SetDuty:	
  2889  0072                     ??i1_Buzzer_MiliSecond:	
  2890                           ; 1 bytes @ 0x2
  2891                           
  2892                           
  2893                           ; 1 bytes @ 0x2
  2894  0072                     	ds	2
  2895  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
  2896  0074                     ___lmul@multiplicand:	
  2897                           ; 1 bytes @ 0x4
  2898                           
  2899                           
  2900                           ; 4 bytes @ 0x4
  2901  0074                     	ds	1
  2902  0075                     ??_Buzzer_Count1ms:	
  2903                           
  2904                           ; 1 bytes @ 0x5
  2905  0075                     	ds	3
  2906  0078                     ??___lmul:	
  2907  0078                     ___lmul@product:	
  2908                           ; 1 bytes @ 0x8
  2909                           
  2910                           
  2911                           ; 4 bytes @ 0x8
  2912  0078                     	ds	4
  2913  007C                     ??i1___lldiv:	
  2914                           
  2915                           ; 1 bytes @ 0xC
  2916  007C                     	ds	1
  2917  007D                     ??_Timer1_Count1ms:	
  2918                           
  2919                           ; 1 bytes @ 0xD
  2920  007D                     	ds	1
  2921                           
  2922                           	psect	cstackBANK0
  2923  0020                     __pcstackBANK0:	
  2924  0020                     ?i1___lldiv:	
  2925  0020                     i1___lldiv@divisor:	
  2926                           ; 4 bytes @ 0x0
  2927                           
  2928                           
  2929                           ; 4 bytes @ 0x0
  2930  0020                     	ds	4
  2931  0024                     i1___lldiv@dividend:	
  2932                           
  2933                           ; 4 bytes @ 0x4
  2934  0024                     	ds	4
  2935  0028                     i1___lldiv@quotient:	
  2936                           
  2937                           ; 4 bytes @ 0x8
  2938  0028                     	ds	4
  2939  002C                     i1___lldiv@counter:	
  2940                           
  2941                           ; 1 bytes @ 0xC
  2942  002C                     	ds	1
  2943  002D                     ??_Handler:	
  2944                           
  2945                           ; 1 bytes @ 0xD
  2946  002D                     	ds	1
  2947  002E                     ?_I2C2_Transmit:	
  2948  002E                     ??_Timer1_ClearRecord:	
  2949                           ; 1 bytes @ 0xE
  2950                           
  2951  002E                     ??_Basic_Init:	
  2952                           ; 1 bytes @ 0xE
  2953                           
  2954  002E                     ??_isdigit:	
  2955                           ; 1 bytes @ 0xE
  2956                           
  2957  002E                     ??_Buzzer_Init:	
  2958                           ; 1 bytes @ 0xE
  2959                           
  2960  002E                     ?_Buzzer_MiliSecond:	
  2961                           ; 1 bytes @ 0xE
  2962                           
  2963  002E                     ??_LCD_WriteData:	
  2964                           ; 1 bytes @ 0xE
  2965                           
  2966  002E                     ??_Timer1_Init:	
  2967                           ; 1 bytes @ 0xE
  2968                           
  2969  002E                     ??_Timer1_StartCount:	
  2970                           ; 1 bytes @ 0xE
  2971                           
  2972  002E                     ??_Timer1_GetSecond:	
  2973                           ; 1 bytes @ 0xE
  2974                           
  2975  002E                     ??_Timer1_GetMinute:	
  2976                           ; 1 bytes @ 0xE
  2977                           
  2978  002E                     ??_Timer6_Init:	
  2979                           ; 1 bytes @ 0xE
  2980                           
  2981  002E                     ??_mTouch_PortInit:	
  2982                           ; 1 bytes @ 0xE
  2983                           
  2984  002E                     ??_I2C2_PinInit:	
  2985                           ; 1 bytes @ 0xE
  2986                           
  2987  002E                     ?___wmul:	
  2988                           ; 1 bytes @ 0xE
  2989                           
  2990  002E                     ?_Timer1_GetCountSum:	
  2991                           ; 2 bytes @ 0xE
  2992                           
  2993  002E                     ?_Timer1_GetCPM:	
  2994                           ; 4 bytes @ 0xE
  2995                           
  2996  002E                     ?_Timer1_GetCPS:	
  2997                           ; 4 bytes @ 0xE
  2998                           
  2999  002E                     ?___lldiv:	
  3000                           ; 4 bytes @ 0xE
  3001                           
  3002  002E                     I2C2_Transmit@pData:	
  3003                           ; 4 bytes @ 0xE
  3004                           
  3005  002E                     _isdigit$819:	
  3006                           ; 1 bytes @ 0xE
  3007                           
  3008  002E                     Buzzer_MiliSecond@time:	
  3009                           ; 1 bytes @ 0xE
  3010                           
  3011  002E                     ___wmul@multiplier:	
  3012                           ; 2 bytes @ 0xE
  3013                           
  3014  002E                     ___lldiv@divisor:	
  3015                           ; 2 bytes @ 0xE
  3016                           
  3017                           
  3018                           ; 4 bytes @ 0xE
  3019  002E                     	ds	1
  3020  002F                     ?_I2C2_Setting:	
  3021  002F                     ??_mTouch_Init:	
  3022                           ; 1 bytes @ 0xF
  3023                           
  3024  002F                     I2C2_Setting@mode:	
  3025                           ; 1 bytes @ 0xF
  3026                           
  3027  002F                     I2C2_Transmit@size:	
  3028                           ; 1 bytes @ 0xF
  3029                           
  3030  002F                     isdigit@c:	
  3031                           ; 1 bytes @ 0xF
  3032                           
  3033                           
  3034                           ; 1 bytes @ 0xF
  3035  002F                     	ds	1
  3036  0030                     ??_I2C2_Transmit:	
  3037  0030                     ??_mTouch_Check:	
  3038                           ; 1 bytes @ 0x10
  3039                           
  3040  0030                     ??_Buzzer_MiliSecond:	
  3041                           ; 1 bytes @ 0x10
  3042                           
  3043  0030                     LCD_WriteData@point:	
  3044                           ; 1 bytes @ 0x10
  3045                           
  3046  0030                     I2C2_Setting@Speed:	
  3047                           ; 1 bytes @ 0x10
  3048                           
  3049  0030                     ___wmul@multiplicand:	
  3050                           ; 1 bytes @ 0x10
  3051                           
  3052                           
  3053                           ; 2 bytes @ 0x10
  3054  0030                     	ds	1
  3055  0031                     ??_I2C2_Setting:	
  3056  0031                     ??_LCD_DisplayClear:	
  3057                           ; 1 bytes @ 0x11
  3058                           
  3059  0031                     ??_putch:	
  3060                           ; 1 bytes @ 0x11
  3061                           
  3062  0031                     ??_LCD_CursorHome:	
  3063                           ; 1 bytes @ 0x11
  3064                           
  3065  0031                     ?_LCD_CursorPosition:	
  3066                           ; 1 bytes @ 0x11
  3067                           
  3068  0031                     putch@c:	
  3069                           ; 1 bytes @ 0x11
  3070                           
  3071  0031                     LCD_CursorPosition@ty:	
  3072                           ; 1 bytes @ 0x11
  3073                           
  3074                           
  3075                           ; 1 bytes @ 0x11
  3076  0031                     	ds	1
  3077  0032                     ??_LCD_Init:	
  3078  0032                     ??_LCD_CursorPosition:	
  3079                           ; 1 bytes @ 0x12
  3080                           
  3081  0032                     ??_Timer1_GetCountSum:	
  3082                           ; 1 bytes @ 0x12
  3083                           
  3084  0032                     ??_Timer1_GetCPM:	
  3085                           ; 1 bytes @ 0x12
  3086                           
  3087  0032                     ??_Timer1_GetCPS:	
  3088                           ; 1 bytes @ 0x12
  3089                           
  3090  0032                     ??___wmul:	
  3091                           ; 1 bytes @ 0x12
  3092                           
  3093  0032                     I2C2_Setting@address:	
  3094                           ; 1 bytes @ 0x12
  3095                           
  3096  0032                     I2C2_Transmit@address:	
  3097                           ; 1 bytes @ 0x12
  3098                           
  3099  0032                     ___wmul@product:	
  3100                           ; 1 bytes @ 0x12
  3101                           
  3102  0032                     ___lldiv@dividend:	
  3103                           ; 2 bytes @ 0x12
  3104                           
  3105                           
  3106                           ; 4 bytes @ 0x12
  3107  0032                     	ds	1
  3108  0033                     ?_I2C_Init:	
  3109  0033                     I2C_Init@address:	
  3110                           ; 1 bytes @ 0x13
  3111                           
  3112  0033                     LCD_CursorPosition@tx:	
  3113                           ; 1 bytes @ 0x13
  3114                           
  3115  0033                     I2C2_Transmit@i:	
  3116                           ; 1 bytes @ 0x13
  3117                           
  3118                           
  3119                           ; 1 bytes @ 0x13
  3120  0033                     	ds	1
  3121  0034                     I2C_Init@mode:	
  3122  0034                     I2C2_Transmit@i_574:	
  3123                           ; 1 bytes @ 0x14
  3124                           
  3125                           
  3126                           ; 1 bytes @ 0x14
  3127  0034                     	ds	1
  3128  0035                     I2C_Init@Speed:	
  3129  0035                     mTouch_Check@chan:	
  3130                           ; 1 bytes @ 0x15
  3131                           
  3132  0035                     I2C2_Transmit@result:	
  3133                           ; 1 bytes @ 0x15
  3134                           
  3135                           
  3136                           ; 1 bytes @ 0x15
  3137  0035                     	ds	1
  3138  0036                     ??_I2C_Init:	
  3139  0036                     ?_I2C_Transmit:	
  3140                           ; 1 bytes @ 0x16
  3141                           
  3142  0036                     ??___lldiv:	
  3143                           ; 1 bytes @ 0x16
  3144                           
  3145  0036                     I2C_Transmit@address:	
  3146                           ; 1 bytes @ 0x16
  3147                           
  3148                           
  3149                           ; 1 bytes @ 0x16
  3150  0036                     	ds	1
  3151  0037                     I2C_Transmit@pData:	
  3152  0037                     ___lldiv@quotient:	
  3153                           ; 1 bytes @ 0x17
  3154                           
  3155                           
  3156                           ; 4 bytes @ 0x17
  3157  0037                     	ds	1
  3158  0038                     I2C_Init@I2Cx:	
  3159  0038                     I2C_Transmit@size:	
  3160                           ; 1 bytes @ 0x18
  3161                           
  3162                           
  3163                           ; 1 bytes @ 0x18
  3164  0038                     	ds	1
  3165  0039                     ??_I2C_Transmit:	
  3166                           
  3167                           ; 1 bytes @ 0x19
  3168  0039                     	ds	2
  3169  003B                     ___lldiv@counter:	
  3170                           
  3171                           ; 1 bytes @ 0x1B
  3172  003B                     	ds	1
  3173  003C                     ?___llmod:	
  3174  003C                     I2C_Transmit@I2Cx:	
  3175                           ; 4 bytes @ 0x1C
  3176                           
  3177  003C                     ___llmod@divisor:	
  3178                           ; 1 bytes @ 0x1C
  3179                           
  3180                           
  3181                           ; 4 bytes @ 0x1C
  3182  003C                     	ds	1
  3183  003D                     I2C_Transmit@result:	
  3184                           
  3185                           ; 1 bytes @ 0x1D
  3186  003D                     	ds	1
  3187  003E                     ??_DAC_Initialize:	
  3188  003E                     ?_DAC_WriteVoltage:	
  3189                           ; 1 bytes @ 0x1E
  3190                           
  3191  003E                     DAC_WriteVoltage@volue:	
  3192                           ; 1 bytes @ 0x1E
  3193                           
  3194                           
  3195                           ; 2 bytes @ 0x1E
  3196  003E                     	ds	2
  3197  0040                     ??_DAC_WriteVoltage:	
  3198  0040                     ___llmod@dividend:	
  3199                           ; 1 bytes @ 0x20
  3200                           
  3201                           
  3202                           ; 4 bytes @ 0x20
  3203  0040                     	ds	4
  3204  0044                     ??___llmod:	
  3205                           
  3206                           ; 1 bytes @ 0x24
  3207  0044                     	ds	1
  3208  0045                     ___llmod@counter:	
  3209                           
  3210                           ; 1 bytes @ 0x25
  3211  0045                     	ds	1
  3212  0046                     ?_printf:	
  3213  0046                     printf@f:	
  3214                           ; 2 bytes @ 0x26
  3215                           
  3216                           
  3217                           ; 2 bytes @ 0x26
  3218  0046                     	ds	10
  3219  0050                     ??_main:	
  3220                           
  3221                           ; 1 bytes @ 0x30
  3222  0050                     	ds	4
  3223                           
  3224                           	psect	maintext
  3225  03D4                     __pmaintext:	
  3226 ;;
  3227 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3228 ;;
  3229 ;; *************** function _main *****************
  3230 ;; Defined at:
  3231 ;;		line 23 in file "main.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      char 
  3238 ;; Registers used:
  3239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : B1F/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3245 ;;      Params:         0       0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0       0
  3247 ;;      Temps:          0       4       0       0       0       0
  3248 ;;      Totals:         0       4       0       0       0       0
  3249 ;;Total ram usage:        4 bytes
  3250 ;; Hardware stack levels required when called:    7
  3251 ;; This function calls:
  3252 ;;		_Basic_Init
  3253 ;;		_Buzzer_Init
  3254 ;;		_DAC_Initialize
  3255 ;;		_DAC_WriteVoltage
  3256 ;;		_LCD_CursorHome
  3257 ;;		_LCD_CursorPosition
  3258 ;;		_LCD_Init
  3259 ;;		_Timer1_GetCPM
  3260 ;;		_Timer1_GetCPS
  3261 ;;		_Timer1_GetCountSum
  3262 ;;		_Timer1_GetMinute
  3263 ;;		_Timer1_GetSecond
  3264 ;;		_Timer1_Init
  3265 ;;		_Timer1_StartCount
  3266 ;;		_Timer6_Init
  3267 ;;		_mTouch_Check
  3268 ;;		_mTouch_Init
  3269 ;;		_printf
  3270 ;; This function is called by:
  3271 ;;		Startup code after reset
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           
  3276                           ;psect for function _main
  3277  03D4                     _main:	
  3278                           
  3279                           ;main.c: 25: Basic_Init();
  3280                           
  3281                           ;incstack = 0
  3282                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3283  03D4  318D  251F  3183   	fcall	_Basic_Init
  3284                           
  3285                           ;main.c: 26: LATA6 = 1;
  3286  03D7  0022               	movlb	2	; select bank2
  3287  03D8  170C               	bsf	12,6	;volatile
  3288                           
  3289                           ;main.c: 27: Buzzer_Init();
  3290  03D9  318E  26A6  3183   	fcall	_Buzzer_Init
  3291                           
  3292                           ;main.c: 28: LCD_Init();
  3293  03DC  3185  25DA  3183   	fcall	_LCD_Init
  3294                           
  3295                           ;main.c: 29: Timer1_Init();
  3296  03DF  318E  263E  3183   	fcall	_Timer1_Init
  3297                           
  3298                           ;main.c: 30: mTouch_Init();
  3299  03E2  318D  2554  3183   	fcall	_mTouch_Init
  3300                           
  3301                           ;main.c: 32: Timer6_Init();
  3302  03E5  318D  2541  3183   	fcall	_Timer6_Init
  3303                           
  3304                           ;main.c: 33: DAC_Initialize();
  3305  03E8  318E  261E  3183   	fcall	_DAC_Initialize
  3306                           
  3307                           ;main.c: 35: Timer1_StartCount();
  3308  03EB  318C  2476  3183   	fcall	_Timer1_StartCount
  3309                           
  3310                           ;main.c: 37: mode.ModeNum = 0;
  3311  03EE  0020               	movlb	0	; select bank0
  3312  03EF  01DD               	clrf	_mode+1
  3313                           
  3314                           ;main.c: 39: DAC_WriteVoltage(DAC_DataTable[6]);
  3315  03F0  3077               	movlw	low ((_DAC_DataTable+12)| (0+32768))
  3316  03F1  0084               	movwf	4
  3317  03F2  3082               	movlw	high ((_DAC_DataTable+12)| (0+32768))
  3318  03F3  0085               	movwf	5
  3319  03F4  3F00               	moviw [0]fsr0
  3320  03F5  00BE               	movwf	DAC_WriteVoltage@volue
  3321  03F6  3F01               	moviw [1]fsr0
  3322  03F7  00BF               	movwf	DAC_WriteVoltage@volue+1
  3323  03F8  318E  26CE  3183   	fcall	_DAC_WriteVoltage
  3324  03FB                     l3253:	
  3325                           ;main.c: 41: while(1)
  3326                           
  3327                           
  3328                           ;main.c: 42: {
  3329                           ;main.c: 43: if(mTouch_Check(2)&&(mode.ModeNum<4-1))
  3330  03FB  3002               	movlw	2
  3331  03FC  3187  2743  3183   	fcall	_mTouch_Check
  3332  03FF  3A00               	xorlw	0
  3333  0400  1903               	skipnz
  3334  0401  2C0C               	goto	l3259
  3335  0402  3003               	movlw	3
  3336  0403  0020               	movlb	0	; select bank0
  3337  0404  025D               	subwf	_mode+1,w
  3338  0405  1803               	skipnc
  3339  0406  2C0C               	goto	l3259
  3340                           
  3341                           ;main.c: 44: mode.ModeNum++;
  3342  0407  3001               	movlw	1
  3343  0408  00D0               	movwf	??_main
  3344  0409  0850               	movf	??_main,w
  3345  040A  07DD               	addwf	_mode+1,f
  3346  040B  2C19               	goto	l3265
  3347  040C                     l3259:	
  3348                           
  3349                           ;main.c: 45: else if(mTouch_Check(1)&&(mode.ModeNum>0))
  3350  040C  3001               	movlw	1
  3351  040D  3187  2743  3183   	fcall	_mTouch_Check
  3352  0410  3A00               	xorlw	0
  3353  0411  1903               	skipnz
  3354  0412  2C19               	goto	l3265
  3355  0413  0020               	movlb	0	; select bank0
  3356  0414  085D               	movf	_mode+1,w
  3357  0415  1903               	btfsc	3,2
  3358  0416  2C19               	goto	l3265
  3359                           
  3360                           ;main.c: 46: mode.ModeNum--;
  3361  0417  3001               	movlw	1
  3362  0418  02DD               	subwf	_mode+1,f
  3363  0419                     l3265:	
  3364                           
  3365                           ;main.c: 48: LCD_CursorHome();
  3366  0419  318C  24EE  3183   	fcall	_LCD_CursorHome
  3367                           
  3368                           ;main.c: 49: switch(mode.ModeNum)
  3369  041C  2C90               	goto	l3283
  3370  041D                     l3267:	
  3371                           ;main.c: 50: {
  3372                           ;main.c: 51: case COUNT:
  3373                           
  3374                           
  3375                           ;main.c: 52: printf("%7lu %7lu", Timer1_GetCPM(),Timer1_GetCountSum());
  3376  041D  30AC               	movlw	low (STR_1| (0+32768))
  3377  041E  0020               	movlb	0	; select bank0
  3378  041F  00C6               	movwf	printf@f
  3379  0420  3082               	movlw	high (STR_1| (0+32768))
  3380  0421  00C7               	movwf	printf@f+1
  3381  0422  318C  24C3  3183   	fcall	_Timer1_GetCPM
  3382  0425  0020               	movlb	0	; select bank0
  3383  0426  0831               	movf	?_Timer1_GetCPM+3,w
  3384  0427  00CB               	movwf	?_printf+5
  3385  0428  0830               	movf	?_Timer1_GetCPM+2,w
  3386  0429  00CA               	movwf	?_printf+4
  3387  042A  082F               	movf	?_Timer1_GetCPM+1,w
  3388  042B  00C9               	movwf	?_printf+3
  3389  042C  082E               	movf	?_Timer1_GetCPM,w
  3390  042D  00C8               	movwf	?_printf+2
  3391  042E  318D  2530  3183   	fcall	_Timer1_GetCountSum
  3392  0431  0020               	movlb	0	; select bank0
  3393  0432  0831               	movf	?_Timer1_GetCountSum+3,w
  3394  0433  00CF               	movwf	?_printf+9
  3395  0434  0830               	movf	?_Timer1_GetCountSum+2,w
  3396  0435  00CE               	movwf	?_printf+8
  3397  0436  082F               	movf	?_Timer1_GetCountSum+1,w
  3398  0437  00CD               	movwf	?_printf+7
  3399  0438  082E               	movf	?_Timer1_GetCountSum,w
  3400  0439  00CC               	movwf	?_printf+6
  3401  043A  3180  2058  3183   	fcall	_printf
  3402                           
  3403                           ;main.c: 53: LCD_CursorPosition(0,1);
  3404  043D  0020               	movlb	0	; select bank0
  3405  043E  01B1               	clrf	LCD_CursorPosition@ty
  3406  043F  0AB1               	incf	LCD_CursorPosition@ty,f
  3407  0440  3000               	movlw	0
  3408  0441  318D  257D  3183   	fcall	_LCD_CursorPosition
  3409                           
  3410                           ;main.c: 54: printf("%6lu",Timer1_GetCPS());
  3411  0444  30CF               	movlw	low (STR_2| (0+32768))
  3412  0445  0020               	movlb	0	; select bank0
  3413  0446  00C6               	movwf	printf@f
  3414  0447  3083               	movlw	high (STR_2| (0+32768))
  3415  0448  00C7               	movwf	printf@f+1
  3416  0449  318C  24D1  3183   	fcall	_Timer1_GetCPS
  3417  044C  0020               	movlb	0	; select bank0
  3418  044D  0831               	movf	?_Timer1_GetCPS+3,w
  3419  044E  00CB               	movwf	?_printf+5
  3420  044F  0830               	movf	?_Timer1_GetCPS+2,w
  3421  0450  00CA               	movwf	?_printf+4
  3422  0451  082F               	movf	?_Timer1_GetCPS+1,w
  3423  0452  00C9               	movwf	?_printf+3
  3424  0453  082E               	movf	?_Timer1_GetCPS,w
  3425  0454  00C8               	movwf	?_printf+2
  3426  0455  3180  2058  3183   	fcall	_printf
  3427                           
  3428                           ;main.c: 55: printf("    %02d:%02d",Timer1_GetMinute(),Timer1_GetSecond());
  3429  0458  3089               	movlw	low (STR_3| (0+32768))
  3430  0459  0020               	movlb	0	; select bank0
  3431  045A  00C6               	movwf	printf@f
  3432  045B  3082               	movlw	high (STR_3| (0+32768))
  3433  045C  00C7               	movwf	printf@f+1
  3434  045D  318C  2470  3183   	fcall	_Timer1_GetMinute
  3435  0460  0020               	movlb	0	; select bank0
  3436  0461  00D0               	movwf	??_main
  3437  0462  01D1               	clrf	??_main+1
  3438  0463  0850               	movf	??_main,w
  3439  0464  00C8               	movwf	?_printf+2
  3440  0465  0851               	movf	??_main+1,w
  3441  0466  00C9               	movwf	?_printf+3
  3442  0467  318C  2473  3183   	fcall	_Timer1_GetSecond
  3443  046A  0020               	movlb	0	; select bank0
  3444  046B  00D2               	movwf	??_main+2
  3445  046C  01D3               	clrf	??_main+3
  3446  046D  0852               	movf	??_main+2,w
  3447  046E  00CA               	movwf	?_printf+4
  3448  046F  0853               	movf	??_main+3,w
  3449  0470  00CB               	movwf	?_printf+5
  3450  0471  3180  2058  3183   	fcall	_printf
  3451                           
  3452                           ;main.c: 56: break;
  3453  0474  2BFB               	goto	l3253
  3454  0475                     l3275:	
  3455                           ;main.c: 57: case SELECTFUNC:
  3456                           
  3457                           
  3458                           ;main.c: 58: printf("SELECTFUNC");
  3459  0475  3097               	movlw	low (STR_4| (0+32768))
  3460  0476  0020               	movlb	0	; select bank0
  3461  0477  00C6               	movwf	printf@f
  3462  0478  3082               	movlw	high (STR_4| (0+32768))
  3463  0479  00C7               	movwf	printf@f+1
  3464  047A  3180  2058  3183   	fcall	_printf
  3465                           
  3466                           ;main.c: 59: break;
  3467  047D  2BFB               	goto	l3253
  3468  047E                     l3277:	
  3469                           ;main.c: 60: case ADJGAIN:
  3470                           
  3471                           
  3472                           ;main.c: 61: printf("ADJGAIN");
  3473  047E  30CE               	movlw	low (STR_5| (0+32768))
  3474  047F  0020               	movlb	0	; select bank0
  3475  0480  00C6               	movwf	printf@f
  3476  0481  3082               	movlw	high (STR_5| (0+32768))
  3477  0482  00C7               	movwf	printf@f+1
  3478  0483  3180  2058  3183   	fcall	_printf
  3479                           
  3480                           ;main.c: 62: break;
  3481  0486  2BFB               	goto	l3253
  3482  0487                     l3279:	
  3483                           ;main.c: 63: case PMTDEVICE:
  3484                           
  3485                           
  3486                           ;main.c: 64: printf("PMTDEVICE");
  3487  0487  30A2               	movlw	low (STR_6| (0+32768))
  3488  0488  0020               	movlb	0	; select bank0
  3489  0489  00C6               	movwf	printf@f
  3490  048A  3082               	movlw	high (STR_6| (0+32768))
  3491  048B  00C7               	movwf	printf@f+1
  3492  048C  3180  2058  3183   	fcall	_printf
  3493                           
  3494                           ;main.c: 66: }
  3495                           
  3496                           ;main.c: 65: break;
  3497  048F  2BFB               	goto	l3253
  3498  0490                     l3283:	
  3499  0490  0020               	movlb	0	; select bank0
  3500  0491  085D               	movf	_mode+1,w
  3501                           
  3502                           ; Switch size 1, requested type "space"
  3503                           ; Number of cases is 4, Range of values is 0 to 3
  3504                           ; switch strategies available:
  3505                           ; Name         Instructions Cycles
  3506                           ; simple_byte           13     7 (average)
  3507                           ; direct_byte           14     6 (fixed)
  3508                           ; jumptable            260     6 (fixed)
  3509                           ;	Chosen strategy is simple_byte
  3510  0492  3A00               	xorlw	0	; case 0
  3511  0493  1903               	skipnz
  3512  0494  2C1D               	goto	l3267
  3513  0495  3A01               	xorlw	1	; case 1
  3514  0496  1903               	skipnz
  3515  0497  2C75               	goto	l3275
  3516  0498  3A03               	xorlw	3	; case 2
  3517  0499  1903               	skipnz
  3518  049A  2C7E               	goto	l3277
  3519  049B  3A01               	xorlw	1	; case 3
  3520  049C  1903               	skipnz
  3521  049D  2C87               	goto	l3279
  3522  049E  2BFB               	goto	l3253
  3523  049F  2BFB               	goto	l3253
  3524  04A0                     __end_of_main:	
  3525                           ;main.c: 67: }
  3526                           ;main.c: 69: return 0;
  3527                           ;	Return value of _main is never used
  3528                           
  3529                           
  3530                           	psect	text1
  3531  0058                     __ptext1:	
  3532 ;; *************** function _printf *****************
  3533 ;; Defined at:
  3534 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  f               2   38[BANK0 ] PTR const unsigned char 
  3537 ;;		 -> STR_6(10), STR_5(8), STR_4(11), STR_3(14), 
  3538 ;;		 -> STR_2(5), STR_1(10), 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  val             4    8[BANK1 ] unsigned long 
  3541 ;;  tmpval          4    0        struct .
  3542 ;;  width           2   14[BANK1 ] int 
  3543 ;;  prec            2    6[BANK1 ] int 
  3544 ;;  cp              2    0        PTR const unsigned char 
  3545 ;;  len             2    0        unsigned int 
  3546 ;;  c               1   16[BANK1 ] char 
  3547 ;;  flag            1   13[BANK1 ] unsigned char 
  3548 ;;  ap              1   12[BANK1 ] PTR void [1]
  3549 ;;		 -> ?_printf(2), 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  2   38[BANK0 ] int 
  3552 ;; Registers used:
  3553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3559 ;;      Params:         0      10       0       0       0       0
  3560 ;;      Locals:         0       0      11       0       0       0
  3561 ;;      Temps:          0       0       6       0       0       0
  3562 ;;      Totals:         0      10      17       0       0       0
  3563 ;;Total ram usage:       27 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    5
  3566 ;; This function calls:
  3567 ;;		___lldiv
  3568 ;;		___llmod
  3569 ;;		___wmul
  3570 ;;		_isdigit
  3571 ;;		_putch
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           
  3578                           ;psect for function _printf
  3579  0058                     _printf:	
  3580                           
  3581                           ;doprnt.c: 466: va_list ap;
  3582                           ;doprnt.c: 499: signed char c;
  3583                           ;doprnt.c: 501: int width;
  3584                           ;doprnt.c: 504: int prec;
  3585                           ;doprnt.c: 508: unsigned char flag;
  3586                           ;doprnt.c: 523: union {
  3587                           ;doprnt.c: 524: unsigned long vd;
  3588                           ;doprnt.c: 525: double integ;
  3589                           ;doprnt.c: 526: } tmpval;
  3590                           ;doprnt.c: 528: unsigned long val;
  3591                           ;doprnt.c: 529: unsigned len;
  3592                           ;doprnt.c: 530: const char * cp;
  3593                           ;doprnt.c: 533: *ap = __va_start();
  3594                           
  3595                           ;incstack = 0
  3596                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3597  0058  3048               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3598  0059  0021               	movlb	1	; select bank1
  3599  005A  00D4               	movwf	??_printf^(0+128)
  3600  005B  0854               	movf	??_printf^(0+128),w
  3601  005C  00E0               	movwf	printf@ap^(0+128)
  3602  005D                     l3211:	
  3603                           ;doprnt.c: 536: while(c = *f++) {
  3604                           
  3605  005D  0020               	movlb	0	; select bank0
  3606  005E  0847               	movf	printf@f+1,w
  3607  005F  0021               	movlb	1	; select bank1
  3608  0060  00D5               	movwf	(??_printf^(0+128)+1)
  3609  0061  0020               	movlb	0	; select bank0
  3610  0062  0846               	movf	printf@f,w
  3611  0063  0021               	movlb	1	; select bank1
  3612  0064  00D4               	movwf	??_printf^(0+128)
  3613  0065  0020               	movlb	0	; select bank0
  3614  0066  0AC6               	incf	printf@f,f
  3615  0067  1903               	skipnz
  3616  0068  0AC7               	incf	printf@f+1,f
  3617  0069  0021               	movlb	1	; select bank1
  3618  006A  0854               	movf	??_printf^(0+128),w
  3619  006B  0084               	movwf	4
  3620  006C  0855               	movf	(??_printf+1)^(0+128),w
  3621  006D  0085               	movwf	5
  3622  006E  0800               	movf	0,w	;code access
  3623  006F  00D6               	movwf	(??_printf+2)^(0+128)
  3624  0070  0856               	movf	(??_printf+2)^(0+128),w
  3625  0071  00E4               	movwf	printf@c^(0+128)
  3626  0072  0864               	movf	printf@c^(0+128),w
  3627  0073  1903               	btfsc	3,2
  3628  0074  0008               	return
  3629                           
  3630                           ;doprnt.c: 538: if(c != '%')
  3631  0075  3025               	movlw	37
  3632  0076  0664               	xorwf	printf@c^(0+128),w
  3633  0077  1903               	btfsc	3,2
  3634  0078  287E               	goto	l3111
  3635                           
  3636                           ;doprnt.c: 540: {
  3637                           ;doprnt.c: 541: (putch(c) );
  3638  0079  0864               	movf	printf@c^(0+128),w
  3639  007A  318C  2481  3180   	fcall	_putch
  3640                           
  3641                           ;doprnt.c: 542: continue;
  3642  007D  285D               	goto	l3211
  3643  007E                     l3111:	
  3644                           
  3645                           ;doprnt.c: 543: }
  3646                           ;doprnt.c: 546: width = 0;
  3647  007E  0021               	movlb	1	; select bank1
  3648  007F  01E2               	clrf	printf@width^(0+128)
  3649  0080  01E3               	clrf	(printf@width+1)^(0+128)
  3650                           
  3651                           ;doprnt.c: 548: flag = 0;
  3652  0081  01E1               	clrf	printf@flag^(0+128)
  3653                           
  3654                           ;doprnt.c: 551: switch(*f) {
  3655                           
  3656                           ;doprnt.c: 550: for(;;) {
  3657  0082  288A               	goto	l3117
  3658  0083                     l565:	
  3659                           ;doprnt.c: 579: case '0':
  3660                           
  3661                           
  3662                           ;doprnt.c: 580: flag |= 0x04;
  3663  0083  0021               	movlb	1	; select bank1
  3664  0084  1561               	bsf	printf@flag^(0+128),2
  3665                           
  3666                           ;doprnt.c: 581: f++;
  3667  0085  3001               	movlw	1
  3668  0086  0020               	movlb	0	; select bank0
  3669  0087  07C6               	addwf	printf@f,f
  3670  0088  3000               	movlw	0
  3671  0089  3DC7               	addwfc	printf@f+1,f
  3672  008A                     l3117:	
  3673                           ;doprnt.c: 584: }
  3674                           
  3675                           ;doprnt.c: 582: continue;
  3676                           
  3677  008A  0020               	movlb	0	; select bank0
  3678  008B  0846               	movf	printf@f,w
  3679  008C  0084               	movwf	4
  3680  008D  0847               	movf	printf@f+1,w
  3681  008E  0085               	movwf	5
  3682  008F  0800               	movf	0,w	;code access
  3683                           
  3684                           ; Switch size 1, requested type "space"
  3685                           ; Number of cases is 1, Range of values is 48 to 48
  3686                           ; switch strategies available:
  3687                           ; Name         Instructions Cycles
  3688                           ; simple_byte            4     3 (average)
  3689                           ; direct_byte           11     9 (fixed)
  3690                           ; jumptable            263     9 (fixed)
  3691                           ;	Chosen strategy is simple_byte
  3692  0090  3A30               	xorlw	48	; case 48
  3693  0091  1903               	skipnz
  3694  0092  2883               	goto	l565
  3695  0093  2894               	goto	l3119
  3696  0094                     l3119:	
  3697                           ;doprnt.c: 586: }
  3698                           
  3699                           ;doprnt.c: 585: break;
  3700                           
  3701                           
  3702                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3703  0094  0846               	movf	printf@f,w
  3704  0095  0084               	movwf	4
  3705  0096  0847               	movf	printf@f+1,w
  3706  0097  0085               	movwf	5
  3707  0098  0800               	movf	0,w	;code access
  3708  0099  318C  24DF  3180   	fcall	_isdigit
  3709  009C  1C03               	btfss	3,0
  3710  009D  28DE               	goto	l3133
  3711                           
  3712                           ;doprnt.c: 598: width = 0;
  3713  009E  0021               	movlb	1	; select bank1
  3714  009F  01E2               	clrf	printf@width^(0+128)
  3715  00A0  01E3               	clrf	(printf@width+1)^(0+128)
  3716  00A1                     l3123:	
  3717                           ;doprnt.c: 599: do {
  3718                           
  3719                           
  3720                           ;doprnt.c: 600: width *= 10;
  3721  00A1  300A               	movlw	10
  3722  00A2  0020               	movlb	0	; select bank0
  3723  00A3  00AE               	movwf	___wmul@multiplier
  3724  00A4  3000               	movlw	0
  3725  00A5  00AF               	movwf	___wmul@multiplier+1
  3726  00A6  0021               	movlb	1	; select bank1
  3727  00A7  0863               	movf	(printf@width+1)^(0+128),w
  3728  00A8  0020               	movlb	0	; select bank0
  3729  00A9  00B1               	movwf	___wmul@multiplicand+1
  3730  00AA  0021               	movlb	1	; select bank1
  3731  00AB  0862               	movf	printf@width^(0+128),w
  3732  00AC  0020               	movlb	0	; select bank0
  3733  00AD  00B0               	movwf	___wmul@multiplicand
  3734  00AE  318D  25E4  3180   	fcall	___wmul
  3735  00B1  0020               	movlb	0	; select bank0
  3736  00B2  082F               	movf	?___wmul+1,w
  3737  00B3  0021               	movlb	1	; select bank1
  3738  00B4  00E3               	movwf	(printf@width+1)^(0+128)
  3739  00B5  0020               	movlb	0	; select bank0
  3740  00B6  082E               	movf	?___wmul,w
  3741  00B7  0021               	movlb	1	; select bank1
  3742  00B8  00E2               	movwf	printf@width^(0+128)
  3743                           
  3744                           ;doprnt.c: 601: width += *f++ - '0';
  3745  00B9  0020               	movlb	0	; select bank0
  3746  00BA  0846               	movf	printf@f,w
  3747  00BB  0084               	movwf	4
  3748  00BC  0847               	movf	printf@f+1,w
  3749  00BD  0085               	movwf	5
  3750  00BE  0800               	movf	0,w	;code access
  3751  00BF  3ED0               	addlw	208
  3752  00C0  0021               	movlb	1	; select bank1
  3753  00C1  00D4               	movwf	??_printf^(0+128)
  3754  00C2  30FF               	movlw	255
  3755  00C3  1803               	skipnc
  3756  00C4  3000               	movlw	0
  3757  00C5  00D5               	movwf	(??_printf^(0+128)+1)
  3758  00C6  0854               	movf	??_printf^(0+128),w
  3759  00C7  07E2               	addwf	printf@width^(0+128),f
  3760  00C8  0855               	movf	(??_printf+1)^(0+128),w
  3761  00C9  3DE3               	addwfc	(printf@width+1)^(0+128),f
  3762  00CA  3001               	movlw	1
  3763  00CB  0020               	movlb	0	; select bank0
  3764  00CC  07C6               	addwf	printf@f,f
  3765  00CD  3000               	movlw	0
  3766  00CE  3DC7               	addwfc	printf@f+1,f
  3767                           
  3768                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3769  00CF  0846               	movf	printf@f,w
  3770  00D0  0084               	movwf	4
  3771  00D1  0847               	movf	printf@f+1,w
  3772  00D2  0085               	movwf	5
  3773  00D3  0800               	movf	0,w	;code access
  3774  00D4  318C  24DF  3180   	fcall	_isdigit
  3775  00D7  1C03               	btfss	3,0
  3776  00D8  28DE               	goto	l3133
  3777  00D9  28A1               	goto	l3123
  3778  00DA                     l576:	
  3779                           ;doprnt.c: 641: case 'l':
  3780                           
  3781                           ;doprnt.c: 638: goto alldone;
  3782                           
  3783                           ;doprnt.c: 637: case 0:
  3784                           
  3785                           ;doprnt.c: 635: switch(c = *f++) {
  3786                           
  3787                           ;doprnt.c: 608: }
  3788                           ;doprnt.c: 633: loop:
  3789                           
  3790                           
  3791                           ;doprnt.c: 643: flag |= 0x10;
  3792  00DA  1661               	bsf	printf@flag^(0+128),4
  3793                           
  3794                           ;doprnt.c: 644: goto loop;
  3795  00DB  28DE               	goto	l3133
  3796  00DC                     l581:	
  3797                           ;doprnt.c: 817: case 'u':
  3798                           
  3799                           ;doprnt.c: 813: continue;
  3800                           
  3801                           ;doprnt.c: 802: default:
  3802                           
  3803                           ;doprnt.c: 698: case 'i':
  3804                           ;doprnt.c: 699: break;
  3805                           
  3806                           ;doprnt.c: 697: case 'd':
  3807                           
  3808                           
  3809                           ;doprnt.c: 818: flag |= 0x40;
  3810  00DC  1761               	bsf	printf@flag^(0+128),6
  3811                           
  3812                           ;doprnt.c: 822: }
  3813                           
  3814                           ;doprnt.c: 819: break;
  3815  00DD  2901               	goto	l579
  3816  00DE                     l3133:	
  3817  00DE  0020               	movlb	0	; select bank0
  3818  00DF  0847               	movf	printf@f+1,w
  3819  00E0  0021               	movlb	1	; select bank1
  3820  00E1  00D5               	movwf	(??_printf^(0+128)+1)
  3821  00E2  0020               	movlb	0	; select bank0
  3822  00E3  0846               	movf	printf@f,w
  3823  00E4  0021               	movlb	1	; select bank1
  3824  00E5  00D4               	movwf	??_printf^(0+128)
  3825  00E6  0020               	movlb	0	; select bank0
  3826  00E7  0AC6               	incf	printf@f,f
  3827  00E8  1903               	skipnz
  3828  00E9  0AC7               	incf	printf@f+1,f
  3829  00EA  0021               	movlb	1	; select bank1
  3830  00EB  0854               	movf	??_printf^(0+128),w
  3831  00EC  0084               	movwf	4
  3832  00ED  0855               	movf	(??_printf+1)^(0+128),w
  3833  00EE  0085               	movwf	5
  3834  00EF  0800               	movf	0,w	;code access
  3835  00F0  00E4               	movwf	printf@c^(0+128)
  3836                           
  3837                           ; Switch size 1, requested type "space"
  3838                           ; Number of cases is 5, Range of values is 0 to 117
  3839                           ; switch strategies available:
  3840                           ; Name         Instructions Cycles
  3841                           ; simple_byte           16     9 (average)
  3842                           ; direct_byte          242     6 (fixed)
  3843                           ; jumptable            260     6 (fixed)
  3844                           ;	Chosen strategy is simple_byte
  3845  00F1  3A00               	xorlw	0	; case 0
  3846  00F2  1903               	skipnz
  3847  00F3  2A42               	goto	l609
  3848  00F4  3A64               	xorlw	100	; case 100
  3849  00F5  1903               	skipnz
  3850  00F6  2901               	goto	l579
  3851  00F7  3A0D               	xorlw	13	; case 105
  3852  00F8  1903               	skipnz
  3853  00F9  2901               	goto	l579
  3854  00FA  3A05               	xorlw	5	; case 108
  3855  00FB  1903               	skipnz
  3856  00FC  28DA               	goto	l576
  3857  00FD  3A19               	xorlw	25	; case 117
  3858  00FE  1903               	skipnz
  3859  00FF  28DC               	goto	l581
  3860  0100  285D               	goto	l3211
  3861  0101                     l579:	
  3862                           
  3863                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  3864  0101  1B61               	btfsc	printf@flag^(0+128),6
  3865  0102  2938               	goto	l582
  3866                           
  3867                           ;doprnt.c: 1253: {
  3868                           ;doprnt.c: 1255: if(flag & 0x10)
  3869  0103  1E61               	btfss	printf@flag^(0+128),4
  3870  0104  2912               	goto	l3141
  3871                           
  3872                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  3873  0105  0860               	movf	printf@ap^(0+128),w
  3874  0106  0086               	movwf	6
  3875  0107  0187               	clrf	7
  3876  0108  3F40               	moviw [0]fsr1
  3877  0109  00DC               	movwf	printf@val^(0+128)
  3878  010A  3F41               	moviw [1]fsr1
  3879  010B  00DD               	movwf	(printf@val+1)^(0+128)
  3880  010C  3F42               	moviw [2]fsr1
  3881  010D  00DE               	movwf	(printf@val+2)^(0+128)
  3882  010E  3F43               	moviw [3]fsr1
  3883  010F  00DF               	movwf	(printf@val+3)^(0+128)
  3884  0110  3004               	movlw	4
  3885  0111  2923               	goto	L2
  3886  0112                     l3141:	
  3887                           
  3888                           ;doprnt.c: 1257: else
  3889                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3890  0112  0860               	movf	printf@ap^(0+128),w
  3891  0113  0086               	movwf	6
  3892  0114  0187               	clrf	7
  3893  0115  3F40               	moviw [0]fsr1
  3894  0116  00D4               	movwf	??_printf^(0+128)
  3895  0117  3F41               	moviw [1]fsr1
  3896  0118  00D5               	movwf	(??_printf^(0+128)+1)
  3897  0119  0854               	movf	??_printf^(0+128),w
  3898  011A  00DC               	movwf	printf@val^(0+128)
  3899  011B  0855               	movf	(??_printf+1)^(0+128),w
  3900  011C  00DD               	movwf	(printf@val+1)^(0+128)
  3901  011D  0D89               	rlf	9,f
  3902  011E  3B89               	subwfb	9,f
  3903  011F  0989               	comf	9,f
  3904  0120  00DE               	movwf	(printf@val+2)^(0+128)
  3905  0121  00DF               	movwf	(printf@val+3)^(0+128)
  3906  0122  3002               	movlw	2
  3907  0123                     L2:	
  3908  0123  00D4               	movwf	??_printf^(0+128)
  3909  0124  0854               	movf	??_printf^(0+128),w
  3910  0125  07E0               	addwf	printf@ap^(0+128),f
  3911                           
  3912                           ;doprnt.c: 1261: if((long)val < 0) {
  3913  0126  1FDF               	btfss	(printf@val+3)^(0+128),7
  3914  0127  2958               	goto	l3159
  3915                           
  3916                           ;doprnt.c: 1262: flag |= 0x03;
  3917  0128  3003               	movlw	3
  3918  0129  00D4               	movwf	??_printf^(0+128)
  3919  012A  0854               	movf	??_printf^(0+128),w
  3920  012B  04E1               	iorwf	printf@flag^(0+128),f
  3921                           
  3922                           ;doprnt.c: 1263: val = -val;
  3923  012C  09DC               	comf	printf@val^(0+128),f
  3924  012D  09DD               	comf	(printf@val+1)^(0+128),f
  3925  012E  09DE               	comf	(printf@val+2)^(0+128),f
  3926  012F  09DF               	comf	(printf@val+3)^(0+128),f
  3927  0130  0ADC               	incf	printf@val^(0+128),f
  3928  0131  1903               	skipnz
  3929  0132  0ADD               	incf	(printf@val+1)^(0+128),f
  3930  0133  1903               	skipnz
  3931  0134  0ADE               	incf	(printf@val+2)^(0+128),f
  3932  0135  1903               	skipnz
  3933  0136  0ADF               	incf	(printf@val+3)^(0+128),f
  3934                           
  3935                           ;doprnt.c: 1264: }
  3936                           ;doprnt.c: 1266: }
  3937  0137  2958               	goto	l3159
  3938  0138                     l582:	
  3939                           
  3940                           ;doprnt.c: 1268: else
  3941                           ;doprnt.c: 1273: {
  3942                           ;doprnt.c: 1281: if(flag & 0x10)
  3943  0138  1E61               	btfss	printf@flag^(0+128),4
  3944  0139  2947               	goto	l3155
  3945                           
  3946                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3947  013A  0860               	movf	printf@ap^(0+128),w
  3948  013B  0086               	movwf	6
  3949  013C  0187               	clrf	7
  3950  013D  3F40               	moviw [0]fsr1
  3951  013E  00DC               	movwf	printf@val^(0+128)
  3952  013F  3F41               	moviw [1]fsr1
  3953  0140  00DD               	movwf	(printf@val+1)^(0+128)
  3954  0141  3F42               	moviw [2]fsr1
  3955  0142  00DE               	movwf	(printf@val+2)^(0+128)
  3956  0143  3F43               	moviw [3]fsr1
  3957  0144  00DF               	movwf	(printf@val+3)^(0+128)
  3958  0145  3004               	movlw	4
  3959  0146  2955               	goto	L3
  3960  0147                     l3155:	
  3961                           
  3962                           ;doprnt.c: 1283: else
  3963                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3964  0147  0860               	movf	printf@ap^(0+128),w
  3965  0148  0086               	movwf	6
  3966  0149  0187               	clrf	7
  3967  014A  3F40               	moviw [0]fsr1
  3968  014B  00D4               	movwf	??_printf^(0+128)
  3969  014C  3F41               	moviw [1]fsr1
  3970  014D  00D5               	movwf	(??_printf^(0+128)+1)
  3971  014E  0854               	movf	??_printf^(0+128),w
  3972  014F  00DC               	movwf	printf@val^(0+128)
  3973  0150  0855               	movf	(??_printf+1)^(0+128),w
  3974  0151  00DD               	movwf	(printf@val^(0+128)+1)
  3975  0152  01DE               	clrf	(printf@val^(0+128)+2)
  3976  0153  01DF               	clrf	(printf@val^(0+128)+3)
  3977  0154  3002               	movlw	2
  3978  0155                     L3:	
  3979  0155  00D4               	movwf	??_printf^(0+128)
  3980  0156  0854               	movf	??_printf^(0+128),w
  3981  0157  07E0               	addwf	printf@ap^(0+128),f
  3982  0158                     l3159:	
  3983                           
  3984                           ;doprnt.c: 1287: }
  3985                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3986  0158  01E4               	clrf	printf@c^(0+128)
  3987  0159  0AE4               	incf	printf@c^(0+128),f
  3988  015A  300A               	movlw	10
  3989  015B  0664               	xorwf	printf@c^(0+128),w
  3990  015C  1903               	btfsc	3,2
  3991  015D  298B               	goto	l3171
  3992  015E                     l3165:	
  3993                           
  3994                           ;doprnt.c: 1306: if(val < dpowers[c])
  3995  015E  0864               	movf	printf@c^(0+128),w
  3996  015F  00D4               	movwf	??_printf^(0+128)
  3997  0160  01D5               	clrf	(??_printf^(0+128)+1)
  3998  0161  35D4               	lslf	??_printf^(0+128),f
  3999  0162  0DD5               	rlf	(??_printf^(0+128)+1),f
  4000  0163  35D4               	lslf	??_printf^(0+128),f
  4001  0164  0DD5               	rlf	(??_printf^(0+128)+1),f
  4002  0165  3043               	movlw	low (_dpowers| (0+32768))
  4003  0166  0754               	addwf	??_printf^(0+128),w
  4004  0167  0084               	movwf	4
  4005  0168  3082               	movlw	high (_dpowers| (0+32768))
  4006  0169  3D55               	addwfc	(??_printf+1)^(0+128),w
  4007  016A  0085               	movwf	5
  4008  016B  3F00               	moviw [0]fsr0
  4009  016C  00D6               	movwf	(??_printf+2)^(0+128)
  4010  016D  3F01               	moviw [1]fsr0
  4011  016E  00D7               	movwf	((??_printf+2)^(0+128)+1)
  4012  016F  3F02               	moviw [2]fsr0
  4013  0170  00D8               	movwf	((??_printf+2)^(0+128)+2)
  4014  0171  3F03               	moviw [3]fsr0
  4015  0172  00D9               	movwf	((??_printf+2)^(0+128)+3)
  4016  0173  0859               	movf	(??_printf+5)^(0+128),w
  4017  0174  025F               	subwf	(printf@val+3)^(0+128),w
  4018  0175  1D03               	skipz
  4019  0176  2981               	goto	u2805
  4020  0177  0858               	movf	(??_printf+4)^(0+128),w
  4021  0178  025E               	subwf	(printf@val+2)^(0+128),w
  4022  0179  1D03               	skipz
  4023  017A  2981               	goto	u2805
  4024  017B  0857               	movf	(??_printf+3)^(0+128),w
  4025  017C  025D               	subwf	(printf@val+1)^(0+128),w
  4026  017D  1D03               	skipz
  4027  017E  2981               	goto	u2805
  4028  017F  0856               	movf	(??_printf+2)^(0+128),w
  4029  0180  025C               	subwf	printf@val^(0+128),w
  4030  0181                     u2805:	
  4031  0181  1C03               	btfss	3,0
  4032  0182  298B               	goto	l3171
  4033                           
  4034                           ;doprnt.c: 1307: break;
  4035  0183  3001               	movlw	1
  4036  0184  00D4               	movwf	??_printf^(0+128)
  4037  0185  0854               	movf	??_printf^(0+128),w
  4038  0186  07E4               	addwf	printf@c^(0+128),f
  4039  0187  300A               	movlw	10
  4040  0188  0664               	xorwf	printf@c^(0+128),w
  4041  0189  1D03               	btfss	3,2
  4042  018A  295E               	goto	l3165
  4043  018B                     l3171:	
  4044                           
  4045                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4046  018B  0862               	movf	printf@width^(0+128),w
  4047  018C  0463               	iorwf	(printf@width+1)^(0+128),w
  4048  018D  1903               	btfsc	3,2
  4049  018E  2997               	goto	l592
  4050  018F  0861               	movf	printf@flag^(0+128),w
  4051  0190  3903               	andlw	3
  4052  0191  1903               	btfsc	3,2
  4053  0192  2997               	goto	l592
  4054                           
  4055                           ;doprnt.c: 1346: width--;
  4056  0193  30FF               	movlw	255
  4057  0194  07E2               	addwf	printf@width^(0+128),f
  4058  0195  30FF               	movlw	255
  4059  0196  3DE3               	addwfc	(printf@width+1)^(0+128),f
  4060  0197                     l592:	
  4061                           
  4062                           ;doprnt.c: 1381: if(width > c)
  4063  0197  0864               	movf	printf@c^(0+128),w
  4064  0198  00D4               	movwf	??_printf^(0+128)
  4065  0199  01D5               	clrf	(??_printf^(0+128)+1)
  4066  019A  1BD4               	btfsc	??_printf^(0+128),7
  4067  019B  03D5               	decf	(??_printf^(0+128)+1),f
  4068  019C  0855               	movf	(??_printf+1)^(0+128),w
  4069  019D  3A80               	xorlw	128
  4070  019E  00D6               	movwf	(??_printf+2)^(0+128)
  4071  019F  0863               	movf	(printf@width+1)^(0+128),w
  4072  01A0  3A80               	xorlw	128
  4073  01A1  0256               	subwf	(??_printf+2)^(0+128),w
  4074  01A2  1D03               	skipz
  4075  01A3  29A6               	goto	u2845
  4076  01A4  0862               	movf	printf@width^(0+128),w
  4077  01A5  0254               	subwf	??_printf^(0+128),w
  4078  01A6                     u2845:	
  4079  01A6  1803               	skipnc
  4080  01A7  29B3               	goto	l3179
  4081                           
  4082                           ;doprnt.c: 1382: width -= c;
  4083  01A8  0021               	movlb	1	; select bank1
  4084  01A9  0864               	movf	printf@c^(0+128),w
  4085  01AA  00D4               	movwf	??_printf^(0+128)
  4086  01AB  01D5               	clrf	(??_printf^(0+128)+1)
  4087  01AC  1BD4               	btfsc	??_printf^(0+128),7
  4088  01AD  03D5               	decf	(??_printf^(0+128)+1),f
  4089  01AE  0854               	movf	??_printf^(0+128),w
  4090  01AF  02E2               	subwf	printf@width^(0+128),f
  4091  01B0  0855               	movf	(??_printf+1)^(0+128),w
  4092  01B1  3BE3               	subwfb	(printf@width+1)^(0+128),f
  4093  01B2  29B6               	goto	l3181
  4094  01B3                     l3179:	
  4095                           
  4096                           ;doprnt.c: 1383: else
  4097                           ;doprnt.c: 1384: width = 0;
  4098  01B3  0021               	movlb	1	; select bank1
  4099  01B4  01E2               	clrf	printf@width^(0+128)
  4100  01B5  01E3               	clrf	(printf@width+1)^(0+128)
  4101  01B6                     l3181:	
  4102                           
  4103                           ;doprnt.c: 1387: if(flag & 0x04) {
  4104  01B6  1D61               	btfss	printf@flag^(0+128),2
  4105  01B7  29CF               	goto	l3193
  4106                           
  4107                           ;doprnt.c: 1392: if(flag & 0x03)
  4108  01B8  0861               	movf	printf@flag^(0+128),w
  4109  01B9  3903               	andlw	3
  4110  01BA  1903               	btfsc	3,2
  4111  01BB  29C0               	goto	l3187
  4112                           
  4113                           ;doprnt.c: 1393: (putch('-') );
  4114  01BC  302D               	movlw	45
  4115  01BD  318C  2481  3180   	fcall	_putch
  4116  01C0                     l3187:	
  4117                           
  4118                           ;doprnt.c: 1415: if(width)
  4119  01C0  0021               	movlb	1	; select bank1
  4120  01C1                     L4:	
  4121  01C1  0862               	movf	printf@width^(0+128),w
  4122  01C2  0463               	iorwf	(printf@width+1)^(0+128),w
  4123  01C3  1903               	btfsc	3,2
  4124  01C4  29E8               	goto	l3203
  4125                           
  4126                           ;doprnt.c: 1417: (putch('0') );
  4127                           
  4128                           ;doprnt.c: 1416: do
  4129  01C5  3030               	movlw	48
  4130  01C6  318C  2481  3180   	fcall	_putch
  4131                           
  4132                           ;doprnt.c: 1418: while(--width);
  4133  01C9  30FF               	movlw	255
  4134  01CA  0021               	movlb	1	; select bank1
  4135  01CB  07E2               	addwf	printf@width^(0+128),f
  4136  01CC  30FF               	movlw	255
  4137  01CD  3DE3               	addwfc	(printf@width+1)^(0+128),f
  4138  01CE  29C1               	goto	L4
  4139  01CF                     l3193:	
  4140                           ;doprnt.c: 1420: } else
  4141                           
  4142                           
  4143                           ;doprnt.c: 1422: {
  4144                           ;doprnt.c: 1424: if(width
  4145                           ;doprnt.c: 1428: )
  4146  01CF  0862               	movf	printf@width^(0+128),w
  4147  01D0  0463               	iorwf	(printf@width+1)^(0+128),w
  4148  01D1  1903               	btfsc	3,2
  4149  01D2  29E0               	goto	l3199
  4150  01D3                     l3195:	
  4151                           ;doprnt.c: 1429: do
  4152                           
  4153                           
  4154                           ;doprnt.c: 1430: (putch(' ') );
  4155  01D3  3020               	movlw	32
  4156  01D4  318C  2481  3180   	fcall	_putch
  4157                           
  4158                           ;doprnt.c: 1431: while(--width);
  4159  01D7  30FF               	movlw	255
  4160  01D8  0021               	movlb	1	; select bank1
  4161  01D9  07E2               	addwf	printf@width^(0+128),f
  4162  01DA  30FF               	movlw	255
  4163  01DB  3DE3               	addwfc	(printf@width+1)^(0+128),f
  4164  01DC  0862               	movf	printf@width^(0+128),w
  4165  01DD  0463               	iorwf	(printf@width+1)^(0+128),w
  4166  01DE  1D03               	btfss	3,2
  4167  01DF  29D3               	goto	l3195
  4168  01E0                     l3199:	
  4169                           
  4170                           ;doprnt.c: 1438: if(flag & 0x03)
  4171  01E0  0861               	movf	printf@flag^(0+128),w
  4172  01E1  3903               	andlw	3
  4173  01E2  1903               	btfsc	3,2
  4174  01E3  29E8               	goto	l3203
  4175                           
  4176                           ;doprnt.c: 1439: (putch('-') );
  4177  01E4  302D               	movlw	45
  4178  01E5  318C  2481  3180   	fcall	_putch
  4179  01E8                     l3203:	
  4180                           
  4181                           ;doprnt.c: 1469: }
  4182                           ;doprnt.c: 1472: prec = c;
  4183  01E8  0021               	movlb	1	; select bank1
  4184  01E9  0864               	movf	printf@c^(0+128),w
  4185  01EA  00DA               	movwf	printf@prec^(0+128)
  4186  01EB  01DB               	clrf	(printf@prec+1)^(0+128)
  4187  01EC  1BDA               	btfsc	printf@prec^(0+128),7
  4188  01ED  03DB               	decf	(printf@prec+1)^(0+128),f
  4189  01EE                     l3209:	
  4190                           ;doprnt.c: 1474: while(prec--) {
  4191                           
  4192  01EE  30FF               	movlw	255
  4193  01EF  0021               	movlb	1	; select bank1
  4194  01F0  07DA               	addwf	printf@prec^(0+128),f
  4195  01F1  30FF               	movlw	255
  4196  01F2  3DDB               	addwfc	(printf@prec+1)^(0+128),f
  4197  01F3  0A5A               	incf	printf@prec^(0+128),w
  4198  01F4  1903               	btfsc	3,2
  4199  01F5  0A5B               	incf	(printf@prec+1)^(0+128),w
  4200  01F6  1903               	btfsc	3,2
  4201  01F7  285D               	goto	l3211
  4202                           
  4203                           ;doprnt.c: 1478: {
  4204                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4205  01F8  3000               	movlw	0
  4206  01F9  0020               	movlb	0	; select bank0
  4207  01FA  00BF               	movwf	___llmod@divisor+3
  4208  01FB  3000               	movlw	0
  4209  01FC  00BE               	movwf	___llmod@divisor+2
  4210  01FD  3000               	movlw	0
  4211  01FE  00BD               	movwf	___llmod@divisor+1
  4212  01FF  300A               	movlw	10
  4213  0200  00BC               	movwf	___llmod@divisor
  4214  0201  0021               	movlb	1	; select bank1
  4215  0202  085B               	movf	(printf@prec+1)^(0+128),w
  4216  0203  0085               	movwf	5
  4217  0204  085A               	movf	printf@prec^(0+128),w
  4218  0205  0084               	movwf	4
  4219  0206  3584               	lslf	4,f
  4220  0207  0D85               	rlf	5,f
  4221  0208  3584               	lslf	4,f
  4222  0209  0D85               	rlf	5,f
  4223  020A  3043               	movlw	low (_dpowers| (0+32768))
  4224  020B  0784               	addwf	4,f
  4225  020C  3082               	movlw	high (_dpowers| (0+32768))
  4226  020D  3D85               	addwfc	5,f
  4227  020E  3F00               	moviw [0]fsr0
  4228  020F  0020               	movlb	0	; select bank0
  4229  0210  00AE               	movwf	___lldiv@divisor
  4230  0211  3F01               	moviw [1]fsr0
  4231  0212  00AF               	movwf	___lldiv@divisor+1
  4232  0213  3F02               	moviw [2]fsr0
  4233  0214  00B0               	movwf	___lldiv@divisor+2
  4234  0215  3F03               	moviw [3]fsr0
  4235  0216  00B1               	movwf	___lldiv@divisor+3
  4236  0217  0021               	movlb	1	; select bank1
  4237  0218  085F               	movf	(printf@val+3)^(0+128),w
  4238  0219  0020               	movlb	0	; select bank0
  4239  021A  00B5               	movwf	___lldiv@dividend+3
  4240  021B  0021               	movlb	1	; select bank1
  4241  021C  085E               	movf	(printf@val+2)^(0+128),w
  4242  021D  0020               	movlb	0	; select bank0
  4243  021E  00B4               	movwf	___lldiv@dividend+2
  4244  021F  0021               	movlb	1	; select bank1
  4245  0220  085D               	movf	(printf@val+1)^(0+128),w
  4246  0221  0020               	movlb	0	; select bank0
  4247  0222  00B3               	movwf	___lldiv@dividend+1
  4248  0223  0021               	movlb	1	; select bank1
  4249  0224  085C               	movf	printf@val^(0+128),w
  4250  0225  0020               	movlb	0	; select bank0
  4251  0226  00B2               	movwf	___lldiv@dividend
  4252  0227  3186  269D  3180   	fcall	___lldiv
  4253  022A  0020               	movlb	0	; select bank0
  4254  022B  0831               	movf	?___lldiv+3,w
  4255  022C  00C3               	movwf	___llmod@dividend+3
  4256  022D  0830               	movf	?___lldiv+2,w
  4257  022E  00C2               	movwf	___llmod@dividend+2
  4258  022F  082F               	movf	?___lldiv+1,w
  4259  0230  00C1               	movwf	___llmod@dividend+1
  4260  0231  082E               	movf	?___lldiv,w
  4261  0232  00C0               	movwf	___llmod@dividend
  4262  0233  318F  27BD  3180   	fcall	___llmod
  4263  0236  0020               	movlb	0	; select bank0
  4264  0237  083C               	movf	?___llmod,w
  4265  0238  3E30               	addlw	48
  4266  0239  0021               	movlb	1	; select bank1
  4267  023A  00D4               	movwf	??_printf^(0+128)
  4268  023B  0854               	movf	??_printf^(0+128),w
  4269  023C  00E4               	movwf	printf@c^(0+128)
  4270                           
  4271                           ;doprnt.c: 1523: }
  4272                           ;doprnt.c: 1524: (putch(c) );
  4273  023D  0864               	movf	printf@c^(0+128),w
  4274  023E  318C  2481  3180   	fcall	_putch
  4275  0241  29EE               	goto	l3209
  4276  0242                     l609:	
  4277                           ;doprnt.c: 1540: return 0;
  4278                           ;	Return value of _printf is never used
  4279                           
  4280                           ;doprnt.c: 1525: }
  4281                           ;doprnt.c: 1533: }
  4282                           ;doprnt.c: 1535: alldone:
  4283                           
  4284  0242  0008               	return
  4285  0243                     __end_of_printf:	
  4286                           
  4287                           	psect	text2
  4288  0C81                     __ptext2:	
  4289 ;; *************** function _putch *****************
  4290 ;; Defined at:
  4291 ;;		line 64 in file "LCD.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  c               1    wreg     unsigned char 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  c               1   17[BANK0 ] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0, pclath, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4305 ;;      Params:         0       0       0       0       0       0
  4306 ;;      Locals:         0       1       0       0       0       0
  4307 ;;      Temps:          0       0       0       0       0       0
  4308 ;;      Totals:         0       1       0       0       0       0
  4309 ;;Total ram usage:        1 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:    4
  4312 ;; This function calls:
  4313 ;;		_LCD_WriteData
  4314 ;; This function is called by:
  4315 ;;		_printf
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           
  4320                           ;psect for function _putch
  4321  0C81                     _putch:	
  4322                           
  4323                           ;incstack = 0
  4324                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4325                           ;putch@c stored from wreg
  4326  0C81  0020               	movlb	0	; select bank0
  4327  0C82  00B1               	movwf	putch@c
  4328                           
  4329                           ;LCD.c: 66: LATA3 = 1;
  4330  0C83  0022               	movlb	2	; select bank2
  4331  0C84  158C               	bsf	12,3	;volatile
  4332                           
  4333                           ;LCD.c: 67: LCD_WriteData(c);
  4334  0C85  0020               	movlb	0	; select bank0
  4335  0C86  0831               	movf	putch@c,w
  4336  0C87  318F  2780         	fcall	_LCD_WriteData
  4337  0C89  0008               	return
  4338  0C8A                     __end_of_putch:	
  4339                           
  4340                           	psect	text3
  4341  0CDF                     __ptext3:	
  4342 ;; *************** function _isdigit *****************
  4343 ;; Defined at:
  4344 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/isdigit.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  c               1    wreg     unsigned char 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  c               1   15[BANK0 ] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;		None               void
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4358 ;;      Params:         0       0       0       0       0       0
  4359 ;;      Locals:         0       2       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0
  4361 ;;      Totals:         0       2       0       0       0       0
  4362 ;;Total ram usage:        2 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    3
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_printf
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           
  4373                           ;psect for function _isdigit
  4374  0CDF                     _isdigit:	
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4378                           ;isdigit@c stored from wreg
  4379  0CDF  0020               	movlb	0	; select bank0
  4380  0CE0  00AF               	movwf	isdigit@c
  4381  0CE1  01AE               	clrf	_isdigit$819
  4382  0CE2  303A               	movlw	58
  4383  0CE3  022F               	subwf	isdigit@c,w
  4384  0CE4  1803               	skipnc
  4385  0CE5  2CEC               	goto	l2987
  4386  0CE6  3030               	movlw	48
  4387  0CE7  022F               	subwf	isdigit@c,w
  4388  0CE8  1C03               	skipc
  4389  0CE9  2CEC               	goto	l2987
  4390  0CEA  01AE               	clrf	_isdigit$819
  4391  0CEB  0AAE               	incf	_isdigit$819,f
  4392  0CEC                     l2987:	
  4393  0CEC  0C2E               	rrf	_isdigit$819,w
  4394  0CED  0008               	return
  4395  0CEE                     __end_of_isdigit:	
  4396                           
  4397                           	psect	text4
  4398  0DE4                     __ptext4:	
  4399 ;; *************** function ___wmul *****************
  4400 ;; Defined at:
  4401 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  multiplier      2   14[BANK0 ] unsigned int 
  4404 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  product         2   18[BANK0 ] unsigned int 
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  2   14[BANK0 ] unsigned int 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4416 ;;      Params:         0       4       0       0       0       0
  4417 ;;      Locals:         0       2       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0       0
  4419 ;;      Totals:         0       6       0       0       0       0
  4420 ;;Total ram usage:        6 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    3
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_printf
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           
  4431                           ;psect for function ___wmul
  4432  0DE4                     ___wmul:	
  4433                           
  4434                           ;incstack = 0
  4435                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4436  0DE4  0020               	movlb	0	; select bank0
  4437  0DE5  01B2               	clrf	___wmul@product
  4438  0DE6  01B3               	clrf	___wmul@product+1
  4439  0DE7                     l2993:	
  4440  0DE7  1C2E               	btfss	___wmul@multiplier,0
  4441  0DE8  2DED               	goto	l734
  4442  0DE9  0830               	movf	___wmul@multiplicand,w
  4443  0DEA  07B2               	addwf	___wmul@product,f
  4444  0DEB  0831               	movf	___wmul@multiplicand+1,w
  4445  0DEC  3DB3               	addwfc	___wmul@product+1,f
  4446  0DED                     l734:	
  4447  0DED  3001               	movlw	1
  4448  0DEE                     u2555:	
  4449  0DEE  35B0               	lslf	___wmul@multiplicand,f
  4450  0DEF  0DB1               	rlf	___wmul@multiplicand+1,f
  4451  0DF0  0B89               	decfsz	9,f
  4452  0DF1  2DEE               	goto	u2555
  4453  0DF2  3001               	movlw	1
  4454  0DF3                     u2565:	
  4455  0DF3  36AF               	lsrf	___wmul@multiplier+1,f
  4456  0DF4  0CAE               	rrf	___wmul@multiplier,f
  4457  0DF5  0B89               	decfsz	9,f
  4458  0DF6  2DF3               	goto	u2565
  4459  0DF7  082E               	movf	___wmul@multiplier,w
  4460  0DF8  042F               	iorwf	___wmul@multiplier+1,w
  4461  0DF9  1D03               	btfss	3,2
  4462  0DFA  2DE7               	goto	l2993
  4463  0DFB  0833               	movf	___wmul@product+1,w
  4464  0DFC  00AF               	movwf	?___wmul+1
  4465  0DFD  0832               	movf	___wmul@product,w
  4466  0DFE  00AE               	movwf	?___wmul
  4467  0DFF  0008               	return
  4468  0E00                     __end_of___wmul:	
  4469                           
  4470                           	psect	text5
  4471  0FBD                     __ptext5:	
  4472 ;; *************** function ___llmod *****************
  4473 ;; Defined at:
  4474 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  divisor         4   28[BANK0 ] unsigned long 
  4477 ;;  dividend        4   32[BANK0 ] unsigned long 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  counter         1   37[BANK0 ] unsigned char 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  4   28[BANK0 ] unsigned long 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4489 ;;      Params:         0       8       0       0       0       0
  4490 ;;      Locals:         0       1       0       0       0       0
  4491 ;;      Temps:          0       1       0       0       0       0
  4492 ;;      Totals:         0      10       0       0       0       0
  4493 ;;Total ram usage:       10 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    3
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_printf
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           
  4504                           ;psect for function ___llmod
  4505  0FBD                     ___llmod:	
  4506                           
  4507                           ;incstack = 0
  4508                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4509  0FBD  0020               	movlb	0	; select bank0
  4510  0FBE  083F               	movf	___llmod@divisor+3,w
  4511  0FBF  043E               	iorwf	___llmod@divisor+2,w
  4512  0FC0  043D               	iorwf	___llmod@divisor+1,w
  4513  0FC1  043C               	iorwf	___llmod@divisor,w
  4514  0FC2  1903               	skipnz
  4515  0FC3  2FF7               	goto	l3045
  4516  0FC4  01C5               	clrf	___llmod@counter
  4517  0FC5  0AC5               	incf	___llmod@counter,f
  4518  0FC6                     l3035:	
  4519  0FC6  1BBF               	btfsc	___llmod@divisor+3,7
  4520  0FC7  2FD4               	goto	l3037
  4521  0FC8  3001               	movlw	1
  4522  0FC9                     u2665:	
  4523  0FC9  35BC               	lslf	___llmod@divisor,f
  4524  0FCA  0DBD               	rlf	___llmod@divisor+1,f
  4525  0FCB  0DBE               	rlf	___llmod@divisor+2,f
  4526  0FCC  0DBF               	rlf	___llmod@divisor+3,f
  4527  0FCD  0B89               	decfsz	9,f
  4528  0FCE  2FC9               	goto	u2665
  4529  0FCF  3001               	movlw	1
  4530  0FD0  00C4               	movwf	??___llmod
  4531  0FD1  0844               	movf	??___llmod,w
  4532  0FD2  07C5               	addwf	___llmod@counter,f
  4533  0FD3  2FC6               	goto	l3035
  4534  0FD4                     l3037:	
  4535  0FD4  083F               	movf	___llmod@divisor+3,w
  4536  0FD5  0243               	subwf	___llmod@dividend+3,w
  4537  0FD6  1D03               	skipz
  4538  0FD7  2FE2               	goto	u2685
  4539  0FD8  083E               	movf	___llmod@divisor+2,w
  4540  0FD9  0242               	subwf	___llmod@dividend+2,w
  4541  0FDA  1D03               	skipz
  4542  0FDB  2FE2               	goto	u2685
  4543  0FDC  083D               	movf	___llmod@divisor+1,w
  4544  0FDD  0241               	subwf	___llmod@dividend+1,w
  4545  0FDE  1D03               	skipz
  4546  0FDF  2FE2               	goto	u2685
  4547  0FE0  083C               	movf	___llmod@divisor,w
  4548  0FE1  0240               	subwf	___llmod@dividend,w
  4549  0FE2                     u2685:	
  4550  0FE2  1C03               	skipc
  4551  0FE3  2FEC               	goto	l3041
  4552  0FE4  083C               	movf	___llmod@divisor,w
  4553  0FE5  02C0               	subwf	___llmod@dividend,f
  4554  0FE6  083D               	movf	___llmod@divisor+1,w
  4555  0FE7  3BC1               	subwfb	___llmod@dividend+1,f
  4556  0FE8  083E               	movf	___llmod@divisor+2,w
  4557  0FE9  3BC2               	subwfb	___llmod@dividend+2,f
  4558  0FEA  083F               	movf	___llmod@divisor+3,w
  4559  0FEB  3BC3               	subwfb	___llmod@dividend+3,f
  4560  0FEC                     l3041:	
  4561  0FEC  3001               	movlw	1
  4562  0FED                     u2695:	
  4563  0FED  36BF               	lsrf	___llmod@divisor+3,f
  4564  0FEE  0CBE               	rrf	___llmod@divisor+2,f
  4565  0FEF  0CBD               	rrf	___llmod@divisor+1,f
  4566  0FF0  0CBC               	rrf	___llmod@divisor,f
  4567  0FF1  0B89               	decfsz	9,f
  4568  0FF2  2FED               	goto	u2695
  4569  0FF3  3001               	movlw	1
  4570  0FF4  02C5               	subwf	___llmod@counter,f
  4571  0FF5  1D03               	btfss	3,2
  4572  0FF6  2FD4               	goto	l3037
  4573  0FF7                     l3045:	
  4574  0FF7  0843               	movf	___llmod@dividend+3,w
  4575  0FF8  00BF               	movwf	?___llmod+3
  4576  0FF9  0842               	movf	___llmod@dividend+2,w
  4577  0FFA  00BE               	movwf	?___llmod+2
  4578  0FFB  0841               	movf	___llmod@dividend+1,w
  4579  0FFC  00BD               	movwf	?___llmod+1
  4580  0FFD  0840               	movf	___llmod@dividend,w
  4581  0FFE  00BC               	movwf	?___llmod
  4582  0FFF  0008               	return
  4583  1000                     __end_of___llmod:	
  4584                           
  4585                           	psect	text6
  4586  069D                     __ptext6:	
  4587 ;; *************** function ___lldiv *****************
  4588 ;; Defined at:
  4589 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  divisor         4   14[BANK0 ] unsigned long 
  4592 ;;  dividend        4   18[BANK0 ] unsigned long 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  quotient        4   23[BANK0 ] unsigned long 
  4595 ;;  counter         1   27[BANK0 ] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  4   14[BANK0 ] unsigned long 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4605 ;;      Params:         0       8       0       0       0       0
  4606 ;;      Locals:         0       5       0       0       0       0
  4607 ;;      Temps:          0       1       0       0       0       0
  4608 ;;      Totals:         0      14       0       0       0       0
  4609 ;;Total ram usage:       14 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    3
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_printf
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function ___lldiv
  4621  069D                     ___lldiv:	
  4622                           
  4623                           ;incstack = 0
  4624                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4625  069D  3000               	movlw	0
  4626  069E  0020               	movlb	0	; select bank0
  4627  069F  00BA               	movwf	___lldiv@quotient+3
  4628  06A0  3000               	movlw	0
  4629  06A1  00B9               	movwf	___lldiv@quotient+2
  4630  06A2  3000               	movlw	0
  4631  06A3  00B8               	movwf	___lldiv@quotient+1
  4632  06A4  3000               	movlw	0
  4633  06A5  00B7               	movwf	___lldiv@quotient
  4634  06A6  0831               	movf	___lldiv@divisor+3,w
  4635  06A7  0430               	iorwf	___lldiv@divisor+2,w
  4636  06A8  042F               	iorwf	___lldiv@divisor+1,w
  4637  06A9  042E               	iorwf	___lldiv@divisor,w
  4638  06AA  1903               	skipnz
  4639  06AB  2EE7               	goto	l3025
  4640  06AC  01BB               	clrf	___lldiv@counter
  4641  06AD  0ABB               	incf	___lldiv@counter,f
  4642  06AE                     l3011:	
  4643  06AE  1BB1               	btfsc	___lldiv@divisor+3,7
  4644  06AF  2EBC               	goto	l3013
  4645  06B0  3001               	movlw	1
  4646  06B1                     u2595:	
  4647  06B1  35AE               	lslf	___lldiv@divisor,f
  4648  06B2  0DAF               	rlf	___lldiv@divisor+1,f
  4649  06B3  0DB0               	rlf	___lldiv@divisor+2,f
  4650  06B4  0DB1               	rlf	___lldiv@divisor+3,f
  4651  06B5  0B89               	decfsz	9,f
  4652  06B6  2EB1               	goto	u2595
  4653  06B7  3001               	movlw	1
  4654  06B8  00B6               	movwf	??___lldiv
  4655  06B9  0836               	movf	??___lldiv,w
  4656  06BA  07BB               	addwf	___lldiv@counter,f
  4657  06BB  2EAE               	goto	l3011
  4658  06BC                     l3013:	
  4659  06BC  3001               	movlw	1
  4660  06BD                     u2615:	
  4661  06BD  35B7               	lslf	___lldiv@quotient,f
  4662  06BE  0DB8               	rlf	___lldiv@quotient+1,f
  4663  06BF  0DB9               	rlf	___lldiv@quotient+2,f
  4664  06C0  0DBA               	rlf	___lldiv@quotient+3,f
  4665  06C1  0B89               	decfsz	9,f
  4666  06C2  2EBD               	goto	u2615
  4667  06C3  0831               	movf	___lldiv@divisor+3,w
  4668  06C4  0235               	subwf	___lldiv@dividend+3,w
  4669  06C5  1D03               	skipz
  4670  06C6  2ED1               	goto	u2625
  4671  06C7  0830               	movf	___lldiv@divisor+2,w
  4672  06C8  0234               	subwf	___lldiv@dividend+2,w
  4673  06C9  1D03               	skipz
  4674  06CA  2ED1               	goto	u2625
  4675  06CB  082F               	movf	___lldiv@divisor+1,w
  4676  06CC  0233               	subwf	___lldiv@dividend+1,w
  4677  06CD  1D03               	skipz
  4678  06CE  2ED1               	goto	u2625
  4679  06CF  082E               	movf	___lldiv@divisor,w
  4680  06D0  0232               	subwf	___lldiv@dividend,w
  4681  06D1                     u2625:	
  4682  06D1  1C03               	skipc
  4683  06D2  2EDC               	goto	l3021
  4684  06D3  082E               	movf	___lldiv@divisor,w
  4685  06D4  02B2               	subwf	___lldiv@dividend,f
  4686  06D5  082F               	movf	___lldiv@divisor+1,w
  4687  06D6  3BB3               	subwfb	___lldiv@dividend+1,f
  4688  06D7  0830               	movf	___lldiv@divisor+2,w
  4689  06D8  3BB4               	subwfb	___lldiv@dividend+2,f
  4690  06D9  0831               	movf	___lldiv@divisor+3,w
  4691  06DA  3BB5               	subwfb	___lldiv@dividend+3,f
  4692  06DB  1437               	bsf	___lldiv@quotient,0
  4693  06DC                     l3021:	
  4694  06DC  3001               	movlw	1
  4695  06DD                     u2635:	
  4696  06DD  36B1               	lsrf	___lldiv@divisor+3,f
  4697  06DE  0CB0               	rrf	___lldiv@divisor+2,f
  4698  06DF  0CAF               	rrf	___lldiv@divisor+1,f
  4699  06E0  0CAE               	rrf	___lldiv@divisor,f
  4700  06E1  0B89               	decfsz	9,f
  4701  06E2  2EDD               	goto	u2635
  4702  06E3  3001               	movlw	1
  4703  06E4  02BB               	subwf	___lldiv@counter,f
  4704  06E5  1D03               	btfss	3,2
  4705  06E6  2EBC               	goto	l3013
  4706  06E7                     l3025:	
  4707  06E7  083A               	movf	___lldiv@quotient+3,w
  4708  06E8  00B1               	movwf	?___lldiv+3
  4709  06E9  0839               	movf	___lldiv@quotient+2,w
  4710  06EA  00B0               	movwf	?___lldiv+2
  4711  06EB  0838               	movf	___lldiv@quotient+1,w
  4712  06EC  00AF               	movwf	?___lldiv+1
  4713  06ED  0837               	movf	___lldiv@quotient,w
  4714  06EE  00AE               	movwf	?___lldiv
  4715  06EF  0008               	return
  4716  06F0                     __end_of___lldiv:	
  4717                           
  4718                           	psect	text7
  4719  0D54                     __ptext7:	
  4720 ;; *************** function _mTouch_Init *****************
  4721 ;; Defined at:
  4722 ;;		line 12 in file "mTouch.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;		None
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;		None
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      void 
  4729 ;; Registers used:
  4730 ;;		wreg, status,2, status,0, pclath, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4736 ;;      Params:         0       0       0       0       0       0
  4737 ;;      Locals:         0       0       0       0       0       0
  4738 ;;      Temps:          0       1       0       0       0       0
  4739 ;;      Totals:         0       1       0       0       0       0
  4740 ;;Total ram usage:        1 bytes
  4741 ;; Hardware stack levels used:    1
  4742 ;; Hardware stack levels required when called:    4
  4743 ;; This function calls:
  4744 ;;		_mTouch_PortInit
  4745 ;; This function is called by:
  4746 ;;		_main
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           
  4751                           ;psect for function _mTouch_Init
  4752  0D54                     _mTouch_Init:	
  4753                           
  4754                           ;mTouch.c: 14: mTouch_PortInit();
  4755                           
  4756                           ;incstack = 0
  4757                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4758  0D54  318C  24B6         	fcall	_mTouch_PortInit
  4759                           
  4760                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4761  0D56  0021               	movlb	1	; select bank1
  4762  0D57  0815               	movf	21,w	;volatile
  4763                           
  4764                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4765  0D58  1595               	bsf	21,3	;volatile
  4766                           
  4767                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4768  0D59  1695               	bsf	21,5	;volatile
  4769                           
  4770                           ;mTouch.c: 20: TMR0 = 0x00;
  4771  0D5A  0020               	movlb	0	; select bank0
  4772  0D5B  0195               	clrf	21	;volatile
  4773                           
  4774                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4775  0D5C  141E               	bsf	30,0	;volatile
  4776                           
  4777                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4778  0D5D  300C               	movlw	12
  4779  0D5E  00AF               	movwf	??_mTouch_Init
  4780  0D5F  082F               	movf	??_mTouch_Init,w
  4781  0D60  049E               	iorwf	30,f	;volatile
  4782                           
  4783                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4784  0D61  307F               	movlw	127
  4785  0D62  00AF               	movwf	??_mTouch_Init
  4786  0D63  082F               	movf	??_mTouch_Init,w
  4787  0D64  059E               	andwf	30,f	;volatile
  4788                           
  4789                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4790  0D65  019F               	clrf	31	;volatile
  4791  0D66  0008               	return
  4792  0D67                     __end_of_mTouch_Init:	
  4793                           
  4794                           	psect	text8
  4795  0CB6                     __ptext8:	
  4796 ;; *************** function _mTouch_PortInit *****************
  4797 ;; Defined at:
  4798 ;;		line 6 in file "mTouch.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4812 ;;      Params:         0       0       0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0
  4814 ;;      Temps:          0       1       0       0       0       0
  4815 ;;      Totals:         0       1       0       0       0       0
  4816 ;;Total ram usage:        1 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    3
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_mTouch_Init
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           
  4827                           ;psect for function _mTouch_PortInit
  4828  0CB6                     _mTouch_PortInit:	
  4829                           
  4830                           ;mTouch.c: 8: TRISA |= (0x07);
  4831                           
  4832                           ;incstack = 0
  4833                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4834  0CB6  3007               	movlw	7
  4835  0CB7  0020               	movlb	0	; select bank0
  4836  0CB8  00AE               	movwf	??_mTouch_PortInit
  4837  0CB9  082E               	movf	??_mTouch_PortInit,w
  4838  0CBA  0021               	movlb	1	; select bank1
  4839  0CBB  048C               	iorwf	12,f	;volatile
  4840                           
  4841                           ;mTouch.c: 9: ANSELA |= (0x07);
  4842  0CBC  3007               	movlw	7
  4843  0CBD  0020               	movlb	0	; select bank0
  4844  0CBE  00AE               	movwf	??_mTouch_PortInit
  4845  0CBF  082E               	movf	??_mTouch_PortInit,w
  4846  0CC0  0023               	movlb	3	; select bank3
  4847  0CC1  048C               	iorwf	12,f	;volatile
  4848  0CC2  0008               	return
  4849  0CC3                     __end_of_mTouch_PortInit:	
  4850                           
  4851                           	psect	text9
  4852  0743                     __ptext9:	
  4853 ;; *************** function _mTouch_Check *****************
  4854 ;; Defined at:
  4855 ;;		line 119 in file "main.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  chan            1    wreg     unsigned char 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  chan            1   21[BANK0 ] unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      unsigned char 
  4862 ;; Registers used:
  4863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4869 ;;      Params:         0       0       0       0       0       0
  4870 ;;      Locals:         0       1       0       0       0       0
  4871 ;;      Temps:          0       5       0       0       0       0
  4872 ;;      Totals:         0       6       0       0       0       0
  4873 ;;Total ram usage:        6 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    4
  4876 ;; This function calls:
  4877 ;;		_Buzzer_MiliSecond
  4878 ;; This function is called by:
  4879 ;;		_main
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           
  4884                           ;psect for function _mTouch_Check
  4885  0743                     _mTouch_Check:	
  4886                           
  4887                           ;incstack = 0
  4888                           ; Regs used in _mTouch_Check: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4889                           ;mTouch_Check@chan stored from wreg
  4890  0743  0020               	movlb	0	; select bank0
  4891  0744  00B5               	movwf	mTouch_Check@chan
  4892                           
  4893                           ;main.c: 121: if(chan>2)return 0;
  4894  0745  3003               	movlw	3
  4895  0746  0235               	subwf	mTouch_Check@chan,w
  4896  0747  1C03               	skipc
  4897  0748  2F4B               	goto	l2673
  4898  0749  3000               	movlw	0
  4899  074A  0008               	return
  4900  074B                     l2673:	
  4901                           
  4902                           ;main.c: 123: if(((CPS_PreData[chan]-CPS_Data[chan])>200)&&!mTouch_Interval[chan])
  4903  074B  0835               	movf	mTouch_Check@chan,w
  4904  074C  3EB7               	addlw	(low (_CPS_Data| 0))& (0+255)
  4905  074D  0086               	movwf	6
  4906  074E  0187               	clrf	7
  4907  074F  0801               	movf	1,w
  4908  0750  00B0               	movwf	??_mTouch_Check
  4909  0751  01B1               	clrf	??_mTouch_Check+1
  4910  0752  09B0               	comf	??_mTouch_Check,f
  4911  0753  09B1               	comf	??_mTouch_Check+1,f
  4912  0754  0AB0               	incf	??_mTouch_Check,f
  4913  0755  1903               	skipnz
  4914  0756  0AB1               	incf	??_mTouch_Check+1,f
  4915  0757  0835               	movf	mTouch_Check@chan,w
  4916  0758  3EBA               	addlw	(low (_CPS_PreData| 0))& (0+255)
  4917  0759  0086               	movwf	6
  4918  075A  0187               	clrf	7
  4919  075B  0801               	movf	1,w
  4920  075C  0730               	addwf	??_mTouch_Check,w
  4921  075D  00B2               	movwf	??_mTouch_Check+2
  4922  075E  0831               	movf	??_mTouch_Check+1,w
  4923  075F  1803               	skipnc
  4924  0760  0A31               	incf	??_mTouch_Check+1,w
  4925  0761  00B3               	movwf	??_mTouch_Check+3
  4926  0762  0833               	movf	??_mTouch_Check+3,w
  4927  0763  3A80               	xorlw	128
  4928  0764  00B4               	movwf	??_mTouch_Check+4
  4929  0765  3080               	movlw	128
  4930  0766  0234               	subwf	??_mTouch_Check+4,w
  4931  0767  1D03               	skipz
  4932  0768  2F6B               	goto	u2015
  4933  0769  30C9               	movlw	201
  4934  076A  0232               	subwf	??_mTouch_Check+2,w
  4935  076B                     u2015:	
  4936  076B  1C03               	skipc
  4937  076C  2F85               	goto	l2685
  4938  076D  0020               	movlb	0	; select bank0
  4939  076E  0835               	movf	mTouch_Check@chan,w
  4940  076F  3EB4               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4941  0770  0086               	movwf	6
  4942  0771  0187               	clrf	7
  4943  0772  0801               	movf	1,w
  4944  0773  1D03               	btfss	3,2
  4945  0774  2F85               	goto	l2685
  4946                           
  4947                           ;main.c: 124: {
  4948                           ;main.c: 125: mTouch_Interval[chan] = 100;
  4949  0775  3064               	movlw	100
  4950  0776  00B0               	movwf	??_mTouch_Check
  4951  0777  0835               	movf	mTouch_Check@chan,w
  4952  0778  3EB4               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4953  0779  0086               	movwf	6
  4954  077A  0187               	clrf	7
  4955  077B  0830               	movf	??_mTouch_Check,w
  4956  077C  0081               	movwf	1
  4957                           
  4958                           ;main.c: 126: Buzzer_MiliSecond(100);
  4959  077D  3064               	movlw	100
  4960  077E  00AE               	movwf	Buzzer_MiliSecond@time
  4961  077F  3000               	movlw	0
  4962  0780  00AF               	movwf	Buzzer_MiliSecond@time+1
  4963  0781  318C  2494         	fcall	_Buzzer_MiliSecond
  4964                           
  4965                           ;main.c: 127: return 1;
  4966  0783  3001               	movlw	1
  4967  0784  0008               	return
  4968  0785                     l2685:	
  4969                           
  4970                           ;main.c: 128: }
  4971                           ;main.c: 129: return 0;
  4972  0785  3000               	movlw	0
  4973  0786  0008               	return
  4974  0787                     __end_of_mTouch_Check:	
  4975                           
  4976                           	psect	text10
  4977  0C94                     __ptext10:	
  4978 ;; *************** function _Buzzer_MiliSecond *****************
  4979 ;; Defined at:
  4980 ;;		line 38 in file "Buzzer.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  time            2   14[BANK0 ] unsigned int 
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2, status,0
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4994 ;;      Params:         0       2       0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0
  4996 ;;      Temps:          0       0       0       0       0       0
  4997 ;;      Totals:         0       2       0       0       0       0
  4998 ;;Total ram usage:        2 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:    3
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_mTouch_Check
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           
  5009                           ;psect for function _Buzzer_MiliSecond
  5010  0C94                     _Buzzer_MiliSecond:	
  5011                           
  5012                           ;Buzzer.c: 40: if(count==0)
  5013                           
  5014                           ;incstack = 0
  5015                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  5016  0C94  0020               	movlb	0	; select bank0
  5017  0C95  085E               	movf	_count,w
  5018  0C96  045F               	iorwf	_count+1,w
  5019  0C97  1D03               	btfss	3,2
  5020  0C98  0008               	return
  5021                           
  5022                           ;Buzzer.c: 41: count = time;
  5023  0C99  082F               	movf	Buzzer_MiliSecond@time+1,w
  5024  0C9A  00DF               	movwf	_count+1
  5025  0C9B  082E               	movf	Buzzer_MiliSecond@time,w
  5026  0C9C  00DE               	movwf	_count
  5027  0C9D  0008               	return
  5028  0C9E                     __end_of_Buzzer_MiliSecond:	
  5029                           
  5030                           	psect	text11
  5031  0D41                     __ptext11:	
  5032 ;; *************** function _Timer6_Init *****************
  5033 ;; Defined at:
  5034 ;;		line 3 in file "Timer6.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;		None
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;		None
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, status,2, status,0
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5048 ;;      Params:         0       0       0       0       0       0
  5049 ;;      Locals:         0       0       0       0       0       0
  5050 ;;      Temps:          0       1       0       0       0       0
  5051 ;;      Totals:         0       1       0       0       0       0
  5052 ;;Total ram usage:        1 bytes
  5053 ;; Hardware stack levels used:    1
  5054 ;; Hardware stack levels required when called:    3
  5055 ;; This function calls:
  5056 ;;		Nothing
  5057 ;; This function is called by:
  5058 ;;		_main
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           
  5063                           ;psect for function _Timer6_Init
  5064  0D41                     _Timer6_Init:	
  5065                           
  5066                           ;Timer6.c: 5: PR6 = 0x7D;
  5067                           
  5068                           ;incstack = 0
  5069                           ; Regs used in _Timer6_Init: [wreg+status,2+status,0]
  5070  0D41  307D               	movlw	125
  5071  0D42  0028               	movlb	8	; select bank8
  5072  0D43  009D               	movwf	29	;volatile
  5073                           
  5074                           ;Timer6.c: 6: TMR6 = 0x00;
  5075  0D44  019C               	clrf	28	;volatile
  5076                           
  5077                           ;Timer6.c: 7: T6CON |= (0x03<<0);
  5078  0D45  3003               	movlw	3
  5079  0D46  0020               	movlb	0	; select bank0
  5080  0D47  00AE               	movwf	??_Timer6_Init
  5081  0D48  082E               	movf	??_Timer6_Init,w
  5082  0D49  0028               	movlb	8	; select bank8
  5083  0D4A  049E               	iorwf	30,f	;volatile
  5084                           
  5085                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  5086  0D4B  081E               	movf	30,w	;volatile
  5087                           
  5088                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  5089  0D4C  151E               	bsf	30,2	;volatile
  5090                           
  5091                           ;Timer6.c: 11: TMR6IF = 0;
  5092  0D4D  0020               	movlb	0	; select bank0
  5093  0D4E  1193               	bcf	19,3	;volatile
  5094                           
  5095                           ;Timer6.c: 12: TMR6IE = 1;
  5096  0D4F  0021               	movlb	1	; select bank1
  5097  0D50  1593               	bsf	19,3	;volatile
  5098                           
  5099                           ;Timer6.c: 13: PEIE = 1;
  5100  0D51  170B               	bsf	11,6	;volatile
  5101                           
  5102                           ;Timer6.c: 14: GIE = 1;
  5103  0D52  178B               	bsf	11,7	;volatile
  5104  0D53  0008               	return
  5105  0D54                     __end_of_Timer6_Init:	
  5106                           
  5107                           	psect	text12
  5108  0C76                     __ptext12:	
  5109 ;; *************** function _Timer1_StartCount *****************
  5110 ;; Defined at:
  5111 ;;		line 31 in file "Timer1.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;		None
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      void 
  5118 ;; Registers used:
  5119 ;;		wreg, status,2, status,0, pclath, cstack
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5125 ;;      Params:         0       0       0       0       0       0
  5126 ;;      Locals:         0       0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0
  5128 ;;      Totals:         0       0       0       0       0       0
  5129 ;;Total ram usage:        0 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:    4
  5132 ;; This function calls:
  5133 ;;		_Timer1_ClearRecord
  5134 ;; This function is called by:
  5135 ;;		_main
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           
  5140                           ;psect for function _Timer1_StartCount
  5141  0C76                     _Timer1_StartCount:	
  5142                           
  5143                           ;Timer1.c: 33: Timer1_ClearRecord();
  5144                           
  5145                           ;incstack = 0
  5146                           ; Regs used in _Timer1_StartCount: [wreg+status,2+status,0+pclath+cstack]
  5147  0C76  318F  2708         	fcall	_Timer1_ClearRecord
  5148                           
  5149                           ;Timer1.c: 34: TMR1ON = 1;
  5150  0C78  0020               	movlb	0	; select bank0
  5151  0C79  1418               	bsf	24,0	;volatile
  5152  0C7A  0008               	return
  5153  0C7B                     __end_of_Timer1_StartCount:	
  5154                           
  5155                           	psect	text13
  5156  0F08                     __ptext13:	
  5157 ;; *************** function _Timer1_ClearRecord *****************
  5158 ;; Defined at:
  5159 ;;		line 42 in file "Timer1.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1    wreg      void 
  5166 ;; Registers used:
  5167 ;;		wreg, status,2
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5173 ;;      Params:         0       0       0       0       0       0
  5174 ;;      Locals:         0       0       0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0
  5176 ;;      Totals:         0       0       0       0       0       0
  5177 ;;Total ram usage:        0 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    3
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_Timer1_StartCount
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           
  5188                           ;psect for function _Timer1_ClearRecord
  5189  0F08                     _Timer1_ClearRecord:	
  5190                           
  5191                           ;Timer1.c: 44: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL+1; TMR1ON = 1; };
  5192                           
  5193                           ;incstack = 0
  5194                           ; Regs used in _Timer1_ClearRecord: [wreg+status,2]
  5195  0F08  0020               	movlb	0	; select bank0
  5196  0F09  1018               	bcf	24,0	;volatile
  5197  0F0A  30FF               	movlw	255
  5198  0F0B  0097               	movwf	23	;volatile
  5199  0F0C  30F6               	movlw	246
  5200  0F0D  0096               	movwf	22	;volatile
  5201  0F0E  1418               	bsf	24,0	;volatile
  5202                           
  5203                           ;Timer1.c: 45: cnts.SigmaDeltaCount= 0;
  5204  0F0F  3000               	movlw	0
  5205  0F10  0021               	movlb	1	; select bank1
  5206  0F11  00A3               	movwf	(_cnts+3)^(0+128)
  5207  0F12  3000               	movlw	0
  5208  0F13  00A2               	movwf	(_cnts+2)^(0+128)
  5209  0F14  3000               	movlw	0
  5210  0F15  00A1               	movwf	(_cnts+1)^(0+128)
  5211  0F16  3000               	movlw	0
  5212  0F17  00A0               	movwf	_cnts^(0+128)
  5213                           
  5214                           ;Timer1.c: 46: cnts.SigmaCPS = 0;
  5215  0F18  3000               	movlw	0
  5216  0F19  00A7               	movwf	((_cnts+3)^(0+128)+4)
  5217  0F1A  3000               	movlw	0
  5218  0F1B  00A6               	movwf	((_cnts+2)^(0+128)+4)
  5219  0F1C  3000               	movlw	0
  5220  0F1D  00A5               	movwf	((_cnts+1)^(0+128)+4)
  5221  0F1E  3000               	movlw	0
  5222  0F1F  00A4               	movwf	(_cnts^(0+128)+4)
  5223                           
  5224                           ;Timer1.c: 47: cnts.AverageCPS = 0;
  5225  0F20  3000               	movlw	0
  5226  0F21  00AB               	movwf	((_cnts+3)^(0+128)+8)
  5227  0F22  3000               	movlw	0
  5228  0F23  00AA               	movwf	((_cnts+2)^(0+128)+8)
  5229  0F24  3000               	movlw	0
  5230  0F25  00A9               	movwf	((_cnts+1)^(0+128)+8)
  5231  0F26  3000               	movlw	0
  5232  0F27  00A8               	movwf	(_cnts^(0+128)+8)
  5233                           
  5234                           ;Timer1.c: 48: cnts.AverageCPM = 0;
  5235  0F28  3000               	movlw	0
  5236  0F29  00AF               	movwf	((_cnts+3)^(0+128)+12)
  5237  0F2A  3000               	movlw	0
  5238  0F2B  00AE               	movwf	((_cnts+2)^(0+128)+12)
  5239  0F2C  3000               	movlw	0
  5240  0F2D  00AD               	movwf	((_cnts+1)^(0+128)+12)
  5241  0F2E  3000               	movlw	0
  5242  0F2F  00AC               	movwf	(_cnts^(0+128)+12)
  5243                           
  5244                           ;Timer1.c: 49: cnts.Num_of_Detect = 0;
  5245  0F30  3000               	movlw	0
  5246  0F31  00B3               	movwf	((_cnts+3)^(0+128)+16)
  5247  0F32  3000               	movlw	0
  5248  0F33  00B2               	movwf	((_cnts+2)^(0+128)+16)
  5249  0F34  3000               	movlw	0
  5250  0F35  00B1               	movwf	((_cnts+1)^(0+128)+16)
  5251  0F36  3000               	movlw	0
  5252  0F37  00B0               	movwf	(_cnts^(0+128)+16)
  5253                           
  5254                           ;Timer1.c: 50: tcnt.Delta_t = 0;
  5255  0F38  3000               	movlw	0
  5256  0F39  0020               	movlb	0	; select bank0
  5257  0F3A  00D9               	movwf	_tcnt+5
  5258  0F3B  3000               	movlw	0
  5259  0F3C  00D8               	movwf	_tcnt+4
  5260  0F3D  3000               	movlw	0
  5261  0F3E  00D7               	movwf	_tcnt+3
  5262  0F3F  3000               	movlw	0
  5263  0F40  00D6               	movwf	_tcnt+2
  5264                           
  5265                           ;Timer1.c: 51: tcnt.Second_t = 0;
  5266  0F41  01D4               	clrf	_tcnt
  5267                           
  5268                           ;Timer1.c: 52: tcnt.Minute_t = 0;
  5269  0F42  01D5               	clrf	_tcnt+1
  5270  0F43  0008               	return
  5271  0F44                     __end_of_Timer1_ClearRecord:	
  5272                           
  5273                           	psect	text14
  5274  0E3E                     __ptext14:	
  5275 ;; *************** function _Timer1_Init *****************
  5276 ;; Defined at:
  5277 ;;		line 6 in file "Timer1.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;		None
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, status,2, status,0
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5291 ;;      Params:         0       0       0       0       0       0
  5292 ;;      Locals:         0       0       0       0       0       0
  5293 ;;      Temps:          0       1       0       0       0       0
  5294 ;;      Totals:         0       1       0       0       0       0
  5295 ;;Total ram usage:        1 bytes
  5296 ;; Hardware stack levels used:    1
  5297 ;; Hardware stack levels required when called:    3
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_main
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           
  5306                           ;psect for function _Timer1_Init
  5307  0E3E                     _Timer1_Init:	
  5308                           
  5309                           ;Timer1.c: 8: TRISB |= (1<<6);
  5310                           
  5311                           ;incstack = 0
  5312                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  5313  0E3E  0021               	movlb	1	; select bank1
  5314  0E3F  170D               	bsf	13,6	;volatile
  5315                           
  5316                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  5317  0E40  30BF               	movlw	191
  5318  0E41  0020               	movlb	0	; select bank0
  5319  0E42  00AE               	movwf	??_Timer1_Init
  5320  0E43  082E               	movf	??_Timer1_Init,w
  5321  0E44  0023               	movlb	3	; select bank3
  5322  0E45  058D               	andwf	13,f	;volatile
  5323                           
  5324                           ;Timer1.c: 10: WPUB |= (1<<6);
  5325  0E46  0024               	movlb	4	; select bank4
  5326  0E47  170D               	bsf	13,6	;volatile
  5327                           
  5328                           ;Timer1.c: 12: T1CON |= (0x01<<2);
  5329  0E48  0020               	movlb	0	; select bank0
  5330  0E49  1518               	bsf	24,2	;volatile
  5331                           
  5332                           ;Timer1.c: 13: T1CON &= ~(0x01<<3);
  5333  0E4A  30F7               	movlw	247
  5334  0E4B  00AE               	movwf	??_Timer1_Init
  5335  0E4C  082E               	movf	??_Timer1_Init,w
  5336  0E4D  0598               	andwf	24,f	;volatile
  5337                           
  5338                           ;Timer1.c: 14: T1CON |= (0x00<<4);
  5339  0E4E  0818               	movf	24,w	;volatile
  5340                           
  5341                           ;Timer1.c: 15: T1CON |= (0x02<<6);
  5342  0E4F  1798               	bsf	24,7	;volatile
  5343                           
  5344                           ;Timer1.c: 17: T1GCON = 0x00;
  5345  0E50  0199               	clrf	25	;volatile
  5346                           
  5347                           ;Timer1.c: 19: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL+1; TMR1ON = 1; };
  5348  0E51  1018               	bcf	24,0	;volatile
  5349  0E52  30FF               	movlw	255
  5350  0E53  0097               	movwf	23	;volatile
  5351  0E54  30F6               	movlw	246
  5352  0E55  0096               	movwf	22	;volatile
  5353  0E56  1418               	bsf	24,0	;volatile
  5354                           
  5355                           ;Timer1.c: 21: TMR1IF = 0;
  5356  0E57  1011               	bcf	17,0	;volatile
  5357                           
  5358                           ;Timer1.c: 22: TMR1IE = 1;
  5359  0E58  0021               	movlb	1	; select bank1
  5360  0E59  1411               	bsf	17,0	;volatile
  5361                           
  5362                           ;Timer1.c: 23: PEIE = 1;
  5363  0E5A  170B               	bsf	11,6	;volatile
  5364                           
  5365                           ;Timer1.c: 24: GIE = 1;
  5366  0E5B  178B               	bsf	11,7	;volatile
  5367                           
  5368                           ;Timer1.c: 26: TMR1ON = 0;
  5369  0E5C  0020               	movlb	0	; select bank0
  5370  0E5D  1018               	bcf	24,0	;volatile
  5371  0E5E  0008               	return
  5372  0E5F                     __end_of_Timer1_Init:	
  5373                           
  5374                           	psect	text15
  5375  0C73                     __ptext15:	
  5376 ;; *************** function _Timer1_GetSecond *****************
  5377 ;; Defined at:
  5378 ;;		line 70 in file "Timer1.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;		None
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;		None
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  1    wreg      unsigned char 
  5385 ;; Registers used:
  5386 ;;		wreg
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5392 ;;      Params:         0       0       0       0       0       0
  5393 ;;      Locals:         0       0       0       0       0       0
  5394 ;;      Temps:          0       0       0       0       0       0
  5395 ;;      Totals:         0       0       0       0       0       0
  5396 ;;Total ram usage:        0 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    3
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_main
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           
  5407                           ;psect for function _Timer1_GetSecond
  5408  0C73                     _Timer1_GetSecond:	
  5409                           
  5410                           ;Timer1.c: 72: return tcnt.Second_t;
  5411                           
  5412                           ;incstack = 0
  5413                           ; Regs used in _Timer1_GetSecond: [wreg]
  5414  0C73  0020               	movlb	0	; select bank0
  5415  0C74  0854               	movf	_tcnt,w
  5416  0C75  0008               	return
  5417  0C76                     __end_of_Timer1_GetSecond:	
  5418                           
  5419                           	psect	text16
  5420  0C70                     __ptext16:	
  5421 ;; *************** function _Timer1_GetMinute *****************
  5422 ;; Defined at:
  5423 ;;		line 75 in file "Timer1.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      unsigned char 
  5430 ;; Registers used:
  5431 ;;		wreg
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5437 ;;      Params:         0       0       0       0       0       0
  5438 ;;      Locals:         0       0       0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0       0
  5440 ;;      Totals:         0       0       0       0       0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:    3
  5444 ;; This function calls:
  5445 ;;		Nothing
  5446 ;; This function is called by:
  5447 ;;		_main
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           
  5452                           ;psect for function _Timer1_GetMinute
  5453  0C70                     _Timer1_GetMinute:	
  5454                           
  5455                           ;Timer1.c: 77: return tcnt.Minute_t;
  5456                           
  5457                           ;incstack = 0
  5458                           ; Regs used in _Timer1_GetMinute: [wreg]
  5459  0C70  0020               	movlb	0	; select bank0
  5460  0C71  0855               	movf	_tcnt+1,w
  5461  0C72  0008               	return
  5462  0C73                     __end_of_Timer1_GetMinute:	
  5463                           
  5464                           	psect	text17
  5465  0D30                     __ptext17:	
  5466 ;; *************** function _Timer1_GetCountSum *****************
  5467 ;; Defined at:
  5468 ;;		line 55 in file "Timer1.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;		None
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  4   14[BANK0 ] unsigned long 
  5475 ;; Registers used:
  5476 ;;		wreg
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5482 ;;      Params:         0       4       0       0       0       0
  5483 ;;      Locals:         0       0       0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0       0
  5485 ;;      Totals:         0       4       0       0       0       0
  5486 ;;Total ram usage:        4 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    3
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		_main
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           
  5497                           ;psect for function _Timer1_GetCountSum
  5498  0D30                     _Timer1_GetCountSum:	
  5499                           
  5500                           ;Timer1.c: 57: return cnts.SigmaDeltaCount;
  5501                           
  5502                           ;incstack = 0
  5503                           ; Regs used in _Timer1_GetCountSum: [wreg]
  5504  0D30  0021               	movlb	1	; select bank1
  5505  0D31  0823               	movf	(_cnts+3)^(0+128),w
  5506  0D32  0020               	movlb	0	; select bank0
  5507  0D33  00B1               	movwf	?_Timer1_GetCountSum+3
  5508  0D34  0021               	movlb	1	; select bank1
  5509  0D35  0822               	movf	(_cnts+2)^(0+128),w
  5510  0D36  0020               	movlb	0	; select bank0
  5511  0D37  00B0               	movwf	?_Timer1_GetCountSum+2
  5512  0D38  0021               	movlb	1	; select bank1
  5513  0D39  0821               	movf	(_cnts+1)^(0+128),w
  5514  0D3A  0020               	movlb	0	; select bank0
  5515  0D3B  00AF               	movwf	?_Timer1_GetCountSum+1
  5516  0D3C  0021               	movlb	1	; select bank1
  5517  0D3D  0820               	movf	_cnts^(0+128),w
  5518  0D3E  0020               	movlb	0	; select bank0
  5519  0D3F  00AE               	movwf	?_Timer1_GetCountSum
  5520  0D40  0008               	return
  5521  0D41                     __end_of_Timer1_GetCountSum:	
  5522                           
  5523                           	psect	text18
  5524  0CD1                     __ptext18:	
  5525 ;; *************** function _Timer1_GetCPS *****************
  5526 ;; Defined at:
  5527 ;;		line 65 in file "Timer1.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;		None
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  4   14[BANK0 ] unsigned long 
  5534 ;; Registers used:
  5535 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5541 ;;      Params:         0       4       0       0       0       0
  5542 ;;      Locals:         0       0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0
  5544 ;;      Totals:         0       4       0       0       0       0
  5545 ;;Total ram usage:        4 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    3
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_main
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           
  5556                           ;psect for function _Timer1_GetCPS
  5557  0CD1                     _Timer1_GetCPS:	
  5558                           
  5559                           ;Timer1.c: 67: return cnts.AverageCPS;
  5560                           
  5561                           ;incstack = 0
  5562                           ; Regs used in _Timer1_GetCPS: [wreg+fsr1l+fsr1h+status,2+status,0]
  5563  0CD1  3008               	movlw	8
  5564  0CD2  3EA0               	addlw	(low (_cnts| 0))& (0+255)
  5565  0CD3  0086               	movwf	6
  5566  0CD4  0187               	clrf	7
  5567  0CD5  3F40               	moviw [0]fsr1
  5568  0CD6  0020               	movlb	0	; select bank0
  5569  0CD7  00AE               	movwf	?_Timer1_GetCPS
  5570  0CD8  3F41               	moviw [1]fsr1
  5571  0CD9  00AF               	movwf	?_Timer1_GetCPS+1
  5572  0CDA  3F42               	moviw [2]fsr1
  5573  0CDB  00B0               	movwf	?_Timer1_GetCPS+2
  5574  0CDC  3F43               	moviw [3]fsr1
  5575  0CDD  00B1               	movwf	?_Timer1_GetCPS+3
  5576  0CDE  0008               	return
  5577  0CDF                     __end_of_Timer1_GetCPS:	
  5578                           
  5579                           	psect	text19
  5580  0CC3                     __ptext19:	
  5581 ;; *************** function _Timer1_GetCPM *****************
  5582 ;; Defined at:
  5583 ;;		line 60 in file "Timer1.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;		None
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  4   14[BANK0 ] unsigned long 
  5590 ;; Registers used:
  5591 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5597 ;;      Params:         0       4       0       0       0       0
  5598 ;;      Locals:         0       0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0
  5600 ;;      Totals:         0       4       0       0       0       0
  5601 ;;Total ram usage:        4 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    3
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_main
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           
  5612                           ;psect for function _Timer1_GetCPM
  5613  0CC3                     _Timer1_GetCPM:	
  5614                           
  5615                           ;Timer1.c: 62: return cnts.AverageCPM;
  5616                           
  5617                           ;incstack = 0
  5618                           ; Regs used in _Timer1_GetCPM: [wreg+fsr1l+fsr1h+status,2+status,0]
  5619  0CC3  300C               	movlw	12
  5620  0CC4  3EA0               	addlw	(low (_cnts| 0))& (0+255)
  5621  0CC5  0086               	movwf	6
  5622  0CC6  0187               	clrf	7
  5623  0CC7  3F40               	moviw [0]fsr1
  5624  0CC8  0020               	movlb	0	; select bank0
  5625  0CC9  00AE               	movwf	?_Timer1_GetCPM
  5626  0CCA  3F41               	moviw [1]fsr1
  5627  0CCB  00AF               	movwf	?_Timer1_GetCPM+1
  5628  0CCC  3F42               	moviw [2]fsr1
  5629  0CCD  00B0               	movwf	?_Timer1_GetCPM+2
  5630  0CCE  3F43               	moviw [3]fsr1
  5631  0CCF  00B1               	movwf	?_Timer1_GetCPM+3
  5632  0CD0  0008               	return
  5633  0CD1                     __end_of_Timer1_GetCPM:	
  5634                           
  5635                           	psect	text20
  5636  05DA                     __ptext20:	
  5637 ;; *************** function _LCD_Init *****************
  5638 ;; Defined at:
  5639 ;;		line 28 in file "LCD.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;		None
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;		None
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  1    wreg      void 
  5646 ;; Registers used:
  5647 ;;		wreg, status,2, status,0, pclath, cstack
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5653 ;;      Params:         0       0       0       0       0       0
  5654 ;;      Locals:         0       0       0       0       0       0
  5655 ;;      Temps:          0       2       0       0       0       0
  5656 ;;      Totals:         0       2       0       0       0       0
  5657 ;;Total ram usage:        2 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    5
  5660 ;; This function calls:
  5661 ;;		_LCD_DisplayClear
  5662 ;;		_LCD_WriteData
  5663 ;; This function is called by:
  5664 ;;		_main
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           
  5669                           ;psect for function _LCD_Init
  5670  05DA                     _LCD_Init:	
  5671                           
  5672                           ;LCD.c: 30: LATA3 = 0;
  5673                           
  5674                           ;incstack = 0
  5675                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5676  05DA  0022               	movlb	2	; select bank2
  5677  05DB  118C               	bcf	12,3	;volatile
  5678                           
  5679                           ;LCD.c: 31: LATA4 = 0;
  5680  05DC  120C               	bcf	12,4	;volatile
  5681                           
  5682                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  5683  05DD  3002               	movlw	2
  5684  05DE  0020               	movlb	0	; select bank0
  5685  05DF  00B3               	movwf	??_LCD_Init+1
  5686  05E0  3038               	movlw	56
  5687  05E1  00B2               	movwf	??_LCD_Init
  5688  05E2  30AD               	movlw	173
  5689  05E3                     u3027:	
  5690  05E3  0B89               	decfsz	9,f
  5691  05E4  2DE3               	goto	u3027
  5692  05E5  0BB2               	decfsz	??_LCD_Init,f
  5693  05E6  2DE3               	goto	u3027
  5694  05E7  0BB3               	decfsz	??_LCD_Init+1,f
  5695  05E8  2DE3               	goto	u3027
  5696                           
  5697                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  5698  05E9  3003               	movlw	3
  5699  05EA  0020               	movlb	0	; select bank0
  5700  05EB  008D               	movwf	13	;volatile
  5701                           
  5702                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5703  05EC  0022               	movlb	2	; select bank2
  5704  05ED  160C               	bsf	12,4	;volatile
  5705  05EE  3200               	nop2	;2 cycle nop
  5706  05EF  3200               	nop2	;2 cycle nop
  5707  05F0  3200               	nop2	;2 cycle nop
  5708  05F1  3200               	nop2	;2 cycle nop
  5709  05F2  0022               	movlb	2	; select bank2
  5710  05F3  120C               	bcf	12,4	;volatile
  5711  05F4  3200               	nop2	;2 cycle nop
  5712  05F5  3200               	nop2	;2 cycle nop
  5713  05F6  3200               	nop2	;2 cycle nop
  5714  05F7  3200               	nop2	;2 cycle nop
  5715                           
  5716                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  5717  05F8  3034               	movlw	52
  5718  05F9  0020               	movlb	0	; select bank0
  5719  05FA  00B2               	movwf	??_LCD_Init
  5720  05FB  30F1               	movlw	241
  5721  05FC                     u3037:	
  5722  05FC  0B89               	decfsz	9,f
  5723  05FD  2DFC               	goto	u3037
  5724  05FE  0BB2               	decfsz	??_LCD_Init,f
  5725  05FF  2DFC               	goto	u3037
  5726  0600  3200               	nop2
  5727                           
  5728                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5729  0601  0022               	movlb	2	; select bank2
  5730  0602  160C               	bsf	12,4	;volatile
  5731  0603  3200               	nop2	;2 cycle nop
  5732  0604  3200               	nop2	;2 cycle nop
  5733  0605  3200               	nop2	;2 cycle nop
  5734  0606  3200               	nop2	;2 cycle nop
  5735  0607  0022               	movlb	2	; select bank2
  5736  0608  120C               	bcf	12,4	;volatile
  5737  0609  3200               	nop2	;2 cycle nop
  5738  060A  3200               	nop2	;2 cycle nop
  5739  060B  3200               	nop2	;2 cycle nop
  5740  060C  3200               	nop2	;2 cycle nop
  5741                           
  5742                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5743  060D  3005               	movlw	5
  5744  060E  0020               	movlb	0	; select bank0
  5745  060F  00B2               	movwf	??_LCD_Init
  5746  0610  3026               	movlw	38
  5747  0611                     u3047:	
  5748  0611  0B89               	decfsz	9,f
  5749  0612  2E11               	goto	u3047
  5750  0613  0BB2               	decfsz	??_LCD_Init,f
  5751  0614  2E11               	goto	u3047
  5752  0615  0000               	nop
  5753                           
  5754                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5755  0616  0022               	movlb	2	; select bank2
  5756  0617  160C               	bsf	12,4	;volatile
  5757  0618  3200               	nop2	;2 cycle nop
  5758  0619  3200               	nop2	;2 cycle nop
  5759  061A  3200               	nop2	;2 cycle nop
  5760  061B  3200               	nop2	;2 cycle nop
  5761  061C  0022               	movlb	2	; select bank2
  5762  061D  120C               	bcf	12,4	;volatile
  5763  061E  3200               	nop2	;2 cycle nop
  5764  061F  3200               	nop2	;2 cycle nop
  5765  0620  3200               	nop2	;2 cycle nop
  5766  0621  3200               	nop2	;2 cycle nop
  5767                           
  5768                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5769  0622  3005               	movlw	5
  5770  0623  0020               	movlb	0	; select bank0
  5771  0624  00B2               	movwf	??_LCD_Init
  5772  0625  3026               	movlw	38
  5773  0626                     u3057:	
  5774  0626  0B89               	decfsz	9,f
  5775  0627  2E26               	goto	u3057
  5776  0628  0BB2               	decfsz	??_LCD_Init,f
  5777  0629  2E26               	goto	u3057
  5778  062A  0000               	nop
  5779                           
  5780                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  5781  062B  3002               	movlw	2
  5782  062C  0020               	movlb	0	; select bank0
  5783  062D  008D               	movwf	13	;volatile
  5784                           
  5785                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5786  062E  0022               	movlb	2	; select bank2
  5787  062F  160C               	bsf	12,4	;volatile
  5788  0630  3200               	nop2	;2 cycle nop
  5789  0631  3200               	nop2	;2 cycle nop
  5790  0632  3200               	nop2	;2 cycle nop
  5791  0633  3200               	nop2	;2 cycle nop
  5792  0634  0022               	movlb	2	; select bank2
  5793  0635  120C               	bcf	12,4	;volatile
  5794  0636  3200               	nop2	;2 cycle nop
  5795  0637  3200               	nop2	;2 cycle nop
  5796  0638  3200               	nop2	;2 cycle nop
  5797  0639  3200               	nop2	;2 cycle nop
  5798                           
  5799                           ;LCD.c: 44: LCD_WriteData(0x28);
  5800  063A  3028               	movlw	40
  5801  063B  318F  2780  3185   	fcall	_LCD_WriteData
  5802                           
  5803                           ;LCD.c: 45: LCD_WriteData(0x0c);
  5804  063E  300C               	movlw	12
  5805  063F  318F  2780  3185   	fcall	_LCD_WriteData
  5806                           
  5807                           ;LCD.c: 46: LCD_DisplayClear();
  5808  0642  318C  24FE  3185   	fcall	_LCD_DisplayClear
  5809                           
  5810                           ;LCD.c: 47: LCD_WriteData(0x06);
  5811  0645  3006               	movlw	6
  5812  0646  318F  2780         	fcall	_LCD_WriteData
  5813  0648  0008               	return
  5814  0649                     __end_of_LCD_Init:	
  5815                           
  5816                           	psect	text21
  5817  0CFE                     __ptext21:	
  5818 ;; *************** function _LCD_DisplayClear *****************
  5819 ;; Defined at:
  5820 ;;		line 73 in file "LCD.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;		None
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      void 
  5827 ;; Registers used:
  5828 ;;		wreg, status,2, status,0, pclath, cstack
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5834 ;;      Params:         0       0       0       0       0       0
  5835 ;;      Locals:         0       0       0       0       0       0
  5836 ;;      Temps:          0       1       0       0       0       0
  5837 ;;      Totals:         0       1       0       0       0       0
  5838 ;;Total ram usage:        1 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:    4
  5841 ;; This function calls:
  5842 ;;		_LCD_WriteData
  5843 ;; This function is called by:
  5844 ;;		_LCD_Init
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           
  5849                           ;psect for function _LCD_DisplayClear
  5850  0CFE                     _LCD_DisplayClear:	
  5851                           
  5852                           ;LCD.c: 75: LATA3 = 0;
  5853                           
  5854                           ;incstack = 0
  5855                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  5856  0CFE  0022               	movlb	2	; select bank2
  5857  0CFF  118C               	bcf	12,3	;volatile
  5858                           
  5859                           ;LCD.c: 76: LCD_WriteData(0x01);
  5860  0D00  3001               	movlw	1
  5861  0D01  318F  2780  318C   	fcall	_LCD_WriteData
  5862                           
  5863                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  5864  0D04  3015               	movlw	21
  5865  0D05  0020               	movlb	0	; select bank0
  5866  0D06  00B1               	movwf	??_LCD_DisplayClear
  5867  0D07  30C6               	movlw	198
  5868  0D08                     u3067:	
  5869  0D08  0B89               	decfsz	9,f
  5870  0D09  2D08               	goto	u3067
  5871  0D0A  0BB1               	decfsz	??_LCD_DisplayClear,f
  5872  0D0B  2D08               	goto	u3067
  5873  0D0C  0000               	nop
  5874  0D0D  0008               	return
  5875  0D0E                     __end_of_LCD_DisplayClear:	
  5876                           
  5877                           	psect	text22
  5878  0D7D                     __ptext22:	
  5879 ;; *************** function _LCD_CursorPosition *****************
  5880 ;; Defined at:
  5881 ;;		line 95 in file "LCD.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  tx              1    wreg     unsigned char 
  5884 ;;  ty              1   17[BANK0 ] unsigned char 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;  tx              1   19[BANK0 ] unsigned char 
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  1    wreg      void 
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0, pclath, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5896 ;;      Params:         0       1       0       0       0       0
  5897 ;;      Locals:         0       1       0       0       0       0
  5898 ;;      Temps:          0       1       0       0       0       0
  5899 ;;      Totals:         0       3       0       0       0       0
  5900 ;;Total ram usage:        3 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    4
  5903 ;; This function calls:
  5904 ;;		_LCD_WriteData
  5905 ;; This function is called by:
  5906 ;;		_main
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           
  5911                           ;psect for function _LCD_CursorPosition
  5912  0D7D                     _LCD_CursorPosition:	
  5913                           
  5914                           ;incstack = 0
  5915                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  5916                           ;LCD_CursorPosition@tx stored from wreg
  5917  0D7D  0020               	movlb	0	; select bank0
  5918  0D7E  00B3               	movwf	LCD_CursorPosition@tx
  5919                           
  5920                           ;LCD.c: 97: LATA3 = 0;
  5921  0D7F  0022               	movlb	2	; select bank2
  5922  0D80  118C               	bcf	12,3	;volatile
  5923                           
  5924                           ;LCD.c: 98: LCD_WriteData(0x80|tx|(0x40*ty));
  5925  0D81  0020               	movlb	0	; select bank0
  5926  0D82  0831               	movf	LCD_CursorPosition@ty,w
  5927  0D83  00B2               	movwf	??_LCD_CursorPosition
  5928  0D84  3005               	movlw	5
  5929  0D85                     u2715:	
  5930  0D85  35B2               	lslf	??_LCD_CursorPosition,f
  5931  0D86  3EFF               	addlw	-1
  5932  0D87  1D03               	skipz
  5933  0D88  2D85               	goto	u2715
  5934  0D89  3532               	lslf	??_LCD_CursorPosition,w
  5935  0D8A  0433               	iorwf	LCD_CursorPosition@tx,w
  5936  0D8B  3880               	iorlw	-128
  5937  0D8C  318F  2780  318D   	fcall	_LCD_WriteData
  5938                           
  5939                           ;LCD.c: 99: _delay((unsigned long)((40)*(32000000/4000000.0)));
  5940  0D8F  306A               	movlw	106
  5941  0D90                     u3077:	
  5942  0D90  0B89               	decfsz	9,f
  5943  0D91  2D90               	goto	u3077
  5944  0D92  3200               	nop2
  5945  0D93  0008               	return
  5946  0D94                     __end_of_LCD_CursorPosition:	
  5947                           
  5948                           	psect	text23
  5949  0CEE                     __ptext23:	
  5950 ;; *************** function _LCD_CursorHome *****************
  5951 ;; Defined at:
  5952 ;;		line 84 in file "LCD.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;		None
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;		None
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      void 
  5959 ;; Registers used:
  5960 ;;		wreg, status,2, status,0, pclath, cstack
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5966 ;;      Params:         0       0       0       0       0       0
  5967 ;;      Locals:         0       0       0       0       0       0
  5968 ;;      Temps:          0       1       0       0       0       0
  5969 ;;      Totals:         0       1       0       0       0       0
  5970 ;;Total ram usage:        1 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:    4
  5973 ;; This function calls:
  5974 ;;		_LCD_WriteData
  5975 ;; This function is called by:
  5976 ;;		_main
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           
  5981                           ;psect for function _LCD_CursorHome
  5982  0CEE                     _LCD_CursorHome:	
  5983                           
  5984                           ;LCD.c: 86: LATA3 = 0;
  5985                           
  5986                           ;incstack = 0
  5987                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  5988  0CEE  0022               	movlb	2	; select bank2
  5989  0CEF  118C               	bcf	12,3	;volatile
  5990                           
  5991                           ;LCD.c: 87: LCD_WriteData(0x02);
  5992  0CF0  3002               	movlw	2
  5993  0CF1  318F  2780  318C   	fcall	_LCD_WriteData
  5994                           
  5995                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  5996  0CF4  3015               	movlw	21
  5997  0CF5  0020               	movlb	0	; select bank0
  5998  0CF6  00B1               	movwf	??_LCD_CursorHome
  5999  0CF7  30C6               	movlw	198
  6000  0CF8                     u3087:	
  6001  0CF8  0B89               	decfsz	9,f
  6002  0CF9  2CF8               	goto	u3087
  6003  0CFA  0BB1               	decfsz	??_LCD_CursorHome,f
  6004  0CFB  2CF8               	goto	u3087
  6005  0CFC  0000               	nop
  6006  0CFD  0008               	return
  6007  0CFE                     __end_of_LCD_CursorHome:	
  6008                           
  6009                           	psect	text24
  6010  0F80                     __ptext24:	
  6011 ;; *************** function _LCD_WriteData *****************
  6012 ;; Defined at:
  6013 ;;		line 15 in file "LCD.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;  point           1    wreg     char 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  point           1   16[BANK0 ] char 
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  1    wreg      void 
  6020 ;; Registers used:
  6021 ;;		wreg, status,2, status,0
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6027 ;;      Params:         0       0       0       0       0       0
  6028 ;;      Locals:         0       1       0       0       0       0
  6029 ;;      Temps:          0       2       0       0       0       0
  6030 ;;      Totals:         0       3       0       0       0       0
  6031 ;;Total ram usage:        3 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; Hardware stack levels required when called:    3
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		_LCD_Init
  6038 ;;		_putch
  6039 ;;		_LCD_DisplayClear
  6040 ;;		_LCD_CursorHome
  6041 ;;		_LCD_CursorPosition
  6042 ;;		_LCD_Put
  6043 ;;		_LCD_CursorShift
  6044 ;;		_LCD_DispShift
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           
  6049                           ;psect for function _LCD_WriteData
  6050  0F80                     _LCD_WriteData:	
  6051                           
  6052                           ;incstack = 0
  6053                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  6054                           ;LCD_WriteData@point stored from wreg
  6055  0F80  0020               	movlb	0	; select bank0
  6056  0F81  00B0               	movwf	LCD_WriteData@point
  6057                           
  6058                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  6059  0F82  30D5               	movlw	213
  6060  0F83                     u3097:	
  6061  0F83  0B89               	decfsz	9,f
  6062  0F84  2F83               	goto	u3097
  6063  0F85  0000               	nop
  6064                           
  6065                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  6066  0F86  0020               	movlb	0	; select bank0
  6067  0F87  0830               	movf	LCD_WriteData@point,w
  6068  0F88  00AE               	movwf	??_LCD_WriteData
  6069  0F89  3004               	movlw	4
  6070  0F8A                     u2515:	
  6071  0F8A  1003               	clrc
  6072  0F8B  1BAE               	btfsc	??_LCD_WriteData,7
  6073  0F8C  1403               	setc
  6074  0F8D  0CAE               	rrf	??_LCD_WriteData,f
  6075  0F8E  0B89               	decfsz	9,f
  6076  0F8F  2F8A               	goto	u2515
  6077  0F90  3003               	movlw	3
  6078  0F91  052E               	andwf	??_LCD_WriteData,w
  6079  0F92  00AF               	movwf	??_LCD_WriteData+1
  6080  0F93  0E30               	swapf	LCD_WriteData@point,w
  6081  0F94  390F               	andlw	15
  6082  0F95  1989               	btfsc	9,3
  6083  0F96  38F0               	iorlw	240
  6084  0F97  390C               	andlw	12
  6085  0F98  0709               	addwf	9,w
  6086  0F99  042F               	iorwf	??_LCD_WriteData+1,w
  6087  0F9A  008D               	movwf	13	;volatile
  6088                           
  6089                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  6090  0F9B  0022               	movlb	2	; select bank2
  6091  0F9C  160C               	bsf	12,4	;volatile
  6092  0F9D  3200               	nop2	;2 cycle nop
  6093  0F9E  3200               	nop2	;2 cycle nop
  6094  0F9F  3200               	nop2	;2 cycle nop
  6095  0FA0  3200               	nop2	;2 cycle nop
  6096  0FA1  0022               	movlb	2	; select bank2
  6097  0FA2  120C               	bcf	12,4	;volatile
  6098  0FA3  3200               	nop2	;2 cycle nop
  6099  0FA4  3200               	nop2	;2 cycle nop
  6100  0FA5  3200               	nop2	;2 cycle nop
  6101  0FA6  3200               	nop2	;2 cycle nop
  6102                           
  6103                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  6104  0FA7  3003               	movlw	3
  6105  0FA8  0020               	movlb	0	; select bank0
  6106  0FA9  0530               	andwf	LCD_WriteData@point,w
  6107  0FAA  00AE               	movwf	??_LCD_WriteData
  6108  0FAB  0830               	movf	LCD_WriteData@point,w
  6109  0FAC  390C               	andlw	12
  6110  0FAD  0709               	addwf	9,w
  6111  0FAE  042E               	iorwf	??_LCD_WriteData,w
  6112  0FAF  008D               	movwf	13	;volatile
  6113                           
  6114                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  6115  0FB0  0022               	movlb	2	; select bank2
  6116  0FB1  160C               	bsf	12,4	;volatile
  6117  0FB2  3200               	nop2	;2 cycle nop
  6118  0FB3  3200               	nop2	;2 cycle nop
  6119  0FB4  3200               	nop2	;2 cycle nop
  6120  0FB5  3200               	nop2	;2 cycle nop
  6121  0FB6  0022               	movlb	2	; select bank2
  6122  0FB7  120C               	bcf	12,4	;volatile
  6123  0FB8  3200               	nop2	;2 cycle nop
  6124  0FB9  3200               	nop2	;2 cycle nop
  6125  0FBA  3200               	nop2	;2 cycle nop
  6126  0FBB  3200               	nop2	;2 cycle nop
  6127  0FBC  0008               	return
  6128  0FBD                     __end_of_LCD_WriteData:	
  6129                           
  6130                           	psect	text25
  6131  0ECE                     __ptext25:	
  6132 ;; *************** function _DAC_WriteVoltage *****************
  6133 ;; Defined at:
  6134 ;;		line 27 in file "MCP4726.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  volue           2   30[BANK0 ] unsigned int 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;		None
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      char 
  6141 ;; Registers used:
  6142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6148 ;;      Params:         0       2       0       0       0       0
  6149 ;;      Locals:         0       0       0       0       0       0
  6150 ;;      Temps:          0       3       0       0       0       0
  6151 ;;      Totals:         0       5       0       0       0       0
  6152 ;;Total ram usage:        5 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:    5
  6155 ;; This function calls:
  6156 ;;		_I2C_Transmit
  6157 ;; This function is called by:
  6158 ;;		_main
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           
  6163                           ;psect for function _DAC_WriteVoltage
  6164  0ECE                     _DAC_WriteVoltage:	
  6165                           
  6166                           ;MCP4726.c: 29: VoltageReg.Command = (uint8_t)(0x0);
  6167                           
  6168                           ;incstack = 0
  6169                           ; Regs used in _DAC_WriteVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6170  0ECE  303F               	movlw	-193
  6171  0ECF  0021               	movlb	1	; select bank1
  6172  0ED0  05D2               	andwf	_VoltageReg^(0+128),f
  6173                           
  6174                           ;MCP4726.c: 30: VoltageReg.PowerDown = ConfigReg.PowerDown;
  6175  0ED1  0020               	movlb	0	; select bank0
  6176  0ED2  0C61               	rrf	_ConfigReg,w
  6177  0ED3  3903               	andlw	3
  6178  0ED4  00C0               	movwf	??_DAC_WriteVoltage
  6179  0ED5  0EC0               	swapf	??_DAC_WriteVoltage,f
  6180  0ED6  0021               	movlb	1	; select bank1
  6181  0ED7  0852               	movf	_VoltageReg^(0+128),w
  6182  0ED8  0020               	movlb	0	; select bank0
  6183  0ED9  0640               	xorwf	??_DAC_WriteVoltage,w
  6184  0EDA  39CF               	andlw	-49
  6185  0EDB  0640               	xorwf	??_DAC_WriteVoltage,w
  6186  0EDC  0021               	movlb	1	; select bank1
  6187  0EDD  00D2               	movwf	_VoltageReg^(0+128)
  6188                           
  6189                           ;MCP4726.c: 31: VoltageReg.Voltage4bits = (uint8_t)((volue&0x0F00)>>8);
  6190  0EDE  0020               	movlb	0	; select bank0
  6191  0EDF  083F               	movf	DAC_WriteVoltage@volue+1,w
  6192  0EE0  00C1               	movwf	??_DAC_WriteVoltage+1
  6193  0EE1  083E               	movf	DAC_WriteVoltage@volue,w
  6194  0EE2  00C0               	movwf	??_DAC_WriteVoltage
  6195  0EE3  0841               	movf	??_DAC_WriteVoltage+1,w
  6196  0EE4  00C0               	movwf	??_DAC_WriteVoltage
  6197  0EE5  01C1               	clrf	??_DAC_WriteVoltage+1
  6198  0EE6  300F               	movlw	15
  6199  0EE7  0540               	andwf	??_DAC_WriteVoltage,w
  6200  0EE8  00C2               	movwf	??_DAC_WriteVoltage+2
  6201  0EE9  0021               	movlb	1	; select bank1
  6202  0EEA  0852               	movf	_VoltageReg^(0+128),w
  6203  0EEB  0020               	movlb	0	; select bank0
  6204  0EEC  0642               	xorwf	??_DAC_WriteVoltage+2,w
  6205  0EED  39F0               	andlw	-16
  6206  0EEE  0642               	xorwf	??_DAC_WriteVoltage+2,w
  6207  0EEF  0021               	movlb	1	; select bank1
  6208  0EF0  00D2               	movwf	_VoltageReg^(0+128)
  6209                           
  6210                           ;MCP4726.c: 32: VoltageReg.Voltage8bits = (uint8_t)(volue&0x00FF);
  6211  0EF1  0020               	movlb	0	; select bank0
  6212  0EF2  083E               	movf	DAC_WriteVoltage@volue,w
  6213  0EF3  00C0               	movwf	??_DAC_WriteVoltage
  6214  0EF4  0840               	movf	??_DAC_WriteVoltage,w
  6215  0EF5  0021               	movlb	1	; select bank1
  6216  0EF6  00D3               	movwf	(_VoltageReg^(0+128)+1)
  6217                           
  6218                           ;MCP4726.c: 34: return I2C_Transmit(I2C2_MODULE,0x60,VoltageReg.Voltage_Data,2);
  6219                           ;	Return value of _DAC_WriteVoltage is never used
  6220  0EF7  3060               	movlw	96
  6221  0EF8  0020               	movlb	0	; select bank0
  6222  0EF9  00C0               	movwf	??_DAC_WriteVoltage
  6223  0EFA  0840               	movf	??_DAC_WriteVoltage,w
  6224  0EFB  00B6               	movwf	I2C_Transmit@address
  6225  0EFC  30D2               	movlw	(low (_VoltageReg| 0))& (0+255)
  6226  0EFD  00C1               	movwf	??_DAC_WriteVoltage+1
  6227  0EFE  0841               	movf	??_DAC_WriteVoltage+1,w
  6228  0EFF  00B7               	movwf	I2C_Transmit@pData
  6229  0F00  3002               	movlw	2
  6230  0F01  00C2               	movwf	??_DAC_WriteVoltage+2
  6231  0F02  0842               	movf	??_DAC_WriteVoltage+2,w
  6232  0F03  00B8               	movwf	I2C_Transmit@size
  6233  0F04  3001               	movlw	1
  6234  0F05  318D  25AD         	fcall	_I2C_Transmit
  6235  0F07  0008               	return
  6236  0F08                     __end_of_DAC_WriteVoltage:	
  6237                           
  6238                           	psect	text26
  6239  0E1E                     __ptext26:	
  6240 ;; *************** function _DAC_Initialize *****************
  6241 ;; Defined at:
  6242 ;;		line 14 in file "MCP4726.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;		None
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;		None
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  1    wreg      void 
  6249 ;; Registers used:
  6250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6256 ;;      Params:         0       0       0       0       0       0
  6257 ;;      Locals:         0       0       0       0       0       0
  6258 ;;      Temps:          0       2       0       0       0       0
  6259 ;;      Totals:         0       2       0       0       0       0
  6260 ;;Total ram usage:        2 bytes
  6261 ;; Hardware stack levels used:    1
  6262 ;; Hardware stack levels required when called:    6
  6263 ;; This function calls:
  6264 ;;		_I2C_Init
  6265 ;;		_I2C_Transmit
  6266 ;; This function is called by:
  6267 ;;		_main
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           
  6272                           ;psect for function _DAC_Initialize
  6273  0E1E                     _DAC_Initialize:	
  6274                           
  6275                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  6276                           
  6277                           ;incstack = 0
  6278                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6279  0E1E  0020               	movlb	0	; select bank0
  6280  0E1F  01B3               	clrf	I2C_Init@address
  6281  0E20  01B4               	clrf	I2C_Init@mode
  6282  0E21  01B5               	clrf	I2C_Init@Speed
  6283  0E22  3001               	movlw	1
  6284  0E23  318D  2594  318E   	fcall	_I2C_Init
  6285                           
  6286                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  6287  0E26  0020               	movlb	0	; select bank0
  6288  0E27  0861               	movf	_ConfigReg,w
  6289  0E28  391F               	andlw	-225
  6290  0E29  3880               	iorlw	128
  6291  0E2A  00E1               	movwf	_ConfigReg
  6292                           
  6293                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  6294  0E2B  1061               	bcf	_ConfigReg,0
  6295                           
  6296                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  6297  0E2C  30F9               	movlw	-7
  6298  0E2D  05E1               	andwf	_ConfigReg,f
  6299                           
  6300                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  6301  0E2E  30E7               	movlw	-25
  6302  0E2F  05E1               	andwf	_ConfigReg,f
  6303                           
  6304                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  6305  0E30  3060               	movlw	96
  6306  0E31  00BE               	movwf	??_DAC_Initialize
  6307  0E32  083E               	movf	??_DAC_Initialize,w
  6308  0E33  00B6               	movwf	I2C_Transmit@address
  6309  0E34  3061               	movlw	(low (_ConfigReg| 0))& (0+255)
  6310  0E35  00BF               	movwf	??_DAC_Initialize+1
  6311  0E36  083F               	movf	??_DAC_Initialize+1,w
  6312  0E37  00B7               	movwf	I2C_Transmit@pData
  6313  0E38  01B8               	clrf	I2C_Transmit@size
  6314  0E39  0AB8               	incf	I2C_Transmit@size,f
  6315  0E3A  3001               	movlw	1
  6316  0E3B  318D  25AD         	fcall	_I2C_Transmit
  6317  0E3D  0008               	return
  6318  0E3E                     __end_of_DAC_Initialize:	
  6319                           
  6320                           	psect	text27
  6321  0DAD                     __ptext27:	
  6322 ;; *************** function _I2C_Transmit *****************
  6323 ;; Defined at:
  6324 ;;		line 23 in file "I2C_Common.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  I2Cx            1    wreg     enum E3275
  6327 ;;  address         1   22[BANK0 ] unsigned char 
  6328 ;;  pData           1   23[BANK0 ] PTR unsigned char 
  6329 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6330 ;;  size            1   24[BANK0 ] unsigned char 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  I2Cx            1   28[BANK0 ] enum E3275
  6333 ;;  result          1   29[BANK0 ] char 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      char 
  6336 ;; Registers used:
  6337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6343 ;;      Params:         0       3       0       0       0       0
  6344 ;;      Locals:         0       2       0       0       0       0
  6345 ;;      Temps:          0       3       0       0       0       0
  6346 ;;      Totals:         0       8       0       0       0       0
  6347 ;;Total ram usage:        8 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    4
  6350 ;; This function calls:
  6351 ;;		_I2C2_Transmit
  6352 ;; This function is called by:
  6353 ;;		_DAC_Initialize
  6354 ;;		_DAC_WriteVoltage
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           
  6359                           ;psect for function _I2C_Transmit
  6360  0DAD                     _I2C_Transmit:	
  6361                           
  6362                           ;incstack = 0
  6363                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6364                           ;I2C_Transmit@I2Cx stored from wreg
  6365  0DAD  0020               	movlb	0	; select bank0
  6366  0DAE  00BC               	movwf	I2C_Transmit@I2Cx
  6367                           
  6368                           ;I2C_Common.c: 25: int8_t result;
  6369                           ;I2C_Common.c: 27: switch(I2Cx)
  6370  0DAF  2DC1               	goto	l2199
  6371  0DB0                     l2195:	
  6372                           ;I2C_Common.c: 28: {
  6373                           ;I2C_Common.c: 33: case I2C2_MODULE:
  6374                           
  6375                           
  6376                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  6377  0DB0  0837               	movf	I2C_Transmit@pData,w
  6378  0DB1  00B9               	movwf	??_I2C_Transmit
  6379  0DB2  0839               	movf	??_I2C_Transmit,w
  6380  0DB3  00AE               	movwf	I2C2_Transmit@pData
  6381  0DB4  0838               	movf	I2C_Transmit@size,w
  6382  0DB5  00BA               	movwf	??_I2C_Transmit+1
  6383  0DB6  083A               	movf	??_I2C_Transmit+1,w
  6384  0DB7  00AF               	movwf	I2C2_Transmit@size
  6385  0DB8  0836               	movf	I2C_Transmit@address,w
  6386  0DB9  3185  2542  318D   	fcall	_I2C2_Transmit
  6387  0DBC  0020               	movlb	0	; select bank0
  6388  0DBD  00BB               	movwf	??_I2C_Transmit+2
  6389  0DBE  083B               	movf	??_I2C_Transmit+2,w
  6390  0DBF  00BD               	movwf	I2C_Transmit@result
  6391                           
  6392                           ;I2C_Common.c: 36: }
  6393                           
  6394                           ;I2C_Common.c: 35: break;
  6395  0DC0  2DC6               	goto	l2201
  6396  0DC1                     l2199:	
  6397  0DC1  083C               	movf	I2C_Transmit@I2Cx,w
  6398                           
  6399                           ; Switch size 1, requested type "space"
  6400                           ; Number of cases is 1, Range of values is 1 to 1
  6401                           ; switch strategies available:
  6402                           ; Name         Instructions Cycles
  6403                           ; simple_byte            4     3 (average)
  6404                           ; direct_byte           11     9 (fixed)
  6405                           ; jumptable            263     9 (fixed)
  6406                           ;	Chosen strategy is simple_byte
  6407  0DC2  3A01               	xorlw	1	; case 1
  6408  0DC3  1903               	skipnz
  6409  0DC4  2DB0               	goto	l2195
  6410  0DC5  2DC6               	goto	l2201
  6411  0DC6                     l2201:	
  6412                           
  6413                           ;I2C_Common.c: 37: return result;
  6414  0DC6  083D               	movf	I2C_Transmit@result,w
  6415  0DC7  0008               	return
  6416  0DC8                     __end_of_I2C_Transmit:	
  6417                           
  6418                           	psect	text28
  6419  0542                     __ptext28:	
  6420 ;; *************** function _I2C2_Transmit *****************
  6421 ;; Defined at:
  6422 ;;		line 52 in file "I2C2.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  address         1    wreg     unsigned char 
  6425 ;;  pData           1   14[BANK0 ] PTR unsigned char 
  6426 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6427 ;;  size            1   15[BANK0 ] unsigned char 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  address         1   18[BANK0 ] unsigned char 
  6430 ;;  i               1   20[BANK0 ] unsigned char 
  6431 ;;  i               1   19[BANK0 ] unsigned char 
  6432 ;;  result          1   21[BANK0 ] char 
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  1    wreg      char 
  6435 ;; Registers used:
  6436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6442 ;;      Params:         0       2       0       0       0       0
  6443 ;;      Locals:         0       4       0       0       0       0
  6444 ;;      Temps:          0       2       0       0       0       0
  6445 ;;      Totals:         0       8       0       0       0       0
  6446 ;;Total ram usage:        8 bytes
  6447 ;; Hardware stack levels used:    1
  6448 ;; Hardware stack levels required when called:    3
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_I2C_Transmit
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           
  6457                           ;psect for function _I2C2_Transmit
  6458  0542                     _I2C2_Transmit:	
  6459                           
  6460                           ;incstack = 0
  6461                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  6462                           ;I2C2_Transmit@address stored from wreg
  6463  0542  0020               	movlb	0	; select bank0
  6464  0543  00B2               	movwf	I2C2_Transmit@address
  6465                           
  6466                           ;I2C2.c: 54: int8_t result = 0;
  6467  0544  01B5               	clrf	I2C2_Transmit@result
  6468                           
  6469                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  6470  0545  2DCE               	goto	l2147
  6471  0546                     l2103:	
  6472                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6473                           
  6474                           ;I2C2.c: 57: {
  6475                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  6476                           
  6477  0546  3005               	movlw	5
  6478  0547  0024               	movlb	4	; select bank4
  6479  0548  051C               	andwf	28,w	;volatile
  6480  0549  0020               	movlb	0	; select bank0
  6481  054A  00B0               	movwf	??_I2C2_Transmit
  6482  054B  0024               	movlb	4	; select bank4
  6483  054C  081E               	movf	30,w	;volatile
  6484  054D  391F               	andlw	31
  6485  054E  0020               	movlb	0	; select bank0
  6486  054F  0430               	iorwf	??_I2C2_Transmit,w
  6487  0550  1D03               	btfss	3,2
  6488  0551  2D46               	goto	l2103
  6489                           
  6490                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  6491  0552  0024               	movlb	4	; select bank4
  6492  0553  141E               	bsf	30,0	;volatile
  6493  0554                     l2105:	
  6494                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6495                           
  6496  0554  3005               	movlw	5
  6497  0555  0024               	movlb	4	; select bank4
  6498  0556  051C               	andwf	28,w	;volatile
  6499  0557  0020               	movlb	0	; select bank0
  6500  0558  00B0               	movwf	??_I2C2_Transmit
  6501  0559  0024               	movlb	4	; select bank4
  6502  055A  081E               	movf	30,w	;volatile
  6503  055B  391F               	andlw	31
  6504  055C  0020               	movlb	0	; select bank0
  6505  055D  0430               	iorwf	??_I2C2_Transmit,w
  6506  055E  1D03               	btfss	3,2
  6507  055F  2D54               	goto	l2105
  6508                           
  6509                           ;I2C2.c: 63: SSP2BUF = address << 1;
  6510  0560  3532               	lslf	I2C2_Transmit@address,w
  6511  0561  0024               	movlb	4	; select bank4
  6512  0562  0099               	movwf	25	;volatile
  6513  0563                     l466:	
  6514                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  6515                           
  6516  0563  191C               	btfsc	28,2	;volatile
  6517  0564  2D63               	goto	l466
  6518                           
  6519                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  6520  0565  3000               	movlw	0
  6521  0566  1B1E               	btfsc	30,6	;volatile
  6522  0567  3001               	movlw	1
  6523  0568  0020               	movlb	0	; select bank0
  6524  0569  00B5               	movwf	I2C2_Transmit@result
  6525                           
  6526                           ;I2C2.c: 67: if (!result)
  6527  056A  0835               	movf	I2C2_Transmit@result,w
  6528  056B  1D03               	btfss	3,2
  6529  056C  2D9A               	goto	l2129
  6530                           
  6531                           ;I2C2.c: 68: {
  6532                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  6533  056D  01B3               	clrf	I2C2_Transmit@i
  6534  056E  2D73               	goto	l2127
  6535  056F                     l2125:	
  6536                           ;I2C2.c: 79: break;
  6537                           
  6538  056F  3001               	movlw	1
  6539  0570  00B0               	movwf	??_I2C2_Transmit
  6540  0571  0830               	movf	??_I2C2_Transmit,w
  6541  0572  07B3               	addwf	I2C2_Transmit@i,f
  6542  0573                     l2127:	
  6543  0573  082F               	movf	I2C2_Transmit@size,w
  6544  0574  0233               	subwf	I2C2_Transmit@i,w
  6545  0575  1803               	btfsc	3,0
  6546  0576  2D9A               	goto	l2129
  6547  0577                     l2115:	
  6548                           ;I2C2.c: 70: {
  6549                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6550                           
  6551  0577  3005               	movlw	5
  6552  0578  0024               	movlb	4	; select bank4
  6553  0579  051C               	andwf	28,w	;volatile
  6554  057A  0020               	movlb	0	; select bank0
  6555  057B  00B0               	movwf	??_I2C2_Transmit
  6556  057C  0024               	movlb	4	; select bank4
  6557  057D  081E               	movf	30,w	;volatile
  6558  057E  391F               	andlw	31
  6559  057F  0020               	movlb	0	; select bank0
  6560  0580  0430               	iorwf	??_I2C2_Transmit,w
  6561  0581  1D03               	btfss	3,2
  6562  0582  2D77               	goto	l2115
  6563                           
  6564                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  6565  0583  0833               	movf	I2C2_Transmit@i,w
  6566  0584  072E               	addwf	I2C2_Transmit@pData,w
  6567  0585  00B0               	movwf	??_I2C2_Transmit
  6568  0586  0830               	movf	??_I2C2_Transmit,w
  6569  0587  0086               	movwf	6
  6570  0588  0187               	clrf	7
  6571  0589  0801               	movf	1,w
  6572  058A  0024               	movlb	4	; select bank4
  6573  058B  0099               	movwf	25	;volatile
  6574  058C                     l475:	
  6575                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  6576                           
  6577  058C  191C               	btfsc	28,2	;volatile
  6578  058D  2D8C               	goto	l475
  6579                           
  6580                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  6581  058E  3000               	movlw	0
  6582  058F  1B1E               	btfsc	30,6	;volatile
  6583  0590  3001               	movlw	1
  6584  0591  0020               	movlb	0	; select bank0
  6585  0592  00B5               	movwf	I2C2_Transmit@result
  6586                           
  6587                           ;I2C2.c: 76: if (result)
  6588  0593  0835               	movf	I2C2_Transmit@result,w
  6589  0594  1903               	btfsc	3,2
  6590  0595  2D6F               	goto	l2125
  6591                           
  6592                           ;I2C2.c: 77: {
  6593                           ;I2C2.c: 78: result = 2;
  6594  0596  3002               	movlw	2
  6595  0597  00B0               	movwf	??_I2C2_Transmit
  6596  0598  0830               	movf	??_I2C2_Transmit,w
  6597  0599  00B5               	movwf	I2C2_Transmit@result
  6598  059A                     l2129:	
  6599                           ;I2C2.c: 80: }
  6600                           ;I2C2.c: 81: }
  6601                           ;I2C2.c: 82: }
  6602                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6603                           
  6604  059A  3005               	movlw	5
  6605  059B  0024               	movlb	4	; select bank4
  6606  059C  051C               	andwf	28,w	;volatile
  6607  059D  0020               	movlb	0	; select bank0
  6608  059E  00B0               	movwf	??_I2C2_Transmit
  6609  059F  0024               	movlb	4	; select bank4
  6610  05A0  081E               	movf	30,w	;volatile
  6611  05A1  391F               	andlw	31
  6612  05A2  0020               	movlb	0	; select bank0
  6613  05A3  0430               	iorwf	??_I2C2_Transmit,w
  6614  05A4  1D03               	btfss	3,2
  6615  05A5  2D9A               	goto	l2129
  6616                           
  6617                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  6618  05A6  0024               	movlb	4	; select bank4
  6619  05A7  151E               	bsf	30,2	;volatile
  6620                           
  6621                           ;I2C2.c: 86: break;
  6622  05A8  2DD7               	goto	l2149
  6623  05A9                     l484:	
  6624                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  6625                           
  6626                           
  6627                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  6628  05A9  0024               	movlb	4	; select bank4
  6629  05AA  1D9C               	btfss	28,3	;volatile
  6630  05AB  1E1C               	btfss	28,4	;volatile
  6631  05AC  2DCB               	goto	l2143
  6632                           
  6633                           ;I2C2.c: 90: {
  6634                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  6635  05AD  0020               	movlb	0	; select bank0
  6636  05AE  01B4               	clrf	I2C2_Transmit@i_574
  6637  05AF                     l2139:	
  6638  05AF  082F               	movf	I2C2_Transmit@size,w
  6639  05B0  0234               	subwf	I2C2_Transmit@i_574,w
  6640  05B1  1803               	btfsc	3,0
  6641  05B2  2DC6               	goto	l2141
  6642                           
  6643                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  6644  05B3  0834               	movf	I2C2_Transmit@i_574,w
  6645  05B4  072E               	addwf	I2C2_Transmit@pData,w
  6646  05B5  00B0               	movwf	??_I2C2_Transmit
  6647  05B6  0830               	movf	??_I2C2_Transmit,w
  6648  05B7  0086               	movwf	6
  6649  05B8  0187               	clrf	7
  6650  05B9  0801               	movf	1,w
  6651  05BA  00B1               	movwf	??_I2C2_Transmit+1
  6652  05BB  0834               	movf	I2C2_Transmit@i_574,w
  6653  05BC  3EBF               	addlw	(low (_I2C2_Config| 0))& (0+255)
  6654  05BD  0086               	movwf	6
  6655  05BE  0187               	clrf	7
  6656  05BF  0831               	movf	??_I2C2_Transmit+1,w
  6657  05C0  0081               	movwf	1
  6658  05C1  3001               	movlw	1
  6659  05C2  00B0               	movwf	??_I2C2_Transmit
  6660  05C3  0830               	movf	??_I2C2_Transmit,w
  6661  05C4  07B4               	addwf	I2C2_Transmit@i_574,f
  6662  05C5  2DAF               	goto	l2139
  6663  05C6                     l2141:	
  6664                           
  6665                           ;I2C2.c: 93: result = size;
  6666  05C6  082F               	movf	I2C2_Transmit@size,w
  6667  05C7  00B0               	movwf	??_I2C2_Transmit
  6668  05C8  0830               	movf	??_I2C2_Transmit,w
  6669  05C9  00B5               	movwf	I2C2_Transmit@result
  6670                           
  6671                           ;I2C2.c: 94: }
  6672  05CA  2DD7               	goto	l2149
  6673  05CB                     l2143:	
  6674                           
  6675                           ;I2C2.c: 95: else
  6676                           ;I2C2.c: 96: result = 0;
  6677  05CB  0020               	movlb	0	; select bank0
  6678  05CC  01B5               	clrf	I2C2_Transmit@result
  6679                           
  6680                           ;I2C2.c: 98: }
  6681                           
  6682                           ;I2C2.c: 97: break;
  6683  05CD  2DD7               	goto	l2149
  6684  05CE                     l2147:	
  6685  05CE  0021               	movlb	1	; select bank1
  6686  05CF  0851               	movf	(_I2C2_Config^(0+128)+18),w
  6687                           
  6688                           ; Switch size 1, requested type "space"
  6689                           ; Number of cases is 2, Range of values is 0 to 1
  6690                           ; switch strategies available:
  6691                           ; Name         Instructions Cycles
  6692                           ; simple_byte            7     4 (average)
  6693                           ; direct_byte           10     6 (fixed)
  6694                           ; jumptable            260     6 (fixed)
  6695                           ;	Chosen strategy is simple_byte
  6696  05D0  3A00               	xorlw	0	; case 0
  6697  05D1  1903               	skipnz
  6698  05D2  2D46               	goto	l2103
  6699  05D3  3A01               	xorlw	1	; case 1
  6700  05D4  1903               	skipnz
  6701  05D5  2DA9               	goto	l484
  6702  05D6  2DD7               	goto	l2149
  6703  05D7                     l2149:	
  6704                           
  6705                           ;I2C2.c: 100: return result;
  6706  05D7  0020               	movlb	0	; select bank0
  6707  05D8  0835               	movf	I2C2_Transmit@result,w
  6708  05D9  0008               	return
  6709  05DA                     __end_of_I2C2_Transmit:	
  6710                           
  6711                           	psect	text29
  6712  0D94                     __ptext29:	
  6713 ;; *************** function _I2C_Init *****************
  6714 ;; Defined at:
  6715 ;;		line 6 in file "I2C_Common.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  I2Cx            1    wreg     enum E3275
  6718 ;;  address         1   19[BANK0 ] unsigned char 
  6719 ;;  mode            1   20[BANK0 ] enum E3266
  6720 ;;  Speed           1   21[BANK0 ] enum E3270
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;  I2Cx            1   24[BANK0 ] enum E3275
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  1    wreg      void 
  6725 ;; Registers used:
  6726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6732 ;;      Params:         0       3       0       0       0       0
  6733 ;;      Locals:         0       1       0       0       0       0
  6734 ;;      Temps:          0       2       0       0       0       0
  6735 ;;      Totals:         0       6       0       0       0       0
  6736 ;;Total ram usage:        6 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:    5
  6739 ;; This function calls:
  6740 ;;		_I2C2_Setting
  6741 ;; This function is called by:
  6742 ;;		_DAC_Initialize
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           
  6747                           ;psect for function _I2C_Init
  6748  0D94                     _I2C_Init:	
  6749                           
  6750                           ;incstack = 0
  6751                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6752                           ;I2C_Init@I2Cx stored from wreg
  6753  0D94  0020               	movlb	0	; select bank0
  6754  0D95  00B8               	movwf	I2C_Init@I2Cx
  6755                           
  6756                           ;I2C_Common.c: 8: switch(I2Cx)
  6757  0D96  2DA4               	goto	l2191
  6758  0D97                     l2187:	
  6759                           ;I2C_Common.c: 9: {
  6760                           ;I2C_Common.c: 14: case I2C2_MODULE:
  6761                           
  6762                           
  6763                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  6764  0D97  0834               	movf	I2C_Init@mode,w
  6765  0D98  00B6               	movwf	??_I2C_Init
  6766  0D99  0836               	movf	??_I2C_Init,w
  6767  0D9A  00AF               	movwf	I2C2_Setting@mode
  6768  0D9B  0835               	movf	I2C_Init@Speed,w
  6769  0D9C  00B7               	movwf	??_I2C_Init+1
  6770  0D9D  0837               	movf	??_I2C_Init+1,w
  6771  0D9E  00B0               	movwf	I2C2_Setting@Speed
  6772  0D9F  0833               	movf	I2C_Init@address,w
  6773  0DA0  3187  2787  318D   	fcall	_I2C2_Setting
  6774                           
  6775                           ;I2C_Common.c: 17: }
  6776                           
  6777                           ;I2C_Common.c: 16: break;
  6778  0DA3  2DAA               	goto	l54
  6779  0DA4                     l2191:	
  6780  0DA4  0020               	movlb	0	; select bank0
  6781  0DA5  0838               	movf	I2C_Init@I2Cx,w
  6782                           
  6783                           ; Switch size 1, requested type "space"
  6784                           ; Number of cases is 1, Range of values is 1 to 1
  6785                           ; switch strategies available:
  6786                           ; Name         Instructions Cycles
  6787                           ; simple_byte            4     3 (average)
  6788                           ; direct_byte           11     9 (fixed)
  6789                           ; jumptable            263     9 (fixed)
  6790                           ;	Chosen strategy is simple_byte
  6791  0DA6  3A01               	xorlw	1	; case 1
  6792  0DA7  1903               	skipnz
  6793  0DA8  2D97               	goto	l2187
  6794  0DA9  2DAA               	goto	l54
  6795  0DAA                     l54:	
  6796                           
  6797                           ;I2C_Common.c: 19: PEIE = 1;
  6798  0DAA  170B               	bsf	11,6	;volatile
  6799                           
  6800                           ;I2C_Common.c: 20: GIE = 1;
  6801  0DAB  178B               	bsf	11,7	;volatile
  6802  0DAC  0008               	return
  6803  0DAD                     __end_of_I2C_Init:	
  6804                           
  6805                           	psect	text30
  6806  0787                     __ptext30:	
  6807 ;; *************** function _I2C2_Setting *****************
  6808 ;; Defined at:
  6809 ;;		line 15 in file "I2C2.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  address         1    wreg     unsigned char 
  6812 ;;  mode            1   15[BANK0 ] enum E3266
  6813 ;;  Speed           1   16[BANK0 ] enum E3270
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  address         1   18[BANK0 ] unsigned char 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  1    wreg      void 
  6818 ;; Registers used:
  6819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6825 ;;      Params:         0       2       0       0       0       0
  6826 ;;      Locals:         0       1       0       0       0       0
  6827 ;;      Temps:          0       1       0       0       0       0
  6828 ;;      Totals:         0       4       0       0       0       0
  6829 ;;Total ram usage:        4 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    4
  6832 ;; This function calls:
  6833 ;;		_I2C2_PinInit
  6834 ;; This function is called by:
  6835 ;;		_I2C_Init
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           
  6840                           ;psect for function _I2C2_Setting
  6841  0787                     _I2C2_Setting:	
  6842                           
  6843                           ;incstack = 0
  6844                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6845                           ;I2C2_Setting@address stored from wreg
  6846  0787  0020               	movlb	0	; select bank0
  6847  0788  00B2               	movwf	I2C2_Setting@address
  6848                           
  6849                           ;I2C2.c: 17: I2C2_PinInit();
  6850  0789  318C  24A9  3187   	fcall	_I2C2_PinInit
  6851                           
  6852                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  6853  078C  0020               	movlb	0	; select bank0
  6854  078D  082F               	movf	I2C2_Setting@mode,w
  6855  078E  00B1               	movwf	??_I2C2_Setting
  6856  078F  0831               	movf	??_I2C2_Setting,w
  6857  0790  0021               	movlb	1	; select bank1
  6858  0791  00D1               	movwf	(_I2C2_Config^(0+128)+18)
  6859                           
  6860                           ;I2C2.c: 20: switch(mode)
  6861  0792  2FBB               	goto	l2099
  6862  0793                     l449:	
  6863                           ;I2C2.c: 21: {
  6864                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  6865                           
  6866                           
  6867                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  6868  0793  0024               	movlb	4	; select bank4
  6869  0794  159D               	bsf	29,3	;volatile
  6870                           
  6871                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6872  0795  0020               	movlb	0	; select bank0
  6873  0796  0830               	movf	I2C2_Setting@Speed,w
  6874  0797  1D03               	btfss	3,2
  6875  0798  2F9D               	goto	l2077
  6876                           
  6877                           ;I2C2.c: 25: {
  6878                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  6879  0799  0024               	movlb	4	; select bank4
  6880  079A  179C               	bsf	28,7	;volatile
  6881                           
  6882                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  6883  079B  304F               	movlw	79
  6884  079C  2FA7               	goto	L5
  6885  079D                     l2077:	
  6886                           ;I2C2.c: 28: }
  6887                           
  6888                           
  6889                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6890  079D  0020               	movlb	0	; select bank0
  6891  079E  0330               	decf	I2C2_Setting@Speed,w
  6892  079F  1D03               	btfss	3,2
  6893  07A0  2FA8               	goto	l2083
  6894                           
  6895                           ;I2C2.c: 30: {
  6896                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  6897  07A1  307F               	movlw	127
  6898  07A2  00B1               	movwf	??_I2C2_Setting
  6899  07A3  0831               	movf	??_I2C2_Setting,w
  6900  07A4  0024               	movlb	4	; select bank4
  6901  07A5  059C               	andwf	28,f	;volatile
  6902                           
  6903                           ;I2C2.c: 32: SSP2ADD = 0x13;
  6904  07A6  3013               	movlw	19
  6905  07A7                     L5:	
  6906  07A7  009A               	movwf	26	;volatile
  6907  07A8                     l2083:	
  6908                           
  6909                           ;I2C2.c: 33: }
  6910                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  6911  07A8  0024               	movlb	4	; select bank4
  6912  07A9  2FB9               	goto	l2095
  6913  07AA                     l2085:	
  6914                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  6915                           
  6916                           ;I2C2.c: 35: break;
  6917                           
  6918                           
  6919                           ;I2C2.c: 38: SSP2STAT = 0x00;
  6920  07AA  0024               	movlb	4	; select bank4
  6921  07AB  019C               	clrf	28	;volatile
  6922                           
  6923                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  6924  07AC  3006               	movlw	6
  6925  07AD  0020               	movlb	0	; select bank0
  6926  07AE  00B1               	movwf	??_I2C2_Setting
  6927  07AF  0831               	movf	??_I2C2_Setting,w
  6928  07B0  0024               	movlb	4	; select bank4
  6929  07B1  049D               	iorwf	29,f	;volatile
  6930                           
  6931                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  6932  07B2  141E               	bsf	30,0	;volatile
  6933                           
  6934                           ;I2C2.c: 41: SSP2ADD = address << 1;
  6935  07B3  0020               	movlb	0	; select bank0
  6936  07B4  3532               	lslf	I2C2_Setting@address,w
  6937  07B5  0024               	movlb	4	; select bank4
  6938  07B6  009A               	movwf	26	;volatile
  6939                           
  6940                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  6941  07B7  30FE               	movlw	254
  6942  07B8  009B               	movwf	27	;volatile
  6943  07B9                     l2095:	
  6944                           
  6945                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  6946  07B9  169D               	bsf	29,5	;volatile
  6947                           
  6948                           ;I2C2.c: 45: }
  6949                           
  6950                           ;I2C2.c: 44: break;
  6951  07BA  2FC4               	goto	l453
  6952  07BB                     l2099:	
  6953  07BB  0020               	movlb	0	; select bank0
  6954  07BC  082F               	movf	I2C2_Setting@mode,w
  6955                           
  6956                           ; Switch size 1, requested type "space"
  6957                           ; Number of cases is 2, Range of values is 0 to 1
  6958                           ; switch strategies available:
  6959                           ; Name         Instructions Cycles
  6960                           ; simple_byte            7     4 (average)
  6961                           ; direct_byte           10     6 (fixed)
  6962                           ; jumptable            260     6 (fixed)
  6963                           ;	Chosen strategy is simple_byte
  6964  07BD  3A00               	xorlw	0	; case 0
  6965  07BE  1903               	skipnz
  6966  07BF  2F93               	goto	l449
  6967  07C0  3A01               	xorlw	1	; case 1
  6968  07C1  1903               	skipnz
  6969  07C2  2FAA               	goto	l2085
  6970  07C3  2FC4               	goto	l453
  6971  07C4                     l453:	
  6972                           
  6973                           ;I2C2.c: 46: SSP2IE = 1;
  6974  07C4  0021               	movlb	1	; select bank1
  6975  07C5  1414               	bsf	20,0	;volatile
  6976                           
  6977                           ;I2C2.c: 47: BCL2IE = 1;
  6978  07C6  1494               	bsf	20,1	;volatile
  6979                           
  6980                           ;I2C2.c: 48: SSP2IF = 0;
  6981  07C7  0020               	movlb	0	; select bank0
  6982  07C8  1014               	bcf	20,0	;volatile
  6983                           
  6984                           ;I2C2.c: 49: BCL2IF = 0;
  6985  07C9  1094               	bcf	20,1	;volatile
  6986  07CA  0008               	return
  6987  07CB                     __end_of_I2C2_Setting:	
  6988                           
  6989                           	psect	text31
  6990  0CA9                     __ptext31:	
  6991 ;; *************** function _I2C2_PinInit *****************
  6992 ;; Defined at:
  6993 ;;		line 9 in file "I2C2.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;		None
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;		None
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  1    wreg      void 
  7000 ;; Registers used:
  7001 ;;		wreg, status,2, status,0
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7007 ;;      Params:         0       0       0       0       0       0
  7008 ;;      Locals:         0       0       0       0       0       0
  7009 ;;      Temps:          0       1       0       0       0       0
  7010 ;;      Totals:         0       1       0       0       0       0
  7011 ;;Total ram usage:        1 bytes
  7012 ;; Hardware stack levels used:    1
  7013 ;; Hardware stack levels required when called:    3
  7014 ;; This function calls:
  7015 ;;		Nothing
  7016 ;; This function is called by:
  7017 ;;		_I2C2_Setting
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           
  7022                           ;psect for function _I2C2_PinInit
  7023  0CA9                     _I2C2_PinInit:	
  7024                           
  7025                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  7026                           
  7027                           ;incstack = 0
  7028                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  7029  0CA9  3024               	movlw	36
  7030  0CAA  0020               	movlb	0	; select bank0
  7031  0CAB  00AE               	movwf	??_I2C2_PinInit
  7032  0CAC  082E               	movf	??_I2C2_PinInit,w
  7033  0CAD  0021               	movlb	1	; select bank1
  7034  0CAE  048D               	iorwf	13,f	;volatile
  7035                           
  7036                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  7037  0CAF  30DB               	movlw	219
  7038  0CB0  0020               	movlb	0	; select bank0
  7039  0CB1  00AE               	movwf	??_I2C2_PinInit
  7040  0CB2  082E               	movf	??_I2C2_PinInit,w
  7041  0CB3  0023               	movlb	3	; select bank3
  7042  0CB4  058D               	andwf	13,f	;volatile
  7043  0CB5  0008               	return
  7044  0CB6                     __end_of_I2C2_PinInit:	
  7045                           
  7046                           	psect	text32
  7047  0EA6                     __ptext32:	
  7048 ;; *************** function _Buzzer_Init *****************
  7049 ;; Defined at:
  7050 ;;		line 11 in file "Buzzer.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7064 ;;      Params:         0       0       0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0
  7066 ;;      Temps:          0       1       0       0       0       0
  7067 ;;      Totals:         0       1       0       0       0       0
  7068 ;;Total ram usage:        1 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    3
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_main
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           
  7079                           ;psect for function _Buzzer_Init
  7080  0EA6                     _Buzzer_Init:	
  7081                           
  7082                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  7083                           
  7084                           ;incstack = 0
  7085                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  7086  0EA6  307F               	movlw	127
  7087  0EA7  0020               	movlb	0	; select bank0
  7088  0EA8  00AE               	movwf	??_Buzzer_Init
  7089  0EA9  082E               	movf	??_Buzzer_Init,w
  7090  0EAA  0021               	movlb	1	; select bank1
  7091  0EAB  058C               	andwf	12,f	;volatile
  7092                           
  7093                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  7094  0EAC  307F               	movlw	127
  7095  0EAD  0020               	movlb	0	; select bank0
  7096  0EAE  00AE               	movwf	??_Buzzer_Init
  7097  0EAF  082E               	movf	??_Buzzer_Init,w
  7098  0EB0  0023               	movlb	3	; select bank3
  7099  0EB1  058C               	andwf	12,f	;volatile
  7100                           
  7101                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  7102  0EB2  0022               	movlb	2	; select bank2
  7103  0EB3  159D               	bsf	29,3	;volatile
  7104                           
  7105                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  7106  0EB4  0020               	movlb	0	; select bank0
  7107  0EB5  081C               	movf	28,w	;volatile
  7108                           
  7109                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  7110  0EB6  149C               	bsf	28,1	;volatile
  7111                           
  7112                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  7113  0EB7  151C               	bsf	28,2	;volatile
  7114                           
  7115                           ;Buzzer.c: 21: TMR2 = 0x00;
  7116  0EB8  019A               	clrf	26	;volatile
  7117                           
  7118                           ;Buzzer.c: 22: PR2 = 0xFF;
  7119  0EB9  30FF               	movlw	255
  7120  0EBA  009B               	movwf	27	;volatile
  7121                           
  7122                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  7123  0EBB  303F               	movlw	63
  7124  0EBC  00AE               	movwf	??_Buzzer_Init
  7125  0EBD  082E               	movf	??_Buzzer_Init,w
  7126  0EBE  0025               	movlb	5	; select bank5
  7127  0EBF  059A               	andwf	26,f	;volatile
  7128                           
  7129                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  7130  0EC0  300C               	movlw	12
  7131  0EC1  0020               	movlb	0	; select bank0
  7132  0EC2  00AE               	movwf	??_Buzzer_Init
  7133  0EC3  082E               	movf	??_Buzzer_Init,w
  7134  0EC4  0025               	movlb	5	; select bank5
  7135  0EC5  049A               	iorwf	26,f	;volatile
  7136                           
  7137                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  7138  0EC6  30F3               	movlw	243
  7139  0EC7  0020               	movlb	0	; select bank0
  7140  0EC8  00AE               	movwf	??_Buzzer_Init
  7141  0EC9  082E               	movf	??_Buzzer_Init,w
  7142  0ECA  0025               	movlb	5	; select bank5
  7143  0ECB  059E               	andwf	30,f	;volatile
  7144                           
  7145                           ;Buzzer.c: 28: CCPR2L = 0x00;
  7146  0ECC  0198               	clrf	24	;volatile
  7147  0ECD  0008               	return
  7148  0ECE                     __end_of_Buzzer_Init:	
  7149                           
  7150                           	psect	text33
  7151  0D1F                     __ptext33:	
  7152 ;; *************** function _Basic_Init *****************
  7153 ;; Defined at:
  7154 ;;		line 72 in file "main.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;		None
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      char 
  7161 ;; Registers used:
  7162 ;;		wreg, status,2
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7168 ;;      Params:         0       0       0       0       0       0
  7169 ;;      Locals:         0       0       0       0       0       0
  7170 ;;      Temps:          0       0       0       0       0       0
  7171 ;;      Totals:         0       0       0       0       0       0
  7172 ;;Total ram usage:        0 bytes
  7173 ;; Hardware stack levels used:    1
  7174 ;; Hardware stack levels required when called:    3
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_main
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           
  7183                           ;psect for function _Basic_Init
  7184  0D1F                     _Basic_Init:	
  7185                           
  7186                           ;main.c: 74: OSCCON = 0xF0;
  7187                           
  7188                           ;incstack = 0
  7189                           ; Regs used in _Basic_Init: [wreg+status,2]
  7190  0D1F  30F0               	movlw	240
  7191  0D20  0021               	movlb	1	; select bank1
  7192  0D21  0099               	movwf	25	;volatile
  7193                           
  7194                           ;main.c: 78: TRISA = 0x00;
  7195  0D22  018C               	clrf	12	;volatile
  7196                           
  7197                           ;main.c: 79: ANSELA = 0x00;
  7198  0D23  0023               	movlb	3	; select bank3
  7199  0D24  018C               	clrf	12	;volatile
  7200                           
  7201                           ;main.c: 81: TRISB = 0x00;
  7202  0D25  0021               	movlb	1	; select bank1
  7203  0D26  018D               	clrf	13	;volatile
  7204                           
  7205                           ;main.c: 82: ANSELB = 0x00;
  7206  0D27  0023               	movlb	3	; select bank3
  7207  0D28  018D               	clrf	13	;volatile
  7208                           
  7209                           ;main.c: 84: APFCON0 = 0x00;
  7210  0D29  0022               	movlb	2	; select bank2
  7211  0D2A  019D               	clrf	29	;volatile
  7212                           
  7213                           ;main.c: 85: APFCON1 = 0x00;
  7214  0D2B  019E               	clrf	30	;volatile
  7215                           
  7216                           ;main.c: 87: PORTA = 0x00;
  7217  0D2C  0020               	movlb	0	; select bank0
  7218  0D2D  018C               	clrf	12	;volatile
  7219                           
  7220                           ;main.c: 88: PORTB = 0x00;
  7221  0D2E  018D               	clrf	13	;volatile
  7222  0D2F  0008               	return
  7223  0D30                     __end_of_Basic_Init:	
  7224                           ;main.c: 90: return 0;
  7225                           ;	Return value of _Basic_Init is never used
  7226                           
  7227                           
  7228                           	psect	intentry
  7229  0004                     __pintentry:	
  7230 ;; *************** function _Handler *****************
  7231 ;; Defined at:
  7232 ;;		line 93 in file "main.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;		None
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;		None
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      void 
  7239 ;; Registers used:
  7240 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7246 ;;      Params:         0       0       0       0       0       0
  7247 ;;      Locals:         0       0       0       0       0       0
  7248 ;;      Temps:          0       1       0       0       0       0
  7249 ;;      Totals:         0       1       0       0       0       0
  7250 ;;Total ram usage:        1 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; Hardware stack levels required when called:    2
  7253 ;; This function calls:
  7254 ;;		_Buzzer_Count1ms
  7255 ;;		_I2C_CommonInterrupt
  7256 ;;		_Timer1_Count1ms
  7257 ;;		_Timer1_DetectAssignCount
  7258 ;;		_Timer6_CheckFlag
  7259 ;;		_mTouch_IntervalDecrement
  7260 ;;		_mTouch_Read
  7261 ;; This function is called by:
  7262 ;;		Interrupt level 1
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266  0004                     _Handler:	
  7267                           
  7268                           ;incstack = 0
  7269  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7270                           
  7271                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7272  0005  3180               	pagesel	$
  7273  0006  0020               	movlb	0	; select bank0
  7274  0007  087F               	movf	127,w
  7275  0008  00AD               	movwf	??_Handler
  7276                           
  7277                           ;main.c: 95: if(Timer1_DetectAssignCount())
  7278  0009  318E  265F  3180   	fcall	_Timer1_DetectAssignCount
  7279  000C  3A00               	xorlw	0
  7280  000D  1903               	skipnz
  7281  000E  2812               	goto	i1l2937
  7282                           
  7283                           ;main.c: 96: LATA6 = !LATA6;
  7284  000F  3040               	movlw	64
  7285  0010  0022               	movlb	2	; select bank2
  7286  0011  068C               	xorwf	12,f
  7287  0012                     i1l2937:	
  7288                           
  7289                           ;main.c: 98: if(Timer6_CheckFlag())
  7290  0012  318C  249E  3180   	fcall	_Timer6_CheckFlag
  7291  0015  3A00               	xorlw	0
  7292  0016  1903               	skipnz
  7293  0017  2824               	goto	i1l2945
  7294                           
  7295                           ;main.c: 99: {
  7296                           ;main.c: 100: mTouch_IntervalDecrement();
  7297  0018  318D  250E  3180   	fcall	_mTouch_IntervalDecrement
  7298                           
  7299                           ;main.c: 101: Timer1_Count1ms();
  7300  001B  3184  24A0  3180   	fcall	_Timer1_Count1ms
  7301                           
  7302                           ;main.c: 103: mTouch_Read();
  7303  001E  318E  2681  3180   	fcall	_mTouch_Read
  7304                           
  7305                           ;main.c: 104: Buzzer_Count1ms();
  7306  0021  318D  2567  3180   	fcall	_Buzzer_Count1ms
  7307  0024                     i1l2945:	
  7308                           
  7309                           ;main.c: 105: }
  7310                           ;main.c: 106: I2C_CommonInterrupt();
  7311  0024  318C  246D         	fcall	_I2C_CommonInterrupt
  7312  0026  0020               	movlb	0	; select bank0
  7313  0027  082D               	movf	??_Handler,w
  7314  0028  00FF               	movwf	127
  7315  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7316  002A  0009               	retfie
  7317  002B                     __end_of_Handler:	
  7318                           
  7319                           	psect	text35
  7320  0E81                     __ptext35:	
  7321 ;; *************** function _mTouch_Read *****************
  7322 ;; Defined at:
  7323 ;;		line 29 in file "mTouch.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;		None
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;		None
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      void 
  7330 ;; Registers used:
  7331 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7337 ;;      Params:         0       0       0       0       0       0
  7338 ;;      Locals:         0       0       0       0       0       0
  7339 ;;      Temps:          1       0       0       0       0       0
  7340 ;;      Totals:         1       0       0       0       0       0
  7341 ;;Total ram usage:        1 bytes
  7342 ;; Hardware stack levels used:    1
  7343 ;; This function calls:
  7344 ;;		Nothing
  7345 ;; This function is called by:
  7346 ;;		_Handler
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           
  7351                           ;psect for function _mTouch_Read
  7352  0E81                     _mTouch_Read:	
  7353                           
  7354                           ;mTouch.c: 31: static uint8_t channel=0;
  7355                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  7356                           
  7357                           ;incstack = 0
  7358                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7359  0E81  0020               	movlb	0	; select bank0
  7360  0E82  0860               	movf	mTouch_Read@channel,w
  7361  0E83  3EB7               	addlw	(low (_CPS_Data| 0))& (0+255)
  7362  0E84  0086               	movwf	6
  7363  0E85  0187               	clrf	7
  7364  0E86  0801               	movf	1,w
  7365  0E87  00F0               	movwf	??_mTouch_Read
  7366  0E88  0860               	movf	mTouch_Read@channel,w
  7367  0E89  3EBA               	addlw	(low (_CPS_PreData| 0))& (0+255)
  7368  0E8A  0086               	movwf	6
  7369  0E8B  0187               	clrf	7
  7370  0E8C  0870               	movf	??_mTouch_Read,w
  7371  0E8D  0081               	movwf	1
  7372                           
  7373                           ;mTouch.c: 35: CPSCON0 &= ~(0x01<<7);;
  7374  0E8E  307F               	movlw	127
  7375  0E8F  00F0               	movwf	??_mTouch_Read
  7376  0E90  0870               	movf	??_mTouch_Read,w
  7377  0E91  059E               	andwf	30,f	;volatile
  7378                           
  7379                           ;mTouch.c: 36: CPS_Data[channel] = TMR0;
  7380  0E92  0815               	movf	21,w	;volatile
  7381  0E93  00F0               	movwf	??_mTouch_Read
  7382  0E94  0860               	movf	mTouch_Read@channel,w
  7383  0E95  3EB7               	addlw	(low (_CPS_Data| 0))& (0+255)
  7384  0E96  0086               	movwf	6
  7385  0E97  0187               	clrf	7
  7386  0E98  0870               	movf	??_mTouch_Read,w
  7387  0E99  0081               	movwf	1
  7388                           
  7389                           ;mTouch.c: 37: TMR0 = 0x00;
  7390  0E9A  0195               	clrf	21	;volatile
  7391                           
  7392                           ;mTouch.c: 38: CPSCON0 |= (0x01<<7);;
  7393  0E9B  179E               	bsf	30,7	;volatile
  7394                           
  7395                           ;mTouch.c: 40: if(channel++>2)channel = 0;
  7396  0E9C  0860               	movf	mTouch_Read@channel,w
  7397  0E9D  0AE0               	incf	mTouch_Read@channel,f
  7398  0E9E  00F0               	movwf	??_mTouch_Read
  7399  0E9F  3003               	movlw	3
  7400  0EA0  0270               	subwf	??_mTouch_Read,w
  7401  0EA1  1803               	btfsc	3,0
  7402  0EA2  01E0               	clrf	mTouch_Read@channel
  7403                           
  7404                           ;mTouch.c: 41: CPSCON1 = (uint8_t)channel;
  7405  0EA3  0860               	movf	mTouch_Read@channel,w
  7406  0EA4  009F               	movwf	31	;volatile
  7407  0EA5  0008               	return
  7408  0EA6                     __end_of_mTouch_Read:	
  7409                           
  7410                           	psect	text36
  7411  0D0E                     __ptext36:	
  7412 ;; *************** function _mTouch_IntervalDecrement *****************
  7413 ;; Defined at:
  7414 ;;		line 109 in file "main.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;		None
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      void 
  7421 ;; Registers used:
  7422 ;;		wreg, status,2, status,0
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7428 ;;      Params:         0       0       0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0       0
  7430 ;;      Temps:          0       0       0       0       0       0
  7431 ;;      Totals:         0       0       0       0       0       0
  7432 ;;Total ram usage:        0 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; This function calls:
  7435 ;;		Nothing
  7436 ;; This function is called by:
  7437 ;;		_Handler
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           
  7442                           ;psect for function _mTouch_IntervalDecrement
  7443  0D0E                     _mTouch_IntervalDecrement:	
  7444                           
  7445                           ;main.c: 111: if(mTouch_Interval[0]>0)
  7446                           
  7447                           ;incstack = 0
  7448                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  7449  0D0E  0021               	movlb	1	; select bank1
  7450  0D0F  0834               	movf	_mTouch_Interval^(0+128),w
  7451  0D10  1903               	btfsc	3,2
  7452  0D11  2D14               	goto	i1l394
  7453                           
  7454                           ;main.c: 112: mTouch_Interval[0]--;
  7455  0D12  3001               	movlw	1
  7456  0D13  02B4               	subwf	_mTouch_Interval^(0+128),f
  7457  0D14                     i1l394:	
  7458                           
  7459                           ;main.c: 113: if(mTouch_Interval[1]>0)
  7460  0D14  0835               	movf	(_mTouch_Interval^(0+128)+1),w
  7461  0D15  1903               	btfsc	3,2
  7462  0D16  2D19               	goto	i1l395
  7463                           
  7464                           ;main.c: 114: mTouch_Interval[1]--;
  7465  0D17  3001               	movlw	1
  7466  0D18  02B5               	subwf	(_mTouch_Interval^(0+128)+1),f
  7467  0D19                     i1l395:	
  7468                           
  7469                           ;main.c: 115: if(mTouch_Interval[2]>0)
  7470  0D19  0836               	movf	(_mTouch_Interval^(0+128)+2),w
  7471  0D1A  1903               	btfsc	3,2
  7472  0D1B  0008               	return
  7473                           
  7474                           ;main.c: 116: mTouch_Interval[2]--;
  7475  0D1C  3001               	movlw	1
  7476  0D1D  02B6               	subwf	(_mTouch_Interval^(0+128)+2),f
  7477  0D1E  0008               	return
  7478  0D1F                     __end_of_mTouch_IntervalDecrement:	
  7479                           
  7480                           	psect	text37
  7481  0C9E                     __ptext37:	
  7482 ;; *************** function _Timer6_CheckFlag *****************
  7483 ;; Defined at:
  7484 ;;		line 17 in file "Timer6.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;		None
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;		None
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  1    wreg      unsigned char 
  7491 ;; Registers used:
  7492 ;;		wreg
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7498 ;;      Params:         0       0       0       0       0       0
  7499 ;;      Locals:         0       0       0       0       0       0
  7500 ;;      Temps:          0       0       0       0       0       0
  7501 ;;      Totals:         0       0       0       0       0       0
  7502 ;;Total ram usage:        0 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_Handler
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           
  7512                           ;psect for function _Timer6_CheckFlag
  7513  0C9E                     _Timer6_CheckFlag:	
  7514                           
  7515                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  7516                           
  7517                           ;incstack = 0
  7518                           ; Regs used in _Timer6_CheckFlag: [wreg]
  7519  0C9E  0021               	movlb	1	; select bank1
  7520  0C9F  1D93               	btfss	19,3	;volatile
  7521  0CA0  2CA7               	goto	i1l1677
  7522  0CA1  0020               	movlb	0	; select bank0
  7523  0CA2  1D93               	btfss	19,3	;volatile
  7524  0CA3  2CA7               	goto	i1l1677
  7525                           
  7526                           ;Timer6.c: 20: {
  7527                           ;Timer6.c: 21: TMR6IF = 0;
  7528  0CA4  1193               	bcf	19,3	;volatile
  7529                           
  7530                           ;Timer6.c: 22: return 1;
  7531  0CA5  3001               	movlw	1
  7532  0CA6  0008               	return
  7533  0CA7                     i1l1677:	
  7534                           
  7535                           ;Timer6.c: 23: }
  7536                           ;Timer6.c: 24: return 0;
  7537  0CA7  3000               	movlw	0
  7538  0CA8  0008               	return
  7539  0CA9                     __end_of_Timer6_CheckFlag:	
  7540                           
  7541                           	psect	text38
  7542  0E5F                     __ptext38:	
  7543 ;; *************** function _Timer1_DetectAssignCount *****************
  7544 ;; Defined at:
  7545 ;;		line 108 in file "Timer1.c"
  7546 ;; Parameters:    Size  Location     Type
  7547 ;;		None
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;		None
  7550 ;; Return value:  Size  Location     Type
  7551 ;;                  1    wreg      unsigned char 
  7552 ;; Registers used:
  7553 ;;		wreg
  7554 ;; Tracked objects:
  7555 ;;		On entry : 0/0
  7556 ;;		On exit  : 0/0
  7557 ;;		Unchanged: 0/0
  7558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7559 ;;      Params:         0       0       0       0       0       0
  7560 ;;      Locals:         0       0       0       0       0       0
  7561 ;;      Temps:          0       0       0       0       0       0
  7562 ;;      Totals:         0       0       0       0       0       0
  7563 ;;Total ram usage:        0 bytes
  7564 ;; Hardware stack levels used:    1
  7565 ;; This function calls:
  7566 ;;		Nothing
  7567 ;; This function is called by:
  7568 ;;		_Handler
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           
  7573                           ;psect for function _Timer1_DetectAssignCount
  7574  0E5F                     _Timer1_DetectAssignCount:	
  7575                           
  7576                           ;Timer1.c: 110: static uint16_t PreviousTimer1;
  7577                           ;Timer1.c: 116: if(TMR1IF&&TMR1IE)
  7578                           
  7579                           ;incstack = 0
  7580                           ; Regs used in _Timer1_DetectAssignCount: [wreg]
  7581  0E5F  0020               	movlb	0	; select bank0
  7582  0E60  1C11               	btfss	17,0	;volatile
  7583  0E61  2E7F               	goto	i1l2591
  7584  0E62  0021               	movlb	1	; select bank1
  7585  0E63  1C11               	btfss	17,0	;volatile
  7586  0E64  2E7F               	goto	i1l2591
  7587                           
  7588                           ;Timer1.c: 117: {
  7589                           ;Timer1.c: 118: cnts.SigmaDeltaCount+= 10UL;
  7590  0E65  300A               	movlw	10
  7591  0E66  07A0               	addwf	_cnts^(0+128),f
  7592  0E67  3000               	movlw	0
  7593  0E68  3DA1               	addwfc	(_cnts+1)^(0+128),f
  7594  0E69  3000               	movlw	0
  7595  0E6A  3DA2               	addwfc	(_cnts+2)^(0+128),f
  7596  0E6B  3000               	movlw	0
  7597  0E6C  3DA3               	addwfc	(_cnts+3)^(0+128),f
  7598                           
  7599                           ;Timer1.c: 121: cnts.Num_of_Detect++;
  7600  0E6D  3001               	movlw	1
  7601  0E6E  07B0               	addwf	(_cnts^(0+128)+16),f
  7602  0E6F  3000               	movlw	0
  7603  0E70  3DB1               	addwfc	((_cnts+1)^(0+128)+16),f
  7604  0E71  3000               	movlw	0
  7605  0E72  3DB2               	addwfc	((_cnts+2)^(0+128)+16),f
  7606  0E73  3000               	movlw	0
  7607  0E74  3DB3               	addwfc	((_cnts+3)^(0+128)+16),f
  7608                           
  7609                           ;Timer1.c: 124: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF-10UL+1; TMR1ON = 1; };
  7610  0E75  0020               	movlb	0	; select bank0
  7611  0E76  1018               	bcf	24,0	;volatile
  7612  0E77  30FF               	movlw	255
  7613  0E78  0097               	movwf	23	;volatile
  7614  0E79  30F6               	movlw	246
  7615  0E7A  0096               	movwf	22	;volatile
  7616  0E7B  1418               	bsf	24,0	;volatile
  7617                           
  7618                           ;Timer1.c: 125: TMR1IF = 0;
  7619  0E7C  1011               	bcf	17,0	;volatile
  7620                           
  7621                           ;Timer1.c: 126: return 1;
  7622  0E7D  3001               	movlw	1
  7623  0E7E  0008               	return
  7624  0E7F                     i1l2591:	
  7625                           
  7626                           ;Timer1.c: 127: }
  7627                           ;Timer1.c: 128: return 0;
  7628  0E7F  3000               	movlw	0
  7629  0E80  0008               	return
  7630  0E81                     __end_of_Timer1_DetectAssignCount:	
  7631                           
  7632                           	psect	text39
  7633  04A0                     __ptext39:	
  7634 ;; *************** function _Timer1_Count1ms *****************
  7635 ;; Defined at:
  7636 ;;		line 81 in file "Timer1.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;		None
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;		None
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  1    wreg      void 
  7643 ;; Registers used:
  7644 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7650 ;;      Params:         0       0       0       0       0       0
  7651 ;;      Locals:         0       0       0       0       0       0
  7652 ;;      Temps:          1       0       0       0       0       0
  7653 ;;      Totals:         1       0       0       0       0       0
  7654 ;;Total ram usage:        1 bytes
  7655 ;; Hardware stack levels used:    1
  7656 ;; Hardware stack levels required when called:    1
  7657 ;; This function calls:
  7658 ;;		___lmul
  7659 ;;		i1_Buzzer_MiliSecond
  7660 ;;		i1___lldiv
  7661 ;; This function is called by:
  7662 ;;		_Handler
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           
  7667                           ;psect for function _Timer1_Count1ms
  7668  04A0                     _Timer1_Count1ms:	
  7669                           
  7670                           ;Timer1.c: 83: tcnt.Delta_t++;
  7671                           
  7672                           ;incstack = 0
  7673                           ; Regs used in _Timer1_Count1ms: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7674  04A0  3001               	movlw	1
  7675  04A1  0020               	movlb	0	; select bank0
  7676  04A2  07D6               	addwf	_tcnt+2,f
  7677  04A3  3000               	movlw	0
  7678  04A4  3DD7               	addwfc	_tcnt+3,f
  7679  04A5  3000               	movlw	0
  7680  04A6  3DD8               	addwfc	_tcnt+4,f
  7681  04A7  3000               	movlw	0
  7682  04A8  3DD9               	addwfc	_tcnt+5,f
  7683                           
  7684                           ;Timer1.c: 84: tcnt.RenewalRersult++;
  7685  04A9  3001               	movlw	1
  7686  04AA  07DA               	addwf	_tcnt+6,f
  7687  04AB  3000               	movlw	0
  7688  04AC  3DDB               	addwfc	_tcnt+7,f
  7689                           
  7690                           ;Timer1.c: 85: if((tcnt.RenewalRersult>1000)&&cnts.Num_of_Detect)
  7691  04AD  3003               	movlw	3
  7692  04AE  025B               	subwf	_tcnt+7,w
  7693  04AF  30E9               	movlw	233
  7694  04B0  1903               	skipnz
  7695  04B1  025A               	subwf	_tcnt+6,w
  7696  04B2  1C03               	skipc
  7697  04B3  0008               	return
  7698  04B4  0021               	movlb	1	; select bank1
  7699  04B5  0833               	movf	((_cnts+3)^(0+128)+16),w
  7700  04B6  0432               	iorwf	((_cnts+2)^(0+128)+16),w
  7701  04B7  0431               	iorwf	((_cnts+1)^(0+128)+16),w
  7702  04B8  0430               	iorwf	(_cnts^(0+128)+16),w
  7703  04B9  1903               	skipnz
  7704  04BA  0008               	return
  7705                           
  7706                           ;Timer1.c: 86: {
  7707                           ;Timer1.c: 87: tcnt.RenewalRersult = 0;
  7708  04BB  0020               	movlb	0	; select bank0
  7709  04BC  01DA               	clrf	_tcnt+6
  7710  04BD  01DB               	clrf	_tcnt+7
  7711                           
  7712                           ;Timer1.c: 89: cnts.AverageCPS = (uint32_t)((cnts.SigmaDeltaCount * 1000UL)/tcnt.Delta_t
      +                          );
  7713  04BE  3002               	movlw	2
  7714  04BF  3E54               	addlw	(low (_tcnt| 0))& (0+255)
  7715  04C0  0086               	movwf	6
  7716  04C1  0187               	clrf	7
  7717  04C2  3F40               	moviw [0]fsr1
  7718  04C3  00A0               	movwf	i1___lldiv@divisor
  7719  04C4  3F41               	moviw [1]fsr1
  7720  04C5  00A1               	movwf	i1___lldiv@divisor+1
  7721  04C6  3F42               	moviw [2]fsr1
  7722  04C7  00A2               	movwf	i1___lldiv@divisor+2
  7723  04C8  3F43               	moviw [3]fsr1
  7724  04C9  00A3               	movwf	i1___lldiv@divisor+3
  7725  04CA  0021               	movlb	1	; select bank1
  7726  04CB  0823               	movf	(_cnts+3)^(0+128),w
  7727  04CC  00F3               	movwf	___lmul@multiplier+3
  7728  04CD  0822               	movf	(_cnts+2)^(0+128),w
  7729  04CE  00F2               	movwf	___lmul@multiplier+2
  7730  04CF  0821               	movf	(_cnts+1)^(0+128),w
  7731  04D0  00F1               	movwf	___lmul@multiplier+1
  7732  04D1  0820               	movf	_cnts^(0+128),w
  7733  04D2  00F0               	movwf	___lmul@multiplier
  7734  04D3  3000               	movlw	0
  7735  04D4  00F7               	movwf	___lmul@multiplicand+3
  7736  04D5  3000               	movlw	0
  7737  04D6  00F6               	movwf	___lmul@multiplicand+2
  7738  04D7  3003               	movlw	3
  7739  04D8  00F5               	movwf	___lmul@multiplicand+1
  7740  04D9  30E8               	movlw	232
  7741  04DA  00F4               	movwf	___lmul@multiplicand
  7742  04DB  3187  27CB  3184   	fcall	___lmul
  7743  04DE  0873               	movf	?___lmul+3,w
  7744  04DF  0020               	movlb	0	; select bank0
  7745  04E0  00A7               	movwf	i1___lldiv@dividend+3
  7746  04E1  0872               	movf	?___lmul+2,w
  7747  04E2  00A6               	movwf	i1___lldiv@dividend+2
  7748  04E3  0871               	movf	?___lmul+1,w
  7749  04E4  00A5               	movwf	i1___lldiv@dividend+1
  7750  04E5  0870               	movf	?___lmul,w
  7751  04E6  00A4               	movwf	i1___lldiv@dividend
  7752  04E7  3186  26F0  3184   	fcall	i1___lldiv
  7753  04EA  0020               	movlb	0	; select bank0
  7754  04EB  0823               	movf	?i1___lldiv+3,w
  7755  04EC  0021               	movlb	1	; select bank1
  7756  04ED  00AB               	movwf	((_cnts+3)^(0+128)+8)
  7757  04EE  0020               	movlb	0	; select bank0
  7758  04EF  0822               	movf	?i1___lldiv+2,w
  7759  04F0  0021               	movlb	1	; select bank1
  7760  04F1  00AA               	movwf	((_cnts+2)^(0+128)+8)
  7761  04F2  0020               	movlb	0	; select bank0
  7762  04F3  0821               	movf	?i1___lldiv+1,w
  7763  04F4  0021               	movlb	1	; select bank1
  7764  04F5  00A9               	movwf	((_cnts+1)^(0+128)+8)
  7765  04F6  0020               	movlb	0	; select bank0
  7766  04F7  0820               	movf	?i1___lldiv,w
  7767  04F8  0021               	movlb	1	; select bank1
  7768  04F9  00A8               	movwf	(_cnts^(0+128)+8)
  7769                           
  7770                           ;Timer1.c: 90: cnts.AverageCPM = (uint32_t)(cnts.AverageCPS*60);
  7771  04FA  3008               	movlw	8
  7772  04FB  3EA0               	addlw	(low (_cnts| 0))& (0+255)
  7773  04FC  0086               	movwf	6
  7774  04FD  0187               	clrf	7
  7775  04FE  3F40               	moviw [0]fsr1
  7776  04FF  00F0               	movwf	___lmul@multiplier
  7777  0500  3F41               	moviw [1]fsr1
  7778  0501  00F1               	movwf	___lmul@multiplier+1
  7779  0502  3F42               	moviw [2]fsr1
  7780  0503  00F2               	movwf	___lmul@multiplier+2
  7781  0504  3F43               	moviw [3]fsr1
  7782  0505  00F3               	movwf	___lmul@multiplier+3
  7783  0506  3000               	movlw	0
  7784  0507  00F7               	movwf	___lmul@multiplicand+3
  7785  0508  3000               	movlw	0
  7786  0509  00F6               	movwf	___lmul@multiplicand+2
  7787  050A  3000               	movlw	0
  7788  050B  00F5               	movwf	___lmul@multiplicand+1
  7789  050C  303C               	movlw	60
  7790  050D  00F4               	movwf	___lmul@multiplicand
  7791  050E  3187  27CB  3184   	fcall	___lmul
  7792  0511  0873               	movf	?___lmul+3,w
  7793  0512  0021               	movlb	1	; select bank1
  7794  0513  00AF               	movwf	((_cnts+3)^(0+128)+12)
  7795  0514  0872               	movf	?___lmul+2,w
  7796  0515  00AE               	movwf	((_cnts+2)^(0+128)+12)
  7797  0516  0871               	movf	?___lmul+1,w
  7798  0517  00AD               	movwf	((_cnts+1)^(0+128)+12)
  7799  0518  0870               	movf	?___lmul,w
  7800  0519  00AC               	movwf	(_cnts^(0+128)+12)
  7801                           
  7802                           ;Timer1.c: 92: tcnt.Second_t++;
  7803  051A  3001               	movlw	1
  7804  051B  00FD               	movwf	??_Timer1_Count1ms
  7805  051C  087D               	movf	??_Timer1_Count1ms,w
  7806  051D  0020               	movlb	0	; select bank0
  7807  051E  07D4               	addwf	_tcnt,f
  7808                           
  7809                           ;Timer1.c: 94: if((56<tcnt.Second_t)&&(tcnt.Second_t!=60))
  7810  051F  3039               	movlw	57
  7811  0520  0254               	subwf	_tcnt,w
  7812  0521  1C03               	skipc
  7813  0522  2D2B               	goto	i1l2565
  7814  0523  303C               	movlw	60
  7815  0524  0654               	xorwf	_tcnt,w
  7816  0525  1903               	btfsc	3,2
  7817  0526  2D2B               	goto	i1l2565
  7818                           
  7819                           ;Timer1.c: 95: Buzzer_MiliSecond(300);
  7820  0527  302C               	movlw	44
  7821  0528  00F0               	movwf	i1Buzzer_MiliSecond@time
  7822  0529  3001               	movlw	1
  7823  052A  2D33               	goto	L6
  7824  052B                     i1l2565:	
  7825                           
  7826                           ;Timer1.c: 96: else if(tcnt.Second_t==60)
  7827  052B  303C               	movlw	60
  7828  052C  0020               	movlb	0	; select bank0
  7829  052D  0654               	xorwf	_tcnt,w
  7830  052E  1D03               	btfss	3,2
  7831  052F  2D37               	goto	i1l2569
  7832                           
  7833                           ;Timer1.c: 97: Buzzer_MiliSecond(600);
  7834  0530  3058               	movlw	88
  7835  0531  00F0               	movwf	i1Buzzer_MiliSecond@time
  7836  0532  3002               	movlw	2
  7837  0533                     L6:	
  7838  0533  00F1               	movwf	i1Buzzer_MiliSecond@time+1
  7839  0534  318C  248A  3184   	fcall	i1_Buzzer_MiliSecond
  7840  0537                     i1l2569:	
  7841                           
  7842                           ;Timer1.c: 99: if(tcnt.Second_t>59)
  7843  0537  303C               	movlw	60
  7844  0538  0020               	movlb	0	; select bank0
  7845  0539  0254               	subwf	_tcnt,w
  7846  053A  1C03               	skipc
  7847  053B  0008               	return
  7848                           
  7849                           ;Timer1.c: 100: {
  7850                           ;Timer1.c: 101: tcnt.Second_t = 0;
  7851  053C  01D4               	clrf	_tcnt
  7852                           
  7853                           ;Timer1.c: 102: tcnt.Minute_t++;
  7854  053D  3001               	movlw	1
  7855  053E  00FD               	movwf	??_Timer1_Count1ms
  7856  053F  087D               	movf	??_Timer1_Count1ms,w
  7857  0540  07D5               	addwf	_tcnt+1,f
  7858  0541  0008               	return
  7859  0542                     __end_of_Timer1_Count1ms:	
  7860                           
  7861                           	psect	text40
  7862  06F0                     __ptext40:	
  7863 ;; *************** function i1___lldiv *****************
  7864 ;; Defined at:
  7865 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;  divisor         4    0[BANK0 ] unsigned long 
  7868 ;;  dividend        4    4[BANK0 ] unsigned long 
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;  __lldiv         4    8[BANK0 ] unsigned long 
  7871 ;;  __lldiv         1   12[BANK0 ] unsigned char 
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  4    0[BANK0 ] unsigned long 
  7874 ;; Registers used:
  7875 ;;		wreg, status,2, status,0
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7881 ;;      Params:         0       8       0       0       0       0
  7882 ;;      Locals:         0       5       0       0       0       0
  7883 ;;      Temps:          1       0       0       0       0       0
  7884 ;;      Totals:         1      13       0       0       0       0
  7885 ;;Total ram usage:       14 bytes
  7886 ;; Hardware stack levels used:    1
  7887 ;; This function calls:
  7888 ;;		Nothing
  7889 ;; This function is called by:
  7890 ;;		_Timer1_Count1ms
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           
  7895                           ;psect for function i1___lldiv
  7896  06F0                     i1___lldiv:	
  7897                           
  7898                           ;incstack = 0
  7899                           ; Regs used in i1___lldiv: [wreg+status,2+status,0]
  7900  06F0  3000               	movlw	0
  7901  06F1  0020               	movlb	0	; select bank0
  7902  06F2  00AB               	movwf	i1___lldiv@quotient+3
  7903  06F3  3000               	movlw	0
  7904  06F4  00AA               	movwf	i1___lldiv@quotient+2
  7905  06F5  3000               	movlw	0
  7906  06F6  00A9               	movwf	i1___lldiv@quotient+1
  7907  06F7  3000               	movlw	0
  7908  06F8  00A8               	movwf	i1___lldiv@quotient
  7909  06F9  0823               	movf	i1___lldiv@divisor+3,w
  7910  06FA  0422               	iorwf	i1___lldiv@divisor+2,w
  7911  06FB  0421               	iorwf	i1___lldiv@divisor+1,w
  7912  06FC  0420               	iorwf	i1___lldiv@divisor,w
  7913  06FD  1903               	skipnz
  7914  06FE  2F3A               	goto	i1l2383
  7915  06FF  01AC               	clrf	i1___lldiv@counter
  7916  0700  0AAC               	incf	i1___lldiv@counter,f
  7917  0701                     i1l2369:	
  7918  0701  1BA3               	btfsc	i1___lldiv@divisor+3,7
  7919  0702  2F0F               	goto	i1l2371
  7920  0703  3001               	movlw	1
  7921  0704                     u183_25:	
  7922  0704  35A0               	lslf	i1___lldiv@divisor,f
  7923  0705  0DA1               	rlf	i1___lldiv@divisor+1,f
  7924  0706  0DA2               	rlf	i1___lldiv@divisor+2,f
  7925  0707  0DA3               	rlf	i1___lldiv@divisor+3,f
  7926  0708  0B89               	decfsz	9,f
  7927  0709  2F04               	goto	u183_25
  7928  070A  3001               	movlw	1
  7929  070B  00FC               	movwf	??i1___lldiv
  7930  070C  087C               	movf	??i1___lldiv,w
  7931  070D  07AC               	addwf	i1___lldiv@counter,f
  7932  070E  2F01               	goto	i1l2369
  7933  070F                     i1l2371:	
  7934  070F  3001               	movlw	1
  7935  0710                     u185_25:	
  7936  0710  35A8               	lslf	i1___lldiv@quotient,f
  7937  0711  0DA9               	rlf	i1___lldiv@quotient+1,f
  7938  0712  0DAA               	rlf	i1___lldiv@quotient+2,f
  7939  0713  0DAB               	rlf	i1___lldiv@quotient+3,f
  7940  0714  0B89               	decfsz	9,f
  7941  0715  2F10               	goto	u185_25
  7942  0716  0823               	movf	i1___lldiv@divisor+3,w
  7943  0717  0227               	subwf	i1___lldiv@dividend+3,w
  7944  0718  1D03               	skipz
  7945  0719  2F24               	goto	u186_25
  7946  071A  0822               	movf	i1___lldiv@divisor+2,w
  7947  071B  0226               	subwf	i1___lldiv@dividend+2,w
  7948  071C  1D03               	skipz
  7949  071D  2F24               	goto	u186_25
  7950  071E  0821               	movf	i1___lldiv@divisor+1,w
  7951  071F  0225               	subwf	i1___lldiv@dividend+1,w
  7952  0720  1D03               	skipz
  7953  0721  2F24               	goto	u186_25
  7954  0722  0820               	movf	i1___lldiv@divisor,w
  7955  0723  0224               	subwf	i1___lldiv@dividend,w
  7956  0724                     u186_25:	
  7957  0724  1C03               	skipc
  7958  0725  2F2F               	goto	i1l2379
  7959  0726  0820               	movf	i1___lldiv@divisor,w
  7960  0727  02A4               	subwf	i1___lldiv@dividend,f
  7961  0728  0821               	movf	i1___lldiv@divisor+1,w
  7962  0729  3BA5               	subwfb	i1___lldiv@dividend+1,f
  7963  072A  0822               	movf	i1___lldiv@divisor+2,w
  7964  072B  3BA6               	subwfb	i1___lldiv@dividend+2,f
  7965  072C  0823               	movf	i1___lldiv@divisor+3,w
  7966  072D  3BA7               	subwfb	i1___lldiv@dividend+3,f
  7967  072E  1428               	bsf	i1___lldiv@quotient,0
  7968  072F                     i1l2379:	
  7969  072F  3001               	movlw	1
  7970  0730                     u187_25:	
  7971  0730  36A3               	lsrf	i1___lldiv@divisor+3,f
  7972  0731  0CA2               	rrf	i1___lldiv@divisor+2,f
  7973  0732  0CA1               	rrf	i1___lldiv@divisor+1,f
  7974  0733  0CA0               	rrf	i1___lldiv@divisor,f
  7975  0734  0B89               	decfsz	9,f
  7976  0735  2F30               	goto	u187_25
  7977  0736  3001               	movlw	1
  7978  0737  02AC               	subwf	i1___lldiv@counter,f
  7979  0738  1D03               	btfss	3,2
  7980  0739  2F0F               	goto	i1l2371
  7981  073A                     i1l2383:	
  7982  073A  082B               	movf	i1___lldiv@quotient+3,w
  7983  073B  00A3               	movwf	?i1___lldiv+3
  7984  073C  082A               	movf	i1___lldiv@quotient+2,w
  7985  073D  00A2               	movwf	?i1___lldiv+2
  7986  073E  0829               	movf	i1___lldiv@quotient+1,w
  7987  073F  00A1               	movwf	?i1___lldiv+1
  7988  0740  0828               	movf	i1___lldiv@quotient,w
  7989  0741  00A0               	movwf	?i1___lldiv
  7990  0742  0008               	return
  7991  0743                     __end_ofi1___lldiv:	
  7992                           
  7993                           	psect	text41
  7994  0C8A                     __ptext41:	
  7995 ;; *************** function i1_Buzzer_MiliSecond *****************
  7996 ;; Defined at:
  7997 ;;		line 38 in file "Buzzer.c"
  7998 ;; Parameters:    Size  Location     Type
  7999 ;;  time            2    0[COMMON] unsigned int 
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;		None
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  1    wreg      void 
  8004 ;; Registers used:
  8005 ;;		wreg, status,2, status,0
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8011 ;;      Params:         2       0       0       0       0       0
  8012 ;;      Locals:         0       0       0       0       0       0
  8013 ;;      Temps:          0       0       0       0       0       0
  8014 ;;      Totals:         2       0       0       0       0       0
  8015 ;;Total ram usage:        2 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; This function calls:
  8018 ;;		Nothing
  8019 ;; This function is called by:
  8020 ;;		_Timer1_Count1ms
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           
  8025                           ;psect for function i1_Buzzer_MiliSecond
  8026  0C8A                     i1_Buzzer_MiliSecond:	
  8027                           
  8028                           ;Buzzer.c: 40: if(count==0)
  8029                           
  8030                           ;incstack = 0
  8031                           ; Regs used in i1_Buzzer_MiliSecond: [wreg+status,2+status,0]
  8032  0C8A  0020               	movlb	0	; select bank0
  8033  0C8B  085E               	movf	_count,w
  8034  0C8C  045F               	iorwf	_count+1,w
  8035  0C8D  1D03               	btfss	3,2
  8036  0C8E  0008               	return
  8037                           
  8038                           ;Buzzer.c: 41: count = time;
  8039  0C8F  0871               	movf	i1Buzzer_MiliSecond@time+1,w
  8040  0C90  00DF               	movwf	_count+1
  8041  0C91  0870               	movf	i1Buzzer_MiliSecond@time,w
  8042  0C92  00DE               	movwf	_count
  8043  0C93  0008               	return
  8044  0C94                     __end_ofi1_Buzzer_MiliSecond:	
  8045                           
  8046                           	psect	text42
  8047  07CB                     __ptext42:	
  8048 ;; *************** function ___lmul *****************
  8049 ;; Defined at:
  8050 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul32.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  multiplier      4    0[COMMON] unsigned long 
  8053 ;;  multiplicand    4    4[COMMON] unsigned long 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  product         4    8[COMMON] unsigned long 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  4    0[COMMON] unsigned long 
  8058 ;; Registers used:
  8059 ;;		wreg, status,2, status,0
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8065 ;;      Params:         8       0       0       0       0       0
  8066 ;;      Locals:         4       0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0
  8068 ;;      Totals:        12       0       0       0       0       0
  8069 ;;Total ram usage:       12 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; This function calls:
  8072 ;;		Nothing
  8073 ;; This function is called by:
  8074 ;;		_Timer1_Count1ms
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           
  8079                           ;psect for function ___lmul
  8080  07CB                     ___lmul:	
  8081                           
  8082                           ;incstack = 0
  8083                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8084  07CB  3000               	movlw	0
  8085  07CC  00FB               	movwf	___lmul@product+3
  8086  07CD  3000               	movlw	0
  8087  07CE  00FA               	movwf	___lmul@product+2
  8088  07CF  3000               	movlw	0
  8089  07D0  00F9               	movwf	___lmul@product+1
  8090  07D1  3000               	movlw	0
  8091  07D2  00F8               	movwf	___lmul@product
  8092  07D3                     i1l2303:	
  8093  07D3  1C70               	btfss	___lmul@multiplier,0
  8094  07D4  2FDD               	goto	i1l2307
  8095  07D5  0874               	movf	___lmul@multiplicand,w
  8096  07D6  07F8               	addwf	___lmul@product,f
  8097  07D7  0875               	movf	___lmul@multiplicand+1,w
  8098  07D8  3DF9               	addwfc	___lmul@product+1,f
  8099  07D9  0876               	movf	___lmul@multiplicand+2,w
  8100  07DA  3DFA               	addwfc	___lmul@product+2,f
  8101  07DB  0877               	movf	___lmul@multiplicand+3,w
  8102  07DC  3DFB               	addwfc	___lmul@product+3,f
  8103  07DD                     i1l2307:	
  8104  07DD  3001               	movlw	1
  8105  07DE                     u165_25:	
  8106  07DE  35F4               	lslf	___lmul@multiplicand,f
  8107  07DF  0DF5               	rlf	___lmul@multiplicand+1,f
  8108  07E0  0DF6               	rlf	___lmul@multiplicand+2,f
  8109  07E1  0DF7               	rlf	___lmul@multiplicand+3,f
  8110  07E2  0B89               	decfsz	9,f
  8111  07E3  2FDE               	goto	u165_25
  8112  07E4  3001               	movlw	1
  8113  07E5                     u166_25:	
  8114  07E5  36F3               	lsrf	___lmul@multiplier+3,f
  8115  07E6  0CF2               	rrf	___lmul@multiplier+2,f
  8116  07E7  0CF1               	rrf	___lmul@multiplier+1,f
  8117  07E8  0CF0               	rrf	___lmul@multiplier,f
  8118  07E9  0B89               	decfsz	9,f
  8119  07EA  2FE5               	goto	u166_25
  8120  07EB  0873               	movf	___lmul@multiplier+3,w
  8121  07EC  0472               	iorwf	___lmul@multiplier+2,w
  8122  07ED  0471               	iorwf	___lmul@multiplier+1,w
  8123  07EE  0470               	iorwf	___lmul@multiplier,w
  8124  07EF  1D03               	skipz
  8125  07F0  2FD3               	goto	i1l2303
  8126  07F1  087B               	movf	___lmul@product+3,w
  8127  07F2  00F3               	movwf	?___lmul+3
  8128  07F3  087A               	movf	___lmul@product+2,w
  8129  07F4  00F2               	movwf	?___lmul+2
  8130  07F5  0879               	movf	___lmul@product+1,w
  8131  07F6  00F1               	movwf	?___lmul+1
  8132  07F7  0878               	movf	___lmul@product,w
  8133  07F8  00F0               	movwf	?___lmul
  8134  07F9  0008               	return
  8135  07FA                     __end_of___lmul:	
  8136                           
  8137                           	psect	text43
  8138  0C6D                     __ptext43:	
  8139 ;; *************** function _I2C_CommonInterrupt *****************
  8140 ;; Defined at:
  8141 ;;		line 58 in file "I2C_Common.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;		None
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;		None
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  1    wreg      void 
  8148 ;; Registers used:
  8149 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8155 ;;      Params:         0       0       0       0       0       0
  8156 ;;      Locals:         0       0       0       0       0       0
  8157 ;;      Temps:          0       0       0       0       0       0
  8158 ;;      Totals:         0       0       0       0       0       0
  8159 ;;Total ram usage:        0 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; Hardware stack levels required when called:    1
  8162 ;; This function calls:
  8163 ;;		_I2C2_Interrupt
  8164 ;; This function is called by:
  8165 ;;		_Handler
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           
  8170                           ;psect for function _I2C_CommonInterrupt
  8171  0C6D                     _I2C_CommonInterrupt:	
  8172                           
  8173                           ;I2C_Common.c: 61: I2C2_Interrupt();
  8174                           
  8175                           ;incstack = 0
  8176                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8177  0C6D  3186  2649         	fcall	_I2C2_Interrupt
  8178  0C6F  0008               	return
  8179  0C70                     __end_of_I2C_CommonInterrupt:	
  8180                           
  8181                           	psect	text44
  8182  0649                     __ptext44:	
  8183 ;; *************** function _I2C2_Interrupt *****************
  8184 ;; Defined at:
  8185 ;;		line 152 in file "I2C2.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;		None
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;		None
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  1    wreg      void 
  8192 ;; Registers used:
  8193 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8199 ;;      Params:         0       0       0       0       0       0
  8200 ;;      Locals:         0       0       0       0       0       0
  8201 ;;      Temps:          1       0       0       0       0       0
  8202 ;;      Totals:         1       0       0       0       0       0
  8203 ;;Total ram usage:        1 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; This function calls:
  8206 ;;		Nothing
  8207 ;; This function is called by:
  8208 ;;		_I2C_CommonInterrupt
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           
  8213                           ;psect for function _I2C2_Interrupt
  8214  0649                     _I2C2_Interrupt:	
  8215                           
  8216                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  8217                           
  8218                           ;incstack = 0
  8219                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  8220  0649  0020               	movlb	0	; select bank0
  8221  064A  1C14               	btfss	20,0	;volatile
  8222  064B  2E95               	goto	i1l2249
  8223  064C  0021               	movlb	1	; select bank1
  8224  064D  1C14               	btfss	20,0	;volatile
  8225  064E  2E95               	goto	i1l2249
  8226                           
  8227                           ;I2C2.c: 155: {
  8228                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  8229  064F  0024               	movlb	4	; select bank4
  8230  0650  1E9C               	btfss	28,5	;volatile
  8231  0651  2E6C               	goto	i1l532
  8232                           
  8233                           ;I2C2.c: 157: {
  8234                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  8235  0652  1D1C               	btfss	28,2	;volatile
  8236  0653  2E5F               	goto	i1l2225
  8237                           
  8238                           ;I2C2.c: 159: {
  8239                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  8240  0654  1B1E               	btfsc	30,6	;volatile
  8241  0655  2E93               	goto	i1l2247
  8242  0656                     i1l2217:	
  8243                           ;I2C2.c: 161: {
  8244                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  8245                           
  8246  0656  081C               	movf	28,w	;volatile
  8247  0657  3901               	andlw	1
  8248  0658  00F0               	movwf	??_I2C2_Interrupt
  8249  0659  0E1D               	swapf	29,w	;volatile
  8250  065A  3901               	andlw	1
  8251  065B  0470               	iorwf	??_I2C2_Interrupt,w
  8252  065C  1D03               	btfss	3,2
  8253  065D  2E56               	goto	i1l2217
  8254  065E  2E7F               	goto	L7
  8255  065F                     i1l2225:	
  8256                           ;I2C2.c: 166: }
  8257                           ;I2C2.c: 167: }
  8258                           
  8259                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  8260                           
  8261                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  8262                           
  8263                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  8264                           
  8265                           
  8266                           ;I2C2.c: 168: else
  8267                           ;I2C2.c: 169: {
  8268                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  8269  065F  0819               	movf	25,w	;volatile
  8270  0660  00F0               	movwf	??_I2C2_Interrupt
  8271  0661  0021               	movlb	1	; select bank1
  8272  0662  0850               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  8273  0663  0086               	movwf	6
  8274  0664  0187               	clrf	7
  8275  0665  0870               	movf	??_I2C2_Interrupt,w
  8276  0666  0081               	movwf	1
  8277                           
  8278                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  8279  0667  3001               	movlw	1
  8280  0668  00F0               	movwf	??_I2C2_Interrupt
  8281  0669  0870               	movf	??_I2C2_Interrupt,w
  8282  066A  07D0               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  8283  066B  2E91               	goto	i1l2245
  8284  066C                     i1l532:	
  8285                           ;I2C2.c: 173: }
  8286                           ;I2C2.c: 174: }
  8287                           
  8288                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  8289                           
  8290                           
  8291                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  8292  066C  1A9C               	btfsc	28,5	;volatile
  8293  066D  2E93               	goto	i1l2247
  8294                           
  8295                           ;I2C2.c: 176: {
  8296                           ;I2C2.c: 177: SSP2BUF;
  8297  066E  0819               	movf	25,w	;volatile
  8298                           
  8299                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  8300  066F  1D1C               	btfss	28,2	;volatile
  8301  0670  2E8C               	goto	i1l2243
  8302                           
  8303                           ;I2C2.c: 180: {
  8304                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  8305  0671  30BF               	movlw	(low (_I2C2_Config| 0))& (0+255)
  8306  0672  00F0               	movwf	??_I2C2_Interrupt
  8307  0673  0870               	movf	??_I2C2_Interrupt,w
  8308  0674  0021               	movlb	1	; select bank1
  8309  0675  00CF               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  8310  0676                     i1l2237:	
  8311                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  8312                           
  8313  0676  0024               	movlb	4	; select bank4
  8314  0677  081C               	movf	28,w	;volatile
  8315  0678  3901               	andlw	1
  8316  0679  00F0               	movwf	??_I2C2_Interrupt
  8317  067A  0E1D               	swapf	29,w	;volatile
  8318  067B  3901               	andlw	1
  8319  067C  0470               	iorwf	??_I2C2_Interrupt,w
  8320  067D  1D03               	btfss	3,2
  8321  067E  2E76               	goto	i1l2237
  8322  067F                     L7:	
  8323                           
  8324                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  8325  067F  0021               	movlb	1	; select bank1
  8326  0680  084F               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  8327  0681  0086               	movwf	6
  8328  0682  0187               	clrf	7
  8329  0683  0801               	movf	1,w
  8330  0684  0024               	movlb	4	; select bank4
  8331  0685  0099               	movwf	25	;volatile
  8332                           
  8333                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  8334  0686  3001               	movlw	1
  8335  0687  00F0               	movwf	??_I2C2_Interrupt
  8336  0688  0870               	movf	??_I2C2_Interrupt,w
  8337  0689  0021               	movlb	1	; select bank1
  8338  068A  07CF               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  8339                           
  8340                           ;I2C2.c: 186: }
  8341  068B  2E91               	goto	i1l2245
  8342  068C                     i1l2243:	
  8343                           
  8344                           ;I2C2.c: 187: else
  8345                           ;I2C2.c: 188: {
  8346                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  8347  068C  30C7               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  8348  068D  00F0               	movwf	??_I2C2_Interrupt
  8349  068E  0870               	movf	??_I2C2_Interrupt,w
  8350  068F  0021               	movlb	1	; select bank1
  8351  0690  00D0               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  8352  0691                     i1l2245:	
  8353                           
  8354                           ;I2C2.c: 190: }
  8355                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  8356  0691  0024               	movlb	4	; select bank4
  8357  0692  161D               	bsf	29,4	;volatile
  8358  0693                     i1l2247:	
  8359                           
  8360                           ;I2C2.c: 192: }
  8361                           ;I2C2.c: 193: SSP2IF = 0;
  8362  0693  0020               	movlb	0	; select bank0
  8363  0694  1014               	bcf	20,0	;volatile
  8364  0695                     i1l2249:	
  8365                           
  8366                           ;I2C2.c: 194: }
  8367                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  8368  0695  0021               	movlb	1	; select bank1
  8369  0696  1C94               	btfss	20,1	;volatile
  8370  0697  0008               	return
  8371  0698  0020               	movlb	0	; select bank0
  8372  0699  1C94               	btfss	20,1	;volatile
  8373  069A  0008               	return
  8374                           
  8375                           ;I2C2.c: 197: BCL2IF = 0;
  8376  069B  1094               	bcf	20,1	;volatile
  8377  069C  0008               	return
  8378  069D                     __end_of_I2C2_Interrupt:	
  8379                           
  8380                           	psect	text45
  8381  0D67                     __ptext45:	
  8382 ;; *************** function _Buzzer_Count1ms *****************
  8383 ;; Defined at:
  8384 ;;		line 44 in file "Buzzer.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;		None
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;		None
  8389 ;; Return value:  Size  Location     Type
  8390 ;;                  1    wreg      void 
  8391 ;; Registers used:
  8392 ;;		wreg, status,2, status,0, pclath, cstack
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8398 ;;      Params:         0       0       0       0       0       0
  8399 ;;      Locals:         0       0       0       0       0       0
  8400 ;;      Temps:          0       0       0       0       0       0
  8401 ;;      Totals:         0       0       0       0       0       0
  8402 ;;Total ram usage:        0 bytes
  8403 ;; Hardware stack levels used:    1
  8404 ;; Hardware stack levels required when called:    1
  8405 ;; This function calls:
  8406 ;;		_Buzzer_SetDuty
  8407 ;; This function is called by:
  8408 ;;		_Handler
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           
  8413                           ;psect for function _Buzzer_Count1ms
  8414  0D67                     _Buzzer_Count1ms:	
  8415                           
  8416                           ;Buzzer.c: 46: if(count>0)
  8417                           
  8418                           ;incstack = 0
  8419                           ; Regs used in _Buzzer_Count1ms: [wreg+status,2+status,0+pclath+cstack]
  8420  0D67  0020               	movlb	0	; select bank0
  8421  0D68  085E               	movf	_count,w
  8422  0D69  045F               	iorwf	_count+1,w
  8423  0D6A  1903               	btfsc	3,2
  8424  0D6B  2D77               	goto	i1l2413
  8425                           
  8426                           ;Buzzer.c: 47: {
  8427                           ;Buzzer.c: 48: count--;
  8428  0D6C  3001               	movlw	1
  8429  0D6D  02DE               	subwf	_count,f
  8430  0D6E  3000               	movlw	0
  8431  0D6F  3BDF               	subwfb	_count+1,f
  8432                           
  8433                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  8434  0D70  30FF               	movlw	255
  8435  0D71  00F0               	movwf	Buzzer_SetDuty@duty
  8436  0D72  3001               	movlw	1
  8437  0D73  00F1               	movwf	Buzzer_SetDuty@duty+1
  8438  0D74  318D  25C8         	fcall	_Buzzer_SetDuty
  8439                           
  8440                           ;Buzzer.c: 50: }
  8441  0D76  0008               	return
  8442  0D77                     i1l2413:	
  8443                           
  8444                           ;Buzzer.c: 51: else
  8445                           ;Buzzer.c: 52: {
  8446                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  8447  0D77  3000               	movlw	0
  8448  0D78  00F0               	movwf	Buzzer_SetDuty@duty
  8449  0D79  00F1               	movwf	Buzzer_SetDuty@duty+1
  8450  0D7A  318D  25C8         	fcall	_Buzzer_SetDuty
  8451  0D7C  0008               	return
  8452  0D7D                     __end_of_Buzzer_Count1ms:	
  8453                           
  8454                           	psect	text46
  8455  0DC8                     __ptext46:	
  8456 ;; *************** function _Buzzer_SetDuty *****************
  8457 ;; Defined at:
  8458 ;;		line 31 in file "Buzzer.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  duty            2    0[COMMON] unsigned int 
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  8463 ;; Return value:  Size  Location     Type
  8464 ;;                  1    wreg      void 
  8465 ;; Registers used:
  8466 ;;		wreg, status,2, status,0
  8467 ;; Tracked objects:
  8468 ;;		On entry : 0/0
  8469 ;;		On exit  : 0/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8472 ;;      Params:         2       0       0       0       0       0
  8473 ;;      Locals:         1       0       0       0       0       0
  8474 ;;      Temps:          2       0       0       0       0       0
  8475 ;;      Totals:         5       0       0       0       0       0
  8476 ;;Total ram usage:        5 bytes
  8477 ;; Hardware stack levels used:    1
  8478 ;; This function calls:
  8479 ;;		Nothing
  8480 ;; This function is called by:
  8481 ;;		_Buzzer_Count1ms
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           
  8486                           ;psect for function _Buzzer_SetDuty
  8487  0DC8                     _Buzzer_SetDuty:	
  8488                           
  8489                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  8490                           
  8491                           ;incstack = 0
  8492                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  8493  0DC8  0025               	movlb	5	; select bank5
  8494  0DC9  081A               	movf	26,w	;volatile
  8495  0DCA  39CF               	andlw	207
  8496  0DCB  00F2               	movwf	??_Buzzer_SetDuty
  8497  0DCC  0872               	movf	??_Buzzer_SetDuty,w
  8498  0DCD  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  8499                           
  8500                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  8501  0DCE  0871               	movf	Buzzer_SetDuty@duty+1,w
  8502  0DCF  00F3               	movwf	??_Buzzer_SetDuty+1
  8503  0DD0  0870               	movf	Buzzer_SetDuty@duty,w
  8504  0DD1  00F2               	movwf	??_Buzzer_SetDuty
  8505  0DD2  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8506  0DD3  0CF2               	rrf	??_Buzzer_SetDuty,f
  8507  0DD4  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8508  0DD5  0CF2               	rrf	??_Buzzer_SetDuty,f
  8509  0DD6  0872               	movf	??_Buzzer_SetDuty,w
  8510  0DD7  0098               	movwf	24	;volatile
  8511                           
  8512                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  8513  0DD8  0870               	movf	Buzzer_SetDuty@duty,w
  8514  0DD9  3903               	andlw	3
  8515  0DDA  00F2               	movwf	??_Buzzer_SetDuty
  8516  0DDB  3003               	movlw	3
  8517  0DDC                     u145_25:	
  8518  0DDC  35F2               	lslf	??_Buzzer_SetDuty,f
  8519  0DDD  3EFF               	addlw	-1
  8520  0DDE  1D03               	skipz
  8521  0DDF  2DDC               	goto	u145_25
  8522  0DE0  3572               	lslf	??_Buzzer_SetDuty,w
  8523  0DE1  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  8524  0DE2  009A               	movwf	26	;volatile
  8525  0DE3  0008               	return
  8526  0DE4                     __end_of_Buzzer_SetDuty:	
  8527  007E                     btemp	set	126	;btemp
  8528  007E                     int$flags	set	126
  8529  007E                     wtemp0	set	126


Data Sizes:
    Strings     331
    Constant    70
    Data        90
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      66
    BANK1            80     17      69
    BANK2            80      0      60
    BANK3            80      0      30
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[10]), STR_5(CODE[8]), STR_4(CODE[11]), STR_3(CODE[14]), 
		 -> STR_2(CODE[5]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK1[2]), ConfigReg(BANK0[1]), 

    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_51(CODE[7]), STR_50(CODE[7]), STR_49(CODE[7]), STR_48(CODE[7]), 
		 -> STR_47(CODE[7]), STR_46(CODE[7]), STR_45(CODE[7]), STR_44(CODE[6]), 
		 -> STR_43(CODE[6]), STR_42(CODE[6]), STR_41(CODE[6]), STR_40(CODE[5]), 
		 -> STR_39(CODE[5]), STR_38(CODE[5]), STR_37(CODE[5]), 

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_36(CODE[8]), STR_35(CODE[8]), STR_34(CODE[8]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[7]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[6]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), 

    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[5]), STR_18(CODE[6]), 
		 -> STR_17(CODE[5]), STR_16(CODE[6]), STR_15(CODE[5]), STR_14(CODE[6]), 
		 -> STR_13(CODE[5]), STR_12(CODE[6]), STR_11(CODE[5]), STR_10(CODE[6]), 
		 -> STR_9(CODE[5]), STR_8(CODE[6]), STR_7(CODE[5]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK1[2]), ConfigReg(BANK0[1]), 

    S40$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), 

    S40$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Handler->_Timer1_Count1ms
    _Timer1_Count1ms->i1___lldiv
    i1___lldiv->___lmul
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Count1ms->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___llmod
    _putch->_LCD_WriteData
    ___llmod->___lldiv
    _mTouch_Init->_mTouch_PortInit
    _mTouch_Check->_Buzzer_MiliSecond
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _DAC_WriteVoltage->_I2C_Transmit
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit

Critical Paths under _Handler in BANK0

    _Timer1_Count1ms->i1___lldiv

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6585
                                             48 BANK0      4     4      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                   _DAC_WriteVoltage
                     _LCD_CursorHome
                 _LCD_CursorPosition
                           _LCD_Init
                      _Timer1_GetCPM
                      _Timer1_GetCPS
                 _Timer1_GetCountSum
                   _Timer1_GetMinute
                   _Timer1_GetSecond
                        _Timer1_Init
                  _Timer1_StartCount
                        _Timer6_Init
                       _mTouch_Check
                        _mTouch_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              35    25     10    3170
                                             38 BANK0     10     0     10
                                              0 BANK1     17    17      0
                      _Timer1_GetCPM (ARG)
                      _Timer1_GetCPS (ARG)
                 _Timer1_GetCountSum (ARG)
                   _Timer1_GetMinute (ARG)
                   _Timer1_GetSecond (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     155
                                             17 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     290
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                             28 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     479
                                             14 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                             15 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _mTouch_Check                                         6     6      0     272
                                             16 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2     162
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StartCount                                    0     0      0       0
                 _Timer1_ClearRecord
 ---------------------------------------------------------------------------------
 (2) _Timer1_ClearRecord                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetSecond                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetMinute                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                             14 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPS                                        4     0      4       0
                                             14 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        4     0      4       0
                                             14 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                             18 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                             17 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     263
                                             17 BANK0      3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0     124
                                             17 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0     124
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_WriteVoltage                                     5     3      2    1049
                                             30 BANK0      5     3      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    1459
                                             30 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3     941
                                             22 BANK0      8     5      3
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     446
                                             14 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3     518
                                             19 BANK0      6     3      3
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     238
                                             15 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              1     1      0     831
                                             13 BANK0      1     1      0
                    _Buzzer_Count1ms
                _I2C_CommonInterrupt
                    _Timer1_Count1ms
           _Timer1_DetectAssignCount
                   _Timer6_CheckFlag
           _mTouch_IntervalDecrement
                        _mTouch_Read
 ---------------------------------------------------------------------------------
 (6) _mTouch_Read                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer6_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_DetectAssignCount                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_Count1ms                                      1     1      0     636
                                             13 COMMON     1     1      0
                             ___lmul
                i1_Buzzer_MiliSecond
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (7) i1___lldiv                                           14     6      8     214
                                             12 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (7) i1_Buzzer_MiliSecond                                  2     0      2      74
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     348
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Buzzer_Count1ms                                      0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (7) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C2_Transmit
   _DAC_WriteVoltage
     _I2C_Transmit
       _I2C2_Transmit
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
   _Timer1_GetCPS
   _Timer1_GetCountSum
   _Timer1_GetMinute
   _Timer1_GetSecond
   _Timer1_Init
   _Timer1_StartCount
     _Timer1_ClearRecord
   _Timer6_Init
   _mTouch_Check
     _Buzzer_MiliSecond
   _mTouch_Init
     _mTouch_PortInit
   _printf
     _Timer1_GetCPM (ARG)
     _Timer1_GetCPS (ARG)
     _Timer1_GetCountSum (ARG)
     _Timer1_GetMinute (ARG)
     _Timer1_GetSecond (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Count1ms
     _Buzzer_SetDuty
   _I2C_CommonInterrupt
     _I2C2_Interrupt
   _Timer1_Count1ms
     ___lmul
     i1_Buzzer_MiliSecond
     i1___lldiv
       ___lmul (ARG)
   _Timer1_DetectAssignCount
   _Timer6_CheckFlag
   _mTouch_IntervalDecrement
   _mTouch_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      EF       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     34      42       6       82.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     11      45       8       86.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      1E      12       37.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      EF      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Jun 22 08:44:18 2017

                        _LCD_CursorHome 0CEE                             __CFG_CP$OFF 0000  
                                    l54 0DAA                          I2C2_Transmit@i 0033  
                 ??_I2C_CommonInterrupt 0071                     ___wmul@multiplicand 0030  
                                   l453 07C4                                     l449 0793  
                                   l609 0242                                     l466 0563  
                                   l475 058C                                     l484 05A9  
                                   l581 00DC                                     l565 0083  
                                   l734 0DED                                     l582 0138  
                                   l592 0197                                     l576 00DA  
                                   l579 0101                                     _GIE 005F  
                                   _PR2 001B                                     _PR4 0416  
                       _Buzzer_Count1ms 0D67                            __CFG_CPD$OFF 0000  
                                   _PR6 041D                            __CFG_BORV$LO 0000  
                                   wreg 0009                              _Basic_Init 0D1F  
                          __CFG_LVP$OFF 0000              ??_Timer1_DetectAssignCount 0070  
                                  l2103 0546                                    l2105 0554  
                                  l2201 0DC6                                    l2115 0577  
                                  l3011 06AE                                    l2141 05C6  
                                  l2125 056F                                    l3021 06DC  
                                  l3013 06BC                                    l2143 05CB  
                                  l2127 0573                                    l3111 007E  
                                  l2129 059A                                    l3025 06E7  
                                  l3041 0FEC                                    l2083 07A8  
                                  l2139 05AF                                    l2147 05CE  
                                  l3035 0FC6                                    l3203 01E8  
                                  l3123 00A1                                    l3211 005D  
                                  l2085 07AA                                    l2077 079D  
                                  l2149 05D7                                    l3037 0FD4  
                                  l3045 0FF7                                    l3141 0112  
                                  l3133 00DE                                    l3117 008A  
                                  l2095 07B9                                    l2191 0DA4  
                                  l3119 0094                                    l3209 01EE  
                                  l2099 07BB                                    l2187 0D97  
                                  l2195 0DB0                                    l3171 018B  
                                  l3155 0147                                    l3181 01B6  
                                  l3165 015E                                    l3253 03FB  
                                  l2199 0DC1                                    l3159 0158  
                                  l3193 01CF                                    l3265 0419  
                                  l3195 01D3                                    l3187 01C0  
                                  l3179 01B3                                    l3275 0475  
                                  l3267 041D                                    l3283 0490  
                                  l3259 040C                                    l3277 047E  
                                  l3199 01E0                                    l3279 0487  
                                  l2673 074B                                    l2685 0785  
                                  l2993 0DE7                                    l2987 0CEC  
                     ?_DAC_WriteVoltage 003E                                    STR_1 02AC  
                                  STR_2 03CF                                    STR_3 0289  
                                  STR_4 0297                                    STR_5 02CE  
                                  STR_6 02A2                                    STR_7 03B6  
                                  STR_8 0366                                    STR_9 03BB  
                                  u2015 076B                                    u3027 05E3  
                                  u3037 05FC                                    u3047 0611  
                                  u3057 0626                                    u2515 0F8A  
                                  u3067 0D08                                    u3077 0D90  
                                  u3087 0CF8                                    u2615 06BD  
                                  u3097 0F83                                    u2625 06D1  
                                  u2715 0D85                                    u2635 06DD  
                                  u2555 0DEE                                    u2565 0DF3  
                                  u2805 0181                                    u2665 0FC9  
                                  u2595 06B1                                    _PEIE 005E  
                                  u2685 0FE2                                    u2845 01A6  
                                  u2695 0FED                   Buzzer_MiliSecond@time 002E  
                                  _TMR0 0015                                    _TMR1 0016  
                                  _TMR2 001A                                    _TMR4 0415  
                                  _TMR6 041C                                    _WPUB 020D  
                          __CFG_WRT$OFF 0000                      ??_DAC_WriteVoltage 0040  
                     i1___lldiv@divisor 0020                                    _cnts 00A0  
                                  _main 03D4                                    _mode 005C  
                      __end_of_I2C_Init 0DAD                                    _tcnt 0054  
                                  fsr0h 0005                                    fsr1h 0007  
                                  indf0 0000                                    fsr0l 0004  
                                  indf1 0001                                    fsr1l 0006  
                                  btemp 007E                       i1___lldiv@counter 002C  
                         __CFG_BOREN$ON 0000                         ??_I2C2_Transmit 0030  
                                  start 002B                           __CFG_IESO$OFF 0000  
                       __end_of_Handler 002B                  __end_of_LCD_CursorHome 0CFE  
                         _LCD_WriteData 0F80                           __CFG_MCLRE$ON 0000  
                      ??_I2C2_Interrupt 0070                __end_of_LCD_DisplayClear 0D0E  
                 __size_of_I2C_Transmit 001B                        __end_of_LCD_Init 0649  
                         __CFG_PLLEN$ON 0000                                   ?_main 0070  
                                 STR_10 036C                                   STR_11 03C0  
                                 STR_20 0360                                   STR_12 0372  
                                 STR_21 03B1                                   STR_13 03C5  
                                 STR_14 0378                                   STR_30 0300  
                                 STR_22 0398                                   STR_15 03CA  
                                 STR_31 030E                                   STR_23 0393  
                                 STR_40 038E                                   STR_16 037E  
                                 STR_32 02D6                                   STR_24 03A2  
                                 STR_41 033C                                   STR_17 03A7  
                                 STR_33 031C                                   STR_25 0354  
                         __CFG_WDTE$OFF 0000                                   STR_50 02DD  
                                 STR_42 0342                                   STR_18 035A  
                                 STR_34 02C6                                   STR_26 032A  
                                 STR_51 02E4                                   STR_43 0348  
                                 STR_19 03AC                                   STR_35 02BE  
                                 STR_27 0336                                   STR_44 0330  
                                 STR_36 02B6                                   STR_28 034E  
                                 STR_45 02EB                                   STR_37 0384  
                                 STR_29 0307                                   STR_46 0315  
                                 STR_38 0389                                   STR_47 02F2  
                                 STR_39 039D                                   STR_48 02F9  
                                 STR_49 0323                         __end_of___lldiv 06F0  
                                 _T1CON 0018                         __end_of___llmod 1000  
                                 _T2CON 001C                                   _LATA3 0863  
                                 _LATA4 0864                                   _LATA6 0866  
                                 _T4CON 0417                                   _T6CON 041E  
           __size_of_Timer1_ClearRecord 003C                                   i1l532 066C  
                                 i1l394 0D14                                   i1l395 0D19  
                                 _PORTA 000C                                   _PORTB 000D  
                                 _TRISA 008C                                   _TRISB 008D  
                     I2C2_Transmit@size 002F                     ___lmul@multiplicand 0074  
                         __CFG_PWRTE$ON 0000                          __CFG_FCMEN$OFF 0000  
                    i1___lldiv@dividend 0024                         __end_of_dpowers 026B  
                                 _count 005E                         __end_of_isdigit 0CEE  
                     ??_Timer1_Count1ms 007D                                   _putch 0C81  
                         ??_Buzzer_Init 002E                   __end_of_Timer1_GetCPM 0CD1  
                 __end_of_Timer1_GetCPS 0CDF             __size_of_Timer1_GetCountSum 0011  
                                 status 0003                                   wtemp0 007E  
                     _Buzzer_MiliSecond 0C94                      __size_ofi1___lldiv 0053  
                          _I2C_Transmit 0DAD                      _LCD_CursorPosition 0D7D  
                        ?_LCD_WriteData 0070                      ?_Buzzer_MiliSecond 002E  
                      ??_DAC_Initialize 003E                         ?_LCD_CursorHome 0070  
                       __initialization 002D                            __end_of_main 04A0  
               __end_of_Buzzer_Count1ms 0D7D                      i1___lldiv@quotient 0028  
                   ?_LCD_CursorPosition 0031                     ??_Buzzer_MiliSecond 0030  
                                ??_main 0050                    __end_of_mTouch_Check 0787  
                           ?_Basic_Init 0070                                  _BCL2IE 04A1  
                                _BCL2IF 00A1                        ___llmod@dividend 0040  
                  __size_of_mTouch_Init 0013                    __size_of_mTouch_Read 0025  
                                _CCPR2L 0298                    ??_LCD_CursorPosition 0032  
                                _ANSELA 018C                                  ?_putch 0070  
                                _ANSELB 018D                                  _T1GCON 0019  
                                i1l2303 07D3                                  i1l2217 0656  
                                i1l2225 065F                                  i1l2243 068C  
                                i1l2307 07DD                                  i1l2413 0D77  
                                i1l2245 0691                                  i1l2237 0676  
                                i1l2247 0693                                  i1l2249 0695  
                                i1l2371 070F                                  i1l2383 073A  
                                i1l2369 0701                                  i1l2379 072F  
                                i1l2565 052B                                  i1l1677 0CA7  
                                i1l2591 0E7F                                  i1l2569 0537  
                                i1l2945 0024                                  i1l2937 0012  
                       _mTouch_Interval 00B4                      I2C2_Transmit@i_574 0034  
             __end_of_Buzzer_MiliSecond 0C9E                                  u145_25 0DDC  
                                u165_25 07DE                                  u166_25 07E5  
                                u183_25 0704                                  u185_25 0710  
                                u186_25 0724                                  u187_25 0730  
                                _OSCCON 0099                      I2C2_Transmit@pData 002E  
                                _TMR1IE 0488                                  _TMR1IF 0088  
                             ??_Handler 002D                                  _TMR4IE 0499  
                                _TMR4IF 0099                                  _TMR6IE 049B  
                                _TMR1ON 00C0                                  _TMR6IF 009B  
                                _SSP2IE 04A0                                  _SSP2IF 00A0  
              _mTouch_IntervalDecrement 0D0E                       ?_Timer1_GetMinute 0070  
                     ?_Timer1_GetSecond 0070                         _mTouch_PortInit 0CB6  
                         ??_Timer1_Init 002E                     __end_of_Buzzer_Init 0ECE  
                         ??_Timer6_Init 002E                      ??_Timer1_GetMinute 002E  
                    ??_Timer1_GetSecond 002E                                  ___lmul 07CB  
                                ___wmul 0DE4                               ??___lldiv 0036  
                             ??___llmod 0044                                  _printf 0058  
                     __end_ofi1___lldiv 0743                        I2C_Transmit@I2Cx 003C  
                             ??_isdigit 002E                               ?_I2C_Init 0033  
                                putch@c 0031                        I2C_Transmit@size 0038  
               __end_of__initialization 0054                               ?_LCD_Init 0070  
                       ??_LCD_WriteData 002E                       ?_Timer6_CheckFlag 0070  
          __size_ofi1_Buzzer_MiliSecond 000A                              _VoltageReg 00D2  
                    ??_Timer6_CheckFlag 0070                      Buzzer_SetDuty@duty 0070  
                        __pcstackCOMMON 0070                     __size_of_Basic_Init 0011  
                          __pidataBANK2 0F44                            __pidataBANK3 0E00  
                      ?_Buzzer_Count1ms 0070                           __end_of_putch 0C8A  
                   __end_of_Timer1_Init 0E5F                     __end_of_Timer6_Init 0D54  
             Buzzer_SetDuty@CCP2CON_Pre 0074                              ??_I2C_Init 0036  
                               ??_putch 0031                 __end_of_mTouch_PortInit 0CC3  
                            __pbssBANK0 0054                              __pbssBANK1 00A0  
            __size_of_Buzzer_MiliSecond 000A                             _Buzzer_Init 0EA6  
                            ??_LCD_Init 0032                 __size_of_Buzzer_SetDuty 001C  
                         _DAC_DataTable 026B                            I2C_Init@I2Cx 0038  
           __end_of_I2C_CommonInterrupt 0C70                            I2C_Init@mode 0034  
                            __pmaintext 03D4                                 ?___lmul 0070  
                               ?___wmul 002E               __size_of_DAC_WriteVoltage 003A  
                            __pintentry 0004                   __size_of_mTouch_Check 0044  
                               _CCP2CON 029A                       ?_LCD_DisplayClear 0070  
                        ___lmul@product 0078                                 _APFCON0 011D  
                               _APFCON1 011E                                 _CCPTMRS 029E  
                               ?_printf 0046                         _Timer1_Count1ms 04A0  
                    ??_LCD_DisplayClear 0031                                 _CPSCON0 001E  
                               _CPSCON1 001F                                 _SSP2ADD 021A  
                               _SSP2BUF 0219                                 _SSP2MSK 021B  
                   I2C2_Transmit@result 0035                        ??_LCD_CursorHome 0031  
                               _Handler 0004                      mTouch_Read@channel 0060  
                          _mTouch_Check 0743                   __end_of_I2C2_Transmit 05DA  
                           _Timer1_Init 0E3E                             _Timer6_Init 0D41  
     __size_of_Timer1_DetectAssignCount 0022                         __size_of___lmul 002F  
             ?_Timer1_DetectAssignCount 0070                                 ___lldiv 069D  
                       __size_of___wmul 001C                                 ___llmod 0FBD  
                       __CFG_STVREN$OFF 0000              __end_of_Timer1_ClearRecord 0F44  
                               __ptext1 0058                                 __ptext2 0C81  
                               __ptext3 0CDF                                 __ptext4 0DE4  
                               __ptext5 0FBD                                 __ptext6 069D  
                               __ptext7 0D54                                 __ptext8 0CB6  
                               __ptext9 0743                         __size_of_printf 01EB  
                               _dpowers 0243                                 _isdigit 0CDF  
                          ??_Basic_Init 002E              ??_mTouch_IntervalDecrement 0070  
                               clrloop0 0C7C              __end_of_Timer1_GetCountSum 0D41  
                  end_of_initialization 0054                        ?_mTouch_PortInit 0070  
                               init_ram 07FA                                 initloop 07FB  
                         ?_I2C2_PinInit 0070                             _I2C2_Config 00BF  
                       ___lldiv@divisor 002E                           ?_I2C2_Setting 002F  
                       ___lldiv@counter 003B                       I2C_Transmit@pData 0037  
               __end_of_Timer1_Count1ms 0542                                 printf@c 00E4  
                               printf@f 0046                      __end_of_Basic_Init 0D30  
                      _DAC_VoltageTable 013E                            __pstringtext 0243  
                __size_of_Timer1_GetCPM 000E                  __size_of_Timer1_GetCPS 000E  
             __size_of_Timer1_GetMinute 0003               __size_of_Timer1_GetSecond 0003  
                   i1_Buzzer_MiliSecond 0C8A                        __CFG_FOSC$INTOSC 0000  
                         ??_mTouch_Init 002F                           ??_mTouch_Read 0070  
               __size_of_I2C2_Interrupt 0054                       __size_of_I2C_Init 0019  
                             i1___lldiv 06F0             __size_of_LCD_CursorPosition 0017  
                        ??_I2C2_PinInit 002E                          _Buzzer_SetDuty 0DC8  
                  ?i1_Buzzer_MiliSecond 0070                             printf@width 00E2  
                        ??_I2C2_Setting 0031                           _H7826_01_Gain 01A0  
                     __size_of_LCD_Init 006F                       _Timer1_StartCount 0C76  
                      _DAC_WriteVoltage 0ECE                      ?_Timer1_StartCount 0070  
                        __end_of___lmul 07FA                          __end_of___wmul 0E00  
                             _ConfigReg 0061               __size_of_Timer6_CheckFlag 000B  
                   ??_Timer1_StartCount 002E                 __size_of_DAC_Initialize 0020  
                        __end_of_printf 0243                     start_initialization 002D  
                            ?i1___lldiv 0020                  __end_of_Buzzer_SetDuty 0DE4  
                          ?_Buzzer_Init 0070                     __end_of_mTouch_Init 0D67  
                   __end_of_mTouch_Read 0EA6                           _Timer1_GetCPM 0CC3  
                         _Timer1_GetCPS 0CD1                   ??i1_Buzzer_MiliSecond 0072  
                   I2C2_Setting@address 0032                         ___llmod@divisor 003C  
             __end_of_Timer1_StartCount 0C7B                         ___llmod@counter 0045  
                  LCD_CursorPosition@tx 0033                    LCD_CursorPosition@ty 0031  
                 __end_of_LCD_WriteData 0FBD                        ?_Timer1_Count1ms 0070  
                              ??___lmul 0078                                ??___wmul 0032  
                           __pdataBANK2 0120                             __pdataBANK3 01A0  
                              ??_printf 00D4                __size_of_Buzzer_Count1ms 0016  
                             ___latbits 0001                           __pcstackBANK0 0020  
                         __pcstackBANK1 00D4        __end_of_mTouch_IntervalDecrement 0D1F  
             __size_of_LCD_DisplayClear 0010                         ?_Buzzer_SetDuty 0070  
                        ?_Timer1_GetCPM 002E                          ?_Timer1_GetCPS 002E  
      __end_of_Timer1_DetectAssignCount 0E81                         I2C_Init@address 0033  
                              ?_Handler 0070                           ?_I2C_Transmit 0036  
                         I2C_Init@Speed 0035                            ?_Timer1_Init 0070  
                 DAC_WriteVoltage@volue 003E                            ?_Timer6_Init 0070  
                              ?___lldiv 002E                                ?___llmod 003C  
          __size_of_I2C_CommonInterrupt 0003                        _Timer1_GetMinute 0C70  
                      _Timer1_GetSecond 0C73                    __end_of_I2C2_PinInit 0CB6  
Timer1_DetectAssignCount@PreviousTimer1 00BD                                ?_isdigit 0070  
                              _I2C_Init 0D94                    __end_of_I2C2_Setting 07CB  
                        _I2C2_Interrupt 0649                              _H7826_Gain 0120  
                           _mTouch_Init 0D54                             _mTouch_Read 0E81  
                           ??i1___lldiv 007C                      _Timer1_ClearRecord 0F08  
                        __size_of_putch 0009                                _LCD_Init 05DA  
                        ___wmul@product 0032                                _CPS_Data 00B7  
                        ??_I2C_Transmit 0039                     ?_Timer1_ClearRecord 0070  
            __size_of_Timer1_StartCount 0005                               clear_ram0 0C7B  
                    _Timer1_GetCountSum 0D30                    I2C2_Transmit@address 0032  
                              _SSP2CON1 021D                                _SSP2CON2 021E  
                              _SSP2STAT 021C                     ?_Timer1_GetCountSum 002E  
                      _Timer6_CheckFlag 0C9E                       ___wmul@multiplier 002E  
                      mTouch_Check@chan 0035                          _DAC_Initialize 0E1E  
                  ??_Timer1_ClearRecord 002E                  __end_of_I2C2_Interrupt 069D  
                            printf@flag 00E1                              printf@prec 00DA  
                __size_of_I2C2_Transmit 0098                         ??_Timer1_GetCPM 0032  
                       ??_Timer1_GetCPS 0032                __end_of_DAC_WriteVoltage 0F08  
                           _CPS_PreData 00BA                       ___lmul@multiplier 0070  
                     ??_Buzzer_Count1ms 0075                    ??_Timer1_GetCountSum 0032  
                      __size_of_Handler 0027                    __size_of_Buzzer_Init 0028  
              _Timer1_DetectAssignCount 0E5F                __size_of_mTouch_PortInit 000D  
     __size_of_mTouch_IntervalDecrement 0011               ?_mTouch_IntervalDecrement 0070  
               __size_of_LCD_CursorHome 0010                  __end_of_DAC_Initialize 0E3E  
                      __size_of___lldiv 0053                        __size_of___llmod 0043  
                    LCD_WriteData@point 0030                             _isdigit$819 002E  
                       ?_I2C2_Interrupt 0070                        __size_of_isdigit 000F  
            __end_of_LCD_CursorPosition 0D94                                __ptext10 0C94  
                              __ptext11 0D41                                __ptext20 05DA  
                              __ptext12 0C76                                __ptext21 0CFE  
                              __ptext13 0F08                                __ptext30 0787  
                              __ptext22 0D7D                                __ptext14 0E3E  
                              __ptext31 0CA9                                __ptext23 0CEE  
                              __ptext15 0C73                                __ptext40 06F0  
                              __ptext32 0EA6                                __ptext24 0F80  
                              __ptext16 0C70                                __ptext41 0C8A  
                              __ptext33 0D1F                                __ptext25 0ECE  
                              __ptext17 0D30                                __ptext42 07CB  
                              __ptext26 0E1E                                __ptext18 0CD1  
                              __ptext43 0C6D                                __ptext35 0E81  
                              __ptext27 0DAD                                __ptext19 0CC3  
                              __ptext44 0649                                __ptext36 0D0E  
                              __ptext28 0542                                __ptext45 0D67  
                              __ptext37 0C9E                                __ptext29 0D94  
                              __ptext46 0DC8                                __ptext38 0E5F  
                              __ptext39 04A0                        _LCD_DisplayClear 0CFE  
                          _SSP2CON1bits 021D                            _SSP2CON2bits 021E  
                 __end_of_DAC_DataTable 0289                           __size_of_main 00CC  
                         _I2C2_Transmit 0542                    __size_of_Timer1_Init 0021  
                              int$flags 007E                   __size_of_I2C2_PinInit 000D  
                   I2C_Transmit@address 0036                    __size_of_Timer6_Init 0013  
                       ?_DAC_Initialize 0070                               printf@val 00DC  
                 __size_of_I2C2_Setting 0044                            _SSP2STATbits 021C  
                  __end_of_I2C_Transmit 0DC8                       I2C2_Setting@Speed 0030  
                      ??_Buzzer_SetDuty 0072             __end_ofi1_Buzzer_MiliSecond 0C94  
                              isdigit@c 002F                 i1Buzzer_MiliSecond@time 0070  
                              intlevel1 0000                     _I2C_CommonInterrupt 0C6D  
                      ___lldiv@dividend 0032                __end_of_Timer1_GetMinute 0C73  
              __end_of_Timer1_GetSecond 0C76                       __CFG_CLKOUTEN$OFF 0000  
                          _I2C2_PinInit 0CA9                           ?_mTouch_Check 0070  
                        ?_I2C2_Transmit 002E                            _I2C2_Setting 0787  
                              printf@ap 00E0                      I2C_Transmit@result 003D  
                     ??_mTouch_PortInit 002E                        I2C2_Setting@mode 002F  
                  ?_I2C_CommonInterrupt 0070                              _OPTION_REG 0095  
              __size_of_Timer1_Count1ms 00A2                        ___lldiv@quotient 0037  
                          ?_mTouch_Init 0070                            ?_mTouch_Read 0070  
                __size_of_LCD_WriteData 003D                __end_of_Timer6_CheckFlag 0CA9  
                        ??_mTouch_Check 0030  
