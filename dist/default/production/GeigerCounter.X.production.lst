

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon May 22 12:47:05 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 1.41
    32                           ; Generated 25/01/2017 GMT
    33                           ; 
    34                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1827 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011D                     	;# 
   125  011E                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019C                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020C                     	;# 
   149  020D                     	;# 
   150  0211                     	;# 
   151  0211                     	;# 
   152  0212                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0216                     	;# 
   162  0216                     	;# 
   163  0217                     	;# 
   164  0217                     	;# 
   165  0219                     	;# 
   166  021A                     	;# 
   167  021B                     	;# 
   168  021C                     	;# 
   169  021D                     	;# 
   170  021E                     	;# 
   171  021F                     	;# 
   172  0291                     	;# 
   173  0291                     	;# 
   174  0292                     	;# 
   175  0293                     	;# 
   176  0294                     	;# 
   177  0295                     	;# 
   178  0295                     	;# 
   179  0296                     	;# 
   180  0298                     	;# 
   181  0298                     	;# 
   182  0299                     	;# 
   183  029A                     	;# 
   184  029B                     	;# 
   185  029C                     	;# 
   186  029C                     	;# 
   187  029D                     	;# 
   188  029E                     	;# 
   189  029E                     	;# 
   190  0311                     	;# 
   191  0311                     	;# 
   192  0312                     	;# 
   193  0313                     	;# 
   194  0318                     	;# 
   195  0318                     	;# 
   196  0319                     	;# 
   197  031A                     	;# 
   198  0394                     	;# 
   199  0395                     	;# 
   200  0396                     	;# 
   201  039A                     	;# 
   202  039C                     	;# 
   203  039D                     	;# 
   204  039E                     	;# 
   205  039F                     	;# 
   206  0415                     	;# 
   207  0416                     	;# 
   208  0417                     	;# 
   209  041C                     	;# 
   210  041D                     	;# 
   211  041E                     	;# 
   212  0FE4                     	;# 
   213  0FE5                     	;# 
   214  0FE6                     	;# 
   215  0FE7                     	;# 
   216  0FE8                     	;# 
   217  0FE9                     	;# 
   218  0FEA                     	;# 
   219  0FEB                     	;# 
   220  0FED                     	;# 
   221  0FEE                     	;# 
   222  0FEF                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  010C                     	;# 
   270  010D                     	;# 
   271  0111                     	;# 
   272  0112                     	;# 
   273  0113                     	;# 
   274  0114                     	;# 
   275  0115                     	;# 
   276  0116                     	;# 
   277  0117                     	;# 
   278  0118                     	;# 
   279  0119                     	;# 
   280  011A                     	;# 
   281  011B                     	;# 
   282  011D                     	;# 
   283  011E                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0191                     	;# 
   287  0191                     	;# 
   288  0192                     	;# 
   289  0193                     	;# 
   290  0193                     	;# 
   291  0193                     	;# 
   292  0194                     	;# 
   293  0195                     	;# 
   294  0196                     	;# 
   295  0199                     	;# 
   296  019A                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019C                     	;# 
   302  019C                     	;# 
   303  019D                     	;# 
   304  019E                     	;# 
   305  019F                     	;# 
   306  020C                     	;# 
   307  020D                     	;# 
   308  0211                     	;# 
   309  0211                     	;# 
   310  0212                     	;# 
   311  0212                     	;# 
   312  0213                     	;# 
   313  0213                     	;# 
   314  0214                     	;# 
   315  0214                     	;# 
   316  0215                     	;# 
   317  0215                     	;# 
   318  0215                     	;# 
   319  0216                     	;# 
   320  0216                     	;# 
   321  0217                     	;# 
   322  0217                     	;# 
   323  0219                     	;# 
   324  021A                     	;# 
   325  021B                     	;# 
   326  021C                     	;# 
   327  021D                     	;# 
   328  021E                     	;# 
   329  021F                     	;# 
   330  0291                     	;# 
   331  0291                     	;# 
   332  0292                     	;# 
   333  0293                     	;# 
   334  0294                     	;# 
   335  0295                     	;# 
   336  0295                     	;# 
   337  0296                     	;# 
   338  0298                     	;# 
   339  0298                     	;# 
   340  0299                     	;# 
   341  029A                     	;# 
   342  029B                     	;# 
   343  029C                     	;# 
   344  029C                     	;# 
   345  029D                     	;# 
   346  029E                     	;# 
   347  029E                     	;# 
   348  0311                     	;# 
   349  0311                     	;# 
   350  0312                     	;# 
   351  0313                     	;# 
   352  0318                     	;# 
   353  0318                     	;# 
   354  0319                     	;# 
   355  031A                     	;# 
   356  0394                     	;# 
   357  0395                     	;# 
   358  0396                     	;# 
   359  039A                     	;# 
   360  039C                     	;# 
   361  039D                     	;# 
   362  039E                     	;# 
   363  039F                     	;# 
   364  0415                     	;# 
   365  0416                     	;# 
   366  0417                     	;# 
   367  041C                     	;# 
   368  041D                     	;# 
   369  041E                     	;# 
   370  0FE4                     	;# 
   371  0FE5                     	;# 
   372  0FE6                     	;# 
   373  0FE7                     	;# 
   374  0FE8                     	;# 
   375  0FE9                     	;# 
   376  0FEA                     	;# 
   377  0FEB                     	;# 
   378  0FED                     	;# 
   379  0FEE                     	;# 
   380  0FEF                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0094                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009A                     	;# 
   422  009B                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  010C                     	;# 
   428  010D                     	;# 
   429  0111                     	;# 
   430  0112                     	;# 
   431  0113                     	;# 
   432  0114                     	;# 
   433  0115                     	;# 
   434  0116                     	;# 
   435  0117                     	;# 
   436  0118                     	;# 
   437  0119                     	;# 
   438  011A                     	;# 
   439  011B                     	;# 
   440  011D                     	;# 
   441  011E                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0191                     	;# 
   445  0191                     	;# 
   446  0192                     	;# 
   447  0193                     	;# 
   448  0193                     	;# 
   449  0193                     	;# 
   450  0194                     	;# 
   451  0195                     	;# 
   452  0196                     	;# 
   453  0199                     	;# 
   454  019A                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019C                     	;# 
   460  019C                     	;# 
   461  019D                     	;# 
   462  019E                     	;# 
   463  019F                     	;# 
   464  020C                     	;# 
   465  020D                     	;# 
   466  0211                     	;# 
   467  0211                     	;# 
   468  0212                     	;# 
   469  0212                     	;# 
   470  0213                     	;# 
   471  0213                     	;# 
   472  0214                     	;# 
   473  0214                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0216                     	;# 
   478  0216                     	;# 
   479  0217                     	;# 
   480  0217                     	;# 
   481  0219                     	;# 
   482  021A                     	;# 
   483  021B                     	;# 
   484  021C                     	;# 
   485  021D                     	;# 
   486  021E                     	;# 
   487  021F                     	;# 
   488  0291                     	;# 
   489  0291                     	;# 
   490  0292                     	;# 
   491  0293                     	;# 
   492  0294                     	;# 
   493  0295                     	;# 
   494  0295                     	;# 
   495  0296                     	;# 
   496  0298                     	;# 
   497  0298                     	;# 
   498  0299                     	;# 
   499  029A                     	;# 
   500  029B                     	;# 
   501  029C                     	;# 
   502  029C                     	;# 
   503  029D                     	;# 
   504  029E                     	;# 
   505  029E                     	;# 
   506  0311                     	;# 
   507  0311                     	;# 
   508  0312                     	;# 
   509  0313                     	;# 
   510  0318                     	;# 
   511  0318                     	;# 
   512  0319                     	;# 
   513  031A                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  039A                     	;# 
   518  039C                     	;# 
   519  039D                     	;# 
   520  039E                     	;# 
   521  039F                     	;# 
   522  0415                     	;# 
   523  0416                     	;# 
   524  0417                     	;# 
   525  041C                     	;# 
   526  041D                     	;# 
   527  041E                     	;# 
   528  0FE4                     	;# 
   529  0FE5                     	;# 
   530  0FE6                     	;# 
   531  0FE7                     	;# 
   532  0FE8                     	;# 
   533  0FE9                     	;# 
   534  0FEA                     	;# 
   535  0FEB                     	;# 
   536  0FED                     	;# 
   537  0FEE                     	;# 
   538  0FEF                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  000D                     	;# 
   553  0011                     	;# 
   554  0012                     	;# 
   555  0013                     	;# 
   556  0014                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0016                     	;# 
   560  0017                     	;# 
   561  0018                     	;# 
   562  0019                     	;# 
   563  001A                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  001E                     	;# 
   567  001F                     	;# 
   568  008C                     	;# 
   569  008D                     	;# 
   570  0091                     	;# 
   571  0092                     	;# 
   572  0093                     	;# 
   573  0094                     	;# 
   574  0095                     	;# 
   575  0096                     	;# 
   576  0097                     	;# 
   577  0098                     	;# 
   578  0099                     	;# 
   579  009A                     	;# 
   580  009B                     	;# 
   581  009B                     	;# 
   582  009C                     	;# 
   583  009D                     	;# 
   584  009E                     	;# 
   585  010C                     	;# 
   586  010D                     	;# 
   587  0111                     	;# 
   588  0112                     	;# 
   589  0113                     	;# 
   590  0114                     	;# 
   591  0115                     	;# 
   592  0116                     	;# 
   593  0117                     	;# 
   594  0118                     	;# 
   595  0119                     	;# 
   596  011A                     	;# 
   597  011B                     	;# 
   598  011D                     	;# 
   599  011E                     	;# 
   600  018C                     	;# 
   601  018D                     	;# 
   602  0191                     	;# 
   603  0191                     	;# 
   604  0192                     	;# 
   605  0193                     	;# 
   606  0193                     	;# 
   607  0193                     	;# 
   608  0194                     	;# 
   609  0195                     	;# 
   610  0196                     	;# 
   611  0199                     	;# 
   612  019A                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019C                     	;# 
   618  019C                     	;# 
   619  019D                     	;# 
   620  019E                     	;# 
   621  019F                     	;# 
   622  020C                     	;# 
   623  020D                     	;# 
   624  0211                     	;# 
   625  0211                     	;# 
   626  0212                     	;# 
   627  0212                     	;# 
   628  0213                     	;# 
   629  0213                     	;# 
   630  0214                     	;# 
   631  0214                     	;# 
   632  0215                     	;# 
   633  0215                     	;# 
   634  0215                     	;# 
   635  0216                     	;# 
   636  0216                     	;# 
   637  0217                     	;# 
   638  0217                     	;# 
   639  0219                     	;# 
   640  021A                     	;# 
   641  021B                     	;# 
   642  021C                     	;# 
   643  021D                     	;# 
   644  021E                     	;# 
   645  021F                     	;# 
   646  0291                     	;# 
   647  0291                     	;# 
   648  0292                     	;# 
   649  0293                     	;# 
   650  0294                     	;# 
   651  0295                     	;# 
   652  0295                     	;# 
   653  0296                     	;# 
   654  0298                     	;# 
   655  0298                     	;# 
   656  0299                     	;# 
   657  029A                     	;# 
   658  029B                     	;# 
   659  029C                     	;# 
   660  029C                     	;# 
   661  029D                     	;# 
   662  029E                     	;# 
   663  029E                     	;# 
   664  0311                     	;# 
   665  0311                     	;# 
   666  0312                     	;# 
   667  0313                     	;# 
   668  0318                     	;# 
   669  0318                     	;# 
   670  0319                     	;# 
   671  031A                     	;# 
   672  0394                     	;# 
   673  0395                     	;# 
   674  0396                     	;# 
   675  039A                     	;# 
   676  039C                     	;# 
   677  039D                     	;# 
   678  039E                     	;# 
   679  039F                     	;# 
   680  0415                     	;# 
   681  0416                     	;# 
   682  0417                     	;# 
   683  041C                     	;# 
   684  041D                     	;# 
   685  041E                     	;# 
   686  0FE4                     	;# 
   687  0FE5                     	;# 
   688  0FE6                     	;# 
   689  0FE7                     	;# 
   690  0FE8                     	;# 
   691  0FE9                     	;# 
   692  0FEA                     	;# 
   693  0FEB                     	;# 
   694  0FED                     	;# 
   695  0FEE                     	;# 
   696  0FEF                     	;# 
   697                           
   698                           	psect	stringtext
   699  0344                     __pstringtext:	
   700  0344                     _dpowers:	
   701  0344  3401               	retlw	1
   702  0345  3400               	retlw	0
   703  0346  340A               	retlw	10
   704  0347  3400               	retlw	0
   705  0348  3464               	retlw	100
   706  0349  3400               	retlw	0
   707  034A  34E8               	retlw	232
   708  034B  3403               	retlw	3
   709  034C  3410               	retlw	16
   710  034D  3427               	retlw	39
   711  034E                     __end_of_dpowers:	
   712  0016                     _TMR1	set	22
   713  000C                     _PORTA	set	12
   714  0019                     _T1GCON	set	25
   715  0018                     _T1CON	set	24
   716  000D                     _PORTB	set	13
   717  0099                     _TMR4IF	set	153
   718  005F                     _GIE	set	95
   719  005E                     _PEIE	set	94
   720  0088                     _TMR1IF	set	136
   721  00C0                     _TMR1ON	set	192
   722  0063                     _RA3	set	99
   723  0064                     _RA4	set	100
   724  008C                     _TRISA	set	140
   725  0099                     _OSCCON	set	153
   726  008D                     _TRISB	set	141
   727  0499                     _TMR4IE	set	1177
   728  0488                     _TMR1IE	set	1160
   729  011E                     _APFCON1	set	286
   730  011D                     _APFCON0	set	285
   731  0866                     _LATA6	set	2150
   732  018C                     _ANSELA	set	396
   733  018D                     _ANSELB	set	397
   734  020D                     _WPUB	set	525
   735  0417                     _T4CON	set	1047
   736  0415                     _TMR4	set	1045
   737  0416                     _PR4	set	1046
   738  034E                     STR_1:	
   739  034E  3425               	retlw	37	;'%'
   740  034F  3475               	retlw	117	;'u'
   741  0350  346C               	retlw	108	;'l'
   742  0351  3420               	retlw	32	;' '
   743  0352  3425               	retlw	37	;'%'
   744  0353  3464               	retlw	100	;'d'
   745  0354  3400               	retlw	0
   746                           
   747                           ; #config settings
   748  0000                     
   749                           	psect	cinit
   750  0022                     start_initialization:	
   751  0022                     __initialization:	
   752                           
   753                           ; Clear objects allocated to BANK0
   754  0022  3041               	movlw	low __pbssBANK0
   755  0023  0084               	movwf	4
   756  0024  3000               	movlw	high __pbssBANK0
   757  0025  0085               	movwf	5
   758  0026  301A               	movlw	26
   759  0027  3183  23A9         	fcall	clear_ram0
   760  0029                     end_of_initialization:	
   761                           ;End of C runtime variable initialization code
   762                           
   763  0029                     __end_of__initialization:	
   764  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   765  002A  0020               	movlb	0
   766  002B  3182  2AB5         	ljmp	_main	;jump to C main() function
   767                           
   768                           	psect	bssBANK0
   769  0041                     __pbssBANK0:	
   770  0041                     _timecount:	
   771  0041                     	ds	4
   772  0045                     _AverageCPM:	
   773  0045                     	ds	4
   774  0049                     _Num_of_Detect:	
   775  0049                     	ds	4
   776  004D                     _SigmaCPM:	
   777  004D                     	ds	4
   778  0051                     _SigmaCount:	
   779  0051                     	ds	4
   780  0055                     _errno:	
   781  0055                     	ds	2
   782  0057                     Timer1_DetectAssignCount@PreviousTimer1:	
   783  0057                     	ds	2
   784  0059                     _RenewalCPM:	
   785  0059                     	ds	2
   786                           
   787                           	psect	clrtext
   788  03A9                     clear_ram0:	
   789                           ;	Called with FSR0 containing the base address, and
   790                           ;	WREG with the size to clear
   791                           
   792  03A9  0064               	clrwdt	;clear the watchdog before getting into this loop
   793  03AA                     clrloop0:	
   794  03AA  0180               	clrf	0	;clear RAM location pointed to by FSR
   795  03AB  3101               	addfsr 0,1
   796  03AC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   797  03AD  2BAA               	goto	clrloop0	;have we reached the end yet?
   798  03AE  3400               	retlw	0	;all done for this memory range, return
   799                           
   800                           	psect	cstackCOMMON
   801  0070                     __pcstackCOMMON:	
   802  0070                     ?_LCD_DisplayClear:	
   803  0070                     ?_Basic_Init:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ?_LCD_WriteData:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_LCD_Init:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_putch:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?_LCD_CursorHome:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_Timer1_Init:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_Timer1_Count200us:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ??_Timer1_Count200us:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_Timer1_DetectAssignCount:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_Timer4_Init:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_Timer4_Handler:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ??_Timer4_Handler:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_main:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_Handler:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?___lldiv:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ___lldiv@divisor:	
   849                           ; 4 bytes @ 0x0
   850                           
   851                           
   852                           ; 4 bytes @ 0x0
   853  0070                     	ds	4
   854  0074                     ___lldiv@dividend:	
   855                           
   856                           ; 4 bytes @ 0x4
   857  0074                     	ds	4
   858  0078                     ??___lldiv:	
   859                           
   860                           ; 1 bytes @ 0x8
   861  0078                     	ds	1
   862  0079                     ___lldiv@quotient:	
   863                           
   864                           ; 4 bytes @ 0x9
   865  0079                     	ds	4
   866  007D                     ___lldiv@counter:	
   867                           
   868                           ; 1 bytes @ 0xD
   869  007D                     	ds	1
   870  007E                     ??_Timer1_DetectAssignCount:	
   871                           
   872                           	psect	cstackBANK0
   873  0020                     __pcstackBANK0:	
   874                           ; 1 bytes @ 0xE
   875                           
   876  0020                     ??_Handler:	
   877                           
   878                           ; 1 bytes @ 0x0
   879  0020                     	ds	1
   880  0021                     ??_Basic_Init:	
   881  0021                     ??_LCD_WriteData:	
   882                           ; 1 bytes @ 0x1
   883                           
   884  0021                     ??_Timer1_Init:	
   885                           ; 1 bytes @ 0x1
   886                           
   887  0021                     ??_Timer4_Init:	
   888                           ; 1 bytes @ 0x1
   889                           
   890  0021                     ?_Timer1_GetCPM:	
   891                           ; 1 bytes @ 0x1
   892                           
   893  0021                     ?___lwdiv:	
   894                           ; 2 bytes @ 0x1
   895                           
   896  0021                     ?_Timer1_GetCountSum:	
   897                           ; 2 bytes @ 0x1
   898                           
   899  0021                     ___lwdiv@divisor:	
   900                           ; 4 bytes @ 0x1
   901                           
   902                           
   903                           ; 2 bytes @ 0x1
   904  0021                     	ds	2
   905  0023                     ??_Timer1_GetCPM:	
   906  0023                     LCD_WriteData@point:	
   907                           ; 1 bytes @ 0x3
   908                           
   909  0023                     ___lwdiv@dividend:	
   910                           ; 1 bytes @ 0x3
   911                           
   912                           
   913                           ; 2 bytes @ 0x3
   914  0023                     	ds	1
   915  0024                     ??_LCD_DisplayClear:	
   916  0024                     ??_putch:	
   917                           ; 1 bytes @ 0x4
   918                           
   919  0024                     ??_LCD_CursorHome:	
   920                           ; 1 bytes @ 0x4
   921                           
   922  0024                     putch@c:	
   923                           ; 1 bytes @ 0x4
   924                           
   925                           
   926                           ; 1 bytes @ 0x4
   927  0024                     	ds	1
   928  0025                     ??_LCD_Init:	
   929  0025                     ??_Timer1_GetCountSum:	
   930                           ; 1 bytes @ 0x5
   931                           
   932  0025                     ??___lwdiv:	
   933                           ; 1 bytes @ 0x5
   934                           
   935                           
   936                           ; 1 bytes @ 0x5
   937  0025                     	ds	1
   938  0026                     ___lwdiv@quotient:	
   939                           
   940                           ; 2 bytes @ 0x6
   941  0026                     	ds	2
   942  0028                     ___lwdiv@counter:	
   943                           
   944                           ; 1 bytes @ 0x8
   945  0028                     	ds	1
   946  0029                     ?___lwmod:	
   947  0029                     ___lwmod@divisor:	
   948                           ; 2 bytes @ 0x9
   949                           
   950                           
   951                           ; 2 bytes @ 0x9
   952  0029                     	ds	2
   953  002B                     ___lwmod@dividend:	
   954                           
   955                           ; 2 bytes @ 0xB
   956  002B                     	ds	2
   957  002D                     ??___lwmod:	
   958                           
   959                           ; 1 bytes @ 0xD
   960  002D                     	ds	1
   961  002E                     ___lwmod@counter:	
   962                           
   963                           ; 1 bytes @ 0xE
   964  002E                     	ds	1
   965  002F                     ?_printf:	
   966  002F                     printf@f:	
   967                           ; 2 bytes @ 0xF
   968                           
   969                           
   970                           ; 2 bytes @ 0xF
   971  002F                     	ds	8
   972  0037                     ??_printf:	
   973                           
   974                           ; 1 bytes @ 0x17
   975  0037                     	ds	4
   976  003B                     printf@prec:	
   977                           
   978                           ; 1 bytes @ 0x1B
   979  003B                     	ds	1
   980  003C                     printf@ap:	
   981                           
   982                           ; 1 bytes @ 0x1C
   983  003C                     	ds	1
   984  003D                     printf@flag:	
   985                           
   986                           ; 1 bytes @ 0x1D
   987  003D                     	ds	1
   988  003E                     printf@val:	
   989                           
   990                           ; 2 bytes @ 0x1E
   991  003E                     	ds	2
   992  0040                     printf@c:	
   993                           
   994                           ; 1 bytes @ 0x20
   995  0040                     	ds	1
   996  0041                     ??_main:	
   997                           
   998                           	psect	maintext
   999  02B5                     __pmaintext:	
  1000                           ; 1 bytes @ 0x21
  1001 ;;
  1002 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1003 ;;
  1004 ;; *************** function _main *****************
  1005 ;; Defined at:
  1006 ;;		line 13 in file "main.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      char 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : B1F/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1020 ;;      Params:         0       0       0       0       0       0
  1021 ;;      Locals:         0       0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0
  1023 ;;      Totals:         0       0       0       0       0       0
  1024 ;;Total ram usage:        0 bytes
  1025 ;; Hardware stack levels required when called:    6
  1026 ;; This function calls:
  1027 ;;		_Basic_Init
  1028 ;;		_LCD_CursorHome
  1029 ;;		_LCD_Init
  1030 ;;		_Timer1_GetCPM
  1031 ;;		_Timer1_GetCountSum
  1032 ;;		_Timer1_Init
  1033 ;;		_Timer4_Init
  1034 ;;		_printf
  1035 ;; This function is called by:
  1036 ;;		Startup code after reset
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           
  1041                           ;psect for function _main
  1042  02B5                     _main:	
  1043                           
  1044                           ;main.c: 15: Basic_Init();
  1045                           
  1046                           ;incstack = 0
  1047                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1048  02B5  3183  232F  3182   	fcall	_Basic_Init
  1049                           
  1050                           ;main.c: 17: LCD_Init();
  1051  02B8  3181  2186  3182   	fcall	_LCD_Init
  1052                           
  1053                           ;main.c: 18: Timer1_Init();
  1054  02BB  3183  2310  3182   	fcall	_Timer1_Init
  1055                           
  1056                           ;main.c: 19: TMR1ON = 1;;
  1057  02BE  0020               	movlb	0	; select bank0
  1058  02BF  1418               	bsf	24,0	;volatile
  1059                           
  1060                           ;main.c: 20: Timer4_Init();
  1061  02C0  3183  2375  3182   	fcall	_Timer4_Init
  1062  02C3                     l170:	
  1063                           ;main.c: 22: while(1)
  1064                           
  1065                           
  1066                           ;main.c: 23: {
  1067                           ;main.c: 24: LCD_CursorHome();
  1068  02C3  3183  2365  3182   	fcall	_LCD_CursorHome
  1069                           
  1070                           ;main.c: 25: printf("%ul %d", Timer1_GetCPM(),Timer1_GetCountSum());
  1071  02C6  304E               	movlw	low (STR_1| (0+32768))
  1072  02C7  0020               	movlb	0	; select bank0
  1073  02C8  00AF               	movwf	printf@f
  1074  02C9  3083               	movlw	high (STR_1| (0+32768))
  1075  02CA  00B0               	movwf	printf@f+1
  1076  02CB  3183  23AF  3182   	fcall	_Timer1_GetCPM
  1077  02CE  0020               	movlb	0	; select bank0
  1078  02CF  0822               	movf	?_Timer1_GetCPM+1,w
  1079  02D0  00B2               	movwf	?_printf+3
  1080  02D1  0821               	movf	?_Timer1_GetCPM,w
  1081  02D2  00B1               	movwf	?_printf+2
  1082  02D3  3183  238E  3182   	fcall	_Timer1_GetCountSum
  1083  02D6  0020               	movlb	0	; select bank0
  1084  02D7  0824               	movf	?_Timer1_GetCountSum+3,w
  1085  02D8  00B6               	movwf	?_printf+7
  1086  02D9  0823               	movf	?_Timer1_GetCountSum+2,w
  1087  02DA  00B5               	movwf	?_printf+6
  1088  02DB  0822               	movf	?_Timer1_GetCountSum+1,w
  1089  02DC  00B4               	movwf	?_printf+5
  1090  02DD  0821               	movf	?_Timer1_GetCountSum,w
  1091  02DE  00B3               	movwf	?_printf+4
  1092  02DF  3180  202D  3182   	fcall	_printf
  1093  02E2  2AC3               	goto	l170
  1094  02E3                     __end_of_main:	
  1095                           ;main.c: 26: }
  1096                           ;main.c: 28: return 0;
  1097                           ;	Return value of _main is never used
  1098                           
  1099                           
  1100                           	psect	text1
  1101  002D                     __ptext1:	
  1102 ;; *************** function _printf *****************
  1103 ;; Defined at:
  1104 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  1107 ;;		 -> STR_1(7), 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  tmpval          4    0        struct .
  1110 ;;  val             2   30[BANK0 ] unsigned int 
  1111 ;;  cp              2    0        PTR const unsigned char 
  1112 ;;  len             2    0        unsigned int 
  1113 ;;  c               1   32[BANK0 ] char 
  1114 ;;  flag            1   29[BANK0 ] unsigned char 
  1115 ;;  ap              1   28[BANK0 ] PTR void [1]
  1116 ;;		 -> ?_printf(2), 
  1117 ;;  prec            1   27[BANK0 ] char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  2   15[BANK0 ] int 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1127 ;;      Params:         0       8       0       0       0       0
  1128 ;;      Locals:         0       6       0       0       0       0
  1129 ;;      Temps:          0       4       0       0       0       0
  1130 ;;      Totals:         0      18       0       0       0       0
  1131 ;;Total ram usage:       18 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    5
  1134 ;; This function calls:
  1135 ;;		___lwdiv
  1136 ;;		___lwmod
  1137 ;;		_putch
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           
  1144                           ;psect for function _printf
  1145  002D                     _printf:	
  1146                           
  1147                           ;doprnt.c: 466: va_list ap;
  1148                           ;doprnt.c: 499: signed char c;
  1149                           ;doprnt.c: 506: signed char prec;
  1150                           ;doprnt.c: 508: unsigned char flag;
  1151                           ;doprnt.c: 523: union {
  1152                           ;doprnt.c: 524: unsigned long vd;
  1153                           ;doprnt.c: 525: double integ;
  1154                           ;doprnt.c: 526: } tmpval;
  1155                           ;doprnt.c: 528: unsigned int val;
  1156                           ;doprnt.c: 529: unsigned len;
  1157                           ;doprnt.c: 530: const char * cp;
  1158                           ;doprnt.c: 533: *ap = __va_start();
  1159                           
  1160                           ;incstack = 0
  1161                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1162  002D  3031               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1163  002E  0020               	movlb	0	; select bank0
  1164  002F  00B7               	movwf	??_printf
  1165  0030  0837               	movf	??_printf,w
  1166  0031  00BC               	movwf	printf@ap
  1167  0032                     l1469:	
  1168                           ;doprnt.c: 536: while(c = *f++) {
  1169                           
  1170  0032  0020               	movlb	0	; select bank0
  1171  0033  0830               	movf	printf@f+1,w
  1172  0034  00B8               	movwf	??_printf+1
  1173  0035  082F               	movf	printf@f,w
  1174  0036  00B7               	movwf	??_printf
  1175  0037  0AAF               	incf	printf@f,f
  1176  0038  1903               	skipnz
  1177  0039  0AB0               	incf	printf@f+1,f
  1178  003A  0837               	movf	??_printf,w
  1179  003B  0084               	movwf	4
  1180  003C  0838               	movf	??_printf+1,w
  1181  003D  0085               	movwf	5
  1182  003E  0800               	movf	0,w	;code access
  1183  003F  00B9               	movwf	??_printf+2
  1184  0040  0839               	movf	??_printf+2,w
  1185  0041  00C0               	movwf	printf@c
  1186  0042  0840               	movf	printf@c,w
  1187  0043  1903               	btfsc	3,2
  1188  0044  0008               	return
  1189                           
  1190                           ;doprnt.c: 538: if(c != '%')
  1191  0045  3025               	movlw	37
  1192  0046  0640               	xorwf	printf@c,w
  1193  0047  1903               	btfsc	3,2
  1194  0048  284E               	goto	l1425
  1195                           
  1196                           ;doprnt.c: 540: {
  1197                           ;doprnt.c: 541: (putch(c) );
  1198  0049  0840               	movf	printf@c,w
  1199  004A  3183  23A2  3180   	fcall	_putch
  1200                           
  1201                           ;doprnt.c: 542: continue;
  1202  004D  2832               	goto	l1469
  1203  004E                     l1425:	
  1204                           
  1205                           ;doprnt.c: 543: }
  1206                           ;doprnt.c: 548: flag = 0;
  1207  004E  0020               	movlb	0	; select bank0
  1208  004F  01BD               	clrf	printf@flag
  1209                           
  1210                           ;doprnt.c: 635: switch(c = *f++) {
  1211  0050  2853               	goto	l1429
  1212  0051                     l202:	
  1213                           ;doprnt.c: 817: case 'u':
  1214                           
  1215                           ;doprnt.c: 813: continue;
  1216                           
  1217                           ;doprnt.c: 802: default:
  1218                           
  1219                           ;doprnt.c: 698: case 'i':
  1220                           ;doprnt.c: 699: break;
  1221                           
  1222                           ;doprnt.c: 697: case 'd':
  1223                           
  1224                           ;doprnt.c: 638: goto alldone;
  1225                           
  1226                           ;doprnt.c: 637: case 0:
  1227                           
  1228                           
  1229                           ;doprnt.c: 818: flag |= 0x40;
  1230  0051  173D               	bsf	printf@flag,6
  1231                           
  1232                           ;doprnt.c: 822: }
  1233                           
  1234                           ;doprnt.c: 819: break;
  1235  0052  286D               	goto	l200
  1236  0053                     l1429:	
  1237  0053  0830               	movf	printf@f+1,w
  1238  0054  00B8               	movwf	??_printf+1
  1239  0055  082F               	movf	printf@f,w
  1240  0056  00B7               	movwf	??_printf
  1241  0057  0AAF               	incf	printf@f,f
  1242  0058  1903               	skipnz
  1243  0059  0AB0               	incf	printf@f+1,f
  1244  005A  0837               	movf	??_printf,w
  1245  005B  0084               	movwf	4
  1246  005C  0838               	movf	??_printf+1,w
  1247  005D  0085               	movwf	5
  1248  005E  0800               	movf	0,w	;code access
  1249  005F  00C0               	movwf	printf@c
  1250                           
  1251                           ; Switch size 1, requested type "space"
  1252                           ; Number of cases is 4, Range of values is 0 to 117
  1253                           ; switch strategies available:
  1254                           ; Name         Instructions Cycles
  1255                           ; simple_byte           13     7 (average)
  1256                           ; direct_byte          242     6 (fixed)
  1257                           ; jumptable            260     6 (fixed)
  1258                           ;	Chosen strategy is simple_byte
  1259  0060  3A00               	xorlw	0	; case 0
  1260  0061  1903               	skipnz
  1261  0062  28F8               	goto	l214
  1262  0063  3A64               	xorlw	100	; case 100
  1263  0064  1903               	skipnz
  1264  0065  286D               	goto	l200
  1265  0066  3A0D               	xorlw	13	; case 105
  1266  0067  1903               	skipnz
  1267  0068  286D               	goto	l200
  1268  0069  3A1C               	xorlw	28	; case 117
  1269  006A  1903               	skipnz
  1270  006B  2851               	goto	l202
  1271  006C  2832               	goto	l1469
  1272  006D                     l200:	
  1273                           
  1274                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  1275  006D  1B3D               	btfsc	printf@flag,6
  1276  006E  2886               	goto	l1441
  1277                           
  1278                           ;doprnt.c: 1253: {
  1279                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1280  006F  083C               	movf	printf@ap,w
  1281  0070  0086               	movwf	6
  1282  0071  0187               	clrf	7
  1283  0072  3F40               	moviw [0]fsr1
  1284  0073  00BE               	movwf	printf@val
  1285  0074  3F41               	moviw [1]fsr1
  1286  0075  00BF               	movwf	printf@val+1
  1287  0076  3002               	movlw	2
  1288  0077  00B7               	movwf	??_printf
  1289  0078  0837               	movf	??_printf,w
  1290  0079  07BC               	addwf	printf@ap,f
  1291                           
  1292                           ;doprnt.c: 1261: if((int)val < 0) {
  1293  007A  1FBF               	btfss	printf@val+1,7
  1294  007B  2891               	goto	l1445
  1295                           
  1296                           ;doprnt.c: 1262: flag |= 0x03;
  1297  007C  3003               	movlw	3
  1298  007D  00B7               	movwf	??_printf
  1299  007E  0837               	movf	??_printf,w
  1300  007F  04BD               	iorwf	printf@flag,f
  1301                           
  1302                           ;doprnt.c: 1263: val = -val;
  1303  0080  09BE               	comf	printf@val,f
  1304  0081  09BF               	comf	printf@val+1,f
  1305  0082  0ABE               	incf	printf@val,f
  1306  0083  1903               	skipnz
  1307  0084  0ABF               	incf	printf@val+1,f
  1308                           
  1309                           ;doprnt.c: 1264: }
  1310                           ;doprnt.c: 1266: }
  1311  0085  2891               	goto	l1445
  1312  0086                     l1441:	
  1313                           
  1314                           ;doprnt.c: 1268: else
  1315                           ;doprnt.c: 1273: {
  1316                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1317  0086  083C               	movf	printf@ap,w
  1318  0087  0086               	movwf	6
  1319  0088  0187               	clrf	7
  1320  0089  3F40               	moviw [0]fsr1
  1321  008A  00BE               	movwf	printf@val
  1322  008B  3F41               	moviw [1]fsr1
  1323  008C  00BF               	movwf	printf@val+1
  1324  008D  3002               	movlw	2
  1325  008E  00B7               	movwf	??_printf
  1326  008F  0837               	movf	??_printf,w
  1327  0090  07BC               	addwf	printf@ap,f
  1328  0091                     l1445:	
  1329                           
  1330                           ;doprnt.c: 1287: }
  1331                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1332  0091  01C0               	clrf	printf@c
  1333  0092  0AC0               	incf	printf@c,f
  1334  0093  3005               	movlw	5
  1335  0094  0640               	xorwf	printf@c,w
  1336  0095  1903               	btfsc	3,2
  1337  0096  28B6               	goto	l1457
  1338  0097                     l1451:	
  1339                           
  1340                           ;doprnt.c: 1306: if(val < dpowers[c])
  1341  0097  0840               	movf	printf@c,w
  1342  0098  00B7               	movwf	??_printf
  1343  0099  01B8               	clrf	??_printf+1
  1344  009A  35B7               	lslf	??_printf,f
  1345  009B  0DB8               	rlf	??_printf+1,f
  1346  009C  3044               	movlw	low (_dpowers| (0+32768))
  1347  009D  0737               	addwf	??_printf,w
  1348  009E  0084               	movwf	4
  1349  009F  3083               	movlw	high (_dpowers| (0+32768))
  1350  00A0  3D38               	addwfc	??_printf+1,w
  1351  00A1  0085               	movwf	5
  1352  00A2  3F00               	moviw [0]fsr0
  1353  00A3  00B9               	movwf	??_printf+2
  1354  00A4  3F01               	moviw [1]fsr0
  1355  00A5  00BA               	movwf	??_printf+3
  1356  00A6  083A               	movf	??_printf+3,w
  1357  00A7  023F               	subwf	printf@val+1,w
  1358  00A8  1D03               	skipz
  1359  00A9  28AC               	goto	u1105
  1360  00AA  0839               	movf	??_printf+2,w
  1361  00AB  023E               	subwf	printf@val,w
  1362  00AC                     u1105:	
  1363  00AC  1C03               	btfss	3,0
  1364  00AD  28B6               	goto	l1457
  1365                           
  1366                           ;doprnt.c: 1307: break;
  1367  00AE  3001               	movlw	1
  1368  00AF  00B7               	movwf	??_printf
  1369  00B0  0837               	movf	??_printf,w
  1370  00B1  07C0               	addwf	printf@c,f
  1371  00B2  3005               	movlw	5
  1372  00B3  0640               	xorwf	printf@c,w
  1373  00B4  1D03               	btfss	3,2
  1374  00B5  2897               	goto	l1451
  1375  00B6                     l1457:	
  1376                           
  1377                           ;doprnt.c: 1422: {
  1378                           ;doprnt.c: 1438: if(flag & 0x03)
  1379  00B6  083D               	movf	printf@flag,w
  1380  00B7  3903               	andlw	3
  1381  00B8  1903               	btfsc	3,2
  1382  00B9  28BE               	goto	l1461
  1383                           
  1384                           ;doprnt.c: 1439: (putch('-') );
  1385  00BA  302D               	movlw	45
  1386  00BB  3183  23A2  3180   	fcall	_putch
  1387  00BE                     l1461:	
  1388                           
  1389                           ;doprnt.c: 1469: }
  1390                           ;doprnt.c: 1472: prec = c;
  1391  00BE  0020               	movlb	0	; select bank0
  1392  00BF  0840               	movf	printf@c,w
  1393  00C0  00B7               	movwf	??_printf
  1394  00C1  0837               	movf	??_printf,w
  1395  00C2  00BB               	movwf	printf@prec
  1396  00C3                     l1467:	
  1397                           ;doprnt.c: 1474: while(prec--) {
  1398                           
  1399  00C3  30FF               	movlw	255
  1400  00C4  0020               	movlb	0	; select bank0
  1401  00C5  00B7               	movwf	??_printf
  1402  00C6  0837               	movf	??_printf,w
  1403  00C7  07BB               	addwf	printf@prec,f
  1404  00C8  0A3B               	incf	printf@prec,w
  1405  00C9  1903               	btfsc	3,2
  1406  00CA  2832               	goto	l1469
  1407                           
  1408                           ;doprnt.c: 1478: {
  1409                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1410  00CB  300A               	movlw	10
  1411  00CC  00A9               	movwf	___lwmod@divisor
  1412  00CD  3000               	movlw	0
  1413  00CE  00AA               	movwf	___lwmod@divisor+1
  1414  00CF  083B               	movf	printf@prec,w
  1415  00D0  00B7               	movwf	??_printf
  1416  00D1  01B8               	clrf	??_printf+1
  1417  00D2  35B7               	lslf	??_printf,f
  1418  00D3  0DB8               	rlf	??_printf+1,f
  1419  00D4  3044               	movlw	low (_dpowers| (0+32768))
  1420  00D5  0737               	addwf	??_printf,w
  1421  00D6  0084               	movwf	4
  1422  00D7  3083               	movlw	high (_dpowers| (0+32768))
  1423  00D8  3D38               	addwfc	??_printf+1,w
  1424  00D9  0085               	movwf	5
  1425  00DA  3F00               	moviw [0]fsr0
  1426  00DB  00A1               	movwf	___lwdiv@divisor
  1427  00DC  3F01               	moviw [1]fsr0
  1428  00DD  00A2               	movwf	___lwdiv@divisor+1
  1429  00DE  083F               	movf	printf@val+1,w
  1430  00DF  00A4               	movwf	___lwdiv@dividend+1
  1431  00E0  083E               	movf	printf@val,w
  1432  00E1  00A3               	movwf	___lwdiv@dividend
  1433  00E2  3182  2280  3180   	fcall	___lwdiv
  1434  00E5  0020               	movlb	0	; select bank0
  1435  00E6  0822               	movf	?___lwdiv+1,w
  1436  00E7  00AC               	movwf	___lwmod@dividend+1
  1437  00E8  0821               	movf	?___lwdiv,w
  1438  00E9  00AB               	movwf	___lwmod@dividend
  1439  00EA  3182  22E3  3180   	fcall	___lwmod
  1440  00ED  0020               	movlb	0	; select bank0
  1441  00EE  0829               	movf	?___lwmod,w
  1442  00EF  3E30               	addlw	48
  1443  00F0  00B9               	movwf	??_printf+2
  1444  00F1  0839               	movf	??_printf+2,w
  1445  00F2  00C0               	movwf	printf@c
  1446                           
  1447                           ;doprnt.c: 1523: }
  1448                           ;doprnt.c: 1524: (putch(c) );
  1449  00F3  0840               	movf	printf@c,w
  1450  00F4  3183  23A2  3180   	fcall	_putch
  1451  00F7  28C3               	goto	l1467
  1452  00F8                     l214:	
  1453                           ;doprnt.c: 1540: return 0;
  1454                           ;	Return value of _printf is never used
  1455                           
  1456                           ;doprnt.c: 1525: }
  1457                           ;doprnt.c: 1533: }
  1458                           ;doprnt.c: 1535: alldone:
  1459                           
  1460  00F8  0008               	return
  1461  00F9                     __end_of_printf:	
  1462                           
  1463                           	psect	text2
  1464  03A2                     __ptext2:	
  1465 ;; *************** function _putch *****************
  1466 ;; Defined at:
  1467 ;;		line 64 in file "LCD.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  c               1    wreg     unsigned char 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  c               1    4[BANK0 ] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0, pclath, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1481 ;;      Params:         0       0       0       0       0       0
  1482 ;;      Locals:         0       1       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0
  1484 ;;      Totals:         0       1       0       0       0       0
  1485 ;;Total ram usage:        1 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:    4
  1488 ;; This function calls:
  1489 ;;		_LCD_WriteData
  1490 ;; This function is called by:
  1491 ;;		_printf
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           
  1496                           ;psect for function _putch
  1497  03A2                     _putch:	
  1498                           
  1499                           ;incstack = 0
  1500                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  1501                           ;putch@c stored from wreg
  1502  03A2  0020               	movlb	0	; select bank0
  1503  03A3  00A4               	movwf	putch@c
  1504                           
  1505                           ;LCD.c: 66: RA3 = 1;
  1506  03A4  158C               	bsf	12,3	;volatile
  1507                           
  1508                           ;LCD.c: 67: LCD_WriteData(c);
  1509  03A5  0824               	movf	putch@c,w
  1510  03A6  3182  2245         	fcall	_LCD_WriteData
  1511  03A8  0008               	return
  1512  03A9                     __end_of_putch:	
  1513                           
  1514                           	psect	text3
  1515  02E3                     __ptext3:	
  1516 ;; *************** function ___lwmod *****************
  1517 ;; Defined at:
  1518 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  divisor         2    9[BANK0 ] unsigned int 
  1521 ;;  dividend        2   11[BANK0 ] unsigned int 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  counter         1   14[BANK0 ] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  2    9[BANK0 ] unsigned int 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1533 ;;      Params:         0       4       0       0       0       0
  1534 ;;      Locals:         0       1       0       0       0       0
  1535 ;;      Temps:          0       1       0       0       0       0
  1536 ;;      Totals:         0       6       0       0       0       0
  1537 ;;Total ram usage:        6 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    3
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_printf
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function ___lwmod
  1549  02E3                     ___lwmod:	
  1550                           
  1551                           ;incstack = 0
  1552                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1553  02E3  0020               	movlb	0	; select bank0
  1554  02E4  0829               	movf	___lwmod@divisor,w
  1555  02E5  042A               	iorwf	___lwmod@divisor+1,w
  1556  02E6  1903               	btfsc	3,2
  1557  02E7  2B0B               	goto	l1263
  1558  02E8  01AE               	clrf	___lwmod@counter
  1559  02E9  0AAE               	incf	___lwmod@counter,f
  1560  02EA                     l1253:	
  1561  02EA  1BAA               	btfsc	___lwmod@divisor+1,7
  1562  02EB  2AF6               	goto	l1255
  1563  02EC  3001               	movlw	1
  1564  02ED                     u965:	
  1565  02ED  35A9               	lslf	___lwmod@divisor,f
  1566  02EE  0DAA               	rlf	___lwmod@divisor+1,f
  1567  02EF  0B89               	decfsz	9,f
  1568  02F0  2AED               	goto	u965
  1569  02F1  3001               	movlw	1
  1570  02F2  00AD               	movwf	??___lwmod
  1571  02F3  082D               	movf	??___lwmod,w
  1572  02F4  07AE               	addwf	___lwmod@counter,f
  1573  02F5  2AEA               	goto	l1253
  1574  02F6                     l1255:	
  1575  02F6  082A               	movf	___lwmod@divisor+1,w
  1576  02F7  022C               	subwf	___lwmod@dividend+1,w
  1577  02F8  1D03               	skipz
  1578  02F9  2AFC               	goto	u985
  1579  02FA  0829               	movf	___lwmod@divisor,w
  1580  02FB  022B               	subwf	___lwmod@dividend,w
  1581  02FC                     u985:	
  1582  02FC  1C03               	skipc
  1583  02FD  2B02               	goto	l1259
  1584  02FE  0829               	movf	___lwmod@divisor,w
  1585  02FF  02AB               	subwf	___lwmod@dividend,f
  1586  0300  082A               	movf	___lwmod@divisor+1,w
  1587  0301  3BAC               	subwfb	___lwmod@dividend+1,f
  1588  0302                     l1259:	
  1589  0302  3001               	movlw	1
  1590  0303                     u995:	
  1591  0303  36AA               	lsrf	___lwmod@divisor+1,f
  1592  0304  0CA9               	rrf	___lwmod@divisor,f
  1593  0305  0B89               	decfsz	9,f
  1594  0306  2B03               	goto	u995
  1595  0307  3001               	movlw	1
  1596  0308  02AE               	subwf	___lwmod@counter,f
  1597  0309  1D03               	btfss	3,2
  1598  030A  2AF6               	goto	l1255
  1599  030B                     l1263:	
  1600  030B  082C               	movf	___lwmod@dividend+1,w
  1601  030C  00AA               	movwf	?___lwmod+1
  1602  030D  082B               	movf	___lwmod@dividend,w
  1603  030E  00A9               	movwf	?___lwmod
  1604  030F  0008               	return
  1605  0310                     __end_of___lwmod:	
  1606                           
  1607                           	psect	text4
  1608  0280                     __ptext4:	
  1609 ;; *************** function ___lwdiv *****************
  1610 ;; Defined at:
  1611 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  divisor         2    1[BANK0 ] unsigned int 
  1614 ;;  dividend        2    3[BANK0 ] unsigned int 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  quotient        2    6[BANK0 ] unsigned int 
  1617 ;;  counter         1    8[BANK0 ] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  2    1[BANK0 ] unsigned int 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1627 ;;      Params:         0       4       0       0       0       0
  1628 ;;      Locals:         0       3       0       0       0       0
  1629 ;;      Temps:          0       1       0       0       0       0
  1630 ;;      Totals:         0       8       0       0       0       0
  1631 ;;Total ram usage:        8 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    3
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_printf
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           
  1642                           ;psect for function ___lwdiv
  1643  0280                     ___lwdiv:	
  1644                           
  1645                           ;incstack = 0
  1646                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1647  0280  0020               	movlb	0	; select bank0
  1648  0281  01A6               	clrf	___lwdiv@quotient
  1649  0282  01A7               	clrf	___lwdiv@quotient+1
  1650  0283  0821               	movf	___lwdiv@divisor,w
  1651  0284  0422               	iorwf	___lwdiv@divisor+1,w
  1652  0285  1903               	btfsc	3,2
  1653  0286  2AB0               	goto	l1241
  1654  0287  01A8               	clrf	___lwdiv@counter
  1655  0288  0AA8               	incf	___lwdiv@counter,f
  1656  0289                     l1229:	
  1657  0289  1BA2               	btfsc	___lwdiv@divisor+1,7
  1658  028A  2A95               	goto	l1231
  1659  028B  3001               	movlw	1
  1660  028C                     u895:	
  1661  028C  35A1               	lslf	___lwdiv@divisor,f
  1662  028D  0DA2               	rlf	___lwdiv@divisor+1,f
  1663  028E  0B89               	decfsz	9,f
  1664  028F  2A8C               	goto	u895
  1665  0290  3001               	movlw	1
  1666  0291  00A5               	movwf	??___lwdiv
  1667  0292  0825               	movf	??___lwdiv,w
  1668  0293  07A8               	addwf	___lwdiv@counter,f
  1669  0294  2A89               	goto	l1229
  1670  0295                     l1231:	
  1671  0295  3001               	movlw	1
  1672  0296                     u915:	
  1673  0296  35A6               	lslf	___lwdiv@quotient,f
  1674  0297  0DA7               	rlf	___lwdiv@quotient+1,f
  1675  0298  0B89               	decfsz	9,f
  1676  0299  2A96               	goto	u915
  1677  029A  0822               	movf	___lwdiv@divisor+1,w
  1678  029B  0224               	subwf	___lwdiv@dividend+1,w
  1679  029C  1D03               	skipz
  1680  029D  2AA0               	goto	u925
  1681  029E  0821               	movf	___lwdiv@divisor,w
  1682  029F  0223               	subwf	___lwdiv@dividend,w
  1683  02A0                     u925:	
  1684  02A0  1C03               	skipc
  1685  02A1  2AA7               	goto	l1237
  1686  02A2  0821               	movf	___lwdiv@divisor,w
  1687  02A3  02A3               	subwf	___lwdiv@dividend,f
  1688  02A4  0822               	movf	___lwdiv@divisor+1,w
  1689  02A5  3BA4               	subwfb	___lwdiv@dividend+1,f
  1690  02A6  1426               	bsf	___lwdiv@quotient,0
  1691  02A7                     l1237:	
  1692  02A7  3001               	movlw	1
  1693  02A8                     u935:	
  1694  02A8  36A2               	lsrf	___lwdiv@divisor+1,f
  1695  02A9  0CA1               	rrf	___lwdiv@divisor,f
  1696  02AA  0B89               	decfsz	9,f
  1697  02AB  2AA8               	goto	u935
  1698  02AC  3001               	movlw	1
  1699  02AD  02A8               	subwf	___lwdiv@counter,f
  1700  02AE  1D03               	btfss	3,2
  1701  02AF  2A95               	goto	l1231
  1702  02B0                     l1241:	
  1703  02B0  0827               	movf	___lwdiv@quotient+1,w
  1704  02B1  00A2               	movwf	?___lwdiv+1
  1705  02B2  0826               	movf	___lwdiv@quotient,w
  1706  02B3  00A1               	movwf	?___lwdiv
  1707  02B4  0008               	return
  1708  02B5                     __end_of___lwdiv:	
  1709                           
  1710                           	psect	text5
  1711  0375                     __ptext5:	
  1712 ;; *************** function _Timer4_Init *****************
  1713 ;; Defined at:
  1714 ;;		line 3 in file "Timer4.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1728 ;;      Params:         0       0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0
  1731 ;;      Totals:         0       0       0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    3
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           
  1743                           ;psect for function _Timer4_Init
  1744  0375                     _Timer4_Init:	
  1745                           
  1746                           ;Timer4.c: 5: PR4 = 0x64;
  1747                           
  1748                           ;incstack = 0
  1749                           ; Regs used in _Timer4_Init: [wreg+status,2]
  1750  0375  3064               	movlw	100
  1751  0376  0028               	movlb	8	; select bank8
  1752  0377  0096               	movwf	22	;volatile
  1753                           
  1754                           ;Timer4.c: 6: TMR4 = 0x00;
  1755  0378  0195               	clrf	21	;volatile
  1756                           
  1757                           ;Timer4.c: 7: T4CON |= (0x02<<0);
  1758  0379  1497               	bsf	23,1	;volatile
  1759                           
  1760                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  1761  037A  0817               	movf	23,w	;volatile
  1762                           
  1763                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  1764  037B  1517               	bsf	23,2	;volatile
  1765                           
  1766                           ;Timer4.c: 11: TMR4IF = 0;
  1767  037C  0020               	movlb	0	; select bank0
  1768  037D  1093               	bcf	19,1	;volatile
  1769                           
  1770                           ;Timer4.c: 12: TMR4IE = 1;
  1771  037E  0021               	movlb	1	; select bank1
  1772  037F  1493               	bsf	19,1	;volatile
  1773                           
  1774                           ;Timer4.c: 13: PEIE = 1;
  1775  0380  170B               	bsf	11,6	;volatile
  1776                           
  1777                           ;Timer4.c: 14: GIE = 1;
  1778  0381  178B               	bsf	11,7	;volatile
  1779  0382  0008               	return
  1780  0383                     __end_of_Timer4_Init:	
  1781                           
  1782                           	psect	text6
  1783  0310                     __ptext6:	
  1784 ;; *************** function _Timer1_Init *****************
  1785 ;; Defined at:
  1786 ;;		line 7 in file "Timer1.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1800 ;;      Params:         0       0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0       0
  1802 ;;      Temps:          0       1       0       0       0       0
  1803 ;;      Totals:         0       1       0       0       0       0
  1804 ;;Total ram usage:        1 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    3
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function _Timer1_Init
  1816  0310                     _Timer1_Init:	
  1817                           
  1818                           ;Timer1.c: 9: TRISB |= (1<<6);
  1819                           
  1820                           ;incstack = 0
  1821                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  1822  0310  0021               	movlb	1	; select bank1
  1823  0311  170D               	bsf	13,6	;volatile
  1824                           
  1825                           ;Timer1.c: 10: ANSELB &= ~(1<<6);
  1826  0312  30BF               	movlw	191
  1827  0313  0020               	movlb	0	; select bank0
  1828  0314  00A1               	movwf	??_Timer1_Init
  1829  0315  0821               	movf	??_Timer1_Init,w
  1830  0316  0023               	movlb	3	; select bank3
  1831  0317  058D               	andwf	13,f	;volatile
  1832                           
  1833                           ;Timer1.c: 11: WPUB |= (1<<6);
  1834  0318  0024               	movlb	4	; select bank4
  1835  0319  170D               	bsf	13,6	;volatile
  1836                           
  1837                           ;Timer1.c: 13: T1CON |= (0x01<<2);
  1838  031A  0020               	movlb	0	; select bank0
  1839  031B  1518               	bsf	24,2	;volatile
  1840                           
  1841                           ;Timer1.c: 14: T1CON &= ~(0x01<<3);
  1842  031C  30F7               	movlw	247
  1843  031D  00A1               	movwf	??_Timer1_Init
  1844  031E  0821               	movf	??_Timer1_Init,w
  1845  031F  0598               	andwf	24,f	;volatile
  1846                           
  1847                           ;Timer1.c: 15: T1CON |= (0x00<<4);
  1848  0320  0818               	movf	24,w	;volatile
  1849                           
  1850                           ;Timer1.c: 16: T1CON |= (0x02<<6);
  1851  0321  1798               	bsf	24,7	;volatile
  1852                           
  1853                           ;Timer1.c: 18: T1GCON = 0x00;
  1854  0322  0199               	clrf	25	;volatile
  1855                           
  1856                           ;Timer1.c: 20: {TMR1ON = 0;; TMR1 = (uint16_t)0xFFFF - 10UL; TMR1ON = 1;; };
  1857  0323  1018               	bcf	24,0	;volatile
  1858  0324  30FF               	movlw	255
  1859  0325  0097               	movwf	23	;volatile
  1860  0326  30F5               	movlw	245
  1861  0327  0096               	movwf	22	;volatile
  1862  0328  1418               	bsf	24,0	;volatile
  1863                           
  1864                           ;Timer1.c: 22: TMR1IF = 0;
  1865  0329  1011               	bcf	17,0	;volatile
  1866                           
  1867                           ;Timer1.c: 23: TMR1IE = 1;
  1868  032A  0021               	movlb	1	; select bank1
  1869  032B  1411               	bsf	17,0	;volatile
  1870                           
  1871                           ;Timer1.c: 24: PEIE = 1;
  1872  032C  170B               	bsf	11,6	;volatile
  1873                           
  1874                           ;Timer1.c: 25: GIE = 1;
  1875  032D  178B               	bsf	11,7	;volatile
  1876  032E  0008               	return
  1877  032F                     __end_of_Timer1_Init:	
  1878                           
  1879                           	psect	text7
  1880  038E                     __ptext7:	
  1881 ;; *************** function _Timer1_GetCountSum *****************
  1882 ;; Defined at:
  1883 ;;		line 29 in file "Timer1.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  4    1[BANK0 ] unsigned long 
  1890 ;; Registers used:
  1891 ;;		wreg
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1897 ;;      Params:         0       4       0       0       0       0
  1898 ;;      Locals:         0       0       0       0       0       0
  1899 ;;      Temps:          0       0       0       0       0       0
  1900 ;;      Totals:         0       4       0       0       0       0
  1901 ;;Total ram usage:        4 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    3
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           
  1912                           ;psect for function _Timer1_GetCountSum
  1913  038E                     _Timer1_GetCountSum:	
  1914                           
  1915                           ;Timer1.c: 31: return SigmaCount;
  1916                           
  1917                           ;incstack = 0
  1918                           ; Regs used in _Timer1_GetCountSum: [wreg]
  1919  038E  0020               	movlb	0	; select bank0
  1920  038F  0854               	movf	_SigmaCount+3,w
  1921  0390  00A4               	movwf	?_Timer1_GetCountSum+3
  1922  0391  0853               	movf	_SigmaCount+2,w
  1923  0392  00A3               	movwf	?_Timer1_GetCountSum+2
  1924  0393  0852               	movf	_SigmaCount+1,w
  1925  0394  00A2               	movwf	?_Timer1_GetCountSum+1
  1926  0395  0851               	movf	_SigmaCount,w
  1927  0396  00A1               	movwf	?_Timer1_GetCountSum
  1928  0397  0008               	return
  1929  0398                     __end_of_Timer1_GetCountSum:	
  1930                           
  1931                           	psect	text8
  1932  03AF                     __ptext8:	
  1933 ;; *************** function _Timer1_GetCPM *****************
  1934 ;; Defined at:
  1935 ;;		line 39 in file "Timer1.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  2    1[BANK0 ] unsigned int 
  1942 ;; Registers used:
  1943 ;;		wreg
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1949 ;;      Params:         0       2       0       0       0       0
  1950 ;;      Locals:         0       0       0       0       0       0
  1951 ;;      Temps:          0       0       0       0       0       0
  1952 ;;      Totals:         0       2       0       0       0       0
  1953 ;;Total ram usage:        2 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    3
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           
  1964                           ;psect for function _Timer1_GetCPM
  1965  03AF                     _Timer1_GetCPM:	
  1966                           
  1967                           ;Timer1.c: 41: return AverageCPM;
  1968                           
  1969                           ;incstack = 0
  1970                           ; Regs used in _Timer1_GetCPM: [wreg]
  1971  03AF  0020               	movlb	0	; select bank0
  1972  03B0  0846               	movf	_AverageCPM+1,w
  1973  03B1  00A2               	movwf	?_Timer1_GetCPM+1
  1974  03B2  0845               	movf	_AverageCPM,w
  1975  03B3  00A1               	movwf	?_Timer1_GetCPM
  1976  03B4  0008               	return
  1977  03B5                     __end_of_Timer1_GetCPM:	
  1978                           
  1979                           	psect	text9
  1980  0186                     __ptext9:	
  1981 ;; *************** function _LCD_Init *****************
  1982 ;; Defined at:
  1983 ;;		line 28 in file "LCD.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0, pclath, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1997 ;;      Params:         0       0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0
  1999 ;;      Temps:          0       2       0       0       0       0
  2000 ;;      Totals:         0       2       0       0       0       0
  2001 ;;Total ram usage:        2 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    5
  2004 ;; This function calls:
  2005 ;;		_LCD_DisplayClear
  2006 ;;		_LCD_WriteData
  2007 ;; This function is called by:
  2008 ;;		_main
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           
  2013                           ;psect for function _LCD_Init
  2014  0186                     _LCD_Init:	
  2015                           
  2016                           ;LCD.c: 30: RA3 = 0;
  2017                           
  2018                           ;incstack = 0
  2019                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2020  0186  0020               	movlb	0	; select bank0
  2021  0187  118C               	bcf	12,3	;volatile
  2022                           
  2023                           ;LCD.c: 31: RA4 = 0;
  2024  0188  120C               	bcf	12,4	;volatile
  2025                           
  2026                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  2027  0189  3002               	movlw	2
  2028  018A  0020               	movlb	0	; select bank0
  2029  018B  00A6               	movwf	??_LCD_Init+1
  2030  018C  3038               	movlw	56
  2031  018D  00A5               	movwf	??_LCD_Init
  2032  018E  30AD               	movlw	173
  2033  018F                     u1627:	
  2034  018F  0B89               	decfsz	9,f
  2035  0190  298F               	goto	u1627
  2036  0191  0BA5               	decfsz	??_LCD_Init,f
  2037  0192  298F               	goto	u1627
  2038  0193  0BA6               	decfsz	??_LCD_Init+1,f
  2039  0194  298F               	goto	u1627
  2040                           
  2041                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  2042  0195  3003               	movlw	3
  2043  0196  0020               	movlb	0	; select bank0
  2044  0197  008D               	movwf	13	;volatile
  2045                           
  2046                           ;LCD.c: 35: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2047  0198  160C               	bsf	12,4	;volatile
  2048  0199  3200               	nop2	;2 cycle nop
  2049  019A  3200               	nop2	;2 cycle nop
  2050  019B  3200               	nop2	;2 cycle nop
  2051  019C  3200               	nop2	;2 cycle nop
  2052  019D  0020               	movlb	0	; select bank0
  2053  019E  120C               	bcf	12,4	;volatile
  2054  019F  3200               	nop2	;2 cycle nop
  2055  01A0  3200               	nop2	;2 cycle nop
  2056  01A1  3200               	nop2	;2 cycle nop
  2057  01A2  3200               	nop2	;2 cycle nop
  2058                           
  2059                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  2060  01A3  3034               	movlw	52
  2061  01A4  0020               	movlb	0	; select bank0
  2062  01A5  00A5               	movwf	??_LCD_Init
  2063  01A6  30F1               	movlw	241
  2064  01A7                     u1637:	
  2065  01A7  0B89               	decfsz	9,f
  2066  01A8  29A7               	goto	u1637
  2067  01A9  0BA5               	decfsz	??_LCD_Init,f
  2068  01AA  29A7               	goto	u1637
  2069  01AB  3200               	nop2
  2070                           
  2071                           ;LCD.c: 37: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2072  01AC  0020               	movlb	0	; select bank0
  2073  01AD  160C               	bsf	12,4	;volatile
  2074  01AE  3200               	nop2	;2 cycle nop
  2075  01AF  3200               	nop2	;2 cycle nop
  2076  01B0  3200               	nop2	;2 cycle nop
  2077  01B1  3200               	nop2	;2 cycle nop
  2078  01B2  0020               	movlb	0	; select bank0
  2079  01B3  120C               	bcf	12,4	;volatile
  2080  01B4  3200               	nop2	;2 cycle nop
  2081  01B5  3200               	nop2	;2 cycle nop
  2082  01B6  3200               	nop2	;2 cycle nop
  2083  01B7  3200               	nop2	;2 cycle nop
  2084                           
  2085                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2086  01B8  3005               	movlw	5
  2087  01B9  0020               	movlb	0	; select bank0
  2088  01BA  00A5               	movwf	??_LCD_Init
  2089  01BB  3026               	movlw	38
  2090  01BC                     u1647:	
  2091  01BC  0B89               	decfsz	9,f
  2092  01BD  29BC               	goto	u1647
  2093  01BE  0BA5               	decfsz	??_LCD_Init,f
  2094  01BF  29BC               	goto	u1647
  2095  01C0  0000               	nop
  2096                           
  2097                           ;LCD.c: 39: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2098  01C1  0020               	movlb	0	; select bank0
  2099  01C2  160C               	bsf	12,4	;volatile
  2100  01C3  3200               	nop2	;2 cycle nop
  2101  01C4  3200               	nop2	;2 cycle nop
  2102  01C5  3200               	nop2	;2 cycle nop
  2103  01C6  3200               	nop2	;2 cycle nop
  2104  01C7  0020               	movlb	0	; select bank0
  2105  01C8  120C               	bcf	12,4	;volatile
  2106  01C9  3200               	nop2	;2 cycle nop
  2107  01CA  3200               	nop2	;2 cycle nop
  2108  01CB  3200               	nop2	;2 cycle nop
  2109  01CC  3200               	nop2	;2 cycle nop
  2110                           
  2111                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2112  01CD  3005               	movlw	5
  2113  01CE  0020               	movlb	0	; select bank0
  2114  01CF  00A5               	movwf	??_LCD_Init
  2115  01D0  3026               	movlw	38
  2116  01D1                     u1657:	
  2117  01D1  0B89               	decfsz	9,f
  2118  01D2  29D1               	goto	u1657
  2119  01D3  0BA5               	decfsz	??_LCD_Init,f
  2120  01D4  29D1               	goto	u1657
  2121  01D5  0000               	nop
  2122                           
  2123                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  2124  01D6  3002               	movlw	2
  2125  01D7  0020               	movlb	0	; select bank0
  2126  01D8  008D               	movwf	13	;volatile
  2127                           
  2128                           ;LCD.c: 42: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2129  01D9  160C               	bsf	12,4	;volatile
  2130  01DA  3200               	nop2	;2 cycle nop
  2131  01DB  3200               	nop2	;2 cycle nop
  2132  01DC  3200               	nop2	;2 cycle nop
  2133  01DD  3200               	nop2	;2 cycle nop
  2134  01DE  0020               	movlb	0	; select bank0
  2135  01DF  120C               	bcf	12,4	;volatile
  2136  01E0  3200               	nop2	;2 cycle nop
  2137  01E1  3200               	nop2	;2 cycle nop
  2138  01E2  3200               	nop2	;2 cycle nop
  2139  01E3  3200               	nop2	;2 cycle nop
  2140                           
  2141                           ;LCD.c: 44: LCD_WriteData(0x28);
  2142  01E4  3028               	movlw	40
  2143  01E5  3182  2245  3181   	fcall	_LCD_WriteData
  2144                           
  2145                           ;LCD.c: 45: LCD_WriteData(0x0c);
  2146  01E8  300C               	movlw	12
  2147  01E9  3182  2245  3181   	fcall	_LCD_WriteData
  2148                           
  2149                           ;LCD.c: 46: LCD_DisplayClear();
  2150  01EC  3183  2355  3181   	fcall	_LCD_DisplayClear
  2151                           
  2152                           ;LCD.c: 47: LCD_WriteData(0x06);
  2153  01EF  3006               	movlw	6
  2154  01F0  3182  2245         	fcall	_LCD_WriteData
  2155  01F2  0008               	return
  2156  01F3                     __end_of_LCD_Init:	
  2157                           
  2158                           	psect	text10
  2159  0355                     __ptext10:	
  2160 ;; *************** function _LCD_DisplayClear *****************
  2161 ;; Defined at:
  2162 ;;		line 73 in file "LCD.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0, pclath, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2176 ;;      Params:         0       0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0       0
  2178 ;;      Temps:          0       1       0       0       0       0
  2179 ;;      Totals:         0       1       0       0       0       0
  2180 ;;Total ram usage:        1 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    4
  2183 ;; This function calls:
  2184 ;;		_LCD_WriteData
  2185 ;; This function is called by:
  2186 ;;		_LCD_Init
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           
  2191                           ;psect for function _LCD_DisplayClear
  2192  0355                     _LCD_DisplayClear:	
  2193                           
  2194                           ;LCD.c: 75: RA3 = 0;
  2195                           
  2196                           ;incstack = 0
  2197                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  2198  0355  0020               	movlb	0	; select bank0
  2199  0356  118C               	bcf	12,3	;volatile
  2200                           
  2201                           ;LCD.c: 76: LCD_WriteData(0x01);
  2202  0357  3001               	movlw	1
  2203  0358  3182  2245  3183   	fcall	_LCD_WriteData
  2204                           
  2205                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  2206  035B  3015               	movlw	21
  2207  035C  0020               	movlb	0	; select bank0
  2208  035D  00A4               	movwf	??_LCD_DisplayClear
  2209  035E  30C6               	movlw	198
  2210  035F                     u1667:	
  2211  035F  0B89               	decfsz	9,f
  2212  0360  2B5F               	goto	u1667
  2213  0361  0BA4               	decfsz	??_LCD_DisplayClear,f
  2214  0362  2B5F               	goto	u1667
  2215  0363  0000               	nop
  2216  0364  0008               	return
  2217  0365                     __end_of_LCD_DisplayClear:	
  2218                           
  2219                           	psect	text11
  2220  0365                     __ptext11:	
  2221 ;; *************** function _LCD_CursorHome *****************
  2222 ;; Defined at:
  2223 ;;		line 84 in file "LCD.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, status,2, status,0, pclath, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2237 ;;      Params:         0       0       0       0       0       0
  2238 ;;      Locals:         0       0       0       0       0       0
  2239 ;;      Temps:          0       1       0       0       0       0
  2240 ;;      Totals:         0       1       0       0       0       0
  2241 ;;Total ram usage:        1 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    4
  2244 ;; This function calls:
  2245 ;;		_LCD_WriteData
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _LCD_CursorHome
  2253  0365                     _LCD_CursorHome:	
  2254                           
  2255                           ;LCD.c: 86: RA3 = 0;
  2256                           
  2257                           ;incstack = 0
  2258                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  2259  0365  0020               	movlb	0	; select bank0
  2260  0366  118C               	bcf	12,3	;volatile
  2261                           
  2262                           ;LCD.c: 87: LCD_WriteData(0x02);
  2263  0367  3002               	movlw	2
  2264  0368  3182  2245  3183   	fcall	_LCD_WriteData
  2265                           
  2266                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  2267  036B  3015               	movlw	21
  2268  036C  0020               	movlb	0	; select bank0
  2269  036D  00A4               	movwf	??_LCD_CursorHome
  2270  036E  30C6               	movlw	198
  2271  036F                     u1677:	
  2272  036F  0B89               	decfsz	9,f
  2273  0370  2B6F               	goto	u1677
  2274  0371  0BA4               	decfsz	??_LCD_CursorHome,f
  2275  0372  2B6F               	goto	u1677
  2276  0373  0000               	nop
  2277  0374  0008               	return
  2278  0375                     __end_of_LCD_CursorHome:	
  2279                           
  2280                           	psect	text12
  2281  0245                     __ptext12:	
  2282 ;; *************** function _LCD_WriteData *****************
  2283 ;; Defined at:
  2284 ;;		line 15 in file "LCD.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  point           1    wreg     char 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  point           1    3[BANK0 ] char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2298 ;;      Params:         0       0       0       0       0       0
  2299 ;;      Locals:         0       1       0       0       0       0
  2300 ;;      Temps:          0       2       0       0       0       0
  2301 ;;      Totals:         0       3       0       0       0       0
  2302 ;;Total ram usage:        3 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    3
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_LCD_Init
  2309 ;;		_putch
  2310 ;;		_LCD_DisplayClear
  2311 ;;		_LCD_CursorHome
  2312 ;;		_LCD_Put
  2313 ;;		_LCD_CursorPosition
  2314 ;;		_LCD_CursorShift
  2315 ;;		_LCD_DispShift
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _LCD_WriteData
  2321  0245                     _LCD_WriteData:	
  2322                           
  2323                           ;incstack = 0
  2324                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  2325                           ;LCD_WriteData@point stored from wreg
  2326  0245  0020               	movlb	0	; select bank0
  2327  0246  00A3               	movwf	LCD_WriteData@point
  2328                           
  2329                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  2330  0247  30D5               	movlw	213
  2331  0248                     u1687:	
  2332  0248  0B89               	decfsz	9,f
  2333  0249  2A48               	goto	u1687
  2334  024A  0000               	nop
  2335                           
  2336                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  2337  024B  0020               	movlb	0	; select bank0
  2338  024C  0823               	movf	LCD_WriteData@point,w
  2339  024D  00A1               	movwf	??_LCD_WriteData
  2340  024E  3004               	movlw	4
  2341  024F                     u455:	
  2342  024F  1003               	clrc
  2343  0250  1BA1               	btfsc	??_LCD_WriteData,7
  2344  0251  1403               	setc
  2345  0252  0CA1               	rrf	??_LCD_WriteData,f
  2346  0253  0B89               	decfsz	9,f
  2347  0254  2A4F               	goto	u455
  2348  0255  3003               	movlw	3
  2349  0256  0521               	andwf	??_LCD_WriteData,w
  2350  0257  00A2               	movwf	??_LCD_WriteData+1
  2351  0258  0E23               	swapf	LCD_WriteData@point,w
  2352  0259  390F               	andlw	15
  2353  025A  1989               	btfsc	9,3
  2354  025B  38F0               	iorlw	240
  2355  025C  390C               	andlw	12
  2356  025D  0709               	addwf	9,w
  2357  025E  0422               	iorwf	??_LCD_WriteData+1,w
  2358  025F  008D               	movwf	13	;volatile
  2359                           
  2360                           ;LCD.c: 19: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2361  0260  160C               	bsf	12,4	;volatile
  2362  0261  3200               	nop2	;2 cycle nop
  2363  0262  3200               	nop2	;2 cycle nop
  2364  0263  3200               	nop2	;2 cycle nop
  2365  0264  3200               	nop2	;2 cycle nop
  2366  0265  0020               	movlb	0	; select bank0
  2367  0266  120C               	bcf	12,4	;volatile
  2368  0267  3200               	nop2	;2 cycle nop
  2369  0268  3200               	nop2	;2 cycle nop
  2370  0269  3200               	nop2	;2 cycle nop
  2371  026A  3200               	nop2	;2 cycle nop
  2372                           
  2373                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  2374  026B  3003               	movlw	3
  2375  026C  0020               	movlb	0	; select bank0
  2376  026D  0523               	andwf	LCD_WriteData@point,w
  2377  026E  00A1               	movwf	??_LCD_WriteData
  2378  026F  0823               	movf	LCD_WriteData@point,w
  2379  0270  390C               	andlw	12
  2380  0271  0709               	addwf	9,w
  2381  0272  0421               	iorwf	??_LCD_WriteData,w
  2382  0273  008D               	movwf	13	;volatile
  2383                           
  2384                           ;LCD.c: 21: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2385  0274  160C               	bsf	12,4	;volatile
  2386  0275  3200               	nop2	;2 cycle nop
  2387  0276  3200               	nop2	;2 cycle nop
  2388  0277  3200               	nop2	;2 cycle nop
  2389  0278  3200               	nop2	;2 cycle nop
  2390  0279  0020               	movlb	0	; select bank0
  2391  027A  120C               	bcf	12,4	;volatile
  2392  027B  3200               	nop2	;2 cycle nop
  2393  027C  3200               	nop2	;2 cycle nop
  2394  027D  3200               	nop2	;2 cycle nop
  2395  027E  3200               	nop2	;2 cycle nop
  2396  027F  0008               	return
  2397  0280                     __end_of_LCD_WriteData:	
  2398                           
  2399                           	psect	text13
  2400  032F                     __ptext13:	
  2401 ;; *************** function _Basic_Init *****************
  2402 ;; Defined at:
  2403 ;;		line 31 in file "main.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;		None
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;		None
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      char 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2417 ;;      Params:         0       0       0       0       0       0
  2418 ;;      Locals:         0       0       0       0       0       0
  2419 ;;      Temps:          0       0       0       0       0       0
  2420 ;;      Totals:         0       0       0       0       0       0
  2421 ;;Total ram usage:        0 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:    3
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_main
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           
  2432                           ;psect for function _Basic_Init
  2433  032F                     _Basic_Init:	
  2434                           
  2435                           ;main.c: 33: OSCCON = 0xF0;
  2436                           
  2437                           ;incstack = 0
  2438                           ; Regs used in _Basic_Init: [wreg+status,2]
  2439  032F  30F0               	movlw	240
  2440  0330  0021               	movlb	1	; select bank1
  2441  0331  0099               	movwf	25	;volatile
  2442                           
  2443                           ;main.c: 37: TRISA = 0x07;
  2444  0332  3007               	movlw	7
  2445  0333  008C               	movwf	12	;volatile
  2446                           
  2447                           ;main.c: 38: ANSELA = 0x07;
  2448  0334  3007               	movlw	7
  2449  0335  0023               	movlb	3	; select bank3
  2450  0336  008C               	movwf	12	;volatile
  2451                           
  2452                           ;main.c: 40: TRISB = 0x40;
  2453  0337  3040               	movlw	64
  2454  0338  0021               	movlb	1	; select bank1
  2455  0339  008D               	movwf	13	;volatile
  2456                           
  2457                           ;main.c: 41: ANSELB = 0x00;
  2458  033A  0023               	movlb	3	; select bank3
  2459  033B  018D               	clrf	13	;volatile
  2460                           
  2461                           ;main.c: 43: APFCON0 = 0x08;
  2462  033C  3008               	movlw	8
  2463  033D  0022               	movlb	2	; select bank2
  2464  033E  009D               	movwf	29	;volatile
  2465                           
  2466                           ;main.c: 44: APFCON1 = 0x00;
  2467  033F  019E               	clrf	30	;volatile
  2468                           
  2469                           ;main.c: 46: PORTA = 0x00;
  2470  0340  0020               	movlb	0	; select bank0
  2471  0341  018C               	clrf	12	;volatile
  2472                           
  2473                           ;main.c: 47: PORTB = 0x00;
  2474  0342  018D               	clrf	13	;volatile
  2475  0343  0008               	return
  2476  0344                     __end_of_Basic_Init:	
  2477                           ;main.c: 49: return 0;
  2478                           ;	Return value of _Basic_Init is never used
  2479                           
  2480                           
  2481                           	psect	intentry
  2482  0004                     __pintentry:	
  2483 ;; *************** function _Handler *****************
  2484 ;; Defined at:
  2485 ;;		line 52 in file "main.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;		None
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;		None
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0, pclath, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2499 ;;      Params:         0       0       0       0       0       0
  2500 ;;      Locals:         0       0       0       0       0       0
  2501 ;;      Temps:          0       1       0       0       0       0
  2502 ;;      Totals:         0       1       0       0       0       0
  2503 ;;Total ram usage:        1 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    2
  2506 ;; This function calls:
  2507 ;;		_Timer1_Count200us
  2508 ;;		_Timer1_DetectAssignCount
  2509 ;;		_Timer4_Handler
  2510 ;; This function is called by:
  2511 ;;		Interrupt level 1
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515  0004                     _Handler:	
  2516                           
  2517                           ;incstack = 0
  2518  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2519                           
  2520                           ; Regs used in _Handler: [wreg+status,2+status,0+pclath+cstack]
  2521  0005  3180               	pagesel	$
  2522  0006  0020               	movlb	0	; select bank0
  2523  0007  087F               	movf	127,w
  2524  0008  00A0               	movwf	??_Handler
  2525                           
  2526                           ;main.c: 54: if(Timer4_Handler())
  2527  0009  3183  2383  3180   	fcall	_Timer4_Handler
  2528  000C  3A00               	xorlw	0
  2529  000D  1903               	skipnz
  2530  000E  2812               	goto	i1l179
  2531                           
  2532                           ;main.c: 55: Timer1_Count200us();
  2533  000F  3183  2398  3180   	fcall	_Timer1_Count200us
  2534  0012                     i1l179:	
  2535                           
  2536                           ;main.c: 57: if(Timer1_DetectAssignCount())
  2537  0012  3180  20F9  3180   	fcall	_Timer1_DetectAssignCount
  2538  0015  3A00               	xorlw	0
  2539  0016  1903               	skipnz
  2540  0017  281B               	goto	i1l181
  2541                           
  2542                           ;main.c: 58: LATA6 = !LATA6;
  2543  0018  3040               	movlw	64
  2544  0019  0022               	movlb	2	; select bank2
  2545  001A  068C               	xorwf	12,f
  2546  001B                     i1l181:	
  2547  001B  0020               	movlb	0	; select bank0
  2548  001C  0820               	movf	??_Handler,w
  2549  001D  00FF               	movwf	127
  2550  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2551  001F  0009               	retfie
  2552  0020                     __end_of_Handler:	
  2553                           
  2554                           	psect	text15
  2555  0383                     __ptext15:	
  2556 ;; *************** function _Timer4_Handler *****************
  2557 ;; Defined at:
  2558 ;;		line 17 in file "Timer4.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      unsigned char 
  2565 ;; Registers used:
  2566 ;;		wreg
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2572 ;;      Params:         0       0       0       0       0       0
  2573 ;;      Locals:         0       0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0
  2575 ;;      Totals:         0       0       0       0       0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_Handler
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           
  2586                           ;psect for function _Timer4_Handler
  2587  0383                     _Timer4_Handler:	
  2588                           
  2589                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in _Timer4_Handler: [wreg]
  2593  0383  0021               	movlb	1	; select bank1
  2594  0384  1C93               	btfss	19,1	;volatile
  2595  0385  2B8C               	goto	i1l943
  2596  0386  0020               	movlb	0	; select bank0
  2597  0387  1C93               	btfss	19,1	;volatile
  2598  0388  2B8C               	goto	i1l943
  2599                           
  2600                           ;Timer4.c: 20: {
  2601                           ;Timer4.c: 21: TMR4IF = 0;
  2602  0389  1093               	bcf	19,1	;volatile
  2603                           
  2604                           ;Timer4.c: 22: return 1;
  2605  038A  3001               	movlw	1
  2606  038B  0008               	return
  2607  038C                     i1l943:	
  2608                           
  2609                           ;Timer4.c: 23: }
  2610                           ;Timer4.c: 24: return 0;
  2611  038C  3000               	movlw	0
  2612  038D  0008               	return
  2613  038E                     __end_of_Timer4_Handler:	
  2614                           
  2615                           	psect	text16
  2616  00F9                     __ptext16:	
  2617 ;; *************** function _Timer1_DetectAssignCount *****************
  2618 ;; Defined at:
  2619 ;;		line 49 in file "Timer1.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      unsigned char 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2633 ;;      Params:         0       0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    1
  2640 ;; This function calls:
  2641 ;;		___lldiv
  2642 ;; This function is called by:
  2643 ;;		_Handler
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _Timer1_DetectAssignCount
  2649  00F9                     _Timer1_DetectAssignCount:	
  2650                           
  2651                           ;Timer1.c: 51: static uint16_t PreviousTimer1;
  2652                           ;Timer1.c: 52: if((timecount>50000)&&(TMR1==PreviousTimer1))
  2653                           
  2654                           ;incstack = 0
  2655                           ; Regs used in _Timer1_DetectAssignCount: [wreg+status,2+status,0+pclath+cstack]
  2656  00F9  0020               	movlb	0	; select bank0
  2657  00FA  0844               	movf	_timecount+3,w
  2658  00FB  1D03               	btfss	3,2
  2659  00FC  2906               	goto	i1l1357
  2660  00FD  0843               	movf	_timecount+2,w
  2661  00FE  1D03               	btfss	3,2
  2662  00FF  2906               	goto	i1l1357
  2663  0100  3051               	movlw	81
  2664  0101  0241               	subwf	_timecount,w
  2665  0102  30C3               	movlw	195
  2666  0103  3B42               	subwfb	_timecount+1,w
  2667  0104  1C03               	btfss	3,0
  2668  0105  2916               	goto	i1l99
  2669  0106                     i1l1357:	
  2670  0106  0858               	movf	Timer1_DetectAssignCount@PreviousTimer1+1,w
  2671  0107  0617               	xorwf	23,w	;volatile
  2672  0108  1D03               	skipz
  2673  0109  290C               	goto	u102_25
  2674  010A  0857               	movf	Timer1_DetectAssignCount@PreviousTimer1,w
  2675  010B  0616               	xorwf	22,w	;volatile
  2676  010C                     u102_25:	
  2677  010C  1D03               	skipz
  2678  010D  2916               	goto	i1l99
  2679                           
  2680                           ;Timer1.c: 53: SigmaCPM = 0;
  2681  010E  3000               	movlw	0
  2682  010F  00D0               	movwf	_SigmaCPM+3
  2683  0110  3000               	movlw	0
  2684  0111  00CF               	movwf	_SigmaCPM+2
  2685  0112  3000               	movlw	0
  2686  0113  00CE               	movwf	_SigmaCPM+1
  2687  0114  3000               	movlw	0
  2688  0115  00CD               	movwf	_SigmaCPM
  2689  0116                     i1l99:	
  2690                           
  2691                           ;Timer1.c: 54: PreviousTimer1 = (uint16_t)TMR1;
  2692  0116  0817               	movf	23,w	;volatile
  2693  0117  00D8               	movwf	Timer1_DetectAssignCount@PreviousTimer1+1
  2694  0118  0816               	movf	22,w	;volatile
  2695  0119  00D7               	movwf	Timer1_DetectAssignCount@PreviousTimer1
  2696                           
  2697                           ;Timer1.c: 56: RenewalCPM++;
  2698  011A  3001               	movlw	1
  2699  011B  07D9               	addwf	_RenewalCPM,f
  2700  011C  3000               	movlw	0
  2701  011D  3DDA               	addwfc	_RenewalCPM+1,f
  2702                           
  2703                           ;Timer1.c: 57: if(RenewalCPM>5000)
  2704  011E  3013               	movlw	19
  2705  011F  025A               	subwf	_RenewalCPM+1,w
  2706  0120  3089               	movlw	137
  2707  0121  1903               	skipnz
  2708  0122  0259               	subwf	_RenewalCPM,w
  2709  0123  1C03               	skipc
  2710  0124  2943               	goto	i1l1365
  2711                           
  2712                           ;Timer1.c: 58: {
  2713                           ;Timer1.c: 59: RenewalCPM = 0;
  2714  0125  01D9               	clrf	_RenewalCPM
  2715  0126  01DA               	clrf	_RenewalCPM+1
  2716                           
  2717                           ;Timer1.c: 60: AverageCPM = SigmaCPM/Num_of_Detect;
  2718  0127  084C               	movf	_Num_of_Detect+3,w
  2719  0128  00F3               	movwf	___lldiv@divisor+3
  2720  0129  084B               	movf	_Num_of_Detect+2,w
  2721  012A  00F2               	movwf	___lldiv@divisor+2
  2722  012B  084A               	movf	_Num_of_Detect+1,w
  2723  012C  00F1               	movwf	___lldiv@divisor+1
  2724  012D  0849               	movf	_Num_of_Detect,w
  2725  012E  00F0               	movwf	___lldiv@divisor
  2726  012F  0850               	movf	_SigmaCPM+3,w
  2727  0130  00F7               	movwf	___lldiv@dividend+3
  2728  0131  084F               	movf	_SigmaCPM+2,w
  2729  0132  00F6               	movwf	___lldiv@dividend+2
  2730  0133  084E               	movf	_SigmaCPM+1,w
  2731  0134  00F5               	movwf	___lldiv@dividend+1
  2732  0135  084D               	movf	_SigmaCPM,w
  2733  0136  00F4               	movwf	___lldiv@dividend
  2734  0137  3181  21F3  3180   	fcall	___lldiv
  2735  013A  0873               	movf	?___lldiv+3,w
  2736  013B  0020               	movlb	0	; select bank0
  2737  013C  00C8               	movwf	_AverageCPM+3
  2738  013D  0872               	movf	?___lldiv+2,w
  2739  013E  00C7               	movwf	_AverageCPM+2
  2740  013F  0871               	movf	?___lldiv+1,w
  2741  0140  00C6               	movwf	_AverageCPM+1
  2742  0141  0870               	movf	?___lldiv,w
  2743  0142  00C5               	movwf	_AverageCPM
  2744  0143                     i1l1365:	
  2745                           
  2746                           ;Timer1.c: 61: }
  2747                           ;Timer1.c: 63: if(TMR1IF&&TMR1IE)
  2748  0143  1C11               	btfss	17,0	;volatile
  2749  0144  2984               	goto	i1l1389
  2750  0145  0021               	movlb	1	; select bank1
  2751  0146  1C11               	btfss	17,0	;volatile
  2752  0147  2984               	goto	i1l1389
  2753                           
  2754                           ;Timer1.c: 64: {
  2755                           ;Timer1.c: 65: SigmaCount += 10UL;
  2756  0148  300A               	movlw	10
  2757  0149  0020               	movlb	0	; select bank0
  2758  014A  07D1               	addwf	_SigmaCount,f
  2759  014B  3000               	movlw	0
  2760  014C  3DD2               	addwfc	_SigmaCount+1,f
  2761  014D  3000               	movlw	0
  2762  014E  3DD3               	addwfc	_SigmaCount+2,f
  2763  014F  3000               	movlw	0
  2764  0150  3DD4               	addwfc	_SigmaCount+3,f
  2765                           
  2766                           ;Timer1.c: 67: SigmaCPM += (uint16_t)((10UL * 12000UL) / timecount);
  2767  0151  0844               	movf	_timecount+3,w
  2768  0152  00F3               	movwf	___lldiv@divisor+3
  2769  0153  0843               	movf	_timecount+2,w
  2770  0154  00F2               	movwf	___lldiv@divisor+2
  2771  0155  0842               	movf	_timecount+1,w
  2772  0156  00F1               	movwf	___lldiv@divisor+1
  2773  0157  0841               	movf	_timecount,w
  2774  0158  00F0               	movwf	___lldiv@divisor
  2775  0159  3000               	movlw	0
  2776  015A  00F7               	movwf	___lldiv@dividend+3
  2777  015B  3001               	movlw	1
  2778  015C  00F6               	movwf	___lldiv@dividend+2
  2779  015D  30D4               	movlw	212
  2780  015E  00F5               	movwf	___lldiv@dividend+1
  2781  015F  30C0               	movlw	192
  2782  0160  00F4               	movwf	___lldiv@dividend
  2783  0161  3181  21F3         	fcall	___lldiv
  2784  0163  0870               	movf	?___lldiv,w
  2785  0164  0020               	movlb	0	; select bank0
  2786  0165  07CD               	addwf	_SigmaCPM,f
  2787  0166  0871               	movf	?___lldiv+1,w
  2788  0167  3DCE               	addwfc	_SigmaCPM+1,f
  2789  0168  3000               	movlw	0
  2790  0169  3DCF               	addwfc	_SigmaCPM+2,f
  2791  016A  3DD0               	addwfc	_SigmaCPM+3,f
  2792                           
  2793                           ;Timer1.c: 68: Num_of_Detect++;
  2794  016B  3001               	movlw	1
  2795  016C  07C9               	addwf	_Num_of_Detect,f
  2796  016D  3000               	movlw	0
  2797  016E  3DCA               	addwfc	_Num_of_Detect+1,f
  2798  016F  3000               	movlw	0
  2799  0170  3DCB               	addwfc	_Num_of_Detect+2,f
  2800  0171  3000               	movlw	0
  2801  0172  3DCC               	addwfc	_Num_of_Detect+3,f
  2802                           
  2803                           ;Timer1.c: 70: timecount = 0;
  2804  0173  3000               	movlw	0
  2805  0174  00C4               	movwf	_timecount+3
  2806  0175  3000               	movlw	0
  2807  0176  00C3               	movwf	_timecount+2
  2808  0177  3000               	movlw	0
  2809  0178  00C2               	movwf	_timecount+1
  2810  0179  3000               	movlw	0
  2811  017A  00C1               	movwf	_timecount
  2812                           
  2813                           ;Timer1.c: 71: {TMR1ON = 0;; TMR1 = (uint16_t)0xFFFF-10UL; TMR1ON = 1;; };
  2814  017B  1018               	bcf	24,0	;volatile
  2815  017C  30FF               	movlw	255
  2816  017D  0097               	movwf	23	;volatile
  2817  017E  30F5               	movlw	245
  2818  017F  0096               	movwf	22	;volatile
  2819  0180  1418               	bsf	24,0	;volatile
  2820                           
  2821                           ;Timer1.c: 72: TMR1IF = 0;
  2822  0181  1011               	bcf	17,0	;volatile
  2823                           
  2824                           ;Timer1.c: 73: return 1;
  2825  0182  3001               	movlw	1
  2826  0183  0008               	return
  2827  0184                     i1l1389:	
  2828                           
  2829                           ;Timer1.c: 74: }
  2830                           ;Timer1.c: 75: return 0;
  2831  0184  3000               	movlw	0
  2832  0185  0008               	return
  2833  0186                     __end_of_Timer1_DetectAssignCount:	
  2834                           
  2835                           	psect	text17
  2836  01F3                     __ptext17:	
  2837 ;; *************** function ___lldiv *****************
  2838 ;; Defined at:
  2839 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  divisor         4    0[COMMON] unsigned long 
  2842 ;;  dividend        4    4[COMMON] unsigned long 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  quotient        4    9[COMMON] unsigned long 
  2845 ;;  counter         1   13[COMMON] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  4    0[COMMON] unsigned long 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2855 ;;      Params:         8       0       0       0       0       0
  2856 ;;      Locals:         5       0       0       0       0       0
  2857 ;;      Temps:          1       0       0       0       0       0
  2858 ;;      Totals:        14       0       0       0       0       0
  2859 ;;Total ram usage:       14 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_Timer1_DetectAssignCount
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           
  2869                           ;psect for function ___lldiv
  2870  01F3                     ___lldiv:	
  2871                           
  2872                           ;incstack = 0
  2873                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2874  01F3  3000               	movlw	0
  2875  01F4  00FC               	movwf	___lldiv@quotient+3
  2876  01F5  3000               	movlw	0
  2877  01F6  00FB               	movwf	___lldiv@quotient+2
  2878  01F7  3000               	movlw	0
  2879  01F8  00FA               	movwf	___lldiv@quotient+1
  2880  01F9  3000               	movlw	0
  2881  01FA  00F9               	movwf	___lldiv@quotient
  2882  01FB  0873               	movf	___lldiv@divisor+3,w
  2883  01FC  0472               	iorwf	___lldiv@divisor+2,w
  2884  01FD  0471               	iorwf	___lldiv@divisor+1,w
  2885  01FE  0470               	iorwf	___lldiv@divisor,w
  2886  01FF  1903               	skipnz
  2887  0200  2A3C               	goto	i1l1215
  2888  0201  01FD               	clrf	___lldiv@counter
  2889  0202  0AFD               	incf	___lldiv@counter,f
  2890  0203                     i1l1201:	
  2891  0203  1BF3               	btfsc	___lldiv@divisor+3,7
  2892  0204  2A11               	goto	i1l1203
  2893  0205  3001               	movlw	1
  2894  0206                     u82_25:	
  2895  0206  35F0               	lslf	___lldiv@divisor,f
  2896  0207  0DF1               	rlf	___lldiv@divisor+1,f
  2897  0208  0DF2               	rlf	___lldiv@divisor+2,f
  2898  0209  0DF3               	rlf	___lldiv@divisor+3,f
  2899  020A  0B89               	decfsz	9,f
  2900  020B  2A06               	goto	u82_25
  2901  020C  3001               	movlw	1
  2902  020D  00F8               	movwf	??___lldiv
  2903  020E  0878               	movf	??___lldiv,w
  2904  020F  07FD               	addwf	___lldiv@counter,f
  2905  0210  2A03               	goto	i1l1201
  2906  0211                     i1l1203:	
  2907  0211  3001               	movlw	1
  2908  0212                     u84_25:	
  2909  0212  35F9               	lslf	___lldiv@quotient,f
  2910  0213  0DFA               	rlf	___lldiv@quotient+1,f
  2911  0214  0DFB               	rlf	___lldiv@quotient+2,f
  2912  0215  0DFC               	rlf	___lldiv@quotient+3,f
  2913  0216  0B89               	decfsz	9,f
  2914  0217  2A12               	goto	u84_25
  2915  0218  0873               	movf	___lldiv@divisor+3,w
  2916  0219  0277               	subwf	___lldiv@dividend+3,w
  2917  021A  1D03               	skipz
  2918  021B  2A26               	goto	u85_25
  2919  021C  0872               	movf	___lldiv@divisor+2,w
  2920  021D  0276               	subwf	___lldiv@dividend+2,w
  2921  021E  1D03               	skipz
  2922  021F  2A26               	goto	u85_25
  2923  0220  0871               	movf	___lldiv@divisor+1,w
  2924  0221  0275               	subwf	___lldiv@dividend+1,w
  2925  0222  1D03               	skipz
  2926  0223  2A26               	goto	u85_25
  2927  0224  0870               	movf	___lldiv@divisor,w
  2928  0225  0274               	subwf	___lldiv@dividend,w
  2929  0226                     u85_25:	
  2930  0226  1C03               	skipc
  2931  0227  2A31               	goto	i1l1211
  2932  0228  0870               	movf	___lldiv@divisor,w
  2933  0229  02F4               	subwf	___lldiv@dividend,f
  2934  022A  0871               	movf	___lldiv@divisor+1,w
  2935  022B  3BF5               	subwfb	___lldiv@dividend+1,f
  2936  022C  0872               	movf	___lldiv@divisor+2,w
  2937  022D  3BF6               	subwfb	___lldiv@dividend+2,f
  2938  022E  0873               	movf	___lldiv@divisor+3,w
  2939  022F  3BF7               	subwfb	___lldiv@dividend+3,f
  2940  0230  1479               	bsf	___lldiv@quotient,0
  2941  0231                     i1l1211:	
  2942  0231  3001               	movlw	1
  2943  0232                     u86_25:	
  2944  0232  36F3               	lsrf	___lldiv@divisor+3,f
  2945  0233  0CF2               	rrf	___lldiv@divisor+2,f
  2946  0234  0CF1               	rrf	___lldiv@divisor+1,f
  2947  0235  0CF0               	rrf	___lldiv@divisor,f
  2948  0236  0B89               	decfsz	9,f
  2949  0237  2A32               	goto	u86_25
  2950  0238  3001               	movlw	1
  2951  0239  02FD               	subwf	___lldiv@counter,f
  2952  023A  1D03               	btfss	3,2
  2953  023B  2A11               	goto	i1l1203
  2954  023C                     i1l1215:	
  2955  023C  087C               	movf	___lldiv@quotient+3,w
  2956  023D  00F3               	movwf	?___lldiv+3
  2957  023E  087B               	movf	___lldiv@quotient+2,w
  2958  023F  00F2               	movwf	?___lldiv+2
  2959  0240  087A               	movf	___lldiv@quotient+1,w
  2960  0241  00F1               	movwf	?___lldiv+1
  2961  0242  0879               	movf	___lldiv@quotient,w
  2962  0243  00F0               	movwf	?___lldiv
  2963  0244  0008               	return
  2964  0245                     __end_of___lldiv:	
  2965                           
  2966                           	psect	text18
  2967  0398                     __ptext18:	
  2968 ;; *************** function _Timer1_Count200us *****************
  2969 ;; Defined at:
  2970 ;;		line 44 in file "Timer1.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2984 ;;      Params:         0       0       0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0
  2987 ;;      Totals:         0       0       0       0       0       0
  2988 ;;Total ram usage:        0 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_Handler
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _Timer1_Count200us
  2999  0398                     _Timer1_Count200us:	
  3000                           
  3001                           ;Timer1.c: 46: timecount++;
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in _Timer1_Count200us: [wreg]
  3005  0398  3001               	movlw	1
  3006  0399  0020               	movlb	0	; select bank0
  3007  039A  07C1               	addwf	_timecount,f
  3008  039B  3000               	movlw	0
  3009  039C  3DC2               	addwfc	_timecount+1,f
  3010  039D  3000               	movlw	0
  3011  039E  3DC3               	addwfc	_timecount+2,f
  3012  039F  3000               	movlw	0
  3013  03A0  3DC4               	addwfc	_timecount+3,f
  3014  03A1  0008               	return
  3015  03A2                     __end_of_Timer1_Count200us:	
  3016  007E                     btemp	set	126	;btemp
  3017  007E                     int$flags	set	126
  3018  007E                     wtemp0	set	126


Data Sizes:
    Strings     7
    Constant    10
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      59
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Timer1_DetectAssignCount->___lldiv

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_LCD_WriteData
    ___lwmod->___lwdiv
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1393
                         _Basic_Init
                     _LCD_CursorHome
                           _LCD_Init
                      _Timer1_GetCPM
                 _Timer1_GetCountSum
                        _Timer1_Init
                        _Timer4_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              26    18      8    1129
                                             15 BANK0     18    10      8
                      _Timer1_GetCPM (ARG)
                 _Timer1_GetCountSum (ARG)
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     110
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              9 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              1 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                              1 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        2     0      2       0
                                              1 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              5 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0      88
                                              1 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Handler                                              1     1      0     374
                                              0 BANK0      1     1      0
                  _Timer1_Count200us
           _Timer1_DetectAssignCount
                     _Timer4_Handler
 ---------------------------------------------------------------------------------
 (5) _Timer4_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Timer1_DetectAssignCount                             0     0      0     374
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (5) _Timer1_Count200us                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
   _Timer1_GetCountSum
   _Timer1_Init
   _Timer4_Init
   _printf
     _Timer1_GetCPM (ARG)
     _Timer1_GetCountSum (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Timer1_Count200us
   _Timer1_DetectAssignCount
     ___lldiv
   _Timer4_Handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      49       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     21      3B       6       73.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      49      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon May 22 12:47:05 2017

                        _LCD_CursorHome 0365                             __CFG_CP$OFF 0000  
                                   l200 006D                                     l202 0051  
                                   l214 00F8                                     l170 02C3  
                                   _GIE 005F                                     _RA3 0063  
                                   _RA4 0064                                     _PR4 0416  
                          __CFG_CPD$OFF 0000                                     u455 024F  
                                   u915 0296                                     u925 02A0  
                                   u935 02A8                                     u965 02ED  
                                   u895 028C                                     u985 02FC  
                                   u995 0303                            __CFG_BORV$LO 0000  
                                   wreg 0009                              _Basic_Init 032F  
                          __CFG_LVP$OFF 0000              ??_Timer1_DetectAssignCount 007E  
                                  l1231 0295                                    l1241 02B0  
                                  l1237 02A7                                    l1229 0289  
                                  l1253 02EA                                    l1255 02F6  
                                  l1263 030B                                    l1441 0086  
                                  l1425 004E                                    l1259 0302  
                                  l1451 0097                                    l1461 00BE  
                                  l1445 0091                                    l1429 0053  
                                  l1457 00B6                                    l1467 00C3  
                                  l1469 0032                                    STR_1 034E  
                                  u1105 00AC                                    u1627 018F  
                                  u1637 01A7                                    u1647 01BC  
                                  u1657 01D1                                    u1667 035F  
                                  u1677 036F                                    u1687 0248  
                                  _PEIE 005E                                    i1l99 0116  
                                  _TMR1 0016                                    _TMR4 0415  
                                  _WPUB 020D                            __CFG_WRT$OFF 0000  
                                  _main 02B5                                    fsr0h 0005  
                                  fsr1h 0007                                    indf0 0000  
                                  fsr0l 0004                                    fsr1l 0006  
                                  btemp 007E                           __CFG_BOREN$ON 0000  
                                  start 0020                           __CFG_IESO$OFF 0000  
                       __end_of_Handler 0020                  __end_of_LCD_CursorHome 0375  
                         _LCD_WriteData 0245                           __CFG_MCLRE$ON 0000  
              __end_of_LCD_DisplayClear 0365                        __end_of_LCD_Init 01F3  
                         __CFG_PLLEN$ON 0000                                   ?_main 0070  
                         __CFG_WDTE$OFF 0000                         __end_of___lldiv 0245  
                                 _T1CON 0018                                   _LATA6 0866  
                                 _T4CON 0417                         __end_of___lwdiv 02B5  
                                 i1l181 001B                         __end_of___lwmod 0310  
                                 i1l179 0012                                   i1l943 038C  
                                 _PORTA 000C                                   _PORTB 000D  
                                 _TRISA 008C                                   _TRISB 008D  
                                 u82_25 0206                              _AverageCPM 0045  
                                 u84_25 0212                                   u85_25 0226  
                                 u86_25 0232                           __CFG_PWRTE$ON 0000  
                        __CFG_FCMEN$OFF 0000                         __end_of_dpowers 034E  
                                 _errno 0055                                   _putch 03A2  
                 __end_of_Timer1_GetCPM 03B5             __size_of_Timer1_GetCountSum 000A  
                                 status 0003                                   wtemp0 007E  
                        ?_LCD_WriteData 0070                         ?_LCD_CursorHome 0070  
                       __initialization 0022                            __end_of_main 02E3  
                                ??_main 0041                             ?_Basic_Init 0070  
                                _ANSELA 018C                                  ?_putch 0070  
                                _ANSELB 018D                                  _T1GCON 0019  
                                i1l1201 0203                                  i1l1211 0231  
                                i1l1203 0211                                  u102_25 010C  
                                i1l1215 023C                                  i1l1365 0143  
                                i1l1357 0106                                  i1l1389 0184  
                            _RenewalCPM 0059                                  _OSCCON 0099  
                        _Timer4_Handler 0383                                  _TMR1IE 0488  
                                _TMR1IF 0088                               ??_Handler 0020  
                                _TMR4IE 0499                                  _TMR4IF 0099  
                                _TMR1ON 00C0                              _SigmaCount 0051  
                         ??_Timer1_Init 0021                           ??_Timer4_Init 0021  
                             ??___lldiv 0078                               ??___lwdiv 0025  
                             ??___lwmod 002D                                  _printf 002D  
                                putch@c 0024                  __end_of_Timer4_Handler 038E  
               __end_of__initialization 0029                               ?_LCD_Init 0070  
                       ??_LCD_WriteData 0021                          __pcstackCOMMON 0070  
                   __size_of_Basic_Init 0015                           __end_of_putch 03A9  
                   __end_of_Timer1_Init 032F                     __end_of_Timer4_Init 0383  
                               ??_putch 0024                         ?_Timer4_Handler 0070  
                            __pbssBANK0 0041                              ??_LCD_Init 0025  
                            __pmaintext 02B5                              __pintentry 0004  
                     ?_LCD_DisplayClear 0070                                 _APFCON0 011D  
                               _APFCON1 011E                                 ?_printf 002F  
                    ??_LCD_DisplayClear 0024                        ??_LCD_CursorHome 0024  
                               _Handler 0004                       _Timer1_Count200us 0398  
                           _Timer1_Init 0310                             _Timer4_Init 0375  
                    ?_Timer1_Count200us 0070       __size_of_Timer1_DetectAssignCount 008D  
             ?_Timer1_DetectAssignCount 0070                                 ___lldiv 01F3  
                               ___lwdiv 0280                                 ___lwmod 02E3  
                       __CFG_STVREN$OFF 0000                                 __ptext1 002D  
                               __ptext2 03A2                                 __ptext3 02E3  
                               __ptext4 0280                                 __ptext5 0375  
                               __ptext6 0310                                 __ptext7 038E  
                               __ptext8 03AF                                 __ptext9 0186  
                   ??_Timer1_Count200us 0070                         __size_of_printf 00CC  
                               _dpowers 0344                            ??_Basic_Init 0021  
                               clrloop0 03AA              __end_of_Timer1_GetCountSum 0398  
                  end_of_initialization 0029               __end_of_Timer1_Count200us 03A2  
                       ___lldiv@divisor 0070                         ___lldiv@counter 007D  
                               printf@c 0040                                 printf@f 002F  
                    __end_of_Basic_Init 0344                            __pstringtext 0344  
                __size_of_Timer1_GetCPM 0006                        __CFG_FOSC$INTOSC 0000  
                     __size_of_LCD_Init 006D                          __end_of_printf 00F9  
                      ??_Timer4_Handler 0070                     start_initialization 0022  
                         _Timer1_GetCPM 03AF              __size_of_Timer1_Count200us 000A  
                 __end_of_LCD_WriteData 0280                                ??_printf 0037  
                             ___latbits 0001                           __pcstackBANK0 0020  
                         _Num_of_Detect 0049               __size_of_LCD_DisplayClear 0010  
                        ?_Timer1_GetCPM 0021        __end_of_Timer1_DetectAssignCount 0186  
                              ?_Handler 0070                            ?_Timer1_Init 0070  
                      ___lwdiv@dividend 0023                            ?_Timer4_Init 0070  
                              ?___lldiv 0070                                ?___lwdiv 0021  
                              ?___lwmod 0029  Timer1_DetectAssignCount@PreviousTimer1 0057  
                      ___lwdiv@quotient 0026                          __size_of_putch 0007  
                              _LCD_Init 0186                               clear_ram0 03A9  
                    _Timer1_GetCountSum 038E                               _timecount 0041  
                   ?_Timer1_GetCountSum 0021                              printf@flag 003D  
                            printf@prec 003B                         ??_Timer1_GetCPM 0023  
                  ??_Timer1_GetCountSum 0025                        __size_of_Handler 001C  
                              _SigmaCPM 004D                _Timer1_DetectAssignCount 00F9  
               __size_of_LCD_CursorHome 0010                        __size_of___lldiv 0052  
                      __size_of___lwdiv 0035                        __size_of___lwmod 002D  
                    LCD_WriteData@point 0023                         ___lwdiv@divisor 0021  
                       ___lwdiv@counter 0028                                __ptext10 0355  
                              __ptext11 0365                                __ptext12 0245  
                              __ptext13 032F                                __ptext15 0383  
                              __ptext16 00F9                                __ptext17 01F3  
                              __ptext18 0398                        _LCD_DisplayClear 0355  
                         __size_of_main 002E                    __size_of_Timer1_Init 001F  
                              int$flags 007E                    __size_of_Timer4_Init 000E  
                             printf@val 003E                                intlevel1 0000  
                      ___lwmod@dividend 002B                        ___lldiv@dividend 0074  
                     __CFG_CLKOUTEN$OFF 0000                                printf@ap 003C  
                      ___lldiv@quotient 0079                         ___lwmod@divisor 0029  
                       ___lwmod@counter 002E                  __size_of_LCD_WriteData 003B  
               __size_of_Timer4_Handler 000B  
