

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat May 20 04:36:52 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 1.41
    65                           ; Generated 25/01/2017 GMT
    66                           ; 
    67                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F1827 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  0111                     	;# 
   147  0112                     	;# 
   148  0113                     	;# 
   149  0114                     	;# 
   150  0115                     	;# 
   151  0116                     	;# 
   152  0117                     	;# 
   153  0118                     	;# 
   154  0119                     	;# 
   155  011A                     	;# 
   156  011B                     	;# 
   157  011D                     	;# 
   158  011E                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0191                     	;# 
   162  0191                     	;# 
   163  0192                     	;# 
   164  0193                     	;# 
   165  0193                     	;# 
   166  0193                     	;# 
   167  0194                     	;# 
   168  0195                     	;# 
   169  0196                     	;# 
   170  0199                     	;# 
   171  019A                     	;# 
   172  019B                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019C                     	;# 
   177  019C                     	;# 
   178  019D                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  020C                     	;# 
   182  020D                     	;# 
   183  0211                     	;# 
   184  0211                     	;# 
   185  0212                     	;# 
   186  0212                     	;# 
   187  0213                     	;# 
   188  0213                     	;# 
   189  0214                     	;# 
   190  0214                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0219                     	;# 
   199  021A                     	;# 
   200  021B                     	;# 
   201  021C                     	;# 
   202  021D                     	;# 
   203  021E                     	;# 
   204  021F                     	;# 
   205  0291                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0295                     	;# 
   211  0295                     	;# 
   212  0296                     	;# 
   213  0298                     	;# 
   214  0298                     	;# 
   215  0299                     	;# 
   216  029A                     	;# 
   217  029B                     	;# 
   218  029C                     	;# 
   219  029C                     	;# 
   220  029D                     	;# 
   221  029E                     	;# 
   222  029E                     	;# 
   223  0311                     	;# 
   224  0311                     	;# 
   225  0312                     	;# 
   226  0313                     	;# 
   227  0318                     	;# 
   228  0318                     	;# 
   229  0319                     	;# 
   230  031A                     	;# 
   231  0394                     	;# 
   232  0395                     	;# 
   233  0396                     	;# 
   234  039A                     	;# 
   235  039C                     	;# 
   236  039D                     	;# 
   237  039E                     	;# 
   238  039F                     	;# 
   239  0415                     	;# 
   240  0416                     	;# 
   241  0417                     	;# 
   242  041C                     	;# 
   243  041D                     	;# 
   244  041E                     	;# 
   245  0FE4                     	;# 
   246  0FE5                     	;# 
   247  0FE6                     	;# 
   248  0FE7                     	;# 
   249  0FE8                     	;# 
   250  0FE9                     	;# 
   251  0FEA                     	;# 
   252  0FEB                     	;# 
   253  0FED                     	;# 
   254  0FEE                     	;# 
   255  0FEF                     	;# 
   256  0000                     	;# 
   257  0001                     	;# 
   258  0002                     	;# 
   259  0003                     	;# 
   260  0004                     	;# 
   261  0005                     	;# 
   262  0006                     	;# 
   263  0007                     	;# 
   264  0008                     	;# 
   265  0009                     	;# 
   266  000A                     	;# 
   267  000B                     	;# 
   268  000C                     	;# 
   269  000D                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0014                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  0111                     	;# 
   305  0112                     	;# 
   306  0113                     	;# 
   307  0114                     	;# 
   308  0115                     	;# 
   309  0116                     	;# 
   310  0117                     	;# 
   311  0118                     	;# 
   312  0119                     	;# 
   313  011A                     	;# 
   314  011B                     	;# 
   315  011D                     	;# 
   316  011E                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0191                     	;# 
   320  0191                     	;# 
   321  0192                     	;# 
   322  0193                     	;# 
   323  0193                     	;# 
   324  0193                     	;# 
   325  0194                     	;# 
   326  0195                     	;# 
   327  0196                     	;# 
   328  0199                     	;# 
   329  019A                     	;# 
   330  019B                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019C                     	;# 
   335  019C                     	;# 
   336  019D                     	;# 
   337  019E                     	;# 
   338  019F                     	;# 
   339  020C                     	;# 
   340  020D                     	;# 
   341  0211                     	;# 
   342  0211                     	;# 
   343  0212                     	;# 
   344  0212                     	;# 
   345  0213                     	;# 
   346  0213                     	;# 
   347  0214                     	;# 
   348  0214                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0216                     	;# 
   353  0216                     	;# 
   354  0217                     	;# 
   355  0217                     	;# 
   356  0219                     	;# 
   357  021A                     	;# 
   358  021B                     	;# 
   359  021C                     	;# 
   360  021D                     	;# 
   361  021E                     	;# 
   362  021F                     	;# 
   363  0291                     	;# 
   364  0291                     	;# 
   365  0292                     	;# 
   366  0293                     	;# 
   367  0294                     	;# 
   368  0295                     	;# 
   369  0295                     	;# 
   370  0296                     	;# 
   371  0298                     	;# 
   372  0298                     	;# 
   373  0299                     	;# 
   374  029A                     	;# 
   375  029B                     	;# 
   376  029C                     	;# 
   377  029C                     	;# 
   378  029D                     	;# 
   379  029E                     	;# 
   380  029E                     	;# 
   381  0311                     	;# 
   382  0311                     	;# 
   383  0312                     	;# 
   384  0313                     	;# 
   385  0318                     	;# 
   386  0318                     	;# 
   387  0319                     	;# 
   388  031A                     	;# 
   389  0394                     	;# 
   390  0395                     	;# 
   391  0396                     	;# 
   392  039A                     	;# 
   393  039C                     	;# 
   394  039D                     	;# 
   395  039E                     	;# 
   396  039F                     	;# 
   397  0415                     	;# 
   398  0416                     	;# 
   399  0417                     	;# 
   400  041C                     	;# 
   401  041D                     	;# 
   402  041E                     	;# 
   403  0FE4                     	;# 
   404  0FE5                     	;# 
   405  0FE6                     	;# 
   406  0FE7                     	;# 
   407  0FE8                     	;# 
   408  0FE9                     	;# 
   409  0FEA                     	;# 
   410  0FEB                     	;# 
   411  0FED                     	;# 
   412  0FEE                     	;# 
   413  0FEF                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0013                     	;# 
   431  0014                     	;# 
   432  0015                     	;# 
   433  0016                     	;# 
   434  0016                     	;# 
   435  0017                     	;# 
   436  0018                     	;# 
   437  0019                     	;# 
   438  001A                     	;# 
   439  001B                     	;# 
   440  001C                     	;# 
   441  001E                     	;# 
   442  001F                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  0111                     	;# 
   463  0112                     	;# 
   464  0113                     	;# 
   465  0114                     	;# 
   466  0115                     	;# 
   467  0116                     	;# 
   468  0117                     	;# 
   469  0118                     	;# 
   470  0119                     	;# 
   471  011A                     	;# 
   472  011B                     	;# 
   473  011D                     	;# 
   474  011E                     	;# 
   475  018C                     	;# 
   476  018D                     	;# 
   477  0191                     	;# 
   478  0191                     	;# 
   479  0192                     	;# 
   480  0193                     	;# 
   481  0193                     	;# 
   482  0193                     	;# 
   483  0194                     	;# 
   484  0195                     	;# 
   485  0196                     	;# 
   486  0199                     	;# 
   487  019A                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019C                     	;# 
   493  019C                     	;# 
   494  019D                     	;# 
   495  019E                     	;# 
   496  019F                     	;# 
   497  020C                     	;# 
   498  020D                     	;# 
   499  0211                     	;# 
   500  0211                     	;# 
   501  0212                     	;# 
   502  0212                     	;# 
   503  0213                     	;# 
   504  0213                     	;# 
   505  0214                     	;# 
   506  0214                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0216                     	;# 
   511  0216                     	;# 
   512  0217                     	;# 
   513  0217                     	;# 
   514  0219                     	;# 
   515  021A                     	;# 
   516  021B                     	;# 
   517  021C                     	;# 
   518  021D                     	;# 
   519  021E                     	;# 
   520  021F                     	;# 
   521  0291                     	;# 
   522  0291                     	;# 
   523  0292                     	;# 
   524  0293                     	;# 
   525  0294                     	;# 
   526  0295                     	;# 
   527  0295                     	;# 
   528  0296                     	;# 
   529  0298                     	;# 
   530  0298                     	;# 
   531  0299                     	;# 
   532  029A                     	;# 
   533  029B                     	;# 
   534  029C                     	;# 
   535  029C                     	;# 
   536  029D                     	;# 
   537  029E                     	;# 
   538  029E                     	;# 
   539  0311                     	;# 
   540  0311                     	;# 
   541  0312                     	;# 
   542  0313                     	;# 
   543  0318                     	;# 
   544  0318                     	;# 
   545  0319                     	;# 
   546  031A                     	;# 
   547  0394                     	;# 
   548  0395                     	;# 
   549  0396                     	;# 
   550  039A                     	;# 
   551  039C                     	;# 
   552  039D                     	;# 
   553  039E                     	;# 
   554  039F                     	;# 
   555  0415                     	;# 
   556  0416                     	;# 
   557  0417                     	;# 
   558  041C                     	;# 
   559  041D                     	;# 
   560  041E                     	;# 
   561  0FE4                     	;# 
   562  0FE5                     	;# 
   563  0FE6                     	;# 
   564  0FE7                     	;# 
   565  0FE8                     	;# 
   566  0FE9                     	;# 
   567  0FEA                     	;# 
   568  0FEB                     	;# 
   569  0FED                     	;# 
   570  0FEE                     	;# 
   571  0FEF                     	;# 
   572  0000                     	;# 
   573  0001                     	;# 
   574  0002                     	;# 
   575  0003                     	;# 
   576  0004                     	;# 
   577  0005                     	;# 
   578  0006                     	;# 
   579  0007                     	;# 
   580  0008                     	;# 
   581  0009                     	;# 
   582  000A                     	;# 
   583  000B                     	;# 
   584  000C                     	;# 
   585  000D                     	;# 
   586  0011                     	;# 
   587  0012                     	;# 
   588  0013                     	;# 
   589  0014                     	;# 
   590  0015                     	;# 
   591  0016                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  0019                     	;# 
   596  001A                     	;# 
   597  001B                     	;# 
   598  001C                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008D                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0094                     	;# 
   607  0095                     	;# 
   608  0096                     	;# 
   609  0097                     	;# 
   610  0098                     	;# 
   611  0099                     	;# 
   612  009A                     	;# 
   613  009B                     	;# 
   614  009B                     	;# 
   615  009C                     	;# 
   616  009D                     	;# 
   617  009E                     	;# 
   618  010C                     	;# 
   619  010D                     	;# 
   620  0111                     	;# 
   621  0112                     	;# 
   622  0113                     	;# 
   623  0114                     	;# 
   624  0115                     	;# 
   625  0116                     	;# 
   626  0117                     	;# 
   627  0118                     	;# 
   628  0119                     	;# 
   629  011A                     	;# 
   630  011B                     	;# 
   631  011D                     	;# 
   632  011E                     	;# 
   633  018C                     	;# 
   634  018D                     	;# 
   635  0191                     	;# 
   636  0191                     	;# 
   637  0192                     	;# 
   638  0193                     	;# 
   639  0193                     	;# 
   640  0193                     	;# 
   641  0194                     	;# 
   642  0195                     	;# 
   643  0196                     	;# 
   644  0199                     	;# 
   645  019A                     	;# 
   646  019B                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019C                     	;# 
   651  019C                     	;# 
   652  019D                     	;# 
   653  019E                     	;# 
   654  019F                     	;# 
   655  020C                     	;# 
   656  020D                     	;# 
   657  0211                     	;# 
   658  0211                     	;# 
   659  0212                     	;# 
   660  0212                     	;# 
   661  0213                     	;# 
   662  0213                     	;# 
   663  0214                     	;# 
   664  0214                     	;# 
   665  0215                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0216                     	;# 
   669  0216                     	;# 
   670  0217                     	;# 
   671  0217                     	;# 
   672  0219                     	;# 
   673  021A                     	;# 
   674  021B                     	;# 
   675  021C                     	;# 
   676  021D                     	;# 
   677  021E                     	;# 
   678  021F                     	;# 
   679  0291                     	;# 
   680  0291                     	;# 
   681  0292                     	;# 
   682  0293                     	;# 
   683  0294                     	;# 
   684  0295                     	;# 
   685  0295                     	;# 
   686  0296                     	;# 
   687  0298                     	;# 
   688  0298                     	;# 
   689  0299                     	;# 
   690  029A                     	;# 
   691  029B                     	;# 
   692  029C                     	;# 
   693  029C                     	;# 
   694  029D                     	;# 
   695  029E                     	;# 
   696  029E                     	;# 
   697  0311                     	;# 
   698  0311                     	;# 
   699  0312                     	;# 
   700  0313                     	;# 
   701  0318                     	;# 
   702  0318                     	;# 
   703  0319                     	;# 
   704  031A                     	;# 
   705  0394                     	;# 
   706  0395                     	;# 
   707  0396                     	;# 
   708  039A                     	;# 
   709  039C                     	;# 
   710  039D                     	;# 
   711  039E                     	;# 
   712  039F                     	;# 
   713  0415                     	;# 
   714  0416                     	;# 
   715  0417                     	;# 
   716  041C                     	;# 
   717  041D                     	;# 
   718  041E                     	;# 
   719  0FE4                     	;# 
   720  0FE5                     	;# 
   721  0FE6                     	;# 
   722  0FE7                     	;# 
   723  0FE8                     	;# 
   724  0FE9                     	;# 
   725  0FEA                     	;# 
   726  0FEB                     	;# 
   727  0FED                     	;# 
   728  0FEE                     	;# 
   729  0FEF                     	;# 
   730  0000                     	;# 
   731  0001                     	;# 
   732  0002                     	;# 
   733  0003                     	;# 
   734  0004                     	;# 
   735  0005                     	;# 
   736  0006                     	;# 
   737  0007                     	;# 
   738  0008                     	;# 
   739  0009                     	;# 
   740  000A                     	;# 
   741  000B                     	;# 
   742  000C                     	;# 
   743  000D                     	;# 
   744  0011                     	;# 
   745  0012                     	;# 
   746  0013                     	;# 
   747  0014                     	;# 
   748  0015                     	;# 
   749  0016                     	;# 
   750  0016                     	;# 
   751  0017                     	;# 
   752  0018                     	;# 
   753  0019                     	;# 
   754  001A                     	;# 
   755  001B                     	;# 
   756  001C                     	;# 
   757  001E                     	;# 
   758  001F                     	;# 
   759  008C                     	;# 
   760  008D                     	;# 
   761  0091                     	;# 
   762  0092                     	;# 
   763  0093                     	;# 
   764  0094                     	;# 
   765  0095                     	;# 
   766  0096                     	;# 
   767  0097                     	;# 
   768  0098                     	;# 
   769  0099                     	;# 
   770  009A                     	;# 
   771  009B                     	;# 
   772  009B                     	;# 
   773  009C                     	;# 
   774  009D                     	;# 
   775  009E                     	;# 
   776  010C                     	;# 
   777  010D                     	;# 
   778  0111                     	;# 
   779  0112                     	;# 
   780  0113                     	;# 
   781  0114                     	;# 
   782  0115                     	;# 
   783  0116                     	;# 
   784  0117                     	;# 
   785  0118                     	;# 
   786  0119                     	;# 
   787  011A                     	;# 
   788  011B                     	;# 
   789  011D                     	;# 
   790  011E                     	;# 
   791  018C                     	;# 
   792  018D                     	;# 
   793  0191                     	;# 
   794  0191                     	;# 
   795  0192                     	;# 
   796  0193                     	;# 
   797  0193                     	;# 
   798  0193                     	;# 
   799  0194                     	;# 
   800  0195                     	;# 
   801  0196                     	;# 
   802  0199                     	;# 
   803  019A                     	;# 
   804  019B                     	;# 
   805  019B                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019C                     	;# 
   809  019C                     	;# 
   810  019D                     	;# 
   811  019E                     	;# 
   812  019F                     	;# 
   813  020C                     	;# 
   814  020D                     	;# 
   815  0211                     	;# 
   816  0211                     	;# 
   817  0212                     	;# 
   818  0212                     	;# 
   819  0213                     	;# 
   820  0213                     	;# 
   821  0214                     	;# 
   822  0214                     	;# 
   823  0215                     	;# 
   824  0215                     	;# 
   825  0215                     	;# 
   826  0216                     	;# 
   827  0216                     	;# 
   828  0217                     	;# 
   829  0217                     	;# 
   830  0219                     	;# 
   831  021A                     	;# 
   832  021B                     	;# 
   833  021C                     	;# 
   834  021D                     	;# 
   835  021E                     	;# 
   836  021F                     	;# 
   837  0291                     	;# 
   838  0291                     	;# 
   839  0292                     	;# 
   840  0293                     	;# 
   841  0294                     	;# 
   842  0295                     	;# 
   843  0295                     	;# 
   844  0296                     	;# 
   845  0298                     	;# 
   846  0298                     	;# 
   847  0299                     	;# 
   848  029A                     	;# 
   849  029B                     	;# 
   850  029C                     	;# 
   851  029C                     	;# 
   852  029D                     	;# 
   853  029E                     	;# 
   854  029E                     	;# 
   855  0311                     	;# 
   856  0311                     	;# 
   857  0312                     	;# 
   858  0313                     	;# 
   859  0318                     	;# 
   860  0318                     	;# 
   861  0319                     	;# 
   862  031A                     	;# 
   863  0394                     	;# 
   864  0395                     	;# 
   865  0396                     	;# 
   866  039A                     	;# 
   867  039C                     	;# 
   868  039D                     	;# 
   869  039E                     	;# 
   870  039F                     	;# 
   871  0415                     	;# 
   872  0416                     	;# 
   873  0417                     	;# 
   874  041C                     	;# 
   875  041D                     	;# 
   876  041E                     	;# 
   877  0FE4                     	;# 
   878  0FE5                     	;# 
   879  0FE6                     	;# 
   880  0FE7                     	;# 
   881  0FE8                     	;# 
   882  0FE9                     	;# 
   883  0FEA                     	;# 
   884  0FEB                     	;# 
   885  0FED                     	;# 
   886  0FEE                     	;# 
   887  0FEF                     	;# 
   888  0000                     	;# 
   889  0001                     	;# 
   890  0002                     	;# 
   891  0003                     	;# 
   892  0004                     	;# 
   893  0005                     	;# 
   894  0006                     	;# 
   895  0007                     	;# 
   896  0008                     	;# 
   897  0009                     	;# 
   898  000A                     	;# 
   899  000B                     	;# 
   900  000C                     	;# 
   901  000D                     	;# 
   902  0011                     	;# 
   903  0012                     	;# 
   904  0013                     	;# 
   905  0014                     	;# 
   906  0015                     	;# 
   907  0016                     	;# 
   908  0016                     	;# 
   909  0017                     	;# 
   910  0018                     	;# 
   911  0019                     	;# 
   912  001A                     	;# 
   913  001B                     	;# 
   914  001C                     	;# 
   915  001E                     	;# 
   916  001F                     	;# 
   917  008C                     	;# 
   918  008D                     	;# 
   919  0091                     	;# 
   920  0092                     	;# 
   921  0093                     	;# 
   922  0094                     	;# 
   923  0095                     	;# 
   924  0096                     	;# 
   925  0097                     	;# 
   926  0098                     	;# 
   927  0099                     	;# 
   928  009A                     	;# 
   929  009B                     	;# 
   930  009B                     	;# 
   931  009C                     	;# 
   932  009D                     	;# 
   933  009E                     	;# 
   934  010C                     	;# 
   935  010D                     	;# 
   936  0111                     	;# 
   937  0112                     	;# 
   938  0113                     	;# 
   939  0114                     	;# 
   940  0115                     	;# 
   941  0116                     	;# 
   942  0117                     	;# 
   943  0118                     	;# 
   944  0119                     	;# 
   945  011A                     	;# 
   946  011B                     	;# 
   947  011D                     	;# 
   948  011E                     	;# 
   949  018C                     	;# 
   950  018D                     	;# 
   951  0191                     	;# 
   952  0191                     	;# 
   953  0192                     	;# 
   954  0193                     	;# 
   955  0193                     	;# 
   956  0193                     	;# 
   957  0194                     	;# 
   958  0195                     	;# 
   959  0196                     	;# 
   960  0199                     	;# 
   961  019A                     	;# 
   962  019B                     	;# 
   963  019B                     	;# 
   964  019B                     	;# 
   965  019B                     	;# 
   966  019C                     	;# 
   967  019C                     	;# 
   968  019D                     	;# 
   969  019E                     	;# 
   970  019F                     	;# 
   971  020C                     	;# 
   972  020D                     	;# 
   973  0211                     	;# 
   974  0211                     	;# 
   975  0212                     	;# 
   976  0212                     	;# 
   977  0213                     	;# 
   978  0213                     	;# 
   979  0214                     	;# 
   980  0214                     	;# 
   981  0215                     	;# 
   982  0215                     	;# 
   983  0215                     	;# 
   984  0216                     	;# 
   985  0216                     	;# 
   986  0217                     	;# 
   987  0217                     	;# 
   988  0219                     	;# 
   989  021A                     	;# 
   990  021B                     	;# 
   991  021C                     	;# 
   992  021D                     	;# 
   993  021E                     	;# 
   994  021F                     	;# 
   995  0291                     	;# 
   996  0291                     	;# 
   997  0292                     	;# 
   998  0293                     	;# 
   999  0294                     	;# 
  1000  0295                     	;# 
  1001  0295                     	;# 
  1002  0296                     	;# 
  1003  0298                     	;# 
  1004  0298                     	;# 
  1005  0299                     	;# 
  1006  029A                     	;# 
  1007  029B                     	;# 
  1008  029C                     	;# 
  1009  029C                     	;# 
  1010  029D                     	;# 
  1011  029E                     	;# 
  1012  029E                     	;# 
  1013  0311                     	;# 
  1014  0311                     	;# 
  1015  0312                     	;# 
  1016  0313                     	;# 
  1017  0318                     	;# 
  1018  0318                     	;# 
  1019  0319                     	;# 
  1020  031A                     	;# 
  1021  0394                     	;# 
  1022  0395                     	;# 
  1023  0396                     	;# 
  1024  039A                     	;# 
  1025  039C                     	;# 
  1026  039D                     	;# 
  1027  039E                     	;# 
  1028  039F                     	;# 
  1029  0415                     	;# 
  1030  0416                     	;# 
  1031  0417                     	;# 
  1032  041C                     	;# 
  1033  041D                     	;# 
  1034  041E                     	;# 
  1035  0FE4                     	;# 
  1036  0FE5                     	;# 
  1037  0FE6                     	;# 
  1038  0FE7                     	;# 
  1039  0FE8                     	;# 
  1040  0FE9                     	;# 
  1041  0FEA                     	;# 
  1042  0FEB                     	;# 
  1043  0FED                     	;# 
  1044  0FEE                     	;# 
  1045  0FEF                     	;# 
  1046  0000                     	;# 
  1047  0001                     	;# 
  1048  0002                     	;# 
  1049  0003                     	;# 
  1050  0004                     	;# 
  1051  0005                     	;# 
  1052  0006                     	;# 
  1053  0007                     	;# 
  1054  0008                     	;# 
  1055  0009                     	;# 
  1056  000A                     	;# 
  1057  000B                     	;# 
  1058  000C                     	;# 
  1059  000D                     	;# 
  1060  0011                     	;# 
  1061  0012                     	;# 
  1062  0013                     	;# 
  1063  0014                     	;# 
  1064  0015                     	;# 
  1065  0016                     	;# 
  1066  0016                     	;# 
  1067  0017                     	;# 
  1068  0018                     	;# 
  1069  0019                     	;# 
  1070  001A                     	;# 
  1071  001B                     	;# 
  1072  001C                     	;# 
  1073  001E                     	;# 
  1074  001F                     	;# 
  1075  008C                     	;# 
  1076  008D                     	;# 
  1077  0091                     	;# 
  1078  0092                     	;# 
  1079  0093                     	;# 
  1080  0094                     	;# 
  1081  0095                     	;# 
  1082  0096                     	;# 
  1083  0097                     	;# 
  1084  0098                     	;# 
  1085  0099                     	;# 
  1086  009A                     	;# 
  1087  009B                     	;# 
  1088  009B                     	;# 
  1089  009C                     	;# 
  1090  009D                     	;# 
  1091  009E                     	;# 
  1092  010C                     	;# 
  1093  010D                     	;# 
  1094  0111                     	;# 
  1095  0112                     	;# 
  1096  0113                     	;# 
  1097  0114                     	;# 
  1098  0115                     	;# 
  1099  0116                     	;# 
  1100  0117                     	;# 
  1101  0118                     	;# 
  1102  0119                     	;# 
  1103  011A                     	;# 
  1104  011B                     	;# 
  1105  011D                     	;# 
  1106  011E                     	;# 
  1107  018C                     	;# 
  1108  018D                     	;# 
  1109  0191                     	;# 
  1110  0191                     	;# 
  1111  0192                     	;# 
  1112  0193                     	;# 
  1113  0193                     	;# 
  1114  0193                     	;# 
  1115  0194                     	;# 
  1116  0195                     	;# 
  1117  0196                     	;# 
  1118  0199                     	;# 
  1119  019A                     	;# 
  1120  019B                     	;# 
  1121  019B                     	;# 
  1122  019B                     	;# 
  1123  019B                     	;# 
  1124  019C                     	;# 
  1125  019C                     	;# 
  1126  019D                     	;# 
  1127  019E                     	;# 
  1128  019F                     	;# 
  1129  020C                     	;# 
  1130  020D                     	;# 
  1131  0211                     	;# 
  1132  0211                     	;# 
  1133  0212                     	;# 
  1134  0212                     	;# 
  1135  0213                     	;# 
  1136  0213                     	;# 
  1137  0214                     	;# 
  1138  0214                     	;# 
  1139  0215                     	;# 
  1140  0215                     	;# 
  1141  0215                     	;# 
  1142  0216                     	;# 
  1143  0216                     	;# 
  1144  0217                     	;# 
  1145  0217                     	;# 
  1146  0219                     	;# 
  1147  021A                     	;# 
  1148  021B                     	;# 
  1149  021C                     	;# 
  1150  021D                     	;# 
  1151  021E                     	;# 
  1152  021F                     	;# 
  1153  0291                     	;# 
  1154  0291                     	;# 
  1155  0292                     	;# 
  1156  0293                     	;# 
  1157  0294                     	;# 
  1158  0295                     	;# 
  1159  0295                     	;# 
  1160  0296                     	;# 
  1161  0298                     	;# 
  1162  0298                     	;# 
  1163  0299                     	;# 
  1164  029A                     	;# 
  1165  029B                     	;# 
  1166  029C                     	;# 
  1167  029C                     	;# 
  1168  029D                     	;# 
  1169  029E                     	;# 
  1170  029E                     	;# 
  1171  0311                     	;# 
  1172  0311                     	;# 
  1173  0312                     	;# 
  1174  0313                     	;# 
  1175  0318                     	;# 
  1176  0318                     	;# 
  1177  0319                     	;# 
  1178  031A                     	;# 
  1179  0394                     	;# 
  1180  0395                     	;# 
  1181  0396                     	;# 
  1182  039A                     	;# 
  1183  039C                     	;# 
  1184  039D                     	;# 
  1185  039E                     	;# 
  1186  039F                     	;# 
  1187  0415                     	;# 
  1188  0416                     	;# 
  1189  0417                     	;# 
  1190  041C                     	;# 
  1191  041D                     	;# 
  1192  041E                     	;# 
  1193  0FE4                     	;# 
  1194  0FE5                     	;# 
  1195  0FE6                     	;# 
  1196  0FE7                     	;# 
  1197  0FE8                     	;# 
  1198  0FE9                     	;# 
  1199  0FEA                     	;# 
  1200  0FEB                     	;# 
  1201  0FED                     	;# 
  1202  0FEE                     	;# 
  1203  0FEF                     	;# 
  1204  0000                     	;# 
  1205  0001                     	;# 
  1206  0002                     	;# 
  1207  0003                     	;# 
  1208  0004                     	;# 
  1209  0005                     	;# 
  1210  0006                     	;# 
  1211  0007                     	;# 
  1212  0008                     	;# 
  1213  0009                     	;# 
  1214  000A                     	;# 
  1215  000B                     	;# 
  1216  000C                     	;# 
  1217  000D                     	;# 
  1218  0011                     	;# 
  1219  0012                     	;# 
  1220  0013                     	;# 
  1221  0014                     	;# 
  1222  0015                     	;# 
  1223  0016                     	;# 
  1224  0016                     	;# 
  1225  0017                     	;# 
  1226  0018                     	;# 
  1227  0019                     	;# 
  1228  001A                     	;# 
  1229  001B                     	;# 
  1230  001C                     	;# 
  1231  001E                     	;# 
  1232  001F                     	;# 
  1233  008C                     	;# 
  1234  008D                     	;# 
  1235  0091                     	;# 
  1236  0092                     	;# 
  1237  0093                     	;# 
  1238  0094                     	;# 
  1239  0095                     	;# 
  1240  0096                     	;# 
  1241  0097                     	;# 
  1242  0098                     	;# 
  1243  0099                     	;# 
  1244  009A                     	;# 
  1245  009B                     	;# 
  1246  009B                     	;# 
  1247  009C                     	;# 
  1248  009D                     	;# 
  1249  009E                     	;# 
  1250  010C                     	;# 
  1251  010D                     	;# 
  1252  0111                     	;# 
  1253  0112                     	;# 
  1254  0113                     	;# 
  1255  0114                     	;# 
  1256  0115                     	;# 
  1257  0116                     	;# 
  1258  0117                     	;# 
  1259  0118                     	;# 
  1260  0119                     	;# 
  1261  011A                     	;# 
  1262  011B                     	;# 
  1263  011D                     	;# 
  1264  011E                     	;# 
  1265  018C                     	;# 
  1266  018D                     	;# 
  1267  0191                     	;# 
  1268  0191                     	;# 
  1269  0192                     	;# 
  1270  0193                     	;# 
  1271  0193                     	;# 
  1272  0193                     	;# 
  1273  0194                     	;# 
  1274  0195                     	;# 
  1275  0196                     	;# 
  1276  0199                     	;# 
  1277  019A                     	;# 
  1278  019B                     	;# 
  1279  019B                     	;# 
  1280  019B                     	;# 
  1281  019B                     	;# 
  1282  019C                     	;# 
  1283  019C                     	;# 
  1284  019D                     	;# 
  1285  019E                     	;# 
  1286  019F                     	;# 
  1287  020C                     	;# 
  1288  020D                     	;# 
  1289  0211                     	;# 
  1290  0211                     	;# 
  1291  0212                     	;# 
  1292  0212                     	;# 
  1293  0213                     	;# 
  1294  0213                     	;# 
  1295  0214                     	;# 
  1296  0214                     	;# 
  1297  0215                     	;# 
  1298  0215                     	;# 
  1299  0215                     	;# 
  1300  0216                     	;# 
  1301  0216                     	;# 
  1302  0217                     	;# 
  1303  0217                     	;# 
  1304  0219                     	;# 
  1305  021A                     	;# 
  1306  021B                     	;# 
  1307  021C                     	;# 
  1308  021D                     	;# 
  1309  021E                     	;# 
  1310  021F                     	;# 
  1311  0291                     	;# 
  1312  0291                     	;# 
  1313  0292                     	;# 
  1314  0293                     	;# 
  1315  0294                     	;# 
  1316  0295                     	;# 
  1317  0295                     	;# 
  1318  0296                     	;# 
  1319  0298                     	;# 
  1320  0298                     	;# 
  1321  0299                     	;# 
  1322  029A                     	;# 
  1323  029B                     	;# 
  1324  029C                     	;# 
  1325  029C                     	;# 
  1326  029D                     	;# 
  1327  029E                     	;# 
  1328  029E                     	;# 
  1329  0311                     	;# 
  1330  0311                     	;# 
  1331  0312                     	;# 
  1332  0313                     	;# 
  1333  0318                     	;# 
  1334  0318                     	;# 
  1335  0319                     	;# 
  1336  031A                     	;# 
  1337  0394                     	;# 
  1338  0395                     	;# 
  1339  0396                     	;# 
  1340  039A                     	;# 
  1341  039C                     	;# 
  1342  039D                     	;# 
  1343  039E                     	;# 
  1344  039F                     	;# 
  1345  0415                     	;# 
  1346  0416                     	;# 
  1347  0417                     	;# 
  1348  041C                     	;# 
  1349  041D                     	;# 
  1350  041E                     	;# 
  1351  0FE4                     	;# 
  1352  0FE5                     	;# 
  1353  0FE6                     	;# 
  1354  0FE7                     	;# 
  1355  0FE8                     	;# 
  1356  0FE9                     	;# 
  1357  0FEA                     	;# 
  1358  0FEB                     	;# 
  1359  0FED                     	;# 
  1360  0FEE                     	;# 
  1361  0FEF                     	;# 
  1362  0000                     	;# 
  1363  0001                     	;# 
  1364  0002                     	;# 
  1365  0003                     	;# 
  1366  0004                     	;# 
  1367  0005                     	;# 
  1368  0006                     	;# 
  1369  0007                     	;# 
  1370  0008                     	;# 
  1371  0009                     	;# 
  1372  000A                     	;# 
  1373  000B                     	;# 
  1374  000C                     	;# 
  1375  000D                     	;# 
  1376  0011                     	;# 
  1377  0012                     	;# 
  1378  0013                     	;# 
  1379  0014                     	;# 
  1380  0015                     	;# 
  1381  0016                     	;# 
  1382  0016                     	;# 
  1383  0017                     	;# 
  1384  0018                     	;# 
  1385  0019                     	;# 
  1386  001A                     	;# 
  1387  001B                     	;# 
  1388  001C                     	;# 
  1389  001E                     	;# 
  1390  001F                     	;# 
  1391  008C                     	;# 
  1392  008D                     	;# 
  1393  0091                     	;# 
  1394  0092                     	;# 
  1395  0093                     	;# 
  1396  0094                     	;# 
  1397  0095                     	;# 
  1398  0096                     	;# 
  1399  0097                     	;# 
  1400  0098                     	;# 
  1401  0099                     	;# 
  1402  009A                     	;# 
  1403  009B                     	;# 
  1404  009B                     	;# 
  1405  009C                     	;# 
  1406  009D                     	;# 
  1407  009E                     	;# 
  1408  010C                     	;# 
  1409  010D                     	;# 
  1410  0111                     	;# 
  1411  0112                     	;# 
  1412  0113                     	;# 
  1413  0114                     	;# 
  1414  0115                     	;# 
  1415  0116                     	;# 
  1416  0117                     	;# 
  1417  0118                     	;# 
  1418  0119                     	;# 
  1419  011A                     	;# 
  1420  011B                     	;# 
  1421  011D                     	;# 
  1422  011E                     	;# 
  1423  018C                     	;# 
  1424  018D                     	;# 
  1425  0191                     	;# 
  1426  0191                     	;# 
  1427  0192                     	;# 
  1428  0193                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0194                     	;# 
  1432  0195                     	;# 
  1433  0196                     	;# 
  1434  0199                     	;# 
  1435  019A                     	;# 
  1436  019B                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019C                     	;# 
  1441  019C                     	;# 
  1442  019D                     	;# 
  1443  019E                     	;# 
  1444  019F                     	;# 
  1445  020C                     	;# 
  1446  020D                     	;# 
  1447  0211                     	;# 
  1448  0211                     	;# 
  1449  0212                     	;# 
  1450  0212                     	;# 
  1451  0213                     	;# 
  1452  0213                     	;# 
  1453  0214                     	;# 
  1454  0214                     	;# 
  1455  0215                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0216                     	;# 
  1459  0216                     	;# 
  1460  0217                     	;# 
  1461  0217                     	;# 
  1462  0219                     	;# 
  1463  021A                     	;# 
  1464  021B                     	;# 
  1465  021C                     	;# 
  1466  021D                     	;# 
  1467  021E                     	;# 
  1468  021F                     	;# 
  1469  0291                     	;# 
  1470  0291                     	;# 
  1471  0292                     	;# 
  1472  0293                     	;# 
  1473  0294                     	;# 
  1474  0295                     	;# 
  1475  0295                     	;# 
  1476  0296                     	;# 
  1477  0298                     	;# 
  1478  0298                     	;# 
  1479  0299                     	;# 
  1480  029A                     	;# 
  1481  029B                     	;# 
  1482  029C                     	;# 
  1483  029C                     	;# 
  1484  029D                     	;# 
  1485  029E                     	;# 
  1486  029E                     	;# 
  1487  0311                     	;# 
  1488  0311                     	;# 
  1489  0312                     	;# 
  1490  0313                     	;# 
  1491  0318                     	;# 
  1492  0318                     	;# 
  1493  0319                     	;# 
  1494  031A                     	;# 
  1495  0394                     	;# 
  1496  0395                     	;# 
  1497  0396                     	;# 
  1498  039A                     	;# 
  1499  039C                     	;# 
  1500  039D                     	;# 
  1501  039E                     	;# 
  1502  039F                     	;# 
  1503  0415                     	;# 
  1504  0416                     	;# 
  1505  0417                     	;# 
  1506  041C                     	;# 
  1507  041D                     	;# 
  1508  041E                     	;# 
  1509  0FE4                     	;# 
  1510  0FE5                     	;# 
  1511  0FE6                     	;# 
  1512  0FE7                     	;# 
  1513  0FE8                     	;# 
  1514  0FE9                     	;# 
  1515  0FEA                     	;# 
  1516  0FEB                     	;# 
  1517  0FED                     	;# 
  1518  0FEE                     	;# 
  1519  0FEF                     	;# 
  1520  0000                     	;# 
  1521  0001                     	;# 
  1522  0002                     	;# 
  1523  0003                     	;# 
  1524  0004                     	;# 
  1525  0005                     	;# 
  1526  0006                     	;# 
  1527  0007                     	;# 
  1528  0008                     	;# 
  1529  0009                     	;# 
  1530  000A                     	;# 
  1531  000B                     	;# 
  1532  000C                     	;# 
  1533  000D                     	;# 
  1534  0011                     	;# 
  1535  0012                     	;# 
  1536  0013                     	;# 
  1537  0014                     	;# 
  1538  0015                     	;# 
  1539  0016                     	;# 
  1540  0016                     	;# 
  1541  0017                     	;# 
  1542  0018                     	;# 
  1543  0019                     	;# 
  1544  001A                     	;# 
  1545  001B                     	;# 
  1546  001C                     	;# 
  1547  001E                     	;# 
  1548  001F                     	;# 
  1549  008C                     	;# 
  1550  008D                     	;# 
  1551  0091                     	;# 
  1552  0092                     	;# 
  1553  0093                     	;# 
  1554  0094                     	;# 
  1555  0095                     	;# 
  1556  0096                     	;# 
  1557  0097                     	;# 
  1558  0098                     	;# 
  1559  0099                     	;# 
  1560  009A                     	;# 
  1561  009B                     	;# 
  1562  009B                     	;# 
  1563  009C                     	;# 
  1564  009D                     	;# 
  1565  009E                     	;# 
  1566  010C                     	;# 
  1567  010D                     	;# 
  1568  0111                     	;# 
  1569  0112                     	;# 
  1570  0113                     	;# 
  1571  0114                     	;# 
  1572  0115                     	;# 
  1573  0116                     	;# 
  1574  0117                     	;# 
  1575  0118                     	;# 
  1576  0119                     	;# 
  1577  011A                     	;# 
  1578  011B                     	;# 
  1579  011D                     	;# 
  1580  011E                     	;# 
  1581  018C                     	;# 
  1582  018D                     	;# 
  1583  0191                     	;# 
  1584  0191                     	;# 
  1585  0192                     	;# 
  1586  0193                     	;# 
  1587  0193                     	;# 
  1588  0193                     	;# 
  1589  0194                     	;# 
  1590  0195                     	;# 
  1591  0196                     	;# 
  1592  0199                     	;# 
  1593  019A                     	;# 
  1594  019B                     	;# 
  1595  019B                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019C                     	;# 
  1599  019C                     	;# 
  1600  019D                     	;# 
  1601  019E                     	;# 
  1602  019F                     	;# 
  1603  020C                     	;# 
  1604  020D                     	;# 
  1605  0211                     	;# 
  1606  0211                     	;# 
  1607  0212                     	;# 
  1608  0212                     	;# 
  1609  0213                     	;# 
  1610  0213                     	;# 
  1611  0214                     	;# 
  1612  0214                     	;# 
  1613  0215                     	;# 
  1614  0215                     	;# 
  1615  0215                     	;# 
  1616  0216                     	;# 
  1617  0216                     	;# 
  1618  0217                     	;# 
  1619  0217                     	;# 
  1620  0219                     	;# 
  1621  021A                     	;# 
  1622  021B                     	;# 
  1623  021C                     	;# 
  1624  021D                     	;# 
  1625  021E                     	;# 
  1626  021F                     	;# 
  1627  0291                     	;# 
  1628  0291                     	;# 
  1629  0292                     	;# 
  1630  0293                     	;# 
  1631  0294                     	;# 
  1632  0295                     	;# 
  1633  0295                     	;# 
  1634  0296                     	;# 
  1635  0298                     	;# 
  1636  0298                     	;# 
  1637  0299                     	;# 
  1638  029A                     	;# 
  1639  029B                     	;# 
  1640  029C                     	;# 
  1641  029C                     	;# 
  1642  029D                     	;# 
  1643  029E                     	;# 
  1644  029E                     	;# 
  1645  0311                     	;# 
  1646  0311                     	;# 
  1647  0312                     	;# 
  1648  0313                     	;# 
  1649  0318                     	;# 
  1650  0318                     	;# 
  1651  0319                     	;# 
  1652  031A                     	;# 
  1653  0394                     	;# 
  1654  0395                     	;# 
  1655  0396                     	;# 
  1656  039A                     	;# 
  1657  039C                     	;# 
  1658  039D                     	;# 
  1659  039E                     	;# 
  1660  039F                     	;# 
  1661  0415                     	;# 
  1662  0416                     	;# 
  1663  0417                     	;# 
  1664  041C                     	;# 
  1665  041D                     	;# 
  1666  041E                     	;# 
  1667  0FE4                     	;# 
  1668  0FE5                     	;# 
  1669  0FE6                     	;# 
  1670  0FE7                     	;# 
  1671  0FE8                     	;# 
  1672  0FE9                     	;# 
  1673  0FEA                     	;# 
  1674  0FEB                     	;# 
  1675  0FED                     	;# 
  1676  0FEE                     	;# 
  1677  0FEF                     	;# 
  1678  0000                     	;# 
  1679  0001                     	;# 
  1680  0002                     	;# 
  1681  0003                     	;# 
  1682  0004                     	;# 
  1683  0005                     	;# 
  1684  0006                     	;# 
  1685  0007                     	;# 
  1686  0008                     	;# 
  1687  0009                     	;# 
  1688  000A                     	;# 
  1689  000B                     	;# 
  1690  000C                     	;# 
  1691  000D                     	;# 
  1692  0011                     	;# 
  1693  0012                     	;# 
  1694  0013                     	;# 
  1695  0014                     	;# 
  1696  0015                     	;# 
  1697  0016                     	;# 
  1698  0016                     	;# 
  1699  0017                     	;# 
  1700  0018                     	;# 
  1701  0019                     	;# 
  1702  001A                     	;# 
  1703  001B                     	;# 
  1704  001C                     	;# 
  1705  001E                     	;# 
  1706  001F                     	;# 
  1707  008C                     	;# 
  1708  008D                     	;# 
  1709  0091                     	;# 
  1710  0092                     	;# 
  1711  0093                     	;# 
  1712  0094                     	;# 
  1713  0095                     	;# 
  1714  0096                     	;# 
  1715  0097                     	;# 
  1716  0098                     	;# 
  1717  0099                     	;# 
  1718  009A                     	;# 
  1719  009B                     	;# 
  1720  009B                     	;# 
  1721  009C                     	;# 
  1722  009D                     	;# 
  1723  009E                     	;# 
  1724  010C                     	;# 
  1725  010D                     	;# 
  1726  0111                     	;# 
  1727  0112                     	;# 
  1728  0113                     	;# 
  1729  0114                     	;# 
  1730  0115                     	;# 
  1731  0116                     	;# 
  1732  0117                     	;# 
  1733  0118                     	;# 
  1734  0119                     	;# 
  1735  011A                     	;# 
  1736  011B                     	;# 
  1737  011D                     	;# 
  1738  011E                     	;# 
  1739  018C                     	;# 
  1740  018D                     	;# 
  1741  0191                     	;# 
  1742  0191                     	;# 
  1743  0192                     	;# 
  1744  0193                     	;# 
  1745  0193                     	;# 
  1746  0193                     	;# 
  1747  0194                     	;# 
  1748  0195                     	;# 
  1749  0196                     	;# 
  1750  0199                     	;# 
  1751  019A                     	;# 
  1752  019B                     	;# 
  1753  019B                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019C                     	;# 
  1757  019C                     	;# 
  1758  019D                     	;# 
  1759  019E                     	;# 
  1760  019F                     	;# 
  1761  020C                     	;# 
  1762  020D                     	;# 
  1763  0211                     	;# 
  1764  0211                     	;# 
  1765  0212                     	;# 
  1766  0212                     	;# 
  1767  0213                     	;# 
  1768  0213                     	;# 
  1769  0214                     	;# 
  1770  0214                     	;# 
  1771  0215                     	;# 
  1772  0215                     	;# 
  1773  0215                     	;# 
  1774  0216                     	;# 
  1775  0216                     	;# 
  1776  0217                     	;# 
  1777  0217                     	;# 
  1778  0219                     	;# 
  1779  021A                     	;# 
  1780  021B                     	;# 
  1781  021C                     	;# 
  1782  021D                     	;# 
  1783  021E                     	;# 
  1784  021F                     	;# 
  1785  0291                     	;# 
  1786  0291                     	;# 
  1787  0292                     	;# 
  1788  0293                     	;# 
  1789  0294                     	;# 
  1790  0295                     	;# 
  1791  0295                     	;# 
  1792  0296                     	;# 
  1793  0298                     	;# 
  1794  0298                     	;# 
  1795  0299                     	;# 
  1796  029A                     	;# 
  1797  029B                     	;# 
  1798  029C                     	;# 
  1799  029C                     	;# 
  1800  029D                     	;# 
  1801  029E                     	;# 
  1802  029E                     	;# 
  1803  0311                     	;# 
  1804  0311                     	;# 
  1805  0312                     	;# 
  1806  0313                     	;# 
  1807  0318                     	;# 
  1808  0318                     	;# 
  1809  0319                     	;# 
  1810  031A                     	;# 
  1811  0394                     	;# 
  1812  0395                     	;# 
  1813  0396                     	;# 
  1814  039A                     	;# 
  1815  039C                     	;# 
  1816  039D                     	;# 
  1817  039E                     	;# 
  1818  039F                     	;# 
  1819  0415                     	;# 
  1820  0416                     	;# 
  1821  0417                     	;# 
  1822  041C                     	;# 
  1823  041D                     	;# 
  1824  041E                     	;# 
  1825  0FE4                     	;# 
  1826  0FE5                     	;# 
  1827  0FE6                     	;# 
  1828  0FE7                     	;# 
  1829  0FE8                     	;# 
  1830  0FE9                     	;# 
  1831  0FEA                     	;# 
  1832  0FEB                     	;# 
  1833  0FED                     	;# 
  1834  0FEE                     	;# 
  1835  0FEF                     	;# 
  1836  0000                     	;# 
  1837  0001                     	;# 
  1838  0002                     	;# 
  1839  0003                     	;# 
  1840  0004                     	;# 
  1841  0005                     	;# 
  1842  0006                     	;# 
  1843  0007                     	;# 
  1844  0008                     	;# 
  1845  0009                     	;# 
  1846  000A                     	;# 
  1847  000B                     	;# 
  1848  000C                     	;# 
  1849  000D                     	;# 
  1850  0011                     	;# 
  1851  0012                     	;# 
  1852  0013                     	;# 
  1853  0014                     	;# 
  1854  0015                     	;# 
  1855  0016                     	;# 
  1856  0016                     	;# 
  1857  0017                     	;# 
  1858  0018                     	;# 
  1859  0019                     	;# 
  1860  001A                     	;# 
  1861  001B                     	;# 
  1862  001C                     	;# 
  1863  001E                     	;# 
  1864  001F                     	;# 
  1865  008C                     	;# 
  1866  008D                     	;# 
  1867  0091                     	;# 
  1868  0092                     	;# 
  1869  0093                     	;# 
  1870  0094                     	;# 
  1871  0095                     	;# 
  1872  0096                     	;# 
  1873  0097                     	;# 
  1874  0098                     	;# 
  1875  0099                     	;# 
  1876  009A                     	;# 
  1877  009B                     	;# 
  1878  009B                     	;# 
  1879  009C                     	;# 
  1880  009D                     	;# 
  1881  009E                     	;# 
  1882  010C                     	;# 
  1883  010D                     	;# 
  1884  0111                     	;# 
  1885  0112                     	;# 
  1886  0113                     	;# 
  1887  0114                     	;# 
  1888  0115                     	;# 
  1889  0116                     	;# 
  1890  0117                     	;# 
  1891  0118                     	;# 
  1892  0119                     	;# 
  1893  011A                     	;# 
  1894  011B                     	;# 
  1895  011D                     	;# 
  1896  011E                     	;# 
  1897  018C                     	;# 
  1898  018D                     	;# 
  1899  0191                     	;# 
  1900  0191                     	;# 
  1901  0192                     	;# 
  1902  0193                     	;# 
  1903  0193                     	;# 
  1904  0193                     	;# 
  1905  0194                     	;# 
  1906  0195                     	;# 
  1907  0196                     	;# 
  1908  0199                     	;# 
  1909  019A                     	;# 
  1910  019B                     	;# 
  1911  019B                     	;# 
  1912  019B                     	;# 
  1913  019B                     	;# 
  1914  019C                     	;# 
  1915  019C                     	;# 
  1916  019D                     	;# 
  1917  019E                     	;# 
  1918  019F                     	;# 
  1919  020C                     	;# 
  1920  020D                     	;# 
  1921  0211                     	;# 
  1922  0211                     	;# 
  1923  0212                     	;# 
  1924  0212                     	;# 
  1925  0213                     	;# 
  1926  0213                     	;# 
  1927  0214                     	;# 
  1928  0214                     	;# 
  1929  0215                     	;# 
  1930  0215                     	;# 
  1931  0215                     	;# 
  1932  0216                     	;# 
  1933  0216                     	;# 
  1934  0217                     	;# 
  1935  0217                     	;# 
  1936  0219                     	;# 
  1937  021A                     	;# 
  1938  021B                     	;# 
  1939  021C                     	;# 
  1940  021D                     	;# 
  1941  021E                     	;# 
  1942  021F                     	;# 
  1943  0291                     	;# 
  1944  0291                     	;# 
  1945  0292                     	;# 
  1946  0293                     	;# 
  1947  0294                     	;# 
  1948  0295                     	;# 
  1949  0295                     	;# 
  1950  0296                     	;# 
  1951  0298                     	;# 
  1952  0298                     	;# 
  1953  0299                     	;# 
  1954  029A                     	;# 
  1955  029B                     	;# 
  1956  029C                     	;# 
  1957  029C                     	;# 
  1958  029D                     	;# 
  1959  029E                     	;# 
  1960  029E                     	;# 
  1961  0311                     	;# 
  1962  0311                     	;# 
  1963  0312                     	;# 
  1964  0313                     	;# 
  1965  0318                     	;# 
  1966  0318                     	;# 
  1967  0319                     	;# 
  1968  031A                     	;# 
  1969  0394                     	;# 
  1970  0395                     	;# 
  1971  0396                     	;# 
  1972  039A                     	;# 
  1973  039C                     	;# 
  1974  039D                     	;# 
  1975  039E                     	;# 
  1976  039F                     	;# 
  1977  0415                     	;# 
  1978  0416                     	;# 
  1979  0417                     	;# 
  1980  041C                     	;# 
  1981  041D                     	;# 
  1982  041E                     	;# 
  1983  0FE4                     	;# 
  1984  0FE5                     	;# 
  1985  0FE6                     	;# 
  1986  0FE7                     	;# 
  1987  0FE8                     	;# 
  1988  0FE9                     	;# 
  1989  0FEA                     	;# 
  1990  0FEB                     	;# 
  1991  0FED                     	;# 
  1992  0FEE                     	;# 
  1993  0FEF                     	;# 
  1994  0000                     	;# 
  1995  0001                     	;# 
  1996  0002                     	;# 
  1997  0003                     	;# 
  1998  0004                     	;# 
  1999  0005                     	;# 
  2000  0006                     	;# 
  2001  0007                     	;# 
  2002  0008                     	;# 
  2003  0009                     	;# 
  2004  000A                     	;# 
  2005  000B                     	;# 
  2006  000C                     	;# 
  2007  000D                     	;# 
  2008  0011                     	;# 
  2009  0012                     	;# 
  2010  0013                     	;# 
  2011  0014                     	;# 
  2012  0015                     	;# 
  2013  0016                     	;# 
  2014  0016                     	;# 
  2015  0017                     	;# 
  2016  0018                     	;# 
  2017  0019                     	;# 
  2018  001A                     	;# 
  2019  001B                     	;# 
  2020  001C                     	;# 
  2021  001E                     	;# 
  2022  001F                     	;# 
  2023  008C                     	;# 
  2024  008D                     	;# 
  2025  0091                     	;# 
  2026  0092                     	;# 
  2027  0093                     	;# 
  2028  0094                     	;# 
  2029  0095                     	;# 
  2030  0096                     	;# 
  2031  0097                     	;# 
  2032  0098                     	;# 
  2033  0099                     	;# 
  2034  009A                     	;# 
  2035  009B                     	;# 
  2036  009B                     	;# 
  2037  009C                     	;# 
  2038  009D                     	;# 
  2039  009E                     	;# 
  2040  010C                     	;# 
  2041  010D                     	;# 
  2042  0111                     	;# 
  2043  0112                     	;# 
  2044  0113                     	;# 
  2045  0114                     	;# 
  2046  0115                     	;# 
  2047  0116                     	;# 
  2048  0117                     	;# 
  2049  0118                     	;# 
  2050  0119                     	;# 
  2051  011A                     	;# 
  2052  011B                     	;# 
  2053  011D                     	;# 
  2054  011E                     	;# 
  2055  018C                     	;# 
  2056  018D                     	;# 
  2057  0191                     	;# 
  2058  0191                     	;# 
  2059  0192                     	;# 
  2060  0193                     	;# 
  2061  0193                     	;# 
  2062  0193                     	;# 
  2063  0194                     	;# 
  2064  0195                     	;# 
  2065  0196                     	;# 
  2066  0199                     	;# 
  2067  019A                     	;# 
  2068  019B                     	;# 
  2069  019B                     	;# 
  2070  019B                     	;# 
  2071  019B                     	;# 
  2072  019C                     	;# 
  2073  019C                     	;# 
  2074  019D                     	;# 
  2075  019E                     	;# 
  2076  019F                     	;# 
  2077  020C                     	;# 
  2078  020D                     	;# 
  2079  0211                     	;# 
  2080  0211                     	;# 
  2081  0212                     	;# 
  2082  0212                     	;# 
  2083  0213                     	;# 
  2084  0213                     	;# 
  2085  0214                     	;# 
  2086  0214                     	;# 
  2087  0215                     	;# 
  2088  0215                     	;# 
  2089  0215                     	;# 
  2090  0216                     	;# 
  2091  0216                     	;# 
  2092  0217                     	;# 
  2093  0217                     	;# 
  2094  0219                     	;# 
  2095  021A                     	;# 
  2096  021B                     	;# 
  2097  021C                     	;# 
  2098  021D                     	;# 
  2099  021E                     	;# 
  2100  021F                     	;# 
  2101  0291                     	;# 
  2102  0291                     	;# 
  2103  0292                     	;# 
  2104  0293                     	;# 
  2105  0294                     	;# 
  2106  0295                     	;# 
  2107  0295                     	;# 
  2108  0296                     	;# 
  2109  0298                     	;# 
  2110  0298                     	;# 
  2111  0299                     	;# 
  2112  029A                     	;# 
  2113  029B                     	;# 
  2114  029C                     	;# 
  2115  029C                     	;# 
  2116  029D                     	;# 
  2117  029E                     	;# 
  2118  029E                     	;# 
  2119  0311                     	;# 
  2120  0311                     	;# 
  2121  0312                     	;# 
  2122  0313                     	;# 
  2123  0318                     	;# 
  2124  0318                     	;# 
  2125  0319                     	;# 
  2126  031A                     	;# 
  2127  0394                     	;# 
  2128  0395                     	;# 
  2129  0396                     	;# 
  2130  039A                     	;# 
  2131  039C                     	;# 
  2132  039D                     	;# 
  2133  039E                     	;# 
  2134  039F                     	;# 
  2135  0415                     	;# 
  2136  0416                     	;# 
  2137  0417                     	;# 
  2138  041C                     	;# 
  2139  041D                     	;# 
  2140  041E                     	;# 
  2141  0FE4                     	;# 
  2142  0FE5                     	;# 
  2143  0FE6                     	;# 
  2144  0FE7                     	;# 
  2145  0FE8                     	;# 
  2146  0FE9                     	;# 
  2147  0FEA                     	;# 
  2148  0FEB                     	;# 
  2149  0FED                     	;# 
  2150  0FEE                     	;# 
  2151  0FEF                     	;# 
  2152                           
  2153                           	psect	idataBANK2
  2154  0F44                     __pidataBANK2:	
  2155                           
  2156                           ;initializer for _H7826_Gain
  2157  0F44  34B4               	retlw	low (STR_20| (0+32768))
  2158  0F45  3483               	retlw	high (STR_20| (0+32768))
  2159  0F46  34AF               	retlw	low (STR_21| (0+32768))
  2160  0F47  3483               	retlw	high (STR_21| (0+32768))
  2161  0F48  34BE               	retlw	low (STR_22| (0+32768))
  2162  0F49  3483               	retlw	high (STR_22| (0+32768))
  2163  0F4A  3470               	retlw	low (STR_23| (0+32768))
  2164  0F4B  3483               	retlw	high (STR_23| (0+32768))
  2165  0F4C  3446               	retlw	low (STR_24| (0+32768))
  2166  0F4D  3483               	retlw	high (STR_24| (0+32768))
  2167  0F4E  3452               	retlw	low (STR_25| (0+32768))
  2168  0F4F  3483               	retlw	high (STR_25| (0+32768))
  2169  0F50  346A               	retlw	low (STR_26| (0+32768))
  2170  0F51  3483               	retlw	high (STR_26| (0+32768))
  2171  0F52  3417               	retlw	low (STR_27| (0+32768))
  2172  0F53  3483               	retlw	high (STR_27| (0+32768))
  2173  0F54  3410               	retlw	low (STR_28| (0+32768))
  2174  0F55  3483               	retlw	high (STR_28| (0+32768))
  2175  0F56  341E               	retlw	low (STR_29| (0+32768))
  2176  0F57  3483               	retlw	high (STR_29| (0+32768))
  2177  0F58  34E6               	retlw	low (STR_30| (0+32768))
  2178  0F59  3482               	retlw	high (STR_30| (0+32768))
  2179  0F5A  342C               	retlw	low (STR_31| (0+32768))
  2180  0F5B  3483               	retlw	high (STR_31| (0+32768))
  2181  0F5C  34C8               	retlw	low (STR_32| (0+32768))
  2182  0F5D  3482               	retlw	high (STR_32| (0+32768))
  2183  0F5E  34C0               	retlw	low (STR_33| (0+32768))
  2184  0F5F  3482               	retlw	high (STR_33| (0+32768))
  2185  0F60  34B8               	retlw	low (STR_34| (0+32768))
  2186  0F61  3482               	retlw	high (STR_34| (0+32768))
  2187                           
  2188                           ;initializer for _DAC_VoltageTable
  2189  0F62  34D2               	retlw	low (STR_5| (0+32768))
  2190  0F63  3483               	retlw	high (STR_5| (0+32768))
  2191  0F64  3482               	retlw	low (STR_6| (0+32768))
  2192  0F65  3483               	retlw	high (STR_6| (0+32768))
  2193  0F66  34D7               	retlw	low (STR_7| (0+32768))
  2194  0F67  3483               	retlw	high (STR_7| (0+32768))
  2195  0F68  3488               	retlw	low (STR_8| (0+32768))
  2196  0F69  3483               	retlw	high (STR_8| (0+32768))
  2197  0F6A  34DC               	retlw	low (STR_9| (0+32768))
  2198  0F6B  3483               	retlw	high (STR_9| (0+32768))
  2199  0F6C  348E               	retlw	low (STR_10| (0+32768))
  2200  0F6D  3483               	retlw	high (STR_10| (0+32768))
  2201  0F6E  34E1               	retlw	low (STR_11| (0+32768))
  2202  0F6F  3483               	retlw	high (STR_11| (0+32768))
  2203  0F70  3494               	retlw	low (STR_12| (0+32768))
  2204  0F71  3483               	retlw	high (STR_12| (0+32768))
  2205  0F72  34E6               	retlw	low (STR_13| (0+32768))
  2206  0F73  3483               	retlw	high (STR_13| (0+32768))
  2207  0F74  349A               	retlw	low (STR_14| (0+32768))
  2208  0F75  3483               	retlw	high (STR_14| (0+32768))
  2209  0F76  34C3               	retlw	low (STR_15| (0+32768))
  2210  0F77  3483               	retlw	high (STR_15| (0+32768))
  2211  0F78  3476               	retlw	low (STR_16| (0+32768))
  2212  0F79  3483               	retlw	high (STR_16| (0+32768))
  2213  0F7A  34C8               	retlw	low (STR_17| (0+32768))
  2214  0F7B  3483               	retlw	high (STR_17| (0+32768))
  2215  0F7C  347C               	retlw	low (STR_18| (0+32768))
  2216  0F7D  3483               	retlw	high (STR_18| (0+32768))
  2217  0F7E  34CD               	retlw	low (STR_19| (0+32768))
  2218  0F7F  3483               	retlw	high (STR_19| (0+32768))
  2219                           
  2220                           	psect	idataBANK3
  2221  0DF4                     __pidataBANK3:	
  2222                           
  2223                           ;initializer for _H7826_01_Gain
  2224  0DF4  34A0               	retlw	low (STR_35| (0+32768))
  2225  0DF5  3483               	retlw	high (STR_35| (0+32768))
  2226  0DF6  34A5               	retlw	low (STR_36| (0+32768))
  2227  0DF7  3483               	retlw	high (STR_36| (0+32768))
  2228  0DF8  34B9               	retlw	low (STR_37| (0+32768))
  2229  0DF9  3483               	retlw	high (STR_37| (0+32768))
  2230  0DFA  34AA               	retlw	low (STR_38| (0+32768))
  2231  0DFB  3483               	retlw	high (STR_38| (0+32768))
  2232  0DFC  3458               	retlw	low (STR_39| (0+32768))
  2233  0DFD  3483               	retlw	high (STR_39| (0+32768))
  2234  0DFE  345E               	retlw	low (STR_40| (0+32768))
  2235  0DFF  3483               	retlw	high (STR_40| (0+32768))
  2236  0E00  3464               	retlw	low (STR_41| (0+32768))
  2237  0E01  3483               	retlw	high (STR_41| (0+32768))
  2238  0E02  344C               	retlw	low (STR_42| (0+32768))
  2239  0E03  3483               	retlw	high (STR_42| (0+32768))
  2240  0E04  34FB               	retlw	low (STR_43| (0+32768))
  2241  0E05  3482               	retlw	high (STR_43| (0+32768))
  2242  0E06  3425               	retlw	low (STR_44| (0+32768))
  2243  0E07  3483               	retlw	high (STR_44| (0+32768))
  2244  0E08  3402               	retlw	low (STR_45| (0+32768))
  2245  0E09  3483               	retlw	high (STR_45| (0+32768))
  2246  0E0A  3409               	retlw	low (STR_46| (0+32768))
  2247  0E0B  3483               	retlw	high (STR_46| (0+32768))
  2248  0E0C  3433               	retlw	low (STR_47| (0+32768))
  2249  0E0D  3483               	retlw	high (STR_47| (0+32768))
  2250  0E0E  34ED               	retlw	low (STR_48| (0+32768))
  2251  0E0F  3482               	retlw	high (STR_48| (0+32768))
  2252  0E10  34F4               	retlw	low (STR_49| (0+32768))
  2253  0E11  3482               	retlw	high (STR_49| (0+32768))
  2254                           
  2255                           	psect	stringtext
  2256  0285                     __pstringtext:	
  2257  0285                     _DAC_DataTable:	
  2258  0285  3499               	retlw	153
  2259  0286  3401               	retlw	1
  2260  0287  34C2               	retlw	194
  2261  0288  3401               	retlw	1
  2262  0289  34EB               	retlw	235
  2263  028A  3401               	retlw	1
  2264  028B  3414               	retlw	20
  2265  028C  3402               	retlw	2
  2266  028D  343D               	retlw	61
  2267  028E  3402               	retlw	2
  2268  028F  3466               	retlw	102
  2269  0290  3402               	retlw	2
  2270  0291  348F               	retlw	143
  2271  0292  3402               	retlw	2
  2272  0293  34B8               	retlw	184
  2273  0294  3402               	retlw	2
  2274  0295  34E1               	retlw	225
  2275  0296  3402               	retlw	2
  2276  0297  340A               	retlw	10
  2277  0298  3403               	retlw	3
  2278  0299  3433               	retlw	51
  2279  029A  3403               	retlw	3
  2280  029B  345B               	retlw	91
  2281  029C  3403               	retlw	3
  2282  029D  3484               	retlw	132
  2283  029E  3403               	retlw	3
  2284  029F  34AD               	retlw	173
  2285  02A0  3403               	retlw	3
  2286  02A1  34D6               	retlw	214
  2287  02A2  3403               	retlw	3
  2288  02A3                     __end_of_DAC_DataTable:	
  2289  0016                     _TMR1	set	22
  2290  000C                     _PORTA	set	12
  2291  001F                     _CPSCON1	set	31
  2292  001E                     _CPSCON0	set	30
  2293  0015                     _TMR0	set	21
  2294  0019                     _T1GCON	set	25
  2295  0018                     _T1CON	set	24
  2296  000D                     _PORTB	set	13
  2297  001B                     _PR2	set	27
  2298  001A                     _TMR2	set	26
  2299  001C                     _T2CON	set	28
  2300  00C0                     _TMR1ON	set	192
  2301  009B                     _TMR6IF	set	155
  2302  0099                     _TMR4IF	set	153
  2303  0088                     _TMR1IF	set	136
  2304  005F                     _GIE	set	95
  2305  005E                     _PEIE	set	94
  2306  00A1                     _BCL2IF	set	161
  2307  00A0                     _SSP2IF	set	160
  2308  0093                     _BCL1IF	set	147
  2309  008B                     _SSP1IF	set	139
  2310  0099                     _OSCCON	set	153
  2311  0095                     _OPTION_REG	set	149
  2312  008D                     _TRISB	set	141
  2313  008C                     _TRISA	set	140
  2314  049B                     _TMR6IE	set	1179
  2315  0499                     _TMR4IE	set	1177
  2316  0488                     _TMR1IE	set	1160
  2317  04A1                     _BCL2IE	set	1185
  2318  04A0                     _SSP2IE	set	1184
  2319  0493                     _BCL1IE	set	1171
  2320  048B                     _SSP1IE	set	1163
  2321  011E                     _APFCON1	set	286
  2322  011D                     _APFCON0	set	285
  2323  0866                     _LATA6	set	2150
  2324  0863                     _LATA3	set	2147
  2325  0864                     _LATA4	set	2148
  2326  018D                     _ANSELB	set	397
  2327  018C                     _ANSELA	set	396
  2328  021C                     _SSP2STATbits	set	540
  2329  0219                     _SSP2BUF	set	537
  2330  021E                     _SSP2CON2	set	542
  2331  021B                     _SSP2MSK	set	539
  2332  021E                     _SSP2CON2bits	set	542
  2333  021D                     _SSP2CON1bits	set	541
  2334  021A                     _SSP2ADD	set	538
  2335  021C                     _SSP2STAT	set	540
  2336  021D                     _SSP2CON1	set	541
  2337  0214                     _SSP1STATbits	set	532
  2338  0211                     _SSP1BUF	set	529
  2339  0216                     _SSP1CON2	set	534
  2340  0213                     _SSP1MSK	set	531
  2341  0216                     _SSP1CON2bits	set	534
  2342  0215                     _SSP1CON1bits	set	533
  2343  0212                     _SSP1ADD	set	530
  2344  0214                     _SSP1STAT	set	532
  2345  0215                     _SSP1CON1	set	533
  2346  0298                     _CCPR2L	set	664
  2347  029E                     _CCPTMRS	set	670
  2348  029A                     _CCP2CON	set	666
  2349  041E                     _T6CON	set	1054
  2350  041C                     _TMR6	set	1052
  2351  041D                     _PR6	set	1053
  2352  0417                     _T4CON	set	1047
  2353  0415                     _TMR4	set	1045
  2354  0416                     _PR4	set	1046
  2355  02A3                     STR_2:	
  2356  02A3  3453               	retlw	83	;'S'
  2357  02A4  3445               	retlw	69	;'E'
  2358  02A5  344C               	retlw	76	;'L'
  2359  02A6  3445               	retlw	69	;'E'
  2360  02A7  3443               	retlw	67	;'C'
  2361  02A8  3454               	retlw	84	;'T'
  2362  02A9  3446               	retlw	70	;'F'
  2363  02AA  3455               	retlw	85	;'U'
  2364  02AB  344E               	retlw	78	;'N'
  2365  02AC  3443               	retlw	67	;'C'
  2366  02AD  3400               	retlw	0
  2367  02AE                     STR_4:	
  2368  02AE  3450               	retlw	80	;'P'
  2369  02AF  344D               	retlw	77	;'M'
  2370  02B0  3454               	retlw	84	;'T'
  2371  02B1  3444               	retlw	68	;'D'
  2372  02B2  3445               	retlw	69	;'E'
  2373  02B3  3456               	retlw	86	;'V'
  2374  02B4  3449               	retlw	73	;'I'
  2375  02B5  3443               	retlw	67	;'C'
  2376  02B6  3445               	retlw	69	;'E'
  2377  02B7  3400               	retlw	0
  2378  02B8                     STR_34:	
  2379  02B8  3432               	retlw	50	;'2'
  2380  02B9  3437               	retlw	55	;'7'
  2381  02BA  3437               	retlw	55	;'7'
  2382  02BB  3434               	retlw	52	;'4'
  2383  02BC  3435               	retlw	53	;'5'
  2384  02BD  3436               	retlw	54	;'6'
  2385  02BE  3432               	retlw	50	;'2'
  2386  02BF  3400               	retlw	0
  2387  02C0                     STR_33:	
  2388  02C0  3431               	retlw	49	;'1'
  2389  02C1  3439               	retlw	57	;'9'
  2390  02C2  3434               	retlw	52	;'4'
  2391  02C3  3430               	retlw	48	;'0'
  2392  02C4  3436               	retlw	54	;'6'
  2393  02C5  3437               	retlw	55	;'7'
  2394  02C6  3433               	retlw	51	;'3'
  2395  02C7  3400               	retlw	0
  2396  02C8                     STR_32:	
  2397  02C8  3431               	retlw	49	;'1'
  2398  02C9  3433               	retlw	51	;'3'
  2399  02CA  3433               	retlw	51	;'3'
  2400  02CB  3436               	retlw	54	;'6'
  2401  02CC  3430               	retlw	48	;'0'
  2402  02CD  3430               	retlw	48	;'0'
  2403  02CE  3436               	retlw	54	;'6'
  2404  02CF  3400               	retlw	0
  2405  02D0                     STR_3:	
  2406  02D0  3441               	retlw	65	;'A'
  2407  02D1  3444               	retlw	68	;'D'
  2408  02D2  344A               	retlw	74	;'J'
  2409  02D3  3447               	retlw	71	;'G'
  2410  02D4  3441               	retlw	65	;'A'
  2411  02D5  3449               	retlw	73	;'I'
  2412  02D6  344E               	retlw	78	;'N'
  2413  02D7  3400               	retlw	0
  2414  02D8                     STR_51:	
  2415  02D8  3425               	retlw	37	;'%'
  2416  02D9  3430               	retlw	48	;'0'
  2417  02DA  3438               	retlw	56	;'8'
  2418  02DB  346C               	retlw	108	;'l'
  2419  02DC  3458               	retlw	88	;'X'
  2420  02DD  3420               	retlw	32	;' '
  2421  02DE  3400               	retlw	0
  2422  02DF                     STR_54:	
  2423  02DF  3420               	retlw	32	;' '
  2424  02E0  3425               	retlw	37	;'%'
  2425  02E1  3430               	retlw	48	;'0'
  2426  02E2  3438               	retlw	56	;'8'
  2427  02E3  344C               	retlw	76	;'L'
  2428  02E4  3458               	retlw	88	;'X'
  2429  02E5  3400               	retlw	0
  2430  02E6                     STR_30:	
  2431  02E6  3436               	retlw	54	;'6'
  2432  02E7  3430               	retlw	48	;'0'
  2433  02E8  3430               	retlw	48	;'0'
  2434  02E9  3430               	retlw	48	;'0'
  2435  02EA  3430               	retlw	48	;'0'
  2436  02EB  3430               	retlw	48	;'0'
  2437  02EC  3400               	retlw	0
  2438  02ED                     STR_48:	
  2439  02ED  3437               	retlw	55	;'7'
  2440  02EE  3430               	retlw	48	;'0'
  2441  02EF  3430               	retlw	48	;'0'
  2442  02F0  3438               	retlw	56	;'8'
  2443  02F1  3439               	retlw	57	;'9'
  2444  02F2  3430               	retlw	48	;'0'
  2445  02F3  3400               	retlw	0
  2446  02F4                     STR_49:	
  2447  02F4  3439               	retlw	57	;'9'
  2448  02F5  3436               	retlw	54	;'6'
  2449  02F6  3438               	retlw	56	;'8'
  2450  02F7  3434               	retlw	52	;'4'
  2451  02F8  3437               	retlw	55	;'7'
  2452  02F9  3432               	retlw	50	;'2'
  2453  02FA  3400               	retlw	0
  2454  02FB                     STR_43:	
  2455  02FB  3431               	retlw	49	;'1'
  2456  02FC  3430               	retlw	48	;'0'
  2457  02FD  3438               	retlw	56	;'8'
  2458  02FE  3438               	retlw	56	;'8'
  2459  02FF  3434               	retlw	52	;'4'
  2460  0300  3433               	retlw	51	;'3'
  2461  0301  3400               	retlw	0
  2462  0302                     STR_45:	
  2463  0302  3432               	retlw	50	;'2'
  2464  0303  3434               	retlw	52	;'4'
  2465  0304  3432               	retlw	50	;'2'
  2466  0305  3433               	retlw	51	;'3'
  2467  0306  3436               	retlw	54	;'6'
  2468  0307  3434               	retlw	52	;'4'
  2469  0308  3400               	retlw	0
  2470  0309                     STR_46:	
  2471  0309  3433               	retlw	51	;'3'
  2472  030A  3435               	retlw	53	;'5'
  2473  030B  3431               	retlw	49	;'1'
  2474  030C  3431               	retlw	49	;'1'
  2475  030D  3432               	retlw	50	;'2'
  2476  030E  3437               	retlw	55	;'7'
  2477  030F  3400               	retlw	0
  2478  0310                     STR_28:	
  2479  0310  3432               	retlw	50	;'2'
  2480  0311  3434               	retlw	52	;'4'
  2481  0312  3437               	retlw	55	;'7'
  2482  0313  3436               	retlw	54	;'6'
  2483  0314  3434               	retlw	52	;'4'
  2484  0315  3437               	retlw	55	;'7'
  2485  0316  3400               	retlw	0
  2486  0317                     STR_27:	
  2487  0317  3431               	retlw	49	;'1'
  2488  0318  3435               	retlw	53	;'5'
  2489  0319  3433               	retlw	51	;'3'
  2490  031A  3432               	retlw	50	;'2'
  2491  031B  3432               	retlw	50	;'2'
  2492  031C  3438               	retlw	56	;'8'
  2493  031D  3400               	retlw	0
  2494  031E                     STR_29:	
  2495  031E  3433               	retlw	51	;'3'
  2496  031F  3438               	retlw	56	;'8'
  2497  0320  3439               	retlw	57	;'9'
  2498  0321  3439               	retlw	57	;'9'
  2499  0322  3438               	retlw	56	;'8'
  2500  0323  3438               	retlw	56	;'8'
  2501  0324  3400               	retlw	0
  2502  0325                     STR_44:	
  2503  0325  3431               	retlw	49	;'1'
  2504  0326  3436               	retlw	54	;'6'
  2505  0327  3434               	retlw	52	;'4'
  2506  0328  3431               	retlw	49	;'1'
  2507  0329  3433               	retlw	51	;'3'
  2508  032A  3439               	retlw	57	;'9'
  2509  032B  3400               	retlw	0
  2510  032C                     STR_31:	
  2511  032C  3439               	retlw	57	;'9'
  2512  032D  3430               	retlw	48	;'0'
  2513  032E  3433               	retlw	51	;'3'
  2514  032F  3438               	retlw	56	;'8'
  2515  0330  3439               	retlw	57	;'9'
  2516  0331  3439               	retlw	57	;'9'
  2517  0332  3400               	retlw	0
  2518  0333                     STR_47:	
  2519  0333  3434               	retlw	52	;'4'
  2520  0334  3439               	retlw	57	;'9'
  2521  0335  3439               	retlw	57	;'9'
  2522  0336  3439               	retlw	57	;'9'
  2523  0337  3439               	retlw	57	;'9'
  2524  0338  3439               	retlw	57	;'9'
  2525  0339  3400               	retlw	0
  2526  033A                     STR_52:	
  2527  033A  3420               	retlw	32	;' '
  2528  033B  3425               	retlw	37	;'%'
  2529  033C  3430               	retlw	48	;'0'
  2530  033D  3432               	retlw	50	;'2'
  2531  033E  3458               	retlw	88	;'X'
  2532  033F  3400               	retlw	0
  2533  0340                     STR_53:	
  2534  0340  3420               	retlw	32	;' '
  2535  0341  3425               	retlw	37	;'%'
  2536  0342  3430               	retlw	48	;'0'
  2537  0343  3434               	retlw	52	;'4'
  2538  0344  3458               	retlw	88	;'X'
  2539  0345  3400               	retlw	0
  2540  0346                     STR_24:	
  2541  0346  3433               	retlw	51	;'3'
  2542  0347  3430               	retlw	48	;'0'
  2543  0348  3430               	retlw	48	;'0'
  2544  0349  3430               	retlw	48	;'0'
  2545  034A  3430               	retlw	48	;'0'
  2546  034B  3400               	retlw	0
  2547  034C                     STR_42:	
  2548  034C  3437               	retlw	55	;'7'
  2549  034D  3430               	retlw	48	;'0'
  2550  034E  3435               	retlw	53	;'5'
  2551  034F  3430               	retlw	48	;'0'
  2552  0350  3430               	retlw	48	;'0'
  2553  0351  3400               	retlw	0
  2554  0352                     STR_25:	
  2555  0352  3435               	retlw	53	;'5'
  2556  0353  3433               	retlw	51	;'3'
  2557  0354  3435               	retlw	53	;'5'
  2558  0355  3435               	retlw	53	;'5'
  2559  0356  3433               	retlw	51	;'3'
  2560  0357  3400               	retlw	0
  2561  0358                     STR_39:	
  2562  0358  3431               	retlw	49	;'1'
  2563  0359  3436               	retlw	54	;'6'
  2564  035A  3431               	retlw	49	;'1'
  2565  035B  3432               	retlw	50	;'2'
  2566  035C  3435               	retlw	53	;'5'
  2567  035D  3400               	retlw	0
  2568  035E                     STR_40:	
  2569  035E  3432               	retlw	50	;'2'
  2570  035F  3437               	retlw	55	;'7'
  2571  0360  3432               	retlw	50	;'2'
  2572  0361  3433               	retlw	51	;'3'
  2573  0362  3438               	retlw	56	;'8'
  2574  0363  3400               	retlw	0
  2575  0364                     STR_41:	
  2576  0364  3434               	retlw	52	;'4'
  2577  0365  3434               	retlw	52	;'4'
  2578  0366  3434               	retlw	52	;'4'
  2579  0367  3437               	retlw	55	;'7'
  2580  0368  3438               	retlw	56	;'8'
  2581  0369  3400               	retlw	0
  2582  036A                     STR_26:	
  2583  036A  3439               	retlw	57	;'9'
  2584  036B  3432               	retlw	50	;'2'
  2585  036C  3430               	retlw	48	;'0'
  2586  036D  3438               	retlw	56	;'8'
  2587  036E  3438               	retlw	56	;'8'
  2588  036F  3400               	retlw	0
  2589  0370                     STR_23:	
  2590  0370  3431               	retlw	49	;'1'
  2591  0371  3436               	retlw	54	;'6'
  2592  0372  3430               	retlw	48	;'0'
  2593  0373  3439               	retlw	57	;'9'
  2594  0374  3439               	retlw	57	;'9'
  2595  0375  3400               	retlw	0
  2596  0376                     STR_16:	
  2597  0376  3431               	retlw	49	;'1'
  2598  0377  342E               	retlw	46	;'.'
  2599  0378  3430               	retlw	48	;'0'
  2600  0379  3435               	retlw	53	;'5'
  2601  037A  3456               	retlw	86	;'V'
  2602  037B  3400               	retlw	0
  2603  037C                     STR_18:	
  2604  037C  3431               	retlw	49	;'1'
  2605  037D  342E               	retlw	46	;'.'
  2606  037E  3431               	retlw	49	;'1'
  2607  037F  3435               	retlw	53	;'5'
  2608  0380  3456               	retlw	86	;'V'
  2609  0381  3400               	retlw	0
  2610  0382                     STR_6:	
  2611  0382  3430               	retlw	48	;'0'
  2612  0383  342E               	retlw	46	;'.'
  2613  0384  3435               	retlw	53	;'5'
  2614  0385  3435               	retlw	53	;'5'
  2615  0386  3456               	retlw	86	;'V'
  2616  0387  3400               	retlw	0
  2617  0388                     STR_8:	
  2618  0388  3430               	retlw	48	;'0'
  2619  0389  342E               	retlw	46	;'.'
  2620  038A  3436               	retlw	54	;'6'
  2621  038B  3435               	retlw	53	;'5'
  2622  038C  3456               	retlw	86	;'V'
  2623  038D  3400               	retlw	0
  2624  038E                     STR_10:	
  2625  038E  3430               	retlw	48	;'0'
  2626  038F  342E               	retlw	46	;'.'
  2627  0390  3437               	retlw	55	;'7'
  2628  0391  3435               	retlw	53	;'5'
  2629  0392  3456               	retlw	86	;'V'
  2630  0393  3400               	retlw	0
  2631  0394                     STR_12:	
  2632  0394  3430               	retlw	48	;'0'
  2633  0395  342E               	retlw	46	;'.'
  2634  0396  3438               	retlw	56	;'8'
  2635  0397  3435               	retlw	53	;'5'
  2636  0398  3456               	retlw	86	;'V'
  2637  0399  3400               	retlw	0
  2638  039A                     STR_14:	
  2639  039A  3430               	retlw	48	;'0'
  2640  039B  342E               	retlw	46	;'.'
  2641  039C  3439               	retlw	57	;'9'
  2642  039D  3435               	retlw	53	;'5'
  2643  039E  3456               	retlw	86	;'V'
  2644  039F  3400               	retlw	0
  2645  03A0                     STR_35:	
  2646  03A0  3431               	retlw	49	;'1'
  2647  03A1  3432               	retlw	50	;'2'
  2648  03A2  3435               	retlw	53	;'5'
  2649  03A3  3430               	retlw	48	;'0'
  2650  03A4  3400               	retlw	0
  2651  03A5                     STR_36:	
  2652  03A5  3432               	retlw	50	;'2'
  2653  03A6  3435               	retlw	53	;'5'
  2654  03A7  3438               	retlw	56	;'8'
  2655  03A8  3430               	retlw	48	;'0'
  2656  03A9  3400               	retlw	0
  2657  03AA                     STR_38:	
  2658  03AA  3439               	retlw	57	;'9'
  2659  03AB  3431               	retlw	49	;'1'
  2660  03AC  3438               	retlw	56	;'8'
  2661  03AD  3432               	retlw	50	;'2'
  2662  03AE  3400               	retlw	0
  2663  03AF                     STR_21:	
  2664  03AF  3433               	retlw	51	;'3'
  2665  03B0  3439               	retlw	57	;'9'
  2666  03B1  3435               	retlw	53	;'5'
  2667  03B2  3437               	retlw	55	;'7'
  2668  03B3  3400               	retlw	0
  2669  03B4                     STR_20:	
  2670  03B4  3431               	retlw	49	;'1'
  2671  03B5  3437               	retlw	55	;'7'
  2672  03B6  3437               	retlw	55	;'7'
  2673  03B7  3437               	retlw	55	;'7'
  2674  03B8  3400               	retlw	0
  2675  03B9                     STR_37:	
  2676  03B9  3434               	retlw	52	;'4'
  2677  03BA  3439               	retlw	57	;'9'
  2678  03BB  3439               	retlw	57	;'9'
  2679  03BC  3438               	retlw	56	;'8'
  2680  03BD  3400               	retlw	0
  2681  03BE                     STR_22:	
  2682  03BE  3438               	retlw	56	;'8'
  2683  03BF  3432               	retlw	50	;'2'
  2684  03C0  3431               	retlw	49	;'1'
  2685  03C1  3439               	retlw	57	;'9'
  2686  03C2  3400               	retlw	0
  2687  03C3                     STR_15:	
  2688  03C3  3431               	retlw	49	;'1'
  2689  03C4  342E               	retlw	46	;'.'
  2690  03C5  3430               	retlw	48	;'0'
  2691  03C6  3456               	retlw	86	;'V'
  2692  03C7  3400               	retlw	0
  2693  03C8                     STR_17:	
  2694  03C8  3431               	retlw	49	;'1'
  2695  03C9  342E               	retlw	46	;'.'
  2696  03CA  3431               	retlw	49	;'1'
  2697  03CB  3456               	retlw	86	;'V'
  2698  03CC  3400               	retlw	0
  2699  03CD                     STR_19:	
  2700  03CD  3431               	retlw	49	;'1'
  2701  03CE  342E               	retlw	46	;'.'
  2702  03CF  3432               	retlw	50	;'2'
  2703  03D0  3456               	retlw	86	;'V'
  2704  03D1  3400               	retlw	0
  2705  03D2                     STR_5:	
  2706  03D2  3430               	retlw	48	;'0'
  2707  03D3  342E               	retlw	46	;'.'
  2708  03D4  3435               	retlw	53	;'5'
  2709  03D5  3456               	retlw	86	;'V'
  2710  03D6  3400               	retlw	0
  2711  03D7                     STR_7:	
  2712  03D7  3430               	retlw	48	;'0'
  2713  03D8  342E               	retlw	46	;'.'
  2714  03D9  3436               	retlw	54	;'6'
  2715  03DA  3456               	retlw	86	;'V'
  2716  03DB  3400               	retlw	0
  2717  03DC                     STR_9:	
  2718  03DC  3430               	retlw	48	;'0'
  2719  03DD  342E               	retlw	46	;'.'
  2720  03DE  3437               	retlw	55	;'7'
  2721  03DF  3456               	retlw	86	;'V'
  2722  03E0  3400               	retlw	0
  2723  03E1                     STR_11:	
  2724  03E1  3430               	retlw	48	;'0'
  2725  03E2  342E               	retlw	46	;'.'
  2726  03E3  3438               	retlw	56	;'8'
  2727  03E4  3456               	retlw	86	;'V'
  2728  03E5  3400               	retlw	0
  2729  03E6                     STR_13:	
  2730  03E6  3430               	retlw	48	;'0'
  2731  03E7  342E               	retlw	46	;'.'
  2732  03E8  3439               	retlw	57	;'9'
  2733  03E9  3456               	retlw	86	;'V'
  2734  03EA  3400               	retlw	0
  2735  03EB                     STR_1:	
  2736  03EB  3425               	retlw	37	;'%'
  2737  03EC  346C               	retlw	108	;'l'
  2738  03ED  3475               	retlw	117	;'u'
  2739  03EE  3400               	retlw	0
  2740  03EF                     STR_50:	
  2741  03EF  340D               	retlw	13
  2742  03F0  3400               	retlw	0
  2743                           
  2744                           ; #config settings
  2745  0000                     
  2746                           	psect	cinit
  2747  0033                     start_initialization:	
  2748  0033                     __initialization:	
  2749                           
  2750                           ; Initialize objects allocated to BANK2
  2751  0033  3044               	movlw	low __pidataBANK2
  2752  0034  0084               	movwf	4
  2753  0035  308F               	movlw	(high __pidataBANK2)| (0+128)
  2754  0036  0085               	movwf	5
  2755  0037  3020               	movlw	low __pdataBANK2
  2756  0038  0086               	movwf	6
  2757  0039  3001               	movlw	high __pdataBANK2
  2758  003A  0087               	movwf	7
  2759  003B  303C               	movlw	60
  2760  003C  318C  246F  3180   	fcall	init_ram
  2761                           
  2762                           ; Initialize objects allocated to BANK3
  2763  003F  30F4               	movlw	low __pidataBANK3
  2764  0040  0084               	movwf	4
  2765  0041  308D               	movlw	(high __pidataBANK3)| (0+128)
  2766  0042  0085               	movwf	5
  2767  0043  30A0               	movlw	low __pdataBANK3
  2768  0044  0086               	movwf	6
  2769  0045  3001               	movlw	high __pdataBANK3
  2770  0046  0087               	movwf	7
  2771  0047  301E               	movlw	30
  2772  0048  318C  246F  3180   	fcall	init_ram
  2773                           
  2774                           ; Clear objects allocated to COMMON
  2775  004B  01F6               	clrf	__pbssCOMMON& (0+127)
  2776  004C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2777  004D  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2778  004E  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2779  004F  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  2780                           
  2781                           ; Clear objects allocated to BANK1
  2782  0050  30A0               	movlw	low __pbssBANK1
  2783  0051  0084               	movwf	4
  2784  0052  3000               	movlw	high __pbssBANK1
  2785  0053  0085               	movwf	5
  2786  0054  3044               	movlw	68
  2787  0055  318C  2469         	fcall	clear_ram0
  2788  0057                     end_of_initialization:	
  2789                           ;End of C runtime variable initialization code
  2790                           
  2791  0057                     __end_of__initialization:	
  2792  0057  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2793  0058  0020               	movlb	0
  2794  0059  3185  2D20         	ljmp	_main	;jump to C main() function
  2795                           
  2796                           	psect	bssCOMMON
  2797  0076                     __pbssCOMMON:	
  2798  0076                     _xfunc_out:	
  2799  0076                     	ds	2
  2800  0078                     _outptr:	
  2801  0078                     	ds	1
  2802  0079                     CPSx_Read@channel:	
  2803  0079                     	ds	1
  2804  007A                     _ConfigReg:	
  2805  007A                     	ds	1
  2806                           
  2807                           	psect	bssBANK1
  2808  00A0                     __pbssBANK1:	
  2809  00A0                     _timesum:	
  2810  00A0                     	ds	4
  2811  00A4                     _countsum:	
  2812  00A4                     	ds	4
  2813  00A8                     _mTouch_Interval:	
  2814  00A8                     	ds	3
  2815  00AB                     _CPS_Data:	
  2816  00AB                     	ds	3
  2817  00AE                     _CPS_PreData:	
  2818  00AE                     	ds	3
  2819  00B1                     _MemoryReg:	
  2820  00B1                     	ds	3
  2821  00B4                     _errno:	
  2822  00B4                     	ds	2
  2823  00B6                     _xfunc_in:	
  2824  00B6                     	ds	2
  2825  00B8                     _mode:	
  2826  00B8                     	ds	2
  2827  00BA                     _count:	
  2828  00BA                     	ds	2
  2829  00BC                     _I2C2_Config:	
  2830  00BC                     	ds	19
  2831  00CF                     _I2C1_Config:	
  2832  00CF                     	ds	19
  2833  00E2                     _VoltageReg:	
  2834  00E2                     	ds	2
  2835                           
  2836                           	psect	dataBANK2
  2837  0120                     __pdataBANK2:	
  2838  0120                     _H7826_Gain:	
  2839  0120                     	ds	30
  2840  013E                     _DAC_VoltageTable:	
  2841  013E                     	ds	30
  2842                           
  2843                           	psect	dataBANK3
  2844  01A0                     __pdataBANK3:	
  2845  01A0                     _H7826_01_Gain:	
  2846  01A0                     	ds	30
  2847                           
  2848                           	psect	inittext
  2849  0C6F                     init_ram:	
  2850  0C6F  00FE               	movwf	126
  2851  0C70                     initloop:	
  2852  0C70  0012               	moviw fsr0++
  2853  0C71  001E               	movwi fsr1++
  2854  0C72  0BFE               	decfsz	126,f
  2855  0C73  2C70               	goto	initloop
  2856  0C74  3400               	retlw	0
  2857                           
  2858                           	psect	clrtext
  2859  0C69                     clear_ram0:	
  2860                           ;	Called with FSR0 containing the base address, and
  2861                           ;	WREG with the size to clear
  2862                           
  2863  0C69  0064               	clrwdt	;clear the watchdog before getting into this loop
  2864  0C6A                     clrloop0:	
  2865  0C6A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2866  0C6B  3101               	addfsr 0,1
  2867  0C6C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2868  0C6D  2C6A               	goto	clrloop0	;have we reached the end yet?
  2869  0C6E  3400               	retlw	0	;all done for this memory range, return
  2870                           
  2871                           	psect	cstackBANK1
  2872  00E4                     __pcstackBANK1:	
  2873  00E4                     ??_xprintf:	
  2874                           
  2875                           ; 1 bytes @ 0x0
  2876  00E4                     	ds	1
  2877  00E5                     xprintf@arp:	
  2878                           
  2879                           ; 1 bytes @ 0x1
  2880  00E5                     	ds	1
  2881  00E6                     ??_main:	
  2882                           
  2883                           ; 1 bytes @ 0x2
  2884  00E6                     	ds	1
  2885                           
  2886                           	psect	cstackCOMMON
  2887  0070                     __pcstackCOMMON:	
  2888  0070                     ?_LCD_DisplayClear:	
  2889  0070                     ?_Basic_Init:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0070                     ?_mTouch_Read:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0070                     ?_mTouch_IntervalDecrement:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0070                     ??_mTouch_IntervalDecrement:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0070                     ?_Buzzer_Init:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0070                     ?_Buzzer_SetDuty:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0070                     ?_Buzzer_Handler:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0070                     ?_I2C1_PinInit:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0070                     ?_I2C1_Interrupt:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0070                     ??_I2C1_Interrupt:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0070                     ?_I2C2_PinInit:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0070                     ?_I2C2_Interrupt:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0070                     ??_I2C2_Interrupt:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0070                     ?_I2C_CommonInterrupt:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0070                     ?_LCD_WriteData:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0070                     ?_LCD_Init:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0070                     ?_LCD_CursorHome:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0070                     ?_DAC_Initialize:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0070                     ?_Timer1_Init:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0070                     ?_Timer1_Count10us:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949  0070                     ??_Timer1_Count10us:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0070                     ?_Timer1_DetectAssignCount:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955  0070                     ??_Timer1_DetectAssignCount:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0070                     ?_Timer4_Init:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0070                     ?_Timer4_Handler:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0070                     ??_Timer4_Handler:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967  0070                     ?_Timer6_Init:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970  0070                     ?_Timer6_Handler:	
  2971                           ; 1 bytes @ 0x0
  2972                           
  2973  0070                     ??_Timer6_Handler:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976  0070                     ?_mTouch_PortInit:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979  0070                     ?_mTouch_Init:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982  0070                     ?_CPSx_Read:	
  2983                           ; 1 bytes @ 0x0
  2984                           
  2985  0070                     ??_CPSx_Read:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988  0070                     ?_main:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991  0070                     ?_Handler:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994  0070                     ?_xputc:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997  0070                     ?_xputs:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000  0070                     Buzzer_SetDuty@duty:	
  3001                           ; 1 bytes @ 0x0
  3002                           
  3003                           
  3004                           ; 2 bytes @ 0x0
  3005  0070                     	ds	1
  3006  0071                     ??_I2C_CommonInterrupt:	
  3007                           
  3008                           ; 1 bytes @ 0x1
  3009  0071                     	ds	1
  3010  0072                     ??_Buzzer_SetDuty:	
  3011                           
  3012                           ; 1 bytes @ 0x2
  3013  0072                     	ds	2
  3014  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
  3015                           
  3016                           ; 1 bytes @ 0x4
  3017  0074                     	ds	1
  3018  0075                     ??_Buzzer_Handler:	
  3019  0075                     ??_Handler:	
  3020                           ; 1 bytes @ 0x5
  3021                           
  3022                           
  3023                           ; 1 bytes @ 0x5
  3024  0075                     	ds	1
  3025                           
  3026                           	psect	cstackBANK0
  3027  0020                     __pcstackBANK0:	
  3028  0020                     ??_Basic_Init:	
  3029  0020                     ??_Buzzer_Init:	
  3030                           ; 1 bytes @ 0x0
  3031                           
  3032  0020                     ?_Buzzer_MiliSecond:	
  3033                           ; 1 bytes @ 0x0
  3034                           
  3035  0020                     ??_I2C1_PinInit:	
  3036                           ; 1 bytes @ 0x0
  3037                           
  3038  0020                     ?_I2C1_Transmit:	
  3039                           ; 1 bytes @ 0x0
  3040                           
  3041  0020                     ??_I2C2_PinInit:	
  3042                           ; 1 bytes @ 0x0
  3043                           
  3044  0020                     ?_I2C2_Transmit:	
  3045                           ; 1 bytes @ 0x0
  3046                           
  3047  0020                     ??_LCD_WriteData:	
  3048                           ; 1 bytes @ 0x0
  3049                           
  3050  0020                     ??_Timer1_Init:	
  3051                           ; 1 bytes @ 0x0
  3052                           
  3053  0020                     ??_Timer4_Init:	
  3054                           ; 1 bytes @ 0x0
  3055                           
  3056  0020                     ??_Timer6_Init:	
  3057                           ; 1 bytes @ 0x0
  3058                           
  3059  0020                     ??_mTouch_PortInit:	
  3060                           ; 1 bytes @ 0x0
  3061                           
  3062  0020                     ?___wmul:	
  3063                           ; 1 bytes @ 0x0
  3064                           
  3065  0020                     ?___lmul:	
  3066                           ; 2 bytes @ 0x0
  3067                           
  3068  0020                     ?___llmod:	
  3069                           ; 4 bytes @ 0x0
  3070                           
  3071  0020                     I2C1_Transmit@pData:	
  3072                           ; 4 bytes @ 0x0
  3073                           
  3074  0020                     I2C2_Transmit@pData:	
  3075                           ; 1 bytes @ 0x0
  3076                           
  3077  0020                     Buzzer_MiliSecond@time:	
  3078                           ; 1 bytes @ 0x0
  3079                           
  3080  0020                     ___wmul@multiplier:	
  3081                           ; 2 bytes @ 0x0
  3082                           
  3083  0020                     ___lmul@multiplier:	
  3084                           ; 2 bytes @ 0x0
  3085                           
  3086  0020                     ___llmod@divisor:	
  3087                           ; 4 bytes @ 0x0
  3088                           
  3089                           
  3090                           ; 4 bytes @ 0x0
  3091  0020                     	ds	1
  3092  0021                     ?_I2C1_Setting:	
  3093  0021                     ?_I2C2_Setting:	
  3094                           ; 1 bytes @ 0x1
  3095                           
  3096  0021                     ??_mTouch_Init:	
  3097                           ; 1 bytes @ 0x1
  3098                           
  3099  0021                     I2C1_Setting@mode:	
  3100                           ; 1 bytes @ 0x1
  3101                           
  3102  0021                     I2C1_Transmit@size:	
  3103                           ; 1 bytes @ 0x1
  3104                           
  3105  0021                     I2C2_Setting@mode:	
  3106                           ; 1 bytes @ 0x1
  3107                           
  3108  0021                     I2C2_Transmit@size:	
  3109                           ; 1 bytes @ 0x1
  3110                           
  3111                           
  3112                           ; 1 bytes @ 0x1
  3113  0021                     	ds	1
  3114  0022                     ??_mTouch_Read:	
  3115  0022                     ??_Buzzer_MiliSecond:	
  3116                           ; 1 bytes @ 0x2
  3117                           
  3118  0022                     ??_I2C1_Transmit:	
  3119                           ; 1 bytes @ 0x2
  3120                           
  3121  0022                     ??_I2C2_Transmit:	
  3122                           ; 1 bytes @ 0x2
  3123                           
  3124  0022                     I2C1_Setting@Speed:	
  3125                           ; 1 bytes @ 0x2
  3126                           
  3127  0022                     I2C2_Setting@Speed:	
  3128                           ; 1 bytes @ 0x2
  3129                           
  3130  0022                     LCD_WriteData@point:	
  3131                           ; 1 bytes @ 0x2
  3132                           
  3133  0022                     ___wmul@multiplicand:	
  3134                           ; 1 bytes @ 0x2
  3135                           
  3136                           
  3137                           ; 2 bytes @ 0x2
  3138  0022                     	ds	1
  3139  0023                     ??_LCD_DisplayClear:	
  3140  0023                     ??_I2C1_Setting:	
  3141                           ; 1 bytes @ 0x3
  3142                           
  3143  0023                     ??_I2C2_Setting:	
  3144                           ; 1 bytes @ 0x3
  3145                           
  3146  0023                     ?_LCD_Put:	
  3147                           ; 1 bytes @ 0x3
  3148                           
  3149  0023                     ??_LCD_CursorHome:	
  3150                           ; 1 bytes @ 0x3
  3151                           
  3152  0023                     LCD_Put@word:	
  3153                           ; 1 bytes @ 0x3
  3154                           
  3155                           
  3156                           ; 1 bytes @ 0x3
  3157  0023                     	ds	1
  3158  0024                     ??_LCD_Init:	
  3159  0024                     ??_LCD_Put:	
  3160                           ; 1 bytes @ 0x4
  3161                           
  3162  0024                     ??_xputc:	
  3163                           ; 1 bytes @ 0x4
  3164                           
  3165  0024                     ??___wmul:	
  3166                           ; 1 bytes @ 0x4
  3167                           
  3168  0024                     I2C1_Setting@address:	
  3169                           ; 1 bytes @ 0x4
  3170                           
  3171  0024                     I2C1_Transmit@address:	
  3172                           ; 1 bytes @ 0x4
  3173                           
  3174  0024                     I2C2_Setting@address:	
  3175                           ; 1 bytes @ 0x4
  3176                           
  3177  0024                     I2C2_Transmit@address:	
  3178                           ; 1 bytes @ 0x4
  3179                           
  3180  0024                     ___wmul@product:	
  3181                           ; 1 bytes @ 0x4
  3182                           
  3183  0024                     ___lmul@multiplicand:	
  3184                           ; 2 bytes @ 0x4
  3185                           
  3186  0024                     ___llmod@dividend:	
  3187                           ; 4 bytes @ 0x4
  3188                           
  3189                           
  3190                           ; 4 bytes @ 0x4
  3191  0024                     	ds	1
  3192  0025                     ?_I2C_Init:	
  3193  0025                     I2C1_Transmit@i:	
  3194                           ; 1 bytes @ 0x5
  3195                           
  3196  0025                     I2C2_Transmit@i:	
  3197                           ; 1 bytes @ 0x5
  3198                           
  3199  0025                     I2C_Init@address:	
  3200                           ; 1 bytes @ 0x5
  3201                           
  3202  0025                     xputc@c:	
  3203                           ; 1 bytes @ 0x5
  3204                           
  3205                           
  3206                           ; 1 bytes @ 0x5
  3207  0025                     	ds	1
  3208  0026                     ??_xputs:	
  3209  0026                     I2C1_Transmit@i_172:	
  3210                           ; 1 bytes @ 0x6
  3211                           
  3212  0026                     I2C2_Transmit@i_316:	
  3213                           ; 1 bytes @ 0x6
  3214                           
  3215  0026                     I2C_Init@mode:	
  3216                           ; 1 bytes @ 0x6
  3217                           
  3218                           
  3219                           ; 1 bytes @ 0x6
  3220  0026                     	ds	1
  3221  0027                     I2C1_Transmit@result:	
  3222  0027                     I2C2_Transmit@result:	
  3223                           ; 1 bytes @ 0x7
  3224                           
  3225  0027                     I2C_Init@Speed:	
  3226                           ; 1 bytes @ 0x7
  3227                           
  3228  0027                     mTouch_Read@chan:	
  3229                           ; 1 bytes @ 0x7
  3230                           
  3231  0027                     xputs@str:	
  3232                           ; 1 bytes @ 0x7
  3233                           
  3234                           
  3235                           ; 1 bytes @ 0x7
  3236  0027                     	ds	1
  3237  0028                     ??_I2C_Init:	
  3238  0028                     ?_I2C_Transmit:	
  3239                           ; 1 bytes @ 0x8
  3240                           
  3241  0028                     ??___lmul:	
  3242                           ; 1 bytes @ 0x8
  3243                           
  3244  0028                     ??___llmod:	
  3245                           ; 1 bytes @ 0x8
  3246                           
  3247  0028                     I2C_Transmit@address:	
  3248                           ; 1 bytes @ 0x8
  3249                           
  3250  0028                     ___lmul@product:	
  3251                           ; 1 bytes @ 0x8
  3252                           
  3253                           
  3254                           ; 4 bytes @ 0x8
  3255  0028                     	ds	1
  3256  0029                     I2C_Transmit@pData:	
  3257  0029                     ___llmod@counter:	
  3258                           ; 1 bytes @ 0x9
  3259                           
  3260                           
  3261                           ; 1 bytes @ 0x9
  3262  0029                     	ds	1
  3263  002A                     I2C_Init@I2Cx:	
  3264  002A                     I2C_Transmit@size:	
  3265                           ; 1 bytes @ 0xA
  3266                           
  3267                           
  3268                           ; 1 bytes @ 0xA
  3269  002A                     	ds	1
  3270  002B                     ??_I2C_Transmit:	
  3271                           
  3272                           ; 1 bytes @ 0xB
  3273  002B                     	ds	1
  3274  002C                     ?___lldiv:	
  3275  002C                     ___lldiv@divisor:	
  3276                           ; 4 bytes @ 0xC
  3277                           
  3278                           
  3279                           ; 4 bytes @ 0xC
  3280  002C                     	ds	2
  3281  002E                     I2C_Transmit@I2Cx:	
  3282                           
  3283                           ; 1 bytes @ 0xE
  3284  002E                     	ds	1
  3285  002F                     I2C_Transmit@result:	
  3286                           
  3287                           ; 1 bytes @ 0xF
  3288  002F                     	ds	1
  3289  0030                     ??_DAC_Initialize:	
  3290  0030                     ___lldiv@dividend:	
  3291                           ; 1 bytes @ 0x10
  3292                           
  3293                           
  3294                           ; 4 bytes @ 0x10
  3295  0030                     	ds	4
  3296  0034                     ??___lldiv:	
  3297                           
  3298                           ; 1 bytes @ 0x14
  3299  0034                     	ds	1
  3300  0035                     ___lldiv@quotient:	
  3301                           
  3302                           ; 4 bytes @ 0x15
  3303  0035                     	ds	4
  3304  0039                     ___lldiv@counter:	
  3305                           
  3306                           ; 1 bytes @ 0x19
  3307  0039                     	ds	1
  3308  003A                     ?_xvprintf:	
  3309  003A                     ?_Timer1_GetCPM:	
  3310                           ; 1 bytes @ 0x1A
  3311                           
  3312  003A                     xvprintf@fmt:	
  3313                           ; 2 bytes @ 0x1A
  3314                           
  3315                           
  3316                           ; 2 bytes @ 0x1A
  3317  003A                     	ds	2
  3318  003C                     ??_Timer1_GetCPM:	
  3319  003C                     xvprintf@arp:	
  3320                           ; 1 bytes @ 0x1C
  3321                           
  3322                           
  3323                           ; 1 bytes @ 0x1C
  3324  003C                     	ds	1
  3325  003D                     ??_xvprintf:	
  3326                           
  3327                           ; 1 bytes @ 0x1D
  3328  003D                     	ds	4
  3329  0041                     xvprintf@s:	
  3330                           
  3331                           ; 16 bytes @ 0x21
  3332  0041                     	ds	16
  3333  0051                     _xvprintf$765:	
  3334                           
  3335                           ; 4 bytes @ 0x31
  3336  0051                     	ds	4
  3337  0055                     _xvprintf$766:	
  3338                           
  3339                           ; 2 bytes @ 0x35
  3340  0055                     	ds	2
  3341  0057                     _xvprintf$767:	
  3342                           
  3343                           ; 2 bytes @ 0x37
  3344  0057                     	ds	2
  3345  0059                     xvprintf@p:	
  3346                           
  3347                           ; 1 bytes @ 0x39
  3348  0059                     	ds	1
  3349  005A                     xvprintf@r:	
  3350                           
  3351                           ; 2 bytes @ 0x3A
  3352  005A                     	ds	2
  3353  005C                     xvprintf@w:	
  3354                           
  3355                           ; 2 bytes @ 0x3C
  3356  005C                     	ds	2
  3357  005E                     xvprintf@j:	
  3358                           
  3359                           ; 2 bytes @ 0x3E
  3360  005E                     	ds	2
  3361  0060                     xvprintf@v:	
  3362                           
  3363                           ; 4 bytes @ 0x40
  3364  0060                     	ds	4
  3365  0064                     xvprintf@f:	
  3366                           
  3367                           ; 2 bytes @ 0x44
  3368  0064                     	ds	2
  3369  0066                     xvprintf@i:	
  3370                           
  3371                           ; 2 bytes @ 0x46
  3372  0066                     	ds	2
  3373  0068                     xvprintf@d:	
  3374                           
  3375                           ; 1 bytes @ 0x48
  3376  0068                     	ds	1
  3377  0069                     xvprintf@c:	
  3378                           
  3379                           ; 1 bytes @ 0x49
  3380  0069                     	ds	1
  3381  006A                     ?_xprintf:	
  3382  006A                     xprintf@fmt:	
  3383                           ; 1 bytes @ 0x4A
  3384                           
  3385                           
  3386                           ; 2 bytes @ 0x4A
  3387  006A                     	ds	6
  3388                           
  3389                           	psect	maintext
  3390  0520                     __pmaintext:	
  3391 ;;
  3392 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3393 ;;
  3394 ;; *************** function _main *****************
  3395 ;; Defined at:
  3396 ;;		line 18 in file "main.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      char 
  3403 ;; Registers used:
  3404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : B1F/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3410 ;;      Params:         0       0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0       0
  3412 ;;      Temps:          0       0       1       0       0       0
  3413 ;;      Totals:         0       0       1       0       0       0
  3414 ;;Total ram usage:        1 bytes
  3415 ;; Hardware stack levels required when called:    9
  3416 ;; This function calls:
  3417 ;;		_Basic_Init
  3418 ;;		_Buzzer_Init
  3419 ;;		_DAC_Initialize
  3420 ;;		_LCD_CursorHome
  3421 ;;		_LCD_Init
  3422 ;;		_Timer1_GetCPM
  3423 ;;		_Timer1_Init
  3424 ;;		_Timer4_Init
  3425 ;;		_Timer6_Init
  3426 ;;		_mTouch_Init
  3427 ;;		_mTouch_Read
  3428 ;;		_xprintf
  3429 ;; This function is called by:
  3430 ;;		Startup code after reset
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           
  3435                           ;psect for function _main
  3436  0520                     _main:	
  3437                           
  3438                           ;main.c: 20: Basic_Init();
  3439                           
  3440                           ;incstack = 0
  3441                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3442  0520  318D  2549  3185   	fcall	_Basic_Init
  3443                           
  3444                           ;main.c: 21: LATA6 = 1;
  3445  0523  0022               	movlb	2	; select bank2
  3446  0524  170C               	bsf	12,6	;volatile
  3447                           
  3448                           ;main.c: 22: Buzzer_Init();
  3449  0525  318E  2657  3185   	fcall	_Buzzer_Init
  3450                           
  3451                           ;main.c: 23: LCD_Init();
  3452  0528  3185  25A0  3185   	fcall	_LCD_Init
  3453                           
  3454                           ;main.c: 24: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  3455  052B  3075               	movlw	low _LCD_Put
  3456  052C  00F6               	movwf	_xfunc_out
  3457  052D  300C               	movlw	high _LCD_Put
  3458  052E  00F7               	movwf	_xfunc_out+1
  3459                           
  3460                           ;main.c: 25: Timer1_Init();
  3461  052F  318D  25A1  3185   	fcall	_Timer1_Init
  3462                           
  3463                           ;main.c: 26: TMR1ON = 1;;
  3464  0532  0020               	movlb	0	; select bank0
  3465  0533  1418               	bsf	24,0	;volatile
  3466                           
  3467                           ;main.c: 27: mTouch_Init();
  3468  0534  318D  2523  3185   	fcall	_mTouch_Init
  3469                           
  3470                           ;main.c: 28: Timer4_Init();
  3471  0537  318D  2510  3185   	fcall	_Timer4_Init
  3472                           
  3473                           ;main.c: 29: Timer6_Init();
  3474  053A  318C  24C3  3185   	fcall	_Timer6_Init
  3475                           
  3476                           ;main.c: 30: DAC_Initialize();
  3477  053D  318E  2612  3185   	fcall	_DAC_Initialize
  3478                           
  3479                           ;main.c: 32: mode.ModeNum = 0;
  3480  0540  0021               	movlb	1	; select bank1
  3481  0541  01B9               	clrf	(_mode^(0+128)+1)
  3482  0542                     l5423:	
  3483                           ;main.c: 34: while(1)
  3484                           
  3485                           
  3486                           ;main.c: 35: {
  3487                           ;main.c: 36: if(mTouch_Read(2)&&(mode.ModeNum<4-1))
  3488  0542  3002               	movlw	2
  3489  0543  3187  270A  3185   	fcall	_mTouch_Read
  3490  0546  3A00               	xorlw	0
  3491  0547  1903               	skipnz
  3492  0548  2D53               	goto	l5429
  3493  0549  3003               	movlw	3
  3494  054A  0021               	movlb	1	; select bank1
  3495  054B  0239               	subwf	(_mode^(0+128)+1),w
  3496  054C  1803               	skipnc
  3497  054D  2D53               	goto	l5429
  3498                           
  3499                           ;main.c: 37: mode.ModeNum++;
  3500  054E  3001               	movlw	1
  3501  054F  00E6               	movwf	??_main^(0+128)
  3502  0550  0866               	movf	??_main^(0+128),w
  3503  0551  07B9               	addwf	(_mode^(0+128)+1),f
  3504  0552  2D60               	goto	l5435
  3505  0553                     l5429:	
  3506                           
  3507                           ;main.c: 38: else if(mTouch_Read(1)&&(mode.ModeNum>0))
  3508  0553  3001               	movlw	1
  3509  0554  3187  270A  3185   	fcall	_mTouch_Read
  3510  0557  3A00               	xorlw	0
  3511  0558  1903               	skipnz
  3512  0559  2D60               	goto	l5435
  3513  055A  0021               	movlb	1	; select bank1
  3514  055B  0839               	movf	(_mode^(0+128)+1),w
  3515  055C  1903               	btfsc	3,2
  3516  055D  2D60               	goto	l5435
  3517                           
  3518                           ;main.c: 39: mode.ModeNum--;
  3519  055E  3001               	movlw	1
  3520  055F  02B9               	subwf	(_mode^(0+128)+1),f
  3521  0560                     l5435:	
  3522                           
  3523                           ;main.c: 41: LCD_CursorHome();
  3524  0560  318C  24DF  3185   	fcall	_LCD_CursorHome
  3525                           
  3526                           ;main.c: 42: switch(mode.ModeNum)
  3527  0563  2D90               	goto	l5447
  3528  0564                     l5437:	
  3529                           ;main.c: 43: {
  3530                           ;main.c: 44: case COUNT:
  3531                           
  3532                           
  3533                           ;main.c: 45: xprintf("%lu",Timer1_GetCPM());
  3534  0564  30EB               	movlw	low (STR_1| (0+32768))
  3535  0565  0020               	movlb	0	; select bank0
  3536  0566  00EA               	movwf	xprintf@fmt
  3537  0567  3083               	movlw	high (STR_1| (0+32768))
  3538  0568  00EB               	movwf	xprintf@fmt+1
  3539  0569  318F  2708  3185   	fcall	_Timer1_GetCPM
  3540  056C  0020               	movlb	0	; select bank0
  3541  056D  083B               	movf	?_Timer1_GetCPM+1,w
  3542  056E  00ED               	movwf	?_xprintf+3
  3543  056F  083A               	movf	?_Timer1_GetCPM,w
  3544  0570  00EC               	movwf	?_xprintf+2
  3545  0571  318D  2536  3185   	fcall	_xprintf
  3546                           
  3547                           ;main.c: 46: break;
  3548  0574  2D42               	goto	l5423
  3549  0575                     l5439:	
  3550                           ;main.c: 47: case SELECTFUNC:
  3551                           
  3552                           
  3553                           ;main.c: 48: xprintf("SELECTFUNC");
  3554  0575  30A3               	movlw	low (STR_2| (0+32768))
  3555  0576  0020               	movlb	0	; select bank0
  3556  0577  00EA               	movwf	xprintf@fmt
  3557  0578  3082               	movlw	high (STR_2| (0+32768))
  3558  0579  00EB               	movwf	xprintf@fmt+1
  3559  057A  318D  2536  3185   	fcall	_xprintf
  3560                           
  3561                           ;main.c: 49: break;
  3562  057D  2D42               	goto	l5423
  3563  057E                     l5441:	
  3564                           ;main.c: 50: case ADJGAIN:
  3565                           
  3566                           
  3567                           ;main.c: 51: xprintf("ADJGAIN");
  3568  057E  30D0               	movlw	low (STR_3| (0+32768))
  3569  057F  0020               	movlb	0	; select bank0
  3570  0580  00EA               	movwf	xprintf@fmt
  3571  0581  3082               	movlw	high (STR_3| (0+32768))
  3572  0582  00EB               	movwf	xprintf@fmt+1
  3573  0583  318D  2536  3185   	fcall	_xprintf
  3574                           
  3575                           ;main.c: 52: break;
  3576  0586  2D42               	goto	l5423
  3577  0587                     l5443:	
  3578                           ;main.c: 53: case PMTDEVICE:
  3579                           
  3580                           
  3581                           ;main.c: 54: xprintf("PMTDEVICE");
  3582  0587  30AE               	movlw	low (STR_4| (0+32768))
  3583  0588  0020               	movlb	0	; select bank0
  3584  0589  00EA               	movwf	xprintf@fmt
  3585  058A  3082               	movlw	high (STR_4| (0+32768))
  3586  058B  00EB               	movwf	xprintf@fmt+1
  3587  058C  318D  2536  3185   	fcall	_xprintf
  3588                           
  3589                           ;main.c: 56: }
  3590                           
  3591                           ;main.c: 55: break;
  3592  058F  2D42               	goto	l5423
  3593  0590                     l5447:	
  3594  0590  0021               	movlb	1	; select bank1
  3595  0591  0839               	movf	(_mode^(0+128)+1),w
  3596                           
  3597                           ; Switch size 1, requested type "space"
  3598                           ; Number of cases is 4, Range of values is 0 to 3
  3599                           ; switch strategies available:
  3600                           ; Name         Instructions Cycles
  3601                           ; simple_byte           13     7 (average)
  3602                           ; direct_byte           14     6 (fixed)
  3603                           ; jumptable            260     6 (fixed)
  3604                           ;	Chosen strategy is simple_byte
  3605  0592  3A00               	xorlw	0	; case 0
  3606  0593  1903               	skipnz
  3607  0594  2D64               	goto	l5437
  3608  0595  3A01               	xorlw	1	; case 1
  3609  0596  1903               	skipnz
  3610  0597  2D75               	goto	l5439
  3611  0598  3A03               	xorlw	3	; case 2
  3612  0599  1903               	skipnz
  3613  059A  2D7E               	goto	l5441
  3614  059B  3A01               	xorlw	1	; case 3
  3615  059C  1903               	skipnz
  3616  059D  2D87               	goto	l5443
  3617  059E  2D42               	goto	l5423
  3618  059F  2D42               	goto	l5423
  3619  05A0                     __end_of_main:	
  3620                           ;main.c: 57: }
  3621                           ;main.c: 59: return 0;
  3622                           ;	Return value of _main is never used
  3623                           
  3624                           
  3625                           	psect	text1
  3626  0D36                     __ptext1:	
  3627 ;; *************** function _xprintf *****************
  3628 ;; Defined at:
  3629 ;;		line 165 in file "xprintf.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  3632 ;;		 -> STR_54(7), STR_53(6), STR_52(6), STR_51(7), 
  3633 ;;		 -> STR_4(10), STR_3(8), STR_2(11), STR_1(4), 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  arp             1    1[BANK1 ] PTR void [1]
  3636 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3646 ;;      Params:         0       6       0       0       0       0
  3647 ;;      Locals:         0       0       1       0       0       0
  3648 ;;      Temps:          0       0       1       0       0       0
  3649 ;;      Totals:         0       6       2       0       0       0
  3650 ;;Total ram usage:        8 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    8
  3653 ;; This function calls:
  3654 ;;		_xvprintf
  3655 ;; This function is called by:
  3656 ;;		_main
  3657 ;;		_put_dump
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           
  3662                           ;psect for function _xprintf
  3663  0D36                     _xprintf:	
  3664                           
  3665                           ;xprintf.c: 170: va_list arp;
  3666                           ;xprintf.c: 173: *arp = __va_start();
  3667                           
  3668                           ;incstack = 0
  3669                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3670  0D36  306C               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  3671  0D37  0021               	movlb	1	; select bank1
  3672  0D38  00E4               	movwf	??_xprintf^(0+128)
  3673  0D39  0864               	movf	??_xprintf^(0+128),w
  3674  0D3A  00E5               	movwf	xprintf@arp^(0+128)
  3675                           
  3676                           ;xprintf.c: 174: xvprintf(fmt, arp);
  3677  0D3B  0020               	movlb	0	; select bank0
  3678  0D3C  086B               	movf	xprintf@fmt+1,w
  3679  0D3D  00BB               	movwf	xvprintf@fmt+1
  3680  0D3E  086A               	movf	xprintf@fmt,w
  3681  0D3F  00BA               	movwf	xvprintf@fmt
  3682  0D40  30E5               	movlw	(low (xprintf@arp| 0))& (0+255)
  3683  0D41  0021               	movlb	1	; select bank1
  3684  0D42  00E4               	movwf	??_xprintf^(0+128)
  3685  0D43  0864               	movf	??_xprintf^(0+128),w
  3686  0D44  0020               	movlb	0	; select bank0
  3687  0D45  00BC               	movwf	xvprintf@arp
  3688  0D46  3180  205B         	fcall	_xvprintf
  3689  0D48  0008               	return
  3690  0D49                     __end_of_xprintf:	
  3691                           
  3692                           	psect	text2
  3693  005B                     __ptext2:	
  3694 ;; *************** function _xvprintf *****************
  3695 ;; Defined at:
  3696 ;;		line 88 in file "xprintf.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  fmt             2   26[BANK0 ] PTR const unsigned char 
  3699 ;;		 -> STR_54(7), STR_53(6), STR_52(6), STR_51(7), 
  3700 ;;		 -> STR_4(10), STR_3(8), STR_2(11), STR_1(4), 
  3701 ;;  arp             1   28[BANK0 ] PTR PTR void 
  3702 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  s              16   33[BANK0 ] unsigned char [16]
  3705 ;;  v               4   64[BANK0 ] unsigned long 
  3706 ;;  i               2   70[BANK0 ] unsigned int 
  3707 ;;  f               2   68[BANK0 ] unsigned int 
  3708 ;;  j               2   62[BANK0 ] unsigned int 
  3709 ;;  w               2   60[BANK0 ] unsigned int 
  3710 ;;  r               2   58[BANK0 ] unsigned int 
  3711 ;;  c               1   73[BANK0 ] unsigned char 
  3712 ;;  d               1   72[BANK0 ] unsigned char 
  3713 ;;  p               1   57[BANK0 ] PTR unsigned char 
  3714 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3724 ;;      Params:         0       3       0       0       0       0
  3725 ;;      Locals:         0      41       0       0       0       0
  3726 ;;      Temps:          0       4       0       0       0       0
  3727 ;;      Totals:         0      48       0       0       0       0
  3728 ;;Total ram usage:       48 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    7
  3731 ;; This function calls:
  3732 ;;		___lldiv
  3733 ;;		___llmod
  3734 ;;		___wmul
  3735 ;;		_xputc
  3736 ;;		_xputs
  3737 ;; This function is called by:
  3738 ;;		_xprintf
  3739 ;;		_xsprintf
  3740 ;;		_xfprintf
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           
  3745                           ;psect for function _xvprintf
  3746  005B                     _xvprintf:	
  3747  005B                     l692:	
  3748                           ;incstack = 0
  3749                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3750                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  3751                           ;xprintf.c: 94: unsigned long v;
  3752                           ;xprintf.c: 95: char s[16], c, d, *p;
  3753                           ;xprintf.c: 98: for (;;) {
  3754                           
  3755                           
  3756                           ;xprintf.c: 99: c = *fmt++;
  3757  005B  0020               	movlb	0	; select bank0
  3758  005C  083A               	movf	xvprintf@fmt,w
  3759  005D  0084               	movwf	4
  3760  005E  083B               	movf	xvprintf@fmt+1,w
  3761  005F  0085               	movwf	5
  3762  0060  0800               	movf	0,w	;code access
  3763  0061  00BD               	movwf	??_xvprintf
  3764  0062  083D               	movf	??_xvprintf,w
  3765  0063  00E9               	movwf	xvprintf@c
  3766  0064  3001               	movlw	1
  3767  0065  07BA               	addwf	xvprintf@fmt,f
  3768  0066  3000               	movlw	0
  3769  0067  3DBB               	addwfc	xvprintf@fmt+1,f
  3770                           
  3771                           ;xprintf.c: 100: if (!c) break;
  3772  0068  0869               	movf	xvprintf@c,w
  3773  0069  1903               	btfsc	3,2
  3774  006A  0008               	return
  3775                           
  3776                           ;xprintf.c: 101: if (c != '%') {
  3777  006B  3025               	movlw	37
  3778  006C  0669               	xorwf	xvprintf@c,w
  3779  006D  1903               	btfsc	3,2
  3780  006E  2874               	goto	l5207
  3781                           
  3782                           ;xprintf.c: 102: xputc(c); continue;
  3783  006F  0869               	movf	xvprintf@c,w
  3784  0070  318E  26AA  3180   	fcall	_xputc
  3785  0073  285B               	goto	l692
  3786  0074                     l5207:	
  3787                           
  3788                           ;xprintf.c: 103: }
  3789                           ;xprintf.c: 104: f = 0;
  3790  0074  0020               	movlb	0	; select bank0
  3791  0075  01E4               	clrf	xvprintf@f
  3792  0076  01E5               	clrf	xvprintf@f+1
  3793                           
  3794                           ;xprintf.c: 105: c = *fmt++;
  3795  0077  083A               	movf	xvprintf@fmt,w
  3796  0078  0084               	movwf	4
  3797  0079  083B               	movf	xvprintf@fmt+1,w
  3798  007A  0085               	movwf	5
  3799  007B  0800               	movf	0,w	;code access
  3800  007C  00BD               	movwf	??_xvprintf
  3801  007D  083D               	movf	??_xvprintf,w
  3802  007E  00E9               	movwf	xvprintf@c
  3803  007F  3001               	movlw	1
  3804  0080  07BA               	addwf	xvprintf@fmt,f
  3805  0081  3000               	movlw	0
  3806  0082  3DBB               	addwfc	xvprintf@fmt+1,f
  3807                           
  3808                           ;xprintf.c: 106: if (c == '0') {
  3809  0083  3030               	movlw	48
  3810  0084  0669               	xorwf	xvprintf@c,w
  3811  0085  1D03               	btfss	3,2
  3812  0086  2889               	goto	l5221
  3813                           
  3814                           ;xprintf.c: 107: f = 1; c = *fmt++;
  3815  0087  3001               	movlw	1
  3816  0088  288E               	goto	L6
  3817  0089                     l5221:	
  3818                           ;xprintf.c: 108: } else {
  3819                           
  3820                           
  3821                           ;xprintf.c: 109: if (c == '-') {
  3822  0089  302D               	movlw	45
  3823  008A  0669               	xorwf	xvprintf@c,w
  3824  008B  1D03               	btfss	3,2
  3825  008C  289D               	goto	l5229
  3826                           
  3827                           ;xprintf.c: 110: f = 2; c = *fmt++;
  3828  008D  3002               	movlw	2
  3829  008E                     L6:	
  3830  008E  00E4               	movwf	xvprintf@f
  3831  008F  3000               	movlw	0
  3832  0090  00E5               	movwf	xvprintf@f+1
  3833  0091  083A               	movf	xvprintf@fmt,w
  3834  0092  0084               	movwf	4
  3835  0093  083B               	movf	xvprintf@fmt+1,w
  3836  0094  0085               	movwf	5
  3837  0095  0800               	movf	0,w	;code access
  3838  0096  00BD               	movwf	??_xvprintf
  3839  0097  083D               	movf	??_xvprintf,w
  3840  0098  00E9               	movwf	xvprintf@c
  3841  0099  3001               	movlw	1
  3842  009A  07BA               	addwf	xvprintf@fmt,f
  3843  009B  3000               	movlw	0
  3844  009C  3DBB               	addwfc	xvprintf@fmt+1,f
  3845  009D                     l5229:	
  3846                           
  3847                           ;xprintf.c: 111: }
  3848                           ;xprintf.c: 112: }
  3849                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  3850  009D  01DC               	clrf	xvprintf@w
  3851  009E  01DD               	clrf	xvprintf@w+1
  3852  009F  28C7               	goto	l5237
  3853  00A0                     l5231:	
  3854                           
  3855                           ;xprintf.c: 114: w = w * 10 + c - '0';
  3856  00A0  0869               	movf	xvprintf@c,w
  3857  00A1  00BD               	movwf	??_xvprintf
  3858  00A2  01BE               	clrf	??_xvprintf+1
  3859  00A3  085D               	movf	xvprintf@w+1,w
  3860  00A4  00A1               	movwf	___wmul@multiplier+1
  3861  00A5  085C               	movf	xvprintf@w,w
  3862  00A6  00A0               	movwf	___wmul@multiplier
  3863  00A7  300A               	movlw	10
  3864  00A8  00A2               	movwf	___wmul@multiplicand
  3865  00A9  3000               	movlw	0
  3866  00AA  00A3               	movwf	___wmul@multiplicand+1
  3867  00AB  318D  25D8  3180   	fcall	___wmul
  3868  00AE  0020               	movlb	0	; select bank0
  3869  00AF  083D               	movf	??_xvprintf,w
  3870  00B0  0720               	addwf	?___wmul,w
  3871  00B1  00BF               	movwf	??_xvprintf+2
  3872  00B2  083E               	movf	??_xvprintf+1,w
  3873  00B3  3D21               	addwfc	?___wmul+1,w
  3874  00B4  00C0               	movwf	??_xvprintf+3
  3875  00B5  083F               	movf	??_xvprintf+2,w
  3876  00B6  3ED0               	addlw	208
  3877  00B7  00DC               	movwf	xvprintf@w
  3878  00B8  30FF               	movlw	255
  3879  00B9  3D40               	addwfc	??_xvprintf+3,w
  3880  00BA  00DD               	movwf	xvprintf@w+1
  3881  00BB  083A               	movf	xvprintf@fmt,w
  3882  00BC  0084               	movwf	4
  3883  00BD  083B               	movf	xvprintf@fmt+1,w
  3884  00BE  0085               	movwf	5
  3885  00BF  0800               	movf	0,w	;code access
  3886  00C0  00BD               	movwf	??_xvprintf
  3887  00C1  083D               	movf	??_xvprintf,w
  3888  00C2  00E9               	movwf	xvprintf@c
  3889  00C3  3001               	movlw	1
  3890  00C4  07BA               	addwf	xvprintf@fmt,f
  3891  00C5  3000               	movlw	0
  3892  00C6  3DBB               	addwfc	xvprintf@fmt+1,f
  3893  00C7                     l5237:	
  3894  00C7  3030               	movlw	48
  3895  00C8  0269               	subwf	xvprintf@c,w
  3896  00C9  1C03               	skipc
  3897  00CA  28CF               	goto	l5241
  3898  00CB  303A               	movlw	58
  3899  00CC  0269               	subwf	xvprintf@c,w
  3900  00CD  1C03               	skipc
  3901  00CE  28A0               	goto	l5231
  3902  00CF                     l5241:	
  3903                           
  3904                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  3905  00CF  306C               	movlw	108
  3906  00D0  0669               	xorwf	xvprintf@c,w
  3907  00D1  1903               	btfsc	3,2
  3908  00D2  28D7               	goto	l707
  3909  00D3  304C               	movlw	76
  3910  00D4  0669               	xorwf	xvprintf@c,w
  3911  00D5  1D03               	btfss	3,2
  3912  00D6  28E4               	goto	l5249
  3913  00D7                     l707:	
  3914                           
  3915                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  3916  00D7  1564               	bsf	xvprintf@f,2
  3917  00D8  083A               	movf	xvprintf@fmt,w
  3918  00D9  0084               	movwf	4
  3919  00DA  083B               	movf	xvprintf@fmt+1,w
  3920  00DB  0085               	movwf	5
  3921  00DC  0800               	movf	0,w	;code access
  3922  00DD  00BD               	movwf	??_xvprintf
  3923  00DE  083D               	movf	??_xvprintf,w
  3924  00DF  00E9               	movwf	xvprintf@c
  3925  00E0  3001               	movlw	1
  3926  00E1  07BA               	addwf	xvprintf@fmt,f
  3927  00E2  3000               	movlw	0
  3928  00E3  3DBB               	addwfc	xvprintf@fmt+1,f
  3929  00E4                     l5249:	
  3930                           
  3931                           ;xprintf.c: 117: }
  3932                           ;xprintf.c: 118: if (!c) break;
  3933  00E4  0869               	movf	xvprintf@c,w
  3934  00E5  1903               	btfsc	3,2
  3935  00E6  0008               	return
  3936                           
  3937                           ;xprintf.c: 119: d = c;
  3938  00E7  0869               	movf	xvprintf@c,w
  3939  00E8  00BD               	movwf	??_xvprintf
  3940  00E9  083D               	movf	??_xvprintf,w
  3941  00EA  00E8               	movwf	xvprintf@d
  3942                           
  3943                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  3944  00EB  3061               	movlw	97
  3945  00EC  0268               	subwf	xvprintf@d,w
  3946  00ED  1C03               	skipc
  3947  00EE  295A               	goto	l5291
  3948  00EF  3020               	movlw	32
  3949  00F0  02E8               	subwf	xvprintf@d,f
  3950                           
  3951                           ;xprintf.c: 121: switch (d) {
  3952  00F1  295A               	goto	l5291
  3953  00F2                     l5257:	
  3954                           ;xprintf.c: 122: case 'S' :
  3955                           
  3956                           
  3957                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  3958  00F2  083C               	movf	xvprintf@arp,w
  3959  00F3  0086               	movwf	6
  3960  00F4  0187               	clrf	7
  3961  00F5  3F40               	moviw [0]fsr1
  3962  00F6  0084               	movwf	4
  3963  00F7  0185               	clrf	5
  3964  00F8  0A81               	incf	1,f
  3965  00F9  0800               	movf	0,w
  3966  00FA  00BD               	movwf	??_xvprintf
  3967  00FB  083D               	movf	??_xvprintf,w
  3968  00FC  00D9               	movwf	xvprintf@p
  3969                           
  3970                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  3971  00FD  01DE               	clrf	xvprintf@j
  3972  00FE  01DF               	clrf	xvprintf@j+1
  3973  00FF                     l5263:	
  3974  00FF  085E               	movf	xvprintf@j,w
  3975  0100  0759               	addwf	xvprintf@p,w
  3976  0101  00BD               	movwf	??_xvprintf
  3977  0102  083D               	movf	??_xvprintf,w
  3978  0103  0086               	movwf	6
  3979  0104  0187               	clrf	7
  3980  0105  0801               	movf	1,w
  3981  0106  1903               	btfsc	3,2
  3982  0107  2911               	goto	l5267
  3983  0108  3001               	movlw	1
  3984  0109  07DE               	addwf	xvprintf@j,f
  3985  010A  3000               	movlw	0
  3986  010B  3DDF               	addwfc	xvprintf@j+1,f
  3987  010C  28FF               	goto	l5263
  3988  010D                     l5265:	
  3989                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  3990                           
  3991  010D  3020               	movlw	32
  3992  010E  318E  26AA  3180   	fcall	_xputc
  3993  0111                     l5267:	
  3994  0111  0020               	movlb	0	; select bank0
  3995  0112  18E4               	btfsc	xvprintf@f,1
  3996  0113  2923               	goto	l5271
  3997  0114  085F               	movf	xvprintf@j+1,w
  3998  0115  00BE               	movwf	??_xvprintf+1
  3999  0116  085E               	movf	xvprintf@j,w
  4000  0117  00BD               	movwf	??_xvprintf
  4001  0118  0ADE               	incf	xvprintf@j,f
  4002  0119  1903               	skipnz
  4003  011A  0ADF               	incf	xvprintf@j+1,f
  4004  011B  085D               	movf	xvprintf@w+1,w
  4005  011C  023E               	subwf	??_xvprintf+1,w
  4006  011D  1D03               	skipz
  4007  011E  2921               	goto	u5775
  4008  011F  085C               	movf	xvprintf@w,w
  4009  0120  023D               	subwf	??_xvprintf,w
  4010  0121                     u5775:	
  4011  0121  1C03               	skipc
  4012  0122  290D               	goto	l5265
  4013  0123                     l5271:	
  4014                           
  4015                           ;xprintf.c: 126: xputs(p);
  4016  0123  0859               	movf	xvprintf@p,w
  4017  0124  318D  255E  3180   	fcall	_xputs
  4018  0127                     l5275:	
  4019                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  4020                           
  4021  0127  0020               	movlb	0	; select bank0
  4022  0128  085F               	movf	xvprintf@j+1,w
  4023  0129  00BE               	movwf	??_xvprintf+1
  4024  012A  085E               	movf	xvprintf@j,w
  4025  012B  00BD               	movwf	??_xvprintf
  4026  012C  0ADE               	incf	xvprintf@j,f
  4027  012D  1903               	skipnz
  4028  012E  0ADF               	incf	xvprintf@j+1,f
  4029  012F  085D               	movf	xvprintf@w+1,w
  4030  0130  023E               	subwf	??_xvprintf+1,w
  4031  0131  1D03               	skipz
  4032  0132  2935               	goto	u5785
  4033  0133  085C               	movf	xvprintf@w,w
  4034  0134  023D               	subwf	??_xvprintf,w
  4035  0135                     u5785:	
  4036  0135  1803               	btfsc	3,0
  4037  0136  285B               	goto	l692
  4038  0137  3020               	movlw	32
  4039  0138  318E  26AA  3180   	fcall	_xputc
  4040  013B  2927               	goto	l5275
  4041  013C                     l5277:	
  4042                           ;xprintf.c: 129: case 'C' :
  4043                           
  4044                           ;xprintf.c: 128: continue;
  4045                           
  4046                           
  4047                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  4048  013C  083C               	movf	xvprintf@arp,w
  4049  013D  0086               	movwf	6
  4050  013E  0187               	clrf	7
  4051  013F  0801               	movf	1,w
  4052  0140  0084               	movwf	4
  4053  0141  0185               	clrf	5
  4054  0142  3002               	movlw	2
  4055  0143  0781               	addwf	1,f
  4056  0144  0800               	movf	0,w
  4057  0145  318E  26AA  3180   	fcall	_xputc
  4058  0148  285B               	goto	l692
  4059  0149                     l5279:	
  4060                           ;xprintf.c: 131: case 'B' :
  4061                           
  4062                           
  4063                           ;xprintf.c: 132: r = 2; break;
  4064  0149  3002               	movlw	2
  4065  014A  0020               	movlb	0	; select bank0
  4066  014B  2951               	goto	L3
  4067  014C                     l5281:	
  4068                           ;xprintf.c: 133: case 'O' :
  4069                           
  4070                           
  4071                           ;xprintf.c: 134: r = 8; break;
  4072  014C  3008               	movlw	8
  4073  014D  2951               	goto	L3
  4074  014E                     l5283:	
  4075                           ;xprintf.c: 135: case 'D' :
  4076                           
  4077                           
  4078                           ;xprintf.c: 136: case 'U' :
  4079                           ;xprintf.c: 137: r = 10; break;
  4080  014E  300A               	movlw	10
  4081  014F  2951               	goto	L3
  4082  0150                     l5285:	
  4083                           ;xprintf.c: 138: case 'X' :
  4084                           
  4085                           
  4086                           ;xprintf.c: 139: r = 16; break;
  4087  0150  3010               	movlw	16
  4088  0151                     L3:	
  4089  0151  00DA               	movwf	xvprintf@r
  4090  0152  3000               	movlw	0
  4091  0153  00DB               	movwf	xvprintf@r+1
  4092  0154  2972               	goto	l725
  4093  0155                     l5287:	
  4094                           ;xprintf.c: 140: default:
  4095                           
  4096                           
  4097                           ;xprintf.c: 141: xputc(c); continue;
  4098  0155  0869               	movf	xvprintf@c,w
  4099  0156  318E  26AA  3180   	fcall	_xputc
  4100  0159  285B               	goto	l692
  4101  015A                     l5291:	
  4102                           ;xprintf.c: 142: }
  4103                           
  4104  015A  0020               	movlb	0	; select bank0
  4105  015B  0868               	movf	xvprintf@d,w
  4106                           
  4107                           ; Switch size 1, requested type "space"
  4108                           ; Number of cases is 7, Range of values is 66 to 88
  4109                           ; switch strategies available:
  4110                           ; Name         Instructions Cycles
  4111                           ; simple_byte           22    12 (average)
  4112                           ; direct_byte           55     9 (fixed)
  4113                           ; jumptable            263     9 (fixed)
  4114                           ;	Chosen strategy is simple_byte
  4115  015C  3A42               	xorlw	66	; case 66
  4116  015D  1903               	skipnz
  4117  015E  2949               	goto	l5279
  4118  015F  3A01               	xorlw	1	; case 67
  4119  0160  1903               	skipnz
  4120  0161  293C               	goto	l5277
  4121  0162  3A07               	xorlw	7	; case 68
  4122  0163  1903               	skipnz
  4123  0164  294E               	goto	l5283
  4124  0165  3A0B               	xorlw	11	; case 79
  4125  0166  1903               	skipnz
  4126  0167  294C               	goto	l5281
  4127  0168  3A1C               	xorlw	28	; case 83
  4128  0169  1903               	skipnz
  4129  016A  28F2               	goto	l5257
  4130  016B  3A06               	xorlw	6	; case 85
  4131  016C  1903               	skipnz
  4132  016D  294E               	goto	l5283
  4133  016E  3A0D               	xorlw	13	; case 88
  4134  016F  1903               	skipnz
  4135  0170  2950               	goto	l5285
  4136  0171  2955               	goto	l5287
  4137  0172                     l725:	
  4138                           
  4139                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  4140  0172  0020               	movlb	0	; select bank0
  4141  0173  1964               	btfsc	xvprintf@f,2
  4142  0174  29AA               	goto	l5301
  4143  0175  3044               	movlw	68
  4144  0176  0668               	xorwf	xvprintf@d,w
  4145  0177  1903               	btfsc	3,2
  4146  0178  298C               	goto	l5297
  4147  0179  083C               	movf	xvprintf@arp,w
  4148  017A  0086               	movwf	6
  4149  017B  0187               	clrf	7
  4150  017C  0801               	movf	1,w
  4151  017D  0084               	movwf	4
  4152  017E  0185               	clrf	5
  4153  017F  3002               	movlw	2
  4154  0180  0781               	addwf	1,f
  4155  0181  3F00               	moviw [0]fsr0
  4156  0182  00BD               	movwf	??_xvprintf
  4157  0183  3F01               	moviw [1]fsr0
  4158  0184  00BE               	movwf	??_xvprintf+1
  4159  0185  083D               	movf	??_xvprintf,w
  4160  0186  00D1               	movwf	_xvprintf$765
  4161  0187  083E               	movf	??_xvprintf+1,w
  4162  0188  00D2               	movwf	_xvprintf$765+1
  4163  0189  01D3               	clrf	_xvprintf$765+2
  4164  018A  01D4               	clrf	_xvprintf$765+3
  4165  018B  29A1               	goto	l5299
  4166  018C                     l5297:	
  4167  018C  083C               	movf	xvprintf@arp,w
  4168  018D  0086               	movwf	6
  4169  018E  0187               	clrf	7
  4170  018F  0801               	movf	1,w
  4171  0190  0084               	movwf	4
  4172  0191  0185               	clrf	5
  4173  0192  3002               	movlw	2
  4174  0193  0781               	addwf	1,f
  4175  0194  3F00               	moviw [0]fsr0
  4176  0195  00BD               	movwf	??_xvprintf
  4177  0196  3F01               	moviw [1]fsr0
  4178  0197  00BE               	movwf	??_xvprintf+1
  4179  0198  083D               	movf	??_xvprintf,w
  4180  0199  00D1               	movwf	_xvprintf$765
  4181  019A  083E               	movf	??_xvprintf+1,w
  4182  019B  00D2               	movwf	_xvprintf$765+1
  4183  019C  0D89               	rlf	9,f
  4184  019D  3B89               	subwfb	9,f
  4185  019E  0989               	comf	9,f
  4186  019F  00D3               	movwf	_xvprintf$765+2
  4187  01A0  00D4               	movwf	_xvprintf$765+3
  4188  01A1                     l5299:	
  4189  01A1  0854               	movf	_xvprintf$765+3,w
  4190  01A2  00E3               	movwf	xvprintf@v+3
  4191  01A3  0853               	movf	_xvprintf$765+2,w
  4192  01A4  00E2               	movwf	xvprintf@v+2
  4193  01A5  0852               	movf	_xvprintf$765+1,w
  4194  01A6  00E1               	movwf	xvprintf@v+1
  4195  01A7  0851               	movf	_xvprintf$765,w
  4196  01A8  00E0               	movwf	xvprintf@v
  4197  01A9  29BA               	goto	l5303
  4198  01AA                     l5301:	
  4199  01AA  083C               	movf	xvprintf@arp,w
  4200  01AB  0086               	movwf	6
  4201  01AC  0187               	clrf	7
  4202  01AD  0801               	movf	1,w
  4203  01AE  0084               	movwf	4
  4204  01AF  0185               	clrf	5
  4205  01B0  3004               	movlw	4
  4206  01B1  0781               	addwf	1,f
  4207  01B2  3F00               	moviw [0]fsr0
  4208  01B3  00E0               	movwf	xvprintf@v
  4209  01B4  3F01               	moviw [1]fsr0
  4210  01B5  00E1               	movwf	xvprintf@v+1
  4211  01B6  3F02               	moviw [2]fsr0
  4212  01B7  00E2               	movwf	xvprintf@v+2
  4213  01B8  3F03               	moviw [3]fsr0
  4214  01B9  00E3               	movwf	xvprintf@v+3
  4215  01BA                     l5303:	
  4216                           
  4217                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  4218  01BA  3044               	movlw	68
  4219  01BB  0668               	xorwf	xvprintf@d,w
  4220  01BC  1903               	btfsc	3,2
  4221  01BD  1FE3               	btfss	xvprintf@v+3,7
  4222  01BE  29CB               	goto	l5309
  4223                           
  4224                           ;xprintf.c: 147: v = 0 - v;
  4225  01BF  09E0               	comf	xvprintf@v,f
  4226  01C0  09E1               	comf	xvprintf@v+1,f
  4227  01C1  09E2               	comf	xvprintf@v+2,f
  4228  01C2  09E3               	comf	xvprintf@v+3,f
  4229  01C3  0AE0               	incf	xvprintf@v,f
  4230  01C4  1903               	skipnz
  4231  01C5  0AE1               	incf	xvprintf@v+1,f
  4232  01C6  1903               	skipnz
  4233  01C7  0AE2               	incf	xvprintf@v+2,f
  4234  01C8  1903               	skipnz
  4235  01C9  0AE3               	incf	xvprintf@v+3,f
  4236                           
  4237                           ;xprintf.c: 148: f |= 8;
  4238  01CA  15E4               	bsf	xvprintf@f,3
  4239  01CB                     l5309:	
  4240                           
  4241                           ;xprintf.c: 149: }
  4242                           ;xprintf.c: 150: i = 0;
  4243  01CB  01E6               	clrf	xvprintf@i
  4244  01CC  01E7               	clrf	xvprintf@i+1
  4245  01CD                     l5311:	
  4246                           ;xprintf.c: 151: do {
  4247                           
  4248                           
  4249                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  4250  01CD  085A               	movf	xvprintf@r,w
  4251  01CE  00A0               	movwf	___llmod@divisor
  4252  01CF  085B               	movf	xvprintf@r+1,w
  4253  01D0  00A1               	movwf	___llmod@divisor+1
  4254  01D1  01A2               	clrf	___llmod@divisor+2
  4255  01D2  01A3               	clrf	___llmod@divisor+3
  4256  01D3  0863               	movf	xvprintf@v+3,w
  4257  01D4  00A7               	movwf	___llmod@dividend+3
  4258  01D5  0862               	movf	xvprintf@v+2,w
  4259  01D6  00A6               	movwf	___llmod@dividend+2
  4260  01D7  0861               	movf	xvprintf@v+1,w
  4261  01D8  00A5               	movwf	___llmod@dividend+1
  4262  01D9  0860               	movf	xvprintf@v,w
  4263  01DA  00A4               	movwf	___llmod@dividend
  4264  01DB  318F  27BD  3180   	fcall	___llmod
  4265  01DE  0020               	movlb	0	; select bank0
  4266  01DF  0820               	movf	?___llmod,w
  4267  01E0  00BD               	movwf	??_xvprintf
  4268  01E1  083D               	movf	??_xvprintf,w
  4269  01E2  00E8               	movwf	xvprintf@d
  4270  01E3  085A               	movf	xvprintf@r,w
  4271  01E4  00AC               	movwf	___lldiv@divisor
  4272  01E5  085B               	movf	xvprintf@r+1,w
  4273  01E6  00AD               	movwf	___lldiv@divisor+1
  4274  01E7  01AE               	clrf	___lldiv@divisor+2
  4275  01E8  01AF               	clrf	___lldiv@divisor+3
  4276  01E9  0863               	movf	xvprintf@v+3,w
  4277  01EA  00B3               	movwf	___lldiv@dividend+3
  4278  01EB  0862               	movf	xvprintf@v+2,w
  4279  01EC  00B2               	movwf	___lldiv@dividend+2
  4280  01ED  0861               	movf	xvprintf@v+1,w
  4281  01EE  00B1               	movwf	___lldiv@dividend+1
  4282  01EF  0860               	movf	xvprintf@v,w
  4283  01F0  00B0               	movwf	___lldiv@dividend
  4284  01F1  3186  26B7  3180   	fcall	___lldiv
  4285  01F4  0020               	movlb	0	; select bank0
  4286  01F5  082F               	movf	?___lldiv+3,w
  4287  01F6  00E3               	movwf	xvprintf@v+3
  4288  01F7  082E               	movf	?___lldiv+2,w
  4289  01F8  00E2               	movwf	xvprintf@v+2
  4290  01F9  082D               	movf	?___lldiv+1,w
  4291  01FA  00E1               	movwf	xvprintf@v+1
  4292  01FB  082C               	movf	?___lldiv,w
  4293  01FC  00E0               	movwf	xvprintf@v
  4294                           
  4295                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  4296  01FD  300A               	movlw	10
  4297  01FE  0268               	subwf	xvprintf@d,w
  4298  01FF  1C03               	skipc
  4299  0200  2A0F               	goto	l5325
  4300  0201  3078               	movlw	120
  4301  0202  0669               	xorwf	xvprintf@c,w
  4302  0203  1903               	btfsc	3,2
  4303  0204  2A07               	goto	l5321
  4304  0205  3007               	movlw	7
  4305  0206  2A08               	goto	L4
  4306  0207                     l5321:	
  4307  0207  3027               	movlw	39
  4308  0208                     L4:	
  4309  0208  00D5               	movwf	_xvprintf$766
  4310  0209  3000               	movlw	0
  4311  020A  00D6               	movwf	_xvprintf$766+1
  4312  020B  0855               	movf	_xvprintf$766,w
  4313  020C  00BD               	movwf	??_xvprintf
  4314  020D  083D               	movf	??_xvprintf,w
  4315  020E  07E8               	addwf	xvprintf@d,f
  4316  020F                     l5325:	
  4317                           
  4318                           ;xprintf.c: 154: s[i++] = d + '0';
  4319  020F  0868               	movf	xvprintf@d,w
  4320  0210  3E30               	addlw	48
  4321  0211  00BD               	movwf	??_xvprintf
  4322  0212  0866               	movf	xvprintf@i,w
  4323  0213  3E41               	addlw	(low (xvprintf@s| 0))& (0+255)
  4324  0214  0086               	movwf	6
  4325  0215  0187               	clrf	7
  4326  0216  083D               	movf	??_xvprintf,w
  4327  0217  0081               	movwf	1
  4328  0218  3001               	movlw	1
  4329  0219  07E6               	addwf	xvprintf@i,f
  4330  021A  3000               	movlw	0
  4331  021B  3DE7               	addwfc	xvprintf@i+1,f
  4332                           
  4333                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  4334  021C  0863               	movf	xvprintf@v+3,w
  4335  021D  0462               	iorwf	xvprintf@v+2,w
  4336  021E  0461               	iorwf	xvprintf@v+1,w
  4337  021F  0460               	iorwf	xvprintf@v,w
  4338  0220  1903               	skipnz
  4339  0221  2A29               	goto	l748
  4340  0222  3000               	movlw	0
  4341  0223  0267               	subwf	xvprintf@i+1,w
  4342  0224  3010               	movlw	16
  4343  0225  1903               	skipnz
  4344  0226  0266               	subwf	xvprintf@i,w
  4345  0227  1C03               	skipc
  4346  0228  29CD               	goto	l5311
  4347  0229                     l748:	
  4348                           
  4349                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  4350  0229  1DE4               	btfss	xvprintf@f,3
  4351  022A  2A37               	goto	l5337
  4352  022B  302D               	movlw	45
  4353  022C  00BD               	movwf	??_xvprintf
  4354  022D  0866               	movf	xvprintf@i,w
  4355  022E  3E41               	addlw	(low (xvprintf@s| 0))& (0+255)
  4356  022F  0086               	movwf	6
  4357  0230  0187               	clrf	7
  4358  0231  083D               	movf	??_xvprintf,w
  4359  0232  0081               	movwf	1
  4360  0233  3001               	movlw	1
  4361  0234  07E6               	addwf	xvprintf@i,f
  4362  0235  3000               	movlw	0
  4363  0236  3DE7               	addwfc	xvprintf@i+1,f
  4364  0237                     l5337:	
  4365                           
  4366                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  4367  0237  0867               	movf	xvprintf@i+1,w
  4368  0238  00DF               	movwf	xvprintf@j+1
  4369  0239  0866               	movf	xvprintf@i,w
  4370  023A  00DE               	movwf	xvprintf@j
  4371  023B  1864               	btfsc	xvprintf@f,0
  4372  023C  2A3F               	goto	l5343
  4373  023D  3020               	movlw	32
  4374  023E  2A40               	goto	L5
  4375  023F                     l5343:	
  4376  023F  3030               	movlw	48
  4377  0240                     L5:	
  4378  0240  00D7               	movwf	_xvprintf$767
  4379  0241  3000               	movlw	0
  4380  0242  00D8               	movwf	_xvprintf$767+1
  4381  0243  0857               	movf	_xvprintf$767,w
  4382  0244  00BD               	movwf	??_xvprintf
  4383  0245  083D               	movf	??_xvprintf,w
  4384  0246  00E8               	movwf	xvprintf@d
  4385                           
  4386                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  4387  0247  2A4C               	goto	l5347
  4388  0248                     l5345:	
  4389  0248  0868               	movf	xvprintf@d,w
  4390  0249  318E  26AA  3180   	fcall	_xputc
  4391  024C                     l5347:	
  4392  024C  0020               	movlb	0	; select bank0
  4393  024D  18E4               	btfsc	xvprintf@f,1
  4394  024E  2A5E               	goto	l5351
  4395  024F  085F               	movf	xvprintf@j+1,w
  4396  0250  00BE               	movwf	??_xvprintf+1
  4397  0251  085E               	movf	xvprintf@j,w
  4398  0252  00BD               	movwf	??_xvprintf
  4399  0253  0ADE               	incf	xvprintf@j,f
  4400  0254  1903               	skipnz
  4401  0255  0ADF               	incf	xvprintf@j+1,f
  4402  0256  085D               	movf	xvprintf@w+1,w
  4403  0257  023E               	subwf	??_xvprintf+1,w
  4404  0258  1D03               	skipz
  4405  0259  2A5C               	goto	u5905
  4406  025A  085C               	movf	xvprintf@w,w
  4407  025B  023D               	subwf	??_xvprintf,w
  4408  025C                     u5905:	
  4409  025C  1C03               	skipc
  4410  025D  2A48               	goto	l5345
  4411  025E                     l5351:	
  4412                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  4413                           
  4414  025E  3001               	movlw	1
  4415  025F  02E6               	subwf	xvprintf@i,f
  4416  0260  3000               	movlw	0
  4417  0261  3BE7               	subwfb	xvprintf@i+1,f
  4418  0262  0866               	movf	xvprintf@i,w
  4419  0263  3E41               	addlw	(low (xvprintf@s| 0))& (0+255)
  4420  0264  0086               	movwf	6
  4421  0265  0187               	clrf	7
  4422  0266  0801               	movf	1,w
  4423  0267  318E  26AA  3180   	fcall	_xputc
  4424  026A  0020               	movlb	0	; select bank0
  4425  026B  0866               	movf	xvprintf@i,w
  4426  026C  0467               	iorwf	xvprintf@i+1,w
  4427  026D  1903               	btfsc	3,2
  4428  026E  2A74               	goto	l5357
  4429  026F  2A5E               	goto	l5351
  4430  0270                     l5355:	
  4431                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  4432                           
  4433  0270  3020               	movlw	32
  4434  0271  318E  26AA  3180   	fcall	_xputc
  4435  0274                     l5357:	
  4436  0274  0020               	movlb	0	; select bank0
  4437  0275  085F               	movf	xvprintf@j+1,w
  4438  0276  00BE               	movwf	??_xvprintf+1
  4439  0277  085E               	movf	xvprintf@j,w
  4440  0278  00BD               	movwf	??_xvprintf
  4441  0279  0ADE               	incf	xvprintf@j,f
  4442  027A  1903               	skipnz
  4443  027B  0ADF               	incf	xvprintf@j+1,f
  4444  027C  085D               	movf	xvprintf@w+1,w
  4445  027D  023E               	subwf	??_xvprintf+1,w
  4446  027E  1D03               	skipz
  4447  027F  2A82               	goto	u5925
  4448  0280  085C               	movf	xvprintf@w,w
  4449  0281  023D               	subwf	??_xvprintf,w
  4450  0282                     u5925:	
  4451  0282  1803               	btfsc	3,0
  4452  0283  285B               	goto	l692
  4453  0284  2A70               	goto	l5355
  4454  0285                     __end_of_xvprintf:	
  4455                           ;xprintf.c: 161: }
  4456                           
  4457                           
  4458                           	psect	text3
  4459  0D5E                     __ptext3:	
  4460 ;; *************** function _xputs *****************
  4461 ;; Defined at:
  4462 ;;		line 44 in file "xprintf.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;  str             1    wreg     PTR const unsigned char 
  4465 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  str             1    7[BANK0 ] PTR const unsigned char 
  4468 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4478 ;;      Params:         0       0       0       0       0       0
  4479 ;;      Locals:         0       1       0       0       0       0
  4480 ;;      Temps:          0       1       0       0       0       0
  4481 ;;      Totals:         0       2       0       0       0       0
  4482 ;;Total ram usage:        2 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    6
  4485 ;; This function calls:
  4486 ;;		_xputc
  4487 ;; This function is called by:
  4488 ;;		_xvprintf
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           
  4493                           ;psect for function _xputs
  4494  0D5E                     _xputs:	
  4495                           
  4496                           ;incstack = 0
  4497                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4498                           ;xputs@str stored from wreg
  4499  0D5E  0020               	movlb	0	; select bank0
  4500  0D5F  00A7               	movwf	xputs@str
  4501  0D60                     l5193:	
  4502                           ;xprintf.c: 48: while (*str)
  4503                           
  4504  0D60  0827               	movf	xputs@str,w
  4505  0D61  0086               	movwf	6
  4506  0D62  0187               	clrf	7
  4507  0D63  0801               	movf	1,w
  4508  0D64  1903               	btfsc	3,2
  4509  0D65  0008               	return
  4510                           
  4511                           ;xprintf.c: 49: xputc(*str++);
  4512  0D66  0827               	movf	xputs@str,w
  4513  0D67  0086               	movwf	6
  4514  0D68  0187               	clrf	7
  4515  0D69  0801               	movf	1,w
  4516  0D6A  318E  26AA  318D   	fcall	_xputc
  4517  0D6D  3001               	movlw	1
  4518  0D6E  0020               	movlb	0	; select bank0
  4519  0D6F  00A6               	movwf	??_xputs
  4520  0D70  0826               	movf	??_xputs,w
  4521  0D71  07A7               	addwf	xputs@str,f
  4522  0D72  2D60               	goto	l5193
  4523  0D73                     __end_of_xputs:	
  4524                           
  4525                           	psect	text4
  4526  0EAA                     __ptext4:	
  4527 ;; *************** function _xputc *****************
  4528 ;; Defined at:
  4529 ;;		line 26 in file "xprintf.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  c               1    wreg     unsigned char 
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;  c               1    5[BANK0 ] unsigned char 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1    wreg      void 
  4536 ;; Registers used:
  4537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4543 ;;      Params:         0       0       0       0       0       0
  4544 ;;      Locals:         0       1       0       0       0       0
  4545 ;;      Temps:          0       1       0       0       0       0
  4546 ;;      Totals:         0       2       0       0       0       0
  4547 ;;Total ram usage:        2 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:    5
  4550 ;; This function calls:
  4551 ;;		Absolute function
  4552 ;;		_LCD_Put
  4553 ;; This function is called by:
  4554 ;;		_xputs
  4555 ;;		_xvprintf
  4556 ;;		_xfputs
  4557 ;;		_put_dump
  4558 ;;		_xgets
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function _xputc
  4564  0EAA                     _xputc:	
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4568                           ;xputc@c stored from wreg
  4569  0EAA  0020               	movlb	0	; select bank0
  4570  0EAB  00A5               	movwf	xputc@c
  4571  0EAC  300A               	movlw	10
  4572  0EAD  0625               	xorwf	xputc@c,w
  4573  0EAE  1D03               	btfss	3,2
  4574  0EAF  2EB9               	goto	l5175
  4575  0EB0  30EF               	movlw	(low (STR_50| (0+32768)))& (0+255)
  4576  0EB1  00A4               	movwf	??_xputc
  4577  0EB2  0824               	movf	??_xputc,w
  4578  0EB3  00A3               	movwf	LCD_Put@word
  4579  0EB4  0877               	movf	_xfunc_out+1,w
  4580  0EB5  008A               	movwf	10
  4581  0EB6  0876               	movf	_xfunc_out,w
  4582  0EB7  000A               	callw
  4583  0EB8  318E               	pagesel	$
  4584  0EB9                     l5175:	
  4585                           
  4586                           ;xprintf.c: 30: if (outptr) {
  4587  0EB9  0878               	movf	_outptr,w
  4588  0EBA  1903               	btfsc	3,2
  4589  0EBB  2EC9               	goto	l5183
  4590                           
  4591                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  4592  0EBC  0020               	movlb	0	; select bank0
  4593  0EBD  0825               	movf	xputc@c,w
  4594  0EBE  00A4               	movwf	??_xputc
  4595  0EBF  0878               	movf	_outptr,w
  4596  0EC0  0086               	movwf	6
  4597  0EC1  0187               	clrf	7
  4598  0EC2  0824               	movf	??_xputc,w
  4599  0EC3  0081               	movwf	1
  4600  0EC4  3001               	movlw	1
  4601  0EC5  00A4               	movwf	??_xputc
  4602  0EC6  0824               	movf	??_xputc,w
  4603  0EC7  07F8               	addwf	_outptr,f
  4604                           
  4605                           ;xprintf.c: 32: return;
  4606  0EC8  0008               	return
  4607  0EC9                     l5183:	
  4608                           
  4609                           ;xprintf.c: 33: }
  4610                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  4611  0EC9  0876               	movf	_xfunc_out,w
  4612  0ECA  0477               	iorwf	_xfunc_out+1,w
  4613  0ECB  1903               	btfsc	3,2
  4614  0ECC  0008               	return
  4615  0ECD  0020               	movlb	0	; select bank0
  4616  0ECE  0825               	movf	xputc@c,w
  4617  0ECF  00A4               	movwf	??_xputc
  4618  0ED0  0824               	movf	??_xputc,w
  4619  0ED1  00A3               	movwf	LCD_Put@word
  4620  0ED2  0877               	movf	_xfunc_out+1,w
  4621  0ED3  008A               	movwf	10
  4622  0ED4  0876               	movf	_xfunc_out,w
  4623  0ED5  000A               	callw
  4624  0ED6  318E               	pagesel	$
  4625  0ED7  0008               	return
  4626  0ED8                     __end_of_xputc:	
  4627                           
  4628                           	psect	text5
  4629  0C75                     __ptext5:	
  4630 ;; *************** function _LCD_Put *****************
  4631 ;; Defined at:
  4632 ;;		line 54 in file "LCD.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  word            1    3[BANK0 ] char 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0, pclath, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4646 ;;      Params:         0       1       0       0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0
  4649 ;;      Totals:         0       1       0       0       0       0
  4650 ;;Total ram usage:        1 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    4
  4653 ;; This function calls:
  4654 ;;		_LCD_WriteData
  4655 ;; This function is called by:
  4656 ;;		_main
  4657 ;;		_xputc
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           
  4662                           ;psect for function _LCD_Put
  4663  0C75                     _LCD_Put:	
  4664                           
  4665                           ;LCD.c: 56: LATA3 = 1;
  4666                           
  4667                           ;incstack = 0
  4668                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  4669  0C75  0022               	movlb	2	; select bank2
  4670  0C76  158C               	bsf	12,3	;volatile
  4671                           
  4672                           ;LCD.c: 57: LCD_WriteData(word);
  4673  0C77  0020               	movlb	0	; select bank0
  4674  0C78  0823               	movf	LCD_Put@word,w
  4675  0C79  318F  2780         	fcall	_LCD_WriteData
  4676  0C7B  0008               	return
  4677  0C7C                     __end_of_LCD_Put:	
  4678                           
  4679                           	psect	text6
  4680  0DD8                     __ptext6:	
  4681 ;; *************** function ___wmul *****************
  4682 ;; Defined at:
  4683 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4686 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  product         2    4[BANK0 ] unsigned int 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  2    0[BANK0 ] unsigned int 
  4691 ;; Registers used:
  4692 ;;		wreg, status,2, status,0
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4698 ;;      Params:         0       4       0       0       0       0
  4699 ;;      Locals:         0       2       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0
  4701 ;;      Totals:         0       6       0       0       0       0
  4702 ;;Total ram usage:        6 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    3
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_xvprintf
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           
  4713                           ;psect for function ___wmul
  4714  0DD8                     ___wmul:	
  4715                           
  4716                           ;incstack = 0
  4717                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4718  0DD8  0020               	movlb	0	; select bank0
  4719  0DD9  01A4               	clrf	___wmul@product
  4720  0DDA  01A5               	clrf	___wmul@product+1
  4721  0DDB                     l4427:	
  4722  0DDB  1C20               	btfss	___wmul@multiplier,0
  4723  0DDC  2DE1               	goto	l970
  4724  0DDD  0822               	movf	___wmul@multiplicand,w
  4725  0DDE  07A4               	addwf	___wmul@product,f
  4726  0DDF  0823               	movf	___wmul@multiplicand+1,w
  4727  0DE0  3DA5               	addwfc	___wmul@product+1,f
  4728  0DE1                     l970:	
  4729  0DE1  3001               	movlw	1
  4730  0DE2                     u4725:	
  4731  0DE2  35A2               	lslf	___wmul@multiplicand,f
  4732  0DE3  0DA3               	rlf	___wmul@multiplicand+1,f
  4733  0DE4  0B89               	decfsz	9,f
  4734  0DE5  2DE2               	goto	u4725
  4735  0DE6  3001               	movlw	1
  4736  0DE7                     u4735:	
  4737  0DE7  36A1               	lsrf	___wmul@multiplier+1,f
  4738  0DE8  0CA0               	rrf	___wmul@multiplier,f
  4739  0DE9  0B89               	decfsz	9,f
  4740  0DEA  2DE7               	goto	u4735
  4741  0DEB  0820               	movf	___wmul@multiplier,w
  4742  0DEC  0421               	iorwf	___wmul@multiplier+1,w
  4743  0DED  1D03               	btfss	3,2
  4744  0DEE  2DDB               	goto	l4427
  4745  0DEF  0825               	movf	___wmul@product+1,w
  4746  0DF0  00A1               	movwf	?___wmul+1
  4747  0DF1  0824               	movf	___wmul@product,w
  4748  0DF2  00A0               	movwf	?___wmul
  4749  0DF3  0008               	return
  4750  0DF4                     __end_of___wmul:	
  4751                           
  4752                           	psect	text7
  4753  0FBD                     __ptext7:	
  4754 ;; *************** function ___llmod *****************
  4755 ;; Defined at:
  4756 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  divisor         4    0[BANK0 ] unsigned long 
  4759 ;;  dividend        4    4[BANK0 ] unsigned long 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;  counter         1    9[BANK0 ] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  4    0[BANK0 ] unsigned long 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4771 ;;      Params:         0       8       0       0       0       0
  4772 ;;      Locals:         0       1       0       0       0       0
  4773 ;;      Temps:          0       1       0       0       0       0
  4774 ;;      Totals:         0      10       0       0       0       0
  4775 ;;Total ram usage:       10 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    3
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_xvprintf
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           
  4786                           ;psect for function ___llmod
  4787  0FBD                     ___llmod:	
  4788                           
  4789                           ;incstack = 0
  4790                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4791  0FBD  0020               	movlb	0	; select bank0
  4792  0FBE  0823               	movf	___llmod@divisor+3,w
  4793  0FBF  0422               	iorwf	___llmod@divisor+2,w
  4794  0FC0  0421               	iorwf	___llmod@divisor+1,w
  4795  0FC1  0420               	iorwf	___llmod@divisor,w
  4796  0FC2  1903               	skipnz
  4797  0FC3  2FF7               	goto	l4479
  4798  0FC4  01A9               	clrf	___llmod@counter
  4799  0FC5  0AA9               	incf	___llmod@counter,f
  4800  0FC6                     l4469:	
  4801  0FC6  1BA3               	btfsc	___llmod@divisor+3,7
  4802  0FC7  2FD4               	goto	l4471
  4803  0FC8  3001               	movlw	1
  4804  0FC9                     u4835:	
  4805  0FC9  35A0               	lslf	___llmod@divisor,f
  4806  0FCA  0DA1               	rlf	___llmod@divisor+1,f
  4807  0FCB  0DA2               	rlf	___llmod@divisor+2,f
  4808  0FCC  0DA3               	rlf	___llmod@divisor+3,f
  4809  0FCD  0B89               	decfsz	9,f
  4810  0FCE  2FC9               	goto	u4835
  4811  0FCF  3001               	movlw	1
  4812  0FD0  00A8               	movwf	??___llmod
  4813  0FD1  0828               	movf	??___llmod,w
  4814  0FD2  07A9               	addwf	___llmod@counter,f
  4815  0FD3  2FC6               	goto	l4469
  4816  0FD4                     l4471:	
  4817  0FD4  0823               	movf	___llmod@divisor+3,w
  4818  0FD5  0227               	subwf	___llmod@dividend+3,w
  4819  0FD6  1D03               	skipz
  4820  0FD7  2FE2               	goto	u4855
  4821  0FD8  0822               	movf	___llmod@divisor+2,w
  4822  0FD9  0226               	subwf	___llmod@dividend+2,w
  4823  0FDA  1D03               	skipz
  4824  0FDB  2FE2               	goto	u4855
  4825  0FDC  0821               	movf	___llmod@divisor+1,w
  4826  0FDD  0225               	subwf	___llmod@dividend+1,w
  4827  0FDE  1D03               	skipz
  4828  0FDF  2FE2               	goto	u4855
  4829  0FE0  0820               	movf	___llmod@divisor,w
  4830  0FE1  0224               	subwf	___llmod@dividend,w
  4831  0FE2                     u4855:	
  4832  0FE2  1C03               	skipc
  4833  0FE3  2FEC               	goto	l4475
  4834  0FE4  0820               	movf	___llmod@divisor,w
  4835  0FE5  02A4               	subwf	___llmod@dividend,f
  4836  0FE6  0821               	movf	___llmod@divisor+1,w
  4837  0FE7  3BA5               	subwfb	___llmod@dividend+1,f
  4838  0FE8  0822               	movf	___llmod@divisor+2,w
  4839  0FE9  3BA6               	subwfb	___llmod@dividend+2,f
  4840  0FEA  0823               	movf	___llmod@divisor+3,w
  4841  0FEB  3BA7               	subwfb	___llmod@dividend+3,f
  4842  0FEC                     l4475:	
  4843  0FEC  3001               	movlw	1
  4844  0FED                     u4865:	
  4845  0FED  36A3               	lsrf	___llmod@divisor+3,f
  4846  0FEE  0CA2               	rrf	___llmod@divisor+2,f
  4847  0FEF  0CA1               	rrf	___llmod@divisor+1,f
  4848  0FF0  0CA0               	rrf	___llmod@divisor,f
  4849  0FF1  0B89               	decfsz	9,f
  4850  0FF2  2FED               	goto	u4865
  4851  0FF3  3001               	movlw	1
  4852  0FF4  02A9               	subwf	___llmod@counter,f
  4853  0FF5  1D03               	btfss	3,2
  4854  0FF6  2FD4               	goto	l4471
  4855  0FF7                     l4479:	
  4856  0FF7  0827               	movf	___llmod@dividend+3,w
  4857  0FF8  00A3               	movwf	?___llmod+3
  4858  0FF9  0826               	movf	___llmod@dividend+2,w
  4859  0FFA  00A2               	movwf	?___llmod+2
  4860  0FFB  0825               	movf	___llmod@dividend+1,w
  4861  0FFC  00A1               	movwf	?___llmod+1
  4862  0FFD  0824               	movf	___llmod@dividend,w
  4863  0FFE  00A0               	movwf	?___llmod
  4864  0FFF  0008               	return
  4865  1000                     __end_of___llmod:	
  4866                           
  4867                           	psect	text8
  4868  070A                     __ptext8:	
  4869 ;; *************** function _mTouch_Read *****************
  4870 ;; Defined at:
  4871 ;;		line 111 in file "main.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  chan            1    wreg     unsigned char 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  chan            1    7[BANK0 ] unsigned char 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      unsigned char 
  4878 ;; Registers used:
  4879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4885 ;;      Params:         0       0       0       0       0       0
  4886 ;;      Locals:         0       1       0       0       0       0
  4887 ;;      Temps:          0       5       0       0       0       0
  4888 ;;      Totals:         0       6       0       0       0       0
  4889 ;;Total ram usage:        6 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; Hardware stack levels required when called:    4
  4892 ;; This function calls:
  4893 ;;		_Buzzer_MiliSecond
  4894 ;; This function is called by:
  4895 ;;		_main
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           
  4900                           ;psect for function _mTouch_Read
  4901  070A                     _mTouch_Read:	
  4902                           
  4903                           ;incstack = 0
  4904                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4905                           ;mTouch_Read@chan stored from wreg
  4906  070A  0020               	movlb	0	; select bank0
  4907  070B  00A7               	movwf	mTouch_Read@chan
  4908                           
  4909                           ;main.c: 113: if(chan>2)return 0;
  4910  070C  3003               	movlw	3
  4911  070D  0227               	subwf	mTouch_Read@chan,w
  4912  070E  1C03               	skipc
  4913  070F  2F12               	goto	l4873
  4914  0710  3000               	movlw	0
  4915  0711  0008               	return
  4916  0712                     l4873:	
  4917                           
  4918                           ;main.c: 115: if(((CPS_PreData[chan]-CPS_Data[chan])>100)&&!mTouch_Interval[chan])
  4919  0712  0827               	movf	mTouch_Read@chan,w
  4920  0713  3EAB               	addlw	(low (_CPS_Data| 0))& (0+255)
  4921  0714  0086               	movwf	6
  4922  0715  0187               	clrf	7
  4923  0716  0801               	movf	1,w
  4924  0717  00A2               	movwf	??_mTouch_Read
  4925  0718  01A3               	clrf	??_mTouch_Read+1
  4926  0719  09A2               	comf	??_mTouch_Read,f
  4927  071A  09A3               	comf	??_mTouch_Read+1,f
  4928  071B  0AA2               	incf	??_mTouch_Read,f
  4929  071C  1903               	skipnz
  4930  071D  0AA3               	incf	??_mTouch_Read+1,f
  4931  071E  0827               	movf	mTouch_Read@chan,w
  4932  071F  3EAE               	addlw	(low (_CPS_PreData| 0))& (0+255)
  4933  0720  0086               	movwf	6
  4934  0721  0187               	clrf	7
  4935  0722  0801               	movf	1,w
  4936  0723  0722               	addwf	??_mTouch_Read,w
  4937  0724  00A4               	movwf	??_mTouch_Read+2
  4938  0725  0823               	movf	??_mTouch_Read+1,w
  4939  0726  1803               	skipnc
  4940  0727  0A23               	incf	??_mTouch_Read+1,w
  4941  0728  00A5               	movwf	??_mTouch_Read+3
  4942  0729  0825               	movf	??_mTouch_Read+3,w
  4943  072A  3A80               	xorlw	128
  4944  072B  00A6               	movwf	??_mTouch_Read+4
  4945  072C  3080               	movlw	128
  4946  072D  0226               	subwf	??_mTouch_Read+4,w
  4947  072E  1D03               	skipz
  4948  072F  2F32               	goto	u5225
  4949  0730  3065               	movlw	101
  4950  0731  0224               	subwf	??_mTouch_Read+2,w
  4951  0732                     u5225:	
  4952  0732  1C03               	skipc
  4953  0733  2F4C               	goto	l4885
  4954  0734  0020               	movlb	0	; select bank0
  4955  0735  0827               	movf	mTouch_Read@chan,w
  4956  0736  3EA8               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4957  0737  0086               	movwf	6
  4958  0738  0187               	clrf	7
  4959  0739  0801               	movf	1,w
  4960  073A  1D03               	btfss	3,2
  4961  073B  2F4C               	goto	l4885
  4962                           
  4963                           ;main.c: 116: {
  4964                           ;main.c: 117: mTouch_Interval[chan] = 100;
  4965  073C  3064               	movlw	100
  4966  073D  00A2               	movwf	??_mTouch_Read
  4967  073E  0827               	movf	mTouch_Read@chan,w
  4968  073F  3EA8               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4969  0740  0086               	movwf	6
  4970  0741  0187               	clrf	7
  4971  0742  0822               	movf	??_mTouch_Read,w
  4972  0743  0081               	movwf	1
  4973                           
  4974                           ;main.c: 118: Buzzer_MiliSecond(100);
  4975  0744  3064               	movlw	100
  4976  0745  00A0               	movwf	Buzzer_MiliSecond@time
  4977  0746  3000               	movlw	0
  4978  0747  00A1               	movwf	Buzzer_MiliSecond@time+1
  4979  0748  318C  24D1         	fcall	_Buzzer_MiliSecond
  4980                           
  4981                           ;main.c: 119: return 1;
  4982  074A  3001               	movlw	1
  4983  074B  0008               	return
  4984  074C                     l4885:	
  4985                           
  4986                           ;main.c: 120: }
  4987                           ;main.c: 121: return 0;
  4988  074C  3000               	movlw	0
  4989  074D  0008               	return
  4990  074E                     __end_of_mTouch_Read:	
  4991                           
  4992                           	psect	text9
  4993  0CD1                     __ptext9:	
  4994 ;; *************** function _Buzzer_MiliSecond *****************
  4995 ;; Defined at:
  4996 ;;		line 38 in file "Buzzer.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  time            2    0[BANK0 ] unsigned int 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      void 
  5003 ;; Registers used:
  5004 ;;		wreg, status,2, status,0
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5010 ;;      Params:         0       2       0       0       0       0
  5011 ;;      Locals:         0       0       0       0       0       0
  5012 ;;      Temps:          0       0       0       0       0       0
  5013 ;;      Totals:         0       2       0       0       0       0
  5014 ;;Total ram usage:        2 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    3
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_mTouch_Read
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           
  5025                           ;psect for function _Buzzer_MiliSecond
  5026  0CD1                     _Buzzer_MiliSecond:	
  5027                           
  5028                           ;Buzzer.c: 40: if(count==0)
  5029                           
  5030                           ;incstack = 0
  5031                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  5032  0CD1  0021               	movlb	1	; select bank1
  5033  0CD2  083A               	movf	_count^(0+128),w
  5034  0CD3  043B               	iorwf	(_count+1)^(0+128),w
  5035  0CD4  1D03               	btfss	3,2
  5036  0CD5  0008               	return
  5037                           
  5038                           ;Buzzer.c: 41: count = time;
  5039  0CD6  0020               	movlb	0	; select bank0
  5040  0CD7  0821               	movf	Buzzer_MiliSecond@time+1,w
  5041  0CD8  0021               	movlb	1	; select bank1
  5042  0CD9  00BB               	movwf	(_count+1)^(0+128)
  5043  0CDA  0020               	movlb	0	; select bank0
  5044  0CDB  0820               	movf	Buzzer_MiliSecond@time,w
  5045  0CDC  0021               	movlb	1	; select bank1
  5046  0CDD  00BA               	movwf	_count^(0+128)
  5047  0CDE  0008               	return
  5048  0CDF                     __end_of_Buzzer_MiliSecond:	
  5049                           
  5050                           	psect	text10
  5051  0D23                     __ptext10:	
  5052 ;; *************** function _mTouch_Init *****************
  5053 ;; Defined at:
  5054 ;;		line 12 in file "mTouch.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;		None
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;		None
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0, pclath, cstack
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5068 ;;      Params:         0       0       0       0       0       0
  5069 ;;      Locals:         0       0       0       0       0       0
  5070 ;;      Temps:          0       1       0       0       0       0
  5071 ;;      Totals:         0       1       0       0       0       0
  5072 ;;Total ram usage:        1 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; Hardware stack levels required when called:    4
  5075 ;; This function calls:
  5076 ;;		_mTouch_PortInit
  5077 ;; This function is called by:
  5078 ;;		_main
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           
  5083                           ;psect for function _mTouch_Init
  5084  0D23                     _mTouch_Init:	
  5085                           
  5086                           ;mTouch.c: 14: mTouch_PortInit();
  5087                           
  5088                           ;incstack = 0
  5089                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  5090  0D23  318C  24B6         	fcall	_mTouch_PortInit
  5091                           
  5092                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  5093  0D25  0021               	movlb	1	; select bank1
  5094  0D26  0815               	movf	21,w	;volatile
  5095                           
  5096                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  5097  0D27  1595               	bsf	21,3	;volatile
  5098                           
  5099                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  5100  0D28  1695               	bsf	21,5	;volatile
  5101                           
  5102                           ;mTouch.c: 20: TMR0 = 0x00;
  5103  0D29  0020               	movlb	0	; select bank0
  5104  0D2A  0195               	clrf	21	;volatile
  5105                           
  5106                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  5107  0D2B  141E               	bsf	30,0	;volatile
  5108                           
  5109                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  5110  0D2C  300C               	movlw	12
  5111  0D2D  00A1               	movwf	??_mTouch_Init
  5112  0D2E  0821               	movf	??_mTouch_Init,w
  5113  0D2F  049E               	iorwf	30,f	;volatile
  5114                           
  5115                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  5116  0D30  307F               	movlw	127
  5117  0D31  00A1               	movwf	??_mTouch_Init
  5118  0D32  0821               	movf	??_mTouch_Init,w
  5119  0D33  059E               	andwf	30,f	;volatile
  5120                           
  5121                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  5122  0D34  019F               	clrf	31	;volatile
  5123  0D35  0008               	return
  5124  0D36                     __end_of_mTouch_Init:	
  5125                           
  5126                           	psect	text11
  5127  0CB6                     __ptext11:	
  5128 ;; *************** function _mTouch_PortInit *****************
  5129 ;; Defined at:
  5130 ;;		line 6 in file "mTouch.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;		None
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      void 
  5137 ;; Registers used:
  5138 ;;		wreg, status,2, status,0
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5144 ;;      Params:         0       0       0       0       0       0
  5145 ;;      Locals:         0       0       0       0       0       0
  5146 ;;      Temps:          0       1       0       0       0       0
  5147 ;;      Totals:         0       1       0       0       0       0
  5148 ;;Total ram usage:        1 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    3
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_mTouch_Init
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           
  5159                           ;psect for function _mTouch_PortInit
  5160  0CB6                     _mTouch_PortInit:	
  5161                           
  5162                           ;mTouch.c: 8: TRISA |= (0x07);
  5163                           
  5164                           ;incstack = 0
  5165                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  5166  0CB6  3007               	movlw	7
  5167  0CB7  0020               	movlb	0	; select bank0
  5168  0CB8  00A0               	movwf	??_mTouch_PortInit
  5169  0CB9  0820               	movf	??_mTouch_PortInit,w
  5170  0CBA  0021               	movlb	1	; select bank1
  5171  0CBB  048C               	iorwf	12,f	;volatile
  5172                           
  5173                           ;mTouch.c: 9: ANSELA |= (0x07);
  5174  0CBC  3007               	movlw	7
  5175  0CBD  0020               	movlb	0	; select bank0
  5176  0CBE  00A0               	movwf	??_mTouch_PortInit
  5177  0CBF  0820               	movf	??_mTouch_PortInit,w
  5178  0CC0  0023               	movlb	3	; select bank3
  5179  0CC1  048C               	iorwf	12,f	;volatile
  5180  0CC2  0008               	return
  5181  0CC3                     __end_of_mTouch_PortInit:	
  5182                           
  5183                           	psect	text12
  5184  0CC3                     __ptext12:	
  5185 ;; *************** function _Timer6_Init *****************
  5186 ;; Defined at:
  5187 ;;		line 3 in file "Timer6.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;		None
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      void 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5201 ;;      Params:         0       0       0       0       0       0
  5202 ;;      Locals:         0       0       0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0       0
  5204 ;;      Totals:         0       0       0       0       0       0
  5205 ;;Total ram usage:        0 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    3
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_main
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           
  5216                           ;psect for function _Timer6_Init
  5217  0CC3                     _Timer6_Init:	
  5218                           
  5219                           ;Timer6.c: 5: PR6 = 50;
  5220                           
  5221                           ;incstack = 0
  5222                           ; Regs used in _Timer6_Init: [wreg+status,2]
  5223  0CC3  3032               	movlw	50
  5224  0CC4  0028               	movlb	8	; select bank8
  5225  0CC5  009D               	movwf	29	;volatile
  5226                           
  5227                           ;Timer6.c: 6: TMR6 = 0x00;
  5228  0CC6  019C               	clrf	28	;volatile
  5229                           
  5230                           ;Timer6.c: 7: T6CON |= (0x02<<0);
  5231  0CC7  149E               	bsf	30,1	;volatile
  5232                           
  5233                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  5234  0CC8  081E               	movf	30,w	;volatile
  5235                           
  5236                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  5237  0CC9  151E               	bsf	30,2	;volatile
  5238                           
  5239                           ;Timer6.c: 11: TMR6IF = 0;
  5240  0CCA  0020               	movlb	0	; select bank0
  5241  0CCB  1193               	bcf	19,3	;volatile
  5242                           
  5243                           ;Timer6.c: 12: TMR6IE = 1;
  5244  0CCC  0021               	movlb	1	; select bank1
  5245  0CCD  1593               	bsf	19,3	;volatile
  5246                           
  5247                           ;Timer6.c: 13: PEIE = 1;
  5248  0CCE  170B               	bsf	11,6	;volatile
  5249                           
  5250                           ;Timer6.c: 14: GIE = 1;
  5251  0CCF  178B               	bsf	11,7	;volatile
  5252  0CD0  0008               	return
  5253  0CD1                     __end_of_Timer6_Init:	
  5254                           
  5255                           	psect	text13
  5256  0D10                     __ptext13:	
  5257 ;; *************** function _Timer4_Init *****************
  5258 ;; Defined at:
  5259 ;;		line 3 in file "Timer4.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, status,0
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5273 ;;      Params:         0       0       0       0       0       0
  5274 ;;      Locals:         0       0       0       0       0       0
  5275 ;;      Temps:          0       1       0       0       0       0
  5276 ;;      Totals:         0       1       0       0       0       0
  5277 ;;Total ram usage:        1 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:    3
  5280 ;; This function calls:
  5281 ;;		Nothing
  5282 ;; This function is called by:
  5283 ;;		_main
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           
  5288                           ;psect for function _Timer4_Init
  5289  0D10                     _Timer4_Init:	
  5290                           
  5291                           ;Timer4.c: 5: PR4 = 0x7D;
  5292                           
  5293                           ;incstack = 0
  5294                           ; Regs used in _Timer4_Init: [wreg+status,2+status,0]
  5295  0D10  307D               	movlw	125
  5296  0D11  0028               	movlb	8	; select bank8
  5297  0D12  0096               	movwf	22	;volatile
  5298                           
  5299                           ;Timer4.c: 6: TMR4 = 0x00;
  5300  0D13  0195               	clrf	21	;volatile
  5301                           
  5302                           ;Timer4.c: 7: T4CON |= (0x03<<0);
  5303  0D14  3003               	movlw	3
  5304  0D15  0020               	movlb	0	; select bank0
  5305  0D16  00A0               	movwf	??_Timer4_Init
  5306  0D17  0820               	movf	??_Timer4_Init,w
  5307  0D18  0028               	movlb	8	; select bank8
  5308  0D19  0497               	iorwf	23,f	;volatile
  5309                           
  5310                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  5311  0D1A  0817               	movf	23,w	;volatile
  5312                           
  5313                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  5314  0D1B  1517               	bsf	23,2	;volatile
  5315                           
  5316                           ;Timer4.c: 11: TMR4IF = 0;
  5317  0D1C  0020               	movlb	0	; select bank0
  5318  0D1D  1093               	bcf	19,1	;volatile
  5319                           
  5320                           ;Timer4.c: 12: TMR4IE = 1;
  5321  0D1E  0021               	movlb	1	; select bank1
  5322  0D1F  1493               	bsf	19,1	;volatile
  5323                           
  5324                           ;Timer4.c: 13: PEIE = 1;
  5325  0D20  170B               	bsf	11,6	;volatile
  5326                           
  5327                           ;Timer4.c: 14: GIE = 1;
  5328  0D21  178B               	bsf	11,7	;volatile
  5329  0D22  0008               	return
  5330  0D23                     __end_of_Timer4_Init:	
  5331                           
  5332                           	psect	text14
  5333  0DA1                     __ptext14:	
  5334 ;; *************** function _Timer1_Init *****************
  5335 ;; Defined at:
  5336 ;;		line 6 in file "Timer1.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2, status,0
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5350 ;;      Params:         0       0       0       0       0       0
  5351 ;;      Locals:         0       0       0       0       0       0
  5352 ;;      Temps:          0       1       0       0       0       0
  5353 ;;      Totals:         0       1       0       0       0       0
  5354 ;;Total ram usage:        1 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    3
  5357 ;; This function calls:
  5358 ;;		Nothing
  5359 ;; This function is called by:
  5360 ;;		_main
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           
  5365                           ;psect for function _Timer1_Init
  5366  0DA1                     _Timer1_Init:	
  5367                           
  5368                           ;Timer1.c: 8: TRISB |= (1<<6);
  5369                           
  5370                           ;incstack = 0
  5371                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  5372  0DA1  0021               	movlb	1	; select bank1
  5373  0DA2  170D               	bsf	13,6	;volatile
  5374                           
  5375                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  5376  0DA3  30BF               	movlw	191
  5377  0DA4  0020               	movlb	0	; select bank0
  5378  0DA5  00A0               	movwf	??_Timer1_Init
  5379  0DA6  0820               	movf	??_Timer1_Init,w
  5380  0DA7  0023               	movlb	3	; select bank3
  5381  0DA8  058D               	andwf	13,f	;volatile
  5382                           
  5383                           ;Timer1.c: 11: T1CON |= (0x01<<2);
  5384  0DA9  0020               	movlb	0	; select bank0
  5385  0DAA  1518               	bsf	24,2	;volatile
  5386                           
  5387                           ;Timer1.c: 12: T1CON &= ~(0x01<<3);
  5388  0DAB  30F7               	movlw	247
  5389  0DAC  00A0               	movwf	??_Timer1_Init
  5390  0DAD  0820               	movf	??_Timer1_Init,w
  5391  0DAE  0598               	andwf	24,f	;volatile
  5392                           
  5393                           ;Timer1.c: 13: T1CON |= (0x00<<4);
  5394  0DAF  0818               	movf	24,w	;volatile
  5395                           
  5396                           ;Timer1.c: 14: T1CON |= (0x02<<6);
  5397  0DB0  1798               	bsf	24,7	;volatile
  5398                           
  5399                           ;Timer1.c: 16: T1GCON = 0x00;
  5400  0DB1  0199               	clrf	25	;volatile
  5401                           
  5402                           ;Timer1.c: 18: TMR1 = 0xFFFF-10;
  5403  0DB2  30FF               	movlw	255
  5404  0DB3  0097               	movwf	23	;volatile
  5405  0DB4  30F5               	movlw	245
  5406  0DB5  0096               	movwf	22	;volatile
  5407                           
  5408                           ;Timer1.c: 20: TMR1IF = 0;
  5409  0DB6  1011               	bcf	17,0	;volatile
  5410                           
  5411                           ;Timer1.c: 21: TMR1IE = 1;
  5412  0DB7  0021               	movlb	1	; select bank1
  5413  0DB8  1411               	bsf	17,0	;volatile
  5414                           
  5415                           ;Timer1.c: 22: PEIE = 1;
  5416  0DB9  170B               	bsf	11,6	;volatile
  5417                           
  5418                           ;Timer1.c: 23: GIE = 1;
  5419  0DBA  178B               	bsf	11,7	;volatile
  5420  0DBB  0008               	return
  5421  0DBC                     __end_of_Timer1_Init:	
  5422                           
  5423                           	psect	text15
  5424  0F08                     __ptext15:	
  5425 ;; *************** function _Timer1_GetCPM *****************
  5426 ;; Defined at:
  5427 ;;		line 38 in file "Timer1.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;		None
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;		None
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  2   26[BANK0 ] unsigned int 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, pclath, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5441 ;;      Params:         0       2       0       0       0       0
  5442 ;;      Locals:         0       0       0       0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0
  5444 ;;      Totals:         0       2       0       0       0       0
  5445 ;;Total ram usage:        2 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    4
  5448 ;; This function calls:
  5449 ;;		___lldiv
  5450 ;;		___lmul
  5451 ;; This function is called by:
  5452 ;;		_main
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           
  5457                           ;psect for function _Timer1_GetCPM
  5458  0F08                     _Timer1_GetCPM:	
  5459                           
  5460                           ;Timer1.c: 40: return (uint16_t)((countsum * 6000000) / timesum );
  5461                           
  5462                           ;incstack = 0
  5463                           ; Regs used in _Timer1_GetCPM: [wreg+status,2+status,0+pclath+cstack]
  5464  0F08  0021               	movlb	1	; select bank1
  5465  0F09  0823               	movf	(_timesum+3)^(0+128),w
  5466  0F0A  0020               	movlb	0	; select bank0
  5467  0F0B  00AF               	movwf	___lldiv@divisor+3
  5468  0F0C  0021               	movlb	1	; select bank1
  5469  0F0D  0822               	movf	(_timesum+2)^(0+128),w
  5470  0F0E  0020               	movlb	0	; select bank0
  5471  0F0F  00AE               	movwf	___lldiv@divisor+2
  5472  0F10  0021               	movlb	1	; select bank1
  5473  0F11  0821               	movf	(_timesum+1)^(0+128),w
  5474  0F12  0020               	movlb	0	; select bank0
  5475  0F13  00AD               	movwf	___lldiv@divisor+1
  5476  0F14  0021               	movlb	1	; select bank1
  5477  0F15  0820               	movf	_timesum^(0+128),w
  5478  0F16  0020               	movlb	0	; select bank0
  5479  0F17  00AC               	movwf	___lldiv@divisor
  5480  0F18  0021               	movlb	1	; select bank1
  5481  0F19  0827               	movf	(_countsum+3)^(0+128),w
  5482  0F1A  0020               	movlb	0	; select bank0
  5483  0F1B  00A3               	movwf	___lmul@multiplier+3
  5484  0F1C  0021               	movlb	1	; select bank1
  5485  0F1D  0826               	movf	(_countsum+2)^(0+128),w
  5486  0F1E  0020               	movlb	0	; select bank0
  5487  0F1F  00A2               	movwf	___lmul@multiplier+2
  5488  0F20  0021               	movlb	1	; select bank1
  5489  0F21  0825               	movf	(_countsum+1)^(0+128),w
  5490  0F22  0020               	movlb	0	; select bank0
  5491  0F23  00A1               	movwf	___lmul@multiplier+1
  5492  0F24  0021               	movlb	1	; select bank1
  5493  0F25  0824               	movf	_countsum^(0+128),w
  5494  0F26  0020               	movlb	0	; select bank0
  5495  0F27  00A0               	movwf	___lmul@multiplier
  5496  0F28  3000               	movlw	0
  5497  0F29  00A7               	movwf	___lmul@multiplicand+3
  5498  0F2A  305B               	movlw	91
  5499  0F2B  00A6               	movwf	___lmul@multiplicand+2
  5500  0F2C  308D               	movlw	141
  5501  0F2D  00A5               	movwf	___lmul@multiplicand+1
  5502  0F2E  3080               	movlw	128
  5503  0F2F  00A4               	movwf	___lmul@multiplicand
  5504  0F30  318E  26D8  318F   	fcall	___lmul
  5505  0F33  0020               	movlb	0	; select bank0
  5506  0F34  0823               	movf	?___lmul+3,w
  5507  0F35  00B3               	movwf	___lldiv@dividend+3
  5508  0F36  0822               	movf	?___lmul+2,w
  5509  0F37  00B2               	movwf	___lldiv@dividend+2
  5510  0F38  0821               	movf	?___lmul+1,w
  5511  0F39  00B1               	movwf	___lldiv@dividend+1
  5512  0F3A  0820               	movf	?___lmul,w
  5513  0F3B  00B0               	movwf	___lldiv@dividend
  5514  0F3C  3186  26B7         	fcall	___lldiv
  5515  0F3E  0020               	movlb	0	; select bank0
  5516  0F3F  082D               	movf	?___lldiv+1,w
  5517  0F40  00BB               	movwf	?_Timer1_GetCPM+1
  5518  0F41  082C               	movf	?___lldiv,w
  5519  0F42  00BA               	movwf	?_Timer1_GetCPM
  5520  0F43  0008               	return
  5521  0F44                     __end_of_Timer1_GetCPM:	
  5522                           
  5523                           	psect	text16
  5524  0ED8                     __ptext16:	
  5525 ;; *************** function ___lmul *****************
  5526 ;; Defined at:
  5527 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul32.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5530 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;  product         4    8[BANK0 ] unsigned long 
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  4    0[BANK0 ] unsigned long 
  5535 ;; Registers used:
  5536 ;;		wreg, status,2, status,0
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5542 ;;      Params:         0       8       0       0       0       0
  5543 ;;      Locals:         0       4       0       0       0       0
  5544 ;;      Temps:          0       0       0       0       0       0
  5545 ;;      Totals:         0      12       0       0       0       0
  5546 ;;Total ram usage:       12 bytes
  5547 ;; Hardware stack levels used:    1
  5548 ;; Hardware stack levels required when called:    3
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_Timer1_GetCPM
  5553 ;;		_xatoi
  5554 ;; This function uses a non-reentrant model
  5555 ;;
  5556                           
  5557                           
  5558                           ;psect for function ___lmul
  5559  0ED8                     ___lmul:	
  5560                           
  5561                           ;incstack = 0
  5562                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5563  0ED8  3000               	movlw	0
  5564  0ED9  0020               	movlb	0	; select bank0
  5565  0EDA  00AB               	movwf	___lmul@product+3
  5566  0EDB  3000               	movlw	0
  5567  0EDC  00AA               	movwf	___lmul@product+2
  5568  0EDD  3000               	movlw	0
  5569  0EDE  00A9               	movwf	___lmul@product+1
  5570  0EDF  3000               	movlw	0
  5571  0EE0  00A8               	movwf	___lmul@product
  5572  0EE1                     l4685:	
  5573  0EE1  1C20               	btfss	___lmul@multiplier,0
  5574  0EE2  2EEB               	goto	l4689
  5575  0EE3  0824               	movf	___lmul@multiplicand,w
  5576  0EE4  07A8               	addwf	___lmul@product,f
  5577  0EE5  0825               	movf	___lmul@multiplicand+1,w
  5578  0EE6  3DA9               	addwfc	___lmul@product+1,f
  5579  0EE7  0826               	movf	___lmul@multiplicand+2,w
  5580  0EE8  3DAA               	addwfc	___lmul@product+2,f
  5581  0EE9  0827               	movf	___lmul@multiplicand+3,w
  5582  0EEA  3DAB               	addwfc	___lmul@product+3,f
  5583  0EEB                     l4689:	
  5584  0EEB  3001               	movlw	1
  5585  0EEC                     u5185:	
  5586  0EEC  35A4               	lslf	___lmul@multiplicand,f
  5587  0EED  0DA5               	rlf	___lmul@multiplicand+1,f
  5588  0EEE  0DA6               	rlf	___lmul@multiplicand+2,f
  5589  0EEF  0DA7               	rlf	___lmul@multiplicand+3,f
  5590  0EF0  0B89               	decfsz	9,f
  5591  0EF1  2EEC               	goto	u5185
  5592  0EF2  3001               	movlw	1
  5593  0EF3                     u5195:	
  5594  0EF3  36A3               	lsrf	___lmul@multiplier+3,f
  5595  0EF4  0CA2               	rrf	___lmul@multiplier+2,f
  5596  0EF5  0CA1               	rrf	___lmul@multiplier+1,f
  5597  0EF6  0CA0               	rrf	___lmul@multiplier,f
  5598  0EF7  0B89               	decfsz	9,f
  5599  0EF8  2EF3               	goto	u5195
  5600  0EF9  0823               	movf	___lmul@multiplier+3,w
  5601  0EFA  0422               	iorwf	___lmul@multiplier+2,w
  5602  0EFB  0421               	iorwf	___lmul@multiplier+1,w
  5603  0EFC  0420               	iorwf	___lmul@multiplier,w
  5604  0EFD  1D03               	skipz
  5605  0EFE  2EE1               	goto	l4685
  5606  0EFF  082B               	movf	___lmul@product+3,w
  5607  0F00  00A3               	movwf	?___lmul+3
  5608  0F01  082A               	movf	___lmul@product+2,w
  5609  0F02  00A2               	movwf	?___lmul+2
  5610  0F03  0829               	movf	___lmul@product+1,w
  5611  0F04  00A1               	movwf	?___lmul+1
  5612  0F05  0828               	movf	___lmul@product,w
  5613  0F06  00A0               	movwf	?___lmul
  5614  0F07  0008               	return
  5615  0F08                     __end_of___lmul:	
  5616                           
  5617                           	psect	text17
  5618  06B7                     __ptext17:	
  5619 ;; *************** function ___lldiv *****************
  5620 ;; Defined at:
  5621 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  divisor         4   12[BANK0 ] unsigned long 
  5624 ;;  dividend        4   16[BANK0 ] unsigned long 
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;  quotient        4   21[BANK0 ] unsigned long 
  5627 ;;  counter         1   25[BANK0 ] unsigned char 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  4   12[BANK0 ] unsigned long 
  5630 ;; Registers used:
  5631 ;;		wreg, status,2, status,0
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5637 ;;      Params:         0       8       0       0       0       0
  5638 ;;      Locals:         0       5       0       0       0       0
  5639 ;;      Temps:          0       1       0       0       0       0
  5640 ;;      Totals:         0      14       0       0       0       0
  5641 ;;Total ram usage:       14 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    3
  5644 ;; This function calls:
  5645 ;;		Nothing
  5646 ;; This function is called by:
  5647 ;;		_Timer1_GetCPM
  5648 ;;		_xvprintf
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function ___lldiv
  5654  06B7                     ___lldiv:	
  5655                           
  5656                           ;incstack = 0
  5657                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5658  06B7  3000               	movlw	0
  5659  06B8  0020               	movlb	0	; select bank0
  5660  06B9  00B8               	movwf	___lldiv@quotient+3
  5661  06BA  3000               	movlw	0
  5662  06BB  00B7               	movwf	___lldiv@quotient+2
  5663  06BC  3000               	movlw	0
  5664  06BD  00B6               	movwf	___lldiv@quotient+1
  5665  06BE  3000               	movlw	0
  5666  06BF  00B5               	movwf	___lldiv@quotient
  5667  06C0  082F               	movf	___lldiv@divisor+3,w
  5668  06C1  042E               	iorwf	___lldiv@divisor+2,w
  5669  06C2  042D               	iorwf	___lldiv@divisor+1,w
  5670  06C3  042C               	iorwf	___lldiv@divisor,w
  5671  06C4  1903               	skipnz
  5672  06C5  2F01               	goto	l4459
  5673  06C6  01B9               	clrf	___lldiv@counter
  5674  06C7  0AB9               	incf	___lldiv@counter,f
  5675  06C8                     l4445:	
  5676  06C8  1BAF               	btfsc	___lldiv@divisor+3,7
  5677  06C9  2ED6               	goto	l4447
  5678  06CA  3001               	movlw	1
  5679  06CB                     u4765:	
  5680  06CB  35AC               	lslf	___lldiv@divisor,f
  5681  06CC  0DAD               	rlf	___lldiv@divisor+1,f
  5682  06CD  0DAE               	rlf	___lldiv@divisor+2,f
  5683  06CE  0DAF               	rlf	___lldiv@divisor+3,f
  5684  06CF  0B89               	decfsz	9,f
  5685  06D0  2ECB               	goto	u4765
  5686  06D1  3001               	movlw	1
  5687  06D2  00B4               	movwf	??___lldiv
  5688  06D3  0834               	movf	??___lldiv,w
  5689  06D4  07B9               	addwf	___lldiv@counter,f
  5690  06D5  2EC8               	goto	l4445
  5691  06D6                     l4447:	
  5692  06D6  3001               	movlw	1
  5693  06D7                     u4785:	
  5694  06D7  35B5               	lslf	___lldiv@quotient,f
  5695  06D8  0DB6               	rlf	___lldiv@quotient+1,f
  5696  06D9  0DB7               	rlf	___lldiv@quotient+2,f
  5697  06DA  0DB8               	rlf	___lldiv@quotient+3,f
  5698  06DB  0B89               	decfsz	9,f
  5699  06DC  2ED7               	goto	u4785
  5700  06DD  082F               	movf	___lldiv@divisor+3,w
  5701  06DE  0233               	subwf	___lldiv@dividend+3,w
  5702  06DF  1D03               	skipz
  5703  06E0  2EEB               	goto	u4795
  5704  06E1  082E               	movf	___lldiv@divisor+2,w
  5705  06E2  0232               	subwf	___lldiv@dividend+2,w
  5706  06E3  1D03               	skipz
  5707  06E4  2EEB               	goto	u4795
  5708  06E5  082D               	movf	___lldiv@divisor+1,w
  5709  06E6  0231               	subwf	___lldiv@dividend+1,w
  5710  06E7  1D03               	skipz
  5711  06E8  2EEB               	goto	u4795
  5712  06E9  082C               	movf	___lldiv@divisor,w
  5713  06EA  0230               	subwf	___lldiv@dividend,w
  5714  06EB                     u4795:	
  5715  06EB  1C03               	skipc
  5716  06EC  2EF6               	goto	l4455
  5717  06ED  082C               	movf	___lldiv@divisor,w
  5718  06EE  02B0               	subwf	___lldiv@dividend,f
  5719  06EF  082D               	movf	___lldiv@divisor+1,w
  5720  06F0  3BB1               	subwfb	___lldiv@dividend+1,f
  5721  06F1  082E               	movf	___lldiv@divisor+2,w
  5722  06F2  3BB2               	subwfb	___lldiv@dividend+2,f
  5723  06F3  082F               	movf	___lldiv@divisor+3,w
  5724  06F4  3BB3               	subwfb	___lldiv@dividend+3,f
  5725  06F5  1435               	bsf	___lldiv@quotient,0
  5726  06F6                     l4455:	
  5727  06F6  3001               	movlw	1
  5728  06F7                     u4805:	
  5729  06F7  36AF               	lsrf	___lldiv@divisor+3,f
  5730  06F8  0CAE               	rrf	___lldiv@divisor+2,f
  5731  06F9  0CAD               	rrf	___lldiv@divisor+1,f
  5732  06FA  0CAC               	rrf	___lldiv@divisor,f
  5733  06FB  0B89               	decfsz	9,f
  5734  06FC  2EF7               	goto	u4805
  5735  06FD  3001               	movlw	1
  5736  06FE  02B9               	subwf	___lldiv@counter,f
  5737  06FF  1D03               	btfss	3,2
  5738  0700  2ED6               	goto	l4447
  5739  0701                     l4459:	
  5740  0701  0838               	movf	___lldiv@quotient+3,w
  5741  0702  00AF               	movwf	?___lldiv+3
  5742  0703  0837               	movf	___lldiv@quotient+2,w
  5743  0704  00AE               	movwf	?___lldiv+2
  5744  0705  0836               	movf	___lldiv@quotient+1,w
  5745  0706  00AD               	movwf	?___lldiv+1
  5746  0707  0835               	movf	___lldiv@quotient,w
  5747  0708  00AC               	movwf	?___lldiv
  5748  0709  0008               	return
  5749  070A                     __end_of___lldiv:	
  5750                           
  5751                           	psect	text18
  5752  05A0                     __ptext18:	
  5753 ;; *************** function _LCD_Init *****************
  5754 ;; Defined at:
  5755 ;;		line 28 in file "LCD.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;		None
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      void 
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0, pclath, cstack
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5769 ;;      Params:         0       0       0       0       0       0
  5770 ;;      Locals:         0       0       0       0       0       0
  5771 ;;      Temps:          0       2       0       0       0       0
  5772 ;;      Totals:         0       2       0       0       0       0
  5773 ;;Total ram usage:        2 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    5
  5776 ;; This function calls:
  5777 ;;		_LCD_DisplayClear
  5778 ;;		_LCD_WriteData
  5779 ;; This function is called by:
  5780 ;;		_main
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           
  5785                           ;psect for function _LCD_Init
  5786  05A0                     _LCD_Init:	
  5787                           
  5788                           ;LCD.c: 30: LATA3 = 0;
  5789                           
  5790                           ;incstack = 0
  5791                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5792  05A0  0022               	movlb	2	; select bank2
  5793  05A1  118C               	bcf	12,3	;volatile
  5794                           
  5795                           ;LCD.c: 31: LATA4 = 0;
  5796  05A2  120C               	bcf	12,4	;volatile
  5797                           
  5798                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  5799  05A3  3002               	movlw	2
  5800  05A4  0020               	movlb	0	; select bank0
  5801  05A5  00A5               	movwf	??_LCD_Init+1
  5802  05A6  3038               	movlw	56
  5803  05A7  00A4               	movwf	??_LCD_Init
  5804  05A8  30AD               	movlw	173
  5805  05A9                     u6117:	
  5806  05A9  0B89               	decfsz	9,f
  5807  05AA  2DA9               	goto	u6117
  5808  05AB  0BA4               	decfsz	??_LCD_Init,f
  5809  05AC  2DA9               	goto	u6117
  5810  05AD  0BA5               	decfsz	??_LCD_Init+1,f
  5811  05AE  2DA9               	goto	u6117
  5812                           
  5813                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  5814  05AF  3003               	movlw	3
  5815  05B0  0020               	movlb	0	; select bank0
  5816  05B1  008D               	movwf	13	;volatile
  5817                           
  5818                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5819  05B2  0022               	movlb	2	; select bank2
  5820  05B3  160C               	bsf	12,4	;volatile
  5821  05B4  3200               	nop2	;2 cycle nop
  5822  05B5  3200               	nop2	;2 cycle nop
  5823  05B6  3200               	nop2	;2 cycle nop
  5824  05B7  3200               	nop2	;2 cycle nop
  5825  05B8  0022               	movlb	2	; select bank2
  5826  05B9  120C               	bcf	12,4	;volatile
  5827  05BA  3200               	nop2	;2 cycle nop
  5828  05BB  3200               	nop2	;2 cycle nop
  5829  05BC  3200               	nop2	;2 cycle nop
  5830  05BD  3200               	nop2	;2 cycle nop
  5831                           
  5832                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  5833  05BE  3034               	movlw	52
  5834  05BF  0020               	movlb	0	; select bank0
  5835  05C0  00A4               	movwf	??_LCD_Init
  5836  05C1  30F1               	movlw	241
  5837  05C2                     u6127:	
  5838  05C2  0B89               	decfsz	9,f
  5839  05C3  2DC2               	goto	u6127
  5840  05C4  0BA4               	decfsz	??_LCD_Init,f
  5841  05C5  2DC2               	goto	u6127
  5842  05C6  3200               	nop2
  5843                           
  5844                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5845  05C7  0022               	movlb	2	; select bank2
  5846  05C8  160C               	bsf	12,4	;volatile
  5847  05C9  3200               	nop2	;2 cycle nop
  5848  05CA  3200               	nop2	;2 cycle nop
  5849  05CB  3200               	nop2	;2 cycle nop
  5850  05CC  3200               	nop2	;2 cycle nop
  5851  05CD  0022               	movlb	2	; select bank2
  5852  05CE  120C               	bcf	12,4	;volatile
  5853  05CF  3200               	nop2	;2 cycle nop
  5854  05D0  3200               	nop2	;2 cycle nop
  5855  05D1  3200               	nop2	;2 cycle nop
  5856  05D2  3200               	nop2	;2 cycle nop
  5857                           
  5858                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5859  05D3  3005               	movlw	5
  5860  05D4  0020               	movlb	0	; select bank0
  5861  05D5  00A4               	movwf	??_LCD_Init
  5862  05D6  3026               	movlw	38
  5863  05D7                     u6137:	
  5864  05D7  0B89               	decfsz	9,f
  5865  05D8  2DD7               	goto	u6137
  5866  05D9  0BA4               	decfsz	??_LCD_Init,f
  5867  05DA  2DD7               	goto	u6137
  5868  05DB  0000               	nop
  5869                           
  5870                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5871  05DC  0022               	movlb	2	; select bank2
  5872  05DD  160C               	bsf	12,4	;volatile
  5873  05DE  3200               	nop2	;2 cycle nop
  5874  05DF  3200               	nop2	;2 cycle nop
  5875  05E0  3200               	nop2	;2 cycle nop
  5876  05E1  3200               	nop2	;2 cycle nop
  5877  05E2  0022               	movlb	2	; select bank2
  5878  05E3  120C               	bcf	12,4	;volatile
  5879  05E4  3200               	nop2	;2 cycle nop
  5880  05E5  3200               	nop2	;2 cycle nop
  5881  05E6  3200               	nop2	;2 cycle nop
  5882  05E7  3200               	nop2	;2 cycle nop
  5883                           
  5884                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5885  05E8  3005               	movlw	5
  5886  05E9  0020               	movlb	0	; select bank0
  5887  05EA  00A4               	movwf	??_LCD_Init
  5888  05EB  3026               	movlw	38
  5889  05EC                     u6147:	
  5890  05EC  0B89               	decfsz	9,f
  5891  05ED  2DEC               	goto	u6147
  5892  05EE  0BA4               	decfsz	??_LCD_Init,f
  5893  05EF  2DEC               	goto	u6147
  5894  05F0  0000               	nop
  5895                           
  5896                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  5897  05F1  3002               	movlw	2
  5898  05F2  0020               	movlb	0	; select bank0
  5899  05F3  008D               	movwf	13	;volatile
  5900                           
  5901                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5902  05F4  0022               	movlb	2	; select bank2
  5903  05F5  160C               	bsf	12,4	;volatile
  5904  05F6  3200               	nop2	;2 cycle nop
  5905  05F7  3200               	nop2	;2 cycle nop
  5906  05F8  3200               	nop2	;2 cycle nop
  5907  05F9  3200               	nop2	;2 cycle nop
  5908  05FA  0022               	movlb	2	; select bank2
  5909  05FB  120C               	bcf	12,4	;volatile
  5910  05FC  3200               	nop2	;2 cycle nop
  5911  05FD  3200               	nop2	;2 cycle nop
  5912  05FE  3200               	nop2	;2 cycle nop
  5913  05FF  3200               	nop2	;2 cycle nop
  5914                           
  5915                           ;LCD.c: 44: LCD_WriteData(0x28);
  5916  0600  3028               	movlw	40
  5917  0601  318F  2780  3185   	fcall	_LCD_WriteData
  5918                           
  5919                           ;LCD.c: 45: LCD_WriteData(0x0c);
  5920  0604  300C               	movlw	12
  5921  0605  318F  2780  3185   	fcall	_LCD_WriteData
  5922                           
  5923                           ;LCD.c: 46: LCD_DisplayClear();
  5924  0608  318C  24EF  3185   	fcall	_LCD_DisplayClear
  5925                           
  5926                           ;LCD.c: 47: LCD_WriteData(0x06);
  5927  060B  3006               	movlw	6
  5928  060C  318F  2780         	fcall	_LCD_WriteData
  5929  060E  0008               	return
  5930  060F                     __end_of_LCD_Init:	
  5931                           
  5932                           	psect	text19
  5933  0CEF                     __ptext19:	
  5934 ;; *************** function _LCD_DisplayClear *****************
  5935 ;; Defined at:
  5936 ;;		line 64 in file "LCD.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;		None
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;		None
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      void 
  5943 ;; Registers used:
  5944 ;;		wreg, status,2, status,0, pclath, cstack
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5950 ;;      Params:         0       0       0       0       0       0
  5951 ;;      Locals:         0       0       0       0       0       0
  5952 ;;      Temps:          0       1       0       0       0       0
  5953 ;;      Totals:         0       1       0       0       0       0
  5954 ;;Total ram usage:        1 bytes
  5955 ;; Hardware stack levels used:    1
  5956 ;; Hardware stack levels required when called:    4
  5957 ;; This function calls:
  5958 ;;		_LCD_WriteData
  5959 ;; This function is called by:
  5960 ;;		_LCD_Init
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           
  5965                           ;psect for function _LCD_DisplayClear
  5966  0CEF                     _LCD_DisplayClear:	
  5967                           
  5968                           ;LCD.c: 66: LATA3 = 0;
  5969                           
  5970                           ;incstack = 0
  5971                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  5972  0CEF  0022               	movlb	2	; select bank2
  5973  0CF0  118C               	bcf	12,3	;volatile
  5974                           
  5975                           ;LCD.c: 67: LCD_WriteData(0x01);
  5976  0CF1  3001               	movlw	1
  5977  0CF2  318F  2780  318C   	fcall	_LCD_WriteData
  5978                           
  5979                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  5980  0CF5  3015               	movlw	21
  5981  0CF6  0020               	movlb	0	; select bank0
  5982  0CF7  00A3               	movwf	??_LCD_DisplayClear
  5983  0CF8  30C6               	movlw	198
  5984  0CF9                     u6157:	
  5985  0CF9  0B89               	decfsz	9,f
  5986  0CFA  2CF9               	goto	u6157
  5987  0CFB  0BA3               	decfsz	??_LCD_DisplayClear,f
  5988  0CFC  2CF9               	goto	u6157
  5989  0CFD  0000               	nop
  5990  0CFE  0008               	return
  5991  0CFF                     __end_of_LCD_DisplayClear:	
  5992                           
  5993                           	psect	text20
  5994  0CDF                     __ptext20:	
  5995 ;; *************** function _LCD_CursorHome *****************
  5996 ;; Defined at:
  5997 ;;		line 75 in file "LCD.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;		None
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;		None
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  1    wreg      void 
  6004 ;; Registers used:
  6005 ;;		wreg, status,2, status,0, pclath, cstack
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6011 ;;      Params:         0       0       0       0       0       0
  6012 ;;      Locals:         0       0       0       0       0       0
  6013 ;;      Temps:          0       1       0       0       0       0
  6014 ;;      Totals:         0       1       0       0       0       0
  6015 ;;Total ram usage:        1 bytes
  6016 ;; Hardware stack levels used:    1
  6017 ;; Hardware stack levels required when called:    4
  6018 ;; This function calls:
  6019 ;;		_LCD_WriteData
  6020 ;; This function is called by:
  6021 ;;		_main
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           
  6026                           ;psect for function _LCD_CursorHome
  6027  0CDF                     _LCD_CursorHome:	
  6028                           
  6029                           ;LCD.c: 77: LATA3 = 0;
  6030                           
  6031                           ;incstack = 0
  6032                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  6033  0CDF  0022               	movlb	2	; select bank2
  6034  0CE0  118C               	bcf	12,3	;volatile
  6035                           
  6036                           ;LCD.c: 78: LCD_WriteData(0x02);
  6037  0CE1  3002               	movlw	2
  6038  0CE2  318F  2780  318C   	fcall	_LCD_WriteData
  6039                           
  6040                           ;LCD.c: 79: _delay((unsigned long)((2)*(32000000/4000.0)));
  6041  0CE5  3015               	movlw	21
  6042  0CE6  0020               	movlb	0	; select bank0
  6043  0CE7  00A3               	movwf	??_LCD_CursorHome
  6044  0CE8  30C6               	movlw	198
  6045  0CE9                     u6167:	
  6046  0CE9  0B89               	decfsz	9,f
  6047  0CEA  2CE9               	goto	u6167
  6048  0CEB  0BA3               	decfsz	??_LCD_CursorHome,f
  6049  0CEC  2CE9               	goto	u6167
  6050  0CED  0000               	nop
  6051  0CEE  0008               	return
  6052  0CEF                     __end_of_LCD_CursorHome:	
  6053                           
  6054                           	psect	text21
  6055  0F80                     __ptext21:	
  6056 ;; *************** function _LCD_WriteData *****************
  6057 ;; Defined at:
  6058 ;;		line 15 in file "LCD.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  point           1    wreg     char 
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  point           1    2[BANK0 ] char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      void 
  6065 ;; Registers used:
  6066 ;;		wreg, status,2, status,0
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6072 ;;      Params:         0       0       0       0       0       0
  6073 ;;      Locals:         0       1       0       0       0       0
  6074 ;;      Temps:          0       2       0       0       0       0
  6075 ;;      Totals:         0       3       0       0       0       0
  6076 ;;Total ram usage:        3 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    3
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_LCD_Init
  6083 ;;		_LCD_Put
  6084 ;;		_LCD_DisplayClear
  6085 ;;		_LCD_CursorHome
  6086 ;;		_LCD_CursorPosition
  6087 ;;		_LCD_CursorShift
  6088 ;;		_LCD_DispShift
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           
  6093                           ;psect for function _LCD_WriteData
  6094  0F80                     _LCD_WriteData:	
  6095                           
  6096                           ;incstack = 0
  6097                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  6098                           ;LCD_WriteData@point stored from wreg
  6099  0F80  0020               	movlb	0	; select bank0
  6100  0F81  00A2               	movwf	LCD_WriteData@point
  6101                           
  6102                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  6103  0F82  30D5               	movlw	213
  6104  0F83                     u6177:	
  6105  0F83  0B89               	decfsz	9,f
  6106  0F84  2F83               	goto	u6177
  6107  0F85  0000               	nop
  6108                           
  6109                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  6110  0F86  0020               	movlb	0	; select bank0
  6111  0F87  0822               	movf	LCD_WriteData@point,w
  6112  0F88  00A0               	movwf	??_LCD_WriteData
  6113  0F89  3004               	movlw	4
  6114  0F8A                     u4385:	
  6115  0F8A  1003               	clrc
  6116  0F8B  1BA0               	btfsc	??_LCD_WriteData,7
  6117  0F8C  1403               	setc
  6118  0F8D  0CA0               	rrf	??_LCD_WriteData,f
  6119  0F8E  0B89               	decfsz	9,f
  6120  0F8F  2F8A               	goto	u4385
  6121  0F90  3003               	movlw	3
  6122  0F91  0520               	andwf	??_LCD_WriteData,w
  6123  0F92  00A1               	movwf	??_LCD_WriteData+1
  6124  0F93  0E22               	swapf	LCD_WriteData@point,w
  6125  0F94  390F               	andlw	15
  6126  0F95  1989               	btfsc	9,3
  6127  0F96  38F0               	iorlw	240
  6128  0F97  390C               	andlw	12
  6129  0F98  0709               	addwf	9,w
  6130  0F99  0421               	iorwf	??_LCD_WriteData+1,w
  6131  0F9A  008D               	movwf	13	;volatile
  6132                           
  6133                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  6134  0F9B  0022               	movlb	2	; select bank2
  6135  0F9C  160C               	bsf	12,4	;volatile
  6136  0F9D  3200               	nop2	;2 cycle nop
  6137  0F9E  3200               	nop2	;2 cycle nop
  6138  0F9F  3200               	nop2	;2 cycle nop
  6139  0FA0  3200               	nop2	;2 cycle nop
  6140  0FA1  0022               	movlb	2	; select bank2
  6141  0FA2  120C               	bcf	12,4	;volatile
  6142  0FA3  3200               	nop2	;2 cycle nop
  6143  0FA4  3200               	nop2	;2 cycle nop
  6144  0FA5  3200               	nop2	;2 cycle nop
  6145  0FA6  3200               	nop2	;2 cycle nop
  6146                           
  6147                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  6148  0FA7  3003               	movlw	3
  6149  0FA8  0020               	movlb	0	; select bank0
  6150  0FA9  0522               	andwf	LCD_WriteData@point,w
  6151  0FAA  00A0               	movwf	??_LCD_WriteData
  6152  0FAB  0822               	movf	LCD_WriteData@point,w
  6153  0FAC  390C               	andlw	12
  6154  0FAD  0709               	addwf	9,w
  6155  0FAE  0420               	iorwf	??_LCD_WriteData,w
  6156  0FAF  008D               	movwf	13	;volatile
  6157                           
  6158                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  6159  0FB0  0022               	movlb	2	; select bank2
  6160  0FB1  160C               	bsf	12,4	;volatile
  6161  0FB2  3200               	nop2	;2 cycle nop
  6162  0FB3  3200               	nop2	;2 cycle nop
  6163  0FB4  3200               	nop2	;2 cycle nop
  6164  0FB5  3200               	nop2	;2 cycle nop
  6165  0FB6  0022               	movlb	2	; select bank2
  6166  0FB7  120C               	bcf	12,4	;volatile
  6167  0FB8  3200               	nop2	;2 cycle nop
  6168  0FB9  3200               	nop2	;2 cycle nop
  6169  0FBA  3200               	nop2	;2 cycle nop
  6170  0FBB  3200               	nop2	;2 cycle nop
  6171  0FBC  0008               	return
  6172  0FBD                     __end_of_LCD_WriteData:	
  6173                           
  6174                           	psect	text22
  6175  0E12                     __ptext22:	
  6176 ;; *************** function _DAC_Initialize *****************
  6177 ;; Defined at:
  6178 ;;		line 14 in file "MCP4726.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      void 
  6185 ;; Registers used:
  6186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6192 ;;      Params:         0       0       0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0       0
  6194 ;;      Temps:          0       2       0       0       0       0
  6195 ;;      Totals:         0       2       0       0       0       0
  6196 ;;Total ram usage:        2 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    6
  6199 ;; This function calls:
  6200 ;;		_I2C_Init
  6201 ;;		_I2C_Transmit
  6202 ;; This function is called by:
  6203 ;;		_main
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           
  6208                           ;psect for function _DAC_Initialize
  6209  0E12                     _DAC_Initialize:	
  6210                           
  6211                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  6212                           
  6213                           ;incstack = 0
  6214                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6215  0E12  0020               	movlb	0	; select bank0
  6216  0E13  01A5               	clrf	I2C_Init@address
  6217  0E14  01A6               	clrf	I2C_Init@mode
  6218  0E15  01A7               	clrf	I2C_Init@Speed
  6219  0E16  3001               	movlw	1
  6220  0E17  3187  27D6  318E   	fcall	_I2C_Init
  6221                           
  6222                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  6223  0E1A  087A               	movf	_ConfigReg,w
  6224  0E1B  391F               	andlw	-225
  6225  0E1C  3880               	iorlw	128
  6226  0E1D  00FA               	movwf	_ConfigReg
  6227                           
  6228                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  6229  0E1E  107A               	bcf	_ConfigReg,0
  6230                           
  6231                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  6232  0E1F  30F9               	movlw	-7
  6233  0E20  05FA               	andwf	_ConfigReg,f
  6234                           
  6235                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  6236  0E21  30E7               	movlw	-25
  6237  0E22  05FA               	andwf	_ConfigReg,f
  6238                           
  6239                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  6240  0E23  3060               	movlw	96
  6241  0E24  0020               	movlb	0	; select bank0
  6242  0E25  00B0               	movwf	??_DAC_Initialize
  6243  0E26  0830               	movf	??_DAC_Initialize,w
  6244  0E27  00A8               	movwf	I2C_Transmit@address
  6245  0E28  307A               	movlw	(low (_ConfigReg| 0))& (0+255)
  6246  0E29  00B1               	movwf	??_DAC_Initialize+1
  6247  0E2A  0831               	movf	??_DAC_Initialize+1,w
  6248  0E2B  00A9               	movwf	I2C_Transmit@pData
  6249  0E2C  01AA               	clrf	I2C_Transmit@size
  6250  0E2D  0AAA               	incf	I2C_Transmit@size,f
  6251  0E2E  3001               	movlw	1
  6252  0E2F  318E  267F         	fcall	_I2C_Transmit
  6253  0E31  0008               	return
  6254  0E32                     __end_of_DAC_Initialize:	
  6255                           
  6256                           	psect	text23
  6257  0E7F                     __ptext23:	
  6258 ;; *************** function _I2C_Transmit *****************
  6259 ;; Defined at:
  6260 ;;		line 23 in file "I2C_Common.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;  I2Cx            1    wreg     enum E3144
  6263 ;;  address         1    8[BANK0 ] unsigned char 
  6264 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  6265 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6266 ;;  size            1   10[BANK0 ] unsigned char 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  I2Cx            1   14[BANK0 ] enum E3144
  6269 ;;  result          1   15[BANK0 ] char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      char 
  6272 ;; Registers used:
  6273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6279 ;;      Params:         0       3       0       0       0       0
  6280 ;;      Locals:         0       2       0       0       0       0
  6281 ;;      Temps:          0       3       0       0       0       0
  6282 ;;      Totals:         0       8       0       0       0       0
  6283 ;;Total ram usage:        8 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    4
  6286 ;; This function calls:
  6287 ;;		_I2C1_Transmit
  6288 ;;		_I2C2_Transmit
  6289 ;; This function is called by:
  6290 ;;		_DAC_Initialize
  6291 ;;		_DAC_WriteVoltage
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           
  6296                           ;psect for function _I2C_Transmit
  6297  0E7F                     _I2C_Transmit:	
  6298                           
  6299                           ;incstack = 0
  6300                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6301                           ;I2C_Transmit@I2Cx stored from wreg
  6302  0E7F  0020               	movlb	0	; select bank0
  6303  0E80  00AE               	movwf	I2C_Transmit@I2Cx
  6304                           
  6305                           ;I2C_Common.c: 25: int8_t result;
  6306                           ;I2C_Common.c: 27: switch(I2Cx)
  6307  0E81  2EA0               	goto	l4505
  6308  0E82                     l4499:	
  6309                           ;I2C_Common.c: 28: {
  6310                           ;I2C_Common.c: 29: case I2C1_MODULE:
  6311                           
  6312                           
  6313                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  6314  0E82  0829               	movf	I2C_Transmit@pData,w
  6315  0E83  00AB               	movwf	??_I2C_Transmit
  6316  0E84  082B               	movf	??_I2C_Transmit,w
  6317  0E85  00A0               	movwf	I2C1_Transmit@pData
  6318  0E86  082A               	movf	I2C_Transmit@size,w
  6319  0E87  00AC               	movwf	??_I2C_Transmit+1
  6320  0E88  082C               	movf	??_I2C_Transmit+1,w
  6321  0E89  00A1               	movwf	I2C1_Transmit@size
  6322  0E8A  0828               	movf	I2C_Transmit@address,w
  6323  0E8B  3184  2489  318E   	fcall	_I2C1_Transmit
  6324  0E8E  2E9B               	goto	L7
  6325  0E8F                     l4501:	
  6326                           ;I2C_Common.c: 33: case I2C2_MODULE:
  6327                           
  6328                           ;I2C_Common.c: 31: break;
  6329                           
  6330                           
  6331                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  6332  0E8F  0829               	movf	I2C_Transmit@pData,w
  6333  0E90  00AB               	movwf	??_I2C_Transmit
  6334  0E91  082B               	movf	??_I2C_Transmit,w
  6335  0E92  00A0               	movwf	I2C2_Transmit@pData
  6336  0E93  082A               	movf	I2C_Transmit@size,w
  6337  0E94  00AC               	movwf	??_I2C_Transmit+1
  6338  0E95  082C               	movf	??_I2C_Transmit+1,w
  6339  0E96  00A1               	movwf	I2C2_Transmit@size
  6340  0E97  0828               	movf	I2C_Transmit@address,w
  6341  0E98  3183  23F1  318E   	fcall	_I2C2_Transmit
  6342  0E9B                     L7:	
  6343  0E9B  0020               	movlb	0	; select bank0
  6344  0E9C  00AD               	movwf	??_I2C_Transmit+2
  6345  0E9D  082D               	movf	??_I2C_Transmit+2,w
  6346  0E9E  00AF               	movwf	I2C_Transmit@result
  6347                           
  6348                           ;I2C_Common.c: 36: }
  6349                           
  6350                           ;I2C_Common.c: 35: break;
  6351  0E9F  2EA8               	goto	l4507
  6352  0EA0                     l4505:	
  6353  0EA0  082E               	movf	I2C_Transmit@I2Cx,w
  6354                           
  6355                           ; Switch size 1, requested type "space"
  6356                           ; Number of cases is 2, Range of values is 0 to 1
  6357                           ; switch strategies available:
  6358                           ; Name         Instructions Cycles
  6359                           ; simple_byte            7     4 (average)
  6360                           ; direct_byte           10     6 (fixed)
  6361                           ; jumptable            260     6 (fixed)
  6362                           ;	Chosen strategy is simple_byte
  6363  0EA1  3A00               	xorlw	0	; case 0
  6364  0EA2  1903               	skipnz
  6365  0EA3  2E82               	goto	l4499
  6366  0EA4  3A01               	xorlw	1	; case 1
  6367  0EA5  1903               	skipnz
  6368  0EA6  2E8F               	goto	l4501
  6369  0EA7  2EA8               	goto	l4507
  6370  0EA8                     l4507:	
  6371                           
  6372                           ;I2C_Common.c: 37: return result;
  6373  0EA8  082F               	movf	I2C_Transmit@result,w
  6374  0EA9  0008               	return
  6375  0EAA                     __end_of_I2C_Transmit:	
  6376                           
  6377                           	psect	text24
  6378  03F1                     __ptext24:	
  6379 ;; *************** function _I2C2_Transmit *****************
  6380 ;; Defined at:
  6381 ;;		line 52 in file "I2C2.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  address         1    wreg     unsigned char 
  6384 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  6385 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6386 ;;  size            1    1[BANK0 ] unsigned char 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  address         1    4[BANK0 ] unsigned char 
  6389 ;;  i               1    6[BANK0 ] unsigned char 
  6390 ;;  i               1    5[BANK0 ] unsigned char 
  6391 ;;  result          1    7[BANK0 ] char 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      char 
  6394 ;; Registers used:
  6395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6401 ;;      Params:         0       2       0       0       0       0
  6402 ;;      Locals:         0       4       0       0       0       0
  6403 ;;      Temps:          0       2       0       0       0       0
  6404 ;;      Totals:         0       8       0       0       0       0
  6405 ;;Total ram usage:        8 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    3
  6408 ;; This function calls:
  6409 ;;		Nothing
  6410 ;; This function is called by:
  6411 ;;		_I2C_Transmit
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           
  6416                           ;psect for function _I2C2_Transmit
  6417  03F1                     _I2C2_Transmit:	
  6418                           
  6419                           ;incstack = 0
  6420                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  6421                           ;I2C2_Transmit@address stored from wreg
  6422  03F1  0020               	movlb	0	; select bank0
  6423  03F2  00A4               	movwf	I2C2_Transmit@address
  6424                           
  6425                           ;I2C2.c: 54: int8_t result = 0;
  6426  03F3  01A7               	clrf	I2C2_Transmit@result
  6427                           
  6428                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  6429  03F4  2C7D               	goto	l4411
  6430  03F5                     l4367:	
  6431                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6432                           
  6433                           ;I2C2.c: 57: {
  6434                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  6435                           
  6436  03F5  3005               	movlw	5
  6437  03F6  0024               	movlb	4	; select bank4
  6438  03F7  051C               	andwf	28,w	;volatile
  6439  03F8  0020               	movlb	0	; select bank0
  6440  03F9  00A2               	movwf	??_I2C2_Transmit
  6441  03FA  0024               	movlb	4	; select bank4
  6442  03FB  081E               	movf	30,w	;volatile
  6443  03FC  391F               	andlw	31
  6444  03FD  0020               	movlb	0	; select bank0
  6445  03FE  0422               	iorwf	??_I2C2_Transmit,w
  6446  03FF  1D03               	btfss	3,2
  6447  0400  2BF5               	goto	l4367
  6448                           
  6449                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  6450  0401  0024               	movlb	4	; select bank4
  6451  0402  141E               	bsf	30,0	;volatile
  6452  0403                     l4369:	
  6453                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6454                           
  6455  0403  3005               	movlw	5
  6456  0404  0024               	movlb	4	; select bank4
  6457  0405  051C               	andwf	28,w	;volatile
  6458  0406  0020               	movlb	0	; select bank0
  6459  0407  00A2               	movwf	??_I2C2_Transmit
  6460  0408  0024               	movlb	4	; select bank4
  6461  0409  081E               	movf	30,w	;volatile
  6462  040A  391F               	andlw	31
  6463  040B  0020               	movlb	0	; select bank0
  6464  040C  0422               	iorwf	??_I2C2_Transmit,w
  6465  040D  1D03               	btfss	3,2
  6466  040E  2C03               	goto	l4369
  6467                           
  6468                           ;I2C2.c: 63: SSP2BUF = address << 1;
  6469  040F  3524               	lslf	I2C2_Transmit@address,w
  6470  0410  0024               	movlb	4	; select bank4
  6471  0411  0099               	movwf	25	;volatile
  6472  0412                     l228:	
  6473                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  6474                           
  6475  0412  191C               	btfsc	28,2	;volatile
  6476  0413  2C12               	goto	l228
  6477                           
  6478                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  6479  0414  3000               	movlw	0
  6480  0415  1B1E               	btfsc	30,6	;volatile
  6481  0416  3001               	movlw	1
  6482  0417  0020               	movlb	0	; select bank0
  6483  0418  00A7               	movwf	I2C2_Transmit@result
  6484                           
  6485                           ;I2C2.c: 67: if (!result)
  6486  0419  0827               	movf	I2C2_Transmit@result,w
  6487  041A  1D03               	btfss	3,2
  6488  041B  2C49               	goto	l4393
  6489                           
  6490                           ;I2C2.c: 68: {
  6491                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  6492  041C  01A5               	clrf	I2C2_Transmit@i
  6493  041D  2C22               	goto	l4391
  6494  041E                     l4389:	
  6495                           ;I2C2.c: 79: break;
  6496                           
  6497  041E  3001               	movlw	1
  6498  041F  00A2               	movwf	??_I2C2_Transmit
  6499  0420  0822               	movf	??_I2C2_Transmit,w
  6500  0421  07A5               	addwf	I2C2_Transmit@i,f
  6501  0422                     l4391:	
  6502  0422  0821               	movf	I2C2_Transmit@size,w
  6503  0423  0225               	subwf	I2C2_Transmit@i,w
  6504  0424  1803               	btfsc	3,0
  6505  0425  2C49               	goto	l4393
  6506  0426                     l4379:	
  6507                           ;I2C2.c: 70: {
  6508                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6509                           
  6510  0426  3005               	movlw	5
  6511  0427  0024               	movlb	4	; select bank4
  6512  0428  051C               	andwf	28,w	;volatile
  6513  0429  0020               	movlb	0	; select bank0
  6514  042A  00A2               	movwf	??_I2C2_Transmit
  6515  042B  0024               	movlb	4	; select bank4
  6516  042C  081E               	movf	30,w	;volatile
  6517  042D  391F               	andlw	31
  6518  042E  0020               	movlb	0	; select bank0
  6519  042F  0422               	iorwf	??_I2C2_Transmit,w
  6520  0430  1D03               	btfss	3,2
  6521  0431  2C26               	goto	l4379
  6522                           
  6523                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  6524  0432  0825               	movf	I2C2_Transmit@i,w
  6525  0433  0720               	addwf	I2C2_Transmit@pData,w
  6526  0434  00A2               	movwf	??_I2C2_Transmit
  6527  0435  0822               	movf	??_I2C2_Transmit,w
  6528  0436  0086               	movwf	6
  6529  0437  0187               	clrf	7
  6530  0438  0801               	movf	1,w
  6531  0439  0024               	movlb	4	; select bank4
  6532  043A  0099               	movwf	25	;volatile
  6533  043B                     l237:	
  6534                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  6535                           
  6536  043B  191C               	btfsc	28,2	;volatile
  6537  043C  2C3B               	goto	l237
  6538                           
  6539                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  6540  043D  3000               	movlw	0
  6541  043E  1B1E               	btfsc	30,6	;volatile
  6542  043F  3001               	movlw	1
  6543  0440  0020               	movlb	0	; select bank0
  6544  0441  00A7               	movwf	I2C2_Transmit@result
  6545                           
  6546                           ;I2C2.c: 76: if (result)
  6547  0442  0827               	movf	I2C2_Transmit@result,w
  6548  0443  1903               	btfsc	3,2
  6549  0444  2C1E               	goto	l4389
  6550                           
  6551                           ;I2C2.c: 77: {
  6552                           ;I2C2.c: 78: result = 2;
  6553  0445  3002               	movlw	2
  6554  0446  00A2               	movwf	??_I2C2_Transmit
  6555  0447  0822               	movf	??_I2C2_Transmit,w
  6556  0448  00A7               	movwf	I2C2_Transmit@result
  6557  0449                     l4393:	
  6558                           ;I2C2.c: 80: }
  6559                           ;I2C2.c: 81: }
  6560                           ;I2C2.c: 82: }
  6561                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6562                           
  6563  0449  3005               	movlw	5
  6564  044A  0024               	movlb	4	; select bank4
  6565  044B  051C               	andwf	28,w	;volatile
  6566  044C  0020               	movlb	0	; select bank0
  6567  044D  00A2               	movwf	??_I2C2_Transmit
  6568  044E  0024               	movlb	4	; select bank4
  6569  044F  081E               	movf	30,w	;volatile
  6570  0450  391F               	andlw	31
  6571  0451  0020               	movlb	0	; select bank0
  6572  0452  0422               	iorwf	??_I2C2_Transmit,w
  6573  0453  1D03               	btfss	3,2
  6574  0454  2C49               	goto	l4393
  6575                           
  6576                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  6577  0455  0024               	movlb	4	; select bank4
  6578  0456  151E               	bsf	30,2	;volatile
  6579                           
  6580                           ;I2C2.c: 86: break;
  6581  0457  2C86               	goto	l4413
  6582  0458                     l246:	
  6583                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  6584                           
  6585                           
  6586                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  6587  0458  0024               	movlb	4	; select bank4
  6588  0459  1D9C               	btfss	28,3	;volatile
  6589  045A  1E1C               	btfss	28,4	;volatile
  6590  045B  2C7A               	goto	l4407
  6591                           
  6592                           ;I2C2.c: 90: {
  6593                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  6594  045C  0020               	movlb	0	; select bank0
  6595  045D  01A6               	clrf	I2C2_Transmit@i_316
  6596  045E                     l4403:	
  6597  045E  0821               	movf	I2C2_Transmit@size,w
  6598  045F  0226               	subwf	I2C2_Transmit@i_316,w
  6599  0460  1803               	btfsc	3,0
  6600  0461  2C75               	goto	l4405
  6601                           
  6602                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  6603  0462  0826               	movf	I2C2_Transmit@i_316,w
  6604  0463  0720               	addwf	I2C2_Transmit@pData,w
  6605  0464  00A2               	movwf	??_I2C2_Transmit
  6606  0465  0822               	movf	??_I2C2_Transmit,w
  6607  0466  0086               	movwf	6
  6608  0467  0187               	clrf	7
  6609  0468  0801               	movf	1,w
  6610  0469  00A3               	movwf	??_I2C2_Transmit+1
  6611  046A  0826               	movf	I2C2_Transmit@i_316,w
  6612  046B  3EBC               	addlw	(low (_I2C2_Config| 0))& (0+255)
  6613  046C  0086               	movwf	6
  6614  046D  0187               	clrf	7
  6615  046E  0823               	movf	??_I2C2_Transmit+1,w
  6616  046F  0081               	movwf	1
  6617  0470  3001               	movlw	1
  6618  0471  00A2               	movwf	??_I2C2_Transmit
  6619  0472  0822               	movf	??_I2C2_Transmit,w
  6620  0473  07A6               	addwf	I2C2_Transmit@i_316,f
  6621  0474  2C5E               	goto	l4403
  6622  0475                     l4405:	
  6623                           
  6624                           ;I2C2.c: 93: result = size;
  6625  0475  0821               	movf	I2C2_Transmit@size,w
  6626  0476  00A2               	movwf	??_I2C2_Transmit
  6627  0477  0822               	movf	??_I2C2_Transmit,w
  6628  0478  00A7               	movwf	I2C2_Transmit@result
  6629                           
  6630                           ;I2C2.c: 94: }
  6631  0479  2C86               	goto	l4413
  6632  047A                     l4407:	
  6633                           
  6634                           ;I2C2.c: 95: else
  6635                           ;I2C2.c: 96: result = 0;
  6636  047A  0020               	movlb	0	; select bank0
  6637  047B  01A7               	clrf	I2C2_Transmit@result
  6638                           
  6639                           ;I2C2.c: 98: }
  6640                           
  6641                           ;I2C2.c: 97: break;
  6642  047C  2C86               	goto	l4413
  6643  047D                     l4411:	
  6644  047D  0021               	movlb	1	; select bank1
  6645  047E  084E               	movf	(_I2C2_Config^(0+128)+18),w
  6646                           
  6647                           ; Switch size 1, requested type "space"
  6648                           ; Number of cases is 2, Range of values is 0 to 1
  6649                           ; switch strategies available:
  6650                           ; Name         Instructions Cycles
  6651                           ; simple_byte            7     4 (average)
  6652                           ; direct_byte           10     6 (fixed)
  6653                           ; jumptable            260     6 (fixed)
  6654                           ;	Chosen strategy is simple_byte
  6655  047F  3A00               	xorlw	0	; case 0
  6656  0480  1903               	skipnz
  6657  0481  2BF5               	goto	l4367
  6658  0482  3A01               	xorlw	1	; case 1
  6659  0483  1903               	skipnz
  6660  0484  2C58               	goto	l246
  6661  0485  2C86               	goto	l4413
  6662  0486                     l4413:	
  6663                           
  6664                           ;I2C2.c: 100: return result;
  6665  0486  0020               	movlb	0	; select bank0
  6666  0487  0827               	movf	I2C2_Transmit@result,w
  6667  0488  0008               	return
  6668  0489                     __end_of_I2C2_Transmit:	
  6669                           
  6670                           	psect	text25
  6671  0489                     __ptext25:	
  6672 ;; *************** function _I2C1_Transmit *****************
  6673 ;; Defined at:
  6674 ;;		line 52 in file "I2C1.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  address         1    wreg     unsigned char 
  6677 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  6678 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6679 ;;  size            1    1[BANK0 ] unsigned char 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  address         1    4[BANK0 ] unsigned char 
  6682 ;;  i               1    6[BANK0 ] unsigned char 
  6683 ;;  i               1    5[BANK0 ] unsigned char 
  6684 ;;  result          1    7[BANK0 ] char 
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  1    wreg      char 
  6687 ;; Registers used:
  6688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6694 ;;      Params:         0       2       0       0       0       0
  6695 ;;      Locals:         0       4       0       0       0       0
  6696 ;;      Temps:          0       2       0       0       0       0
  6697 ;;      Totals:         0       8       0       0       0       0
  6698 ;;Total ram usage:        8 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:    3
  6701 ;; This function calls:
  6702 ;;		Nothing
  6703 ;; This function is called by:
  6704 ;;		_I2C_Transmit
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           
  6709                           ;psect for function _I2C1_Transmit
  6710  0489                     _I2C1_Transmit:	
  6711                           
  6712                           ;incstack = 0
  6713                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  6714                           ;I2C1_Transmit@address stored from wreg
  6715  0489  0020               	movlb	0	; select bank0
  6716  048A  00A4               	movwf	I2C1_Transmit@address
  6717                           
  6718                           ;I2C1.c: 54: int8_t result;
  6719                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  6720  048B  2D14               	goto	l4325
  6721  048C                     l4281:	
  6722                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6723                           
  6724                           ;I2C1.c: 57: {
  6725                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  6726                           
  6727  048C  3005               	movlw	5
  6728  048D  0024               	movlb	4	; select bank4
  6729  048E  0514               	andwf	20,w	;volatile
  6730  048F  0020               	movlb	0	; select bank0
  6731  0490  00A2               	movwf	??_I2C1_Transmit
  6732  0491  0024               	movlb	4	; select bank4
  6733  0492  0816               	movf	22,w	;volatile
  6734  0493  391F               	andlw	31
  6735  0494  0020               	movlb	0	; select bank0
  6736  0495  0422               	iorwf	??_I2C1_Transmit,w
  6737  0496  1D03               	btfss	3,2
  6738  0497  2C8C               	goto	l4281
  6739                           
  6740                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  6741  0498  0024               	movlb	4	; select bank4
  6742  0499  1416               	bsf	22,0	;volatile
  6743  049A                     l4283:	
  6744                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6745                           
  6746  049A  3005               	movlw	5
  6747  049B  0024               	movlb	4	; select bank4
  6748  049C  0514               	andwf	20,w	;volatile
  6749  049D  0020               	movlb	0	; select bank0
  6750  049E  00A2               	movwf	??_I2C1_Transmit
  6751  049F  0024               	movlb	4	; select bank4
  6752  04A0  0816               	movf	22,w	;volatile
  6753  04A1  391F               	andlw	31
  6754  04A2  0020               	movlb	0	; select bank0
  6755  04A3  0422               	iorwf	??_I2C1_Transmit,w
  6756  04A4  1D03               	btfss	3,2
  6757  04A5  2C9A               	goto	l4283
  6758                           
  6759                           ;I2C1.c: 63: SSP1BUF = address << 1;
  6760  04A6  3524               	lslf	I2C1_Transmit@address,w
  6761  04A7  0024               	movlb	4	; select bank4
  6762  04A8  0091               	movwf	17	;volatile
  6763  04A9                     l91:	
  6764                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  6765                           
  6766  04A9  1914               	btfsc	20,2	;volatile
  6767  04AA  2CA9               	goto	l91
  6768                           
  6769                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  6770  04AB  3000               	movlw	0
  6771  04AC  1B16               	btfsc	22,6	;volatile
  6772  04AD  3001               	movlw	1
  6773  04AE  0020               	movlb	0	; select bank0
  6774  04AF  00A7               	movwf	I2C1_Transmit@result
  6775                           
  6776                           ;I2C1.c: 67: if (!result)
  6777  04B0  0827               	movf	I2C1_Transmit@result,w
  6778  04B1  1D03               	btfss	3,2
  6779  04B2  2CE0               	goto	l4307
  6780                           
  6781                           ;I2C1.c: 68: {
  6782                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  6783  04B3  01A5               	clrf	I2C1_Transmit@i
  6784  04B4  2CB9               	goto	l4305
  6785  04B5                     l4303:	
  6786                           ;I2C1.c: 79: break;
  6787                           
  6788  04B5  3001               	movlw	1
  6789  04B6  00A2               	movwf	??_I2C1_Transmit
  6790  04B7  0822               	movf	??_I2C1_Transmit,w
  6791  04B8  07A5               	addwf	I2C1_Transmit@i,f
  6792  04B9                     l4305:	
  6793  04B9  0821               	movf	I2C1_Transmit@size,w
  6794  04BA  0225               	subwf	I2C1_Transmit@i,w
  6795  04BB  1803               	btfsc	3,0
  6796  04BC  2CE0               	goto	l4307
  6797  04BD                     l4293:	
  6798                           ;I2C1.c: 70: {
  6799                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6800                           
  6801  04BD  3005               	movlw	5
  6802  04BE  0024               	movlb	4	; select bank4
  6803  04BF  0514               	andwf	20,w	;volatile
  6804  04C0  0020               	movlb	0	; select bank0
  6805  04C1  00A2               	movwf	??_I2C1_Transmit
  6806  04C2  0024               	movlb	4	; select bank4
  6807  04C3  0816               	movf	22,w	;volatile
  6808  04C4  391F               	andlw	31
  6809  04C5  0020               	movlb	0	; select bank0
  6810  04C6  0422               	iorwf	??_I2C1_Transmit,w
  6811  04C7  1D03               	btfss	3,2
  6812  04C8  2CBD               	goto	l4293
  6813                           
  6814                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  6815  04C9  0825               	movf	I2C1_Transmit@i,w
  6816  04CA  0720               	addwf	I2C1_Transmit@pData,w
  6817  04CB  00A2               	movwf	??_I2C1_Transmit
  6818  04CC  0822               	movf	??_I2C1_Transmit,w
  6819  04CD  0086               	movwf	6
  6820  04CE  0187               	clrf	7
  6821  04CF  0801               	movf	1,w
  6822  04D0  0024               	movlb	4	; select bank4
  6823  04D1  0091               	movwf	17	;volatile
  6824  04D2                     l100:	
  6825                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  6826                           
  6827  04D2  1914               	btfsc	20,2	;volatile
  6828  04D3  2CD2               	goto	l100
  6829                           
  6830                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  6831  04D4  3000               	movlw	0
  6832  04D5  1B16               	btfsc	22,6	;volatile
  6833  04D6  3001               	movlw	1
  6834  04D7  0020               	movlb	0	; select bank0
  6835  04D8  00A7               	movwf	I2C1_Transmit@result
  6836                           
  6837                           ;I2C1.c: 76: if (result)
  6838  04D9  0827               	movf	I2C1_Transmit@result,w
  6839  04DA  1903               	btfsc	3,2
  6840  04DB  2CB5               	goto	l4303
  6841                           
  6842                           ;I2C1.c: 77: {
  6843                           ;I2C1.c: 78: result = 2;
  6844  04DC  3002               	movlw	2
  6845  04DD  00A2               	movwf	??_I2C1_Transmit
  6846  04DE  0822               	movf	??_I2C1_Transmit,w
  6847  04DF  00A7               	movwf	I2C1_Transmit@result
  6848  04E0                     l4307:	
  6849                           ;I2C1.c: 80: }
  6850                           ;I2C1.c: 81: }
  6851                           ;I2C1.c: 82: }
  6852                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6853                           
  6854  04E0  3005               	movlw	5
  6855  04E1  0024               	movlb	4	; select bank4
  6856  04E2  0514               	andwf	20,w	;volatile
  6857  04E3  0020               	movlb	0	; select bank0
  6858  04E4  00A2               	movwf	??_I2C1_Transmit
  6859  04E5  0024               	movlb	4	; select bank4
  6860  04E6  0816               	movf	22,w	;volatile
  6861  04E7  391F               	andlw	31
  6862  04E8  0020               	movlb	0	; select bank0
  6863  04E9  0422               	iorwf	??_I2C1_Transmit,w
  6864  04EA  1D03               	btfss	3,2
  6865  04EB  2CE0               	goto	l4307
  6866                           
  6867                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  6868  04EC  0024               	movlb	4	; select bank4
  6869  04ED  1516               	bsf	22,2	;volatile
  6870                           
  6871                           ;I2C1.c: 86: break;
  6872  04EE  2D1D               	goto	l4327
  6873  04EF                     l109:	
  6874                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  6875                           
  6876                           
  6877                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  6878  04EF  0024               	movlb	4	; select bank4
  6879  04F0  1D94               	btfss	20,3	;volatile
  6880  04F1  1E14               	btfss	20,4	;volatile
  6881  04F2  2D11               	goto	l4321
  6882                           
  6883                           ;I2C1.c: 90: {
  6884                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  6885  04F3  0020               	movlb	0	; select bank0
  6886  04F4  01A6               	clrf	I2C1_Transmit@i_172
  6887  04F5                     l4317:	
  6888  04F5  0821               	movf	I2C1_Transmit@size,w
  6889  04F6  0226               	subwf	I2C1_Transmit@i_172,w
  6890  04F7  1803               	btfsc	3,0
  6891  04F8  2D0C               	goto	l4319
  6892                           
  6893                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  6894  04F9  0826               	movf	I2C1_Transmit@i_172,w
  6895  04FA  0720               	addwf	I2C1_Transmit@pData,w
  6896  04FB  00A2               	movwf	??_I2C1_Transmit
  6897  04FC  0822               	movf	??_I2C1_Transmit,w
  6898  04FD  0086               	movwf	6
  6899  04FE  0187               	clrf	7
  6900  04FF  0801               	movf	1,w
  6901  0500  00A3               	movwf	??_I2C1_Transmit+1
  6902  0501  0826               	movf	I2C1_Transmit@i_172,w
  6903  0502  3ECF               	addlw	(low (_I2C1_Config| 0))& (0+255)
  6904  0503  0086               	movwf	6
  6905  0504  0187               	clrf	7
  6906  0505  0823               	movf	??_I2C1_Transmit+1,w
  6907  0506  0081               	movwf	1
  6908  0507  3001               	movlw	1
  6909  0508  00A2               	movwf	??_I2C1_Transmit
  6910  0509  0822               	movf	??_I2C1_Transmit,w
  6911  050A  07A6               	addwf	I2C1_Transmit@i_172,f
  6912  050B  2CF5               	goto	l4317
  6913  050C                     l4319:	
  6914                           
  6915                           ;I2C1.c: 93: result = size;
  6916  050C  0821               	movf	I2C1_Transmit@size,w
  6917  050D  00A2               	movwf	??_I2C1_Transmit
  6918  050E  0822               	movf	??_I2C1_Transmit,w
  6919  050F  00A7               	movwf	I2C1_Transmit@result
  6920                           
  6921                           ;I2C1.c: 94: }
  6922  0510  2D1D               	goto	l4327
  6923  0511                     l4321:	
  6924                           
  6925                           ;I2C1.c: 95: else
  6926                           ;I2C1.c: 96: result = 0;
  6927  0511  0020               	movlb	0	; select bank0
  6928  0512  01A7               	clrf	I2C1_Transmit@result
  6929                           
  6930                           ;I2C1.c: 98: }
  6931                           
  6932                           ;I2C1.c: 97: break;
  6933  0513  2D1D               	goto	l4327
  6934  0514                     l4325:	
  6935  0514  0021               	movlb	1	; select bank1
  6936  0515  0861               	movf	(_I2C1_Config^(0+128)+18),w
  6937                           
  6938                           ; Switch size 1, requested type "space"
  6939                           ; Number of cases is 2, Range of values is 0 to 1
  6940                           ; switch strategies available:
  6941                           ; Name         Instructions Cycles
  6942                           ; simple_byte            7     4 (average)
  6943                           ; direct_byte           10     6 (fixed)
  6944                           ; jumptable            260     6 (fixed)
  6945                           ;	Chosen strategy is simple_byte
  6946  0516  3A00               	xorlw	0	; case 0
  6947  0517  1903               	skipnz
  6948  0518  2C8C               	goto	l4281
  6949  0519  3A01               	xorlw	1	; case 1
  6950  051A  1903               	skipnz
  6951  051B  2CEF               	goto	l109
  6952  051C  2D1D               	goto	l4327
  6953  051D                     l4327:	
  6954                           
  6955                           ;I2C1.c: 100: return result;
  6956  051D  0020               	movlb	0	; select bank0
  6957  051E  0827               	movf	I2C1_Transmit@result,w
  6958  051F  0008               	return
  6959  0520                     __end_of_I2C1_Transmit:	
  6960                           
  6961                           	psect	text26
  6962  07D6                     __ptext26:	
  6963 ;; *************** function _I2C_Init *****************
  6964 ;; Defined at:
  6965 ;;		line 6 in file "I2C_Common.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  I2Cx            1    wreg     enum E3144
  6968 ;;  address         1    5[BANK0 ] unsigned char 
  6969 ;;  mode            1    6[BANK0 ] enum E3135
  6970 ;;  Speed           1    7[BANK0 ] enum E3139
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  I2Cx            1   10[BANK0 ] enum E3144
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1    wreg      void 
  6975 ;; Registers used:
  6976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6982 ;;      Params:         0       3       0       0       0       0
  6983 ;;      Locals:         0       1       0       0       0       0
  6984 ;;      Temps:          0       2       0       0       0       0
  6985 ;;      Totals:         0       6       0       0       0       0
  6986 ;;Total ram usage:        6 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    5
  6989 ;; This function calls:
  6990 ;;		_I2C1_Setting
  6991 ;;		_I2C2_Setting
  6992 ;; This function is called by:
  6993 ;;		_DAC_Initialize
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           
  6998                           ;psect for function _I2C_Init
  6999  07D6                     _I2C_Init:	
  7000                           
  7001                           ;incstack = 0
  7002                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7003                           ;I2C_Init@I2Cx stored from wreg
  7004  07D6  0020               	movlb	0	; select bank0
  7005  07D7  00AA               	movwf	I2C_Init@I2Cx
  7006                           
  7007                           ;I2C_Common.c: 8: switch(I2Cx)
  7008  07D8  2FF4               	goto	l4495
  7009  07D9                     l4489:	
  7010                           ;I2C_Common.c: 9: {
  7011                           ;I2C_Common.c: 10: case I2C1_MODULE:
  7012                           
  7013                           
  7014                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  7015  07D9  0826               	movf	I2C_Init@mode,w
  7016  07DA  00A8               	movwf	??_I2C_Init
  7017  07DB  0828               	movf	??_I2C_Init,w
  7018  07DC  00A1               	movwf	I2C1_Setting@mode
  7019  07DD  0827               	movf	I2C_Init@Speed,w
  7020  07DE  00A9               	movwf	??_I2C_Init+1
  7021  07DF  0829               	movf	??_I2C_Init+1,w
  7022  07E0  00A2               	movwf	I2C1_Setting@Speed
  7023  07E1  0825               	movf	I2C_Init@address,w
  7024  07E2  3187  2792  3187   	fcall	_I2C1_Setting
  7025                           
  7026                           ;I2C_Common.c: 12: break;
  7027  07E5  2FFD               	goto	l338
  7028  07E6                     l4491:	
  7029                           ;I2C_Common.c: 14: case I2C2_MODULE:
  7030                           
  7031                           
  7032                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  7033  07E6  0020               	movlb	0	; select bank0
  7034  07E7  0826               	movf	I2C_Init@mode,w
  7035  07E8  00A8               	movwf	??_I2C_Init
  7036  07E9  0828               	movf	??_I2C_Init,w
  7037  07EA  00A1               	movwf	I2C2_Setting@mode
  7038  07EB  0827               	movf	I2C_Init@Speed,w
  7039  07EC  00A9               	movwf	??_I2C_Init+1
  7040  07ED  0829               	movf	??_I2C_Init+1,w
  7041  07EE  00A2               	movwf	I2C2_Setting@Speed
  7042  07EF  0825               	movf	I2C_Init@address,w
  7043  07F0  3187  274E  3187   	fcall	_I2C2_Setting
  7044                           
  7045                           ;I2C_Common.c: 17: }
  7046                           
  7047                           ;I2C_Common.c: 16: break;
  7048  07F3  2FFD               	goto	l338
  7049  07F4                     l4495:	
  7050  07F4  0020               	movlb	0	; select bank0
  7051  07F5  082A               	movf	I2C_Init@I2Cx,w
  7052                           
  7053                           ; Switch size 1, requested type "space"
  7054                           ; Number of cases is 2, Range of values is 0 to 1
  7055                           ; switch strategies available:
  7056                           ; Name         Instructions Cycles
  7057                           ; simple_byte            7     4 (average)
  7058                           ; direct_byte           10     6 (fixed)
  7059                           ; jumptable            260     6 (fixed)
  7060                           ;	Chosen strategy is simple_byte
  7061  07F6  3A00               	xorlw	0	; case 0
  7062  07F7  1903               	skipnz
  7063  07F8  2FD9               	goto	l4489
  7064  07F9  3A01               	xorlw	1	; case 1
  7065  07FA  1903               	skipnz
  7066  07FB  2FE6               	goto	l4491
  7067  07FC  2FFD               	goto	l338
  7068  07FD                     l338:	
  7069                           
  7070                           ;I2C_Common.c: 19: PEIE = 1;
  7071  07FD  170B               	bsf	11,6	;volatile
  7072                           
  7073                           ;I2C_Common.c: 20: GIE = 1;
  7074  07FE  178B               	bsf	11,7	;volatile
  7075  07FF  0008               	return
  7076  0800                     __end_of_I2C_Init:	
  7077                           
  7078                           	psect	text27
  7079  074E                     __ptext27:	
  7080 ;; *************** function _I2C2_Setting *****************
  7081 ;; Defined at:
  7082 ;;		line 15 in file "I2C2.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  address         1    wreg     unsigned char 
  7085 ;;  mode            1    1[BANK0 ] enum E3135
  7086 ;;  Speed           1    2[BANK0 ] enum E3139
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;  address         1    4[BANK0 ] unsigned char 
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      void 
  7091 ;; Registers used:
  7092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7098 ;;      Params:         0       2       0       0       0       0
  7099 ;;      Locals:         0       1       0       0       0       0
  7100 ;;      Temps:          0       1       0       0       0       0
  7101 ;;      Totals:         0       4       0       0       0       0
  7102 ;;Total ram usage:        4 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; Hardware stack levels required when called:    4
  7105 ;; This function calls:
  7106 ;;		_I2C2_PinInit
  7107 ;; This function is called by:
  7108 ;;		_I2C_Init
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           
  7113                           ;psect for function _I2C2_Setting
  7114  074E                     _I2C2_Setting:	
  7115                           
  7116                           ;incstack = 0
  7117                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7118                           ;I2C2_Setting@address stored from wreg
  7119  074E  0020               	movlb	0	; select bank0
  7120  074F  00A4               	movwf	I2C2_Setting@address
  7121                           
  7122                           ;I2C2.c: 17: I2C2_PinInit();
  7123  0750  318C  24A9  3187   	fcall	_I2C2_PinInit
  7124                           
  7125                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  7126  0753  0020               	movlb	0	; select bank0
  7127  0754  0821               	movf	I2C2_Setting@mode,w
  7128  0755  00A3               	movwf	??_I2C2_Setting
  7129  0756  0823               	movf	??_I2C2_Setting,w
  7130  0757  0021               	movlb	1	; select bank1
  7131  0758  00CE               	movwf	(_I2C2_Config^(0+128)+18)
  7132                           
  7133                           ;I2C2.c: 20: switch(mode)
  7134  0759  2F82               	goto	l4363
  7135  075A                     l211:	
  7136                           ;I2C2.c: 21: {
  7137                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  7138                           
  7139                           
  7140                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  7141  075A  0024               	movlb	4	; select bank4
  7142  075B  159D               	bsf	29,3	;volatile
  7143                           
  7144                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  7145  075C  0020               	movlb	0	; select bank0
  7146  075D  0822               	movf	I2C2_Setting@Speed,w
  7147  075E  1D03               	btfss	3,2
  7148  075F  2F64               	goto	l4341
  7149                           
  7150                           ;I2C2.c: 25: {
  7151                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  7152  0760  0024               	movlb	4	; select bank4
  7153  0761  179C               	bsf	28,7	;volatile
  7154                           
  7155                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  7156  0762  304F               	movlw	79
  7157  0763  2F6E               	goto	L8
  7158  0764                     l4341:	
  7159                           ;I2C2.c: 28: }
  7160                           
  7161                           
  7162                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  7163  0764  0020               	movlb	0	; select bank0
  7164  0765  0322               	decf	I2C2_Setting@Speed,w
  7165  0766  1D03               	btfss	3,2
  7166  0767  2F6F               	goto	l4347
  7167                           
  7168                           ;I2C2.c: 30: {
  7169                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  7170  0768  307F               	movlw	127
  7171  0769  00A3               	movwf	??_I2C2_Setting
  7172  076A  0823               	movf	??_I2C2_Setting,w
  7173  076B  0024               	movlb	4	; select bank4
  7174  076C  059C               	andwf	28,f	;volatile
  7175                           
  7176                           ;I2C2.c: 32: SSP2ADD = 0x13;
  7177  076D  3013               	movlw	19
  7178  076E                     L8:	
  7179  076E  009A               	movwf	26	;volatile
  7180  076F                     l4347:	
  7181                           
  7182                           ;I2C2.c: 33: }
  7183                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  7184  076F  0024               	movlb	4	; select bank4
  7185  0770  2F80               	goto	l4359
  7186  0771                     l4349:	
  7187                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  7188                           
  7189                           ;I2C2.c: 35: break;
  7190                           
  7191                           
  7192                           ;I2C2.c: 38: SSP2STAT = 0x00;
  7193  0771  0024               	movlb	4	; select bank4
  7194  0772  019C               	clrf	28	;volatile
  7195                           
  7196                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  7197  0773  3006               	movlw	6
  7198  0774  0020               	movlb	0	; select bank0
  7199  0775  00A3               	movwf	??_I2C2_Setting
  7200  0776  0823               	movf	??_I2C2_Setting,w
  7201  0777  0024               	movlb	4	; select bank4
  7202  0778  049D               	iorwf	29,f	;volatile
  7203                           
  7204                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  7205  0779  141E               	bsf	30,0	;volatile
  7206                           
  7207                           ;I2C2.c: 41: SSP2ADD = address << 1;
  7208  077A  0020               	movlb	0	; select bank0
  7209  077B  3524               	lslf	I2C2_Setting@address,w
  7210  077C  0024               	movlb	4	; select bank4
  7211  077D  009A               	movwf	26	;volatile
  7212                           
  7213                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  7214  077E  30FE               	movlw	254
  7215  077F  009B               	movwf	27	;volatile
  7216  0780                     l4359:	
  7217                           
  7218                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  7219  0780  169D               	bsf	29,5	;volatile
  7220                           
  7221                           ;I2C2.c: 45: }
  7222                           
  7223                           ;I2C2.c: 44: break;
  7224  0781  2F8B               	goto	l215
  7225  0782                     l4363:	
  7226  0782  0020               	movlb	0	; select bank0
  7227  0783  0821               	movf	I2C2_Setting@mode,w
  7228                           
  7229                           ; Switch size 1, requested type "space"
  7230                           ; Number of cases is 2, Range of values is 0 to 1
  7231                           ; switch strategies available:
  7232                           ; Name         Instructions Cycles
  7233                           ; simple_byte            7     4 (average)
  7234                           ; direct_byte           10     6 (fixed)
  7235                           ; jumptable            260     6 (fixed)
  7236                           ;	Chosen strategy is simple_byte
  7237  0784  3A00               	xorlw	0	; case 0
  7238  0785  1903               	skipnz
  7239  0786  2F5A               	goto	l211
  7240  0787  3A01               	xorlw	1	; case 1
  7241  0788  1903               	skipnz
  7242  0789  2F71               	goto	l4349
  7243  078A  2F8B               	goto	l215
  7244  078B                     l215:	
  7245                           
  7246                           ;I2C2.c: 46: SSP2IE = 1;
  7247  078B  0021               	movlb	1	; select bank1
  7248  078C  1414               	bsf	20,0	;volatile
  7249                           
  7250                           ;I2C2.c: 47: BCL2IE = 1;
  7251  078D  1494               	bsf	20,1	;volatile
  7252                           
  7253                           ;I2C2.c: 48: SSP2IF = 0;
  7254  078E  0020               	movlb	0	; select bank0
  7255  078F  1014               	bcf	20,0	;volatile
  7256                           
  7257                           ;I2C2.c: 49: BCL2IF = 0;
  7258  0790  1094               	bcf	20,1	;volatile
  7259  0791  0008               	return
  7260  0792                     __end_of_I2C2_Setting:	
  7261                           
  7262                           	psect	text28
  7263  0CA9                     __ptext28:	
  7264 ;; *************** function _I2C2_PinInit *****************
  7265 ;; Defined at:
  7266 ;;		line 9 in file "I2C2.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;		None
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;		None
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  1    wreg      void 
  7273 ;; Registers used:
  7274 ;;		wreg, status,2, status,0
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7280 ;;      Params:         0       0       0       0       0       0
  7281 ;;      Locals:         0       0       0       0       0       0
  7282 ;;      Temps:          0       1       0       0       0       0
  7283 ;;      Totals:         0       1       0       0       0       0
  7284 ;;Total ram usage:        1 bytes
  7285 ;; Hardware stack levels used:    1
  7286 ;; Hardware stack levels required when called:    3
  7287 ;; This function calls:
  7288 ;;		Nothing
  7289 ;; This function is called by:
  7290 ;;		_I2C2_Setting
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           
  7295                           ;psect for function _I2C2_PinInit
  7296  0CA9                     _I2C2_PinInit:	
  7297                           
  7298                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  7299                           
  7300                           ;incstack = 0
  7301                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  7302  0CA9  3024               	movlw	36
  7303  0CAA  0020               	movlb	0	; select bank0
  7304  0CAB  00A0               	movwf	??_I2C2_PinInit
  7305  0CAC  0820               	movf	??_I2C2_PinInit,w
  7306  0CAD  0021               	movlb	1	; select bank1
  7307  0CAE  048D               	iorwf	13,f	;volatile
  7308                           
  7309                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  7310  0CAF  30DB               	movlw	219
  7311  0CB0  0020               	movlb	0	; select bank0
  7312  0CB1  00A0               	movwf	??_I2C2_PinInit
  7313  0CB2  0820               	movf	??_I2C2_PinInit,w
  7314  0CB3  0023               	movlb	3	; select bank3
  7315  0CB4  058D               	andwf	13,f	;volatile
  7316  0CB5  0008               	return
  7317  0CB6                     __end_of_I2C2_PinInit:	
  7318                           
  7319                           	psect	text29
  7320  0792                     __ptext29:	
  7321 ;; *************** function _I2C1_Setting *****************
  7322 ;; Defined at:
  7323 ;;		line 15 in file "I2C1.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  address         1    wreg     unsigned char 
  7326 ;;  mode            1    1[BANK0 ] enum E3135
  7327 ;;  Speed           1    2[BANK0 ] enum E3139
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;  address         1    4[BANK0 ] unsigned char 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  1    wreg      void 
  7332 ;; Registers used:
  7333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7339 ;;      Params:         0       2       0       0       0       0
  7340 ;;      Locals:         0       1       0       0       0       0
  7341 ;;      Temps:          0       1       0       0       0       0
  7342 ;;      Totals:         0       4       0       0       0       0
  7343 ;;Total ram usage:        4 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; Hardware stack levels required when called:    4
  7346 ;; This function calls:
  7347 ;;		_I2C1_PinInit
  7348 ;; This function is called by:
  7349 ;;		_I2C_Init
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           
  7354                           ;psect for function _I2C1_Setting
  7355  0792                     _I2C1_Setting:	
  7356                           
  7357                           ;incstack = 0
  7358                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7359                           ;I2C1_Setting@address stored from wreg
  7360  0792  0020               	movlb	0	; select bank0
  7361  0793  00A4               	movwf	I2C1_Setting@address
  7362                           
  7363                           ;I2C1.c: 17: I2C1_PinInit();
  7364  0794  318C  249C  3187   	fcall	_I2C1_PinInit
  7365                           
  7366                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  7367  0797  0020               	movlb	0	; select bank0
  7368  0798  0821               	movf	I2C1_Setting@mode,w
  7369  0799  00A3               	movwf	??_I2C1_Setting
  7370  079A  0823               	movf	??_I2C1_Setting,w
  7371  079B  0021               	movlb	1	; select bank1
  7372  079C  00E1               	movwf	(_I2C1_Config^(0+128)+18)
  7373                           
  7374                           ;I2C1.c: 20: switch(mode)
  7375  079D  2FC6               	goto	l4277
  7376  079E                     l74:	
  7377                           ;I2C1.c: 21: {
  7378                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  7379                           
  7380                           
  7381                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  7382  079E  0024               	movlb	4	; select bank4
  7383  079F  1595               	bsf	21,3	;volatile
  7384                           
  7385                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  7386  07A0  0020               	movlb	0	; select bank0
  7387  07A1  0822               	movf	I2C1_Setting@Speed,w
  7388  07A2  1D03               	btfss	3,2
  7389  07A3  2FA8               	goto	l4255
  7390                           
  7391                           ;I2C1.c: 25: {
  7392                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  7393  07A4  0024               	movlb	4	; select bank4
  7394  07A5  1794               	bsf	20,7	;volatile
  7395                           
  7396                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  7397  07A6  304F               	movlw	79
  7398  07A7  2FB2               	goto	L9
  7399  07A8                     l4255:	
  7400                           ;I2C1.c: 28: }
  7401                           
  7402                           
  7403                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  7404  07A8  0020               	movlb	0	; select bank0
  7405  07A9  0322               	decf	I2C1_Setting@Speed,w
  7406  07AA  1D03               	btfss	3,2
  7407  07AB  2FB3               	goto	l4261
  7408                           
  7409                           ;I2C1.c: 30: {
  7410                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  7411  07AC  307F               	movlw	127
  7412  07AD  00A3               	movwf	??_I2C1_Setting
  7413  07AE  0823               	movf	??_I2C1_Setting,w
  7414  07AF  0024               	movlb	4	; select bank4
  7415  07B0  0594               	andwf	20,f	;volatile
  7416                           
  7417                           ;I2C1.c: 32: SSP1ADD = 0x13;
  7418  07B1  3013               	movlw	19
  7419  07B2                     L9:	
  7420  07B2  0092               	movwf	18	;volatile
  7421  07B3                     l4261:	
  7422                           
  7423                           ;I2C1.c: 33: }
  7424                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  7425  07B3  0024               	movlb	4	; select bank4
  7426  07B4  2FC4               	goto	l4273
  7427  07B5                     l4263:	
  7428                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  7429                           
  7430                           ;I2C1.c: 35: break;
  7431                           
  7432                           
  7433                           ;I2C1.c: 38: SSP1STAT = 0x00;
  7434  07B5  0024               	movlb	4	; select bank4
  7435  07B6  0194               	clrf	20	;volatile
  7436                           
  7437                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  7438  07B7  3006               	movlw	6
  7439  07B8  0020               	movlb	0	; select bank0
  7440  07B9  00A3               	movwf	??_I2C1_Setting
  7441  07BA  0823               	movf	??_I2C1_Setting,w
  7442  07BB  0024               	movlb	4	; select bank4
  7443  07BC  0495               	iorwf	21,f	;volatile
  7444                           
  7445                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  7446  07BD  1416               	bsf	22,0	;volatile
  7447                           
  7448                           ;I2C1.c: 41: SSP1ADD = address << 1;
  7449  07BE  0020               	movlb	0	; select bank0
  7450  07BF  3524               	lslf	I2C1_Setting@address,w
  7451  07C0  0024               	movlb	4	; select bank4
  7452  07C1  0092               	movwf	18	;volatile
  7453                           
  7454                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  7455  07C2  30FE               	movlw	254
  7456  07C3  0093               	movwf	19	;volatile
  7457  07C4                     l4273:	
  7458                           
  7459                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  7460  07C4  1695               	bsf	21,5	;volatile
  7461                           
  7462                           ;I2C1.c: 45: }
  7463                           
  7464                           ;I2C1.c: 44: break;
  7465  07C5  2FCF               	goto	l78
  7466  07C6                     l4277:	
  7467  07C6  0020               	movlb	0	; select bank0
  7468  07C7  0821               	movf	I2C1_Setting@mode,w
  7469                           
  7470                           ; Switch size 1, requested type "space"
  7471                           ; Number of cases is 2, Range of values is 0 to 1
  7472                           ; switch strategies available:
  7473                           ; Name         Instructions Cycles
  7474                           ; simple_byte            7     4 (average)
  7475                           ; direct_byte           10     6 (fixed)
  7476                           ; jumptable            260     6 (fixed)
  7477                           ;	Chosen strategy is simple_byte
  7478  07C8  3A00               	xorlw	0	; case 0
  7479  07C9  1903               	skipnz
  7480  07CA  2F9E               	goto	l74
  7481  07CB  3A01               	xorlw	1	; case 1
  7482  07CC  1903               	skipnz
  7483  07CD  2FB5               	goto	l4263
  7484  07CE  2FCF               	goto	l78
  7485  07CF                     l78:	
  7486                           
  7487                           ;I2C1.c: 46: SSP1IE = 1;
  7488  07CF  0021               	movlb	1	; select bank1
  7489  07D0  1591               	bsf	17,3	;volatile
  7490                           
  7491                           ;I2C1.c: 47: BCL1IE = 1;
  7492  07D1  1592               	bsf	18,3	;volatile
  7493                           
  7494                           ;I2C1.c: 48: SSP1IF = 0;
  7495  07D2  0020               	movlb	0	; select bank0
  7496  07D3  1191               	bcf	17,3	;volatile
  7497                           
  7498                           ;I2C1.c: 49: BCL1IF = 0;
  7499  07D4  1192               	bcf	18,3	;volatile
  7500  07D5  0008               	return
  7501  07D6                     __end_of_I2C1_Setting:	
  7502                           
  7503                           	psect	text30
  7504  0C9C                     __ptext30:	
  7505 ;; *************** function _I2C1_PinInit *****************
  7506 ;; Defined at:
  7507 ;;		line 9 in file "I2C1.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;		None
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;		None
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1    wreg      void 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7521 ;;      Params:         0       0       0       0       0       0
  7522 ;;      Locals:         0       0       0       0       0       0
  7523 ;;      Temps:          0       1       0       0       0       0
  7524 ;;      Totals:         0       1       0       0       0       0
  7525 ;;Total ram usage:        1 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    3
  7528 ;; This function calls:
  7529 ;;		Nothing
  7530 ;; This function is called by:
  7531 ;;		_I2C1_Setting
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           
  7536                           ;psect for function _I2C1_PinInit
  7537  0C9C                     _I2C1_PinInit:	
  7538                           
  7539                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  7540                           
  7541                           ;incstack = 0
  7542                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  7543  0C9C  3012               	movlw	18
  7544  0C9D  0020               	movlb	0	; select bank0
  7545  0C9E  00A0               	movwf	??_I2C1_PinInit
  7546  0C9F  0820               	movf	??_I2C1_PinInit,w
  7547  0CA0  0021               	movlb	1	; select bank1
  7548  0CA1  048D               	iorwf	13,f	;volatile
  7549                           
  7550                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  7551  0CA2  30ED               	movlw	237
  7552  0CA3  0020               	movlb	0	; select bank0
  7553  0CA4  00A0               	movwf	??_I2C1_PinInit
  7554  0CA5  0820               	movf	??_I2C1_PinInit,w
  7555  0CA6  0023               	movlb	3	; select bank3
  7556  0CA7  058D               	andwf	13,f	;volatile
  7557  0CA8  0008               	return
  7558  0CA9                     __end_of_I2C1_PinInit:	
  7559                           
  7560                           	psect	text31
  7561  0E57                     __ptext31:	
  7562 ;; *************** function _Buzzer_Init *****************
  7563 ;; Defined at:
  7564 ;;		line 11 in file "Buzzer.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;		None
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;		None
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  1    wreg      void 
  7571 ;; Registers used:
  7572 ;;		wreg, status,2, status,0
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7578 ;;      Params:         0       0       0       0       0       0
  7579 ;;      Locals:         0       0       0       0       0       0
  7580 ;;      Temps:          0       1       0       0       0       0
  7581 ;;      Totals:         0       1       0       0       0       0
  7582 ;;Total ram usage:        1 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    3
  7585 ;; This function calls:
  7586 ;;		Nothing
  7587 ;; This function is called by:
  7588 ;;		_main
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           
  7593                           ;psect for function _Buzzer_Init
  7594  0E57                     _Buzzer_Init:	
  7595                           
  7596                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  7597                           
  7598                           ;incstack = 0
  7599                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  7600  0E57  307F               	movlw	127
  7601  0E58  0020               	movlb	0	; select bank0
  7602  0E59  00A0               	movwf	??_Buzzer_Init
  7603  0E5A  0820               	movf	??_Buzzer_Init,w
  7604  0E5B  0021               	movlb	1	; select bank1
  7605  0E5C  058C               	andwf	12,f	;volatile
  7606                           
  7607                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  7608  0E5D  307F               	movlw	127
  7609  0E5E  0020               	movlb	0	; select bank0
  7610  0E5F  00A0               	movwf	??_Buzzer_Init
  7611  0E60  0820               	movf	??_Buzzer_Init,w
  7612  0E61  0023               	movlb	3	; select bank3
  7613  0E62  058C               	andwf	12,f	;volatile
  7614                           
  7615                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  7616  0E63  0022               	movlb	2	; select bank2
  7617  0E64  159D               	bsf	29,3	;volatile
  7618                           
  7619                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  7620  0E65  0020               	movlb	0	; select bank0
  7621  0E66  081C               	movf	28,w	;volatile
  7622                           
  7623                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  7624  0E67  149C               	bsf	28,1	;volatile
  7625                           
  7626                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  7627  0E68  151C               	bsf	28,2	;volatile
  7628                           
  7629                           ;Buzzer.c: 21: TMR2 = 0x00;
  7630  0E69  019A               	clrf	26	;volatile
  7631                           
  7632                           ;Buzzer.c: 22: PR2 = 0xFF;
  7633  0E6A  30FF               	movlw	255
  7634  0E6B  009B               	movwf	27	;volatile
  7635                           
  7636                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  7637  0E6C  303F               	movlw	63
  7638  0E6D  00A0               	movwf	??_Buzzer_Init
  7639  0E6E  0820               	movf	??_Buzzer_Init,w
  7640  0E6F  0025               	movlb	5	; select bank5
  7641  0E70  059A               	andwf	26,f	;volatile
  7642                           
  7643                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  7644  0E71  300C               	movlw	12
  7645  0E72  0020               	movlb	0	; select bank0
  7646  0E73  00A0               	movwf	??_Buzzer_Init
  7647  0E74  0820               	movf	??_Buzzer_Init,w
  7648  0E75  0025               	movlb	5	; select bank5
  7649  0E76  049A               	iorwf	26,f	;volatile
  7650                           
  7651                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  7652  0E77  30F3               	movlw	243
  7653  0E78  0020               	movlb	0	; select bank0
  7654  0E79  00A0               	movwf	??_Buzzer_Init
  7655  0E7A  0820               	movf	??_Buzzer_Init,w
  7656  0E7B  0025               	movlb	5	; select bank5
  7657  0E7C  059E               	andwf	30,f	;volatile
  7658                           
  7659                           ;Buzzer.c: 28: CCPR2L = 0x00;
  7660  0E7D  0198               	clrf	24	;volatile
  7661  0E7E  0008               	return
  7662  0E7F                     __end_of_Buzzer_Init:	
  7663                           
  7664                           	psect	text32
  7665  0D49                     __ptext32:	
  7666 ;; *************** function _Basic_Init *****************
  7667 ;; Defined at:
  7668 ;;		line 62 in file "main.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;		None
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;		None
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  1    wreg      char 
  7675 ;; Registers used:
  7676 ;;		wreg, status,2
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7682 ;;      Params:         0       0       0       0       0       0
  7683 ;;      Locals:         0       0       0       0       0       0
  7684 ;;      Temps:          0       0       0       0       0       0
  7685 ;;      Totals:         0       0       0       0       0       0
  7686 ;;Total ram usage:        0 bytes
  7687 ;; Hardware stack levels used:    1
  7688 ;; Hardware stack levels required when called:    3
  7689 ;; This function calls:
  7690 ;;		Nothing
  7691 ;; This function is called by:
  7692 ;;		_main
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           
  7697                           ;psect for function _Basic_Init
  7698  0D49                     _Basic_Init:	
  7699                           
  7700                           ;main.c: 64: OSCCON = 0xF0;
  7701                           
  7702                           ;incstack = 0
  7703                           ; Regs used in _Basic_Init: [wreg+status,2]
  7704  0D49  30F0               	movlw	240
  7705  0D4A  0021               	movlb	1	; select bank1
  7706  0D4B  0099               	movwf	25	;volatile
  7707                           
  7708                           ;main.c: 68: TRISA = 0x07;
  7709  0D4C  3007               	movlw	7
  7710  0D4D  008C               	movwf	12	;volatile
  7711                           
  7712                           ;main.c: 69: ANSELA = 0x07;
  7713  0D4E  3007               	movlw	7
  7714  0D4F  0023               	movlb	3	; select bank3
  7715  0D50  008C               	movwf	12	;volatile
  7716                           
  7717                           ;main.c: 71: TRISB = 0x40;
  7718  0D51  3040               	movlw	64
  7719  0D52  0021               	movlb	1	; select bank1
  7720  0D53  008D               	movwf	13	;volatile
  7721                           
  7722                           ;main.c: 72: ANSELB = 0x00;
  7723  0D54  0023               	movlb	3	; select bank3
  7724  0D55  018D               	clrf	13	;volatile
  7725                           
  7726                           ;main.c: 74: APFCON0 = 0x08;
  7727  0D56  3008               	movlw	8
  7728  0D57  0022               	movlb	2	; select bank2
  7729  0D58  009D               	movwf	29	;volatile
  7730                           
  7731                           ;main.c: 75: APFCON1 = 0x00;
  7732  0D59  019E               	clrf	30	;volatile
  7733                           
  7734                           ;main.c: 77: PORTA = 0x00;
  7735  0D5A  0020               	movlb	0	; select bank0
  7736  0D5B  018C               	clrf	12	;volatile
  7737                           
  7738                           ;main.c: 78: PORTB = 0x00;
  7739  0D5C  018D               	clrf	13	;volatile
  7740  0D5D  0008               	return
  7741  0D5E                     __end_of_Basic_Init:	
  7742                           ;main.c: 80: return 0;
  7743                           ;	Return value of _Basic_Init is never used
  7744                           
  7745                           
  7746                           	psect	intentry
  7747  0004                     __pintentry:	
  7748 ;; *************** function _Handler *****************
  7749 ;; Defined at:
  7750 ;;		line 83 in file "main.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;		None
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;		None
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  1    wreg      void 
  7757 ;; Registers used:
  7758 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7764 ;;      Params:         0       0       0       0       0       0
  7765 ;;      Locals:         0       0       0       0       0       0
  7766 ;;      Temps:          1       0       0       0       0       0
  7767 ;;      Totals:         1       0       0       0       0       0
  7768 ;;Total ram usage:        1 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; Hardware stack levels required when called:    2
  7771 ;; This function calls:
  7772 ;;		_Buzzer_Handler
  7773 ;;		_CPSx_Read
  7774 ;;		_I2C_CommonInterrupt
  7775 ;;		_Timer1_Count10us
  7776 ;;		_Timer1_DetectAssignCount
  7777 ;;		_Timer4_Handler
  7778 ;;		_Timer6_Handler
  7779 ;;		_mTouch_IntervalDecrement
  7780 ;; This function is called by:
  7781 ;;		Interrupt level 1
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785  0004                     _Handler:	
  7786                           
  7787                           ;incstack = 0
  7788  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7789                           
  7790                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7791  0005  3180               	pagesel	$
  7792  0006  0020               	movlb	0	; select bank0
  7793  0007  087F               	movf	127,w
  7794  0008  00F5               	movwf	??_Handler
  7795                           
  7796                           ;main.c: 85: if(Timer6_Handler())
  7797  0009  318C  2491  3180   	fcall	_Timer6_Handler
  7798  000C  3A00               	xorlw	0
  7799  000D  1903               	skipnz
  7800  000E  2812               	goto	i1l3979
  7801                           
  7802                           ;main.c: 86: {
  7803                           ;main.c: 87: Timer1_Count10us();
  7804  000F  318C  247C  3180   	fcall	_Timer1_Count10us
  7805  0012                     i1l3979:	
  7806                           
  7807                           ;main.c: 88: }
  7808                           ;main.c: 89: if(Timer4_Handler())
  7809  0012  318C  2486  3180   	fcall	_Timer4_Handler
  7810  0015  3A00               	xorlw	0
  7811  0016  1903               	skipnz
  7812  0017  2821               	goto	i1l3987
  7813                           
  7814                           ;main.c: 90: {
  7815                           ;main.c: 91: CPSx_Read();
  7816  0018  318E  2632  3180   	fcall	_CPSx_Read
  7817                           
  7818                           ;main.c: 92: Buzzer_Handler();
  7819  001B  318D  2573  3180   	fcall	_Buzzer_Handler
  7820                           
  7821                           ;main.c: 93: mTouch_IntervalDecrement();
  7822  001E  318C  24FF  3180   	fcall	_mTouch_IntervalDecrement
  7823  0021                     i1l3987:	
  7824                           
  7825                           ;main.c: 94: }
  7826                           ;main.c: 95: if(Timer1_DetectAssignCount())
  7827  0021  318D  2589  3180   	fcall	_Timer1_DetectAssignCount
  7828  0024  3A00               	xorlw	0
  7829  0025  1903               	skipnz
  7830  0026  282A               	goto	i1l3991
  7831                           
  7832                           ;main.c: 96: LATA6 = !LATA6;
  7833  0027  3040               	movlw	64
  7834  0028  0022               	movlb	2	; select bank2
  7835  0029  068C               	xorwf	12,f
  7836  002A                     i1l3991:	
  7837                           
  7838                           ;main.c: 98: I2C_CommonInterrupt();
  7839  002A  318C  2463         	fcall	_I2C_CommonInterrupt
  7840  002C  0875               	movf	??_Handler,w
  7841  002D  0020               	movlb	0	; select bank0
  7842  002E  00FF               	movwf	127
  7843  002F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7844  0030  0009               	retfie
  7845  0031                     __end_of_Handler:	
  7846                           
  7847                           	psect	text34
  7848  0CFF                     __ptext34:	
  7849 ;; *************** function _mTouch_IntervalDecrement *****************
  7850 ;; Defined at:
  7851 ;;		line 101 in file "main.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;		None
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;		None
  7856 ;; Return value:  Size  Location     Type
  7857 ;;                  1    wreg      void 
  7858 ;; Registers used:
  7859 ;;		wreg, status,2, status,0
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7865 ;;      Params:         0       0       0       0       0       0
  7866 ;;      Locals:         0       0       0       0       0       0
  7867 ;;      Temps:          0       0       0       0       0       0
  7868 ;;      Totals:         0       0       0       0       0       0
  7869 ;;Total ram usage:        0 bytes
  7870 ;; Hardware stack levels used:    1
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_Handler
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           
  7879                           ;psect for function _mTouch_IntervalDecrement
  7880  0CFF                     _mTouch_IntervalDecrement:	
  7881                           
  7882                           ;main.c: 103: if(mTouch_Interval[0]>0)
  7883                           
  7884                           ;incstack = 0
  7885                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  7886  0CFF  0021               	movlb	1	; select bank1
  7887  0D00  0828               	movf	_mTouch_Interval^(0+128),w
  7888  0D01  1903               	btfsc	3,2
  7889  0D02  2D05               	goto	i1l647
  7890                           
  7891                           ;main.c: 104: mTouch_Interval[0]--;
  7892  0D03  3001               	movlw	1
  7893  0D04  02A8               	subwf	_mTouch_Interval^(0+128),f
  7894  0D05                     i1l647:	
  7895                           
  7896                           ;main.c: 105: if(mTouch_Interval[1]>0)
  7897  0D05  0829               	movf	(_mTouch_Interval^(0+128)+1),w
  7898  0D06  1903               	btfsc	3,2
  7899  0D07  2D0A               	goto	i1l648
  7900                           
  7901                           ;main.c: 106: mTouch_Interval[1]--;
  7902  0D08  3001               	movlw	1
  7903  0D09  02A9               	subwf	(_mTouch_Interval^(0+128)+1),f
  7904  0D0A                     i1l648:	
  7905                           
  7906                           ;main.c: 107: if(mTouch_Interval[2]>0)
  7907  0D0A  082A               	movf	(_mTouch_Interval^(0+128)+2),w
  7908  0D0B  1903               	btfsc	3,2
  7909  0D0C  0008               	return
  7910                           
  7911                           ;main.c: 108: mTouch_Interval[2]--;
  7912  0D0D  3001               	movlw	1
  7913  0D0E  02AA               	subwf	(_mTouch_Interval^(0+128)+2),f
  7914  0D0F  0008               	return
  7915  0D10                     __end_of_mTouch_IntervalDecrement:	
  7916                           
  7917                           	psect	text35
  7918  0C91                     __ptext35:	
  7919 ;; *************** function _Timer6_Handler *****************
  7920 ;; Defined at:
  7921 ;;		line 17 in file "Timer6.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;		None
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;		None
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  1    wreg      unsigned char 
  7928 ;; Registers used:
  7929 ;;		wreg
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7935 ;;      Params:         0       0       0       0       0       0
  7936 ;;      Locals:         0       0       0       0       0       0
  7937 ;;      Temps:          0       0       0       0       0       0
  7938 ;;      Totals:         0       0       0       0       0       0
  7939 ;;Total ram usage:        0 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; This function calls:
  7942 ;;		Nothing
  7943 ;; This function is called by:
  7944 ;;		_Handler
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948                           
  7949                           ;psect for function _Timer6_Handler
  7950  0C91                     _Timer6_Handler:	
  7951                           
  7952                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  7953                           
  7954                           ;incstack = 0
  7955                           ; Regs used in _Timer6_Handler: [wreg]
  7956  0C91  0021               	movlb	1	; select bank1
  7957  0C92  1D93               	btfss	19,3	;volatile
  7958  0C93  2C9A               	goto	i1l2257
  7959  0C94  0020               	movlb	0	; select bank0
  7960  0C95  1D93               	btfss	19,3	;volatile
  7961  0C96  2C9A               	goto	i1l2257
  7962                           
  7963                           ;Timer6.c: 20: {
  7964                           ;Timer6.c: 21: TMR6IF = 0;
  7965  0C97  1193               	bcf	19,3	;volatile
  7966                           
  7967                           ;Timer6.c: 22: return 1;
  7968  0C98  3001               	movlw	1
  7969  0C99  0008               	return
  7970  0C9A                     i1l2257:	
  7971                           
  7972                           ;Timer6.c: 23: }
  7973                           ;Timer6.c: 24: return 0;
  7974  0C9A  3000               	movlw	0
  7975  0C9B  0008               	return
  7976  0C9C                     __end_of_Timer6_Handler:	
  7977                           
  7978                           	psect	text36
  7979  0C86                     __ptext36:	
  7980 ;; *************** function _Timer4_Handler *****************
  7981 ;; Defined at:
  7982 ;;		line 17 in file "Timer4.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;		None
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;		None
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  1    wreg      unsigned char 
  7989 ;; Registers used:
  7990 ;;		wreg
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7996 ;;      Params:         0       0       0       0       0       0
  7997 ;;      Locals:         0       0       0       0       0       0
  7998 ;;      Temps:          0       0       0       0       0       0
  7999 ;;      Totals:         0       0       0       0       0       0
  8000 ;;Total ram usage:        0 bytes
  8001 ;; Hardware stack levels used:    1
  8002 ;; This function calls:
  8003 ;;		Nothing
  8004 ;; This function is called by:
  8005 ;;		_Handler
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           
  8010                           ;psect for function _Timer4_Handler
  8011  0C86                     _Timer4_Handler:	
  8012                           
  8013                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  8014                           
  8015                           ;incstack = 0
  8016                           ; Regs used in _Timer4_Handler: [wreg]
  8017  0C86  0021               	movlb	1	; select bank1
  8018  0C87  1C93               	btfss	19,1	;volatile
  8019  0C88  2C8F               	goto	i1l2225
  8020  0C89  0020               	movlb	0	; select bank0
  8021  0C8A  1C93               	btfss	19,1	;volatile
  8022  0C8B  2C8F               	goto	i1l2225
  8023                           
  8024                           ;Timer4.c: 20: {
  8025                           ;Timer4.c: 21: TMR4IF = 0;
  8026  0C8C  1093               	bcf	19,1	;volatile
  8027                           
  8028                           ;Timer4.c: 22: return 1;
  8029  0C8D  3001               	movlw	1
  8030  0C8E  0008               	return
  8031  0C8F                     i1l2225:	
  8032                           
  8033                           ;Timer4.c: 23: }
  8034                           ;Timer4.c: 24: return 0;
  8035  0C8F  3000               	movlw	0
  8036  0C90  0008               	return
  8037  0C91                     __end_of_Timer4_Handler:	
  8038                           
  8039                           	psect	text37
  8040  0D89                     __ptext37:	
  8041 ;; *************** function _Timer1_DetectAssignCount *****************
  8042 ;; Defined at:
  8043 ;;		line 48 in file "Timer1.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;		None
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;		None
  8048 ;; Return value:  Size  Location     Type
  8049 ;;                  1    wreg      unsigned char 
  8050 ;; Registers used:
  8051 ;;		wreg
  8052 ;; Tracked objects:
  8053 ;;		On entry : 0/0
  8054 ;;		On exit  : 0/0
  8055 ;;		Unchanged: 0/0
  8056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8057 ;;      Params:         0       0       0       0       0       0
  8058 ;;      Locals:         0       0       0       0       0       0
  8059 ;;      Temps:          0       0       0       0       0       0
  8060 ;;      Totals:         0       0       0       0       0       0
  8061 ;;Total ram usage:        0 bytes
  8062 ;; Hardware stack levels used:    1
  8063 ;; This function calls:
  8064 ;;		Nothing
  8065 ;; This function is called by:
  8066 ;;		_Handler
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           
  8071                           ;psect for function _Timer1_DetectAssignCount
  8072  0D89                     _Timer1_DetectAssignCount:	
  8073                           
  8074                           ;Timer1.c: 50: if(TMR1IF&&TMR1IE)
  8075                           
  8076                           ;incstack = 0
  8077                           ; Regs used in _Timer1_DetectAssignCount: [wreg]
  8078  0D89  0020               	movlb	0	; select bank0
  8079  0D8A  1C11               	btfss	17,0	;volatile
  8080  0D8B  2D9F               	goto	i1l3611
  8081  0D8C  0021               	movlb	1	; select bank1
  8082  0D8D  1C11               	btfss	17,0	;volatile
  8083  0D8E  2D9F               	goto	i1l3611
  8084                           
  8085                           ;Timer1.c: 51: {
  8086                           ;Timer1.c: 52: countsum += 10;
  8087  0D8F  300A               	movlw	10
  8088  0D90  07A4               	addwf	_countsum^(0+128),f
  8089  0D91  3000               	movlw	0
  8090  0D92  3DA5               	addwfc	(_countsum+1)^(0+128),f
  8091  0D93  3000               	movlw	0
  8092  0D94  3DA6               	addwfc	(_countsum+2)^(0+128),f
  8093  0D95  3000               	movlw	0
  8094  0D96  3DA7               	addwfc	(_countsum+3)^(0+128),f
  8095                           
  8096                           ;Timer1.c: 53: TMR1 = 0xFFFF-10;
  8097  0D97  30FF               	movlw	255
  8098  0D98  0020               	movlb	0	; select bank0
  8099  0D99  0097               	movwf	23	;volatile
  8100  0D9A  30F5               	movlw	245
  8101  0D9B  0096               	movwf	22	;volatile
  8102                           
  8103                           ;Timer1.c: 54: TMR1IF = 0;
  8104  0D9C  1011               	bcf	17,0	;volatile
  8105                           
  8106                           ;Timer1.c: 55: return 1;
  8107  0D9D  3001               	movlw	1
  8108  0D9E  0008               	return
  8109  0D9F                     i1l3611:	
  8110                           
  8111                           ;Timer1.c: 56: }
  8112                           ;Timer1.c: 57: return 0;
  8113  0D9F  3000               	movlw	0
  8114  0DA0  0008               	return
  8115  0DA1                     __end_of_Timer1_DetectAssignCount:	
  8116                           
  8117                           	psect	text38
  8118  0C7C                     __ptext38:	
  8119 ;; *************** function _Timer1_Count10us *****************
  8120 ;; Defined at:
  8121 ;;		line 43 in file "Timer1.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;		None
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;		None
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      void 
  8128 ;; Registers used:
  8129 ;;		wreg
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8135 ;;      Params:         0       0       0       0       0       0
  8136 ;;      Locals:         0       0       0       0       0       0
  8137 ;;      Temps:          0       0       0       0       0       0
  8138 ;;      Totals:         0       0       0       0       0       0
  8139 ;;Total ram usage:        0 bytes
  8140 ;; Hardware stack levels used:    1
  8141 ;; This function calls:
  8142 ;;		Nothing
  8143 ;; This function is called by:
  8144 ;;		_Handler
  8145 ;; This function uses a non-reentrant model
  8146 ;;
  8147                           
  8148                           
  8149                           ;psect for function _Timer1_Count10us
  8150  0C7C                     _Timer1_Count10us:	
  8151                           
  8152                           ;Timer1.c: 45: timesum++;
  8153                           
  8154                           ;incstack = 0
  8155                           ; Regs used in _Timer1_Count10us: [wreg]
  8156  0C7C  3001               	movlw	1
  8157  0C7D  0021               	movlb	1	; select bank1
  8158  0C7E  07A0               	addwf	_timesum^(0+128),f
  8159  0C7F  3000               	movlw	0
  8160  0C80  3DA1               	addwfc	(_timesum+1)^(0+128),f
  8161  0C81  3000               	movlw	0
  8162  0C82  3DA2               	addwfc	(_timesum+2)^(0+128),f
  8163  0C83  3000               	movlw	0
  8164  0C84  3DA3               	addwfc	(_timesum+3)^(0+128),f
  8165  0C85  0008               	return
  8166  0C86                     __end_of_Timer1_Count10us:	
  8167                           
  8168                           	psect	text39
  8169  0C63                     __ptext39:	
  8170 ;; *************** function _I2C_CommonInterrupt *****************
  8171 ;; Defined at:
  8172 ;;		line 58 in file "I2C_Common.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;		None
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;		None
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  1    wreg      void 
  8179 ;; Registers used:
  8180 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8186 ;;      Params:         0       0       0       0       0       0
  8187 ;;      Locals:         0       0       0       0       0       0
  8188 ;;      Temps:          0       0       0       0       0       0
  8189 ;;      Totals:         0       0       0       0       0       0
  8190 ;;Total ram usage:        0 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; Hardware stack levels required when called:    1
  8193 ;; This function calls:
  8194 ;;		_I2C1_Interrupt
  8195 ;;		_I2C2_Interrupt
  8196 ;; This function is called by:
  8197 ;;		_Handler
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           
  8202                           ;psect for function _I2C_CommonInterrupt
  8203  0C63                     _I2C_CommonInterrupt:	
  8204                           
  8205                           ;I2C_Common.c: 60: I2C1_Interrupt();
  8206                           
  8207                           ;incstack = 0
  8208                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8209  0C63  3186  2663  318C   	fcall	_I2C1_Interrupt
  8210                           
  8211                           ;I2C_Common.c: 61: I2C2_Interrupt();
  8212  0C66  3186  260F         	fcall	_I2C2_Interrupt
  8213  0C68  0008               	return
  8214  0C69                     __end_of_I2C_CommonInterrupt:	
  8215                           
  8216                           	psect	text40
  8217  060F                     __ptext40:	
  8218 ;; *************** function _I2C2_Interrupt *****************
  8219 ;; Defined at:
  8220 ;;		line 152 in file "I2C2.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;		None
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;		None
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      void 
  8227 ;; Registers used:
  8228 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8234 ;;      Params:         0       0       0       0       0       0
  8235 ;;      Locals:         0       0       0       0       0       0
  8236 ;;      Temps:          1       0       0       0       0       0
  8237 ;;      Totals:         1       0       0       0       0       0
  8238 ;;Total ram usage:        1 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; This function calls:
  8241 ;;		Nothing
  8242 ;; This function is called by:
  8243 ;;		_I2C_CommonInterrupt
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           
  8248                           ;psect for function _I2C2_Interrupt
  8249  060F                     _I2C2_Interrupt:	
  8250                           
  8251                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  8252                           
  8253                           ;incstack = 0
  8254                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  8255  060F  0020               	movlb	0	; select bank0
  8256  0610  1C14               	btfss	20,0	;volatile
  8257  0611  2E5B               	goto	i1l3097
  8258  0612  0021               	movlb	1	; select bank1
  8259  0613  1C14               	btfss	20,0	;volatile
  8260  0614  2E5B               	goto	i1l3097
  8261                           
  8262                           ;I2C2.c: 155: {
  8263                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  8264  0615  0024               	movlb	4	; select bank4
  8265  0616  1E9C               	btfss	28,5	;volatile
  8266  0617  2E32               	goto	i1l294
  8267                           
  8268                           ;I2C2.c: 157: {
  8269                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  8270  0618  1D1C               	btfss	28,2	;volatile
  8271  0619  2E25               	goto	i1l3073
  8272                           
  8273                           ;I2C2.c: 159: {
  8274                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  8275  061A  1B1E               	btfsc	30,6	;volatile
  8276  061B  2E59               	goto	i1l3095
  8277  061C                     i1l3065:	
  8278                           ;I2C2.c: 161: {
  8279                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  8280                           
  8281  061C  081C               	movf	28,w	;volatile
  8282  061D  3901               	andlw	1
  8283  061E  00F0               	movwf	??_I2C2_Interrupt
  8284  061F  0E1D               	swapf	29,w	;volatile
  8285  0620  3901               	andlw	1
  8286  0621  0470               	iorwf	??_I2C2_Interrupt,w
  8287  0622  1D03               	btfss	3,2
  8288  0623  2E1C               	goto	i1l3065
  8289  0624  2E45               	goto	L10
  8290  0625                     i1l3073:	
  8291                           ;I2C2.c: 166: }
  8292                           ;I2C2.c: 167: }
  8293                           
  8294                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  8295                           
  8296                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  8297                           
  8298                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  8299                           
  8300                           
  8301                           ;I2C2.c: 168: else
  8302                           ;I2C2.c: 169: {
  8303                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  8304  0625  0819               	movf	25,w	;volatile
  8305  0626  00F0               	movwf	??_I2C2_Interrupt
  8306  0627  0021               	movlb	1	; select bank1
  8307  0628  084D               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  8308  0629  0086               	movwf	6
  8309  062A  0187               	clrf	7
  8310  062B  0870               	movf	??_I2C2_Interrupt,w
  8311  062C  0081               	movwf	1
  8312                           
  8313                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  8314  062D  3001               	movlw	1
  8315  062E  00F0               	movwf	??_I2C2_Interrupt
  8316  062F  0870               	movf	??_I2C2_Interrupt,w
  8317  0630  07CD               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  8318  0631  2E57               	goto	i1l3093
  8319  0632                     i1l294:	
  8320                           ;I2C2.c: 173: }
  8321                           ;I2C2.c: 174: }
  8322                           
  8323                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  8324                           
  8325                           
  8326                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  8327  0632  1A9C               	btfsc	28,5	;volatile
  8328  0633  2E59               	goto	i1l3095
  8329                           
  8330                           ;I2C2.c: 176: {
  8331                           ;I2C2.c: 177: SSP2BUF;
  8332  0634  0819               	movf	25,w	;volatile
  8333                           
  8334                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  8335  0635  1D1C               	btfss	28,2	;volatile
  8336  0636  2E52               	goto	i1l3091
  8337                           
  8338                           ;I2C2.c: 180: {
  8339                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  8340  0637  30BC               	movlw	(low (_I2C2_Config| 0))& (0+255)
  8341  0638  00F0               	movwf	??_I2C2_Interrupt
  8342  0639  0870               	movf	??_I2C2_Interrupt,w
  8343  063A  0021               	movlb	1	; select bank1
  8344  063B  00CC               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  8345  063C                     i1l3085:	
  8346                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  8347                           
  8348  063C  0024               	movlb	4	; select bank4
  8349  063D  081C               	movf	28,w	;volatile
  8350  063E  3901               	andlw	1
  8351  063F  00F0               	movwf	??_I2C2_Interrupt
  8352  0640  0E1D               	swapf	29,w	;volatile
  8353  0641  3901               	andlw	1
  8354  0642  0470               	iorwf	??_I2C2_Interrupt,w
  8355  0643  1D03               	btfss	3,2
  8356  0644  2E3C               	goto	i1l3085
  8357  0645                     L10:	
  8358                           
  8359                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  8360  0645  0021               	movlb	1	; select bank1
  8361  0646  084C               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  8362  0647  0086               	movwf	6
  8363  0648  0187               	clrf	7
  8364  0649  0801               	movf	1,w
  8365  064A  0024               	movlb	4	; select bank4
  8366  064B  0099               	movwf	25	;volatile
  8367                           
  8368                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  8369  064C  3001               	movlw	1
  8370  064D  00F0               	movwf	??_I2C2_Interrupt
  8371  064E  0870               	movf	??_I2C2_Interrupt,w
  8372  064F  0021               	movlb	1	; select bank1
  8373  0650  07CC               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  8374                           
  8375                           ;I2C2.c: 186: }
  8376  0651  2E57               	goto	i1l3093
  8377  0652                     i1l3091:	
  8378                           
  8379                           ;I2C2.c: 187: else
  8380                           ;I2C2.c: 188: {
  8381                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  8382  0652  30C4               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  8383  0653  00F0               	movwf	??_I2C2_Interrupt
  8384  0654  0870               	movf	??_I2C2_Interrupt,w
  8385  0655  0021               	movlb	1	; select bank1
  8386  0656  00CD               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  8387  0657                     i1l3093:	
  8388                           
  8389                           ;I2C2.c: 190: }
  8390                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  8391  0657  0024               	movlb	4	; select bank4
  8392  0658  161D               	bsf	29,4	;volatile
  8393  0659                     i1l3095:	
  8394                           
  8395                           ;I2C2.c: 192: }
  8396                           ;I2C2.c: 193: SSP2IF = 0;
  8397  0659  0020               	movlb	0	; select bank0
  8398  065A  1014               	bcf	20,0	;volatile
  8399  065B                     i1l3097:	
  8400                           
  8401                           ;I2C2.c: 194: }
  8402                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  8403  065B  0021               	movlb	1	; select bank1
  8404  065C  1C94               	btfss	20,1	;volatile
  8405  065D  0008               	return
  8406  065E  0020               	movlb	0	; select bank0
  8407  065F  1C94               	btfss	20,1	;volatile
  8408  0660  0008               	return
  8409                           
  8410                           ;I2C2.c: 197: BCL2IF = 0;
  8411  0661  1094               	bcf	20,1	;volatile
  8412  0662  0008               	return
  8413  0663                     __end_of_I2C2_Interrupt:	
  8414                           
  8415                           	psect	text41
  8416  0663                     __ptext41:	
  8417 ;; *************** function _I2C1_Interrupt *****************
  8418 ;; Defined at:
  8419 ;;		line 152 in file "I2C1.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;		None
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;		None
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      void 
  8426 ;; Registers used:
  8427 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8433 ;;      Params:         0       0       0       0       0       0
  8434 ;;      Locals:         0       0       0       0       0       0
  8435 ;;      Temps:          1       0       0       0       0       0
  8436 ;;      Totals:         1       0       0       0       0       0
  8437 ;;Total ram usage:        1 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; This function calls:
  8440 ;;		Nothing
  8441 ;; This function is called by:
  8442 ;;		_I2C_CommonInterrupt
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           
  8447                           ;psect for function _I2C1_Interrupt
  8448  0663                     _I2C1_Interrupt:	
  8449                           
  8450                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  8451                           
  8452                           ;incstack = 0
  8453                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  8454  0663  0020               	movlb	0	; select bank0
  8455  0664  1D91               	btfss	17,3	;volatile
  8456  0665  2EAF               	goto	i1l3047
  8457  0666  0021               	movlb	1	; select bank1
  8458  0667  1D91               	btfss	17,3	;volatile
  8459  0668  2EAF               	goto	i1l3047
  8460                           
  8461                           ;I2C1.c: 155: {
  8462                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  8463  0669  0024               	movlb	4	; select bank4
  8464  066A  1E94               	btfss	20,5	;volatile
  8465  066B  2E86               	goto	i1l157
  8466                           
  8467                           ;I2C1.c: 157: {
  8468                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  8469  066C  1D14               	btfss	20,2	;volatile
  8470  066D  2E79               	goto	i1l3023
  8471                           
  8472                           ;I2C1.c: 159: {
  8473                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  8474  066E  1B16               	btfsc	22,6	;volatile
  8475  066F  2EAD               	goto	i1l3045
  8476  0670                     i1l3015:	
  8477                           ;I2C1.c: 161: {
  8478                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  8479                           
  8480  0670  0814               	movf	20,w	;volatile
  8481  0671  3901               	andlw	1
  8482  0672  00F0               	movwf	??_I2C1_Interrupt
  8483  0673  0E15               	swapf	21,w	;volatile
  8484  0674  3901               	andlw	1
  8485  0675  0470               	iorwf	??_I2C1_Interrupt,w
  8486  0676  1D03               	btfss	3,2
  8487  0677  2E70               	goto	i1l3015
  8488  0678  2E99               	goto	L11
  8489  0679                     i1l3023:	
  8490                           ;I2C1.c: 166: }
  8491                           ;I2C1.c: 167: }
  8492                           
  8493                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  8494                           
  8495                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  8496                           
  8497                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  8498                           
  8499                           
  8500                           ;I2C1.c: 168: else
  8501                           ;I2C1.c: 169: {
  8502                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  8503  0679  0811               	movf	17,w	;volatile
  8504  067A  00F0               	movwf	??_I2C1_Interrupt
  8505  067B  0021               	movlb	1	; select bank1
  8506  067C  0860               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  8507  067D  0086               	movwf	6
  8508  067E  0187               	clrf	7
  8509  067F  0870               	movf	??_I2C1_Interrupt,w
  8510  0680  0081               	movwf	1
  8511                           
  8512                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  8513  0681  3001               	movlw	1
  8514  0682  00F0               	movwf	??_I2C1_Interrupt
  8515  0683  0870               	movf	??_I2C1_Interrupt,w
  8516  0684  07E0               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  8517  0685  2EAB               	goto	i1l3043
  8518  0686                     i1l157:	
  8519                           ;I2C1.c: 173: }
  8520                           ;I2C1.c: 174: }
  8521                           
  8522                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  8523                           
  8524                           
  8525                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  8526  0686  1A94               	btfsc	20,5	;volatile
  8527  0687  2EAD               	goto	i1l3045
  8528                           
  8529                           ;I2C1.c: 176: {
  8530                           ;I2C1.c: 177: SSP1BUF;
  8531  0688  0811               	movf	17,w	;volatile
  8532                           
  8533                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  8534  0689  1D14               	btfss	20,2	;volatile
  8535  068A  2EA6               	goto	i1l3041
  8536                           
  8537                           ;I2C1.c: 180: {
  8538                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  8539  068B  30CF               	movlw	(low (_I2C1_Config| 0))& (0+255)
  8540  068C  00F0               	movwf	??_I2C1_Interrupt
  8541  068D  0870               	movf	??_I2C1_Interrupt,w
  8542  068E  0021               	movlb	1	; select bank1
  8543  068F  00DF               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  8544  0690                     i1l3035:	
  8545                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  8546                           
  8547  0690  0024               	movlb	4	; select bank4
  8548  0691  0814               	movf	20,w	;volatile
  8549  0692  3901               	andlw	1
  8550  0693  00F0               	movwf	??_I2C1_Interrupt
  8551  0694  0E15               	swapf	21,w	;volatile
  8552  0695  3901               	andlw	1
  8553  0696  0470               	iorwf	??_I2C1_Interrupt,w
  8554  0697  1D03               	btfss	3,2
  8555  0698  2E90               	goto	i1l3035
  8556  0699                     L11:	
  8557                           
  8558                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  8559  0699  0021               	movlb	1	; select bank1
  8560  069A  085F               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  8561  069B  0086               	movwf	6
  8562  069C  0187               	clrf	7
  8563  069D  0801               	movf	1,w
  8564  069E  0024               	movlb	4	; select bank4
  8565  069F  0091               	movwf	17	;volatile
  8566                           
  8567                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  8568  06A0  3001               	movlw	1
  8569  06A1  00F0               	movwf	??_I2C1_Interrupt
  8570  06A2  0870               	movf	??_I2C1_Interrupt,w
  8571  06A3  0021               	movlb	1	; select bank1
  8572  06A4  07DF               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  8573                           
  8574                           ;I2C1.c: 186: }
  8575  06A5  2EAB               	goto	i1l3043
  8576  06A6                     i1l3041:	
  8577                           
  8578                           ;I2C1.c: 187: else
  8579                           ;I2C1.c: 188: {
  8580                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  8581  06A6  30D7               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  8582  06A7  00F0               	movwf	??_I2C1_Interrupt
  8583  06A8  0870               	movf	??_I2C1_Interrupt,w
  8584  06A9  0021               	movlb	1	; select bank1
  8585  06AA  00E0               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  8586  06AB                     i1l3043:	
  8587                           
  8588                           ;I2C1.c: 190: }
  8589                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  8590  06AB  0024               	movlb	4	; select bank4
  8591  06AC  1615               	bsf	21,4	;volatile
  8592  06AD                     i1l3045:	
  8593                           
  8594                           ;I2C1.c: 192: }
  8595                           ;I2C1.c: 193: SSP1IF = 0;
  8596  06AD  0020               	movlb	0	; select bank0
  8597  06AE  1191               	bcf	17,3	;volatile
  8598  06AF                     i1l3047:	
  8599                           
  8600                           ;I2C1.c: 194: }
  8601                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  8602  06AF  0021               	movlb	1	; select bank1
  8603  06B0  1D92               	btfss	18,3	;volatile
  8604  06B1  0008               	return
  8605  06B2  0020               	movlb	0	; select bank0
  8606  06B3  1D92               	btfss	18,3	;volatile
  8607  06B4  0008               	return
  8608                           
  8609                           ;I2C1.c: 197: BCL1IF = 0;
  8610  06B5  1192               	bcf	18,3	;volatile
  8611  06B6  0008               	return
  8612  06B7                     __end_of_I2C1_Interrupt:	
  8613                           
  8614                           	psect	text42
  8615  0E32                     __ptext42:	
  8616 ;; *************** function _CPSx_Read *****************
  8617 ;; Defined at:
  8618 ;;		line 29 in file "mTouch.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;		None
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;		None
  8623 ;; Return value:  Size  Location     Type
  8624 ;;                  1    wreg      void 
  8625 ;; Registers used:
  8626 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8632 ;;      Params:         0       0       0       0       0       0
  8633 ;;      Locals:         0       0       0       0       0       0
  8634 ;;      Temps:          1       0       0       0       0       0
  8635 ;;      Totals:         1       0       0       0       0       0
  8636 ;;Total ram usage:        1 bytes
  8637 ;; Hardware stack levels used:    1
  8638 ;; This function calls:
  8639 ;;		Nothing
  8640 ;; This function is called by:
  8641 ;;		_Handler
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           
  8646                           ;psect for function _CPSx_Read
  8647  0E32                     _CPSx_Read:	
  8648                           
  8649                           ;mTouch.c: 31: static uint8_t channel=0;
  8650                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  8651                           
  8652                           ;incstack = 0
  8653                           ; Regs used in _CPSx_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  8654  0E32  0879               	movf	CPSx_Read@channel,w
  8655  0E33  3EAB               	addlw	(low (_CPS_Data| 0))& (0+255)
  8656  0E34  0086               	movwf	6
  8657  0E35  0187               	clrf	7
  8658  0E36  0801               	movf	1,w
  8659  0E37  00F0               	movwf	??_CPSx_Read
  8660  0E38  0879               	movf	CPSx_Read@channel,w
  8661  0E39  3EAE               	addlw	(low (_CPS_PreData| 0))& (0+255)
  8662  0E3A  0086               	movwf	6
  8663  0E3B  0187               	clrf	7
  8664  0E3C  0870               	movf	??_CPSx_Read,w
  8665  0E3D  0081               	movwf	1
  8666                           
  8667                           ;mTouch.c: 34: CPSCON0 &= ~(0x01<<7);;
  8668  0E3E  307F               	movlw	127
  8669  0E3F  00F0               	movwf	??_CPSx_Read
  8670  0E40  0870               	movf	??_CPSx_Read,w
  8671  0E41  0020               	movlb	0	; select bank0
  8672  0E42  059E               	andwf	30,f	;volatile
  8673                           
  8674                           ;mTouch.c: 35: CPS_Data[channel] = TMR0;
  8675  0E43  0815               	movf	21,w	;volatile
  8676  0E44  00F0               	movwf	??_CPSx_Read
  8677  0E45  0879               	movf	CPSx_Read@channel,w
  8678  0E46  3EAB               	addlw	(low (_CPS_Data| 0))& (0+255)
  8679  0E47  0086               	movwf	6
  8680  0E48  0187               	clrf	7
  8681  0E49  0870               	movf	??_CPSx_Read,w
  8682  0E4A  0081               	movwf	1
  8683                           
  8684                           ;mTouch.c: 36: TMR0 = 0x00;
  8685  0E4B  0195               	clrf	21	;volatile
  8686                           
  8687                           ;mTouch.c: 37: CPSCON0 |= (0x01<<7);;
  8688  0E4C  179E               	bsf	30,7	;volatile
  8689                           
  8690                           ;mTouch.c: 39: if(channel++>2)channel = 0;
  8691  0E4D  0879               	movf	CPSx_Read@channel,w
  8692  0E4E  0AF9               	incf	CPSx_Read@channel,f
  8693  0E4F  00F0               	movwf	??_CPSx_Read
  8694  0E50  3003               	movlw	3
  8695  0E51  0270               	subwf	??_CPSx_Read,w
  8696  0E52  1803               	btfsc	3,0
  8697  0E53  01F9               	clrf	CPSx_Read@channel
  8698                           
  8699                           ;mTouch.c: 40: CPSCON1 = (uint8_t)channel;
  8700  0E54  0879               	movf	CPSx_Read@channel,w
  8701  0E55  009F               	movwf	31	;volatile
  8702  0E56  0008               	return
  8703  0E57                     __end_of_CPSx_Read:	
  8704                           
  8705                           	psect	text43
  8706  0D73                     __ptext43:	
  8707 ;; *************** function _Buzzer_Handler *****************
  8708 ;; Defined at:
  8709 ;;		line 44 in file "Buzzer.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;		None
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;		None
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  1    wreg      void 
  8716 ;; Registers used:
  8717 ;;		wreg, status,2, status,0, pclath, cstack
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8723 ;;      Params:         0       0       0       0       0       0
  8724 ;;      Locals:         0       0       0       0       0       0
  8725 ;;      Temps:          0       0       0       0       0       0
  8726 ;;      Totals:         0       0       0       0       0       0
  8727 ;;Total ram usage:        0 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:    1
  8730 ;; This function calls:
  8731 ;;		_Buzzer_SetDuty
  8732 ;; This function is called by:
  8733 ;;		_Handler
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           
  8738                           ;psect for function _Buzzer_Handler
  8739  0D73                     _Buzzer_Handler:	
  8740                           
  8741                           ;Buzzer.c: 46: if(count>0)
  8742                           
  8743                           ;incstack = 0
  8744                           ; Regs used in _Buzzer_Handler: [wreg+status,2+status,0+pclath+cstack]
  8745  0D73  0021               	movlb	1	; select bank1
  8746  0D74  083A               	movf	_count^(0+128),w
  8747  0D75  043B               	iorwf	(_count+1)^(0+128),w
  8748  0D76  1903               	btfsc	3,2
  8749  0D77  2D83               	goto	i1l3409
  8750                           
  8751                           ;Buzzer.c: 47: {
  8752                           ;Buzzer.c: 48: count--;
  8753  0D78  3001               	movlw	1
  8754  0D79  02BA               	subwf	_count^(0+128),f
  8755  0D7A  3000               	movlw	0
  8756  0D7B  3BBB               	subwfb	(_count+1)^(0+128),f
  8757                           
  8758                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  8759  0D7C  30FF               	movlw	255
  8760  0D7D  00F0               	movwf	Buzzer_SetDuty@duty
  8761  0D7E  3001               	movlw	1
  8762  0D7F  00F1               	movwf	Buzzer_SetDuty@duty+1
  8763  0D80  318D  25BC         	fcall	_Buzzer_SetDuty
  8764                           
  8765                           ;Buzzer.c: 50: }
  8766  0D82  0008               	return
  8767  0D83                     i1l3409:	
  8768                           
  8769                           ;Buzzer.c: 51: else
  8770                           ;Buzzer.c: 52: {
  8771                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  8772  0D83  3000               	movlw	0
  8773  0D84  00F0               	movwf	Buzzer_SetDuty@duty
  8774  0D85  00F1               	movwf	Buzzer_SetDuty@duty+1
  8775  0D86  318D  25BC         	fcall	_Buzzer_SetDuty
  8776  0D88  0008               	return
  8777  0D89                     __end_of_Buzzer_Handler:	
  8778                           
  8779                           	psect	text44
  8780  0DBC                     __ptext44:	
  8781 ;; *************** function _Buzzer_SetDuty *****************
  8782 ;; Defined at:
  8783 ;;		line 31 in file "Buzzer.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  duty            2    0[COMMON] unsigned int 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1    wreg      void 
  8790 ;; Registers used:
  8791 ;;		wreg, status,2, status,0
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8797 ;;      Params:         2       0       0       0       0       0
  8798 ;;      Locals:         1       0       0       0       0       0
  8799 ;;      Temps:          2       0       0       0       0       0
  8800 ;;      Totals:         5       0       0       0       0       0
  8801 ;;Total ram usage:        5 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; This function calls:
  8804 ;;		Nothing
  8805 ;; This function is called by:
  8806 ;;		_Buzzer_Handler
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           
  8811                           ;psect for function _Buzzer_SetDuty
  8812  0DBC                     _Buzzer_SetDuty:	
  8813                           
  8814                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  8815                           
  8816                           ;incstack = 0
  8817                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  8818  0DBC  0025               	movlb	5	; select bank5
  8819  0DBD  081A               	movf	26,w	;volatile
  8820  0DBE  39CF               	andlw	207
  8821  0DBF  00F2               	movwf	??_Buzzer_SetDuty
  8822  0DC0  0872               	movf	??_Buzzer_SetDuty,w
  8823  0DC1  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  8824                           
  8825                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  8826  0DC2  0871               	movf	Buzzer_SetDuty@duty+1,w
  8827  0DC3  00F3               	movwf	??_Buzzer_SetDuty+1
  8828  0DC4  0870               	movf	Buzzer_SetDuty@duty,w
  8829  0DC5  00F2               	movwf	??_Buzzer_SetDuty
  8830  0DC6  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8831  0DC7  0CF2               	rrf	??_Buzzer_SetDuty,f
  8832  0DC8  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8833  0DC9  0CF2               	rrf	??_Buzzer_SetDuty,f
  8834  0DCA  0872               	movf	??_Buzzer_SetDuty,w
  8835  0DCB  0098               	movwf	24	;volatile
  8836                           
  8837                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  8838  0DCC  0870               	movf	Buzzer_SetDuty@duty,w
  8839  0DCD  3903               	andlw	3
  8840  0DCE  00F2               	movwf	??_Buzzer_SetDuty
  8841  0DCF  3003               	movlw	3
  8842  0DD0                     u253_25:	
  8843  0DD0  35F2               	lslf	??_Buzzer_SetDuty,f
  8844  0DD1  3EFF               	addlw	-1
  8845  0DD2  1D03               	skipz
  8846  0DD3  2DD0               	goto	u253_25
  8847  0DD4  3572               	lslf	??_Buzzer_SetDuty,w
  8848  0DD5  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  8849  0DD6  009A               	movwf	26	;volatile
  8850  0DD7  0008               	return
  8851  0DD8                     __end_of_Buzzer_SetDuty:	
  8852  007E                     btemp	set	126	;btemp
  8853  007E                     int$flags	set	126
  8854  007E                     wtemp0	set	126


Data Sizes:
    Strings     334
    Constant    30
    Data        90
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     80      80
    BANK1            80      3      71
    BANK2            80      0      60
    BANK3            80      0      30
    BANK4            48      0       0

Pointer List with Targets:

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_54(CODE[7]), STR_53(CODE[6]), STR_52(CODE[6]), STR_51(CODE[7]), 
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[4]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK1[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_54(CODE[7]), STR_53(CODE[6]), STR_52(CODE[6]), STR_51(CODE[7]), 
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[4]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_49(CODE[7]), STR_48(CODE[7]), STR_47(CODE[7]), STR_46(CODE[7]), 
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[7]), STR_42(CODE[6]), 
		 -> STR_41(CODE[6]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[5]), 
		 -> STR_37(CODE[5]), STR_36(CODE[5]), STR_35(CODE[5]), 

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_34(CODE[8]), STR_33(CODE[8]), STR_32(CODE[8]), STR_31(CODE[7]), 
		 -> STR_30(CODE[7]), STR_29(CODE[7]), STR_28(CODE[7]), STR_27(CODE[7]), 
		 -> STR_26(CODE[6]), STR_25(CODE[6]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 

    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[6]), 
		 -> STR_15(CODE[5]), STR_14(CODE[6]), STR_13(CODE[5]), STR_12(CODE[6]), 
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[5]), STR_8(CODE[6]), 
		 -> STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[5]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK1[2]), ConfigReg(COMMON[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK1[2]), ConfigReg(COMMON[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK1[2]), ConfigReg(COMMON[1]), 

    S46$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S46$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Handler->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _mTouch_Read->_Buzzer_MiliSecond
    _mTouch_Init->_mTouch_PortInit
    _Timer1_GetCPM->___lldiv
    ___lldiv->___lmul
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_xprintf

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   11366
                                              2 BANK1      1     1      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                     _LCD_CursorHome
                           _LCD_Init
                      _Timer1_GetCPM
                        _Timer1_Init
                        _Timer4_Init
                        _Timer6_Init
                        _mTouch_Init
                        _mTouch_Read
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                              8     2      6    6723
                                             74 BANK0      6     0      6
                                              0 BANK1      2     2      0
                      _Timer1_GetCPM (ARG)
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    5837
                                             26 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     515
                                              6 BANK0      2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     389
                                              4 BANK0      2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     263
                                              3 BANK0      1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _mTouch_Read                                          6     6      0     263
                                              2 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        2     0      2     993
                                             26 BANK0      2     0      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     444
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     549
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              4 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                             16 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              8 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              5 BANK0      6     3      3
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0     195
                                              5 COMMON     1     1      0
                     _Buzzer_Handler
                          _CPSx_Read
                _I2C_CommonInterrupt
                   _Timer1_Count10us
           _Timer1_DetectAssignCount
                     _Timer4_Handler
                     _Timer6_Handler
           _mTouch_IntervalDecrement
 ---------------------------------------------------------------------------------
 (8) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer6_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer4_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer1_DetectAssignCount                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer1_Count10us                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CPSx_Read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Buzzer_Handler                                       0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (9) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Timer1_Init
   _Timer4_Init
   _Timer6_Init
   _mTouch_Init
     _mTouch_PortInit
   _mTouch_Read
     _Buzzer_MiliSecond
   _xprintf
     _Timer1_GetCPM (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _xvprintf (ARG)
       ___lldiv
         ___lmul (ARG)
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Handler
     _Buzzer_SetDuty
   _CPSx_Read
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Count10us
   _Timer1_DetectAssignCount
   _Timer4_Handler
   _Timer6_Handler
   _mTouch_IntervalDecrement

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      FC       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      3      47       8       88.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      1E      12       37.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      FC      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat May 20 04:36:52 2017

                   _LCD_CursorHome 0CDF                        __CFG_CP$OFF 0000  
                               l74 079E                                 l91 04A9  
                               l78 07CF                     I2C2_Transmit@i 0025  
            ??_I2C_CommonInterrupt 0071                ___wmul@multiplicand 0022  
                              l100 04D2                                l211 075A  
                              l109 04EF                                l215 078B  
                              l228 0412                                l237 043B  
                              l246 0458                                l338 07FD  
                              l707 00D7                                l725 0172  
                              l748 0229                                l692 005B  
                              l970 0DE1                                _GIE 005F  
                              _PR2 001B                                _PR4 0416  
                     __CFG_CPD$OFF 0000                                _PR6 041D  
                     __CFG_BORV$LO 0000                                wreg 0009  
                       _Basic_Init 0D49                       __CFG_LVP$OFF 0000  
                  __end_of_LCD_Put 0C7C         ??_Timer1_DetectAssignCount 0070  
                             l4303 04B5                               l4321 0511  
                             l4305 04B9                               l4307 04E0  
                             l4403 045E                               l4411 047D  
                             l4261 07B3                               l4341 0764  
                             l4317 04F5                               l4325 0514  
                             l4405 0475                               l4413 0486  
                             l4501 0E8F                               l5301 01AA  
                             l5221 0089                               l4263 07B5  
                             l4255 07A8                               l4319 050C  
                             l4327 051D                               l4407 047A  
                             l5311 01CD                               l5303 01BA  
                             l5231 00A0                               l5207 0074  
                             l4273 07C4                               l4281 048C  
                             l4505 0EA0                               l5321 0207  
                             l5241 00CF                               l4347 076F  
                             l4363 0782                               l4283 049A  
                             l4507 0EA8                               l4427 0DDB  
                             l4277 07C6                               l4349 0771  
                             l4293 04BD                               l4445 06C8  
                             l5325 020F                               l5309 01CB  
                             l5237 00C7                               l5229 009D  
                             l4359 0780                               l4391 0422  
                             l4367 03F5                               l4455 06F6  
                             l4447 06D6                               l4471 0FD4  
                             l5183 0EC9                               l5175 0EB9  
                             l5351 025E                               l5343 023F  
                             l5271 0123                               l5263 00FF  
                             l5423 0542                               l4393 0449  
                             l4369 0403                               l5193 0D60  
                             l5345 0248                               l5337 0237  
                             l5281 014C                               l5265 010D  
                             l5257 00F2                               l5249 00E4  
                             l5441 057E                               l4491 07E6  
                             l4379 0426                               l4459 0701  
                             l4475 0FEC                               l5355 0270  
                             l5347 024C                               l5283 014E  
                             l5275 0127                               l5267 0111  
                             l5291 015A                               l5443 0587  
                             l5435 0560                               l4389 041E  
                             l4469 0FC6                               l5357 0274  
                             l5285 0150                               l5277 013C  
                             l5437 0564                               l5429 0553  
                             l4495 07F4                               l4479 0FF7  
                             l5287 0155                               l5279 0149  
                             l5439 0575                               l5447 0590  
                             l4489 07D9                               l5297 018C  
                             l4499 0E82                               l5299 01A1  
                             l4685 0EE1                               l4689 0EEB  
                             l4873 0712                               l4885 074C  
                             STR_1 03EB                               STR_2 02A3  
                             STR_3 02D0                               STR_4 02AE  
                             STR_5 03D2                               STR_6 0382  
                             STR_7 03D7                               STR_8 0388  
                             STR_9 03DC                               u5225 0732  
                             _PEIE 005E                               u6117 05A9  
                             u6127 05C2                               u4385 0F8A  
                             u6137 05D7                               u5185 0EEC  
                             u6147 05EC                               u5195 0EF3  
                             u6157 0CF9                               u4805 06F7  
                             u4725 0DE2                               u6167 0CE9  
                             u4735 0DE7                               u6177 0F83  
                             u4835 0FC9                               u4765 06CB  
                             u4855 0FE2                               u4785 06D7  
                             u4865 0FED                               u5905 025C  
                             u4795 06EB                               u5925 0282  
                             u5775 0121                               u5785 0135  
            Buzzer_MiliSecond@time 0020                               _TMR0 0015  
                             _TMR1 0016                               _TMR2 001A  
                             _TMR4 0415                               _TMR6 041C  
                  ??_I2C1_Transmit 0022                       __CFG_WRT$OFF 0000  
                             _main 0520                               _mode 00B8  
                 __end_of_I2C_Init 0800                               fsr0h 0005  
                             fsr1h 0007                               indf0 0000  
                             fsr0l 0004                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    __CFG_BOREN$ON 0000                    ??_I2C2_Transmit 0022  
                 ??_I2C1_Interrupt 0070                               start 0031  
                    __CFG_IESO$OFF 0000                    __end_of_Handler 0031  
           __end_of_LCD_CursorHome 0CEF                      _LCD_WriteData 0F80  
                    __CFG_MCLRE$ON 0000                   ??_I2C2_Interrupt 0070  
               __size_of_CPSx_Read 0025           __end_of_LCD_DisplayClear 0CFF  
            __size_of_I2C_Transmit 002B                   __end_of_LCD_Init 060F  
                    __CFG_PLLEN$ON 0000                        LCD_Put@word 0023  
                            ?_main 0070                              STR_10 038E  
                            STR_11 03E1                              STR_12 0394  
                            STR_20 03B4                              STR_13 03E6  
                            STR_21 03AF                              STR_14 039A  
                            STR_30 02E6                              STR_22 03BE  
                            STR_15 03C3                              STR_31 032C  
                            STR_23 0370                              STR_40 035E  
                            STR_16 0376                              STR_32 02C8  
                            STR_24 0346                              STR_41 0364  
                            STR_17 03C8                              STR_33 02C0  
                            STR_25 0352                      __CFG_WDTE$OFF 0000  
                            STR_50 03EF                              STR_42 034C  
                            STR_18 037C                              STR_34 02B8  
                            STR_26 036A                              STR_51 02D8  
                            STR_43 02FB                              STR_35 03A0  
                            STR_19 03CD                              STR_27 0317  
                            STR_52 033A                              STR_44 0325  
                            STR_36 03A5                              STR_28 0310  
                            STR_53 0340                              STR_45 0302  
                            STR_37 03B9                              STR_29 031E  
                            STR_54 02DF                              STR_46 0309  
                            STR_38 03AA                              STR_47 0333  
                            STR_39 0358                              STR_48 02ED  
                            STR_49 02F4                    __end_of___lldiv 070A  
                            _T1CON 0018                    __end_of___llmod 1000  
                            _T2CON 001C                              _LATA3 0863  
                            _LATA4 0864                              _LATA6 0866  
                            _T4CON 0417                              _T6CON 041E  
                            i1l157 0686                              i1l294 0632  
                            i1l647 0D05                              i1l648 0D0A  
                            _PORTA 000C                              _PORTB 000D  
                            _TRISA 008C                              _TRISB 008D  
                I2C2_Transmit@size 0021                ___lmul@multiplicand 0024  
                    __CFG_PWRTE$ON 0000                     __CFG_FCMEN$OFF 0000  
                            _count 00BA                              _errno 00B4  
                    ??_Buzzer_Init 0020                              _xputc 0EAA  
                            _xputs 0D5E              __end_of_Timer1_GetCPM 0F44  
                            pclath 000A                              status 0003  
                            wtemp0 007E                  _Buzzer_MiliSecond 0CD1  
                  __end_of_xprintf 0D49                       _I2C_Transmit 0E7F  
                   ?_LCD_WriteData 0070                 ?_Buzzer_MiliSecond 0020  
                 ??_DAC_Initialize 0030                    ?_LCD_CursorHome 0070  
                  __initialization 0033                       __end_of_main 05A0  
              ??_Buzzer_MiliSecond 0022                             ??_main 00E6  
                        ??_LCD_Put 0024                   CPSx_Read@channel 0079  
                      ?_Basic_Init 0070                             _BCL1IE 0493  
                           _BCL1IF 0093                             _BCL2IE 04A1  
                           _BCL2IF 00A1                   ___llmod@dividend 0024  
             __size_of_mTouch_Init 0013               __size_of_mTouch_Read 0044  
                           _CCPR2L 0298                             _ANSELA 018C  
                           _ANSELB 018D                             _T1GCON 0019  
                __end_of_CPSx_Read 0E57                             ?_xputc 0070  
                           ?_xputs 0070                             i1l3015 0670  
                           i1l3023 0679                             i1l3041 06A6  
                           i1l2225 0C8F                             i1l3043 06AB  
                           i1l3035 0690                             i1l3045 06AD  
                           i1l3047 06AF                             i1l3065 061C  
                           i1l3073 0625                             i1l2257 0C9A  
                           i1l3091 0652                             i1l3093 0657  
                           i1l3085 063C                             i1l3095 0659  
                           i1l3409 0D83                             i1l3097 065B  
                           i1l3611 0D9F                 I2C2_Transmit@i_316 0026  
                  _mTouch_Interval 00A8                             i1l3991 002A  
                           i1l3987 0021                             i1l3979 0012  
        __end_of_Buzzer_MiliSecond 0CDF                             u253_25 0DD0  
                           _OSCCON 0099                 I2C2_Transmit@pData 0020  
                   _Timer4_Handler 0C86                             _TMR1IE 0488  
                           _TMR1IF 0088                          ??_Handler 0075  
                           _TMR4IE 0499                             _TMR4IF 0099  
                           _TMR6IE 049B                             _TMR6IF 009B  
                           _TMR1ON 00C0                             _SSP1IE 048B  
                           _SSP1IF 008B                             _SSP2IE 04A0  
                           _SSP2IF 00A0           _mTouch_IntervalDecrement 0CFF  
                   _Timer6_Handler 0C91                    _mTouch_PortInit 0CB6  
                    ??_Timer1_Init 0020                      ??_Timer4_Init 0020  
              __end_of_Buzzer_Init 0E7F                      ??_Timer6_Init 0020  
                ?_Timer1_Count10us 0070                             ___lmul 0ED8  
                           ___wmul 0DD8                          ??___lldiv 0034  
                        ??___llmod 0028                 ??_Timer1_Count10us 0070  
                           _outptr 0078                   I2C_Transmit@I2Cx 002E  
                        ?_I2C_Init 0025                   I2C_Transmit@size 002A  
           __end_of_Timer4_Handler 0C91                             xputc@c 0025  
                        ??_xprintf 00E4            __end_of__initialization 0057  
           __end_of_Timer6_Handler 0C9C                          ?_LCD_Init 0070  
                  ??_LCD_WriteData 0020                   __end_of_xvprintf 0285  
                       _VoltageReg 00E2                 Buzzer_SetDuty@duty 0070  
                   __pcstackCOMMON 0070                __size_of_Basic_Init 0015  
                     __pidataBANK2 0F44                       __pidataBANK3 0DF4  
              __end_of_Timer1_Init 0DBC                __end_of_Timer4_Init 0D23  
                    __end_of_xputc 0ED8                      __end_of_xputs 0D73  
              __end_of_Timer6_Init 0CD1          Buzzer_SetDuty@CCP2CON_Pre 0074  
                       ??_I2C_Init 0028                I2C1_Transmit@result 0027  
          __size_of_Buzzer_Handler 0016                    ?_Timer4_Handler 0070  
          __end_of_mTouch_PortInit 0CC3                            ??_xputc 0024  
                          ??_xputs 0026                         __pbssBANK1 00A0  
       __size_of_Buzzer_MiliSecond 000E                        _Buzzer_Init 0E57  
                       ??_LCD_Init 0024                    ?_Timer6_Handler 0070  
          __size_of_Buzzer_SetDuty 001C                      _DAC_DataTable 0285  
                     I2C_Init@I2Cx 002A        __end_of_I2C_CommonInterrupt 0C69  
                     I2C_Init@mode 0026                         __pmaintext 0520  
                          ?___lmul 0020                            ?___wmul 0020  
                       __pintentry 0004                            _CCP2CON 029A  
                ?_LCD_DisplayClear 0070                     ___lmul@product 0028  
                          _APFCON0 011D                            _APFCON1 011E  
                          _CCPTMRS 029E                 ??_LCD_DisplayClear 0023  
                          _CPSCON0 001E                            _CPSCON1 001F  
                          _LCD_Put 0C75                       _xvprintf$765 0051  
                     _xvprintf$766 0055                       _xvprintf$767 0057  
                          _SSP1ADD 0212                            _SSP2ADD 021A  
                          _SSP1BUF 0211                            _SSP2BUF 0219  
                          _SSP1MSK 0213                            _SSP2MSK 021B  
              I2C2_Transmit@result 0027                   ??_LCD_CursorHome 0023  
                          _Handler 0004              __end_of_I2C1_Transmit 0520  
            __end_of_I2C2_Transmit 0489                        _Timer1_Init 0DA1  
                      _Timer4_Init 0D10                        _Timer6_Init 0CC3  
__size_of_Timer1_DetectAssignCount 0018                    __size_of___lmul 0030  
        ?_Timer1_DetectAssignCount 0070                            ___lldiv 06B7  
                  __size_of___wmul 001C                            ___llmod 0FBD  
                  __CFG_STVREN$OFF 0000                            __ptext1 0D36  
                          __ptext2 005B                            __ptext3 0D5E  
                          __ptext4 0EAA                            __ptext5 0C75  
                          __ptext6 0DD8                            __ptext7 0FBD  
                          __ptext8 070A                            __ptext9 0CD1  
                  mTouch_Read@chan 0027                          ?_xvprintf 003A  
                     ??_Basic_Init 0020         ??_mTouch_IntervalDecrement 0070  
                          _timesum 00A0                            clrloop0 0C6A  
             end_of_initialization 0057                   ?_mTouch_PortInit 0070  
                          _xprintf 0D36                      ?_I2C1_PinInit 0070  
                          init_ram 0C6F                            initloop 0C70  
                    ?_I2C2_PinInit 0070                        _I2C1_Config 00CF  
                        _CPSx_Read 0E32                        _I2C2_Config 00BC  
                    ?_I2C1_Setting 0021                    ___lldiv@divisor 002C  
                    ?_I2C2_Setting 0021                    ___lldiv@counter 0039  
                I2C_Transmit@pData 0029                 __end_of_Basic_Init 0D5E  
                 _DAC_VoltageTable 013E                       __pstringtext 0285  
          __size_of_I2C1_Interrupt 0054             __size_of_Timer1_GetCPM 003C  
                 __CFG_FOSC$INTOSC 0000                      ??_mTouch_Init 0021  
                    ??_mTouch_Read 0022                         ??_xvprintf 003D  
          __size_of_I2C2_Interrupt 0054          __size_of_Timer1_Count10us 000A  
                __size_of_I2C_Init 002A                I2C1_Setting@address 0024  
                   _Buzzer_Handler 0D73                     ??_I2C1_PinInit 0020  
                   ??_I2C2_PinInit 0020                     _Buzzer_SetDuty 0DBC  
                   ??_I2C1_Setting 0023                         ?_CPSx_Read 0070  
                   ??_I2C2_Setting 0023                      _H7826_01_Gain 01A0  
                __size_of_LCD_Init 006F                     __end_of___lmul 0F08  
                   __end_of___wmul 0DF4                          _ConfigReg 007A  
          __size_of_DAC_Initialize 0020                   ??_Timer4_Handler 0070  
              start_initialization 0033             __end_of_Buzzer_Handler 0D89  
                 ??_Timer6_Handler 0070               I2C1_Transmit@address 0024  
                        _MemoryReg 00B1             __end_of_Buzzer_SetDuty 0DD8  
                     ?_Buzzer_Init 0070                __end_of_mTouch_Init 0D36  
              __end_of_mTouch_Read 074E                      _Timer1_GetCPM 0F08  
              I2C2_Setting@address 0024                    ___llmod@divisor 0020  
                  ___llmod@counter 0029              __end_of_LCD_WriteData 0FBD  
                         ??___lmul 0028                           ??___wmul 0024  
                      __pdataBANK2 0120                        __pdataBANK3 01A0  
                I2C1_Setting@Speed 0022                           ?_LCD_Put 0023  
                      __pbssCOMMON 0076                          ___latbits 0001  
                    __pcstackBANK0 0020                      __pcstackBANK1 00E4  
 __end_of_mTouch_IntervalDecrement 0D10                    ?_Buzzer_Handler 0070  
               I2C1_Transmit@i_172 0026                 I2C1_Transmit@pData 0020  
        __size_of_LCD_DisplayClear 0010                    ?_Buzzer_SetDuty 0070  
                   ?_Timer1_GetCPM 003A   __end_of_Timer1_DetectAssignCount 0DA1  
                  I2C_Init@address 0025                           ?_Handler 0070  
                      ??_CPSx_Read 0070                      ?_I2C_Transmit 0028  
                    I2C_Init@Speed 0027                       ?_Timer1_Init 0070  
                     ?_Timer4_Init 0070                       ?_Timer6_Init 0070  
                         ?___lldiv 002C                           ?___llmod 0020  
                   _I2C1_Interrupt 0663               __end_of_I2C1_PinInit 0CA9  
     __size_of_I2C_CommonInterrupt 0006               __end_of_I2C2_PinInit 0CB6  
             __end_of_I2C1_Setting 07D6                           _I2C_Init 07D6  
             __end_of_I2C2_Setting 0792                     _I2C2_Interrupt 060F  
                       _H7826_Gain 0120                        _mTouch_Init 0D23  
                      _mTouch_Read 070A                   _Timer1_Count10us 0C7C  
                __size_of_xvprintf 022A                           ?_xprintf 006A  
                   __size_of_xputc 002E                     __size_of_xputs 0015  
                         _LCD_Init 05A0                     ___wmul@product 0024  
                         _CPS_Data 00AB                     ??_I2C_Transmit 002B  
                        clear_ram0 0C69             __end_of_I2C1_Interrupt 06B7  
                         _SSP1CON1 0215                           _SSP1CON2 0216  
             I2C2_Transmit@address 0024                           _SSP2CON1 021D  
                         _SSP2CON2 021E                           _SSP1STAT 0214  
                         _SSP2STAT 021C                  ___wmul@multiplier 0020  
                   _DAC_Initialize 0E12             __end_of_I2C2_Interrupt 0663  
           __size_of_I2C1_Transmit 0097                          _xfunc_out 0076  
                 __size_of_LCD_Put 0007             __size_of_I2C2_Transmit 0098  
                  ??_Timer1_GetCPM 003C                        _CPS_PreData 00AE  
                ___lmul@multiplier 0020                   __size_of_Handler 002D  
             __size_of_Buzzer_Init 0028           _Timer1_DetectAssignCount 0D89  
         __size_of_mTouch_PortInit 000D  __size_of_mTouch_IntervalDecrement 0011  
        ?_mTouch_IntervalDecrement 0070                    ?_I2C1_Interrupt 0070  
          __size_of_LCD_CursorHome 0010             __end_of_DAC_Initialize 0E32  
                 __size_of___lldiv 0053                   __size_of___llmod 0043  
                 I2C1_Setting@mode 0021                 LCD_WriteData@point 0022  
                  ?_I2C2_Interrupt 0070                  I2C1_Transmit@size 0021  
                         __ptext10 0D23                           __ptext11 0CB6  
                         __ptext20 0CDF                           __ptext12 0CC3  
                         __ptext21 0F80                           __ptext13 0D10  
                         __ptext30 0C9C                           __ptext22 0E12  
                         __ptext14 0DA1                           __ptext31 0E57  
                         __ptext23 0E7F                           __ptext15 0F08  
                         __ptext40 060F                           __ptext32 0D49  
                         __ptext24 03F1                           __ptext16 0ED8  
                         __ptext41 0663                           __ptext25 0489  
                         __ptext17 06B7                           __ptext42 0E32  
                         __ptext34 0CFF                           __ptext26 07D6  
                         __ptext18 05A0                           __ptext43 0D73  
                         __ptext35 0C91                           __ptext27 074E  
                         __ptext19 0CEF                           __ptext44 0DBC  
                         __ptext36 0C86                           __ptext28 0CA9  
                         __ptext37 0D89                           __ptext29 0792  
                         __ptext38 0C7C                           __ptext39 0C63  
                     _SSP1CON1bits 0215                       _SSP1CON2bits 0216  
                 _LCD_DisplayClear 0CEF                       _SSP2CON1bits 021D  
                     _SSP2CON2bits 021E                           _countsum 00A4  
                 __size_of_xprintf 0013              __end_of_DAC_DataTable 02A3  
                    __size_of_main 0080                      _I2C1_Transmit 0489  
                    _I2C2_Transmit 03F1              __size_of_I2C1_PinInit 000D  
             __size_of_Timer1_Init 001B                           int$flags 007E  
            __size_of_I2C2_PinInit 000D               __size_of_Timer4_Init 0013  
              I2C_Transmit@address 0028               __size_of_Timer6_Init 000E  
            __size_of_I2C1_Setting 0044                    ?_DAC_Initialize 0070  
                     _SSP1STATbits 0214                           _xfunc_in 00B6  
            __size_of_I2C2_Setting 0044                       _SSP2STATbits 021C  
                 ??_Buzzer_Handler 0075               __end_of_I2C_Transmit 0EAA  
                I2C2_Setting@Speed 0022                   ??_Buzzer_SetDuty 0072  
                         _xvprintf 005B                         xprintf@arp 00E5  
                       xprintf@fmt 006A                           intlevel1 0000  
              _I2C_CommonInterrupt 0C63                       _I2C1_PinInit 0C9C  
                 ___lldiv@dividend 0030                     ?_I2C1_Transmit 0020  
                __CFG_CLKOUTEN$OFF 0000                       _I2C2_PinInit 0CA9  
                     _I2C1_Setting 0792                     ?_I2C2_Transmit 0020  
                     _I2C2_Setting 074E           __end_of_Timer1_Count10us 0C86  
                      xvprintf@arp 003C                        xvprintf@fmt 003A  
               I2C_Transmit@result 002F                  ??_mTouch_PortInit 0020  
                 I2C2_Setting@mode 0021               ?_I2C_CommonInterrupt 0070  
                       _OPTION_REG 0095                   ___lldiv@quotient 0035  
                     ?_mTouch_Init 0070                       ?_mTouch_Read 0070  
           __size_of_LCD_WriteData 003D                     I2C1_Transmit@i 0025  
                         xputs@str 0027                          xvprintf@c 0069  
                        xvprintf@d 0068                          xvprintf@f 0064  
                        xvprintf@i 0066                          xvprintf@j 005E  
                        xvprintf@p 0059                          xvprintf@r 005A  
                        xvprintf@s 0041                          xvprintf@v 0060  
                        xvprintf@w 005C            __size_of_Timer4_Handler 000B  
          __size_of_Timer6_Handler 000B  
