

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Jun 27 20:13:24 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	dabs	1,0x7E,2
    65  0000                     
    66                           ; Version 1.41
    67                           ; Generated 25/01/2017 GMT
    68                           ; 
    69                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F1827 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0014                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0016                     	;# 
   121  0017                     	;# 
   122  0018                     	;# 
   123  0019                     	;# 
   124  001A                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  0111                     	;# 
   149  0112                     	;# 
   150  0113                     	;# 
   151  0114                     	;# 
   152  0115                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  0118                     	;# 
   156  0119                     	;# 
   157  011A                     	;# 
   158  011B                     	;# 
   159  011D                     	;# 
   160  011E                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0191                     	;# 
   164  0191                     	;# 
   165  0192                     	;# 
   166  0193                     	;# 
   167  0193                     	;# 
   168  0193                     	;# 
   169  0194                     	;# 
   170  0195                     	;# 
   171  0196                     	;# 
   172  0199                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019C                     	;# 
   179  019C                     	;# 
   180  019D                     	;# 
   181  019E                     	;# 
   182  019F                     	;# 
   183  020C                     	;# 
   184  020D                     	;# 
   185  0211                     	;# 
   186  0211                     	;# 
   187  0212                     	;# 
   188  0212                     	;# 
   189  0213                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0214                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0216                     	;# 
   197  0216                     	;# 
   198  0217                     	;# 
   199  0217                     	;# 
   200  0219                     	;# 
   201  021A                     	;# 
   202  021B                     	;# 
   203  021C                     	;# 
   204  021D                     	;# 
   205  021E                     	;# 
   206  021F                     	;# 
   207  0291                     	;# 
   208  0291                     	;# 
   209  0292                     	;# 
   210  0293                     	;# 
   211  0294                     	;# 
   212  0295                     	;# 
   213  0295                     	;# 
   214  0296                     	;# 
   215  0298                     	;# 
   216  0298                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029B                     	;# 
   220  029C                     	;# 
   221  029C                     	;# 
   222  029D                     	;# 
   223  029E                     	;# 
   224  029E                     	;# 
   225  0311                     	;# 
   226  0311                     	;# 
   227  0312                     	;# 
   228  0313                     	;# 
   229  0318                     	;# 
   230  0318                     	;# 
   231  0319                     	;# 
   232  031A                     	;# 
   233  0394                     	;# 
   234  0395                     	;# 
   235  0396                     	;# 
   236  039A                     	;# 
   237  039C                     	;# 
   238  039D                     	;# 
   239  039E                     	;# 
   240  039F                     	;# 
   241  0415                     	;# 
   242  0416                     	;# 
   243  0417                     	;# 
   244  041C                     	;# 
   245  041D                     	;# 
   246  041E                     	;# 
   247  0FE4                     	;# 
   248  0FE5                     	;# 
   249  0FE6                     	;# 
   250  0FE7                     	;# 
   251  0FE8                     	;# 
   252  0FE9                     	;# 
   253  0FEA                     	;# 
   254  0FEB                     	;# 
   255  0FED                     	;# 
   256  0FEE                     	;# 
   257  0FEF                     	;# 
   258  0000                     	;# 
   259  0001                     	;# 
   260  0002                     	;# 
   261  0003                     	;# 
   262  0004                     	;# 
   263  0005                     	;# 
   264  0006                     	;# 
   265  0007                     	;# 
   266  0008                     	;# 
   267  0009                     	;# 
   268  000A                     	;# 
   269  000B                     	;# 
   270  000C                     	;# 
   271  000D                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001E                     	;# 
   286  001F                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  0111                     	;# 
   307  0112                     	;# 
   308  0113                     	;# 
   309  0114                     	;# 
   310  0115                     	;# 
   311  0116                     	;# 
   312  0117                     	;# 
   313  0118                     	;# 
   314  0119                     	;# 
   315  011A                     	;# 
   316  011B                     	;# 
   317  011D                     	;# 
   318  011E                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0191                     	;# 
   322  0191                     	;# 
   323  0192                     	;# 
   324  0193                     	;# 
   325  0193                     	;# 
   326  0193                     	;# 
   327  0194                     	;# 
   328  0195                     	;# 
   329  0196                     	;# 
   330  0199                     	;# 
   331  019A                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019B                     	;# 
   335  019B                     	;# 
   336  019C                     	;# 
   337  019C                     	;# 
   338  019D                     	;# 
   339  019E                     	;# 
   340  019F                     	;# 
   341  020C                     	;# 
   342  020D                     	;# 
   343  0211                     	;# 
   344  0211                     	;# 
   345  0212                     	;# 
   346  0212                     	;# 
   347  0213                     	;# 
   348  0213                     	;# 
   349  0214                     	;# 
   350  0214                     	;# 
   351  0215                     	;# 
   352  0215                     	;# 
   353  0215                     	;# 
   354  0216                     	;# 
   355  0216                     	;# 
   356  0217                     	;# 
   357  0217                     	;# 
   358  0219                     	;# 
   359  021A                     	;# 
   360  021B                     	;# 
   361  021C                     	;# 
   362  021D                     	;# 
   363  021E                     	;# 
   364  021F                     	;# 
   365  0291                     	;# 
   366  0291                     	;# 
   367  0292                     	;# 
   368  0293                     	;# 
   369  0294                     	;# 
   370  0295                     	;# 
   371  0295                     	;# 
   372  0296                     	;# 
   373  0298                     	;# 
   374  0298                     	;# 
   375  0299                     	;# 
   376  029A                     	;# 
   377  029B                     	;# 
   378  029C                     	;# 
   379  029C                     	;# 
   380  029D                     	;# 
   381  029E                     	;# 
   382  029E                     	;# 
   383  0311                     	;# 
   384  0311                     	;# 
   385  0312                     	;# 
   386  0313                     	;# 
   387  0318                     	;# 
   388  0318                     	;# 
   389  0319                     	;# 
   390  031A                     	;# 
   391  0394                     	;# 
   392  0395                     	;# 
   393  0396                     	;# 
   394  039A                     	;# 
   395  039C                     	;# 
   396  039D                     	;# 
   397  039E                     	;# 
   398  039F                     	;# 
   399  0415                     	;# 
   400  0416                     	;# 
   401  0417                     	;# 
   402  041C                     	;# 
   403  041D                     	;# 
   404  041E                     	;# 
   405  0FE4                     	;# 
   406  0FE5                     	;# 
   407  0FE6                     	;# 
   408  0FE7                     	;# 
   409  0FE8                     	;# 
   410  0FE9                     	;# 
   411  0FEA                     	;# 
   412  0FEB                     	;# 
   413  0FED                     	;# 
   414  0FEE                     	;# 
   415  0FEF                     	;# 
   416  0000                     	;# 
   417  0001                     	;# 
   418  0002                     	;# 
   419  0003                     	;# 
   420  0004                     	;# 
   421  0005                     	;# 
   422  0006                     	;# 
   423  0007                     	;# 
   424  0008                     	;# 
   425  0009                     	;# 
   426  000A                     	;# 
   427  000B                     	;# 
   428  000C                     	;# 
   429  000D                     	;# 
   430  0011                     	;# 
   431  0012                     	;# 
   432  0013                     	;# 
   433  0014                     	;# 
   434  0015                     	;# 
   435  0016                     	;# 
   436  0016                     	;# 
   437  0017                     	;# 
   438  0018                     	;# 
   439  0019                     	;# 
   440  001A                     	;# 
   441  001B                     	;# 
   442  001C                     	;# 
   443  001E                     	;# 
   444  001F                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0094                     	;# 
   451  0095                     	;# 
   452  0096                     	;# 
   453  0097                     	;# 
   454  0098                     	;# 
   455  0099                     	;# 
   456  009A                     	;# 
   457  009B                     	;# 
   458  009B                     	;# 
   459  009C                     	;# 
   460  009D                     	;# 
   461  009E                     	;# 
   462  010C                     	;# 
   463  010D                     	;# 
   464  0111                     	;# 
   465  0112                     	;# 
   466  0113                     	;# 
   467  0114                     	;# 
   468  0115                     	;# 
   469  0116                     	;# 
   470  0117                     	;# 
   471  0118                     	;# 
   472  0119                     	;# 
   473  011A                     	;# 
   474  011B                     	;# 
   475  011D                     	;# 
   476  011E                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0191                     	;# 
   480  0191                     	;# 
   481  0192                     	;# 
   482  0193                     	;# 
   483  0193                     	;# 
   484  0193                     	;# 
   485  0194                     	;# 
   486  0195                     	;# 
   487  0196                     	;# 
   488  0199                     	;# 
   489  019A                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019B                     	;# 
   494  019C                     	;# 
   495  019C                     	;# 
   496  019D                     	;# 
   497  019E                     	;# 
   498  019F                     	;# 
   499  020C                     	;# 
   500  020D                     	;# 
   501  0211                     	;# 
   502  0211                     	;# 
   503  0212                     	;# 
   504  0212                     	;# 
   505  0213                     	;# 
   506  0213                     	;# 
   507  0214                     	;# 
   508  0214                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0215                     	;# 
   512  0216                     	;# 
   513  0216                     	;# 
   514  0217                     	;# 
   515  0217                     	;# 
   516  0219                     	;# 
   517  021A                     	;# 
   518  021B                     	;# 
   519  021C                     	;# 
   520  021D                     	;# 
   521  021E                     	;# 
   522  021F                     	;# 
   523  0291                     	;# 
   524  0291                     	;# 
   525  0292                     	;# 
   526  0293                     	;# 
   527  0294                     	;# 
   528  0295                     	;# 
   529  0295                     	;# 
   530  0296                     	;# 
   531  0298                     	;# 
   532  0298                     	;# 
   533  0299                     	;# 
   534  029A                     	;# 
   535  029B                     	;# 
   536  029C                     	;# 
   537  029C                     	;# 
   538  029D                     	;# 
   539  029E                     	;# 
   540  029E                     	;# 
   541  0311                     	;# 
   542  0311                     	;# 
   543  0312                     	;# 
   544  0313                     	;# 
   545  0318                     	;# 
   546  0318                     	;# 
   547  0319                     	;# 
   548  031A                     	;# 
   549  0394                     	;# 
   550  0395                     	;# 
   551  0396                     	;# 
   552  039A                     	;# 
   553  039C                     	;# 
   554  039D                     	;# 
   555  039E                     	;# 
   556  039F                     	;# 
   557  0415                     	;# 
   558  0416                     	;# 
   559  0417                     	;# 
   560  041C                     	;# 
   561  041D                     	;# 
   562  041E                     	;# 
   563  0FE4                     	;# 
   564  0FE5                     	;# 
   565  0FE6                     	;# 
   566  0FE7                     	;# 
   567  0FE8                     	;# 
   568  0FE9                     	;# 
   569  0FEA                     	;# 
   570  0FEB                     	;# 
   571  0FED                     	;# 
   572  0FEE                     	;# 
   573  0FEF                     	;# 
   574  0000                     	;# 
   575  0001                     	;# 
   576  0002                     	;# 
   577  0003                     	;# 
   578  0004                     	;# 
   579  0005                     	;# 
   580  0006                     	;# 
   581  0007                     	;# 
   582  0008                     	;# 
   583  0009                     	;# 
   584  000A                     	;# 
   585  000B                     	;# 
   586  000C                     	;# 
   587  000D                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0014                     	;# 
   592  0015                     	;# 
   593  0016                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  0019                     	;# 
   598  001A                     	;# 
   599  001B                     	;# 
   600  001C                     	;# 
   601  001E                     	;# 
   602  001F                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  0091                     	;# 
   606  0092                     	;# 
   607  0093                     	;# 
   608  0094                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0097                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009A                     	;# 
   615  009B                     	;# 
   616  009B                     	;# 
   617  009C                     	;# 
   618  009D                     	;# 
   619  009E                     	;# 
   620  010C                     	;# 
   621  010D                     	;# 
   622  0111                     	;# 
   623  0112                     	;# 
   624  0113                     	;# 
   625  0114                     	;# 
   626  0115                     	;# 
   627  0116                     	;# 
   628  0117                     	;# 
   629  0118                     	;# 
   630  0119                     	;# 
   631  011A                     	;# 
   632  011B                     	;# 
   633  011D                     	;# 
   634  011E                     	;# 
   635  018C                     	;# 
   636  018D                     	;# 
   637  0191                     	;# 
   638  0191                     	;# 
   639  0192                     	;# 
   640  0193                     	;# 
   641  0193                     	;# 
   642  0193                     	;# 
   643  0194                     	;# 
   644  0195                     	;# 
   645  0196                     	;# 
   646  0199                     	;# 
   647  019A                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019B                     	;# 
   652  019C                     	;# 
   653  019C                     	;# 
   654  019D                     	;# 
   655  019E                     	;# 
   656  019F                     	;# 
   657  020C                     	;# 
   658  020D                     	;# 
   659  0211                     	;# 
   660  0211                     	;# 
   661  0212                     	;# 
   662  0212                     	;# 
   663  0213                     	;# 
   664  0213                     	;# 
   665  0214                     	;# 
   666  0214                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0216                     	;# 
   671  0216                     	;# 
   672  0217                     	;# 
   673  0217                     	;# 
   674  0219                     	;# 
   675  021A                     	;# 
   676  021B                     	;# 
   677  021C                     	;# 
   678  021D                     	;# 
   679  021E                     	;# 
   680  021F                     	;# 
   681  0291                     	;# 
   682  0291                     	;# 
   683  0292                     	;# 
   684  0293                     	;# 
   685  0294                     	;# 
   686  0295                     	;# 
   687  0295                     	;# 
   688  0296                     	;# 
   689  0298                     	;# 
   690  0298                     	;# 
   691  0299                     	;# 
   692  029A                     	;# 
   693  029B                     	;# 
   694  029C                     	;# 
   695  029C                     	;# 
   696  029D                     	;# 
   697  029E                     	;# 
   698  029E                     	;# 
   699  0311                     	;# 
   700  0311                     	;# 
   701  0312                     	;# 
   702  0313                     	;# 
   703  0318                     	;# 
   704  0318                     	;# 
   705  0319                     	;# 
   706  031A                     	;# 
   707  0394                     	;# 
   708  0395                     	;# 
   709  0396                     	;# 
   710  039A                     	;# 
   711  039C                     	;# 
   712  039D                     	;# 
   713  039E                     	;# 
   714  039F                     	;# 
   715  0415                     	;# 
   716  0416                     	;# 
   717  0417                     	;# 
   718  041C                     	;# 
   719  041D                     	;# 
   720  041E                     	;# 
   721  0FE4                     	;# 
   722  0FE5                     	;# 
   723  0FE6                     	;# 
   724  0FE7                     	;# 
   725  0FE8                     	;# 
   726  0FE9                     	;# 
   727  0FEA                     	;# 
   728  0FEB                     	;# 
   729  0FED                     	;# 
   730  0FEE                     	;# 
   731  0FEF                     	;# 
   732  0000                     	;# 
   733  0001                     	;# 
   734  0002                     	;# 
   735  0003                     	;# 
   736  0004                     	;# 
   737  0005                     	;# 
   738  0006                     	;# 
   739  0007                     	;# 
   740  0008                     	;# 
   741  0009                     	;# 
   742  000A                     	;# 
   743  000B                     	;# 
   744  000C                     	;# 
   745  000D                     	;# 
   746  0011                     	;# 
   747  0012                     	;# 
   748  0013                     	;# 
   749  0014                     	;# 
   750  0015                     	;# 
   751  0016                     	;# 
   752  0016                     	;# 
   753  0017                     	;# 
   754  0018                     	;# 
   755  0019                     	;# 
   756  001A                     	;# 
   757  001B                     	;# 
   758  001C                     	;# 
   759  001E                     	;# 
   760  001F                     	;# 
   761  008C                     	;# 
   762  008D                     	;# 
   763  0091                     	;# 
   764  0092                     	;# 
   765  0093                     	;# 
   766  0094                     	;# 
   767  0095                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0098                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  010C                     	;# 
   779  010D                     	;# 
   780  0111                     	;# 
   781  0112                     	;# 
   782  0113                     	;# 
   783  0114                     	;# 
   784  0115                     	;# 
   785  0116                     	;# 
   786  0117                     	;# 
   787  0118                     	;# 
   788  0119                     	;# 
   789  011A                     	;# 
   790  011B                     	;# 
   791  011D                     	;# 
   792  011E                     	;# 
   793  018C                     	;# 
   794  018D                     	;# 
   795  0191                     	;# 
   796  0191                     	;# 
   797  0192                     	;# 
   798  0193                     	;# 
   799  0193                     	;# 
   800  0193                     	;# 
   801  0194                     	;# 
   802  0195                     	;# 
   803  0196                     	;# 
   804  0199                     	;# 
   805  019A                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019B                     	;# 
   809  019B                     	;# 
   810  019C                     	;# 
   811  019C                     	;# 
   812  019D                     	;# 
   813  019E                     	;# 
   814  019F                     	;# 
   815  020C                     	;# 
   816  020D                     	;# 
   817  0211                     	;# 
   818  0211                     	;# 
   819  0212                     	;# 
   820  0212                     	;# 
   821  0213                     	;# 
   822  0213                     	;# 
   823  0214                     	;# 
   824  0214                     	;# 
   825  0215                     	;# 
   826  0215                     	;# 
   827  0215                     	;# 
   828  0216                     	;# 
   829  0216                     	;# 
   830  0217                     	;# 
   831  0217                     	;# 
   832  0219                     	;# 
   833  021A                     	;# 
   834  021B                     	;# 
   835  021C                     	;# 
   836  021D                     	;# 
   837  021E                     	;# 
   838  021F                     	;# 
   839  0291                     	;# 
   840  0291                     	;# 
   841  0292                     	;# 
   842  0293                     	;# 
   843  0294                     	;# 
   844  0295                     	;# 
   845  0295                     	;# 
   846  0296                     	;# 
   847  0298                     	;# 
   848  0298                     	;# 
   849  0299                     	;# 
   850  029A                     	;# 
   851  029B                     	;# 
   852  029C                     	;# 
   853  029C                     	;# 
   854  029D                     	;# 
   855  029E                     	;# 
   856  029E                     	;# 
   857  0311                     	;# 
   858  0311                     	;# 
   859  0312                     	;# 
   860  0313                     	;# 
   861  0318                     	;# 
   862  0318                     	;# 
   863  0319                     	;# 
   864  031A                     	;# 
   865  0394                     	;# 
   866  0395                     	;# 
   867  0396                     	;# 
   868  039A                     	;# 
   869  039C                     	;# 
   870  039D                     	;# 
   871  039E                     	;# 
   872  039F                     	;# 
   873  0415                     	;# 
   874  0416                     	;# 
   875  0417                     	;# 
   876  041C                     	;# 
   877  041D                     	;# 
   878  041E                     	;# 
   879  0FE4                     	;# 
   880  0FE5                     	;# 
   881  0FE6                     	;# 
   882  0FE7                     	;# 
   883  0FE8                     	;# 
   884  0FE9                     	;# 
   885  0FEA                     	;# 
   886  0FEB                     	;# 
   887  0FED                     	;# 
   888  0FEE                     	;# 
   889  0FEF                     	;# 
   890  0000                     	;# 
   891  0001                     	;# 
   892  0002                     	;# 
   893  0003                     	;# 
   894  0004                     	;# 
   895  0005                     	;# 
   896  0006                     	;# 
   897  0007                     	;# 
   898  0008                     	;# 
   899  0009                     	;# 
   900  000A                     	;# 
   901  000B                     	;# 
   902  000C                     	;# 
   903  000D                     	;# 
   904  0011                     	;# 
   905  0012                     	;# 
   906  0013                     	;# 
   907  0014                     	;# 
   908  0015                     	;# 
   909  0016                     	;# 
   910  0016                     	;# 
   911  0017                     	;# 
   912  0018                     	;# 
   913  0019                     	;# 
   914  001A                     	;# 
   915  001B                     	;# 
   916  001C                     	;# 
   917  001E                     	;# 
   918  001F                     	;# 
   919  008C                     	;# 
   920  008D                     	;# 
   921  0091                     	;# 
   922  0092                     	;# 
   923  0093                     	;# 
   924  0094                     	;# 
   925  0095                     	;# 
   926  0096                     	;# 
   927  0097                     	;# 
   928  0098                     	;# 
   929  0099                     	;# 
   930  009A                     	;# 
   931  009B                     	;# 
   932  009B                     	;# 
   933  009C                     	;# 
   934  009D                     	;# 
   935  009E                     	;# 
   936  010C                     	;# 
   937  010D                     	;# 
   938  0111                     	;# 
   939  0112                     	;# 
   940  0113                     	;# 
   941  0114                     	;# 
   942  0115                     	;# 
   943  0116                     	;# 
   944  0117                     	;# 
   945  0118                     	;# 
   946  0119                     	;# 
   947  011A                     	;# 
   948  011B                     	;# 
   949  011D                     	;# 
   950  011E                     	;# 
   951  018C                     	;# 
   952  018D                     	;# 
   953  0191                     	;# 
   954  0191                     	;# 
   955  0192                     	;# 
   956  0193                     	;# 
   957  0193                     	;# 
   958  0193                     	;# 
   959  0194                     	;# 
   960  0195                     	;# 
   961  0196                     	;# 
   962  0199                     	;# 
   963  019A                     	;# 
   964  019B                     	;# 
   965  019B                     	;# 
   966  019B                     	;# 
   967  019B                     	;# 
   968  019C                     	;# 
   969  019C                     	;# 
   970  019D                     	;# 
   971  019E                     	;# 
   972  019F                     	;# 
   973  020C                     	;# 
   974  020D                     	;# 
   975  0211                     	;# 
   976  0211                     	;# 
   977  0212                     	;# 
   978  0212                     	;# 
   979  0213                     	;# 
   980  0213                     	;# 
   981  0214                     	;# 
   982  0214                     	;# 
   983  0215                     	;# 
   984  0215                     	;# 
   985  0215                     	;# 
   986  0216                     	;# 
   987  0216                     	;# 
   988  0217                     	;# 
   989  0217                     	;# 
   990  0219                     	;# 
   991  021A                     	;# 
   992  021B                     	;# 
   993  021C                     	;# 
   994  021D                     	;# 
   995  021E                     	;# 
   996  021F                     	;# 
   997  0291                     	;# 
   998  0291                     	;# 
   999  0292                     	;# 
  1000  0293                     	;# 
  1001  0294                     	;# 
  1002  0295                     	;# 
  1003  0295                     	;# 
  1004  0296                     	;# 
  1005  0298                     	;# 
  1006  0298                     	;# 
  1007  0299                     	;# 
  1008  029A                     	;# 
  1009  029B                     	;# 
  1010  029C                     	;# 
  1011  029C                     	;# 
  1012  029D                     	;# 
  1013  029E                     	;# 
  1014  029E                     	;# 
  1015  0311                     	;# 
  1016  0311                     	;# 
  1017  0312                     	;# 
  1018  0313                     	;# 
  1019  0318                     	;# 
  1020  0318                     	;# 
  1021  0319                     	;# 
  1022  031A                     	;# 
  1023  0394                     	;# 
  1024  0395                     	;# 
  1025  0396                     	;# 
  1026  039A                     	;# 
  1027  039C                     	;# 
  1028  039D                     	;# 
  1029  039E                     	;# 
  1030  039F                     	;# 
  1031  0415                     	;# 
  1032  0416                     	;# 
  1033  0417                     	;# 
  1034  041C                     	;# 
  1035  041D                     	;# 
  1036  041E                     	;# 
  1037  0FE4                     	;# 
  1038  0FE5                     	;# 
  1039  0FE6                     	;# 
  1040  0FE7                     	;# 
  1041  0FE8                     	;# 
  1042  0FE9                     	;# 
  1043  0FEA                     	;# 
  1044  0FEB                     	;# 
  1045  0FED                     	;# 
  1046  0FEE                     	;# 
  1047  0FEF                     	;# 
  1048  0000                     	;# 
  1049  0001                     	;# 
  1050  0002                     	;# 
  1051  0003                     	;# 
  1052  0004                     	;# 
  1053  0005                     	;# 
  1054  0006                     	;# 
  1055  0007                     	;# 
  1056  0008                     	;# 
  1057  0009                     	;# 
  1058  000A                     	;# 
  1059  000B                     	;# 
  1060  000C                     	;# 
  1061  000D                     	;# 
  1062  0011                     	;# 
  1063  0012                     	;# 
  1064  0013                     	;# 
  1065  0014                     	;# 
  1066  0015                     	;# 
  1067  0016                     	;# 
  1068  0016                     	;# 
  1069  0017                     	;# 
  1070  0018                     	;# 
  1071  0019                     	;# 
  1072  001A                     	;# 
  1073  001B                     	;# 
  1074  001C                     	;# 
  1075  001E                     	;# 
  1076  001F                     	;# 
  1077  008C                     	;# 
  1078  008D                     	;# 
  1079  0091                     	;# 
  1080  0092                     	;# 
  1081  0093                     	;# 
  1082  0094                     	;# 
  1083  0095                     	;# 
  1084  0096                     	;# 
  1085  0097                     	;# 
  1086  0098                     	;# 
  1087  0099                     	;# 
  1088  009A                     	;# 
  1089  009B                     	;# 
  1090  009B                     	;# 
  1091  009C                     	;# 
  1092  009D                     	;# 
  1093  009E                     	;# 
  1094  010C                     	;# 
  1095  010D                     	;# 
  1096  0111                     	;# 
  1097  0112                     	;# 
  1098  0113                     	;# 
  1099  0114                     	;# 
  1100  0115                     	;# 
  1101  0116                     	;# 
  1102  0117                     	;# 
  1103  0118                     	;# 
  1104  0119                     	;# 
  1105  011A                     	;# 
  1106  011B                     	;# 
  1107  011D                     	;# 
  1108  011E                     	;# 
  1109  018C                     	;# 
  1110  018D                     	;# 
  1111  0191                     	;# 
  1112  0191                     	;# 
  1113  0192                     	;# 
  1114  0193                     	;# 
  1115  0193                     	;# 
  1116  0193                     	;# 
  1117  0194                     	;# 
  1118  0195                     	;# 
  1119  0196                     	;# 
  1120  0199                     	;# 
  1121  019A                     	;# 
  1122  019B                     	;# 
  1123  019B                     	;# 
  1124  019B                     	;# 
  1125  019B                     	;# 
  1126  019C                     	;# 
  1127  019C                     	;# 
  1128  019D                     	;# 
  1129  019E                     	;# 
  1130  019F                     	;# 
  1131  020C                     	;# 
  1132  020D                     	;# 
  1133  0211                     	;# 
  1134  0211                     	;# 
  1135  0212                     	;# 
  1136  0212                     	;# 
  1137  0213                     	;# 
  1138  0213                     	;# 
  1139  0214                     	;# 
  1140  0214                     	;# 
  1141  0215                     	;# 
  1142  0215                     	;# 
  1143  0215                     	;# 
  1144  0216                     	;# 
  1145  0216                     	;# 
  1146  0217                     	;# 
  1147  0217                     	;# 
  1148  0219                     	;# 
  1149  021A                     	;# 
  1150  021B                     	;# 
  1151  021C                     	;# 
  1152  021D                     	;# 
  1153  021E                     	;# 
  1154  021F                     	;# 
  1155  0291                     	;# 
  1156  0291                     	;# 
  1157  0292                     	;# 
  1158  0293                     	;# 
  1159  0294                     	;# 
  1160  0295                     	;# 
  1161  0295                     	;# 
  1162  0296                     	;# 
  1163  0298                     	;# 
  1164  0298                     	;# 
  1165  0299                     	;# 
  1166  029A                     	;# 
  1167  029B                     	;# 
  1168  029C                     	;# 
  1169  029C                     	;# 
  1170  029D                     	;# 
  1171  029E                     	;# 
  1172  029E                     	;# 
  1173  0311                     	;# 
  1174  0311                     	;# 
  1175  0312                     	;# 
  1176  0313                     	;# 
  1177  0318                     	;# 
  1178  0318                     	;# 
  1179  0319                     	;# 
  1180  031A                     	;# 
  1181  0394                     	;# 
  1182  0395                     	;# 
  1183  0396                     	;# 
  1184  039A                     	;# 
  1185  039C                     	;# 
  1186  039D                     	;# 
  1187  039E                     	;# 
  1188  039F                     	;# 
  1189  0415                     	;# 
  1190  0416                     	;# 
  1191  0417                     	;# 
  1192  041C                     	;# 
  1193  041D                     	;# 
  1194  041E                     	;# 
  1195  0FE4                     	;# 
  1196  0FE5                     	;# 
  1197  0FE6                     	;# 
  1198  0FE7                     	;# 
  1199  0FE8                     	;# 
  1200  0FE9                     	;# 
  1201  0FEA                     	;# 
  1202  0FEB                     	;# 
  1203  0FED                     	;# 
  1204  0FEE                     	;# 
  1205  0FEF                     	;# 
  1206  0000                     	;# 
  1207  0001                     	;# 
  1208  0002                     	;# 
  1209  0003                     	;# 
  1210  0004                     	;# 
  1211  0005                     	;# 
  1212  0006                     	;# 
  1213  0007                     	;# 
  1214  0008                     	;# 
  1215  0009                     	;# 
  1216  000A                     	;# 
  1217  000B                     	;# 
  1218  000C                     	;# 
  1219  000D                     	;# 
  1220  0011                     	;# 
  1221  0012                     	;# 
  1222  0013                     	;# 
  1223  0014                     	;# 
  1224  0015                     	;# 
  1225  0016                     	;# 
  1226  0016                     	;# 
  1227  0017                     	;# 
  1228  0018                     	;# 
  1229  0019                     	;# 
  1230  001A                     	;# 
  1231  001B                     	;# 
  1232  001C                     	;# 
  1233  001E                     	;# 
  1234  001F                     	;# 
  1235  008C                     	;# 
  1236  008D                     	;# 
  1237  0091                     	;# 
  1238  0092                     	;# 
  1239  0093                     	;# 
  1240  0094                     	;# 
  1241  0095                     	;# 
  1242  0096                     	;# 
  1243  0097                     	;# 
  1244  0098                     	;# 
  1245  0099                     	;# 
  1246  009A                     	;# 
  1247  009B                     	;# 
  1248  009B                     	;# 
  1249  009C                     	;# 
  1250  009D                     	;# 
  1251  009E                     	;# 
  1252  010C                     	;# 
  1253  010D                     	;# 
  1254  0111                     	;# 
  1255  0112                     	;# 
  1256  0113                     	;# 
  1257  0114                     	;# 
  1258  0115                     	;# 
  1259  0116                     	;# 
  1260  0117                     	;# 
  1261  0118                     	;# 
  1262  0119                     	;# 
  1263  011A                     	;# 
  1264  011B                     	;# 
  1265  011D                     	;# 
  1266  011E                     	;# 
  1267  018C                     	;# 
  1268  018D                     	;# 
  1269  0191                     	;# 
  1270  0191                     	;# 
  1271  0192                     	;# 
  1272  0193                     	;# 
  1273  0193                     	;# 
  1274  0193                     	;# 
  1275  0194                     	;# 
  1276  0195                     	;# 
  1277  0196                     	;# 
  1278  0199                     	;# 
  1279  019A                     	;# 
  1280  019B                     	;# 
  1281  019B                     	;# 
  1282  019B                     	;# 
  1283  019B                     	;# 
  1284  019C                     	;# 
  1285  019C                     	;# 
  1286  019D                     	;# 
  1287  019E                     	;# 
  1288  019F                     	;# 
  1289  020C                     	;# 
  1290  020D                     	;# 
  1291  0211                     	;# 
  1292  0211                     	;# 
  1293  0212                     	;# 
  1294  0212                     	;# 
  1295  0213                     	;# 
  1296  0213                     	;# 
  1297  0214                     	;# 
  1298  0214                     	;# 
  1299  0215                     	;# 
  1300  0215                     	;# 
  1301  0215                     	;# 
  1302  0216                     	;# 
  1303  0216                     	;# 
  1304  0217                     	;# 
  1305  0217                     	;# 
  1306  0219                     	;# 
  1307  021A                     	;# 
  1308  021B                     	;# 
  1309  021C                     	;# 
  1310  021D                     	;# 
  1311  021E                     	;# 
  1312  021F                     	;# 
  1313  0291                     	;# 
  1314  0291                     	;# 
  1315  0292                     	;# 
  1316  0293                     	;# 
  1317  0294                     	;# 
  1318  0295                     	;# 
  1319  0295                     	;# 
  1320  0296                     	;# 
  1321  0298                     	;# 
  1322  0298                     	;# 
  1323  0299                     	;# 
  1324  029A                     	;# 
  1325  029B                     	;# 
  1326  029C                     	;# 
  1327  029C                     	;# 
  1328  029D                     	;# 
  1329  029E                     	;# 
  1330  029E                     	;# 
  1331  0311                     	;# 
  1332  0311                     	;# 
  1333  0312                     	;# 
  1334  0313                     	;# 
  1335  0318                     	;# 
  1336  0318                     	;# 
  1337  0319                     	;# 
  1338  031A                     	;# 
  1339  0394                     	;# 
  1340  0395                     	;# 
  1341  0396                     	;# 
  1342  039A                     	;# 
  1343  039C                     	;# 
  1344  039D                     	;# 
  1345  039E                     	;# 
  1346  039F                     	;# 
  1347  0415                     	;# 
  1348  0416                     	;# 
  1349  0417                     	;# 
  1350  041C                     	;# 
  1351  041D                     	;# 
  1352  041E                     	;# 
  1353  0FE4                     	;# 
  1354  0FE5                     	;# 
  1355  0FE6                     	;# 
  1356  0FE7                     	;# 
  1357  0FE8                     	;# 
  1358  0FE9                     	;# 
  1359  0FEA                     	;# 
  1360  0FEB                     	;# 
  1361  0FED                     	;# 
  1362  0FEE                     	;# 
  1363  0FEF                     	;# 
  1364  0000                     	;# 
  1365  0001                     	;# 
  1366  0002                     	;# 
  1367  0003                     	;# 
  1368  0004                     	;# 
  1369  0005                     	;# 
  1370  0006                     	;# 
  1371  0007                     	;# 
  1372  0008                     	;# 
  1373  0009                     	;# 
  1374  000A                     	;# 
  1375  000B                     	;# 
  1376  000C                     	;# 
  1377  000D                     	;# 
  1378  0011                     	;# 
  1379  0012                     	;# 
  1380  0013                     	;# 
  1381  0014                     	;# 
  1382  0015                     	;# 
  1383  0016                     	;# 
  1384  0016                     	;# 
  1385  0017                     	;# 
  1386  0018                     	;# 
  1387  0019                     	;# 
  1388  001A                     	;# 
  1389  001B                     	;# 
  1390  001C                     	;# 
  1391  001E                     	;# 
  1392  001F                     	;# 
  1393  008C                     	;# 
  1394  008D                     	;# 
  1395  0091                     	;# 
  1396  0092                     	;# 
  1397  0093                     	;# 
  1398  0094                     	;# 
  1399  0095                     	;# 
  1400  0096                     	;# 
  1401  0097                     	;# 
  1402  0098                     	;# 
  1403  0099                     	;# 
  1404  009A                     	;# 
  1405  009B                     	;# 
  1406  009B                     	;# 
  1407  009C                     	;# 
  1408  009D                     	;# 
  1409  009E                     	;# 
  1410  010C                     	;# 
  1411  010D                     	;# 
  1412  0111                     	;# 
  1413  0112                     	;# 
  1414  0113                     	;# 
  1415  0114                     	;# 
  1416  0115                     	;# 
  1417  0116                     	;# 
  1418  0117                     	;# 
  1419  0118                     	;# 
  1420  0119                     	;# 
  1421  011A                     	;# 
  1422  011B                     	;# 
  1423  011D                     	;# 
  1424  011E                     	;# 
  1425  018C                     	;# 
  1426  018D                     	;# 
  1427  0191                     	;# 
  1428  0191                     	;# 
  1429  0192                     	;# 
  1430  0193                     	;# 
  1431  0193                     	;# 
  1432  0193                     	;# 
  1433  0194                     	;# 
  1434  0195                     	;# 
  1435  0196                     	;# 
  1436  0199                     	;# 
  1437  019A                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019B                     	;# 
  1442  019C                     	;# 
  1443  019C                     	;# 
  1444  019D                     	;# 
  1445  019E                     	;# 
  1446  019F                     	;# 
  1447  020C                     	;# 
  1448  020D                     	;# 
  1449  0211                     	;# 
  1450  0211                     	;# 
  1451  0212                     	;# 
  1452  0212                     	;# 
  1453  0213                     	;# 
  1454  0213                     	;# 
  1455  0214                     	;# 
  1456  0214                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0215                     	;# 
  1460  0216                     	;# 
  1461  0216                     	;# 
  1462  0217                     	;# 
  1463  0217                     	;# 
  1464  0219                     	;# 
  1465  021A                     	;# 
  1466  021B                     	;# 
  1467  021C                     	;# 
  1468  021D                     	;# 
  1469  021E                     	;# 
  1470  021F                     	;# 
  1471  0291                     	;# 
  1472  0291                     	;# 
  1473  0292                     	;# 
  1474  0293                     	;# 
  1475  0294                     	;# 
  1476  0295                     	;# 
  1477  0295                     	;# 
  1478  0296                     	;# 
  1479  0298                     	;# 
  1480  0298                     	;# 
  1481  0299                     	;# 
  1482  029A                     	;# 
  1483  029B                     	;# 
  1484  029C                     	;# 
  1485  029C                     	;# 
  1486  029D                     	;# 
  1487  029E                     	;# 
  1488  029E                     	;# 
  1489  0311                     	;# 
  1490  0311                     	;# 
  1491  0312                     	;# 
  1492  0313                     	;# 
  1493  0318                     	;# 
  1494  0318                     	;# 
  1495  0319                     	;# 
  1496  031A                     	;# 
  1497  0394                     	;# 
  1498  0395                     	;# 
  1499  0396                     	;# 
  1500  039A                     	;# 
  1501  039C                     	;# 
  1502  039D                     	;# 
  1503  039E                     	;# 
  1504  039F                     	;# 
  1505  0415                     	;# 
  1506  0416                     	;# 
  1507  0417                     	;# 
  1508  041C                     	;# 
  1509  041D                     	;# 
  1510  041E                     	;# 
  1511  0FE4                     	;# 
  1512  0FE5                     	;# 
  1513  0FE6                     	;# 
  1514  0FE7                     	;# 
  1515  0FE8                     	;# 
  1516  0FE9                     	;# 
  1517  0FEA                     	;# 
  1518  0FEB                     	;# 
  1519  0FED                     	;# 
  1520  0FEE                     	;# 
  1521  0FEF                     	;# 
  1522  0000                     	;# 
  1523  0001                     	;# 
  1524  0002                     	;# 
  1525  0003                     	;# 
  1526  0004                     	;# 
  1527  0005                     	;# 
  1528  0006                     	;# 
  1529  0007                     	;# 
  1530  0008                     	;# 
  1531  0009                     	;# 
  1532  000A                     	;# 
  1533  000B                     	;# 
  1534  000C                     	;# 
  1535  000D                     	;# 
  1536  0011                     	;# 
  1537  0012                     	;# 
  1538  0013                     	;# 
  1539  0014                     	;# 
  1540  0015                     	;# 
  1541  0016                     	;# 
  1542  0016                     	;# 
  1543  0017                     	;# 
  1544  0018                     	;# 
  1545  0019                     	;# 
  1546  001A                     	;# 
  1547  001B                     	;# 
  1548  001C                     	;# 
  1549  001E                     	;# 
  1550  001F                     	;# 
  1551  008C                     	;# 
  1552  008D                     	;# 
  1553  0091                     	;# 
  1554  0092                     	;# 
  1555  0093                     	;# 
  1556  0094                     	;# 
  1557  0095                     	;# 
  1558  0096                     	;# 
  1559  0097                     	;# 
  1560  0098                     	;# 
  1561  0099                     	;# 
  1562  009A                     	;# 
  1563  009B                     	;# 
  1564  009B                     	;# 
  1565  009C                     	;# 
  1566  009D                     	;# 
  1567  009E                     	;# 
  1568  010C                     	;# 
  1569  010D                     	;# 
  1570  0111                     	;# 
  1571  0112                     	;# 
  1572  0113                     	;# 
  1573  0114                     	;# 
  1574  0115                     	;# 
  1575  0116                     	;# 
  1576  0117                     	;# 
  1577  0118                     	;# 
  1578  0119                     	;# 
  1579  011A                     	;# 
  1580  011B                     	;# 
  1581  011D                     	;# 
  1582  011E                     	;# 
  1583  018C                     	;# 
  1584  018D                     	;# 
  1585  0191                     	;# 
  1586  0191                     	;# 
  1587  0192                     	;# 
  1588  0193                     	;# 
  1589  0193                     	;# 
  1590  0193                     	;# 
  1591  0194                     	;# 
  1592  0195                     	;# 
  1593  0196                     	;# 
  1594  0199                     	;# 
  1595  019A                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019B                     	;# 
  1599  019B                     	;# 
  1600  019C                     	;# 
  1601  019C                     	;# 
  1602  019D                     	;# 
  1603  019E                     	;# 
  1604  019F                     	;# 
  1605  020C                     	;# 
  1606  020D                     	;# 
  1607  0211                     	;# 
  1608  0211                     	;# 
  1609  0212                     	;# 
  1610  0212                     	;# 
  1611  0213                     	;# 
  1612  0213                     	;# 
  1613  0214                     	;# 
  1614  0214                     	;# 
  1615  0215                     	;# 
  1616  0215                     	;# 
  1617  0215                     	;# 
  1618  0216                     	;# 
  1619  0216                     	;# 
  1620  0217                     	;# 
  1621  0217                     	;# 
  1622  0219                     	;# 
  1623  021A                     	;# 
  1624  021B                     	;# 
  1625  021C                     	;# 
  1626  021D                     	;# 
  1627  021E                     	;# 
  1628  021F                     	;# 
  1629  0291                     	;# 
  1630  0291                     	;# 
  1631  0292                     	;# 
  1632  0293                     	;# 
  1633  0294                     	;# 
  1634  0295                     	;# 
  1635  0295                     	;# 
  1636  0296                     	;# 
  1637  0298                     	;# 
  1638  0298                     	;# 
  1639  0299                     	;# 
  1640  029A                     	;# 
  1641  029B                     	;# 
  1642  029C                     	;# 
  1643  029C                     	;# 
  1644  029D                     	;# 
  1645  029E                     	;# 
  1646  029E                     	;# 
  1647  0311                     	;# 
  1648  0311                     	;# 
  1649  0312                     	;# 
  1650  0313                     	;# 
  1651  0318                     	;# 
  1652  0318                     	;# 
  1653  0319                     	;# 
  1654  031A                     	;# 
  1655  0394                     	;# 
  1656  0395                     	;# 
  1657  0396                     	;# 
  1658  039A                     	;# 
  1659  039C                     	;# 
  1660  039D                     	;# 
  1661  039E                     	;# 
  1662  039F                     	;# 
  1663  0415                     	;# 
  1664  0416                     	;# 
  1665  0417                     	;# 
  1666  041C                     	;# 
  1667  041D                     	;# 
  1668  041E                     	;# 
  1669  0FE4                     	;# 
  1670  0FE5                     	;# 
  1671  0FE6                     	;# 
  1672  0FE7                     	;# 
  1673  0FE8                     	;# 
  1674  0FE9                     	;# 
  1675  0FEA                     	;# 
  1676  0FEB                     	;# 
  1677  0FED                     	;# 
  1678  0FEE                     	;# 
  1679  0FEF                     	;# 
  1680  0000                     	;# 
  1681  0001                     	;# 
  1682  0002                     	;# 
  1683  0003                     	;# 
  1684  0004                     	;# 
  1685  0005                     	;# 
  1686  0006                     	;# 
  1687  0007                     	;# 
  1688  0008                     	;# 
  1689  0009                     	;# 
  1690  000A                     	;# 
  1691  000B                     	;# 
  1692  000C                     	;# 
  1693  000D                     	;# 
  1694  0011                     	;# 
  1695  0012                     	;# 
  1696  0013                     	;# 
  1697  0014                     	;# 
  1698  0015                     	;# 
  1699  0016                     	;# 
  1700  0016                     	;# 
  1701  0017                     	;# 
  1702  0018                     	;# 
  1703  0019                     	;# 
  1704  001A                     	;# 
  1705  001B                     	;# 
  1706  001C                     	;# 
  1707  001E                     	;# 
  1708  001F                     	;# 
  1709  008C                     	;# 
  1710  008D                     	;# 
  1711  0091                     	;# 
  1712  0092                     	;# 
  1713  0093                     	;# 
  1714  0094                     	;# 
  1715  0095                     	;# 
  1716  0096                     	;# 
  1717  0097                     	;# 
  1718  0098                     	;# 
  1719  0099                     	;# 
  1720  009A                     	;# 
  1721  009B                     	;# 
  1722  009B                     	;# 
  1723  009C                     	;# 
  1724  009D                     	;# 
  1725  009E                     	;# 
  1726  010C                     	;# 
  1727  010D                     	;# 
  1728  0111                     	;# 
  1729  0112                     	;# 
  1730  0113                     	;# 
  1731  0114                     	;# 
  1732  0115                     	;# 
  1733  0116                     	;# 
  1734  0117                     	;# 
  1735  0118                     	;# 
  1736  0119                     	;# 
  1737  011A                     	;# 
  1738  011B                     	;# 
  1739  011D                     	;# 
  1740  011E                     	;# 
  1741  018C                     	;# 
  1742  018D                     	;# 
  1743  0191                     	;# 
  1744  0191                     	;# 
  1745  0192                     	;# 
  1746  0193                     	;# 
  1747  0193                     	;# 
  1748  0193                     	;# 
  1749  0194                     	;# 
  1750  0195                     	;# 
  1751  0196                     	;# 
  1752  0199                     	;# 
  1753  019A                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019B                     	;# 
  1757  019B                     	;# 
  1758  019C                     	;# 
  1759  019C                     	;# 
  1760  019D                     	;# 
  1761  019E                     	;# 
  1762  019F                     	;# 
  1763  020C                     	;# 
  1764  020D                     	;# 
  1765  0211                     	;# 
  1766  0211                     	;# 
  1767  0212                     	;# 
  1768  0212                     	;# 
  1769  0213                     	;# 
  1770  0213                     	;# 
  1771  0214                     	;# 
  1772  0214                     	;# 
  1773  0215                     	;# 
  1774  0215                     	;# 
  1775  0215                     	;# 
  1776  0216                     	;# 
  1777  0216                     	;# 
  1778  0217                     	;# 
  1779  0217                     	;# 
  1780  0219                     	;# 
  1781  021A                     	;# 
  1782  021B                     	;# 
  1783  021C                     	;# 
  1784  021D                     	;# 
  1785  021E                     	;# 
  1786  021F                     	;# 
  1787  0291                     	;# 
  1788  0291                     	;# 
  1789  0292                     	;# 
  1790  0293                     	;# 
  1791  0294                     	;# 
  1792  0295                     	;# 
  1793  0295                     	;# 
  1794  0296                     	;# 
  1795  0298                     	;# 
  1796  0298                     	;# 
  1797  0299                     	;# 
  1798  029A                     	;# 
  1799  029B                     	;# 
  1800  029C                     	;# 
  1801  029C                     	;# 
  1802  029D                     	;# 
  1803  029E                     	;# 
  1804  029E                     	;# 
  1805  0311                     	;# 
  1806  0311                     	;# 
  1807  0312                     	;# 
  1808  0313                     	;# 
  1809  0318                     	;# 
  1810  0318                     	;# 
  1811  0319                     	;# 
  1812  031A                     	;# 
  1813  0394                     	;# 
  1814  0395                     	;# 
  1815  0396                     	;# 
  1816  039A                     	;# 
  1817  039C                     	;# 
  1818  039D                     	;# 
  1819  039E                     	;# 
  1820  039F                     	;# 
  1821  0415                     	;# 
  1822  0416                     	;# 
  1823  0417                     	;# 
  1824  041C                     	;# 
  1825  041D                     	;# 
  1826  041E                     	;# 
  1827  0FE4                     	;# 
  1828  0FE5                     	;# 
  1829  0FE6                     	;# 
  1830  0FE7                     	;# 
  1831  0FE8                     	;# 
  1832  0FE9                     	;# 
  1833  0FEA                     	;# 
  1834  0FEB                     	;# 
  1835  0FED                     	;# 
  1836  0FEE                     	;# 
  1837  0FEF                     	;# 
  1838                           
  1839                           	psect	idataBANK1
  1840  0EC8                     __pidataBANK1:	
  1841                           
  1842                           ;initializer for _DAC_VoltageTable
  1843  0EC8  3499               	retlw	low (STR_7| (0+32768))
  1844  0EC9  3483               	retlw	high (STR_7| (0+32768))
  1845  0ECA  3449               	retlw	low (STR_8| (0+32768))
  1846  0ECB  3483               	retlw	high (STR_8| (0+32768))
  1847  0ECC  349E               	retlw	low (STR_9| (0+32768))
  1848  0ECD  3483               	retlw	high (STR_9| (0+32768))
  1849  0ECE  344F               	retlw	low (STR_10| (0+32768))
  1850  0ECF  3483               	retlw	high (STR_10| (0+32768))
  1851  0ED0  34A3               	retlw	low (STR_11| (0+32768))
  1852  0ED1  3483               	retlw	high (STR_11| (0+32768))
  1853  0ED2  3455               	retlw	low (STR_12| (0+32768))
  1854  0ED3  3483               	retlw	high (STR_12| (0+32768))
  1855  0ED4  34A8               	retlw	low (STR_13| (0+32768))
  1856  0ED5  3483               	retlw	high (STR_13| (0+32768))
  1857  0ED6  345B               	retlw	low (STR_14| (0+32768))
  1858  0ED7  3483               	retlw	high (STR_14| (0+32768))
  1859  0ED8  34AD               	retlw	low (STR_15| (0+32768))
  1860  0ED9  3483               	retlw	high (STR_15| (0+32768))
  1861  0EDA  3461               	retlw	low (STR_16| (0+32768))
  1862  0EDB  3483               	retlw	high (STR_16| (0+32768))
  1863  0EDC  348A               	retlw	low (STR_17| (0+32768))
  1864  0EDD  3483               	retlw	high (STR_17| (0+32768))
  1865  0EDE  343D               	retlw	low (STR_18| (0+32768))
  1866  0EDF  3483               	retlw	high (STR_18| (0+32768))
  1867  0EE0  348F               	retlw	low (STR_19| (0+32768))
  1868  0EE1  3483               	retlw	high (STR_19| (0+32768))
  1869  0EE2  3443               	retlw	low (STR_20| (0+32768))
  1870  0EE3  3483               	retlw	high (STR_20| (0+32768))
  1871  0EE4  3494               	retlw	low (STR_21| (0+32768))
  1872  0EE5  3483               	retlw	high (STR_21| (0+32768))
  1873                           
  1874                           	psect	idataBANK2
  1875  0785                     __pidataBANK2:	
  1876                           
  1877                           ;initializer for _H7826_01_Gain
  1878  0785  3467               	retlw	low (STR_37| (0+32768))
  1879  0786  3483               	retlw	high (STR_37| (0+32768))
  1880  0787  346C               	retlw	low (STR_38| (0+32768))
  1881  0788  3483               	retlw	high (STR_38| (0+32768))
  1882  0789  3480               	retlw	low (STR_39| (0+32768))
  1883  078A  3483               	retlw	high (STR_39| (0+32768))
  1884  078B  3471               	retlw	low (STR_40| (0+32768))
  1885  078C  3483               	retlw	high (STR_40| (0+32768))
  1886  078D  341F               	retlw	low (STR_41| (0+32768))
  1887  078E  3483               	retlw	high (STR_41| (0+32768))
  1888  078F  3425               	retlw	low (STR_42| (0+32768))
  1889  0790  3483               	retlw	high (STR_42| (0+32768))
  1890  0791  342B               	retlw	low (STR_43| (0+32768))
  1891  0792  3483               	retlw	high (STR_43| (0+32768))
  1892  0793  3413               	retlw	low (STR_44| (0+32768))
  1893  0794  3483               	retlw	high (STR_44| (0+32768))
  1894  0795  34CE               	retlw	low (STR_45| (0+32768))
  1895  0796  3482               	retlw	high (STR_45| (0+32768))
  1896  0797  34F8               	retlw	low (STR_46| (0+32768))
  1897  0798  3482               	retlw	high (STR_46| (0+32768))
  1898  0799  34D5               	retlw	low (STR_47| (0+32768))
  1899  079A  3482               	retlw	high (STR_47| (0+32768))
  1900  079B  34DC               	retlw	low (STR_48| (0+32768))
  1901  079C  3482               	retlw	high (STR_48| (0+32768))
  1902  079D  3406               	retlw	low (STR_49| (0+32768))
  1903  079E  3483               	retlw	high (STR_49| (0+32768))
  1904  079F  34C0               	retlw	low (STR_50| (0+32768))
  1905  07A0  3482               	retlw	high (STR_50| (0+32768))
  1906  07A1  34C7               	retlw	low (STR_51| (0+32768))
  1907  07A2  3482               	retlw	high (STR_51| (0+32768))
  1908                           
  1909                           ;initializer for _H7826_Gain
  1910  07A3  347B               	retlw	low (STR_22| (0+32768))
  1911  07A4  3483               	retlw	high (STR_22| (0+32768))
  1912  07A5  3476               	retlw	low (STR_23| (0+32768))
  1913  07A6  3483               	retlw	high (STR_23| (0+32768))
  1914  07A7  3485               	retlw	low (STR_24| (0+32768))
  1915  07A8  3483               	retlw	high (STR_24| (0+32768))
  1916  07A9  3437               	retlw	low (STR_25| (0+32768))
  1917  07AA  3483               	retlw	high (STR_25| (0+32768))
  1918  07AB  340D               	retlw	low (STR_26| (0+32768))
  1919  07AC  3483               	retlw	high (STR_26| (0+32768))
  1920  07AD  3419               	retlw	low (STR_27| (0+32768))
  1921  07AE  3483               	retlw	high (STR_27| (0+32768))
  1922  07AF  3431               	retlw	low (STR_28| (0+32768))
  1923  07B0  3483               	retlw	high (STR_28| (0+32768))
  1924  07B1  34EA               	retlw	low (STR_29| (0+32768))
  1925  07B2  3482               	retlw	high (STR_29| (0+32768))
  1926  07B3  34E3               	retlw	low (STR_30| (0+32768))
  1927  07B4  3482               	retlw	high (STR_30| (0+32768))
  1928  07B5  34F1               	retlw	low (STR_31| (0+32768))
  1929  07B6  3482               	retlw	high (STR_31| (0+32768))
  1930  07B7  34B9               	retlw	low (STR_32| (0+32768))
  1931  07B8  3482               	retlw	high (STR_32| (0+32768))
  1932  07B9  34FF               	retlw	low (STR_33| (0+32768))
  1933  07BA  3482               	retlw	high (STR_33| (0+32768))
  1934  07BB  34A9               	retlw	low (STR_34| (0+32768))
  1935  07BC  3482               	retlw	high (STR_34| (0+32768))
  1936  07BD  34A1               	retlw	low (STR_35| (0+32768))
  1937  07BE  3482               	retlw	high (STR_35| (0+32768))
  1938  07BF  3499               	retlw	low (STR_36| (0+32768))
  1939  07C0  3482               	retlw	high (STR_36| (0+32768))
  1940                           
  1941                           	psect	stringtext
  1942  0226                     __pstringtext:	
  1943  0226                     _dpowers:	
  1944  0226  3401               	retlw	1
  1945  0227  3400               	retlw	0
  1946  0228  3400               	retlw	0
  1947  0229  3400               	retlw	0
  1948  022A  340A               	retlw	10
  1949  022B  3400               	retlw	0
  1950  022C  3400               	retlw	0
  1951  022D  3400               	retlw	0
  1952  022E  3464               	retlw	100
  1953  022F  3400               	retlw	0
  1954  0230  3400               	retlw	0
  1955  0231  3400               	retlw	0
  1956  0232  34E8               	retlw	232
  1957  0233  3403               	retlw	3
  1958  0234  3400               	retlw	0
  1959  0235  3400               	retlw	0
  1960  0236  3410               	retlw	16
  1961  0237  3427               	retlw	39
  1962  0238  3400               	retlw	0
  1963  0239  3400               	retlw	0
  1964  023A  34A0               	retlw	160
  1965  023B  3486               	retlw	134
  1966  023C  3401               	retlw	1
  1967  023D  3400               	retlw	0
  1968  023E  3440               	retlw	64
  1969  023F  3442               	retlw	66
  1970  0240  340F               	retlw	15
  1971  0241  3400               	retlw	0
  1972  0242  3480               	retlw	128
  1973  0243  3496               	retlw	150
  1974  0244  3498               	retlw	152
  1975  0245  3400               	retlw	0
  1976  0246  3400               	retlw	0
  1977  0247  34E1               	retlw	225
  1978  0248  34F5               	retlw	245
  1979  0249  3405               	retlw	5
  1980  024A  3400               	retlw	0
  1981  024B  34CA               	retlw	202
  1982  024C  349A               	retlw	154
  1983  024D  343B               	retlw	59
  1984  024E                     __end_of_dpowers:	
  1985  024E                     _DAC_DataTable:	
  1986  024E  3499               	retlw	153
  1987  024F  3401               	retlw	1
  1988  0250  34C2               	retlw	194
  1989  0251  3401               	retlw	1
  1990  0252  34EB               	retlw	235
  1991  0253  3401               	retlw	1
  1992  0254  3414               	retlw	20
  1993  0255  3402               	retlw	2
  1994  0256  343D               	retlw	61
  1995  0257  3402               	retlw	2
  1996  0258  3466               	retlw	102
  1997  0259  3402               	retlw	2
  1998  025A  348F               	retlw	143
  1999  025B  3402               	retlw	2
  2000  025C  34B8               	retlw	184
  2001  025D  3402               	retlw	2
  2002  025E  34E1               	retlw	225
  2003  025F  3402               	retlw	2
  2004  0260  340A               	retlw	10
  2005  0261  3403               	retlw	3
  2006  0262  3433               	retlw	51
  2007  0263  3403               	retlw	3
  2008  0264  345B               	retlw	91
  2009  0265  3403               	retlw	3
  2010  0266  3484               	retlw	132
  2011  0267  3403               	retlw	3
  2012  0268  34AD               	retlw	173
  2013  0269  3403               	retlw	3
  2014  026A  34D6               	retlw	214
  2015  026B  3403               	retlw	3
  2016  026C                     __end_of_DAC_DataTable:	
  2017  0016                     _TMR1	set	22
  2018  000C                     _PORTA	set	12
  2019  001F                     _CPSCON1	set	31
  2020  001E                     _CPSCON0	set	30
  2021  0015                     _TMR0	set	21
  2022  0019                     _T1GCON	set	25
  2023  0018                     _T1CON	set	24
  2024  000D                     _PORTB	set	13
  2025  001B                     _PR2	set	27
  2026  001A                     _TMR2	set	26
  2027  001C                     _T2CON	set	28
  2028  009B                     _TMR6IF	set	155
  2029  0088                     _TMR1IF	set	136
  2030  00C0                     _TMR1ON	set	192
  2031  005F                     _GIE	set	95
  2032  005E                     _PEIE	set	94
  2033  00A1                     _BCL2IF	set	161
  2034  00A0                     _SSP2IF	set	160
  2035  0099                     _OSCCON	set	153
  2036  0095                     _OPTION_REG	set	149
  2037  008D                     _TRISB	set	141
  2038  008C                     _TRISA	set	140
  2039  049B                     _TMR6IE	set	1179
  2040  0488                     _TMR1IE	set	1160
  2041  04A1                     _BCL2IE	set	1185
  2042  04A0                     _SSP2IE	set	1184
  2043  011E                     _APFCON1	set	286
  2044  011D                     _APFCON0	set	285
  2045  0866                     _LATA6	set	2150
  2046  0863                     _LATA3	set	2147
  2047  0864                     _LATA4	set	2148
  2048  018D                     _ANSELB	set	397
  2049  018C                     _ANSELA	set	396
  2050  020D                     _WPUB	set	525
  2051  021C                     _SSP2STATbits	set	540
  2052  0219                     _SSP2BUF	set	537
  2053  021E                     _SSP2CON2	set	542
  2054  021B                     _SSP2MSK	set	539
  2055  021E                     _SSP2CON2bits	set	542
  2056  021D                     _SSP2CON1bits	set	541
  2057  021A                     _SSP2ADD	set	538
  2058  021C                     _SSP2STAT	set	540
  2059  021D                     _SSP2CON1	set	541
  2060  0298                     _CCPR2L	set	664
  2061  029E                     _CCPTMRS	set	670
  2062  029A                     _CCP2CON	set	666
  2063  041E                     _T6CON	set	1054
  2064  041C                     _TMR6	set	1052
  2065  041D                     _PR6	set	1053
  2066  026C                     STR_3:	
  2067  026C  3420               	retlw	32	;' '
  2068  026D  3420               	retlw	32	;' '
  2069  026E  3420               	retlw	32	;' '
  2070  026F  3420               	retlw	32	;' '
  2071  0270  3425               	retlw	37	;'%'
  2072  0271  3430               	retlw	48	;'0'
  2073  0272  3432               	retlw	50	;'2'
  2074  0273  3464               	retlw	100	;'d'
  2075  0274  343A               	retlw	58	;':'
  2076  0275  3425               	retlw	37	;'%'
  2077  0276  3430               	retlw	48	;'0'
  2078  0277  3432               	retlw	50	;'2'
  2079  0278  3464               	retlw	100	;'d'
  2080  0279  3400               	retlw	0
  2081  027A                     STR_4:	
  2082  027A  3453               	retlw	83	;'S'
  2083  027B  3445               	retlw	69	;'E'
  2084  027C  344C               	retlw	76	;'L'
  2085  027D  3445               	retlw	69	;'E'
  2086  027E  3443               	retlw	67	;'C'
  2087  027F  3454               	retlw	84	;'T'
  2088  0280  3446               	retlw	70	;'F'
  2089  0281  3455               	retlw	85	;'U'
  2090  0282  344E               	retlw	78	;'N'
  2091  0283  3443               	retlw	67	;'C'
  2092  0284  3400               	retlw	0
  2093  0285                     STR_6:	
  2094  0285  3450               	retlw	80	;'P'
  2095  0286  344D               	retlw	77	;'M'
  2096  0287  3454               	retlw	84	;'T'
  2097  0288  3444               	retlw	68	;'D'
  2098  0289  3445               	retlw	69	;'E'
  2099  028A  3456               	retlw	86	;'V'
  2100  028B  3449               	retlw	73	;'I'
  2101  028C  3443               	retlw	67	;'C'
  2102  028D  3445               	retlw	69	;'E'
  2103  028E  3400               	retlw	0
  2104  028F                     STR_1:	
  2105  028F  3425               	retlw	37	;'%'
  2106  0290  3437               	retlw	55	;'7'
  2107  0291  346C               	retlw	108	;'l'
  2108  0292  3475               	retlw	117	;'u'
  2109  0293  3420               	retlw	32	;' '
  2110  0294  3425               	retlw	37	;'%'
  2111  0295  3437               	retlw	55	;'7'
  2112  0296  346C               	retlw	108	;'l'
  2113  0297  3475               	retlw	117	;'u'
  2114  0298  3400               	retlw	0
  2115  0299                     STR_36:	
  2116  0299  3432               	retlw	50	;'2'
  2117  029A  3437               	retlw	55	;'7'
  2118  029B  3437               	retlw	55	;'7'
  2119  029C  3434               	retlw	52	;'4'
  2120  029D  3435               	retlw	53	;'5'
  2121  029E  3436               	retlw	54	;'6'
  2122  029F  3432               	retlw	50	;'2'
  2123  02A0  3400               	retlw	0
  2124  02A1                     STR_35:	
  2125  02A1  3431               	retlw	49	;'1'
  2126  02A2  3439               	retlw	57	;'9'
  2127  02A3  3434               	retlw	52	;'4'
  2128  02A4  3430               	retlw	48	;'0'
  2129  02A5  3436               	retlw	54	;'6'
  2130  02A6  3437               	retlw	55	;'7'
  2131  02A7  3433               	retlw	51	;'3'
  2132  02A8  3400               	retlw	0
  2133  02A9                     STR_34:	
  2134  02A9  3431               	retlw	49	;'1'
  2135  02AA  3433               	retlw	51	;'3'
  2136  02AB  3433               	retlw	51	;'3'
  2137  02AC  3436               	retlw	54	;'6'
  2138  02AD  3430               	retlw	48	;'0'
  2139  02AE  3430               	retlw	48	;'0'
  2140  02AF  3436               	retlw	54	;'6'
  2141  02B0  3400               	retlw	0
  2142  02B1                     STR_5:	
  2143  02B1  3441               	retlw	65	;'A'
  2144  02B2  3444               	retlw	68	;'D'
  2145  02B3  344A               	retlw	74	;'J'
  2146  02B4  3447               	retlw	71	;'G'
  2147  02B5  3441               	retlw	65	;'A'
  2148  02B6  3449               	retlw	73	;'I'
  2149  02B7  344E               	retlw	78	;'N'
  2150  02B8  3400               	retlw	0
  2151  02B9                     STR_32:	
  2152  02B9  3436               	retlw	54	;'6'
  2153  02BA  3430               	retlw	48	;'0'
  2154  02BB  3430               	retlw	48	;'0'
  2155  02BC  3430               	retlw	48	;'0'
  2156  02BD  3430               	retlw	48	;'0'
  2157  02BE  3430               	retlw	48	;'0'
  2158  02BF  3400               	retlw	0
  2159  02C0                     STR_50:	
  2160  02C0  3437               	retlw	55	;'7'
  2161  02C1  3430               	retlw	48	;'0'
  2162  02C2  3430               	retlw	48	;'0'
  2163  02C3  3438               	retlw	56	;'8'
  2164  02C4  3439               	retlw	57	;'9'
  2165  02C5  3430               	retlw	48	;'0'
  2166  02C6  3400               	retlw	0
  2167  02C7                     STR_51:	
  2168  02C7  3439               	retlw	57	;'9'
  2169  02C8  3436               	retlw	54	;'6'
  2170  02C9  3438               	retlw	56	;'8'
  2171  02CA  3434               	retlw	52	;'4'
  2172  02CB  3437               	retlw	55	;'7'
  2173  02CC  3432               	retlw	50	;'2'
  2174  02CD  3400               	retlw	0
  2175  02CE                     STR_45:	
  2176  02CE  3431               	retlw	49	;'1'
  2177  02CF  3430               	retlw	48	;'0'
  2178  02D0  3438               	retlw	56	;'8'
  2179  02D1  3438               	retlw	56	;'8'
  2180  02D2  3434               	retlw	52	;'4'
  2181  02D3  3433               	retlw	51	;'3'
  2182  02D4  3400               	retlw	0
  2183  02D5                     STR_47:	
  2184  02D5  3432               	retlw	50	;'2'
  2185  02D6  3434               	retlw	52	;'4'
  2186  02D7  3432               	retlw	50	;'2'
  2187  02D8  3433               	retlw	51	;'3'
  2188  02D9  3436               	retlw	54	;'6'
  2189  02DA  3434               	retlw	52	;'4'
  2190  02DB  3400               	retlw	0
  2191  02DC                     STR_48:	
  2192  02DC  3433               	retlw	51	;'3'
  2193  02DD  3435               	retlw	53	;'5'
  2194  02DE  3431               	retlw	49	;'1'
  2195  02DF  3431               	retlw	49	;'1'
  2196  02E0  3432               	retlw	50	;'2'
  2197  02E1  3437               	retlw	55	;'7'
  2198  02E2  3400               	retlw	0
  2199  02E3                     STR_30:	
  2200  02E3  3432               	retlw	50	;'2'
  2201  02E4  3434               	retlw	52	;'4'
  2202  02E5  3437               	retlw	55	;'7'
  2203  02E6  3436               	retlw	54	;'6'
  2204  02E7  3434               	retlw	52	;'4'
  2205  02E8  3437               	retlw	55	;'7'
  2206  02E9  3400               	retlw	0
  2207  02EA                     STR_29:	
  2208  02EA  3431               	retlw	49	;'1'
  2209  02EB  3435               	retlw	53	;'5'
  2210  02EC  3433               	retlw	51	;'3'
  2211  02ED  3432               	retlw	50	;'2'
  2212  02EE  3432               	retlw	50	;'2'
  2213  02EF  3438               	retlw	56	;'8'
  2214  02F0  3400               	retlw	0
  2215  02F1                     STR_31:	
  2216  02F1  3433               	retlw	51	;'3'
  2217  02F2  3438               	retlw	56	;'8'
  2218  02F3  3439               	retlw	57	;'9'
  2219  02F4  3439               	retlw	57	;'9'
  2220  02F5  3438               	retlw	56	;'8'
  2221  02F6  3438               	retlw	56	;'8'
  2222  02F7  3400               	retlw	0
  2223  02F8                     STR_46:	
  2224  02F8  3431               	retlw	49	;'1'
  2225  02F9  3436               	retlw	54	;'6'
  2226  02FA  3434               	retlw	52	;'4'
  2227  02FB  3431               	retlw	49	;'1'
  2228  02FC  3433               	retlw	51	;'3'
  2229  02FD  3439               	retlw	57	;'9'
  2230  02FE  3400               	retlw	0
  2231  02FF                     STR_33:	
  2232  02FF  3439               	retlw	57	;'9'
  2233  0300  3430               	retlw	48	;'0'
  2234  0301  3433               	retlw	51	;'3'
  2235  0302  3438               	retlw	56	;'8'
  2236  0303  3439               	retlw	57	;'9'
  2237  0304  3439               	retlw	57	;'9'
  2238  0305  3400               	retlw	0
  2239  0306                     STR_49:	
  2240  0306  3434               	retlw	52	;'4'
  2241  0307  3439               	retlw	57	;'9'
  2242  0308  3439               	retlw	57	;'9'
  2243  0309  3439               	retlw	57	;'9'
  2244  030A  3439               	retlw	57	;'9'
  2245  030B  3439               	retlw	57	;'9'
  2246  030C  3400               	retlw	0
  2247  030D                     STR_26:	
  2248  030D  3433               	retlw	51	;'3'
  2249  030E  3430               	retlw	48	;'0'
  2250  030F  3430               	retlw	48	;'0'
  2251  0310  3430               	retlw	48	;'0'
  2252  0311  3430               	retlw	48	;'0'
  2253  0312  3400               	retlw	0
  2254  0313                     STR_44:	
  2255  0313  3437               	retlw	55	;'7'
  2256  0314  3430               	retlw	48	;'0'
  2257  0315  3435               	retlw	53	;'5'
  2258  0316  3430               	retlw	48	;'0'
  2259  0317  3430               	retlw	48	;'0'
  2260  0318  3400               	retlw	0
  2261  0319                     STR_27:	
  2262  0319  3435               	retlw	53	;'5'
  2263  031A  3433               	retlw	51	;'3'
  2264  031B  3435               	retlw	53	;'5'
  2265  031C  3435               	retlw	53	;'5'
  2266  031D  3433               	retlw	51	;'3'
  2267  031E  3400               	retlw	0
  2268  031F                     STR_41:	
  2269  031F  3431               	retlw	49	;'1'
  2270  0320  3436               	retlw	54	;'6'
  2271  0321  3431               	retlw	49	;'1'
  2272  0322  3432               	retlw	50	;'2'
  2273  0323  3435               	retlw	53	;'5'
  2274  0324  3400               	retlw	0
  2275  0325                     STR_42:	
  2276  0325  3432               	retlw	50	;'2'
  2277  0326  3437               	retlw	55	;'7'
  2278  0327  3432               	retlw	50	;'2'
  2279  0328  3433               	retlw	51	;'3'
  2280  0329  3438               	retlw	56	;'8'
  2281  032A  3400               	retlw	0
  2282  032B                     STR_43:	
  2283  032B  3434               	retlw	52	;'4'
  2284  032C  3434               	retlw	52	;'4'
  2285  032D  3434               	retlw	52	;'4'
  2286  032E  3437               	retlw	55	;'7'
  2287  032F  3438               	retlw	56	;'8'
  2288  0330  3400               	retlw	0
  2289  0331                     STR_28:	
  2290  0331  3439               	retlw	57	;'9'
  2291  0332  3432               	retlw	50	;'2'
  2292  0333  3430               	retlw	48	;'0'
  2293  0334  3438               	retlw	56	;'8'
  2294  0335  3438               	retlw	56	;'8'
  2295  0336  3400               	retlw	0
  2296  0337                     STR_25:	
  2297  0337  3431               	retlw	49	;'1'
  2298  0338  3436               	retlw	54	;'6'
  2299  0339  3430               	retlw	48	;'0'
  2300  033A  3439               	retlw	57	;'9'
  2301  033B  3439               	retlw	57	;'9'
  2302  033C  3400               	retlw	0
  2303  033D                     STR_18:	
  2304  033D  3431               	retlw	49	;'1'
  2305  033E  342E               	retlw	46	;'.'
  2306  033F  3430               	retlw	48	;'0'
  2307  0340  3435               	retlw	53	;'5'
  2308  0341  3456               	retlw	86	;'V'
  2309  0342  3400               	retlw	0
  2310  0343                     STR_20:	
  2311  0343  3431               	retlw	49	;'1'
  2312  0344  342E               	retlw	46	;'.'
  2313  0345  3431               	retlw	49	;'1'
  2314  0346  3435               	retlw	53	;'5'
  2315  0347  3456               	retlw	86	;'V'
  2316  0348  3400               	retlw	0
  2317  0349                     STR_8:	
  2318  0349  3430               	retlw	48	;'0'
  2319  034A  342E               	retlw	46	;'.'
  2320  034B  3435               	retlw	53	;'5'
  2321  034C  3435               	retlw	53	;'5'
  2322  034D  3456               	retlw	86	;'V'
  2323  034E  3400               	retlw	0
  2324  034F                     STR_10:	
  2325  034F  3430               	retlw	48	;'0'
  2326  0350  342E               	retlw	46	;'.'
  2327  0351  3436               	retlw	54	;'6'
  2328  0352  3435               	retlw	53	;'5'
  2329  0353  3456               	retlw	86	;'V'
  2330  0354  3400               	retlw	0
  2331  0355                     STR_12:	
  2332  0355  3430               	retlw	48	;'0'
  2333  0356  342E               	retlw	46	;'.'
  2334  0357  3437               	retlw	55	;'7'
  2335  0358  3435               	retlw	53	;'5'
  2336  0359  3456               	retlw	86	;'V'
  2337  035A  3400               	retlw	0
  2338  035B                     STR_14:	
  2339  035B  3430               	retlw	48	;'0'
  2340  035C  342E               	retlw	46	;'.'
  2341  035D  3438               	retlw	56	;'8'
  2342  035E  3435               	retlw	53	;'5'
  2343  035F  3456               	retlw	86	;'V'
  2344  0360  3400               	retlw	0
  2345  0361                     STR_16:	
  2346  0361  3430               	retlw	48	;'0'
  2347  0362  342E               	retlw	46	;'.'
  2348  0363  3439               	retlw	57	;'9'
  2349  0364  3435               	retlw	53	;'5'
  2350  0365  3456               	retlw	86	;'V'
  2351  0366  3400               	retlw	0
  2352  0367                     STR_37:	
  2353  0367  3431               	retlw	49	;'1'
  2354  0368  3432               	retlw	50	;'2'
  2355  0369  3435               	retlw	53	;'5'
  2356  036A  3430               	retlw	48	;'0'
  2357  036B  3400               	retlw	0
  2358  036C                     STR_38:	
  2359  036C  3432               	retlw	50	;'2'
  2360  036D  3435               	retlw	53	;'5'
  2361  036E  3438               	retlw	56	;'8'
  2362  036F  3430               	retlw	48	;'0'
  2363  0370  3400               	retlw	0
  2364  0371                     STR_40:	
  2365  0371  3439               	retlw	57	;'9'
  2366  0372  3431               	retlw	49	;'1'
  2367  0373  3438               	retlw	56	;'8'
  2368  0374  3432               	retlw	50	;'2'
  2369  0375  3400               	retlw	0
  2370  0376                     STR_23:	
  2371  0376  3433               	retlw	51	;'3'
  2372  0377  3439               	retlw	57	;'9'
  2373  0378  3435               	retlw	53	;'5'
  2374  0379  3437               	retlw	55	;'7'
  2375  037A  3400               	retlw	0
  2376  037B                     STR_22:	
  2377  037B  3431               	retlw	49	;'1'
  2378  037C  3437               	retlw	55	;'7'
  2379  037D  3437               	retlw	55	;'7'
  2380  037E  3437               	retlw	55	;'7'
  2381  037F  3400               	retlw	0
  2382  0380                     STR_39:	
  2383  0380  3434               	retlw	52	;'4'
  2384  0381  3439               	retlw	57	;'9'
  2385  0382  3439               	retlw	57	;'9'
  2386  0383  3438               	retlw	56	;'8'
  2387  0384  3400               	retlw	0
  2388  0385                     STR_24:	
  2389  0385  3438               	retlw	56	;'8'
  2390  0386  3432               	retlw	50	;'2'
  2391  0387  3431               	retlw	49	;'1'
  2392  0388  3439               	retlw	57	;'9'
  2393  0389  3400               	retlw	0
  2394  038A                     STR_17:	
  2395  038A  3431               	retlw	49	;'1'
  2396  038B  342E               	retlw	46	;'.'
  2397  038C  3430               	retlw	48	;'0'
  2398  038D  3456               	retlw	86	;'V'
  2399  038E  3400               	retlw	0
  2400  038F                     STR_19:	
  2401  038F  3431               	retlw	49	;'1'
  2402  0390  342E               	retlw	46	;'.'
  2403  0391  3431               	retlw	49	;'1'
  2404  0392  3456               	retlw	86	;'V'
  2405  0393  3400               	retlw	0
  2406  0394                     STR_21:	
  2407  0394  3431               	retlw	49	;'1'
  2408  0395  342E               	retlw	46	;'.'
  2409  0396  3432               	retlw	50	;'2'
  2410  0397  3456               	retlw	86	;'V'
  2411  0398  3400               	retlw	0
  2412  0399                     STR_7:	
  2413  0399  3430               	retlw	48	;'0'
  2414  039A  342E               	retlw	46	;'.'
  2415  039B  3435               	retlw	53	;'5'
  2416  039C  3456               	retlw	86	;'V'
  2417  039D  3400               	retlw	0
  2418  039E                     STR_9:	
  2419  039E  3430               	retlw	48	;'0'
  2420  039F  342E               	retlw	46	;'.'
  2421  03A0  3436               	retlw	54	;'6'
  2422  03A1  3456               	retlw	86	;'V'
  2423  03A2  3400               	retlw	0
  2424  03A3                     STR_11:	
  2425  03A3  3430               	retlw	48	;'0'
  2426  03A4  342E               	retlw	46	;'.'
  2427  03A5  3437               	retlw	55	;'7'
  2428  03A6  3456               	retlw	86	;'V'
  2429  03A7  3400               	retlw	0
  2430  03A8                     STR_13:	
  2431  03A8  3430               	retlw	48	;'0'
  2432  03A9  342E               	retlw	46	;'.'
  2433  03AA  3438               	retlw	56	;'8'
  2434  03AB  3456               	retlw	86	;'V'
  2435  03AC  3400               	retlw	0
  2436  03AD                     STR_15:	
  2437  03AD  3430               	retlw	48	;'0'
  2438  03AE  342E               	retlw	46	;'.'
  2439  03AF  3439               	retlw	57	;'9'
  2440  03B0  3456               	retlw	86	;'V'
  2441  03B1  3400               	retlw	0
  2442  03B2                     STR_2:	
  2443  03B2  3425               	retlw	37	;'%'
  2444  03B3  3436               	retlw	54	;'6'
  2445  03B4  346C               	retlw	108	;'l'
  2446  03B5  3475               	retlw	117	;'u'
  2447  03B6  3400               	retlw	0
  2448                           
  2449                           ; #config settings
  2450  0000                     
  2451                           	psect	cinit
  2452  002D                     start_initialization:	
  2453  002D                     __initialization:	
  2454                           
  2455                           ; Initialize objects allocated to BANK1
  2456  002D  30C8               	movlw	low __pidataBANK1
  2457  002E  0084               	movwf	4
  2458  002F  308E               	movlw	(high __pidataBANK1)| (0+128)
  2459  0030  0085               	movwf	5
  2460  0031  30BF               	movlw	low __pdataBANK1
  2461  0032  0086               	movwf	6
  2462  0033  3000               	movlw	high __pdataBANK1
  2463  0034  0087               	movwf	7
  2464  0035  301E               	movlw	30
  2465  0036  318D  252C  3180   	fcall	init_ram
  2466                           
  2467                           ; Initialize objects allocated to BANK2
  2468  0039  3085               	movlw	low __pidataBANK2
  2469  003A  0084               	movwf	4
  2470  003B  3087               	movlw	(high __pidataBANK2)| (0+128)
  2471  003C  0085               	movwf	5
  2472  003D  3020               	movlw	low __pdataBANK2
  2473  003E  0086               	movwf	6
  2474  003F  3001               	movlw	high __pdataBANK2
  2475  0040  0087               	movwf	7
  2476  0041  303C               	movlw	60
  2477  0042  318D  252C  3180   	fcall	init_ram
  2478                           
  2479                           ; Clear objects allocated to COMMON
  2480  0045  01F0               	clrf	__pbssCOMMON& (0+127)
  2481  0046  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2482  0047  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2483  0048  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2484  0049  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2485  004A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2486                           
  2487                           ; Clear objects allocated to BANK0
  2488  004B  3065               	movlw	low __pbssBANK0
  2489  004C  0084               	movwf	4
  2490  004D  3000               	movlw	high __pbssBANK0
  2491  004E  0085               	movwf	5
  2492  004F  300B               	movlw	11
  2493  0050  318D  2526  3180   	fcall	clear_ram0
  2494                           
  2495                           ; Clear objects allocated to BANK1
  2496  0053  30A0               	movlw	low __pbssBANK1
  2497  0054  0084               	movwf	4
  2498  0055  3000               	movlw	high __pbssBANK1
  2499  0056  0085               	movwf	5
  2500  0057  301F               	movlw	31
  2501  0058  318D  2526         	fcall	clear_ram0
  2502  005A                     end_of_initialization:	
  2503                           ;End of C runtime variable initialization code
  2504                           
  2505  005A                     __end_of__initialization:	
  2506  005A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2507  005B  0020               	movlb	0
  2508  005C  3183  2BB7         	ljmp	_main	;jump to C main() function
  2509                           
  2510                           	psect	bssCOMMON
  2511  0070                     __pbssCOMMON:	
  2512  0070                     _mTouch_Interval:	
  2513  0070                     	ds	3
  2514  0073                     _count:	
  2515  0073                     	ds	2
  2516  0075                     mTouch_Read@channel:	
  2517  0075                     	ds	1
  2518                           
  2519                           	psect	bssBANK0
  2520  0065                     __pbssBANK0:	
  2521  0065                     _tcnt:	
  2522  0065                     	ds	8
  2523  006D                     _mode:	
  2524  006D                     	ds	2
  2525  006F                     _ConfigReg:	
  2526  006F                     	ds	1
  2527                           
  2528                           	psect	bssBANK1
  2529  00A0                     __pbssBANK1:	
  2530  00A0                     _cnts:	
  2531  00A0                     	ds	4
  2532  00A4                     _CPS_Data:	
  2533  00A4                     	ds	3
  2534  00A7                     _CPS_PreData:	
  2535  00A7                     	ds	3
  2536  00AA                     _I2C2_Config:	
  2537  00AA                     	ds	19
  2538  00BD                     _VoltageReg:	
  2539  00BD                     	ds	2
  2540                           
  2541                           	psect	dataBANK1
  2542  00BF                     __pdataBANK1:	
  2543  00BF                     _DAC_VoltageTable:	
  2544  00BF                     	ds	30
  2545                           
  2546                           	psect	dataBANK2
  2547  0120                     __pdataBANK2:	
  2548  0120                     _H7826_01_Gain:	
  2549  0120                     	ds	30
  2550  013E                     _H7826_Gain:	
  2551  013E                     	ds	30
  2552                           
  2553                           	psect	inittext
  2554  0D2C                     init_ram:	
  2555  0D2C  00FE               	movwf	126
  2556  0D2D                     initloop:	
  2557  0D2D  0012               	moviw fsr0++
  2558  0D2E  001E               	movwi fsr1++
  2559  0D2F  0BFE               	decfsz	126,f
  2560  0D30  2D2D               	goto	initloop
  2561  0D31  3400               	retlw	0
  2562                           
  2563                           	psect	clrtext
  2564  0D26                     clear_ram0:	
  2565                           ;	Called with FSR0 containing the base address, and
  2566                           ;	WREG with the size to clear
  2567                           
  2568  0D26  0064               	clrwdt	;clear the watchdog before getting into this loop
  2569  0D27                     clrloop0:	
  2570  0D27  0180               	clrf	0	;clear RAM location pointed to by FSR
  2571  0D28  3101               	addfsr 0,1
  2572  0D29  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2573  0D2A  2D27               	goto	clrloop0	;have we reached the end yet?
  2574  0D2B  3400               	retlw	0	;all done for this memory range, return
  2575                           
  2576                           	psect	cstackCOMMON
  2577  0076                     __pcstackCOMMON:	
  2578  0076                     ?_isdigit:	
  2579  0076                     ?_LCD_DisplayClear:	
  2580                           ; 1 bit 
  2581                           
  2582  0076                     ?_Timer1_ClearRecord:	
  2583                           ; 1 bytes @ 0x0
  2584                           
  2585  0076                     ?_Basic_Init:	
  2586                           ; 1 bytes @ 0x0
  2587                           
  2588  0076                     ?_mTouch_Check:	
  2589                           ; 1 bytes @ 0x0
  2590                           
  2591  0076                     ?_mTouch_IntervalDecrement:	
  2592                           ; 1 bytes @ 0x0
  2593                           
  2594  0076                     ??_mTouch_IntervalDecrement:	
  2595                           ; 1 bytes @ 0x0
  2596                           
  2597  0076                     ?_Buzzer_Init:	
  2598                           ; 1 bytes @ 0x0
  2599                           
  2600  0076                     ?_Buzzer_SetDuty:	
  2601                           ; 1 bytes @ 0x0
  2602                           
  2603  0076                     ?_Buzzer_Count1ms:	
  2604                           ; 1 bytes @ 0x0
  2605                           
  2606  0076                     ?_I2C2_PinInit:	
  2607                           ; 1 bytes @ 0x0
  2608                           
  2609  0076                     ?_I2C2_Interrupt:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612  0076                     ??_I2C2_Interrupt:	
  2613                           ; 1 bytes @ 0x0
  2614                           
  2615  0076                     ?_I2C_CommonInterrupt:	
  2616                           ; 1 bytes @ 0x0
  2617                           
  2618  0076                     ?_LCD_WriteData:	
  2619                           ; 1 bytes @ 0x0
  2620                           
  2621  0076                     ?_LCD_Init:	
  2622                           ; 1 bytes @ 0x0
  2623                           
  2624  0076                     ?_putch:	
  2625                           ; 1 bytes @ 0x0
  2626                           
  2627  0076                     ?_LCD_CursorHome:	
  2628                           ; 1 bytes @ 0x0
  2629                           
  2630  0076                     ?_DAC_Initialize:	
  2631                           ; 1 bytes @ 0x0
  2632                           
  2633  0076                     ?_Timer1_Init:	
  2634                           ; 1 bytes @ 0x0
  2635                           
  2636  0076                     ?_Timer1_StartCount:	
  2637                           ; 1 bytes @ 0x0
  2638                           
  2639  0076                     ?_Timer1_StopCount:	
  2640                           ; 1 bytes @ 0x0
  2641                           
  2642  0076                     ?_Timer1_GetSecond:	
  2643                           ; 1 bytes @ 0x0
  2644                           
  2645  0076                     ?_Timer1_GetMinute:	
  2646                           ; 1 bytes @ 0x0
  2647                           
  2648  0076                     ?_Timer1_Count1ms:	
  2649                           ; 1 bytes @ 0x0
  2650                           
  2651  0076                     ?_Timer1_DetectAssignCount:	
  2652                           ; 1 bytes @ 0x0
  2653                           
  2654  0076                     ??_Timer1_DetectAssignCount:	
  2655                           ; 1 bytes @ 0x0
  2656                           
  2657  0076                     ?_Timer6_Init:	
  2658                           ; 1 bytes @ 0x0
  2659                           
  2660  0076                     ?_Timer6_CheckFlag:	
  2661                           ; 1 bytes @ 0x0
  2662                           
  2663  0076                     ??_Timer6_CheckFlag:	
  2664                           ; 1 bytes @ 0x0
  2665                           
  2666  0076                     ?_mTouch_PortInit:	
  2667                           ; 1 bytes @ 0x0
  2668                           
  2669  0076                     ?_mTouch_Init:	
  2670                           ; 1 bytes @ 0x0
  2671                           
  2672  0076                     ?_mTouch_Read:	
  2673                           ; 1 bytes @ 0x0
  2674                           
  2675  0076                     ??_mTouch_Read:	
  2676                           ; 1 bytes @ 0x0
  2677                           
  2678  0076                     ?_main:	
  2679                           ; 1 bytes @ 0x0
  2680                           
  2681  0076                     ?_Handler:	
  2682                           ; 1 bytes @ 0x0
  2683                           
  2684  0076                     ?i1_Buzzer_MiliSecond:	
  2685                           ; 1 bytes @ 0x0
  2686                           
  2687  0076                     Buzzer_SetDuty@duty:	
  2688                           ; 1 bytes @ 0x0
  2689                           
  2690  0076                     i1Buzzer_MiliSecond@time:	
  2691                           ; 2 bytes @ 0x0
  2692                           
  2693                           
  2694                           ; 2 bytes @ 0x0
  2695  0076                     	ds	1
  2696  0077                     ??_I2C_CommonInterrupt:	
  2697                           
  2698                           ; 1 bytes @ 0x1
  2699  0077                     	ds	1
  2700  0078                     ??_Buzzer_SetDuty:	
  2701  0078                     ??_Timer1_Count1ms:	
  2702                           ; 1 bytes @ 0x2
  2703                           
  2704  0078                     ??i1_Buzzer_MiliSecond:	
  2705                           ; 1 bytes @ 0x2
  2706                           
  2707                           
  2708                           ; 1 bytes @ 0x2
  2709  0078                     	ds	2
  2710  007A                     Buzzer_SetDuty@CCP2CON_Pre:	
  2711                           
  2712                           ; 1 bytes @ 0x4
  2713  007A                     	ds	1
  2714  007B                     ??_Buzzer_Count1ms:	
  2715  007B                     ??_Handler:	
  2716                           ; 1 bytes @ 0x5
  2717                           
  2718                           
  2719                           ; 1 bytes @ 0x5
  2720  007B                     	ds	1
  2721                           
  2722                           	psect	cstackBANK0
  2723  0020                     __pcstackBANK0:	
  2724  0020                     ??_Timer1_ClearRecord:	
  2725  0020                     ??_Basic_Init:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728  0020                     ??_isdigit:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  0020                     ??_Buzzer_Init:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  0020                     ?_Buzzer_MiliSecond:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737  0020                     ??_I2C2_PinInit:	
  2738                           ; 1 bytes @ 0x0
  2739                           
  2740  0020                     ?_I2C2_Transmit:	
  2741                           ; 1 bytes @ 0x0
  2742                           
  2743  0020                     ??_LCD_WriteData:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746  0020                     ??_Timer1_Init:	
  2747                           ; 1 bytes @ 0x0
  2748                           
  2749  0020                     ??_Timer1_StartCount:	
  2750                           ; 1 bytes @ 0x0
  2751                           
  2752  0020                     ??_Timer1_StopCount:	
  2753                           ; 1 bytes @ 0x0
  2754                           
  2755  0020                     ??_Timer1_GetSecond:	
  2756                           ; 1 bytes @ 0x0
  2757                           
  2758  0020                     ??_Timer1_GetMinute:	
  2759                           ; 1 bytes @ 0x0
  2760                           
  2761  0020                     ??_Timer6_Init:	
  2762                           ; 1 bytes @ 0x0
  2763                           
  2764  0020                     ??_mTouch_PortInit:	
  2765                           ; 1 bytes @ 0x0
  2766                           
  2767  0020                     ?___wmul:	
  2768                           ; 1 bytes @ 0x0
  2769                           
  2770  0020                     ?_Timer1_GetCountSum:	
  2771                           ; 2 bytes @ 0x0
  2772                           
  2773  0020                     ?___lmul:	
  2774                           ; 4 bytes @ 0x0
  2775                           
  2776  0020                     I2C2_Transmit@pData:	
  2777                           ; 4 bytes @ 0x0
  2778                           
  2779  0020                     _isdigit$786:	
  2780                           ; 1 bytes @ 0x0
  2781                           
  2782  0020                     Buzzer_MiliSecond@time:	
  2783                           ; 1 bytes @ 0x0
  2784                           
  2785  0020                     ___wmul@multiplier:	
  2786                           ; 2 bytes @ 0x0
  2787                           
  2788  0020                     ___lmul@multiplier:	
  2789                           ; 2 bytes @ 0x0
  2790                           
  2791                           
  2792                           ; 4 bytes @ 0x0
  2793  0020                     	ds	1
  2794  0021                     ?_I2C2_Setting:	
  2795  0021                     ??_mTouch_Init:	
  2796                           ; 1 bytes @ 0x1
  2797                           
  2798  0021                     I2C2_Setting@mode:	
  2799                           ; 1 bytes @ 0x1
  2800                           
  2801  0021                     I2C2_Transmit@size:	
  2802                           ; 1 bytes @ 0x1
  2803                           
  2804  0021                     isdigit@c:	
  2805                           ; 1 bytes @ 0x1
  2806                           
  2807                           
  2808                           ; 1 bytes @ 0x1
  2809  0021                     	ds	1
  2810  0022                     ??_mTouch_Check:	
  2811  0022                     ??_Buzzer_MiliSecond:	
  2812                           ; 1 bytes @ 0x2
  2813                           
  2814  0022                     ??_I2C2_Transmit:	
  2815                           ; 1 bytes @ 0x2
  2816                           
  2817  0022                     I2C2_Setting@Speed:	
  2818                           ; 1 bytes @ 0x2
  2819                           
  2820  0022                     LCD_WriteData@point:	
  2821                           ; 1 bytes @ 0x2
  2822                           
  2823  0022                     ___wmul@multiplicand:	
  2824                           ; 1 bytes @ 0x2
  2825                           
  2826                           
  2827                           ; 2 bytes @ 0x2
  2828  0022                     	ds	1
  2829  0023                     ??_LCD_DisplayClear:	
  2830  0023                     ??_I2C2_Setting:	
  2831                           ; 1 bytes @ 0x3
  2832                           
  2833  0023                     ??_putch:	
  2834                           ; 1 bytes @ 0x3
  2835                           
  2836  0023                     ??_LCD_CursorHome:	
  2837                           ; 1 bytes @ 0x3
  2838                           
  2839  0023                     ?_LCD_CursorPosition:	
  2840                           ; 1 bytes @ 0x3
  2841                           
  2842  0023                     putch@c:	
  2843                           ; 1 bytes @ 0x3
  2844                           
  2845  0023                     LCD_CursorPosition@ty:	
  2846                           ; 1 bytes @ 0x3
  2847                           
  2848                           
  2849                           ; 1 bytes @ 0x3
  2850  0023                     	ds	1
  2851  0024                     ??_LCD_Init:	
  2852  0024                     ??_LCD_CursorPosition:	
  2853                           ; 1 bytes @ 0x4
  2854                           
  2855  0024                     ??_Timer1_GetCountSum:	
  2856                           ; 1 bytes @ 0x4
  2857                           
  2858  0024                     ??___wmul:	
  2859                           ; 1 bytes @ 0x4
  2860                           
  2861  0024                     I2C2_Setting@address:	
  2862                           ; 1 bytes @ 0x4
  2863                           
  2864  0024                     I2C2_Transmit@address:	
  2865                           ; 1 bytes @ 0x4
  2866                           
  2867  0024                     ___wmul@product:	
  2868                           ; 1 bytes @ 0x4
  2869                           
  2870  0024                     ___lmul@multiplicand:	
  2871                           ; 2 bytes @ 0x4
  2872                           
  2873                           
  2874                           ; 4 bytes @ 0x4
  2875  0024                     	ds	1
  2876  0025                     ?_I2C_Init:	
  2877  0025                     I2C2_Transmit@i:	
  2878                           ; 1 bytes @ 0x5
  2879                           
  2880  0025                     I2C_Init@address:	
  2881                           ; 1 bytes @ 0x5
  2882                           
  2883  0025                     LCD_CursorPosition@tx:	
  2884                           ; 1 bytes @ 0x5
  2885                           
  2886                           
  2887                           ; 1 bytes @ 0x5
  2888  0025                     	ds	1
  2889  0026                     I2C2_Transmit@i_172:	
  2890  0026                     I2C_Init@mode:	
  2891                           ; 1 bytes @ 0x6
  2892                           
  2893                           
  2894                           ; 1 bytes @ 0x6
  2895  0026                     	ds	1
  2896  0027                     I2C2_Transmit@result:	
  2897  0027                     I2C_Init@Speed:	
  2898                           ; 1 bytes @ 0x7
  2899                           
  2900  0027                     mTouch_Check@chan:	
  2901                           ; 1 bytes @ 0x7
  2902                           
  2903                           
  2904                           ; 1 bytes @ 0x7
  2905  0027                     	ds	1
  2906  0028                     ??_I2C_Init:	
  2907  0028                     ?_I2C_Transmit:	
  2908                           ; 1 bytes @ 0x8
  2909                           
  2910  0028                     ??___lmul:	
  2911                           ; 1 bytes @ 0x8
  2912                           
  2913  0028                     I2C_Transmit@address:	
  2914                           ; 1 bytes @ 0x8
  2915                           
  2916  0028                     ___lmul@product:	
  2917                           ; 1 bytes @ 0x8
  2918                           
  2919                           
  2920                           ; 4 bytes @ 0x8
  2921  0028                     	ds	1
  2922  0029                     I2C_Transmit@pData:	
  2923                           
  2924                           ; 1 bytes @ 0x9
  2925  0029                     	ds	1
  2926  002A                     I2C_Init@I2Cx:	
  2927  002A                     I2C_Transmit@size:	
  2928                           ; 1 bytes @ 0xA
  2929                           
  2930                           
  2931                           ; 1 bytes @ 0xA
  2932  002A                     	ds	1
  2933  002B                     ??_I2C_Transmit:	
  2934                           
  2935                           ; 1 bytes @ 0xB
  2936  002B                     	ds	1
  2937  002C                     ?___lldiv:	
  2938  002C                     ___lldiv@divisor:	
  2939                           ; 4 bytes @ 0xC
  2940                           
  2941                           
  2942                           ; 4 bytes @ 0xC
  2943  002C                     	ds	2
  2944  002E                     I2C_Transmit@I2Cx:	
  2945                           
  2946                           ; 1 bytes @ 0xE
  2947  002E                     	ds	1
  2948  002F                     I2C_Transmit@result:	
  2949                           
  2950                           ; 1 bytes @ 0xF
  2951  002F                     	ds	1
  2952  0030                     ??_DAC_Initialize:	
  2953  0030                     ?_DAC_WriteVoltage:	
  2954                           ; 1 bytes @ 0x10
  2955                           
  2956  0030                     DAC_WriteVoltage@volue:	
  2957                           ; 1 bytes @ 0x10
  2958                           
  2959  0030                     ___lldiv@dividend:	
  2960                           ; 2 bytes @ 0x10
  2961                           
  2962                           
  2963                           ; 4 bytes @ 0x10
  2964  0030                     	ds	2
  2965  0032                     ??_DAC_WriteVoltage:	
  2966                           
  2967                           ; 1 bytes @ 0x12
  2968  0032                     	ds	2
  2969  0034                     ??___lldiv:	
  2970                           
  2971                           ; 1 bytes @ 0x14
  2972  0034                     	ds	1
  2973  0035                     ___lldiv@quotient:	
  2974                           
  2975                           ; 4 bytes @ 0x15
  2976  0035                     	ds	4
  2977  0039                     ___lldiv@counter:	
  2978                           
  2979                           ; 1 bytes @ 0x19
  2980  0039                     	ds	1
  2981  003A                     ?_Timer1_GetCPS:	
  2982  003A                     ?___llmod:	
  2983                           ; 4 bytes @ 0x1A
  2984                           
  2985  003A                     ___llmod@divisor:	
  2986                           ; 4 bytes @ 0x1A
  2987                           
  2988                           
  2989                           ; 4 bytes @ 0x1A
  2990  003A                     	ds	4
  2991  003E                     ??_Timer1_GetCPS:	
  2992  003E                     ?_Timer1_GetCPM:	
  2993                           ; 1 bytes @ 0x1E
  2994                           
  2995  003E                     ___llmod@dividend:	
  2996                           ; 4 bytes @ 0x1E
  2997                           
  2998                           
  2999                           ; 4 bytes @ 0x1E
  3000  003E                     	ds	4
  3001  0042                     ??_Timer1_GetCPM:	
  3002  0042                     ??___llmod:	
  3003                           ; 1 bytes @ 0x22
  3004                           
  3005  0042                     _Timer1_GetCPM$1073:	
  3006                           ; 1 bytes @ 0x22
  3007                           
  3008                           
  3009                           ; 4 bytes @ 0x22
  3010  0042                     	ds	1
  3011  0043                     ___llmod@counter:	
  3012                           
  3013                           ; 1 bytes @ 0x23
  3014  0043                     	ds	3
  3015  0046                     ?_printf:	
  3016  0046                     printf@f:	
  3017                           ; 2 bytes @ 0x26
  3018                           
  3019                           
  3020                           ; 2 bytes @ 0x26
  3021  0046                     	ds	10
  3022  0050                     ??_printf:	
  3023                           
  3024                           ; 1 bytes @ 0x30
  3025  0050                     	ds	6
  3026  0056                     printf@prec:	
  3027                           
  3028                           ; 2 bytes @ 0x36
  3029  0056                     	ds	2
  3030  0058                     printf@val:	
  3031                           
  3032                           ; 4 bytes @ 0x38
  3033  0058                     	ds	4
  3034  005C                     printf@ap:	
  3035                           
  3036                           ; 1 bytes @ 0x3C
  3037  005C                     	ds	1
  3038  005D                     printf@flag:	
  3039                           
  3040                           ; 1 bytes @ 0x3D
  3041  005D                     	ds	1
  3042  005E                     printf@width:	
  3043                           
  3044                           ; 2 bytes @ 0x3E
  3045  005E                     	ds	2
  3046  0060                     printf@c:	
  3047                           
  3048                           ; 1 bytes @ 0x40
  3049  0060                     	ds	1
  3050  0061                     ??_main:	
  3051                           
  3052                           ; 1 bytes @ 0x41
  3053  0061                     	ds	4
  3054                           
  3055                           	psect	maintext
  3056  03B7                     __pmaintext:	
  3057 ;;
  3058 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3059 ;;
  3060 ;; *************** function _main *****************
  3061 ;; Defined at:
  3062 ;;		line 23 in file "main.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      char 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : B1F/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3076 ;;      Params:         0       0       0       0       0       0
  3077 ;;      Locals:         0       0       0       0       0       0
  3078 ;;      Temps:          0       4       0       0       0       0
  3079 ;;      Totals:         0       4       0       0       0       0
  3080 ;;Total ram usage:        4 bytes
  3081 ;; Hardware stack levels required when called:    7
  3082 ;; This function calls:
  3083 ;;		_Basic_Init
  3084 ;;		_Buzzer_Init
  3085 ;;		_DAC_Initialize
  3086 ;;		_DAC_WriteVoltage
  3087 ;;		_LCD_CursorHome
  3088 ;;		_LCD_CursorPosition
  3089 ;;		_LCD_Init
  3090 ;;		_Timer1_GetCPM
  3091 ;;		_Timer1_GetCPS
  3092 ;;		_Timer1_GetCountSum
  3093 ;;		_Timer1_GetMinute
  3094 ;;		_Timer1_GetSecond
  3095 ;;		_Timer1_Init
  3096 ;;		_Timer1_StartCount
  3097 ;;		_Timer1_StopCount
  3098 ;;		_Timer6_Init
  3099 ;;		_mTouch_Check
  3100 ;;		_mTouch_Init
  3101 ;;		_printf
  3102 ;; This function is called by:
  3103 ;;		Startup code after reset
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function _main
  3109  03B7                     _main:	
  3110                           
  3111                           ;main.c: 25: Basic_Init();
  3112                           
  3113                           ;incstack = 0
  3114                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3115  03B7  318D  25B2  3183   	fcall	_Basic_Init
  3116                           
  3117                           ;main.c: 26: LATA6 = 1;
  3118  03BA  0022               	movlb	2	; select bank2
  3119  03BB  170C               	bsf	12,6	;volatile
  3120                           
  3121                           ;main.c: 27: Buzzer_Init();
  3122  03BC  318F  274C  3183   	fcall	_Buzzer_Init
  3123                           
  3124                           ;main.c: 28: LCD_Init();
  3125  03BF  3185  252A  3183   	fcall	_LCD_Init
  3126                           
  3127                           ;main.c: 29: Timer1_Init();
  3128  03C2  318F  2706  3183   	fcall	_Timer1_Init
  3129                           
  3130                           ;main.c: 30: Timer1_StopCount();
  3131  03C5  318D  2523  3183   	fcall	_Timer1_StopCount
  3132                           
  3133                           ;main.c: 31: mTouch_Init();
  3134  03C8  318D  25E7  3183   	fcall	_mTouch_Init
  3135                           
  3136                           ;main.c: 32: Timer6_Init();
  3137  03CB  318D  25D4  3183   	fcall	_Timer6_Init
  3138                           
  3139                           ;main.c: 33: DAC_Initialize();
  3140  03CE  318E  26E6  3183   	fcall	_DAC_Initialize
  3141                           
  3142                           ;main.c: 34: DAC_WriteVoltage(DAC_DataTable[0]);
  3143  03D1  304E               	movlw	low (_DAC_DataTable| (0+32768))
  3144  03D2  0084               	movwf	4
  3145  03D3  3082               	movlw	high (_DAC_DataTable| (0+32768))
  3146  03D4  0085               	movwf	5
  3147  03D5  3F00               	moviw [0]fsr0
  3148  03D6  0020               	movlb	0	; select bank0
  3149  03D7  00B0               	movwf	DAC_WriteVoltage@volue
  3150  03D8  3F01               	moviw [1]fsr0
  3151  03D9  00B1               	movwf	DAC_WriteVoltage@volue+1
  3152  03DA  3187  27C1  3183   	fcall	_DAC_WriteVoltage
  3153                           
  3154                           ;main.c: 36: Timer1_StartCount();
  3155  03DD  3187  27FB  3183   	fcall	_Timer1_StartCount
  3156                           
  3157                           ;main.c: 38: mode.ModeNum = 0;
  3158  03E0  0020               	movlb	0	; select bank0
  3159  03E1  01EE               	clrf	_mode+1
  3160                           
  3161                           ;main.c: 40: DAC_WriteVoltage(DAC_DataTable[6]);
  3162  03E2  305A               	movlw	low ((_DAC_DataTable+12)| (0+32768))
  3163  03E3  0084               	movwf	4
  3164  03E4  3082               	movlw	high ((_DAC_DataTable+12)| (0+32768))
  3165  03E5  0085               	movwf	5
  3166  03E6  3F00               	moviw [0]fsr0
  3167  03E7  00B0               	movwf	DAC_WriteVoltage@volue
  3168  03E8  3F01               	moviw [1]fsr0
  3169  03E9  00B1               	movwf	DAC_WriteVoltage@volue+1
  3170  03EA  3187  27C1  3183   	fcall	_DAC_WriteVoltage
  3171  03ED                     l3469:	
  3172                           ;main.c: 42: while(1)
  3173                           
  3174                           
  3175                           ;main.c: 43: {
  3176                           ;main.c: 44: if(mTouch_Check(2)&&(mode.ModeNum<4-1))
  3177  03ED  3002               	movlw	2
  3178  03EE  3186  2640  3183   	fcall	_mTouch_Check
  3179  03F1  3A00               	xorlw	0
  3180  03F2  1903               	skipnz
  3181  03F3  2BFE               	goto	l3475
  3182  03F4  3003               	movlw	3
  3183  03F5  0020               	movlb	0	; select bank0
  3184  03F6  026E               	subwf	_mode+1,w
  3185  03F7  1803               	skipnc
  3186  03F8  2BFE               	goto	l3475
  3187                           
  3188                           ;main.c: 45: mode.ModeNum++;
  3189  03F9  3001               	movlw	1
  3190  03FA  00E1               	movwf	??_main
  3191  03FB  0861               	movf	??_main,w
  3192  03FC  07EE               	addwf	_mode+1,f
  3193  03FD  2C0B               	goto	l3481
  3194  03FE                     l3475:	
  3195                           
  3196                           ;main.c: 46: else if(mTouch_Check(1)&&(mode.ModeNum>0))
  3197  03FE  3001               	movlw	1
  3198  03FF  3186  2640  3183   	fcall	_mTouch_Check
  3199  0402  3A00               	xorlw	0
  3200  0403  1903               	skipnz
  3201  0404  2C0B               	goto	l3481
  3202  0405  0020               	movlb	0	; select bank0
  3203  0406  086E               	movf	_mode+1,w
  3204  0407  1903               	btfsc	3,2
  3205  0408  2C0B               	goto	l3481
  3206                           
  3207                           ;main.c: 47: mode.ModeNum--;
  3208  0409  3001               	movlw	1
  3209  040A  02EE               	subwf	_mode+1,f
  3210  040B                     l3481:	
  3211                           
  3212                           ;main.c: 49: LCD_CursorHome();
  3213  040B  318D  2592  3183   	fcall	_LCD_CursorHome
  3214                           
  3215                           ;main.c: 50: switch(mode.ModeNum)
  3216  040E  2C82               	goto	l3499
  3217  040F                     l3483:	
  3218                           ;main.c: 51: {
  3219                           ;main.c: 52: case COUNT:
  3220                           
  3221                           
  3222                           ;main.c: 53: printf("%7lu %7lu", Timer1_GetCPM(),Timer1_GetCountSum());
  3223  040F  308F               	movlw	low (STR_1| (0+32768))
  3224  0410  0020               	movlb	0	; select bank0
  3225  0411  00C6               	movwf	printf@f
  3226  0412  3082               	movlw	high (STR_1| (0+32768))
  3227  0413  00C7               	movwf	printf@f+1
  3228  0414  318F  2774  3183   	fcall	_Timer1_GetCPM
  3229  0417  0020               	movlb	0	; select bank0
  3230  0418  0841               	movf	?_Timer1_GetCPM+3,w
  3231  0419  00CB               	movwf	?_printf+5
  3232  041A  0840               	movf	?_Timer1_GetCPM+2,w
  3233  041B  00CA               	movwf	?_printf+4
  3234  041C  083F               	movf	?_Timer1_GetCPM+1,w
  3235  041D  00C9               	movwf	?_printf+3
  3236  041E  083E               	movf	?_Timer1_GetCPM,w
  3237  041F  00C8               	movwf	?_printf+2
  3238  0420  318D  25C3  3183   	fcall	_Timer1_GetCountSum
  3239  0423  0020               	movlb	0	; select bank0
  3240  0424  0823               	movf	?_Timer1_GetCountSum+3,w
  3241  0425  00CF               	movwf	?_printf+9
  3242  0426  0822               	movf	?_Timer1_GetCountSum+2,w
  3243  0427  00CE               	movwf	?_printf+8
  3244  0428  0821               	movf	?_Timer1_GetCountSum+1,w
  3245  0429  00CD               	movwf	?_printf+7
  3246  042A  0820               	movf	?_Timer1_GetCountSum,w
  3247  042B  00CC               	movwf	?_printf+6
  3248  042C  3180  205E  3183   	fcall	_printf
  3249                           
  3250                           ;main.c: 54: LCD_CursorPosition(0,1);
  3251  042F  0020               	movlb	0	; select bank0
  3252  0430  01A3               	clrf	LCD_CursorPosition@ty
  3253  0431  0AA3               	incf	LCD_CursorPosition@ty,f
  3254  0432  3000               	movlw	0
  3255  0433  318E  260F  3183   	fcall	_LCD_CursorPosition
  3256                           
  3257                           ;main.c: 55: printf("%6lu",Timer1_GetCPS());
  3258  0436  30B2               	movlw	low (STR_2| (0+32768))
  3259  0437  0020               	movlb	0	; select bank0
  3260  0438  00C6               	movwf	printf@f
  3261  0439  3083               	movlw	high (STR_2| (0+32768))
  3262  043A  00C7               	movwf	printf@f+1
  3263  043B  3187  270B  3183   	fcall	_Timer1_GetCPS
  3264  043E  0020               	movlb	0	; select bank0
  3265  043F  083D               	movf	?_Timer1_GetCPS+3,w
  3266  0440  00CB               	movwf	?_printf+5
  3267  0441  083C               	movf	?_Timer1_GetCPS+2,w
  3268  0442  00CA               	movwf	?_printf+4
  3269  0443  083B               	movf	?_Timer1_GetCPS+1,w
  3270  0444  00C9               	movwf	?_printf+3
  3271  0445  083A               	movf	?_Timer1_GetCPS,w
  3272  0446  00C8               	movwf	?_printf+2
  3273  0447  3180  205E  3183   	fcall	_printf
  3274                           
  3275                           ;main.c: 56: printf("    %02d:%02d",Timer1_GetMinute(),Timer1_GetSecond());
  3276  044A  306C               	movlw	low (STR_3| (0+32768))
  3277  044B  0020               	movlb	0	; select bank0
  3278  044C  00C6               	movwf	printf@f
  3279  044D  3082               	movlw	high (STR_3| (0+32768))
  3280  044E  00C7               	movwf	printf@f+1
  3281  044F  318D  251D  3183   	fcall	_Timer1_GetMinute
  3282  0452  0020               	movlb	0	; select bank0
  3283  0453  00E1               	movwf	??_main
  3284  0454  01E2               	clrf	??_main+1
  3285  0455  0861               	movf	??_main,w
  3286  0456  00C8               	movwf	?_printf+2
  3287  0457  0862               	movf	??_main+1,w
  3288  0458  00C9               	movwf	?_printf+3
  3289  0459  318D  2520  3183   	fcall	_Timer1_GetSecond
  3290  045C  0020               	movlb	0	; select bank0
  3291  045D  00E3               	movwf	??_main+2
  3292  045E  01E4               	clrf	??_main+3
  3293  045F  0863               	movf	??_main+2,w
  3294  0460  00CA               	movwf	?_printf+4
  3295  0461  0864               	movf	??_main+3,w
  3296  0462  00CB               	movwf	?_printf+5
  3297  0463  3180  205E  3183   	fcall	_printf
  3298                           
  3299                           ;main.c: 57: break;
  3300  0466  2BED               	goto	l3469
  3301  0467                     l3491:	
  3302                           ;main.c: 58: case SELECTFUNC:
  3303                           
  3304                           
  3305                           ;main.c: 59: printf("SELECTFUNC");
  3306  0467  307A               	movlw	low (STR_4| (0+32768))
  3307  0468  0020               	movlb	0	; select bank0
  3308  0469  00C6               	movwf	printf@f
  3309  046A  3082               	movlw	high (STR_4| (0+32768))
  3310  046B  00C7               	movwf	printf@f+1
  3311  046C  3180  205E  3183   	fcall	_printf
  3312                           
  3313                           ;main.c: 60: break;
  3314  046F  2BED               	goto	l3469
  3315  0470                     l3493:	
  3316                           ;main.c: 61: case ADJGAIN:
  3317                           
  3318                           
  3319                           ;main.c: 62: printf("ADJGAIN");
  3320  0470  30B1               	movlw	low (STR_5| (0+32768))
  3321  0471  0020               	movlb	0	; select bank0
  3322  0472  00C6               	movwf	printf@f
  3323  0473  3082               	movlw	high (STR_5| (0+32768))
  3324  0474  00C7               	movwf	printf@f+1
  3325  0475  3180  205E  3183   	fcall	_printf
  3326                           
  3327                           ;main.c: 63: break;
  3328  0478  2BED               	goto	l3469
  3329  0479                     l3495:	
  3330                           ;main.c: 64: case PMTDEVICE:
  3331                           
  3332                           
  3333                           ;main.c: 65: printf("PMTDEVICE");
  3334  0479  3085               	movlw	low (STR_6| (0+32768))
  3335  047A  0020               	movlb	0	; select bank0
  3336  047B  00C6               	movwf	printf@f
  3337  047C  3082               	movlw	high (STR_6| (0+32768))
  3338  047D  00C7               	movwf	printf@f+1
  3339  047E  3180  205E  3183   	fcall	_printf
  3340                           
  3341                           ;main.c: 67: }
  3342                           
  3343                           ;main.c: 66: break;
  3344  0481  2BED               	goto	l3469
  3345  0482                     l3499:	
  3346  0482  0020               	movlb	0	; select bank0
  3347  0483  086E               	movf	_mode+1,w
  3348                           
  3349                           ; Switch size 1, requested type "space"
  3350                           ; Number of cases is 4, Range of values is 0 to 3
  3351                           ; switch strategies available:
  3352                           ; Name         Instructions Cycles
  3353                           ; simple_byte           13     7 (average)
  3354                           ; direct_byte           14     6 (fixed)
  3355                           ; jumptable            260     6 (fixed)
  3356                           ;	Chosen strategy is simple_byte
  3357  0484  3A00               	xorlw	0	; case 0
  3358  0485  1903               	skipnz
  3359  0486  2C0F               	goto	l3483
  3360  0487  3A01               	xorlw	1	; case 1
  3361  0488  1903               	skipnz
  3362  0489  2C67               	goto	l3491
  3363  048A  3A03               	xorlw	3	; case 2
  3364  048B  1903               	skipnz
  3365  048C  2C70               	goto	l3493
  3366  048D  3A01               	xorlw	1	; case 3
  3367  048E  1903               	skipnz
  3368  048F  2C79               	goto	l3495
  3369  0490  2BED               	goto	l3469
  3370  0491  2BED               	goto	l3469
  3371  0492                     __end_of_main:	
  3372                           ;main.c: 68: }
  3373                           ;main.c: 70: return 0;
  3374                           ;	Return value of _main is never used
  3375                           
  3376                           
  3377                           	psect	text1
  3378  005E                     __ptext1:	
  3379 ;; *************** function _printf *****************
  3380 ;; Defined at:
  3381 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  f               2   38[BANK0 ] PTR const unsigned char 
  3384 ;;		 -> STR_6(10), STR_5(8), STR_4(11), STR_3(14), 
  3385 ;;		 -> STR_2(5), STR_1(10), 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  val             4   56[BANK0 ] unsigned long 
  3388 ;;  tmpval          4    0        struct .
  3389 ;;  width           2   62[BANK0 ] int 
  3390 ;;  prec            2   54[BANK0 ] int 
  3391 ;;  cp              2    0        PTR const unsigned char 
  3392 ;;  len             2    0        unsigned int 
  3393 ;;  c               1   64[BANK0 ] char 
  3394 ;;  flag            1   61[BANK0 ] unsigned char 
  3395 ;;  ap              1   60[BANK0 ] PTR void [1]
  3396 ;;		 -> ?_printf(2), 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  2   38[BANK0 ] int 
  3399 ;; Registers used:
  3400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3406 ;;      Params:         0      10       0       0       0       0
  3407 ;;      Locals:         0      11       0       0       0       0
  3408 ;;      Temps:          0       6       0       0       0       0
  3409 ;;      Totals:         0      27       0       0       0       0
  3410 ;;Total ram usage:       27 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    5
  3413 ;; This function calls:
  3414 ;;		___lldiv
  3415 ;;		___llmod
  3416 ;;		___wmul
  3417 ;;		_isdigit
  3418 ;;		_putch
  3419 ;; This function is called by:
  3420 ;;		_main
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function _printf
  3426  005E                     _printf:	
  3427                           
  3428                           ;doprnt.c: 466: va_list ap;
  3429                           ;doprnt.c: 499: signed char c;
  3430                           ;doprnt.c: 501: int width;
  3431                           ;doprnt.c: 504: int prec;
  3432                           ;doprnt.c: 508: unsigned char flag;
  3433                           ;doprnt.c: 523: union {
  3434                           ;doprnt.c: 524: unsigned long vd;
  3435                           ;doprnt.c: 525: double integ;
  3436                           ;doprnt.c: 526: } tmpval;
  3437                           ;doprnt.c: 528: unsigned long val;
  3438                           ;doprnt.c: 529: unsigned len;
  3439                           ;doprnt.c: 530: const char * cp;
  3440                           ;doprnt.c: 533: *ap = __va_start();
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3444  005E  3048               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3445  005F  0020               	movlb	0	; select bank0
  3446  0060  00D0               	movwf	??_printf
  3447  0061  0850               	movf	??_printf,w
  3448  0062  00DC               	movwf	printf@ap
  3449  0063                     l3419:	
  3450                           ;doprnt.c: 536: while(c = *f++) {
  3451                           
  3452  0063  0020               	movlb	0	; select bank0
  3453  0064  0847               	movf	printf@f+1,w
  3454  0065  00D1               	movwf	??_printf+1
  3455  0066  0846               	movf	printf@f,w
  3456  0067  00D0               	movwf	??_printf
  3457  0068  0AC6               	incf	printf@f,f
  3458  0069  1903               	skipnz
  3459  006A  0AC7               	incf	printf@f+1,f
  3460  006B  0850               	movf	??_printf,w
  3461  006C  0084               	movwf	4
  3462  006D  0851               	movf	??_printf+1,w
  3463  006E  0085               	movwf	5
  3464  006F  0800               	movf	0,w	;code access
  3465  0070  00D2               	movwf	??_printf+2
  3466  0071  0852               	movf	??_printf+2,w
  3467  0072  00E0               	movwf	printf@c
  3468  0073  0860               	movf	printf@c,w
  3469  0074  1903               	btfsc	3,2
  3470  0075  0008               	return
  3471                           
  3472                           ;doprnt.c: 538: if(c != '%')
  3473  0076  3025               	movlw	37
  3474  0077  0660               	xorwf	printf@c,w
  3475  0078  1903               	btfsc	3,2
  3476  0079  287F               	goto	l3319
  3477                           
  3478                           ;doprnt.c: 540: {
  3479                           ;doprnt.c: 541: (putch(c) );
  3480  007A  0860               	movf	printf@c,w
  3481  007B  318D  253B  3180   	fcall	_putch
  3482                           
  3483                           ;doprnt.c: 542: continue;
  3484  007E  2863               	goto	l3419
  3485  007F                     l3319:	
  3486                           
  3487                           ;doprnt.c: 543: }
  3488                           ;doprnt.c: 546: width = 0;
  3489  007F  0020               	movlb	0	; select bank0
  3490  0080  01DE               	clrf	printf@width
  3491  0081  01DF               	clrf	printf@width+1
  3492                           
  3493                           ;doprnt.c: 548: flag = 0;
  3494  0082  01DD               	clrf	printf@flag
  3495                           
  3496                           ;doprnt.c: 551: switch(*f) {
  3497                           
  3498                           ;doprnt.c: 550: for(;;) {
  3499  0083  2889               	goto	l3325
  3500  0084                     l543:	
  3501                           ;doprnt.c: 579: case '0':
  3502                           
  3503                           
  3504                           ;doprnt.c: 580: flag |= 0x04;
  3505  0084  155D               	bsf	printf@flag,2
  3506                           
  3507                           ;doprnt.c: 581: f++;
  3508  0085  3001               	movlw	1
  3509  0086  07C6               	addwf	printf@f,f
  3510  0087  3000               	movlw	0
  3511  0088  3DC7               	addwfc	printf@f+1,f
  3512  0089                     l3325:	
  3513                           ;doprnt.c: 584: }
  3514                           
  3515                           ;doprnt.c: 582: continue;
  3516                           
  3517  0089  0846               	movf	printf@f,w
  3518  008A  0084               	movwf	4
  3519  008B  0847               	movf	printf@f+1,w
  3520  008C  0085               	movwf	5
  3521  008D  0800               	movf	0,w	;code access
  3522                           
  3523                           ; Switch size 1, requested type "space"
  3524                           ; Number of cases is 1, Range of values is 48 to 48
  3525                           ; switch strategies available:
  3526                           ; Name         Instructions Cycles
  3527                           ; simple_byte            4     3 (average)
  3528                           ; direct_byte           11     9 (fixed)
  3529                           ; jumptable            263     9 (fixed)
  3530                           ;	Chosen strategy is simple_byte
  3531  008E  3A30               	xorlw	48	; case 48
  3532  008F  1903               	skipnz
  3533  0090  2884               	goto	l543
  3534  0091  2892               	goto	l3327
  3535  0092                     l3327:	
  3536                           ;doprnt.c: 586: }
  3537                           
  3538                           ;doprnt.c: 585: break;
  3539                           
  3540                           
  3541                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3542  0092  0846               	movf	printf@f,w
  3543  0093  0084               	movwf	4
  3544  0094  0847               	movf	printf@f+1,w
  3545  0095  0085               	movwf	5
  3546  0096  0800               	movf	0,w	;code access
  3547  0097  318D  2573  3180   	fcall	_isdigit
  3548  009A  1C03               	btfss	3,0
  3549  009B  28D2               	goto	l3341
  3550                           
  3551                           ;doprnt.c: 598: width = 0;
  3552  009C  0020               	movlb	0	; select bank0
  3553  009D  01DE               	clrf	printf@width
  3554  009E  01DF               	clrf	printf@width+1
  3555  009F                     l3331:	
  3556                           ;doprnt.c: 599: do {
  3557                           
  3558                           
  3559                           ;doprnt.c: 600: width *= 10;
  3560  009F  300A               	movlw	10
  3561  00A0  0020               	movlb	0	; select bank0
  3562  00A1  00A0               	movwf	___wmul@multiplier
  3563  00A2  3000               	movlw	0
  3564  00A3  00A1               	movwf	___wmul@multiplier+1
  3565  00A4  085F               	movf	printf@width+1,w
  3566  00A5  00A3               	movwf	___wmul@multiplicand+1
  3567  00A6  085E               	movf	printf@width,w
  3568  00A7  00A2               	movwf	___wmul@multiplicand
  3569  00A8  318E  26AC  3180   	fcall	___wmul
  3570  00AB  0020               	movlb	0	; select bank0
  3571  00AC  0821               	movf	?___wmul+1,w
  3572  00AD  00DF               	movwf	printf@width+1
  3573  00AE  0820               	movf	?___wmul,w
  3574  00AF  00DE               	movwf	printf@width
  3575                           
  3576                           ;doprnt.c: 601: width += *f++ - '0';
  3577  00B0  0846               	movf	printf@f,w
  3578  00B1  0084               	movwf	4
  3579  00B2  0847               	movf	printf@f+1,w
  3580  00B3  0085               	movwf	5
  3581  00B4  0800               	movf	0,w	;code access
  3582  00B5  3ED0               	addlw	208
  3583  00B6  00D0               	movwf	??_printf
  3584  00B7  30FF               	movlw	255
  3585  00B8  1803               	skipnc
  3586  00B9  3000               	movlw	0
  3587  00BA  00D1               	movwf	??_printf+1
  3588  00BB  0850               	movf	??_printf,w
  3589  00BC  07DE               	addwf	printf@width,f
  3590  00BD  0851               	movf	??_printf+1,w
  3591  00BE  3DDF               	addwfc	printf@width+1,f
  3592  00BF  3001               	movlw	1
  3593  00C0  07C6               	addwf	printf@f,f
  3594  00C1  3000               	movlw	0
  3595  00C2  3DC7               	addwfc	printf@f+1,f
  3596                           
  3597                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3598  00C3  0846               	movf	printf@f,w
  3599  00C4  0084               	movwf	4
  3600  00C5  0847               	movf	printf@f+1,w
  3601  00C6  0085               	movwf	5
  3602  00C7  0800               	movf	0,w	;code access
  3603  00C8  318D  2573  3180   	fcall	_isdigit
  3604  00CB  1C03               	btfss	3,0
  3605  00CC  28D2               	goto	l3341
  3606  00CD  289F               	goto	l3331
  3607  00CE                     l554:	
  3608                           ;doprnt.c: 641: case 'l':
  3609                           
  3610                           ;doprnt.c: 638: goto alldone;
  3611                           
  3612                           ;doprnt.c: 637: case 0:
  3613                           
  3614                           ;doprnt.c: 635: switch(c = *f++) {
  3615                           
  3616                           ;doprnt.c: 608: }
  3617                           ;doprnt.c: 633: loop:
  3618                           
  3619                           
  3620                           ;doprnt.c: 643: flag |= 0x10;
  3621  00CE  165D               	bsf	printf@flag,4
  3622                           
  3623                           ;doprnt.c: 644: goto loop;
  3624  00CF  28D2               	goto	l3341
  3625  00D0                     l559:	
  3626                           ;doprnt.c: 817: case 'u':
  3627                           
  3628                           ;doprnt.c: 813: continue;
  3629                           
  3630                           ;doprnt.c: 802: default:
  3631                           
  3632                           ;doprnt.c: 698: case 'i':
  3633                           ;doprnt.c: 699: break;
  3634                           
  3635                           ;doprnt.c: 697: case 'd':
  3636                           
  3637                           
  3638                           ;doprnt.c: 818: flag |= 0x40;
  3639  00D0  175D               	bsf	printf@flag,6
  3640                           
  3641                           ;doprnt.c: 822: }
  3642                           
  3643                           ;doprnt.c: 819: break;
  3644  00D1  28F0               	goto	l557
  3645  00D2                     l3341:	
  3646  00D2  0020               	movlb	0	; select bank0
  3647  00D3  0847               	movf	printf@f+1,w
  3648  00D4  00D1               	movwf	??_printf+1
  3649  00D5  0846               	movf	printf@f,w
  3650  00D6  00D0               	movwf	??_printf
  3651  00D7  0AC6               	incf	printf@f,f
  3652  00D8  1903               	skipnz
  3653  00D9  0AC7               	incf	printf@f+1,f
  3654  00DA  0850               	movf	??_printf,w
  3655  00DB  0084               	movwf	4
  3656  00DC  0851               	movf	??_printf+1,w
  3657  00DD  0085               	movwf	5
  3658  00DE  0800               	movf	0,w	;code access
  3659  00DF  00E0               	movwf	printf@c
  3660                           
  3661                           ; Switch size 1, requested type "space"
  3662                           ; Number of cases is 5, Range of values is 0 to 117
  3663                           ; switch strategies available:
  3664                           ; Name         Instructions Cycles
  3665                           ; simple_byte           16     9 (average)
  3666                           ; direct_byte          242     6 (fixed)
  3667                           ; jumptable            260     6 (fixed)
  3668                           ;	Chosen strategy is simple_byte
  3669  00E0  3A00               	xorlw	0	; case 0
  3670  00E1  1903               	skipnz
  3671  00E2  2A25               	goto	l587
  3672  00E3  3A64               	xorlw	100	; case 100
  3673  00E4  1903               	skipnz
  3674  00E5  28F0               	goto	l557
  3675  00E6  3A0D               	xorlw	13	; case 105
  3676  00E7  1903               	skipnz
  3677  00E8  28F0               	goto	l557
  3678  00E9  3A05               	xorlw	5	; case 108
  3679  00EA  1903               	skipnz
  3680  00EB  28CE               	goto	l554
  3681  00EC  3A19               	xorlw	25	; case 117
  3682  00ED  1903               	skipnz
  3683  00EE  28D0               	goto	l559
  3684  00EF  2863               	goto	l3419
  3685  00F0                     l557:	
  3686                           
  3687                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  3688  00F0  1B5D               	btfsc	printf@flag,6
  3689  00F1  2927               	goto	l560
  3690                           
  3691                           ;doprnt.c: 1253: {
  3692                           ;doprnt.c: 1255: if(flag & 0x10)
  3693  00F2  1E5D               	btfss	printf@flag,4
  3694  00F3  2901               	goto	l3349
  3695                           
  3696                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  3697  00F4  085C               	movf	printf@ap,w
  3698  00F5  0086               	movwf	6
  3699  00F6  0187               	clrf	7
  3700  00F7  3F40               	moviw [0]fsr1
  3701  00F8  00D8               	movwf	printf@val
  3702  00F9  3F41               	moviw [1]fsr1
  3703  00FA  00D9               	movwf	printf@val+1
  3704  00FB  3F42               	moviw [2]fsr1
  3705  00FC  00DA               	movwf	printf@val+2
  3706  00FD  3F43               	moviw [3]fsr1
  3707  00FE  00DB               	movwf	printf@val+3
  3708  00FF  3004               	movlw	4
  3709  0100  2912               	goto	L2
  3710  0101                     l3349:	
  3711                           
  3712                           ;doprnt.c: 1257: else
  3713                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3714  0101  085C               	movf	printf@ap,w
  3715  0102  0086               	movwf	6
  3716  0103  0187               	clrf	7
  3717  0104  3F40               	moviw [0]fsr1
  3718  0105  00D0               	movwf	??_printf
  3719  0106  3F41               	moviw [1]fsr1
  3720  0107  00D1               	movwf	??_printf+1
  3721  0108  0850               	movf	??_printf,w
  3722  0109  00D8               	movwf	printf@val
  3723  010A  0851               	movf	??_printf+1,w
  3724  010B  00D9               	movwf	printf@val+1
  3725  010C  0D89               	rlf	9,f
  3726  010D  3B89               	subwfb	9,f
  3727  010E  0989               	comf	9,f
  3728  010F  00DA               	movwf	printf@val+2
  3729  0110  00DB               	movwf	printf@val+3
  3730  0111  3002               	movlw	2
  3731  0112                     L2:	
  3732  0112  00D0               	movwf	??_printf
  3733  0113  0850               	movf	??_printf,w
  3734  0114  07DC               	addwf	printf@ap,f
  3735                           
  3736                           ;doprnt.c: 1261: if((long)val < 0) {
  3737  0115  1FDB               	btfss	printf@val+3,7
  3738  0116  2947               	goto	l3367
  3739                           
  3740                           ;doprnt.c: 1262: flag |= 0x03;
  3741  0117  3003               	movlw	3
  3742  0118  00D0               	movwf	??_printf
  3743  0119  0850               	movf	??_printf,w
  3744  011A  04DD               	iorwf	printf@flag,f
  3745                           
  3746                           ;doprnt.c: 1263: val = -val;
  3747  011B  09D8               	comf	printf@val,f
  3748  011C  09D9               	comf	printf@val+1,f
  3749  011D  09DA               	comf	printf@val+2,f
  3750  011E  09DB               	comf	printf@val+3,f
  3751  011F  0AD8               	incf	printf@val,f
  3752  0120  1903               	skipnz
  3753  0121  0AD9               	incf	printf@val+1,f
  3754  0122  1903               	skipnz
  3755  0123  0ADA               	incf	printf@val+2,f
  3756  0124  1903               	skipnz
  3757  0125  0ADB               	incf	printf@val+3,f
  3758                           
  3759                           ;doprnt.c: 1264: }
  3760                           ;doprnt.c: 1266: }
  3761  0126  2947               	goto	l3367
  3762  0127                     l560:	
  3763                           
  3764                           ;doprnt.c: 1268: else
  3765                           ;doprnt.c: 1273: {
  3766                           ;doprnt.c: 1281: if(flag & 0x10)
  3767  0127  1E5D               	btfss	printf@flag,4
  3768  0128  2936               	goto	l3363
  3769                           
  3770                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3771  0129  085C               	movf	printf@ap,w
  3772  012A  0086               	movwf	6
  3773  012B  0187               	clrf	7
  3774  012C  3F40               	moviw [0]fsr1
  3775  012D  00D8               	movwf	printf@val
  3776  012E  3F41               	moviw [1]fsr1
  3777  012F  00D9               	movwf	printf@val+1
  3778  0130  3F42               	moviw [2]fsr1
  3779  0131  00DA               	movwf	printf@val+2
  3780  0132  3F43               	moviw [3]fsr1
  3781  0133  00DB               	movwf	printf@val+3
  3782  0134  3004               	movlw	4
  3783  0135  2944               	goto	L3
  3784  0136                     l3363:	
  3785                           
  3786                           ;doprnt.c: 1283: else
  3787                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3788  0136  085C               	movf	printf@ap,w
  3789  0137  0086               	movwf	6
  3790  0138  0187               	clrf	7
  3791  0139  3F40               	moviw [0]fsr1
  3792  013A  00D0               	movwf	??_printf
  3793  013B  3F41               	moviw [1]fsr1
  3794  013C  00D1               	movwf	??_printf+1
  3795  013D  0850               	movf	??_printf,w
  3796  013E  00D8               	movwf	printf@val
  3797  013F  0851               	movf	??_printf+1,w
  3798  0140  00D9               	movwf	printf@val+1
  3799  0141  01DA               	clrf	printf@val+2
  3800  0142  01DB               	clrf	printf@val+3
  3801  0143  3002               	movlw	2
  3802  0144                     L3:	
  3803  0144  00D0               	movwf	??_printf
  3804  0145  0850               	movf	??_printf,w
  3805  0146  07DC               	addwf	printf@ap,f
  3806  0147                     l3367:	
  3807                           
  3808                           ;doprnt.c: 1287: }
  3809                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3810  0147  01E0               	clrf	printf@c
  3811  0148  0AE0               	incf	printf@c,f
  3812  0149  300A               	movlw	10
  3813  014A  0660               	xorwf	printf@c,w
  3814  014B  1903               	btfsc	3,2
  3815  014C  297A               	goto	l3379
  3816  014D                     l3373:	
  3817                           
  3818                           ;doprnt.c: 1306: if(val < dpowers[c])
  3819  014D  0860               	movf	printf@c,w
  3820  014E  00D0               	movwf	??_printf
  3821  014F  01D1               	clrf	??_printf+1
  3822  0150  35D0               	lslf	??_printf,f
  3823  0151  0DD1               	rlf	??_printf+1,f
  3824  0152  35D0               	lslf	??_printf,f
  3825  0153  0DD1               	rlf	??_printf+1,f
  3826  0154  3026               	movlw	low (_dpowers| (0+32768))
  3827  0155  0750               	addwf	??_printf,w
  3828  0156  0084               	movwf	4
  3829  0157  3082               	movlw	high (_dpowers| (0+32768))
  3830  0158  3D51               	addwfc	??_printf+1,w
  3831  0159  0085               	movwf	5
  3832  015A  3F00               	moviw [0]fsr0
  3833  015B  00D2               	movwf	??_printf+2
  3834  015C  3F01               	moviw [1]fsr0
  3835  015D  00D3               	movwf	??_printf+3
  3836  015E  3F02               	moviw [2]fsr0
  3837  015F  00D4               	movwf	??_printf+4
  3838  0160  3F03               	moviw [3]fsr0
  3839  0161  00D5               	movwf	??_printf+5
  3840  0162  0855               	movf	??_printf+5,w
  3841  0163  025B               	subwf	printf@val+3,w
  3842  0164  1D03               	skipz
  3843  0165  2970               	goto	u2775
  3844  0166  0854               	movf	??_printf+4,w
  3845  0167  025A               	subwf	printf@val+2,w
  3846  0168  1D03               	skipz
  3847  0169  2970               	goto	u2775
  3848  016A  0853               	movf	??_printf+3,w
  3849  016B  0259               	subwf	printf@val+1,w
  3850  016C  1D03               	skipz
  3851  016D  2970               	goto	u2775
  3852  016E  0852               	movf	??_printf+2,w
  3853  016F  0258               	subwf	printf@val,w
  3854  0170                     u2775:	
  3855  0170  1C03               	btfss	3,0
  3856  0171  297A               	goto	l3379
  3857                           
  3858                           ;doprnt.c: 1307: break;
  3859  0172  3001               	movlw	1
  3860  0173  00D0               	movwf	??_printf
  3861  0174  0850               	movf	??_printf,w
  3862  0175  07E0               	addwf	printf@c,f
  3863  0176  300A               	movlw	10
  3864  0177  0660               	xorwf	printf@c,w
  3865  0178  1D03               	btfss	3,2
  3866  0179  294D               	goto	l3373
  3867  017A                     l3379:	
  3868                           
  3869                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3870  017A  085E               	movf	printf@width,w
  3871  017B  045F               	iorwf	printf@width+1,w
  3872  017C  1903               	btfsc	3,2
  3873  017D  2986               	goto	l570
  3874  017E  085D               	movf	printf@flag,w
  3875  017F  3903               	andlw	3
  3876  0180  1903               	btfsc	3,2
  3877  0181  2986               	goto	l570
  3878                           
  3879                           ;doprnt.c: 1346: width--;
  3880  0182  30FF               	movlw	255
  3881  0183  07DE               	addwf	printf@width,f
  3882  0184  30FF               	movlw	255
  3883  0185  3DDF               	addwfc	printf@width+1,f
  3884  0186                     l570:	
  3885                           
  3886                           ;doprnt.c: 1381: if(width > c)
  3887  0186  0860               	movf	printf@c,w
  3888  0187  00D0               	movwf	??_printf
  3889  0188  01D1               	clrf	??_printf+1
  3890  0189  1BD0               	btfsc	??_printf,7
  3891  018A  03D1               	decf	??_printf+1,f
  3892  018B  0851               	movf	??_printf+1,w
  3893  018C  3A80               	xorlw	128
  3894  018D  00D2               	movwf	??_printf+2
  3895  018E  085F               	movf	printf@width+1,w
  3896  018F  3A80               	xorlw	128
  3897  0190  0252               	subwf	??_printf+2,w
  3898  0191  1D03               	skipz
  3899  0192  2995               	goto	u2815
  3900  0193  085E               	movf	printf@width,w
  3901  0194  0250               	subwf	??_printf,w
  3902  0195                     u2815:	
  3903  0195  1803               	skipnc
  3904  0196  29A2               	goto	l3387
  3905                           
  3906                           ;doprnt.c: 1382: width -= c;
  3907  0197  0020               	movlb	0	; select bank0
  3908  0198  0860               	movf	printf@c,w
  3909  0199  00D0               	movwf	??_printf
  3910  019A  01D1               	clrf	??_printf+1
  3911  019B  1BD0               	btfsc	??_printf,7
  3912  019C  03D1               	decf	??_printf+1,f
  3913  019D  0850               	movf	??_printf,w
  3914  019E  02DE               	subwf	printf@width,f
  3915  019F  0851               	movf	??_printf+1,w
  3916  01A0  3BDF               	subwfb	printf@width+1,f
  3917  01A1  29A5               	goto	l3389
  3918  01A2                     l3387:	
  3919                           
  3920                           ;doprnt.c: 1383: else
  3921                           ;doprnt.c: 1384: width = 0;
  3922  01A2  0020               	movlb	0	; select bank0
  3923  01A3  01DE               	clrf	printf@width
  3924  01A4  01DF               	clrf	printf@width+1
  3925  01A5                     l3389:	
  3926                           
  3927                           ;doprnt.c: 1387: if(flag & 0x04) {
  3928  01A5  1D5D               	btfss	printf@flag,2
  3929  01A6  29BE               	goto	l3401
  3930                           
  3931                           ;doprnt.c: 1392: if(flag & 0x03)
  3932  01A7  085D               	movf	printf@flag,w
  3933  01A8  3903               	andlw	3
  3934  01A9  1903               	btfsc	3,2
  3935  01AA  29AF               	goto	l3395
  3936                           
  3937                           ;doprnt.c: 1393: (putch('-') );
  3938  01AB  302D               	movlw	45
  3939  01AC  318D  253B  3180   	fcall	_putch
  3940  01AF                     l3395:	
  3941                           
  3942                           ;doprnt.c: 1415: if(width)
  3943  01AF  0020               	movlb	0	; select bank0
  3944  01B0                     L4:	
  3945  01B0  085E               	movf	printf@width,w
  3946  01B1  045F               	iorwf	printf@width+1,w
  3947  01B2  1903               	btfsc	3,2
  3948  01B3  29D7               	goto	l3411
  3949                           
  3950                           ;doprnt.c: 1417: (putch('0') );
  3951                           
  3952                           ;doprnt.c: 1416: do
  3953  01B4  3030               	movlw	48
  3954  01B5  318D  253B  3180   	fcall	_putch
  3955                           
  3956                           ;doprnt.c: 1418: while(--width);
  3957  01B8  30FF               	movlw	255
  3958  01B9  0020               	movlb	0	; select bank0
  3959  01BA  07DE               	addwf	printf@width,f
  3960  01BB  30FF               	movlw	255
  3961  01BC  3DDF               	addwfc	printf@width+1,f
  3962  01BD  29B0               	goto	L4
  3963  01BE                     l3401:	
  3964                           ;doprnt.c: 1420: } else
  3965                           
  3966                           
  3967                           ;doprnt.c: 1422: {
  3968                           ;doprnt.c: 1424: if(width
  3969                           ;doprnt.c: 1428: )
  3970  01BE  085E               	movf	printf@width,w
  3971  01BF  045F               	iorwf	printf@width+1,w
  3972  01C0  1903               	btfsc	3,2
  3973  01C1  29CF               	goto	l3407
  3974  01C2                     l3403:	
  3975                           ;doprnt.c: 1429: do
  3976                           
  3977                           
  3978                           ;doprnt.c: 1430: (putch(' ') );
  3979  01C2  3020               	movlw	32
  3980  01C3  318D  253B  3180   	fcall	_putch
  3981                           
  3982                           ;doprnt.c: 1431: while(--width);
  3983  01C6  30FF               	movlw	255
  3984  01C7  0020               	movlb	0	; select bank0
  3985  01C8  07DE               	addwf	printf@width,f
  3986  01C9  30FF               	movlw	255
  3987  01CA  3DDF               	addwfc	printf@width+1,f
  3988  01CB  085E               	movf	printf@width,w
  3989  01CC  045F               	iorwf	printf@width+1,w
  3990  01CD  1D03               	btfss	3,2
  3991  01CE  29C2               	goto	l3403
  3992  01CF                     l3407:	
  3993                           
  3994                           ;doprnt.c: 1438: if(flag & 0x03)
  3995  01CF  085D               	movf	printf@flag,w
  3996  01D0  3903               	andlw	3
  3997  01D1  1903               	btfsc	3,2
  3998  01D2  29D7               	goto	l3411
  3999                           
  4000                           ;doprnt.c: 1439: (putch('-') );
  4001  01D3  302D               	movlw	45
  4002  01D4  318D  253B  3180   	fcall	_putch
  4003  01D7                     l3411:	
  4004                           
  4005                           ;doprnt.c: 1469: }
  4006                           ;doprnt.c: 1472: prec = c;
  4007  01D7  0020               	movlb	0	; select bank0
  4008  01D8  0860               	movf	printf@c,w
  4009  01D9  00D6               	movwf	printf@prec
  4010  01DA  01D7               	clrf	printf@prec+1
  4011  01DB  1BD6               	btfsc	printf@prec,7
  4012  01DC  03D7               	decf	printf@prec+1,f
  4013  01DD                     l3417:	
  4014                           ;doprnt.c: 1474: while(prec--) {
  4015                           
  4016  01DD  30FF               	movlw	255
  4017  01DE  0020               	movlb	0	; select bank0
  4018  01DF  07D6               	addwf	printf@prec,f
  4019  01E0  30FF               	movlw	255
  4020  01E1  3DD7               	addwfc	printf@prec+1,f
  4021  01E2  0A56               	incf	printf@prec,w
  4022  01E3  1903               	btfsc	3,2
  4023  01E4  0A57               	incf	printf@prec+1,w
  4024  01E5  1903               	btfsc	3,2
  4025  01E6  2863               	goto	l3419
  4026                           
  4027                           ;doprnt.c: 1478: {
  4028                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4029  01E7  3000               	movlw	0
  4030  01E8  00BD               	movwf	___llmod@divisor+3
  4031  01E9  3000               	movlw	0
  4032  01EA  00BC               	movwf	___llmod@divisor+2
  4033  01EB  3000               	movlw	0
  4034  01EC  00BB               	movwf	___llmod@divisor+1
  4035  01ED  300A               	movlw	10
  4036  01EE  00BA               	movwf	___llmod@divisor
  4037  01EF  0857               	movf	printf@prec+1,w
  4038  01F0  0085               	movwf	5
  4039  01F1  0856               	movf	printf@prec,w
  4040  01F2  0084               	movwf	4
  4041  01F3  3584               	lslf	4,f
  4042  01F4  0D85               	rlf	5,f
  4043  01F5  3584               	lslf	4,f
  4044  01F6  0D85               	rlf	5,f
  4045  01F7  3026               	movlw	low (_dpowers| (0+32768))
  4046  01F8  0784               	addwf	4,f
  4047  01F9  3082               	movlw	high (_dpowers| (0+32768))
  4048  01FA  3D85               	addwfc	5,f
  4049  01FB  3F00               	moviw [0]fsr0
  4050  01FC  00AC               	movwf	___lldiv@divisor
  4051  01FD  3F01               	moviw [1]fsr0
  4052  01FE  00AD               	movwf	___lldiv@divisor+1
  4053  01FF  3F02               	moviw [2]fsr0
  4054  0200  00AE               	movwf	___lldiv@divisor+2
  4055  0201  3F03               	moviw [3]fsr0
  4056  0202  00AF               	movwf	___lldiv@divisor+3
  4057  0203  085B               	movf	printf@val+3,w
  4058  0204  00B3               	movwf	___lldiv@dividend+3
  4059  0205  085A               	movf	printf@val+2,w
  4060  0206  00B2               	movwf	___lldiv@dividend+2
  4061  0207  0859               	movf	printf@val+1,w
  4062  0208  00B1               	movwf	___lldiv@dividend+1
  4063  0209  0858               	movf	printf@val,w
  4064  020A  00B0               	movwf	___lldiv@dividend
  4065  020B  3185  25ED  3180   	fcall	___lldiv
  4066  020E  0020               	movlb	0	; select bank0
  4067  020F  082F               	movf	?___lldiv+3,w
  4068  0210  00C1               	movwf	___llmod@dividend+3
  4069  0211  082E               	movf	?___lldiv+2,w
  4070  0212  00C0               	movwf	___llmod@dividend+2
  4071  0213  082D               	movf	?___lldiv+1,w
  4072  0214  00BF               	movwf	___llmod@dividend+1
  4073  0215  082C               	movf	?___lldiv,w
  4074  0216  00BE               	movwf	___llmod@dividend
  4075  0217  3186  26C8  3180   	fcall	___llmod
  4076  021A  0020               	movlb	0	; select bank0
  4077  021B  083A               	movf	?___llmod,w
  4078  021C  3E30               	addlw	48
  4079  021D  00D0               	movwf	??_printf
  4080  021E  0850               	movf	??_printf,w
  4081  021F  00E0               	movwf	printf@c
  4082                           
  4083                           ;doprnt.c: 1523: }
  4084                           ;doprnt.c: 1524: (putch(c) );
  4085  0220  0860               	movf	printf@c,w
  4086  0221  318D  253B  3180   	fcall	_putch
  4087  0224  29DD               	goto	l3417
  4088  0225                     l587:	
  4089                           ;doprnt.c: 1540: return 0;
  4090                           ;	Return value of _printf is never used
  4091                           
  4092                           ;doprnt.c: 1525: }
  4093                           ;doprnt.c: 1533: }
  4094                           ;doprnt.c: 1535: alldone:
  4095                           
  4096  0225  0008               	return
  4097  0226                     __end_of_printf:	
  4098                           
  4099                           	psect	text2
  4100  0D3B                     __ptext2:	
  4101 ;; *************** function _putch *****************
  4102 ;; Defined at:
  4103 ;;		line 64 in file "LCD.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  c               1    wreg     unsigned char 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  c               1    3[BANK0 ] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0, pclath, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4117 ;;      Params:         0       0       0       0       0       0
  4118 ;;      Locals:         0       1       0       0       0       0
  4119 ;;      Temps:          0       0       0       0       0       0
  4120 ;;      Totals:         0       1       0       0       0       0
  4121 ;;Total ram usage:        1 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    4
  4124 ;; This function calls:
  4125 ;;		_LCD_WriteData
  4126 ;; This function is called by:
  4127 ;;		_printf
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function _putch
  4133  0D3B                     _putch:	
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4137                           ;putch@c stored from wreg
  4138  0D3B  0020               	movlb	0	; select bank0
  4139  0D3C  00A3               	movwf	putch@c
  4140                           
  4141                           ;LCD.c: 66: LATA3 = 1;
  4142  0D3D  0022               	movlb	2	; select bank2
  4143  0D3E  158C               	bsf	12,3	;volatile
  4144                           
  4145                           ;LCD.c: 67: LCD_WriteData(c);
  4146  0D3F  0020               	movlb	0	; select bank0
  4147  0D40  0823               	movf	putch@c,w
  4148  0D41  3187  2748         	fcall	_LCD_WriteData
  4149  0D43  0008               	return
  4150  0D44                     __end_of_putch:	
  4151                           
  4152                           	psect	text3
  4153  0D73                     __ptext3:	
  4154 ;; *************** function _isdigit *****************
  4155 ;; Defined at:
  4156 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/isdigit.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  c               1    wreg     unsigned char 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  c               1    1[BANK0 ] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;		None               void
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4170 ;;      Params:         0       0       0       0       0       0
  4171 ;;      Locals:         0       2       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0
  4173 ;;      Totals:         0       2       0       0       0       0
  4174 ;;Total ram usage:        2 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    3
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_printf
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           
  4185                           ;psect for function _isdigit
  4186  0D73                     _isdigit:	
  4187                           
  4188                           ;incstack = 0
  4189                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4190                           ;isdigit@c stored from wreg
  4191  0D73  0020               	movlb	0	; select bank0
  4192  0D74  00A1               	movwf	isdigit@c
  4193  0D75  01A0               	clrf	_isdigit$786
  4194  0D76  303A               	movlw	58
  4195  0D77  0221               	subwf	isdigit@c,w
  4196  0D78  1803               	skipnc
  4197  0D79  2D80               	goto	l3047
  4198  0D7A  3030               	movlw	48
  4199  0D7B  0221               	subwf	isdigit@c,w
  4200  0D7C  1C03               	skipc
  4201  0D7D  2D80               	goto	l3047
  4202  0D7E  01A0               	clrf	_isdigit$786
  4203  0D7F  0AA0               	incf	_isdigit$786,f
  4204  0D80                     l3047:	
  4205  0D80  0C20               	rrf	_isdigit$786,w
  4206  0D81  0008               	return
  4207  0D82                     __end_of_isdigit:	
  4208                           
  4209                           	psect	text4
  4210  0EAC                     __ptext4:	
  4211 ;; *************** function ___wmul *****************
  4212 ;; Defined at:
  4213 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4216 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  product         2    4[BANK0 ] unsigned int 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  2    0[BANK0 ] unsigned int 
  4221 ;; Registers used:
  4222 ;;		wreg, status,2, status,0
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4228 ;;      Params:         0       4       0       0       0       0
  4229 ;;      Locals:         0       2       0       0       0       0
  4230 ;;      Temps:          0       0       0       0       0       0
  4231 ;;      Totals:         0       6       0       0       0       0
  4232 ;;Total ram usage:        6 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:    3
  4235 ;; This function calls:
  4236 ;;		Nothing
  4237 ;; This function is called by:
  4238 ;;		_printf
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           
  4243                           ;psect for function ___wmul
  4244  0EAC                     ___wmul:	
  4245                           
  4246                           ;incstack = 0
  4247                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4248  0EAC  0020               	movlb	0	; select bank0
  4249  0EAD  01A4               	clrf	___wmul@product
  4250  0EAE  01A5               	clrf	___wmul@product+1
  4251  0EAF                     l3053:	
  4252  0EAF  1C20               	btfss	___wmul@multiplier,0
  4253  0EB0  2EB5               	goto	l712
  4254  0EB1  0822               	movf	___wmul@multiplicand,w
  4255  0EB2  07A4               	addwf	___wmul@product,f
  4256  0EB3  0823               	movf	___wmul@multiplicand+1,w
  4257  0EB4  3DA5               	addwfc	___wmul@product+1,f
  4258  0EB5                     l712:	
  4259  0EB5  3001               	movlw	1
  4260  0EB6                     u2565:	
  4261  0EB6  35A2               	lslf	___wmul@multiplicand,f
  4262  0EB7  0DA3               	rlf	___wmul@multiplicand+1,f
  4263  0EB8  0B89               	decfsz	9,f
  4264  0EB9  2EB6               	goto	u2565
  4265  0EBA  3001               	movlw	1
  4266  0EBB                     u2575:	
  4267  0EBB  36A1               	lsrf	___wmul@multiplier+1,f
  4268  0EBC  0CA0               	rrf	___wmul@multiplier,f
  4269  0EBD  0B89               	decfsz	9,f
  4270  0EBE  2EBB               	goto	u2575
  4271  0EBF  0820               	movf	___wmul@multiplier,w
  4272  0EC0  0421               	iorwf	___wmul@multiplier+1,w
  4273  0EC1  1D03               	btfss	3,2
  4274  0EC2  2EAF               	goto	l3053
  4275  0EC3  0825               	movf	___wmul@product+1,w
  4276  0EC4  00A1               	movwf	?___wmul+1
  4277  0EC5  0824               	movf	___wmul@product,w
  4278  0EC6  00A0               	movwf	?___wmul
  4279  0EC7  0008               	return
  4280  0EC8                     __end_of___wmul:	
  4281                           
  4282                           	psect	text5
  4283  06C8                     __ptext5:	
  4284 ;; *************** function ___llmod *****************
  4285 ;; Defined at:
  4286 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  divisor         4   26[BANK0 ] unsigned long 
  4289 ;;  dividend        4   30[BANK0 ] unsigned long 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  counter         1   35[BANK0 ] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  4   26[BANK0 ] unsigned long 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4301 ;;      Params:         0       8       0       0       0       0
  4302 ;;      Locals:         0       1       0       0       0       0
  4303 ;;      Temps:          0       1       0       0       0       0
  4304 ;;      Totals:         0      10       0       0       0       0
  4305 ;;Total ram usage:       10 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    3
  4308 ;; This function calls:
  4309 ;;		Nothing
  4310 ;; This function is called by:
  4311 ;;		_printf
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           
  4316                           ;psect for function ___llmod
  4317  06C8                     ___llmod:	
  4318                           
  4319                           ;incstack = 0
  4320                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4321  06C8  0020               	movlb	0	; select bank0
  4322  06C9  083D               	movf	___llmod@divisor+3,w
  4323  06CA  043C               	iorwf	___llmod@divisor+2,w
  4324  06CB  043B               	iorwf	___llmod@divisor+1,w
  4325  06CC  043A               	iorwf	___llmod@divisor,w
  4326  06CD  1903               	skipnz
  4327  06CE  2F02               	goto	l3081
  4328  06CF  01C3               	clrf	___llmod@counter
  4329  06D0  0AC3               	incf	___llmod@counter,f
  4330  06D1                     l3071:	
  4331  06D1  1BBD               	btfsc	___llmod@divisor+3,7
  4332  06D2  2EDF               	goto	l3073
  4333  06D3  3001               	movlw	1
  4334  06D4                     u2605:	
  4335  06D4  35BA               	lslf	___llmod@divisor,f
  4336  06D5  0DBB               	rlf	___llmod@divisor+1,f
  4337  06D6  0DBC               	rlf	___llmod@divisor+2,f
  4338  06D7  0DBD               	rlf	___llmod@divisor+3,f
  4339  06D8  0B89               	decfsz	9,f
  4340  06D9  2ED4               	goto	u2605
  4341  06DA  3001               	movlw	1
  4342  06DB  00C2               	movwf	??___llmod
  4343  06DC  0842               	movf	??___llmod,w
  4344  06DD  07C3               	addwf	___llmod@counter,f
  4345  06DE  2ED1               	goto	l3071
  4346  06DF                     l3073:	
  4347  06DF  083D               	movf	___llmod@divisor+3,w
  4348  06E0  0241               	subwf	___llmod@dividend+3,w
  4349  06E1  1D03               	skipz
  4350  06E2  2EED               	goto	u2625
  4351  06E3  083C               	movf	___llmod@divisor+2,w
  4352  06E4  0240               	subwf	___llmod@dividend+2,w
  4353  06E5  1D03               	skipz
  4354  06E6  2EED               	goto	u2625
  4355  06E7  083B               	movf	___llmod@divisor+1,w
  4356  06E8  023F               	subwf	___llmod@dividend+1,w
  4357  06E9  1D03               	skipz
  4358  06EA  2EED               	goto	u2625
  4359  06EB  083A               	movf	___llmod@divisor,w
  4360  06EC  023E               	subwf	___llmod@dividend,w
  4361  06ED                     u2625:	
  4362  06ED  1C03               	skipc
  4363  06EE  2EF7               	goto	l3077
  4364  06EF  083A               	movf	___llmod@divisor,w
  4365  06F0  02BE               	subwf	___llmod@dividend,f
  4366  06F1  083B               	movf	___llmod@divisor+1,w
  4367  06F2  3BBF               	subwfb	___llmod@dividend+1,f
  4368  06F3  083C               	movf	___llmod@divisor+2,w
  4369  06F4  3BC0               	subwfb	___llmod@dividend+2,f
  4370  06F5  083D               	movf	___llmod@divisor+3,w
  4371  06F6  3BC1               	subwfb	___llmod@dividend+3,f
  4372  06F7                     l3077:	
  4373  06F7  3001               	movlw	1
  4374  06F8                     u2635:	
  4375  06F8  36BD               	lsrf	___llmod@divisor+3,f
  4376  06F9  0CBC               	rrf	___llmod@divisor+2,f
  4377  06FA  0CBB               	rrf	___llmod@divisor+1,f
  4378  06FB  0CBA               	rrf	___llmod@divisor,f
  4379  06FC  0B89               	decfsz	9,f
  4380  06FD  2EF8               	goto	u2635
  4381  06FE  3001               	movlw	1
  4382  06FF  02C3               	subwf	___llmod@counter,f
  4383  0700  1D03               	btfss	3,2
  4384  0701  2EDF               	goto	l3073
  4385  0702                     l3081:	
  4386  0702  0841               	movf	___llmod@dividend+3,w
  4387  0703  00BD               	movwf	?___llmod+3
  4388  0704  0840               	movf	___llmod@dividend+2,w
  4389  0705  00BC               	movwf	?___llmod+2
  4390  0706  083F               	movf	___llmod@dividend+1,w
  4391  0707  00BB               	movwf	?___llmod+1
  4392  0708  083E               	movf	___llmod@dividend,w
  4393  0709  00BA               	movwf	?___llmod
  4394  070A  0008               	return
  4395  070B                     __end_of___llmod:	
  4396                           
  4397                           	psect	text6
  4398  0DE7                     __ptext6:	
  4399 ;; *************** function _mTouch_Init *****************
  4400 ;; Defined at:
  4401 ;;		line 12 in file "mTouch.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;		None
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;		None
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0, pclath, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4415 ;;      Params:         0       0       0       0       0       0
  4416 ;;      Locals:         0       0       0       0       0       0
  4417 ;;      Temps:          0       1       0       0       0       0
  4418 ;;      Totals:         0       1       0       0       0       0
  4419 ;;Total ram usage:        1 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; Hardware stack levels required when called:    4
  4422 ;; This function calls:
  4423 ;;		_mTouch_PortInit
  4424 ;; This function is called by:
  4425 ;;		_main
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           
  4430                           ;psect for function _mTouch_Init
  4431  0DE7                     _mTouch_Init:	
  4432                           
  4433                           ;mTouch.c: 14: mTouch_PortInit();
  4434                           
  4435                           ;incstack = 0
  4436                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4437  0DE7  318D  2566         	fcall	_mTouch_PortInit
  4438                           
  4439                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4440  0DE9  0021               	movlb	1	; select bank1
  4441  0DEA  0815               	movf	21,w	;volatile
  4442                           
  4443                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4444  0DEB  1595               	bsf	21,3	;volatile
  4445                           
  4446                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4447  0DEC  1695               	bsf	21,5	;volatile
  4448                           
  4449                           ;mTouch.c: 20: TMR0 = 0x00;
  4450  0DED  0020               	movlb	0	; select bank0
  4451  0DEE  0195               	clrf	21	;volatile
  4452                           
  4453                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4454  0DEF  141E               	bsf	30,0	;volatile
  4455                           
  4456                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4457  0DF0  300C               	movlw	12
  4458  0DF1  00A1               	movwf	??_mTouch_Init
  4459  0DF2  0821               	movf	??_mTouch_Init,w
  4460  0DF3  049E               	iorwf	30,f	;volatile
  4461                           
  4462                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4463  0DF4  307F               	movlw	127
  4464  0DF5  00A1               	movwf	??_mTouch_Init
  4465  0DF6  0821               	movf	??_mTouch_Init,w
  4466  0DF7  059E               	andwf	30,f	;volatile
  4467                           
  4468                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4469  0DF8  019F               	clrf	31	;volatile
  4470  0DF9  0008               	return
  4471  0DFA                     __end_of_mTouch_Init:	
  4472                           
  4473                           	psect	text7
  4474  0D66                     __ptext7:	
  4475 ;; *************** function _mTouch_PortInit *****************
  4476 ;; Defined at:
  4477 ;;		line 6 in file "mTouch.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4491 ;;      Params:         0       0       0       0       0       0
  4492 ;;      Locals:         0       0       0       0       0       0
  4493 ;;      Temps:          0       1       0       0       0       0
  4494 ;;      Totals:         0       1       0       0       0       0
  4495 ;;Total ram usage:        1 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    3
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_mTouch_Init
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           
  4506                           ;psect for function _mTouch_PortInit
  4507  0D66                     _mTouch_PortInit:	
  4508                           
  4509                           ;mTouch.c: 8: TRISA |= (0x07);
  4510                           
  4511                           ;incstack = 0
  4512                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4513  0D66  3007               	movlw	7
  4514  0D67  0020               	movlb	0	; select bank0
  4515  0D68  00A0               	movwf	??_mTouch_PortInit
  4516  0D69  0820               	movf	??_mTouch_PortInit,w
  4517  0D6A  0021               	movlb	1	; select bank1
  4518  0D6B  048C               	iorwf	12,f	;volatile
  4519                           
  4520                           ;mTouch.c: 9: ANSELA |= (0x07);
  4521  0D6C  3007               	movlw	7
  4522  0D6D  0020               	movlb	0	; select bank0
  4523  0D6E  00A0               	movwf	??_mTouch_PortInit
  4524  0D6F  0820               	movf	??_mTouch_PortInit,w
  4525  0D70  0023               	movlb	3	; select bank3
  4526  0D71  048C               	iorwf	12,f	;volatile
  4527  0D72  0008               	return
  4528  0D73                     __end_of_mTouch_PortInit:	
  4529                           
  4530                           	psect	text8
  4531  0640                     __ptext8:	
  4532 ;; *************** function _mTouch_Check *****************
  4533 ;; Defined at:
  4534 ;;		line 120 in file "main.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  chan            1    wreg     unsigned char 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  chan            1    7[BANK0 ] unsigned char 
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      unsigned char 
  4541 ;; Registers used:
  4542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4548 ;;      Params:         0       0       0       0       0       0
  4549 ;;      Locals:         0       1       0       0       0       0
  4550 ;;      Temps:          0       5       0       0       0       0
  4551 ;;      Totals:         0       6       0       0       0       0
  4552 ;;Total ram usage:        6 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:    4
  4555 ;; This function calls:
  4556 ;;		_Buzzer_MiliSecond
  4557 ;; This function is called by:
  4558 ;;		_main
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function _mTouch_Check
  4564  0640                     _mTouch_Check:	
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _mTouch_Check: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4568                           ;mTouch_Check@chan stored from wreg
  4569  0640  0020               	movlb	0	; select bank0
  4570  0641  00A7               	movwf	mTouch_Check@chan
  4571                           
  4572                           ;main.c: 122: if(chan>2)return 0;
  4573  0642  3003               	movlw	3
  4574  0643  0227               	subwf	mTouch_Check@chan,w
  4575  0644  1C03               	skipc
  4576  0645  2E48               	goto	l3297
  4577  0646  3000               	movlw	0
  4578  0647  0008               	return
  4579  0648                     l3297:	
  4580                           
  4581                           ;main.c: 124: if(((CPS_PreData[chan]-CPS_Data[chan])>200)&&!mTouch_Interval[chan])
  4582  0648  0827               	movf	mTouch_Check@chan,w
  4583  0649  3EA4               	addlw	(low (_CPS_Data| 0))& (0+255)
  4584  064A  0086               	movwf	6
  4585  064B  0187               	clrf	7
  4586  064C  0801               	movf	1,w
  4587  064D  00A2               	movwf	??_mTouch_Check
  4588  064E  01A3               	clrf	??_mTouch_Check+1
  4589  064F  09A2               	comf	??_mTouch_Check,f
  4590  0650  09A3               	comf	??_mTouch_Check+1,f
  4591  0651  0AA2               	incf	??_mTouch_Check,f
  4592  0652  1903               	skipnz
  4593  0653  0AA3               	incf	??_mTouch_Check+1,f
  4594  0654  0827               	movf	mTouch_Check@chan,w
  4595  0655  3EA7               	addlw	(low (_CPS_PreData| 0))& (0+255)
  4596  0656  0086               	movwf	6
  4597  0657  0187               	clrf	7
  4598  0658  0801               	movf	1,w
  4599  0659  0722               	addwf	??_mTouch_Check,w
  4600  065A  00A4               	movwf	??_mTouch_Check+2
  4601  065B  0823               	movf	??_mTouch_Check+1,w
  4602  065C  1803               	skipnc
  4603  065D  0A23               	incf	??_mTouch_Check+1,w
  4604  065E  00A5               	movwf	??_mTouch_Check+3
  4605  065F  0825               	movf	??_mTouch_Check+3,w
  4606  0660  3A80               	xorlw	128
  4607  0661  00A6               	movwf	??_mTouch_Check+4
  4608  0662  3080               	movlw	128
  4609  0663  0226               	subwf	??_mTouch_Check+4,w
  4610  0664  1D03               	skipz
  4611  0665  2E68               	goto	u2675
  4612  0666  30C9               	movlw	201
  4613  0667  0224               	subwf	??_mTouch_Check+2,w
  4614  0668                     u2675:	
  4615  0668  1C03               	skipc
  4616  0669  2E82               	goto	l3309
  4617  066A  0020               	movlb	0	; select bank0
  4618  066B  0827               	movf	mTouch_Check@chan,w
  4619  066C  3E70               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4620  066D  0086               	movwf	6
  4621  066E  0187               	clrf	7
  4622  066F  0801               	movf	1,w
  4623  0670  1D03               	btfss	3,2
  4624  0671  2E82               	goto	l3309
  4625                           
  4626                           ;main.c: 125: {
  4627                           ;main.c: 126: mTouch_Interval[chan] = 100;
  4628  0672  3064               	movlw	100
  4629  0673  00A2               	movwf	??_mTouch_Check
  4630  0674  0827               	movf	mTouch_Check@chan,w
  4631  0675  3E70               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4632  0676  0086               	movwf	6
  4633  0677  0187               	clrf	7
  4634  0678  0822               	movf	??_mTouch_Check,w
  4635  0679  0081               	movwf	1
  4636                           
  4637                           ;main.c: 127: Buzzer_MiliSecond(100);
  4638  067A  3064               	movlw	100
  4639  067B  00A0               	movwf	Buzzer_MiliSecond@time
  4640  067C  3000               	movlw	0
  4641  067D  00A1               	movwf	Buzzer_MiliSecond@time+1
  4642  067E  318D  2544         	fcall	_Buzzer_MiliSecond
  4643                           
  4644                           ;main.c: 128: return 1;
  4645  0680  3001               	movlw	1
  4646  0681  0008               	return
  4647  0682                     l3309:	
  4648                           
  4649                           ;main.c: 129: }
  4650                           ;main.c: 130: return 0;
  4651  0682  3000               	movlw	0
  4652  0683  0008               	return
  4653  0684                     __end_of_mTouch_Check:	
  4654                           
  4655                           	psect	text9
  4656  0D44                     __ptext9:	
  4657 ;; *************** function _Buzzer_MiliSecond *****************
  4658 ;; Defined at:
  4659 ;;		line 38 in file "Buzzer.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  time            2    0[BANK0 ] unsigned int 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4673 ;;      Params:         0       2       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0
  4676 ;;      Totals:         0       2       0       0       0       0
  4677 ;;Total ram usage:        2 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    3
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_mTouch_Check
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           
  4688                           ;psect for function _Buzzer_MiliSecond
  4689  0D44                     _Buzzer_MiliSecond:	
  4690                           
  4691                           ;Buzzer.c: 40: if(count==0)
  4692                           
  4693                           ;incstack = 0
  4694                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  4695  0D44  0873               	movf	_count,w
  4696  0D45  0474               	iorwf	_count+1,w
  4697  0D46  1D03               	btfss	3,2
  4698  0D47  0008               	return
  4699                           
  4700                           ;Buzzer.c: 41: count = time;
  4701  0D48  0020               	movlb	0	; select bank0
  4702  0D49  0821               	movf	Buzzer_MiliSecond@time+1,w
  4703  0D4A  00F4               	movwf	_count+1
  4704  0D4B  0820               	movf	Buzzer_MiliSecond@time,w
  4705  0D4C  00F3               	movwf	_count
  4706  0D4D  0008               	return
  4707  0D4E                     __end_of_Buzzer_MiliSecond:	
  4708                           
  4709                           	psect	text10
  4710  0DD4                     __ptext10:	
  4711 ;; *************** function _Timer6_Init *****************
  4712 ;; Defined at:
  4713 ;;		line 3 in file "Timer6.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg, status,2, status,0
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4727 ;;      Params:         0       0       0       0       0       0
  4728 ;;      Locals:         0       0       0       0       0       0
  4729 ;;      Temps:          0       1       0       0       0       0
  4730 ;;      Totals:         0       1       0       0       0       0
  4731 ;;Total ram usage:        1 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    3
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_main
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function _Timer6_Init
  4743  0DD4                     _Timer6_Init:	
  4744                           
  4745                           ;Timer6.c: 5: PR6 = 0x7D;
  4746                           
  4747                           ;incstack = 0
  4748                           ; Regs used in _Timer6_Init: [wreg+status,2+status,0]
  4749  0DD4  307D               	movlw	125
  4750  0DD5  0028               	movlb	8	; select bank8
  4751  0DD6  009D               	movwf	29	;volatile
  4752                           
  4753                           ;Timer6.c: 6: TMR6 = 0x00;
  4754  0DD7  019C               	clrf	28	;volatile
  4755                           
  4756                           ;Timer6.c: 7: T6CON |= (0x03<<0);
  4757  0DD8  3003               	movlw	3
  4758  0DD9  0020               	movlb	0	; select bank0
  4759  0DDA  00A0               	movwf	??_Timer6_Init
  4760  0DDB  0820               	movf	??_Timer6_Init,w
  4761  0DDC  0028               	movlb	8	; select bank8
  4762  0DDD  049E               	iorwf	30,f	;volatile
  4763                           
  4764                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  4765  0DDE  081E               	movf	30,w	;volatile
  4766                           
  4767                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  4768  0DDF  151E               	bsf	30,2	;volatile
  4769                           
  4770                           ;Timer6.c: 11: TMR6IF = 0;
  4771  0DE0  0020               	movlb	0	; select bank0
  4772  0DE1  1193               	bcf	19,3	;volatile
  4773                           
  4774                           ;Timer6.c: 12: TMR6IE = 1;
  4775  0DE2  0021               	movlb	1	; select bank1
  4776  0DE3  1593               	bsf	19,3	;volatile
  4777                           
  4778                           ;Timer6.c: 13: PEIE = 1;
  4779  0DE4  170B               	bsf	11,6	;volatile
  4780                           
  4781                           ;Timer6.c: 14: GIE = 1;
  4782  0DE5  178B               	bsf	11,7	;volatile
  4783  0DE6  0008               	return
  4784  0DE7                     __end_of_Timer6_Init:	
  4785                           
  4786                           	psect	text11
  4787  0D23                     __ptext11:	
  4788 ;; *************** function _Timer1_StopCount *****************
  4789 ;; Defined at:
  4790 ;;		line 37 in file "Timer1.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;		None
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		None
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4804 ;;      Params:         0       0       0       0       0       0
  4805 ;;      Locals:         0       0       0       0       0       0
  4806 ;;      Temps:          0       0       0       0       0       0
  4807 ;;      Totals:         0       0       0       0       0       0
  4808 ;;Total ram usage:        0 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    3
  4811 ;; This function calls:
  4812 ;;		Nothing
  4813 ;; This function is called by:
  4814 ;;		_main
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           
  4819                           ;psect for function _Timer1_StopCount
  4820  0D23                     _Timer1_StopCount:	
  4821                           
  4822                           ;Timer1.c: 39: TMR1ON = 0;
  4823                           
  4824                           ;incstack = 0
  4825                           ; Regs used in _Timer1_StopCount: []
  4826  0D23  0020               	movlb	0	; select bank0
  4827  0D24  1018               	bcf	24,0	;volatile
  4828  0D25  0008               	return
  4829  0D26                     __end_of_Timer1_StopCount:	
  4830                           
  4831                           	psect	text12
  4832  07FB                     __ptext12:	
  4833 ;; *************** function _Timer1_StartCount *****************
  4834 ;; Defined at:
  4835 ;;		line 31 in file "Timer1.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		wreg, status,2, status,0, pclath, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4849 ;;      Params:         0       0       0       0       0       0
  4850 ;;      Locals:         0       0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0       0
  4852 ;;      Totals:         0       0       0       0       0       0
  4853 ;;Total ram usage:        0 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    4
  4856 ;; This function calls:
  4857 ;;		_Timer1_ClearRecord
  4858 ;; This function is called by:
  4859 ;;		_main
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           
  4864                           ;psect for function _Timer1_StartCount
  4865  07FB                     _Timer1_StartCount:	
  4866                           
  4867                           ;Timer1.c: 33: Timer1_ClearRecord();
  4868                           
  4869                           ;incstack = 0
  4870                           ; Regs used in _Timer1_StartCount: [wreg+status,2+status,0+pclath+cstack]
  4871  07FB  318E  2690         	fcall	_Timer1_ClearRecord
  4872                           
  4873                           ;Timer1.c: 34: TMR1ON = 1;
  4874  07FD  0020               	movlb	0	; select bank0
  4875  07FE  1418               	bsf	24,0	;volatile
  4876  07FF  0008               	return
  4877  0800                     __end_of_Timer1_StartCount:	
  4878                           
  4879                           	psect	text13
  4880  0E90                     __ptext13:	
  4881 ;; *************** function _Timer1_ClearRecord *****************
  4882 ;; Defined at:
  4883 ;;		line 42 in file "Timer1.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;		None
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;		None
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  1    wreg      void 
  4890 ;; Registers used:
  4891 ;;		wreg, status,2
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4897 ;;      Params:         0       0       0       0       0       0
  4898 ;;      Locals:         0       0       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0       0
  4900 ;;      Totals:         0       0       0       0       0       0
  4901 ;;Total ram usage:        0 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    3
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_Timer1_StartCount
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           
  4912                           ;psect for function _Timer1_ClearRecord
  4913  0E90                     _Timer1_ClearRecord:	
  4914                           
  4915                           ;Timer1.c: 44: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL+1; TMR1ON = 1; };
  4916                           
  4917                           ;incstack = 0
  4918                           ; Regs used in _Timer1_ClearRecord: [wreg+status,2]
  4919  0E90  0020               	movlb	0	; select bank0
  4920  0E91  1018               	bcf	24,0	;volatile
  4921  0E92  30FF               	movlw	255
  4922  0E93  0097               	movwf	23	;volatile
  4923  0E94  30F6               	movlw	246
  4924  0E95  0096               	movwf	22	;volatile
  4925  0E96  1418               	bsf	24,0	;volatile
  4926                           
  4927                           ;Timer1.c: 45: cnts.SigmaDeltaCount= 0;
  4928  0E97  3000               	movlw	0
  4929  0E98  0021               	movlb	1	; select bank1
  4930  0E99  00A3               	movwf	(_cnts+3)^(0+128)
  4931  0E9A  3000               	movlw	0
  4932  0E9B  00A2               	movwf	(_cnts+2)^(0+128)
  4933  0E9C  3000               	movlw	0
  4934  0E9D  00A1               	movwf	(_cnts+1)^(0+128)
  4935  0E9E  3000               	movlw	0
  4936  0E9F  00A0               	movwf	_cnts^(0+128)
  4937                           
  4938                           ;Timer1.c: 46: tcnt.Delta_t = 0;
  4939  0EA0  3000               	movlw	0
  4940  0EA1  0020               	movlb	0	; select bank0
  4941  0EA2  00EA               	movwf	_tcnt+5
  4942  0EA3  3000               	movlw	0
  4943  0EA4  00E9               	movwf	_tcnt+4
  4944  0EA5  3000               	movlw	0
  4945  0EA6  00E8               	movwf	_tcnt+3
  4946  0EA7  3000               	movlw	0
  4947  0EA8  00E7               	movwf	_tcnt+2
  4948                           
  4949                           ;Timer1.c: 47: tcnt.Second_t = 0;
  4950  0EA9  01E5               	clrf	_tcnt
  4951                           
  4952                           ;Timer1.c: 48: tcnt.Minute_t = 0;
  4953  0EAA  01E6               	clrf	_tcnt+1
  4954  0EAB  0008               	return
  4955  0EAC                     __end_of_Timer1_ClearRecord:	
  4956                           
  4957                           	psect	text14
  4958  0F06                     __ptext14:	
  4959 ;; *************** function _Timer1_Init *****************
  4960 ;; Defined at:
  4961 ;;		line 6 in file "Timer1.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg, status,2, status,0
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4975 ;;      Params:         0       0       0       0       0       0
  4976 ;;      Locals:         0       0       0       0       0       0
  4977 ;;      Temps:          0       1       0       0       0       0
  4978 ;;      Totals:         0       1       0       0       0       0
  4979 ;;Total ram usage:        1 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; Hardware stack levels required when called:    3
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_main
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           
  4990                           ;psect for function _Timer1_Init
  4991  0F06                     _Timer1_Init:	
  4992                           
  4993                           ;Timer1.c: 8: TRISB |= (1<<6);
  4994                           
  4995                           ;incstack = 0
  4996                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4997  0F06  0021               	movlb	1	; select bank1
  4998  0F07  170D               	bsf	13,6	;volatile
  4999                           
  5000                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  5001  0F08  30BF               	movlw	191
  5002  0F09  0020               	movlb	0	; select bank0
  5003  0F0A  00A0               	movwf	??_Timer1_Init
  5004  0F0B  0820               	movf	??_Timer1_Init,w
  5005  0F0C  0023               	movlb	3	; select bank3
  5006  0F0D  058D               	andwf	13,f	;volatile
  5007                           
  5008                           ;Timer1.c: 10: WPUB |= (1<<6);
  5009  0F0E  0024               	movlb	4	; select bank4
  5010  0F0F  170D               	bsf	13,6	;volatile
  5011                           
  5012                           ;Timer1.c: 12: T1CON |= (0x01<<2);
  5013  0F10  0020               	movlb	0	; select bank0
  5014  0F11  1518               	bsf	24,2	;volatile
  5015                           
  5016                           ;Timer1.c: 13: T1CON &= ~(0x01<<3);
  5017  0F12  30F7               	movlw	247
  5018  0F13  00A0               	movwf	??_Timer1_Init
  5019  0F14  0820               	movf	??_Timer1_Init,w
  5020  0F15  0598               	andwf	24,f	;volatile
  5021                           
  5022                           ;Timer1.c: 14: T1CON |= (0x00<<4);
  5023  0F16  0818               	movf	24,w	;volatile
  5024                           
  5025                           ;Timer1.c: 15: T1CON |= (0x02<<6);
  5026  0F17  1798               	bsf	24,7	;volatile
  5027                           
  5028                           ;Timer1.c: 17: T1GCON = 0x00;
  5029  0F18  0199               	clrf	25	;volatile
  5030                           
  5031                           ;Timer1.c: 19: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL+1; TMR1ON = 1; };
  5032  0F19  1018               	bcf	24,0	;volatile
  5033  0F1A  30FF               	movlw	255
  5034  0F1B  0097               	movwf	23	;volatile
  5035  0F1C  30F6               	movlw	246
  5036  0F1D  0096               	movwf	22	;volatile
  5037  0F1E  1418               	bsf	24,0	;volatile
  5038                           
  5039                           ;Timer1.c: 21: TMR1IF = 0;
  5040  0F1F  1011               	bcf	17,0	;volatile
  5041                           
  5042                           ;Timer1.c: 22: TMR1IE = 1;
  5043  0F20  0021               	movlb	1	; select bank1
  5044  0F21  1411               	bsf	17,0	;volatile
  5045                           
  5046                           ;Timer1.c: 23: PEIE = 1;
  5047  0F22  170B               	bsf	11,6	;volatile
  5048                           
  5049                           ;Timer1.c: 24: GIE = 1;
  5050  0F23  178B               	bsf	11,7	;volatile
  5051                           
  5052                           ;Timer1.c: 26: TMR1ON = 0;
  5053  0F24  0020               	movlb	0	; select bank0
  5054  0F25  1018               	bcf	24,0	;volatile
  5055  0F26  0008               	return
  5056  0F27                     __end_of_Timer1_Init:	
  5057                           
  5058                           	psect	text15
  5059  0D20                     __ptext15:	
  5060 ;; *************** function _Timer1_GetSecond *****************
  5061 ;; Defined at:
  5062 ;;		line 66 in file "Timer1.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;		None
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;		None
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      unsigned char 
  5069 ;; Registers used:
  5070 ;;		wreg
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5076 ;;      Params:         0       0       0       0       0       0
  5077 ;;      Locals:         0       0       0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0
  5079 ;;      Totals:         0       0       0       0       0       0
  5080 ;;Total ram usage:        0 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    3
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		_main
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           
  5091                           ;psect for function _Timer1_GetSecond
  5092  0D20                     _Timer1_GetSecond:	
  5093                           
  5094                           ;Timer1.c: 68: return tcnt.Second_t;
  5095                           
  5096                           ;incstack = 0
  5097                           ; Regs used in _Timer1_GetSecond: [wreg]
  5098  0D20  0020               	movlb	0	; select bank0
  5099  0D21  0865               	movf	_tcnt,w
  5100  0D22  0008               	return
  5101  0D23                     __end_of_Timer1_GetSecond:	
  5102                           
  5103                           	psect	text16
  5104  0D1D                     __ptext16:	
  5105 ;; *************** function _Timer1_GetMinute *****************
  5106 ;; Defined at:
  5107 ;;		line 71 in file "Timer1.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;		None
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      unsigned char 
  5114 ;; Registers used:
  5115 ;;		wreg
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5121 ;;      Params:         0       0       0       0       0       0
  5122 ;;      Locals:         0       0       0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0       0
  5124 ;;      Totals:         0       0       0       0       0       0
  5125 ;;Total ram usage:        0 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    3
  5128 ;; This function calls:
  5129 ;;		Nothing
  5130 ;; This function is called by:
  5131 ;;		_main
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           
  5136                           ;psect for function _Timer1_GetMinute
  5137  0D1D                     _Timer1_GetMinute:	
  5138                           
  5139                           ;Timer1.c: 73: return tcnt.Minute_t;
  5140                           
  5141                           ;incstack = 0
  5142                           ; Regs used in _Timer1_GetMinute: [wreg]
  5143  0D1D  0020               	movlb	0	; select bank0
  5144  0D1E  0866               	movf	_tcnt+1,w
  5145  0D1F  0008               	return
  5146  0D20                     __end_of_Timer1_GetMinute:	
  5147                           
  5148                           	psect	text17
  5149  0DC3                     __ptext17:	
  5150 ;; *************** function _Timer1_GetCountSum *****************
  5151 ;; Defined at:
  5152 ;;		line 51 in file "Timer1.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  4    0[BANK0 ] unsigned long 
  5159 ;; Registers used:
  5160 ;;		wreg
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5166 ;;      Params:         0       4       0       0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0
  5169 ;;      Totals:         0       4       0       0       0       0
  5170 ;;Total ram usage:        4 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    3
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_main
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           
  5181                           ;psect for function _Timer1_GetCountSum
  5182  0DC3                     _Timer1_GetCountSum:	
  5183                           
  5184                           ;Timer1.c: 53: return cnts.SigmaDeltaCount;
  5185                           
  5186                           ;incstack = 0
  5187                           ; Regs used in _Timer1_GetCountSum: [wreg]
  5188  0DC3  0021               	movlb	1	; select bank1
  5189  0DC4  0823               	movf	(_cnts+3)^(0+128),w
  5190  0DC5  0020               	movlb	0	; select bank0
  5191  0DC6  00A3               	movwf	?_Timer1_GetCountSum+3
  5192  0DC7  0021               	movlb	1	; select bank1
  5193  0DC8  0822               	movf	(_cnts+2)^(0+128),w
  5194  0DC9  0020               	movlb	0	; select bank0
  5195  0DCA  00A2               	movwf	?_Timer1_GetCountSum+2
  5196  0DCB  0021               	movlb	1	; select bank1
  5197  0DCC  0821               	movf	(_cnts+1)^(0+128),w
  5198  0DCD  0020               	movlb	0	; select bank0
  5199  0DCE  00A1               	movwf	?_Timer1_GetCountSum+1
  5200  0DCF  0021               	movlb	1	; select bank1
  5201  0DD0  0820               	movf	_cnts^(0+128),w
  5202  0DD1  0020               	movlb	0	; select bank0
  5203  0DD2  00A0               	movwf	?_Timer1_GetCountSum
  5204  0DD3  0008               	return
  5205  0DD4                     __end_of_Timer1_GetCountSum:	
  5206                           
  5207                           	psect	text18
  5208  0F74                     __ptext18:	
  5209 ;; *************** function _Timer1_GetCPM *****************
  5210 ;; Defined at:
  5211 ;;		line 61 in file "Timer1.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;		None
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;		None
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  4   30[BANK0 ] unsigned long 
  5218 ;; Registers used:
  5219 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5225 ;;      Params:         0       4       0       0       0       0
  5226 ;;      Locals:         0       4       0       0       0       0
  5227 ;;      Temps:          0       0       0       0       0       0
  5228 ;;      Totals:         0       8       0       0       0       0
  5229 ;;Total ram usage:        8 bytes
  5230 ;; Hardware stack levels used:    1
  5231 ;; Hardware stack levels required when called:    5
  5232 ;; This function calls:
  5233 ;;		_Timer1_GetCPS
  5234 ;;		___lmul
  5235 ;; This function is called by:
  5236 ;;		_main
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           
  5241                           ;psect for function _Timer1_GetCPM
  5242  0F74                     _Timer1_GetCPM:	
  5243                           
  5244                           ;Timer1.c: 63: return (uint32_t)(Timer1_GetCPS()*60);
  5245                           
  5246                           ;incstack = 0
  5247                           ; Regs used in _Timer1_GetCPM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5248  0F74  3187  270B  318F   	fcall	_Timer1_GetCPS
  5249  0F77  0020               	movlb	0	; select bank0
  5250  0F78  083D               	movf	?_Timer1_GetCPS+3,w
  5251  0F79  00C5               	movwf	_Timer1_GetCPM$1073+3
  5252  0F7A  083C               	movf	?_Timer1_GetCPS+2,w
  5253  0F7B  00C4               	movwf	_Timer1_GetCPM$1073+2
  5254  0F7C  083B               	movf	?_Timer1_GetCPS+1,w
  5255  0F7D  00C3               	movwf	_Timer1_GetCPM$1073+1
  5256  0F7E  083A               	movf	?_Timer1_GetCPS,w
  5257  0F7F  00C2               	movwf	_Timer1_GetCPM$1073
  5258                           
  5259                           ;Timer1.c: 63: return (uint32_t)(Timer1_GetCPS()*60);
  5260  0F80  0845               	movf	_Timer1_GetCPM$1073+3,w
  5261  0F81  00A3               	movwf	___lmul@multiplier+3
  5262  0F82  0844               	movf	_Timer1_GetCPM$1073+2,w
  5263  0F83  00A2               	movwf	___lmul@multiplier+2
  5264  0F84  0843               	movf	_Timer1_GetCPM$1073+1,w
  5265  0F85  00A1               	movwf	___lmul@multiplier+1
  5266  0F86  0842               	movf	_Timer1_GetCPM$1073,w
  5267  0F87  00A0               	movwf	___lmul@multiplier
  5268  0F88  3000               	movlw	0
  5269  0F89  00A7               	movwf	___lmul@multiplicand+3
  5270  0F8A  3000               	movlw	0
  5271  0F8B  00A6               	movwf	___lmul@multiplicand+2
  5272  0F8C  3000               	movlw	0
  5273  0F8D  00A5               	movwf	___lmul@multiplicand+1
  5274  0F8E  303C               	movlw	60
  5275  0F8F  00A4               	movwf	___lmul@multiplicand
  5276  0F90  318F  279C         	fcall	___lmul
  5277  0F92  0020               	movlb	0	; select bank0
  5278  0F93  0823               	movf	?___lmul+3,w
  5279  0F94  00C1               	movwf	?_Timer1_GetCPM+3
  5280  0F95  0822               	movf	?___lmul+2,w
  5281  0F96  00C0               	movwf	?_Timer1_GetCPM+2
  5282  0F97  0821               	movf	?___lmul+1,w
  5283  0F98  00BF               	movwf	?_Timer1_GetCPM+1
  5284  0F99  0820               	movf	?___lmul,w
  5285  0F9A  00BE               	movwf	?_Timer1_GetCPM
  5286  0F9B  0008               	return
  5287  0F9C                     __end_of_Timer1_GetCPM:	
  5288                           
  5289                           	psect	text19
  5290  070B                     __ptext19:	
  5291 ;; *************** function _Timer1_GetCPS *****************
  5292 ;; Defined at:
  5293 ;;		line 56 in file "Timer1.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  4   26[BANK0 ] unsigned long 
  5300 ;; Registers used:
  5301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5307 ;;      Params:         0       4       0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0
  5310 ;;      Totals:         0       4       0       0       0       0
  5311 ;;Total ram usage:        4 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    4
  5314 ;; This function calls:
  5315 ;;		___lldiv
  5316 ;;		___lmul
  5317 ;; This function is called by:
  5318 ;;		_Timer1_GetCPM
  5319 ;;		_main
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           
  5324                           ;psect for function _Timer1_GetCPS
  5325  070B                     _Timer1_GetCPS:	
  5326                           
  5327                           ;Timer1.c: 58: return (uint32_t)((cnts.SigmaDeltaCount * 1000UL)/tcnt.Delta_t);
  5328                           
  5329                           ;incstack = 0
  5330                           ; Regs used in _Timer1_GetCPS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5331  070B  3002               	movlw	2
  5332  070C  3E65               	addlw	(low (_tcnt| 0))& (0+255)
  5333  070D  0086               	movwf	6
  5334  070E  0187               	clrf	7
  5335  070F  3F40               	moviw [0]fsr1
  5336  0710  0020               	movlb	0	; select bank0
  5337  0711  00AC               	movwf	___lldiv@divisor
  5338  0712  3F41               	moviw [1]fsr1
  5339  0713  00AD               	movwf	___lldiv@divisor+1
  5340  0714  3F42               	moviw [2]fsr1
  5341  0715  00AE               	movwf	___lldiv@divisor+2
  5342  0716  3F43               	moviw [3]fsr1
  5343  0717  00AF               	movwf	___lldiv@divisor+3
  5344  0718  0021               	movlb	1	; select bank1
  5345  0719  0823               	movf	(_cnts+3)^(0+128),w
  5346  071A  0020               	movlb	0	; select bank0
  5347  071B  00A3               	movwf	___lmul@multiplier+3
  5348  071C  0021               	movlb	1	; select bank1
  5349  071D  0822               	movf	(_cnts+2)^(0+128),w
  5350  071E  0020               	movlb	0	; select bank0
  5351  071F  00A2               	movwf	___lmul@multiplier+2
  5352  0720  0021               	movlb	1	; select bank1
  5353  0721  0821               	movf	(_cnts+1)^(0+128),w
  5354  0722  0020               	movlb	0	; select bank0
  5355  0723  00A1               	movwf	___lmul@multiplier+1
  5356  0724  0021               	movlb	1	; select bank1
  5357  0725  0820               	movf	_cnts^(0+128),w
  5358  0726  0020               	movlb	0	; select bank0
  5359  0727  00A0               	movwf	___lmul@multiplier
  5360  0728  3000               	movlw	0
  5361  0729  00A7               	movwf	___lmul@multiplicand+3
  5362  072A  3000               	movlw	0
  5363  072B  00A6               	movwf	___lmul@multiplicand+2
  5364  072C  3003               	movlw	3
  5365  072D  00A5               	movwf	___lmul@multiplicand+1
  5366  072E  30E8               	movlw	232
  5367  072F  00A4               	movwf	___lmul@multiplicand
  5368  0730  318F  279C  3187   	fcall	___lmul
  5369  0733  0020               	movlb	0	; select bank0
  5370  0734  0823               	movf	?___lmul+3,w
  5371  0735  00B3               	movwf	___lldiv@dividend+3
  5372  0736  0822               	movf	?___lmul+2,w
  5373  0737  00B2               	movwf	___lldiv@dividend+2
  5374  0738  0821               	movf	?___lmul+1,w
  5375  0739  00B1               	movwf	___lldiv@dividend+1
  5376  073A  0820               	movf	?___lmul,w
  5377  073B  00B0               	movwf	___lldiv@dividend
  5378  073C  3185  25ED         	fcall	___lldiv
  5379  073E  0020               	movlb	0	; select bank0
  5380  073F  082F               	movf	?___lldiv+3,w
  5381  0740  00BD               	movwf	?_Timer1_GetCPS+3
  5382  0741  082E               	movf	?___lldiv+2,w
  5383  0742  00BC               	movwf	?_Timer1_GetCPS+2
  5384  0743  082D               	movf	?___lldiv+1,w
  5385  0744  00BB               	movwf	?_Timer1_GetCPS+1
  5386  0745  082C               	movf	?___lldiv,w
  5387  0746  00BA               	movwf	?_Timer1_GetCPS
  5388  0747  0008               	return
  5389  0748                     __end_of_Timer1_GetCPS:	
  5390                           
  5391                           	psect	text20
  5392  0F9C                     __ptext20:	
  5393 ;; *************** function ___lmul *****************
  5394 ;; Defined at:
  5395 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul32.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5398 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  product         4    8[BANK0 ] unsigned long 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  4    0[BANK0 ] unsigned long 
  5403 ;; Registers used:
  5404 ;;		wreg, status,2, status,0
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5410 ;;      Params:         0       8       0       0       0       0
  5411 ;;      Locals:         0       4       0       0       0       0
  5412 ;;      Temps:          0       0       0       0       0       0
  5413 ;;      Totals:         0      12       0       0       0       0
  5414 ;;Total ram usage:       12 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    3
  5417 ;; This function calls:
  5418 ;;		Nothing
  5419 ;; This function is called by:
  5420 ;;		_Timer1_GetCPS
  5421 ;;		_Timer1_GetCPM
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function ___lmul
  5427  0F9C                     ___lmul:	
  5428                           
  5429                           ;incstack = 0
  5430                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5431  0F9C  3000               	movlw	0
  5432  0F9D  0020               	movlb	0	; select bank0
  5433  0F9E  00AB               	movwf	___lmul@product+3
  5434  0F9F  3000               	movlw	0
  5435  0FA0  00AA               	movwf	___lmul@product+2
  5436  0FA1  3000               	movlw	0
  5437  0FA2  00A9               	movwf	___lmul@product+1
  5438  0FA3  3000               	movlw	0
  5439  0FA4  00A8               	movwf	___lmul@product
  5440  0FA5                     l2955:	
  5441  0FA5  1C20               	btfss	___lmul@multiplier,0
  5442  0FA6  2FAF               	goto	l2959
  5443  0FA7  0824               	movf	___lmul@multiplicand,w
  5444  0FA8  07A8               	addwf	___lmul@product,f
  5445  0FA9  0825               	movf	___lmul@multiplicand+1,w
  5446  0FAA  3DA9               	addwfc	___lmul@product+1,f
  5447  0FAB  0826               	movf	___lmul@multiplicand+2,w
  5448  0FAC  3DAA               	addwfc	___lmul@product+2,f
  5449  0FAD  0827               	movf	___lmul@multiplicand+3,w
  5450  0FAE  3DAB               	addwfc	___lmul@product+3,f
  5451  0FAF                     l2959:	
  5452  0FAF  3001               	movlw	1
  5453  0FB0                     u2425:	
  5454  0FB0  35A4               	lslf	___lmul@multiplicand,f
  5455  0FB1  0DA5               	rlf	___lmul@multiplicand+1,f
  5456  0FB2  0DA6               	rlf	___lmul@multiplicand+2,f
  5457  0FB3  0DA7               	rlf	___lmul@multiplicand+3,f
  5458  0FB4  0B89               	decfsz	9,f
  5459  0FB5  2FB0               	goto	u2425
  5460  0FB6  3001               	movlw	1
  5461  0FB7                     u2435:	
  5462  0FB7  36A3               	lsrf	___lmul@multiplier+3,f
  5463  0FB8  0CA2               	rrf	___lmul@multiplier+2,f
  5464  0FB9  0CA1               	rrf	___lmul@multiplier+1,f
  5465  0FBA  0CA0               	rrf	___lmul@multiplier,f
  5466  0FBB  0B89               	decfsz	9,f
  5467  0FBC  2FB7               	goto	u2435
  5468  0FBD  0823               	movf	___lmul@multiplier+3,w
  5469  0FBE  0422               	iorwf	___lmul@multiplier+2,w
  5470  0FBF  0421               	iorwf	___lmul@multiplier+1,w
  5471  0FC0  0420               	iorwf	___lmul@multiplier,w
  5472  0FC1  1D03               	skipz
  5473  0FC2  2FA5               	goto	l2955
  5474  0FC3  082B               	movf	___lmul@product+3,w
  5475  0FC4  00A3               	movwf	?___lmul+3
  5476  0FC5  082A               	movf	___lmul@product+2,w
  5477  0FC6  00A2               	movwf	?___lmul+2
  5478  0FC7  0829               	movf	___lmul@product+1,w
  5479  0FC8  00A1               	movwf	?___lmul+1
  5480  0FC9  0828               	movf	___lmul@product,w
  5481  0FCA  00A0               	movwf	?___lmul
  5482  0FCB  0008               	return
  5483  0FCC                     __end_of___lmul:	
  5484                           
  5485                           	psect	text21
  5486  05ED                     __ptext21:	
  5487 ;; *************** function ___lldiv *****************
  5488 ;; Defined at:
  5489 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  divisor         4   12[BANK0 ] unsigned long 
  5492 ;;  dividend        4   16[BANK0 ] unsigned long 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  quotient        4   21[BANK0 ] unsigned long 
  5495 ;;  counter         1   25[BANK0 ] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  4   12[BANK0 ] unsigned long 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5505 ;;      Params:         0       8       0       0       0       0
  5506 ;;      Locals:         0       5       0       0       0       0
  5507 ;;      Temps:          0       1       0       0       0       0
  5508 ;;      Totals:         0      14       0       0       0       0
  5509 ;;Total ram usage:       14 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    3
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_Timer1_GetCPS
  5516 ;;		_printf
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           
  5521                           ;psect for function ___lldiv
  5522  05ED                     ___lldiv:	
  5523                           
  5524                           ;incstack = 0
  5525                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5526  05ED  3000               	movlw	0
  5527  05EE  0020               	movlb	0	; select bank0
  5528  05EF  00B8               	movwf	___lldiv@quotient+3
  5529  05F0  3000               	movlw	0
  5530  05F1  00B7               	movwf	___lldiv@quotient+2
  5531  05F2  3000               	movlw	0
  5532  05F3  00B6               	movwf	___lldiv@quotient+1
  5533  05F4  3000               	movlw	0
  5534  05F5  00B5               	movwf	___lldiv@quotient
  5535  05F6  082F               	movf	___lldiv@divisor+3,w
  5536  05F7  042E               	iorwf	___lldiv@divisor+2,w
  5537  05F8  042D               	iorwf	___lldiv@divisor+1,w
  5538  05F9  042C               	iorwf	___lldiv@divisor,w
  5539  05FA  1903               	skipnz
  5540  05FB  2E37               	goto	l2987
  5541  05FC  01B9               	clrf	___lldiv@counter
  5542  05FD  0AB9               	incf	___lldiv@counter,f
  5543  05FE                     l2973:	
  5544  05FE  1BAF               	btfsc	___lldiv@divisor+3,7
  5545  05FF  2E0C               	goto	l2975
  5546  0600  3001               	movlw	1
  5547  0601                     u2465:	
  5548  0601  35AC               	lslf	___lldiv@divisor,f
  5549  0602  0DAD               	rlf	___lldiv@divisor+1,f
  5550  0603  0DAE               	rlf	___lldiv@divisor+2,f
  5551  0604  0DAF               	rlf	___lldiv@divisor+3,f
  5552  0605  0B89               	decfsz	9,f
  5553  0606  2E01               	goto	u2465
  5554  0607  3001               	movlw	1
  5555  0608  00B4               	movwf	??___lldiv
  5556  0609  0834               	movf	??___lldiv,w
  5557  060A  07B9               	addwf	___lldiv@counter,f
  5558  060B  2DFE               	goto	l2973
  5559  060C                     l2975:	
  5560  060C  3001               	movlw	1
  5561  060D                     u2485:	
  5562  060D  35B5               	lslf	___lldiv@quotient,f
  5563  060E  0DB6               	rlf	___lldiv@quotient+1,f
  5564  060F  0DB7               	rlf	___lldiv@quotient+2,f
  5565  0610  0DB8               	rlf	___lldiv@quotient+3,f
  5566  0611  0B89               	decfsz	9,f
  5567  0612  2E0D               	goto	u2485
  5568  0613  082F               	movf	___lldiv@divisor+3,w
  5569  0614  0233               	subwf	___lldiv@dividend+3,w
  5570  0615  1D03               	skipz
  5571  0616  2E21               	goto	u2495
  5572  0617  082E               	movf	___lldiv@divisor+2,w
  5573  0618  0232               	subwf	___lldiv@dividend+2,w
  5574  0619  1D03               	skipz
  5575  061A  2E21               	goto	u2495
  5576  061B  082D               	movf	___lldiv@divisor+1,w
  5577  061C  0231               	subwf	___lldiv@dividend+1,w
  5578  061D  1D03               	skipz
  5579  061E  2E21               	goto	u2495
  5580  061F  082C               	movf	___lldiv@divisor,w
  5581  0620  0230               	subwf	___lldiv@dividend,w
  5582  0621                     u2495:	
  5583  0621  1C03               	skipc
  5584  0622  2E2C               	goto	l2983
  5585  0623  082C               	movf	___lldiv@divisor,w
  5586  0624  02B0               	subwf	___lldiv@dividend,f
  5587  0625  082D               	movf	___lldiv@divisor+1,w
  5588  0626  3BB1               	subwfb	___lldiv@dividend+1,f
  5589  0627  082E               	movf	___lldiv@divisor+2,w
  5590  0628  3BB2               	subwfb	___lldiv@dividend+2,f
  5591  0629  082F               	movf	___lldiv@divisor+3,w
  5592  062A  3BB3               	subwfb	___lldiv@dividend+3,f
  5593  062B  1435               	bsf	___lldiv@quotient,0
  5594  062C                     l2983:	
  5595  062C  3001               	movlw	1
  5596  062D                     u2505:	
  5597  062D  36AF               	lsrf	___lldiv@divisor+3,f
  5598  062E  0CAE               	rrf	___lldiv@divisor+2,f
  5599  062F  0CAD               	rrf	___lldiv@divisor+1,f
  5600  0630  0CAC               	rrf	___lldiv@divisor,f
  5601  0631  0B89               	decfsz	9,f
  5602  0632  2E2D               	goto	u2505
  5603  0633  3001               	movlw	1
  5604  0634  02B9               	subwf	___lldiv@counter,f
  5605  0635  1D03               	btfss	3,2
  5606  0636  2E0C               	goto	l2975
  5607  0637                     l2987:	
  5608  0637  0838               	movf	___lldiv@quotient+3,w
  5609  0638  00AF               	movwf	?___lldiv+3
  5610  0639  0837               	movf	___lldiv@quotient+2,w
  5611  063A  00AE               	movwf	?___lldiv+2
  5612  063B  0836               	movf	___lldiv@quotient+1,w
  5613  063C  00AD               	movwf	?___lldiv+1
  5614  063D  0835               	movf	___lldiv@quotient,w
  5615  063E  00AC               	movwf	?___lldiv
  5616  063F  0008               	return
  5617  0640                     __end_of___lldiv:	
  5618                           
  5619                           	psect	text22
  5620  052A                     __ptext22:	
  5621 ;; *************** function _LCD_Init *****************
  5622 ;; Defined at:
  5623 ;;		line 28 in file "LCD.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		wreg, status,2, status,0, pclath, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5637 ;;      Params:         0       0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0
  5639 ;;      Temps:          0       2       0       0       0       0
  5640 ;;      Totals:         0       2       0       0       0       0
  5641 ;;Total ram usage:        2 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    5
  5644 ;; This function calls:
  5645 ;;		_LCD_DisplayClear
  5646 ;;		_LCD_WriteData
  5647 ;; This function is called by:
  5648 ;;		_main
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function _LCD_Init
  5654  052A                     _LCD_Init:	
  5655                           
  5656                           ;LCD.c: 30: LATA3 = 0;
  5657                           
  5658                           ;incstack = 0
  5659                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5660  052A  0022               	movlb	2	; select bank2
  5661  052B  118C               	bcf	12,3	;volatile
  5662                           
  5663                           ;LCD.c: 31: LATA4 = 0;
  5664  052C  120C               	bcf	12,4	;volatile
  5665                           
  5666                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  5667  052D  3002               	movlw	2
  5668  052E  0020               	movlb	0	; select bank0
  5669  052F  00A5               	movwf	??_LCD_Init+1
  5670  0530  3038               	movlw	56
  5671  0531  00A4               	movwf	??_LCD_Init
  5672  0532  30AD               	movlw	173
  5673  0533                     u2997:	
  5674  0533  0B89               	decfsz	9,f
  5675  0534  2D33               	goto	u2997
  5676  0535  0BA4               	decfsz	??_LCD_Init,f
  5677  0536  2D33               	goto	u2997
  5678  0537  0BA5               	decfsz	??_LCD_Init+1,f
  5679  0538  2D33               	goto	u2997
  5680                           
  5681                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  5682  0539  3003               	movlw	3
  5683  053A  0020               	movlb	0	; select bank0
  5684  053B  008D               	movwf	13	;volatile
  5685                           
  5686                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5687  053C  0022               	movlb	2	; select bank2
  5688  053D  160C               	bsf	12,4	;volatile
  5689  053E  3200               	nop2	;2 cycle nop
  5690  053F  3200               	nop2	;2 cycle nop
  5691  0540  3200               	nop2	;2 cycle nop
  5692  0541  3200               	nop2	;2 cycle nop
  5693  0542  0022               	movlb	2	; select bank2
  5694  0543  120C               	bcf	12,4	;volatile
  5695  0544  3200               	nop2	;2 cycle nop
  5696  0545  3200               	nop2	;2 cycle nop
  5697  0546  3200               	nop2	;2 cycle nop
  5698  0547  3200               	nop2	;2 cycle nop
  5699                           
  5700                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  5701  0548  3034               	movlw	52
  5702  0549  0020               	movlb	0	; select bank0
  5703  054A  00A4               	movwf	??_LCD_Init
  5704  054B  30F1               	movlw	241
  5705  054C                     u3007:	
  5706  054C  0B89               	decfsz	9,f
  5707  054D  2D4C               	goto	u3007
  5708  054E  0BA4               	decfsz	??_LCD_Init,f
  5709  054F  2D4C               	goto	u3007
  5710  0550  3200               	nop2
  5711                           
  5712                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5713  0551  0022               	movlb	2	; select bank2
  5714  0552  160C               	bsf	12,4	;volatile
  5715  0553  3200               	nop2	;2 cycle nop
  5716  0554  3200               	nop2	;2 cycle nop
  5717  0555  3200               	nop2	;2 cycle nop
  5718  0556  3200               	nop2	;2 cycle nop
  5719  0557  0022               	movlb	2	; select bank2
  5720  0558  120C               	bcf	12,4	;volatile
  5721  0559  3200               	nop2	;2 cycle nop
  5722  055A  3200               	nop2	;2 cycle nop
  5723  055B  3200               	nop2	;2 cycle nop
  5724  055C  3200               	nop2	;2 cycle nop
  5725                           
  5726                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5727  055D  3005               	movlw	5
  5728  055E  0020               	movlb	0	; select bank0
  5729  055F  00A4               	movwf	??_LCD_Init
  5730  0560  3026               	movlw	38
  5731  0561                     u3017:	
  5732  0561  0B89               	decfsz	9,f
  5733  0562  2D61               	goto	u3017
  5734  0563  0BA4               	decfsz	??_LCD_Init,f
  5735  0564  2D61               	goto	u3017
  5736  0565  0000               	nop
  5737                           
  5738                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5739  0566  0022               	movlb	2	; select bank2
  5740  0567  160C               	bsf	12,4	;volatile
  5741  0568  3200               	nop2	;2 cycle nop
  5742  0569  3200               	nop2	;2 cycle nop
  5743  056A  3200               	nop2	;2 cycle nop
  5744  056B  3200               	nop2	;2 cycle nop
  5745  056C  0022               	movlb	2	; select bank2
  5746  056D  120C               	bcf	12,4	;volatile
  5747  056E  3200               	nop2	;2 cycle nop
  5748  056F  3200               	nop2	;2 cycle nop
  5749  0570  3200               	nop2	;2 cycle nop
  5750  0571  3200               	nop2	;2 cycle nop
  5751                           
  5752                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5753  0572  3005               	movlw	5
  5754  0573  0020               	movlb	0	; select bank0
  5755  0574  00A4               	movwf	??_LCD_Init
  5756  0575  3026               	movlw	38
  5757  0576                     u3027:	
  5758  0576  0B89               	decfsz	9,f
  5759  0577  2D76               	goto	u3027
  5760  0578  0BA4               	decfsz	??_LCD_Init,f
  5761  0579  2D76               	goto	u3027
  5762  057A  0000               	nop
  5763                           
  5764                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  5765  057B  3002               	movlw	2
  5766  057C  0020               	movlb	0	; select bank0
  5767  057D  008D               	movwf	13	;volatile
  5768                           
  5769                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5770  057E  0022               	movlb	2	; select bank2
  5771  057F  160C               	bsf	12,4	;volatile
  5772  0580  3200               	nop2	;2 cycle nop
  5773  0581  3200               	nop2	;2 cycle nop
  5774  0582  3200               	nop2	;2 cycle nop
  5775  0583  3200               	nop2	;2 cycle nop
  5776  0584  0022               	movlb	2	; select bank2
  5777  0585  120C               	bcf	12,4	;volatile
  5778  0586  3200               	nop2	;2 cycle nop
  5779  0587  3200               	nop2	;2 cycle nop
  5780  0588  3200               	nop2	;2 cycle nop
  5781  0589  3200               	nop2	;2 cycle nop
  5782                           
  5783                           ;LCD.c: 44: LCD_WriteData(0x28);
  5784  058A  3028               	movlw	40
  5785  058B  3187  2748  3185   	fcall	_LCD_WriteData
  5786                           
  5787                           ;LCD.c: 45: LCD_WriteData(0x0c);
  5788  058E  300C               	movlw	12
  5789  058F  3187  2748  3185   	fcall	_LCD_WriteData
  5790                           
  5791                           ;LCD.c: 46: LCD_DisplayClear();
  5792  0592  318D  25A2  3185   	fcall	_LCD_DisplayClear
  5793                           
  5794                           ;LCD.c: 47: LCD_WriteData(0x06);
  5795  0595  3006               	movlw	6
  5796  0596  3187  2748         	fcall	_LCD_WriteData
  5797  0598  0008               	return
  5798  0599                     __end_of_LCD_Init:	
  5799                           
  5800                           	psect	text23
  5801  0DA2                     __ptext23:	
  5802 ;; *************** function _LCD_DisplayClear *****************
  5803 ;; Defined at:
  5804 ;;		line 73 in file "LCD.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;		None
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, status,2, status,0, pclath, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5818 ;;      Params:         0       0       0       0       0       0
  5819 ;;      Locals:         0       0       0       0       0       0
  5820 ;;      Temps:          0       1       0       0       0       0
  5821 ;;      Totals:         0       1       0       0       0       0
  5822 ;;Total ram usage:        1 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; Hardware stack levels required when called:    4
  5825 ;; This function calls:
  5826 ;;		_LCD_WriteData
  5827 ;; This function is called by:
  5828 ;;		_LCD_Init
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           
  5833                           ;psect for function _LCD_DisplayClear
  5834  0DA2                     _LCD_DisplayClear:	
  5835                           
  5836                           ;LCD.c: 75: LATA3 = 0;
  5837                           
  5838                           ;incstack = 0
  5839                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  5840  0DA2  0022               	movlb	2	; select bank2
  5841  0DA3  118C               	bcf	12,3	;volatile
  5842                           
  5843                           ;LCD.c: 76: LCD_WriteData(0x01);
  5844  0DA4  3001               	movlw	1
  5845  0DA5  3187  2748  318D   	fcall	_LCD_WriteData
  5846                           
  5847                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  5848  0DA8  3015               	movlw	21
  5849  0DA9  0020               	movlb	0	; select bank0
  5850  0DAA  00A3               	movwf	??_LCD_DisplayClear
  5851  0DAB  30C6               	movlw	198
  5852  0DAC                     u3037:	
  5853  0DAC  0B89               	decfsz	9,f
  5854  0DAD  2DAC               	goto	u3037
  5855  0DAE  0BA3               	decfsz	??_LCD_DisplayClear,f
  5856  0DAF  2DAC               	goto	u3037
  5857  0DB0  0000               	nop
  5858  0DB1  0008               	return
  5859  0DB2                     __end_of_LCD_DisplayClear:	
  5860                           
  5861                           	psect	text24
  5862  0E0F                     __ptext24:	
  5863 ;; *************** function _LCD_CursorPosition *****************
  5864 ;; Defined at:
  5865 ;;		line 95 in file "LCD.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  tx              1    wreg     unsigned char 
  5868 ;;  ty              1    3[BANK0 ] unsigned char 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  tx              1    5[BANK0 ] unsigned char 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2, status,0, pclath, cstack
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5880 ;;      Params:         0       1       0       0       0       0
  5881 ;;      Locals:         0       1       0       0       0       0
  5882 ;;      Temps:          0       1       0       0       0       0
  5883 ;;      Totals:         0       3       0       0       0       0
  5884 ;;Total ram usage:        3 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    4
  5887 ;; This function calls:
  5888 ;;		_LCD_WriteData
  5889 ;; This function is called by:
  5890 ;;		_main
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           
  5895                           ;psect for function _LCD_CursorPosition
  5896  0E0F                     _LCD_CursorPosition:	
  5897                           
  5898                           ;incstack = 0
  5899                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  5900                           ;LCD_CursorPosition@tx stored from wreg
  5901  0E0F  0020               	movlb	0	; select bank0
  5902  0E10  00A5               	movwf	LCD_CursorPosition@tx
  5903                           
  5904                           ;LCD.c: 97: LATA3 = 0;
  5905  0E11  0022               	movlb	2	; select bank2
  5906  0E12  118C               	bcf	12,3	;volatile
  5907                           
  5908                           ;LCD.c: 98: LCD_WriteData(0x80|tx|(0x40*ty));
  5909  0E13  0020               	movlb	0	; select bank0
  5910  0E14  0823               	movf	LCD_CursorPosition@ty,w
  5911  0E15  00A4               	movwf	??_LCD_CursorPosition
  5912  0E16  3005               	movlw	5
  5913  0E17                     u2655:	
  5914  0E17  35A4               	lslf	??_LCD_CursorPosition,f
  5915  0E18  3EFF               	addlw	-1
  5916  0E19  1D03               	skipz
  5917  0E1A  2E17               	goto	u2655
  5918  0E1B  3524               	lslf	??_LCD_CursorPosition,w
  5919  0E1C  0425               	iorwf	LCD_CursorPosition@tx,w
  5920  0E1D  3880               	iorlw	-128
  5921  0E1E  3187  2748  318E   	fcall	_LCD_WriteData
  5922                           
  5923                           ;LCD.c: 99: _delay((unsigned long)((40)*(32000000/4000000.0)));
  5924  0E21  306A               	movlw	106
  5925  0E22                     u3047:	
  5926  0E22  0B89               	decfsz	9,f
  5927  0E23  2E22               	goto	u3047
  5928  0E24  3200               	nop2
  5929  0E25  0008               	return
  5930  0E26                     __end_of_LCD_CursorPosition:	
  5931                           
  5932                           	psect	text25
  5933  0D92                     __ptext25:	
  5934 ;; *************** function _LCD_CursorHome *****************
  5935 ;; Defined at:
  5936 ;;		line 84 in file "LCD.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;		None
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;		None
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      void 
  5943 ;; Registers used:
  5944 ;;		wreg, status,2, status,0, pclath, cstack
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5950 ;;      Params:         0       0       0       0       0       0
  5951 ;;      Locals:         0       0       0       0       0       0
  5952 ;;      Temps:          0       1       0       0       0       0
  5953 ;;      Totals:         0       1       0       0       0       0
  5954 ;;Total ram usage:        1 bytes
  5955 ;; Hardware stack levels used:    1
  5956 ;; Hardware stack levels required when called:    4
  5957 ;; This function calls:
  5958 ;;		_LCD_WriteData
  5959 ;; This function is called by:
  5960 ;;		_main
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           
  5965                           ;psect for function _LCD_CursorHome
  5966  0D92                     _LCD_CursorHome:	
  5967                           
  5968                           ;LCD.c: 86: LATA3 = 0;
  5969                           
  5970                           ;incstack = 0
  5971                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  5972  0D92  0022               	movlb	2	; select bank2
  5973  0D93  118C               	bcf	12,3	;volatile
  5974                           
  5975                           ;LCD.c: 87: LCD_WriteData(0x02);
  5976  0D94  3002               	movlw	2
  5977  0D95  3187  2748  318D   	fcall	_LCD_WriteData
  5978                           
  5979                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  5980  0D98  3015               	movlw	21
  5981  0D99  0020               	movlb	0	; select bank0
  5982  0D9A  00A3               	movwf	??_LCD_CursorHome
  5983  0D9B  30C6               	movlw	198
  5984  0D9C                     u3057:	
  5985  0D9C  0B89               	decfsz	9,f
  5986  0D9D  2D9C               	goto	u3057
  5987  0D9E  0BA3               	decfsz	??_LCD_CursorHome,f
  5988  0D9F  2D9C               	goto	u3057
  5989  0DA0  0000               	nop
  5990  0DA1  0008               	return
  5991  0DA2                     __end_of_LCD_CursorHome:	
  5992                           
  5993                           	psect	text26
  5994  0748                     __ptext26:	
  5995 ;; *************** function _LCD_WriteData *****************
  5996 ;; Defined at:
  5997 ;;		line 15 in file "LCD.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  point           1    wreg     char 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;  point           1    2[BANK0 ] char 
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  1    wreg      void 
  6004 ;; Registers used:
  6005 ;;		wreg, status,2, status,0
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6011 ;;      Params:         0       0       0       0       0       0
  6012 ;;      Locals:         0       1       0       0       0       0
  6013 ;;      Temps:          0       2       0       0       0       0
  6014 ;;      Totals:         0       3       0       0       0       0
  6015 ;;Total ram usage:        3 bytes
  6016 ;; Hardware stack levels used:    1
  6017 ;; Hardware stack levels required when called:    3
  6018 ;; This function calls:
  6019 ;;		Nothing
  6020 ;; This function is called by:
  6021 ;;		_LCD_Init
  6022 ;;		_putch
  6023 ;;		_LCD_DisplayClear
  6024 ;;		_LCD_CursorHome
  6025 ;;		_LCD_CursorPosition
  6026 ;;		_LCD_Put
  6027 ;;		_LCD_CursorShift
  6028 ;;		_LCD_DispShift
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           
  6033                           ;psect for function _LCD_WriteData
  6034  0748                     _LCD_WriteData:	
  6035                           
  6036                           ;incstack = 0
  6037                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  6038                           ;LCD_WriteData@point stored from wreg
  6039  0748  0020               	movlb	0	; select bank0
  6040  0749  00A2               	movwf	LCD_WriteData@point
  6041                           
  6042                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  6043  074A  30D5               	movlw	213
  6044  074B                     u3067:	
  6045  074B  0B89               	decfsz	9,f
  6046  074C  2F4B               	goto	u3067
  6047  074D  0000               	nop
  6048                           
  6049                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  6050  074E  0020               	movlb	0	; select bank0
  6051  074F  0822               	movf	LCD_WriteData@point,w
  6052  0750  00A0               	movwf	??_LCD_WriteData
  6053  0751  3004               	movlw	4
  6054  0752                     u2405:	
  6055  0752  1003               	clrc
  6056  0753  1BA0               	btfsc	??_LCD_WriteData,7
  6057  0754  1403               	setc
  6058  0755  0CA0               	rrf	??_LCD_WriteData,f
  6059  0756  0B89               	decfsz	9,f
  6060  0757  2F52               	goto	u2405
  6061  0758  3003               	movlw	3
  6062  0759  0520               	andwf	??_LCD_WriteData,w
  6063  075A  00A1               	movwf	??_LCD_WriteData+1
  6064  075B  0E22               	swapf	LCD_WriteData@point,w
  6065  075C  390F               	andlw	15
  6066  075D  1989               	btfsc	9,3
  6067  075E  38F0               	iorlw	240
  6068  075F  390C               	andlw	12
  6069  0760  0709               	addwf	9,w
  6070  0761  0421               	iorwf	??_LCD_WriteData+1,w
  6071  0762  008D               	movwf	13	;volatile
  6072                           
  6073                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  6074  0763  0022               	movlb	2	; select bank2
  6075  0764  160C               	bsf	12,4	;volatile
  6076  0765  3200               	nop2	;2 cycle nop
  6077  0766  3200               	nop2	;2 cycle nop
  6078  0767  3200               	nop2	;2 cycle nop
  6079  0768  3200               	nop2	;2 cycle nop
  6080  0769  0022               	movlb	2	; select bank2
  6081  076A  120C               	bcf	12,4	;volatile
  6082  076B  3200               	nop2	;2 cycle nop
  6083  076C  3200               	nop2	;2 cycle nop
  6084  076D  3200               	nop2	;2 cycle nop
  6085  076E  3200               	nop2	;2 cycle nop
  6086                           
  6087                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  6088  076F  3003               	movlw	3
  6089  0770  0020               	movlb	0	; select bank0
  6090  0771  0522               	andwf	LCD_WriteData@point,w
  6091  0772  00A0               	movwf	??_LCD_WriteData
  6092  0773  0822               	movf	LCD_WriteData@point,w
  6093  0774  390C               	andlw	12
  6094  0775  0709               	addwf	9,w
  6095  0776  0420               	iorwf	??_LCD_WriteData,w
  6096  0777  008D               	movwf	13	;volatile
  6097                           
  6098                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  6099  0778  0022               	movlb	2	; select bank2
  6100  0779  160C               	bsf	12,4	;volatile
  6101  077A  3200               	nop2	;2 cycle nop
  6102  077B  3200               	nop2	;2 cycle nop
  6103  077C  3200               	nop2	;2 cycle nop
  6104  077D  3200               	nop2	;2 cycle nop
  6105  077E  0022               	movlb	2	; select bank2
  6106  077F  120C               	bcf	12,4	;volatile
  6107  0780  3200               	nop2	;2 cycle nop
  6108  0781  3200               	nop2	;2 cycle nop
  6109  0782  3200               	nop2	;2 cycle nop
  6110  0783  3200               	nop2	;2 cycle nop
  6111  0784  0008               	return
  6112  0785                     __end_of_LCD_WriteData:	
  6113                           
  6114                           	psect	text27
  6115  07C1                     __ptext27:	
  6116 ;; *************** function _DAC_WriteVoltage *****************
  6117 ;; Defined at:
  6118 ;;		line 27 in file "MCP4726.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  volue           2   16[BANK0 ] unsigned int 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      char 
  6125 ;; Registers used:
  6126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6132 ;;      Params:         0       2       0       0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0
  6134 ;;      Temps:          0       3       0       0       0       0
  6135 ;;      Totals:         0       5       0       0       0       0
  6136 ;;Total ram usage:        5 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    5
  6139 ;; This function calls:
  6140 ;;		_I2C_Transmit
  6141 ;; This function is called by:
  6142 ;;		_main
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           
  6147                           ;psect for function _DAC_WriteVoltage
  6148  07C1                     _DAC_WriteVoltage:	
  6149                           
  6150                           ;MCP4726.c: 29: VoltageReg.Command = (uint8_t)(0x0);
  6151                           
  6152                           ;incstack = 0
  6153                           ; Regs used in _DAC_WriteVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6154  07C1  303F               	movlw	-193
  6155  07C2  0021               	movlb	1	; select bank1
  6156  07C3  05BD               	andwf	_VoltageReg^(0+128),f
  6157                           
  6158                           ;MCP4726.c: 30: VoltageReg.PowerDown = ConfigReg.PowerDown;
  6159  07C4  0020               	movlb	0	; select bank0
  6160  07C5  0C6F               	rrf	_ConfigReg,w
  6161  07C6  3903               	andlw	3
  6162  07C7  00B2               	movwf	??_DAC_WriteVoltage
  6163  07C8  0EB2               	swapf	??_DAC_WriteVoltage,f
  6164  07C9  0021               	movlb	1	; select bank1
  6165  07CA  083D               	movf	_VoltageReg^(0+128),w
  6166  07CB  0020               	movlb	0	; select bank0
  6167  07CC  0632               	xorwf	??_DAC_WriteVoltage,w
  6168  07CD  39CF               	andlw	-49
  6169  07CE  0632               	xorwf	??_DAC_WriteVoltage,w
  6170  07CF  0021               	movlb	1	; select bank1
  6171  07D0  00BD               	movwf	_VoltageReg^(0+128)
  6172                           
  6173                           ;MCP4726.c: 31: VoltageReg.Voltage4bits = (uint8_t)((volue&0x0F00)>>8);
  6174  07D1  0020               	movlb	0	; select bank0
  6175  07D2  0831               	movf	DAC_WriteVoltage@volue+1,w
  6176  07D3  00B3               	movwf	??_DAC_WriteVoltage+1
  6177  07D4  0830               	movf	DAC_WriteVoltage@volue,w
  6178  07D5  00B2               	movwf	??_DAC_WriteVoltage
  6179  07D6  0833               	movf	??_DAC_WriteVoltage+1,w
  6180  07D7  00B2               	movwf	??_DAC_WriteVoltage
  6181  07D8  01B3               	clrf	??_DAC_WriteVoltage+1
  6182  07D9  300F               	movlw	15
  6183  07DA  0532               	andwf	??_DAC_WriteVoltage,w
  6184  07DB  00B4               	movwf	??_DAC_WriteVoltage+2
  6185  07DC  0021               	movlb	1	; select bank1
  6186  07DD  083D               	movf	_VoltageReg^(0+128),w
  6187  07DE  0020               	movlb	0	; select bank0
  6188  07DF  0634               	xorwf	??_DAC_WriteVoltage+2,w
  6189  07E0  39F0               	andlw	-16
  6190  07E1  0634               	xorwf	??_DAC_WriteVoltage+2,w
  6191  07E2  0021               	movlb	1	; select bank1
  6192  07E3  00BD               	movwf	_VoltageReg^(0+128)
  6193                           
  6194                           ;MCP4726.c: 32: VoltageReg.Voltage8bits = (uint8_t)(volue&0x00FF);
  6195  07E4  0020               	movlb	0	; select bank0
  6196  07E5  0830               	movf	DAC_WriteVoltage@volue,w
  6197  07E6  00B2               	movwf	??_DAC_WriteVoltage
  6198  07E7  0832               	movf	??_DAC_WriteVoltage,w
  6199  07E8  0021               	movlb	1	; select bank1
  6200  07E9  00BE               	movwf	(_VoltageReg^(0+128)+1)
  6201                           
  6202                           ;MCP4726.c: 34: return I2C_Transmit(I2C2_MODULE,0x60,VoltageReg.Voltage_Data,2);
  6203                           ;	Return value of _DAC_WriteVoltage is never used
  6204  07EA  3060               	movlw	96
  6205  07EB  0020               	movlb	0	; select bank0
  6206  07EC  00B2               	movwf	??_DAC_WriteVoltage
  6207  07ED  0832               	movf	??_DAC_WriteVoltage,w
  6208  07EE  00A8               	movwf	I2C_Transmit@address
  6209  07EF  30BD               	movlw	(low (_VoltageReg| 0))& (0+255)
  6210  07F0  00B3               	movwf	??_DAC_WriteVoltage+1
  6211  07F1  0833               	movf	??_DAC_WriteVoltage+1,w
  6212  07F2  00A9               	movwf	I2C_Transmit@pData
  6213  07F3  3002               	movlw	2
  6214  07F4  00B4               	movwf	??_DAC_WriteVoltage+2
  6215  07F5  0834               	movf	??_DAC_WriteVoltage+2,w
  6216  07F6  00AA               	movwf	I2C_Transmit@size
  6217  07F7  3001               	movlw	1
  6218  07F8  318E  2659         	fcall	_I2C_Transmit
  6219  07FA  0008               	return
  6220  07FB                     __end_of_DAC_WriteVoltage:	
  6221                           
  6222                           	psect	text28
  6223  0EE6                     __ptext28:	
  6224 ;; *************** function _DAC_Initialize *****************
  6225 ;; Defined at:
  6226 ;;		line 14 in file "MCP4726.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      void 
  6233 ;; Registers used:
  6234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6240 ;;      Params:         0       0       0       0       0       0
  6241 ;;      Locals:         0       0       0       0       0       0
  6242 ;;      Temps:          0       2       0       0       0       0
  6243 ;;      Totals:         0       2       0       0       0       0
  6244 ;;Total ram usage:        2 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:    6
  6247 ;; This function calls:
  6248 ;;		_I2C_Init
  6249 ;;		_I2C_Transmit
  6250 ;; This function is called by:
  6251 ;;		_main
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           
  6256                           ;psect for function _DAC_Initialize
  6257  0EE6                     _DAC_Initialize:	
  6258                           
  6259                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  6260                           
  6261                           ;incstack = 0
  6262                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6263  0EE6  0020               	movlb	0	; select bank0
  6264  0EE7  01A5               	clrf	I2C_Init@address
  6265  0EE8  01A6               	clrf	I2C_Init@mode
  6266  0EE9  01A7               	clrf	I2C_Init@Speed
  6267  0EEA  3001               	movlw	1
  6268  0EEB  318E  2626  318E   	fcall	_I2C_Init
  6269                           
  6270                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  6271  0EEE  0020               	movlb	0	; select bank0
  6272  0EEF  086F               	movf	_ConfigReg,w
  6273  0EF0  391F               	andlw	-225
  6274  0EF1  3880               	iorlw	128
  6275  0EF2  00EF               	movwf	_ConfigReg
  6276                           
  6277                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  6278  0EF3  106F               	bcf	_ConfigReg,0
  6279                           
  6280                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  6281  0EF4  30F9               	movlw	-7
  6282  0EF5  05EF               	andwf	_ConfigReg,f
  6283                           
  6284                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  6285  0EF6  30E7               	movlw	-25
  6286  0EF7  05EF               	andwf	_ConfigReg,f
  6287                           
  6288                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  6289  0EF8  3060               	movlw	96
  6290  0EF9  00B0               	movwf	??_DAC_Initialize
  6291  0EFA  0830               	movf	??_DAC_Initialize,w
  6292  0EFB  00A8               	movwf	I2C_Transmit@address
  6293  0EFC  306F               	movlw	(low (_ConfigReg| 0))& (0+255)
  6294  0EFD  00B1               	movwf	??_DAC_Initialize+1
  6295  0EFE  0831               	movf	??_DAC_Initialize+1,w
  6296  0EFF  00A9               	movwf	I2C_Transmit@pData
  6297  0F00  01AA               	clrf	I2C_Transmit@size
  6298  0F01  0AAA               	incf	I2C_Transmit@size,f
  6299  0F02  3001               	movlw	1
  6300  0F03  318E  2659         	fcall	_I2C_Transmit
  6301  0F05  0008               	return
  6302  0F06                     __end_of_DAC_Initialize:	
  6303                           
  6304                           	psect	text29
  6305  0E59                     __ptext29:	
  6306 ;; *************** function _I2C_Transmit *****************
  6307 ;; Defined at:
  6308 ;;		line 23 in file "I2C_Common.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  I2Cx            1    wreg     enum E3267
  6311 ;;  address         1    8[BANK0 ] unsigned char 
  6312 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  6313 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6314 ;;  size            1   10[BANK0 ] unsigned char 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  I2Cx            1   14[BANK0 ] enum E3267
  6317 ;;  result          1   15[BANK0 ] char 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  1    wreg      char 
  6320 ;; Registers used:
  6321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6327 ;;      Params:         0       3       0       0       0       0
  6328 ;;      Locals:         0       2       0       0       0       0
  6329 ;;      Temps:          0       3       0       0       0       0
  6330 ;;      Totals:         0       8       0       0       0       0
  6331 ;;Total ram usage:        8 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; Hardware stack levels required when called:    4
  6334 ;; This function calls:
  6335 ;;		_I2C2_Transmit
  6336 ;; This function is called by:
  6337 ;;		_DAC_Initialize
  6338 ;;		_DAC_WriteVoltage
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           
  6343                           ;psect for function _I2C_Transmit
  6344  0E59                     _I2C_Transmit:	
  6345                           
  6346                           ;incstack = 0
  6347                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6348                           ;I2C_Transmit@I2Cx stored from wreg
  6349  0E59  0020               	movlb	0	; select bank0
  6350  0E5A  00AE               	movwf	I2C_Transmit@I2Cx
  6351                           
  6352                           ;I2C_Common.c: 25: int8_t result;
  6353                           ;I2C_Common.c: 27: switch(I2Cx)
  6354  0E5B  2E6D               	goto	l3009
  6355  0E5C                     l3005:	
  6356                           ;I2C_Common.c: 28: {
  6357                           ;I2C_Common.c: 33: case I2C2_MODULE:
  6358                           
  6359                           
  6360                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  6361  0E5C  0829               	movf	I2C_Transmit@pData,w
  6362  0E5D  00AB               	movwf	??_I2C_Transmit
  6363  0E5E  082B               	movf	??_I2C_Transmit,w
  6364  0E5F  00A0               	movwf	I2C2_Transmit@pData
  6365  0E60  082A               	movf	I2C_Transmit@size,w
  6366  0E61  00AC               	movwf	??_I2C_Transmit+1
  6367  0E62  082C               	movf	??_I2C_Transmit+1,w
  6368  0E63  00A1               	movwf	I2C2_Transmit@size
  6369  0E64  0828               	movf	I2C_Transmit@address,w
  6370  0E65  3184  2492  318E   	fcall	_I2C2_Transmit
  6371  0E68  0020               	movlb	0	; select bank0
  6372  0E69  00AD               	movwf	??_I2C_Transmit+2
  6373  0E6A  082D               	movf	??_I2C_Transmit+2,w
  6374  0E6B  00AF               	movwf	I2C_Transmit@result
  6375                           
  6376                           ;I2C_Common.c: 36: }
  6377                           
  6378                           ;I2C_Common.c: 35: break;
  6379  0E6C  2E72               	goto	l3011
  6380  0E6D                     l3009:	
  6381  0E6D  082E               	movf	I2C_Transmit@I2Cx,w
  6382                           
  6383                           ; Switch size 1, requested type "space"
  6384                           ; Number of cases is 1, Range of values is 1 to 1
  6385                           ; switch strategies available:
  6386                           ; Name         Instructions Cycles
  6387                           ; simple_byte            4     3 (average)
  6388                           ; direct_byte           11     9 (fixed)
  6389                           ; jumptable            263     9 (fixed)
  6390                           ;	Chosen strategy is simple_byte
  6391  0E6E  3A01               	xorlw	1	; case 1
  6392  0E6F  1903               	skipnz
  6393  0E70  2E5C               	goto	l3005
  6394  0E71  2E72               	goto	l3011
  6395  0E72                     l3011:	
  6396                           
  6397                           ;I2C_Common.c: 37: return result;
  6398  0E72  082F               	movf	I2C_Transmit@result,w
  6399  0E73  0008               	return
  6400  0E74                     __end_of_I2C_Transmit:	
  6401                           
  6402                           	psect	text30
  6403  0492                     __ptext30:	
  6404 ;; *************** function _I2C2_Transmit *****************
  6405 ;; Defined at:
  6406 ;;		line 52 in file "I2C2.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  address         1    wreg     unsigned char 
  6409 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  6410 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6411 ;;  size            1    1[BANK0 ] unsigned char 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  address         1    4[BANK0 ] unsigned char 
  6414 ;;  i               1    6[BANK0 ] unsigned char 
  6415 ;;  i               1    5[BANK0 ] unsigned char 
  6416 ;;  result          1    7[BANK0 ] char 
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      char 
  6419 ;; Registers used:
  6420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6426 ;;      Params:         0       2       0       0       0       0
  6427 ;;      Locals:         0       4       0       0       0       0
  6428 ;;      Temps:          0       2       0       0       0       0
  6429 ;;      Totals:         0       8       0       0       0       0
  6430 ;;Total ram usage:        8 bytes
  6431 ;; Hardware stack levels used:    1
  6432 ;; Hardware stack levels required when called:    3
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_I2C_Transmit
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           
  6441                           ;psect for function _I2C2_Transmit
  6442  0492                     _I2C2_Transmit:	
  6443                           
  6444                           ;incstack = 0
  6445                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  6446                           ;I2C2_Transmit@address stored from wreg
  6447  0492  0020               	movlb	0	; select bank0
  6448  0493  00A4               	movwf	I2C2_Transmit@address
  6449                           
  6450                           ;I2C2.c: 54: int8_t result = 0;
  6451  0494  01A7               	clrf	I2C2_Transmit@result
  6452                           
  6453                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  6454  0495  2D1E               	goto	l2925
  6455  0496                     l2881:	
  6456                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6457                           
  6458                           ;I2C2.c: 57: {
  6459                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  6460                           
  6461  0496  3005               	movlw	5
  6462  0497  0024               	movlb	4	; select bank4
  6463  0498  051C               	andwf	28,w	;volatile
  6464  0499  0020               	movlb	0	; select bank0
  6465  049A  00A2               	movwf	??_I2C2_Transmit
  6466  049B  0024               	movlb	4	; select bank4
  6467  049C  081E               	movf	30,w	;volatile
  6468  049D  391F               	andlw	31
  6469  049E  0020               	movlb	0	; select bank0
  6470  049F  0422               	iorwf	??_I2C2_Transmit,w
  6471  04A0  1D03               	btfss	3,2
  6472  04A1  2C96               	goto	l2881
  6473                           
  6474                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  6475  04A2  0024               	movlb	4	; select bank4
  6476  04A3  141E               	bsf	30,0	;volatile
  6477  04A4                     l2883:	
  6478                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6479                           
  6480  04A4  3005               	movlw	5
  6481  04A5  0024               	movlb	4	; select bank4
  6482  04A6  051C               	andwf	28,w	;volatile
  6483  04A7  0020               	movlb	0	; select bank0
  6484  04A8  00A2               	movwf	??_I2C2_Transmit
  6485  04A9  0024               	movlb	4	; select bank4
  6486  04AA  081E               	movf	30,w	;volatile
  6487  04AB  391F               	andlw	31
  6488  04AC  0020               	movlb	0	; select bank0
  6489  04AD  0422               	iorwf	??_I2C2_Transmit,w
  6490  04AE  1D03               	btfss	3,2
  6491  04AF  2CA4               	goto	l2883
  6492                           
  6493                           ;I2C2.c: 63: SSP2BUF = address << 1;
  6494  04B0  3524               	lslf	I2C2_Transmit@address,w
  6495  04B1  0024               	movlb	4	; select bank4
  6496  04B2  0099               	movwf	25	;volatile
  6497  04B3                     l91:	
  6498                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  6499                           
  6500  04B3  191C               	btfsc	28,2	;volatile
  6501  04B4  2CB3               	goto	l91
  6502                           
  6503                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  6504  04B5  3000               	movlw	0
  6505  04B6  1B1E               	btfsc	30,6	;volatile
  6506  04B7  3001               	movlw	1
  6507  04B8  0020               	movlb	0	; select bank0
  6508  04B9  00A7               	movwf	I2C2_Transmit@result
  6509                           
  6510                           ;I2C2.c: 67: if (!result)
  6511  04BA  0827               	movf	I2C2_Transmit@result,w
  6512  04BB  1D03               	btfss	3,2
  6513  04BC  2CEA               	goto	l2907
  6514                           
  6515                           ;I2C2.c: 68: {
  6516                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  6517  04BD  01A5               	clrf	I2C2_Transmit@i
  6518  04BE  2CC3               	goto	l2905
  6519  04BF                     l2903:	
  6520                           ;I2C2.c: 79: break;
  6521                           
  6522  04BF  3001               	movlw	1
  6523  04C0  00A2               	movwf	??_I2C2_Transmit
  6524  04C1  0822               	movf	??_I2C2_Transmit,w
  6525  04C2  07A5               	addwf	I2C2_Transmit@i,f
  6526  04C3                     l2905:	
  6527  04C3  0821               	movf	I2C2_Transmit@size,w
  6528  04C4  0225               	subwf	I2C2_Transmit@i,w
  6529  04C5  1803               	btfsc	3,0
  6530  04C6  2CEA               	goto	l2907
  6531  04C7                     l2893:	
  6532                           ;I2C2.c: 70: {
  6533                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6534                           
  6535  04C7  3005               	movlw	5
  6536  04C8  0024               	movlb	4	; select bank4
  6537  04C9  051C               	andwf	28,w	;volatile
  6538  04CA  0020               	movlb	0	; select bank0
  6539  04CB  00A2               	movwf	??_I2C2_Transmit
  6540  04CC  0024               	movlb	4	; select bank4
  6541  04CD  081E               	movf	30,w	;volatile
  6542  04CE  391F               	andlw	31
  6543  04CF  0020               	movlb	0	; select bank0
  6544  04D0  0422               	iorwf	??_I2C2_Transmit,w
  6545  04D1  1D03               	btfss	3,2
  6546  04D2  2CC7               	goto	l2893
  6547                           
  6548                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  6549  04D3  0825               	movf	I2C2_Transmit@i,w
  6550  04D4  0720               	addwf	I2C2_Transmit@pData,w
  6551  04D5  00A2               	movwf	??_I2C2_Transmit
  6552  04D6  0822               	movf	??_I2C2_Transmit,w
  6553  04D7  0086               	movwf	6
  6554  04D8  0187               	clrf	7
  6555  04D9  0801               	movf	1,w
  6556  04DA  0024               	movlb	4	; select bank4
  6557  04DB  0099               	movwf	25	;volatile
  6558  04DC                     l100:	
  6559                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  6560                           
  6561  04DC  191C               	btfsc	28,2	;volatile
  6562  04DD  2CDC               	goto	l100
  6563                           
  6564                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  6565  04DE  3000               	movlw	0
  6566  04DF  1B1E               	btfsc	30,6	;volatile
  6567  04E0  3001               	movlw	1
  6568  04E1  0020               	movlb	0	; select bank0
  6569  04E2  00A7               	movwf	I2C2_Transmit@result
  6570                           
  6571                           ;I2C2.c: 76: if (result)
  6572  04E3  0827               	movf	I2C2_Transmit@result,w
  6573  04E4  1903               	btfsc	3,2
  6574  04E5  2CBF               	goto	l2903
  6575                           
  6576                           ;I2C2.c: 77: {
  6577                           ;I2C2.c: 78: result = 2;
  6578  04E6  3002               	movlw	2
  6579  04E7  00A2               	movwf	??_I2C2_Transmit
  6580  04E8  0822               	movf	??_I2C2_Transmit,w
  6581  04E9  00A7               	movwf	I2C2_Transmit@result
  6582  04EA                     l2907:	
  6583                           ;I2C2.c: 80: }
  6584                           ;I2C2.c: 81: }
  6585                           ;I2C2.c: 82: }
  6586                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6587                           
  6588  04EA  3005               	movlw	5
  6589  04EB  0024               	movlb	4	; select bank4
  6590  04EC  051C               	andwf	28,w	;volatile
  6591  04ED  0020               	movlb	0	; select bank0
  6592  04EE  00A2               	movwf	??_I2C2_Transmit
  6593  04EF  0024               	movlb	4	; select bank4
  6594  04F0  081E               	movf	30,w	;volatile
  6595  04F1  391F               	andlw	31
  6596  04F2  0020               	movlb	0	; select bank0
  6597  04F3  0422               	iorwf	??_I2C2_Transmit,w
  6598  04F4  1D03               	btfss	3,2
  6599  04F5  2CEA               	goto	l2907
  6600                           
  6601                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  6602  04F6  0024               	movlb	4	; select bank4
  6603  04F7  151E               	bsf	30,2	;volatile
  6604                           
  6605                           ;I2C2.c: 86: break;
  6606  04F8  2D27               	goto	l2927
  6607  04F9                     l109:	
  6608                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  6609                           
  6610                           
  6611                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  6612  04F9  0024               	movlb	4	; select bank4
  6613  04FA  1D9C               	btfss	28,3	;volatile
  6614  04FB  1E1C               	btfss	28,4	;volatile
  6615  04FC  2D1B               	goto	l2921
  6616                           
  6617                           ;I2C2.c: 90: {
  6618                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  6619  04FD  0020               	movlb	0	; select bank0
  6620  04FE  01A6               	clrf	I2C2_Transmit@i_172
  6621  04FF                     l2917:	
  6622  04FF  0821               	movf	I2C2_Transmit@size,w
  6623  0500  0226               	subwf	I2C2_Transmit@i_172,w
  6624  0501  1803               	btfsc	3,0
  6625  0502  2D16               	goto	l2919
  6626                           
  6627                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  6628  0503  0826               	movf	I2C2_Transmit@i_172,w
  6629  0504  0720               	addwf	I2C2_Transmit@pData,w
  6630  0505  00A2               	movwf	??_I2C2_Transmit
  6631  0506  0822               	movf	??_I2C2_Transmit,w
  6632  0507  0086               	movwf	6
  6633  0508  0187               	clrf	7
  6634  0509  0801               	movf	1,w
  6635  050A  00A3               	movwf	??_I2C2_Transmit+1
  6636  050B  0826               	movf	I2C2_Transmit@i_172,w
  6637  050C  3EAA               	addlw	(low (_I2C2_Config| 0))& (0+255)
  6638  050D  0086               	movwf	6
  6639  050E  0187               	clrf	7
  6640  050F  0823               	movf	??_I2C2_Transmit+1,w
  6641  0510  0081               	movwf	1
  6642  0511  3001               	movlw	1
  6643  0512  00A2               	movwf	??_I2C2_Transmit
  6644  0513  0822               	movf	??_I2C2_Transmit,w
  6645  0514  07A6               	addwf	I2C2_Transmit@i_172,f
  6646  0515  2CFF               	goto	l2917
  6647  0516                     l2919:	
  6648                           
  6649                           ;I2C2.c: 93: result = size;
  6650  0516  0821               	movf	I2C2_Transmit@size,w
  6651  0517  00A2               	movwf	??_I2C2_Transmit
  6652  0518  0822               	movf	??_I2C2_Transmit,w
  6653  0519  00A7               	movwf	I2C2_Transmit@result
  6654                           
  6655                           ;I2C2.c: 94: }
  6656  051A  2D27               	goto	l2927
  6657  051B                     l2921:	
  6658                           
  6659                           ;I2C2.c: 95: else
  6660                           ;I2C2.c: 96: result = 0;
  6661  051B  0020               	movlb	0	; select bank0
  6662  051C  01A7               	clrf	I2C2_Transmit@result
  6663                           
  6664                           ;I2C2.c: 98: }
  6665                           
  6666                           ;I2C2.c: 97: break;
  6667  051D  2D27               	goto	l2927
  6668  051E                     l2925:	
  6669  051E  0021               	movlb	1	; select bank1
  6670  051F  083C               	movf	(_I2C2_Config^(0+128)+18),w
  6671                           
  6672                           ; Switch size 1, requested type "space"
  6673                           ; Number of cases is 2, Range of values is 0 to 1
  6674                           ; switch strategies available:
  6675                           ; Name         Instructions Cycles
  6676                           ; simple_byte            7     4 (average)
  6677                           ; direct_byte           10     6 (fixed)
  6678                           ; jumptable            260     6 (fixed)
  6679                           ;	Chosen strategy is simple_byte
  6680  0520  3A00               	xorlw	0	; case 0
  6681  0521  1903               	skipnz
  6682  0522  2C96               	goto	l2881
  6683  0523  3A01               	xorlw	1	; case 1
  6684  0524  1903               	skipnz
  6685  0525  2CF9               	goto	l109
  6686  0526  2D27               	goto	l2927
  6687  0527                     l2927:	
  6688                           
  6689                           ;I2C2.c: 100: return result;
  6690  0527  0020               	movlb	0	; select bank0
  6691  0528  0827               	movf	I2C2_Transmit@result,w
  6692  0529  0008               	return
  6693  052A                     __end_of_I2C2_Transmit:	
  6694                           
  6695                           	psect	text31
  6696  0E26                     __ptext31:	
  6697 ;; *************** function _I2C_Init *****************
  6698 ;; Defined at:
  6699 ;;		line 6 in file "I2C_Common.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  I2Cx            1    wreg     enum E3267
  6702 ;;  address         1    5[BANK0 ] unsigned char 
  6703 ;;  mode            1    6[BANK0 ] enum E3258
  6704 ;;  Speed           1    7[BANK0 ] enum E3262
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  I2Cx            1   10[BANK0 ] enum E3267
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  1    wreg      void 
  6709 ;; Registers used:
  6710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6716 ;;      Params:         0       3       0       0       0       0
  6717 ;;      Locals:         0       1       0       0       0       0
  6718 ;;      Temps:          0       2       0       0       0       0
  6719 ;;      Totals:         0       6       0       0       0       0
  6720 ;;Total ram usage:        6 bytes
  6721 ;; Hardware stack levels used:    1
  6722 ;; Hardware stack levels required when called:    5
  6723 ;; This function calls:
  6724 ;;		_I2C2_Setting
  6725 ;; This function is called by:
  6726 ;;		_DAC_Initialize
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           
  6731                           ;psect for function _I2C_Init
  6732  0E26                     _I2C_Init:	
  6733                           
  6734                           ;incstack = 0
  6735                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6736                           ;I2C_Init@I2Cx stored from wreg
  6737  0E26  0020               	movlb	0	; select bank0
  6738  0E27  00AA               	movwf	I2C_Init@I2Cx
  6739                           
  6740                           ;I2C_Common.c: 8: switch(I2Cx)
  6741  0E28  2E36               	goto	l3001
  6742  0E29                     l2997:	
  6743                           ;I2C_Common.c: 9: {
  6744                           ;I2C_Common.c: 14: case I2C2_MODULE:
  6745                           
  6746                           
  6747                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  6748  0E29  0826               	movf	I2C_Init@mode,w
  6749  0E2A  00A8               	movwf	??_I2C_Init
  6750  0E2B  0828               	movf	??_I2C_Init,w
  6751  0E2C  00A1               	movwf	I2C2_Setting@mode
  6752  0E2D  0827               	movf	I2C_Init@Speed,w
  6753  0E2E  00A9               	movwf	??_I2C_Init+1
  6754  0E2F  0829               	movf	??_I2C_Init+1,w
  6755  0E30  00A2               	movwf	I2C2_Setting@Speed
  6756  0E31  0825               	movf	I2C_Init@address,w
  6757  0E32  3186  2684  318E   	fcall	_I2C2_Setting
  6758                           
  6759                           ;I2C_Common.c: 17: }
  6760                           
  6761                           ;I2C_Common.c: 16: break;
  6762  0E35  2E3C               	goto	l191
  6763  0E36                     l3001:	
  6764  0E36  0020               	movlb	0	; select bank0
  6765  0E37  082A               	movf	I2C_Init@I2Cx,w
  6766                           
  6767                           ; Switch size 1, requested type "space"
  6768                           ; Number of cases is 1, Range of values is 1 to 1
  6769                           ; switch strategies available:
  6770                           ; Name         Instructions Cycles
  6771                           ; simple_byte            4     3 (average)
  6772                           ; direct_byte           11     9 (fixed)
  6773                           ; jumptable            263     9 (fixed)
  6774                           ;	Chosen strategy is simple_byte
  6775  0E38  3A01               	xorlw	1	; case 1
  6776  0E39  1903               	skipnz
  6777  0E3A  2E29               	goto	l2997
  6778  0E3B  2E3C               	goto	l191
  6779  0E3C                     l191:	
  6780                           
  6781                           ;I2C_Common.c: 19: PEIE = 1;
  6782  0E3C  170B               	bsf	11,6	;volatile
  6783                           
  6784                           ;I2C_Common.c: 20: GIE = 1;
  6785  0E3D  178B               	bsf	11,7	;volatile
  6786  0E3E  0008               	return
  6787  0E3F                     __end_of_I2C_Init:	
  6788                           
  6789                           	psect	text32
  6790  0684                     __ptext32:	
  6791 ;; *************** function _I2C2_Setting *****************
  6792 ;; Defined at:
  6793 ;;		line 15 in file "I2C2.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  address         1    wreg     unsigned char 
  6796 ;;  mode            1    1[BANK0 ] enum E3258
  6797 ;;  Speed           1    2[BANK0 ] enum E3262
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  address         1    4[BANK0 ] unsigned char 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6809 ;;      Params:         0       2       0       0       0       0
  6810 ;;      Locals:         0       1       0       0       0       0
  6811 ;;      Temps:          0       1       0       0       0       0
  6812 ;;      Totals:         0       4       0       0       0       0
  6813 ;;Total ram usage:        4 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:    4
  6816 ;; This function calls:
  6817 ;;		_I2C2_PinInit
  6818 ;; This function is called by:
  6819 ;;		_I2C_Init
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           
  6824                           ;psect for function _I2C2_Setting
  6825  0684                     _I2C2_Setting:	
  6826                           
  6827                           ;incstack = 0
  6828                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6829                           ;I2C2_Setting@address stored from wreg
  6830  0684  0020               	movlb	0	; select bank0
  6831  0685  00A4               	movwf	I2C2_Setting@address
  6832                           
  6833                           ;I2C2.c: 17: I2C2_PinInit();
  6834  0686  318D  2559  3186   	fcall	_I2C2_PinInit
  6835                           
  6836                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  6837  0689  0020               	movlb	0	; select bank0
  6838  068A  0821               	movf	I2C2_Setting@mode,w
  6839  068B  00A3               	movwf	??_I2C2_Setting
  6840  068C  0823               	movf	??_I2C2_Setting,w
  6841  068D  0021               	movlb	1	; select bank1
  6842  068E  00BC               	movwf	(_I2C2_Config^(0+128)+18)
  6843                           
  6844                           ;I2C2.c: 20: switch(mode)
  6845  068F  2EB8               	goto	l2877
  6846  0690                     l74:	
  6847                           ;I2C2.c: 21: {
  6848                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  6849                           
  6850                           
  6851                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  6852  0690  0024               	movlb	4	; select bank4
  6853  0691  159D               	bsf	29,3	;volatile
  6854                           
  6855                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6856  0692  0020               	movlb	0	; select bank0
  6857  0693  0822               	movf	I2C2_Setting@Speed,w
  6858  0694  1D03               	btfss	3,2
  6859  0695  2E9A               	goto	l2855
  6860                           
  6861                           ;I2C2.c: 25: {
  6862                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  6863  0696  0024               	movlb	4	; select bank4
  6864  0697  179C               	bsf	28,7	;volatile
  6865                           
  6866                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  6867  0698  304F               	movlw	79
  6868  0699  2EA4               	goto	L5
  6869  069A                     l2855:	
  6870                           ;I2C2.c: 28: }
  6871                           
  6872                           
  6873                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6874  069A  0020               	movlb	0	; select bank0
  6875  069B  0322               	decf	I2C2_Setting@Speed,w
  6876  069C  1D03               	btfss	3,2
  6877  069D  2EA5               	goto	l2861
  6878                           
  6879                           ;I2C2.c: 30: {
  6880                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  6881  069E  307F               	movlw	127
  6882  069F  00A3               	movwf	??_I2C2_Setting
  6883  06A0  0823               	movf	??_I2C2_Setting,w
  6884  06A1  0024               	movlb	4	; select bank4
  6885  06A2  059C               	andwf	28,f	;volatile
  6886                           
  6887                           ;I2C2.c: 32: SSP2ADD = 0x13;
  6888  06A3  3013               	movlw	19
  6889  06A4                     L5:	
  6890  06A4  009A               	movwf	26	;volatile
  6891  06A5                     l2861:	
  6892                           
  6893                           ;I2C2.c: 33: }
  6894                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  6895  06A5  0024               	movlb	4	; select bank4
  6896  06A6  2EB6               	goto	l2873
  6897  06A7                     l2863:	
  6898                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  6899                           
  6900                           ;I2C2.c: 35: break;
  6901                           
  6902                           
  6903                           ;I2C2.c: 38: SSP2STAT = 0x00;
  6904  06A7  0024               	movlb	4	; select bank4
  6905  06A8  019C               	clrf	28	;volatile
  6906                           
  6907                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  6908  06A9  3006               	movlw	6
  6909  06AA  0020               	movlb	0	; select bank0
  6910  06AB  00A3               	movwf	??_I2C2_Setting
  6911  06AC  0823               	movf	??_I2C2_Setting,w
  6912  06AD  0024               	movlb	4	; select bank4
  6913  06AE  049D               	iorwf	29,f	;volatile
  6914                           
  6915                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  6916  06AF  141E               	bsf	30,0	;volatile
  6917                           
  6918                           ;I2C2.c: 41: SSP2ADD = address << 1;
  6919  06B0  0020               	movlb	0	; select bank0
  6920  06B1  3524               	lslf	I2C2_Setting@address,w
  6921  06B2  0024               	movlb	4	; select bank4
  6922  06B3  009A               	movwf	26	;volatile
  6923                           
  6924                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  6925  06B4  30FE               	movlw	254
  6926  06B5  009B               	movwf	27	;volatile
  6927  06B6                     l2873:	
  6928                           
  6929                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  6930  06B6  169D               	bsf	29,5	;volatile
  6931                           
  6932                           ;I2C2.c: 45: }
  6933                           
  6934                           ;I2C2.c: 44: break;
  6935  06B7  2EC1               	goto	l78
  6936  06B8                     l2877:	
  6937  06B8  0020               	movlb	0	; select bank0
  6938  06B9  0821               	movf	I2C2_Setting@mode,w
  6939                           
  6940                           ; Switch size 1, requested type "space"
  6941                           ; Number of cases is 2, Range of values is 0 to 1
  6942                           ; switch strategies available:
  6943                           ; Name         Instructions Cycles
  6944                           ; simple_byte            7     4 (average)
  6945                           ; direct_byte           10     6 (fixed)
  6946                           ; jumptable            260     6 (fixed)
  6947                           ;	Chosen strategy is simple_byte
  6948  06BA  3A00               	xorlw	0	; case 0
  6949  06BB  1903               	skipnz
  6950  06BC  2E90               	goto	l74
  6951  06BD  3A01               	xorlw	1	; case 1
  6952  06BE  1903               	skipnz
  6953  06BF  2EA7               	goto	l2863
  6954  06C0  2EC1               	goto	l78
  6955  06C1                     l78:	
  6956                           
  6957                           ;I2C2.c: 46: SSP2IE = 1;
  6958  06C1  0021               	movlb	1	; select bank1
  6959  06C2  1414               	bsf	20,0	;volatile
  6960                           
  6961                           ;I2C2.c: 47: BCL2IE = 1;
  6962  06C3  1494               	bsf	20,1	;volatile
  6963                           
  6964                           ;I2C2.c: 48: SSP2IF = 0;
  6965  06C4  0020               	movlb	0	; select bank0
  6966  06C5  1014               	bcf	20,0	;volatile
  6967                           
  6968                           ;I2C2.c: 49: BCL2IF = 0;
  6969  06C6  1094               	bcf	20,1	;volatile
  6970  06C7  0008               	return
  6971  06C8                     __end_of_I2C2_Setting:	
  6972                           
  6973                           	psect	text33
  6974  0D59                     __ptext33:	
  6975 ;; *************** function _I2C2_PinInit *****************
  6976 ;; Defined at:
  6977 ;;		line 9 in file "I2C2.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6991 ;;      Params:         0       0       0       0       0       0
  6992 ;;      Locals:         0       0       0       0       0       0
  6993 ;;      Temps:          0       1       0       0       0       0
  6994 ;;      Totals:         0       1       0       0       0       0
  6995 ;;Total ram usage:        1 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    3
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_I2C2_Setting
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           
  7006                           ;psect for function _I2C2_PinInit
  7007  0D59                     _I2C2_PinInit:	
  7008                           
  7009                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  7010                           
  7011                           ;incstack = 0
  7012                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  7013  0D59  3024               	movlw	36
  7014  0D5A  0020               	movlb	0	; select bank0
  7015  0D5B  00A0               	movwf	??_I2C2_PinInit
  7016  0D5C  0820               	movf	??_I2C2_PinInit,w
  7017  0D5D  0021               	movlb	1	; select bank1
  7018  0D5E  048D               	iorwf	13,f	;volatile
  7019                           
  7020                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  7021  0D5F  30DB               	movlw	219
  7022  0D60  0020               	movlb	0	; select bank0
  7023  0D61  00A0               	movwf	??_I2C2_PinInit
  7024  0D62  0820               	movf	??_I2C2_PinInit,w
  7025  0D63  0023               	movlb	3	; select bank3
  7026  0D64  058D               	andwf	13,f	;volatile
  7027  0D65  0008               	return
  7028  0D66                     __end_of_I2C2_PinInit:	
  7029                           
  7030                           	psect	text34
  7031  0F4C                     __ptext34:	
  7032 ;; *************** function _Buzzer_Init *****************
  7033 ;; Defined at:
  7034 ;;		line 11 in file "Buzzer.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;		None
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;		None
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      void 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7048 ;;      Params:         0       0       0       0       0       0
  7049 ;;      Locals:         0       0       0       0       0       0
  7050 ;;      Temps:          0       1       0       0       0       0
  7051 ;;      Totals:         0       1       0       0       0       0
  7052 ;;Total ram usage:        1 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    3
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_main
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           
  7063                           ;psect for function _Buzzer_Init
  7064  0F4C                     _Buzzer_Init:	
  7065                           
  7066                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  7067                           
  7068                           ;incstack = 0
  7069                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  7070  0F4C  307F               	movlw	127
  7071  0F4D  0020               	movlb	0	; select bank0
  7072  0F4E  00A0               	movwf	??_Buzzer_Init
  7073  0F4F  0820               	movf	??_Buzzer_Init,w
  7074  0F50  0021               	movlb	1	; select bank1
  7075  0F51  058C               	andwf	12,f	;volatile
  7076                           
  7077                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  7078  0F52  307F               	movlw	127
  7079  0F53  0020               	movlb	0	; select bank0
  7080  0F54  00A0               	movwf	??_Buzzer_Init
  7081  0F55  0820               	movf	??_Buzzer_Init,w
  7082  0F56  0023               	movlb	3	; select bank3
  7083  0F57  058C               	andwf	12,f	;volatile
  7084                           
  7085                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  7086  0F58  0022               	movlb	2	; select bank2
  7087  0F59  159D               	bsf	29,3	;volatile
  7088                           
  7089                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  7090  0F5A  0020               	movlb	0	; select bank0
  7091  0F5B  081C               	movf	28,w	;volatile
  7092                           
  7093                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  7094  0F5C  149C               	bsf	28,1	;volatile
  7095                           
  7096                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  7097  0F5D  151C               	bsf	28,2	;volatile
  7098                           
  7099                           ;Buzzer.c: 21: TMR2 = 0x00;
  7100  0F5E  019A               	clrf	26	;volatile
  7101                           
  7102                           ;Buzzer.c: 22: PR2 = 0xFF;
  7103  0F5F  30FF               	movlw	255
  7104  0F60  009B               	movwf	27	;volatile
  7105                           
  7106                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  7107  0F61  303F               	movlw	63
  7108  0F62  00A0               	movwf	??_Buzzer_Init
  7109  0F63  0820               	movf	??_Buzzer_Init,w
  7110  0F64  0025               	movlb	5	; select bank5
  7111  0F65  059A               	andwf	26,f	;volatile
  7112                           
  7113                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  7114  0F66  300C               	movlw	12
  7115  0F67  0020               	movlb	0	; select bank0
  7116  0F68  00A0               	movwf	??_Buzzer_Init
  7117  0F69  0820               	movf	??_Buzzer_Init,w
  7118  0F6A  0025               	movlb	5	; select bank5
  7119  0F6B  049A               	iorwf	26,f	;volatile
  7120                           
  7121                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  7122  0F6C  30F3               	movlw	243
  7123  0F6D  0020               	movlb	0	; select bank0
  7124  0F6E  00A0               	movwf	??_Buzzer_Init
  7125  0F6F  0820               	movf	??_Buzzer_Init,w
  7126  0F70  0025               	movlb	5	; select bank5
  7127  0F71  059E               	andwf	30,f	;volatile
  7128                           
  7129                           ;Buzzer.c: 28: CCPR2L = 0x00;
  7130  0F72  0198               	clrf	24	;volatile
  7131  0F73  0008               	return
  7132  0F74                     __end_of_Buzzer_Init:	
  7133                           
  7134                           	psect	text35
  7135  0DB2                     __ptext35:	
  7136 ;; *************** function _Basic_Init *****************
  7137 ;; Defined at:
  7138 ;;		line 73 in file "main.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;		None
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;		None
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  1    wreg      char 
  7145 ;; Registers used:
  7146 ;;		wreg, status,2
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7152 ;;      Params:         0       0       0       0       0       0
  7153 ;;      Locals:         0       0       0       0       0       0
  7154 ;;      Temps:          0       0       0       0       0       0
  7155 ;;      Totals:         0       0       0       0       0       0
  7156 ;;Total ram usage:        0 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; Hardware stack levels required when called:    3
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		_main
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           
  7167                           ;psect for function _Basic_Init
  7168  0DB2                     _Basic_Init:	
  7169                           
  7170                           ;main.c: 75: OSCCON = 0xF0;
  7171                           
  7172                           ;incstack = 0
  7173                           ; Regs used in _Basic_Init: [wreg+status,2]
  7174  0DB2  30F0               	movlw	240
  7175  0DB3  0021               	movlb	1	; select bank1
  7176  0DB4  0099               	movwf	25	;volatile
  7177                           
  7178                           ;main.c: 79: TRISA = 0x00;
  7179  0DB5  018C               	clrf	12	;volatile
  7180                           
  7181                           ;main.c: 80: ANSELA = 0x00;
  7182  0DB6  0023               	movlb	3	; select bank3
  7183  0DB7  018C               	clrf	12	;volatile
  7184                           
  7185                           ;main.c: 82: TRISB = 0x00;
  7186  0DB8  0021               	movlb	1	; select bank1
  7187  0DB9  018D               	clrf	13	;volatile
  7188                           
  7189                           ;main.c: 83: ANSELB = 0x00;
  7190  0DBA  0023               	movlb	3	; select bank3
  7191  0DBB  018D               	clrf	13	;volatile
  7192                           
  7193                           ;main.c: 85: APFCON0 = 0x00;
  7194  0DBC  0022               	movlb	2	; select bank2
  7195  0DBD  019D               	clrf	29	;volatile
  7196                           
  7197                           ;main.c: 86: APFCON1 = 0x00;
  7198  0DBE  019E               	clrf	30	;volatile
  7199                           
  7200                           ;main.c: 88: PORTA = 0x00;
  7201  0DBF  0020               	movlb	0	; select bank0
  7202  0DC0  018C               	clrf	12	;volatile
  7203                           
  7204                           ;main.c: 89: PORTB = 0x00;
  7205  0DC1  018D               	clrf	13	;volatile
  7206  0DC2  0008               	return
  7207  0DC3                     __end_of_Basic_Init:	
  7208                           ;main.c: 91: return 0;
  7209                           ;	Return value of _Basic_Init is never used
  7210                           
  7211                           
  7212                           	psect	intentry
  7213  0004                     __pintentry:	
  7214 ;; *************** function _Handler *****************
  7215 ;; Defined at:
  7216 ;;		line 94 in file "main.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;		None
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7230 ;;      Params:         0       0       0       0       0       0
  7231 ;;      Locals:         0       0       0       0       0       0
  7232 ;;      Temps:          1       0       0       0       0       0
  7233 ;;      Totals:         1       0       0       0       0       0
  7234 ;;Total ram usage:        1 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:    2
  7237 ;; This function calls:
  7238 ;;		_Buzzer_Count1ms
  7239 ;;		_I2C_CommonInterrupt
  7240 ;;		_Timer1_Count1ms
  7241 ;;		_Timer1_DetectAssignCount
  7242 ;;		_Timer6_CheckFlag
  7243 ;;		_mTouch_IntervalDecrement
  7244 ;;		_mTouch_Read
  7245 ;; This function is called by:
  7246 ;;		Interrupt level 1
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250  0004                     _Handler:	
  7251                           
  7252                           ;incstack = 0
  7253  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7254                           
  7255                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7256  0005  3180               	pagesel	$
  7257  0006  0020               	movlb	0	; select bank0
  7258  0007  087F               	movf	127,w
  7259  0008  00FB               	movwf	??_Handler
  7260                           
  7261                           ;main.c: 96: if(Timer1_DetectAssignCount())
  7262  0009  318E  263F  3180   	fcall	_Timer1_DetectAssignCount
  7263  000C  3A00               	xorlw	0
  7264  000D  1903               	skipnz
  7265  000E  2812               	goto	i1l2835
  7266                           
  7267                           ;main.c: 97: LATA6 = !LATA6;
  7268  000F  3040               	movlw	64
  7269  0010  0022               	movlb	2	; select bank2
  7270  0011  068C               	xorwf	12,f
  7271  0012                     i1l2835:	
  7272                           
  7273                           ;main.c: 99: if(Timer6_CheckFlag())
  7274  0012  318D  254E  3180   	fcall	_Timer6_CheckFlag
  7275  0015  3A00               	xorlw	0
  7276  0016  1903               	skipnz
  7277  0017  2824               	goto	i1l505
  7278                           
  7279                           ;main.c: 100: {
  7280                           ;main.c: 101: mTouch_IntervalDecrement();
  7281  0018  318D  2582  3180   	fcall	_mTouch_IntervalDecrement
  7282                           
  7283                           ;main.c: 102: Timer1_Count1ms();
  7284  001B  318F  27CC  3180   	fcall	_Timer1_Count1ms
  7285                           
  7286                           ;main.c: 104: mTouch_Read();
  7287  001E  318F  2727  3180   	fcall	_mTouch_Read
  7288                           
  7289                           ;main.c: 105: Buzzer_Count1ms();
  7290  0021  318D  25FA  3180   	fcall	_Buzzer_Count1ms
  7291  0024                     i1l505:	
  7292                           
  7293                           ;main.c: 106: }
  7294                           ;main.c: 107: I2C_CommonInterrupt();
  7295  0024  318D  251A         	fcall	_I2C_CommonInterrupt
  7296  0026  087B               	movf	??_Handler,w
  7297  0027  0020               	movlb	0	; select bank0
  7298  0028  00FF               	movwf	127
  7299  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7300  002A  0009               	retfie
  7301  002B                     __end_of_Handler:	
  7302                           
  7303                           	psect	text37
  7304  0F27                     __ptext37:	
  7305 ;; *************** function _mTouch_Read *****************
  7306 ;; Defined at:
  7307 ;;		line 29 in file "mTouch.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;		None
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  1    wreg      void 
  7314 ;; Registers used:
  7315 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7321 ;;      Params:         0       0       0       0       0       0
  7322 ;;      Locals:         0       0       0       0       0       0
  7323 ;;      Temps:          1       0       0       0       0       0
  7324 ;;      Totals:         1       0       0       0       0       0
  7325 ;;Total ram usage:        1 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; This function calls:
  7328 ;;		Nothing
  7329 ;; This function is called by:
  7330 ;;		_Handler
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           
  7335                           ;psect for function _mTouch_Read
  7336  0F27                     _mTouch_Read:	
  7337                           
  7338                           ;mTouch.c: 31: static uint8_t channel=0;
  7339                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  7340                           
  7341                           ;incstack = 0
  7342                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7343  0F27  0875               	movf	mTouch_Read@channel,w
  7344  0F28  3EA4               	addlw	(low (_CPS_Data| 0))& (0+255)
  7345  0F29  0086               	movwf	6
  7346  0F2A  0187               	clrf	7
  7347  0F2B  0801               	movf	1,w
  7348  0F2C  00F6               	movwf	??_mTouch_Read
  7349  0F2D  0875               	movf	mTouch_Read@channel,w
  7350  0F2E  3EA7               	addlw	(low (_CPS_PreData| 0))& (0+255)
  7351  0F2F  0086               	movwf	6
  7352  0F30  0187               	clrf	7
  7353  0F31  0876               	movf	??_mTouch_Read,w
  7354  0F32  0081               	movwf	1
  7355                           
  7356                           ;mTouch.c: 35: CPSCON0 &= ~(0x01<<7);;
  7357  0F33  307F               	movlw	127
  7358  0F34  00F6               	movwf	??_mTouch_Read
  7359  0F35  0876               	movf	??_mTouch_Read,w
  7360  0F36  0020               	movlb	0	; select bank0
  7361  0F37  059E               	andwf	30,f	;volatile
  7362                           
  7363                           ;mTouch.c: 36: CPS_Data[channel] = TMR0;
  7364  0F38  0815               	movf	21,w	;volatile
  7365  0F39  00F6               	movwf	??_mTouch_Read
  7366  0F3A  0875               	movf	mTouch_Read@channel,w
  7367  0F3B  3EA4               	addlw	(low (_CPS_Data| 0))& (0+255)
  7368  0F3C  0086               	movwf	6
  7369  0F3D  0187               	clrf	7
  7370  0F3E  0876               	movf	??_mTouch_Read,w
  7371  0F3F  0081               	movwf	1
  7372                           
  7373                           ;mTouch.c: 37: TMR0 = 0x00;
  7374  0F40  0195               	clrf	21	;volatile
  7375                           
  7376                           ;mTouch.c: 38: CPSCON0 |= (0x01<<7);;
  7377  0F41  179E               	bsf	30,7	;volatile
  7378                           
  7379                           ;mTouch.c: 40: if(channel++>2)channel = 0;
  7380  0F42  0875               	movf	mTouch_Read@channel,w
  7381  0F43  0AF5               	incf	mTouch_Read@channel,f
  7382  0F44  00F6               	movwf	??_mTouch_Read
  7383  0F45  3003               	movlw	3
  7384  0F46  0276               	subwf	??_mTouch_Read,w
  7385  0F47  1803               	btfsc	3,0
  7386  0F48  01F5               	clrf	mTouch_Read@channel
  7387                           
  7388                           ;mTouch.c: 41: CPSCON1 = (uint8_t)channel;
  7389  0F49  0875               	movf	mTouch_Read@channel,w
  7390  0F4A  009F               	movwf	31	;volatile
  7391  0F4B  0008               	return
  7392  0F4C                     __end_of_mTouch_Read:	
  7393                           
  7394                           	psect	text38
  7395  0D82                     __ptext38:	
  7396 ;; *************** function _mTouch_IntervalDecrement *****************
  7397 ;; Defined at:
  7398 ;;		line 110 in file "main.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;		None
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;		None
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  1    wreg      void 
  7405 ;; Registers used:
  7406 ;;		wreg, status,2, status,0
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7412 ;;      Params:         0       0       0       0       0       0
  7413 ;;      Locals:         0       0       0       0       0       0
  7414 ;;      Temps:          0       0       0       0       0       0
  7415 ;;      Totals:         0       0       0       0       0       0
  7416 ;;Total ram usage:        0 bytes
  7417 ;; Hardware stack levels used:    1
  7418 ;; This function calls:
  7419 ;;		Nothing
  7420 ;; This function is called by:
  7421 ;;		_Handler
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           
  7426                           ;psect for function _mTouch_IntervalDecrement
  7427  0D82                     _mTouch_IntervalDecrement:	
  7428                           
  7429                           ;main.c: 112: if(mTouch_Interval[0]>0)
  7430                           
  7431                           ;incstack = 0
  7432                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  7433  0D82  0870               	movf	_mTouch_Interval,w
  7434  0D83  1903               	btfsc	3,2
  7435  0D84  2D87               	goto	i1l509
  7436                           
  7437                           ;main.c: 113: mTouch_Interval[0]--;
  7438  0D85  3001               	movlw	1
  7439  0D86  02F0               	subwf	_mTouch_Interval,f
  7440  0D87                     i1l509:	
  7441                           
  7442                           ;main.c: 114: if(mTouch_Interval[1]>0)
  7443  0D87  0871               	movf	_mTouch_Interval+1,w
  7444  0D88  1903               	btfsc	3,2
  7445  0D89  2D8C               	goto	i1l510
  7446                           
  7447                           ;main.c: 115: mTouch_Interval[1]--;
  7448  0D8A  3001               	movlw	1
  7449  0D8B  02F1               	subwf	_mTouch_Interval+1,f
  7450  0D8C                     i1l510:	
  7451                           
  7452                           ;main.c: 116: if(mTouch_Interval[2]>0)
  7453  0D8C  0872               	movf	_mTouch_Interval+2,w
  7454  0D8D  1903               	btfsc	3,2
  7455  0D8E  0008               	return
  7456                           
  7457                           ;main.c: 117: mTouch_Interval[2]--;
  7458  0D8F  3001               	movlw	1
  7459  0D90  02F2               	subwf	_mTouch_Interval+2,f
  7460  0D91  0008               	return
  7461  0D92                     __end_of_mTouch_IntervalDecrement:	
  7462                           
  7463                           	psect	text39
  7464  0D4E                     __ptext39:	
  7465 ;; *************** function _Timer6_CheckFlag *****************
  7466 ;; Defined at:
  7467 ;;		line 17 in file "Timer6.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;		None
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;		None
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  1    wreg      unsigned char 
  7474 ;; Registers used:
  7475 ;;		wreg
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7481 ;;      Params:         0       0       0       0       0       0
  7482 ;;      Locals:         0       0       0       0       0       0
  7483 ;;      Temps:          0       0       0       0       0       0
  7484 ;;      Totals:         0       0       0       0       0       0
  7485 ;;Total ram usage:        0 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; This function calls:
  7488 ;;		Nothing
  7489 ;; This function is called by:
  7490 ;;		_Handler
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           
  7495                           ;psect for function _Timer6_CheckFlag
  7496  0D4E                     _Timer6_CheckFlag:	
  7497                           
  7498                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  7499                           
  7500                           ;incstack = 0
  7501                           ; Regs used in _Timer6_CheckFlag: [wreg]
  7502  0D4E  0021               	movlb	1	; select bank1
  7503  0D4F  1D93               	btfss	19,3	;volatile
  7504  0D50  2D57               	goto	i1l1673
  7505  0D51  0020               	movlb	0	; select bank0
  7506  0D52  1D93               	btfss	19,3	;volatile
  7507  0D53  2D57               	goto	i1l1673
  7508                           
  7509                           ;Timer6.c: 20: {
  7510                           ;Timer6.c: 21: TMR6IF = 0;
  7511  0D54  1193               	bcf	19,3	;volatile
  7512                           
  7513                           ;Timer6.c: 22: return 1;
  7514  0D55  3001               	movlw	1
  7515  0D56  0008               	return
  7516  0D57                     i1l1673:	
  7517                           
  7518                           ;Timer6.c: 23: }
  7519                           ;Timer6.c: 24: return 0;
  7520  0D57  3000               	movlw	0
  7521  0D58  0008               	return
  7522  0D59                     __end_of_Timer6_CheckFlag:	
  7523                           
  7524                           	psect	text40
  7525  0E3F                     __ptext40:	
  7526 ;; *************** function _Timer1_DetectAssignCount *****************
  7527 ;; Defined at:
  7528 ;;		line 103 in file "Timer1.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;		None
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;		None
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  1    wreg      unsigned char 
  7535 ;; Registers used:
  7536 ;;		wreg
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7542 ;;      Params:         0       0       0       0       0       0
  7543 ;;      Locals:         0       0       0       0       0       0
  7544 ;;      Temps:          0       0       0       0       0       0
  7545 ;;      Totals:         0       0       0       0       0       0
  7546 ;;Total ram usage:        0 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; This function calls:
  7549 ;;		Nothing
  7550 ;; This function is called by:
  7551 ;;		_Handler
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           
  7556                           ;psect for function _Timer1_DetectAssignCount
  7557  0E3F                     _Timer1_DetectAssignCount:	
  7558                           
  7559                           ;Timer1.c: 105: if(TMR1IF&&TMR1IE)
  7560                           
  7561                           ;incstack = 0
  7562                           ; Regs used in _Timer1_DetectAssignCount: [wreg]
  7563  0E3F  0020               	movlb	0	; select bank0
  7564  0E40  1C11               	btfss	17,0	;volatile
  7565  0E41  2E57               	goto	i1l2537
  7566  0E42  0021               	movlb	1	; select bank1
  7567  0E43  1C11               	btfss	17,0	;volatile
  7568  0E44  2E57               	goto	i1l2537
  7569                           
  7570                           ;Timer1.c: 106: {
  7571                           ;Timer1.c: 107: cnts.SigmaDeltaCount+= 10UL;
  7572  0E45  300A               	movlw	10
  7573  0E46  07A0               	addwf	_cnts^(0+128),f
  7574  0E47  3000               	movlw	0
  7575  0E48  3DA1               	addwfc	(_cnts+1)^(0+128),f
  7576  0E49  3000               	movlw	0
  7577  0E4A  3DA2               	addwfc	(_cnts+2)^(0+128),f
  7578  0E4B  3000               	movlw	0
  7579  0E4C  3DA3               	addwfc	(_cnts+3)^(0+128),f
  7580                           
  7581                           ;Timer1.c: 109: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL+1; TMR1ON = 1; };
  7582  0E4D  0020               	movlb	0	; select bank0
  7583  0E4E  1018               	bcf	24,0	;volatile
  7584  0E4F  30FF               	movlw	255
  7585  0E50  0097               	movwf	23	;volatile
  7586  0E51  30F6               	movlw	246
  7587  0E52  0096               	movwf	22	;volatile
  7588  0E53  1418               	bsf	24,0	;volatile
  7589                           
  7590                           ;Timer1.c: 111: TMR1IF = 0;
  7591  0E54  1011               	bcf	17,0	;volatile
  7592                           
  7593                           ;Timer1.c: 113: return 1;
  7594  0E55  3001               	movlw	1
  7595  0E56  0008               	return
  7596  0E57                     i1l2537:	
  7597                           
  7598                           ;Timer1.c: 114: }
  7599                           ;Timer1.c: 115: return 0;
  7600  0E57  3000               	movlw	0
  7601  0E58  0008               	return
  7602  0E59                     __end_of_Timer1_DetectAssignCount:	
  7603                           
  7604                           	psect	text41
  7605  0FCC                     __ptext41:	
  7606 ;; *************** function _Timer1_Count1ms *****************
  7607 ;; Defined at:
  7608 ;;		line 77 in file "Timer1.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;		None
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;		None
  7613 ;; Return value:  Size  Location     Type
  7614 ;;                  1    wreg      void 
  7615 ;; Registers used:
  7616 ;;		wreg, status,2, status,0, pclath, cstack
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/0
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7622 ;;      Params:         0       0       0       0       0       0
  7623 ;;      Locals:         0       0       0       0       0       0
  7624 ;;      Temps:          1       0       0       0       0       0
  7625 ;;      Totals:         1       0       0       0       0       0
  7626 ;;Total ram usage:        1 bytes
  7627 ;; Hardware stack levels used:    1
  7628 ;; Hardware stack levels required when called:    1
  7629 ;; This function calls:
  7630 ;;		i1_Buzzer_MiliSecond
  7631 ;; This function is called by:
  7632 ;;		_Handler
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636                           
  7637                           ;psect for function _Timer1_Count1ms
  7638  0FCC                     _Timer1_Count1ms:	
  7639                           
  7640                           ;Timer1.c: 79: tcnt.Delta_t++;
  7641                           
  7642                           ;incstack = 0
  7643                           ; Regs used in _Timer1_Count1ms: [wreg+status,2+status,0+pclath+cstack]
  7644  0FCC  3001               	movlw	1
  7645  0FCD  0020               	movlb	0	; select bank0
  7646  0FCE  07E7               	addwf	_tcnt+2,f
  7647  0FCF  3000               	movlw	0
  7648  0FD0  3DE8               	addwfc	_tcnt+3,f
  7649  0FD1  3000               	movlw	0
  7650  0FD2  3DE9               	addwfc	_tcnt+4,f
  7651  0FD3  3000               	movlw	0
  7652  0FD4  3DEA               	addwfc	_tcnt+5,f
  7653                           
  7654                           ;Timer1.c: 80: tcnt.RenewalRersult++;
  7655  0FD5  3001               	movlw	1
  7656  0FD6  07EB               	addwf	_tcnt+6,f
  7657  0FD7  3000               	movlw	0
  7658  0FD8  3DEC               	addwfc	_tcnt+7,f
  7659                           
  7660                           ;Timer1.c: 82: if(tcnt.RenewalRersult>1000)
  7661  0FD9  3003               	movlw	3
  7662  0FDA  026C               	subwf	_tcnt+7,w
  7663  0FDB  30E9               	movlw	233
  7664  0FDC  1903               	skipnz
  7665  0FDD  026B               	subwf	_tcnt+6,w
  7666  0FDE  1C03               	skipc
  7667  0FDF  0008               	return
  7668                           
  7669                           ;Timer1.c: 83: {
  7670                           ;Timer1.c: 84: tcnt.Second_t++;
  7671  0FE0  3001               	movlw	1
  7672  0FE1  00F8               	movwf	??_Timer1_Count1ms
  7673  0FE2  0878               	movf	??_Timer1_Count1ms,w
  7674  0FE3  07E5               	addwf	_tcnt,f
  7675                           
  7676                           ;Timer1.c: 86: if((56<tcnt.Second_t))
  7677  0FE4  3039               	movlw	57
  7678  0FE5  0265               	subwf	_tcnt,w
  7679  0FE6  1C03               	skipc
  7680  0FE7  2FEC               	goto	i1l2511
  7681                           
  7682                           ;Timer1.c: 87: {
  7683                           ;Timer1.c: 88: Buzzer_MiliSecond(300);
  7684  0FE8  302C               	movlw	44
  7685  0FE9  00F6               	movwf	i1Buzzer_MiliSecond@time
  7686  0FEA  3001               	movlw	1
  7687  0FEB  2FF9               	goto	L6
  7688  0FEC                     i1l2511:	
  7689                           ;Timer1.c: 89: }
  7690                           
  7691                           
  7692                           ;Timer1.c: 90: else if(tcnt.Second_t>59)
  7693  0FEC  303C               	movlw	60
  7694  0FED  0020               	movlb	0	; select bank0
  7695  0FEE  0265               	subwf	_tcnt,w
  7696  0FEF  1C03               	skipc
  7697  0FF0  2FFC               	goto	i1l2519
  7698                           
  7699                           ;Timer1.c: 91: {
  7700                           ;Timer1.c: 92: tcnt.Second_t = 0;
  7701  0FF1  01E5               	clrf	_tcnt
  7702                           
  7703                           ;Timer1.c: 93: tcnt.Minute_t++;
  7704  0FF2  3001               	movlw	1
  7705  0FF3  00F8               	movwf	??_Timer1_Count1ms
  7706  0FF4  0878               	movf	??_Timer1_Count1ms,w
  7707  0FF5  07E6               	addwf	_tcnt+1,f
  7708                           
  7709                           ;Timer1.c: 95: Buzzer_MiliSecond(600);
  7710  0FF6  3058               	movlw	88
  7711  0FF7  00F6               	movwf	i1Buzzer_MiliSecond@time
  7712  0FF8  3002               	movlw	2
  7713  0FF9                     L6:	
  7714  0FF9  00F7               	movwf	i1Buzzer_MiliSecond@time+1
  7715  0FFA  318D  2532         	fcall	i1_Buzzer_MiliSecond
  7716  0FFC                     i1l2519:	
  7717                           
  7718                           ;Timer1.c: 96: }
  7719                           ;Timer1.c: 98: tcnt.RenewalRersult = 0;
  7720  0FFC  0020               	movlb	0	; select bank0
  7721  0FFD  01EB               	clrf	_tcnt+6
  7722  0FFE  01EC               	clrf	_tcnt+7
  7723  0FFF  0008               	return
  7724  1000                     __end_of_Timer1_Count1ms:	
  7725                           
  7726                           	psect	text42
  7727  0D32                     __ptext42:	
  7728 ;; *************** function i1_Buzzer_MiliSecond *****************
  7729 ;; Defined at:
  7730 ;;		line 38 in file "Buzzer.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;  time            2    0[COMMON] unsigned int 
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;		None
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  1    wreg      void 
  7737 ;; Registers used:
  7738 ;;		wreg, status,2, status,0
  7739 ;; Tracked objects:
  7740 ;;		On entry : 0/0
  7741 ;;		On exit  : 0/0
  7742 ;;		Unchanged: 0/0
  7743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7744 ;;      Params:         2       0       0       0       0       0
  7745 ;;      Locals:         0       0       0       0       0       0
  7746 ;;      Temps:          0       0       0       0       0       0
  7747 ;;      Totals:         2       0       0       0       0       0
  7748 ;;Total ram usage:        2 bytes
  7749 ;; Hardware stack levels used:    1
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_Timer1_Count1ms
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           
  7758                           ;psect for function i1_Buzzer_MiliSecond
  7759  0D32                     i1_Buzzer_MiliSecond:	
  7760                           
  7761                           ;Buzzer.c: 40: if(count==0)
  7762                           
  7763                           ;incstack = 0
  7764                           ; Regs used in i1_Buzzer_MiliSecond: [wreg+status,2+status,0]
  7765  0D32  0873               	movf	_count,w
  7766  0D33  0474               	iorwf	_count+1,w
  7767  0D34  1D03               	btfss	3,2
  7768  0D35  0008               	return
  7769                           
  7770                           ;Buzzer.c: 41: count = time;
  7771  0D36  0877               	movf	i1Buzzer_MiliSecond@time+1,w
  7772  0D37  00F4               	movwf	_count+1
  7773  0D38  0876               	movf	i1Buzzer_MiliSecond@time,w
  7774  0D39  00F3               	movwf	_count
  7775  0D3A  0008               	return
  7776  0D3B                     __end_ofi1_Buzzer_MiliSecond:	
  7777                           
  7778                           	psect	text43
  7779  0D1A                     __ptext43:	
  7780 ;; *************** function _I2C_CommonInterrupt *****************
  7781 ;; Defined at:
  7782 ;;		line 58 in file "I2C_Common.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;		None
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;		None
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  1    wreg      void 
  7789 ;; Registers used:
  7790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7796 ;;      Params:         0       0       0       0       0       0
  7797 ;;      Locals:         0       0       0       0       0       0
  7798 ;;      Temps:          0       0       0       0       0       0
  7799 ;;      Totals:         0       0       0       0       0       0
  7800 ;;Total ram usage:        0 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; Hardware stack levels required when called:    1
  7803 ;; This function calls:
  7804 ;;		_I2C2_Interrupt
  7805 ;; This function is called by:
  7806 ;;		_Handler
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           
  7811                           ;psect for function _I2C_CommonInterrupt
  7812  0D1A                     _I2C_CommonInterrupt:	
  7813                           
  7814                           ;I2C_Common.c: 61: I2C2_Interrupt();
  7815                           
  7816                           ;incstack = 0
  7817                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7818  0D1A  3185  2599         	fcall	_I2C2_Interrupt
  7819  0D1C  0008               	return
  7820  0D1D                     __end_of_I2C_CommonInterrupt:	
  7821                           
  7822                           	psect	text44
  7823  0599                     __ptext44:	
  7824 ;; *************** function _I2C2_Interrupt *****************
  7825 ;; Defined at:
  7826 ;;		line 152 in file "I2C2.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;		None
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;		None
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1    wreg      void 
  7833 ;; Registers used:
  7834 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7840 ;;      Params:         0       0       0       0       0       0
  7841 ;;      Locals:         0       0       0       0       0       0
  7842 ;;      Temps:          1       0       0       0       0       0
  7843 ;;      Totals:         1       0       0       0       0       0
  7844 ;;Total ram usage:        1 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; This function calls:
  7847 ;;		Nothing
  7848 ;; This function is called by:
  7849 ;;		_I2C_CommonInterrupt
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           
  7854                           ;psect for function _I2C2_Interrupt
  7855  0599                     _I2C2_Interrupt:	
  7856                           
  7857                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  7858                           
  7859                           ;incstack = 0
  7860                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7861  0599  0020               	movlb	0	; select bank0
  7862  059A  1C14               	btfss	20,0	;volatile
  7863  059B  2DE5               	goto	i1l2195
  7864  059C  0021               	movlb	1	; select bank1
  7865  059D  1C14               	btfss	20,0	;volatile
  7866  059E  2DE5               	goto	i1l2195
  7867                           
  7868                           ;I2C2.c: 155: {
  7869                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  7870  059F  0024               	movlb	4	; select bank4
  7871  05A0  1E9C               	btfss	28,5	;volatile
  7872  05A1  2DBC               	goto	i1l157
  7873                           
  7874                           ;I2C2.c: 157: {
  7875                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  7876  05A2  1D1C               	btfss	28,2	;volatile
  7877  05A3  2DAF               	goto	i1l2171
  7878                           
  7879                           ;I2C2.c: 159: {
  7880                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  7881  05A4  1B1E               	btfsc	30,6	;volatile
  7882  05A5  2DE3               	goto	i1l2193
  7883  05A6                     i1l2163:	
  7884                           ;I2C2.c: 161: {
  7885                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7886                           
  7887  05A6  081C               	movf	28,w	;volatile
  7888  05A7  3901               	andlw	1
  7889  05A8  00F6               	movwf	??_I2C2_Interrupt
  7890  05A9  0E1D               	swapf	29,w	;volatile
  7891  05AA  3901               	andlw	1
  7892  05AB  0476               	iorwf	??_I2C2_Interrupt,w
  7893  05AC  1D03               	btfss	3,2
  7894  05AD  2DA6               	goto	i1l2163
  7895  05AE  2DCF               	goto	L7
  7896  05AF                     i1l2171:	
  7897                           ;I2C2.c: 166: }
  7898                           ;I2C2.c: 167: }
  7899                           
  7900                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  7901                           
  7902                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  7903                           
  7904                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  7905                           
  7906                           
  7907                           ;I2C2.c: 168: else
  7908                           ;I2C2.c: 169: {
  7909                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  7910  05AF  0819               	movf	25,w	;volatile
  7911  05B0  00F6               	movwf	??_I2C2_Interrupt
  7912  05B1  0021               	movlb	1	; select bank1
  7913  05B2  083B               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  7914  05B3  0086               	movwf	6
  7915  05B4  0187               	clrf	7
  7916  05B5  0876               	movf	??_I2C2_Interrupt,w
  7917  05B6  0081               	movwf	1
  7918                           
  7919                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  7920  05B7  3001               	movlw	1
  7921  05B8  00F6               	movwf	??_I2C2_Interrupt
  7922  05B9  0876               	movf	??_I2C2_Interrupt,w
  7923  05BA  07BB               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  7924  05BB  2DE1               	goto	i1l2191
  7925  05BC                     i1l157:	
  7926                           ;I2C2.c: 173: }
  7927                           ;I2C2.c: 174: }
  7928                           
  7929                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  7930                           
  7931                           
  7932                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  7933  05BC  1A9C               	btfsc	28,5	;volatile
  7934  05BD  2DE3               	goto	i1l2193
  7935                           
  7936                           ;I2C2.c: 176: {
  7937                           ;I2C2.c: 177: SSP2BUF;
  7938  05BE  0819               	movf	25,w	;volatile
  7939                           
  7940                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  7941  05BF  1D1C               	btfss	28,2	;volatile
  7942  05C0  2DDC               	goto	i1l2189
  7943                           
  7944                           ;I2C2.c: 180: {
  7945                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  7946  05C1  30AA               	movlw	(low (_I2C2_Config| 0))& (0+255)
  7947  05C2  00F6               	movwf	??_I2C2_Interrupt
  7948  05C3  0876               	movf	??_I2C2_Interrupt,w
  7949  05C4  0021               	movlb	1	; select bank1
  7950  05C5  00BA               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  7951  05C6                     i1l2183:	
  7952                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7953                           
  7954  05C6  0024               	movlb	4	; select bank4
  7955  05C7  081C               	movf	28,w	;volatile
  7956  05C8  3901               	andlw	1
  7957  05C9  00F6               	movwf	??_I2C2_Interrupt
  7958  05CA  0E1D               	swapf	29,w	;volatile
  7959  05CB  3901               	andlw	1
  7960  05CC  0476               	iorwf	??_I2C2_Interrupt,w
  7961  05CD  1D03               	btfss	3,2
  7962  05CE  2DC6               	goto	i1l2183
  7963  05CF                     L7:	
  7964                           
  7965                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  7966  05CF  0021               	movlb	1	; select bank1
  7967  05D0  083A               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  7968  05D1  0086               	movwf	6
  7969  05D2  0187               	clrf	7
  7970  05D3  0801               	movf	1,w
  7971  05D4  0024               	movlb	4	; select bank4
  7972  05D5  0099               	movwf	25	;volatile
  7973                           
  7974                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  7975  05D6  3001               	movlw	1
  7976  05D7  00F6               	movwf	??_I2C2_Interrupt
  7977  05D8  0876               	movf	??_I2C2_Interrupt,w
  7978  05D9  0021               	movlb	1	; select bank1
  7979  05DA  07BA               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  7980                           
  7981                           ;I2C2.c: 186: }
  7982  05DB  2DE1               	goto	i1l2191
  7983  05DC                     i1l2189:	
  7984                           
  7985                           ;I2C2.c: 187: else
  7986                           ;I2C2.c: 188: {
  7987                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  7988  05DC  30B2               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  7989  05DD  00F6               	movwf	??_I2C2_Interrupt
  7990  05DE  0876               	movf	??_I2C2_Interrupt,w
  7991  05DF  0021               	movlb	1	; select bank1
  7992  05E0  00BB               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  7993  05E1                     i1l2191:	
  7994                           
  7995                           ;I2C2.c: 190: }
  7996                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  7997  05E1  0024               	movlb	4	; select bank4
  7998  05E2  161D               	bsf	29,4	;volatile
  7999  05E3                     i1l2193:	
  8000                           
  8001                           ;I2C2.c: 192: }
  8002                           ;I2C2.c: 193: SSP2IF = 0;
  8003  05E3  0020               	movlb	0	; select bank0
  8004  05E4  1014               	bcf	20,0	;volatile
  8005  05E5                     i1l2195:	
  8006                           
  8007                           ;I2C2.c: 194: }
  8008                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  8009  05E5  0021               	movlb	1	; select bank1
  8010  05E6  1C94               	btfss	20,1	;volatile
  8011  05E7  0008               	return
  8012  05E8  0020               	movlb	0	; select bank0
  8013  05E9  1C94               	btfss	20,1	;volatile
  8014  05EA  0008               	return
  8015                           
  8016                           ;I2C2.c: 197: BCL2IF = 0;
  8017  05EB  1094               	bcf	20,1	;volatile
  8018  05EC  0008               	return
  8019  05ED                     __end_of_I2C2_Interrupt:	
  8020                           
  8021                           	psect	text45
  8022  0DFA                     __ptext45:	
  8023 ;; *************** function _Buzzer_Count1ms *****************
  8024 ;; Defined at:
  8025 ;;		line 44 in file "Buzzer.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;		None
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;		None
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1    wreg      void 
  8032 ;; Registers used:
  8033 ;;		wreg, status,2, status,0, pclath, cstack
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8039 ;;      Params:         0       0       0       0       0       0
  8040 ;;      Locals:         0       0       0       0       0       0
  8041 ;;      Temps:          0       0       0       0       0       0
  8042 ;;      Totals:         0       0       0       0       0       0
  8043 ;;Total ram usage:        0 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:    1
  8046 ;; This function calls:
  8047 ;;		_Buzzer_SetDuty
  8048 ;; This function is called by:
  8049 ;;		_Handler
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           
  8054                           ;psect for function _Buzzer_Count1ms
  8055  0DFA                     _Buzzer_Count1ms:	
  8056                           
  8057                           ;Buzzer.c: 46: if(count>0)
  8058                           
  8059                           ;incstack = 0
  8060                           ; Regs used in _Buzzer_Count1ms: [wreg+status,2+status,0+pclath+cstack]
  8061  0DFA  0873               	movf	_count,w
  8062  0DFB  0474               	iorwf	_count+1,w
  8063  0DFC  1903               	btfsc	3,2
  8064  0DFD  2E09               	goto	i1l2321
  8065                           
  8066                           ;Buzzer.c: 47: {
  8067                           ;Buzzer.c: 48: count--;
  8068  0DFE  3001               	movlw	1
  8069  0DFF  02F3               	subwf	_count,f
  8070  0E00  3000               	movlw	0
  8071  0E01  3BF4               	subwfb	_count+1,f
  8072                           
  8073                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  8074  0E02  30FF               	movlw	255
  8075  0E03  00F6               	movwf	Buzzer_SetDuty@duty
  8076  0E04  3001               	movlw	1
  8077  0E05  00F7               	movwf	Buzzer_SetDuty@duty+1
  8078  0E06  318E  2674         	fcall	_Buzzer_SetDuty
  8079                           
  8080                           ;Buzzer.c: 50: }
  8081  0E08  0008               	return
  8082  0E09                     i1l2321:	
  8083                           
  8084                           ;Buzzer.c: 51: else
  8085                           ;Buzzer.c: 52: {
  8086                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  8087  0E09  3000               	movlw	0
  8088  0E0A  00F6               	movwf	Buzzer_SetDuty@duty
  8089  0E0B  00F7               	movwf	Buzzer_SetDuty@duty+1
  8090  0E0C  318E  2674         	fcall	_Buzzer_SetDuty
  8091  0E0E  0008               	return
  8092  0E0F                     __end_of_Buzzer_Count1ms:	
  8093                           
  8094                           	psect	text46
  8095  0E74                     __ptext46:	
  8096 ;; *************** function _Buzzer_SetDuty *****************
  8097 ;; Defined at:
  8098 ;;		line 31 in file "Buzzer.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;  duty            2    0[COMMON] unsigned int 
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  8103 ;; Return value:  Size  Location     Type
  8104 ;;                  1    wreg      void 
  8105 ;; Registers used:
  8106 ;;		wreg, status,2, status,0
  8107 ;; Tracked objects:
  8108 ;;		On entry : 0/0
  8109 ;;		On exit  : 0/0
  8110 ;;		Unchanged: 0/0
  8111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8112 ;;      Params:         2       0       0       0       0       0
  8113 ;;      Locals:         1       0       0       0       0       0
  8114 ;;      Temps:          2       0       0       0       0       0
  8115 ;;      Totals:         5       0       0       0       0       0
  8116 ;;Total ram usage:        5 bytes
  8117 ;; Hardware stack levels used:    1
  8118 ;; This function calls:
  8119 ;;		Nothing
  8120 ;; This function is called by:
  8121 ;;		_Buzzer_Count1ms
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           
  8126                           ;psect for function _Buzzer_SetDuty
  8127  0E74                     _Buzzer_SetDuty:	
  8128                           
  8129                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  8130                           
  8131                           ;incstack = 0
  8132                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  8133  0E74  0025               	movlb	5	; select bank5
  8134  0E75  081A               	movf	26,w	;volatile
  8135  0E76  39CF               	andlw	207
  8136  0E77  00F8               	movwf	??_Buzzer_SetDuty
  8137  0E78  0878               	movf	??_Buzzer_SetDuty,w
  8138  0E79  00FA               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  8139                           
  8140                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  8141  0E7A  0877               	movf	Buzzer_SetDuty@duty+1,w
  8142  0E7B  00F9               	movwf	??_Buzzer_SetDuty+1
  8143  0E7C  0876               	movf	Buzzer_SetDuty@duty,w
  8144  0E7D  00F8               	movwf	??_Buzzer_SetDuty
  8145  0E7E  36F9               	lsrf	??_Buzzer_SetDuty+1,f
  8146  0E7F  0CF8               	rrf	??_Buzzer_SetDuty,f
  8147  0E80  36F9               	lsrf	??_Buzzer_SetDuty+1,f
  8148  0E81  0CF8               	rrf	??_Buzzer_SetDuty,f
  8149  0E82  0878               	movf	??_Buzzer_SetDuty,w
  8150  0E83  0098               	movwf	24	;volatile
  8151                           
  8152                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  8153  0E84  0876               	movf	Buzzer_SetDuty@duty,w
  8154  0E85  3903               	andlw	3
  8155  0E86  00F8               	movwf	??_Buzzer_SetDuty
  8156  0E87  3003               	movlw	3
  8157  0E88                     u144_25:	
  8158  0E88  35F8               	lslf	??_Buzzer_SetDuty,f
  8159  0E89  3EFF               	addlw	-1
  8160  0E8A  1D03               	skipz
  8161  0E8B  2E88               	goto	u144_25
  8162  0E8C  3578               	lslf	??_Buzzer_SetDuty,w
  8163  0E8D  047A               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  8164  0E8E  009A               	movwf	26	;volatile
  8165  0E8F  0008               	return
  8166  0E90                     __end_of_Buzzer_SetDuty:	
  8167  007E                     btemp	set	126	;btemp
  8168  007E                     int$flags	set	126
  8169  007E                     wtemp0	set	126


Data Sizes:
    Strings     331
    Constant    70
    Data        90
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     69      80
    BANK1            80      0      61
    BANK2            80      0      60
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[10]), STR_5(CODE[8]), STR_4(CODE[11]), STR_3(CODE[14]), 
		 -> STR_2(CODE[5]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_51(CODE[7]), STR_50(CODE[7]), STR_49(CODE[7]), STR_48(CODE[7]), 
		 -> STR_47(CODE[7]), STR_46(CODE[7]), STR_45(CODE[7]), STR_44(CODE[6]), 
		 -> STR_43(CODE[6]), STR_42(CODE[6]), STR_41(CODE[6]), STR_40(CODE[5]), 
		 -> STR_39(CODE[5]), STR_38(CODE[5]), STR_37(CODE[5]), 

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_36(CODE[8]), STR_35(CODE[8]), STR_34(CODE[8]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[7]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[6]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), 

    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[5]), STR_18(CODE[6]), 
		 -> STR_17(CODE[5]), STR_16(CODE[6]), STR_15(CODE[5]), STR_14(CODE[6]), 
		 -> STR_13(CODE[5]), STR_12(CODE[6]), STR_11(CODE[5]), STR_10(CODE[6]), 
		 -> STR_9(CODE[5]), STR_8(CODE[6]), STR_7(CODE[5]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK1[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK1[2]), ConfigReg(BANK0[1]), 

    S46$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), 

    S46$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Timer1_Count1ms->i1_Buzzer_MiliSecond
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Count1ms->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_Timer1_GetCPM
    _putch->_LCD_WriteData
    ___llmod->___lldiv
    _mTouch_Init->_mTouch_PortInit
    _mTouch_Check->_Buzzer_MiliSecond
    _Timer1_GetCPM->_Timer1_GetCPS
    _Timer1_GetCPS->___lldiv
    ___lldiv->___lmul
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _DAC_WriteVoltage->_I2C_Transmit
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10042
                                             65 BANK0      4     4      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                   _DAC_WriteVoltage
                     _LCD_CursorHome
                 _LCD_CursorPosition
                           _LCD_Init
                      _Timer1_GetCPM
                      _Timer1_GetCPS
                 _Timer1_GetCountSum
                   _Timer1_GetMinute
                   _Timer1_GetSecond
                        _Timer1_Init
                  _Timer1_StartCount
                   _Timer1_StopCount
                        _Timer6_Init
                       _mTouch_Check
                        _mTouch_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              35    25     10    3240
                                             38 BANK0     27    17     10
                      _Timer1_GetCPM (ARG)
                      _Timer1_GetCPS (ARG)
                 _Timer1_GetCountSum (ARG)
                   _Timer1_GetMinute (ARG)
                   _Timer1_GetSecond (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     155
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                             26 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _mTouch_Check                                         6     6      0     347
                                              2 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StopCount                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StartCount                                    0     0      0       0
                 _Timer1_ClearRecord
 ---------------------------------------------------------------------------------
 (2) _Timer1_ClearRecord                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetSecond                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetMinute                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        8     4      4    1471
                                             30 BANK0      8     4      4
                      _Timer1_GetCPS
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPS                                        4     0      4     993
                                             26 BANK0      4     0      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     444
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     549
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              4 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     263
                                              3 BANK0      3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_WriteVoltage                                     5     3      2    1454
                                             16 BANK0      5     3      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    1902
                                             16 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1238
                                              8 BANK0      8     5      3
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3     664
                                              5 BANK0      6     3      3
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              1     1      0     269
                                              5 COMMON     1     1      0
                    _Buzzer_Count1ms
                _I2C_CommonInterrupt
                    _Timer1_Count1ms
           _Timer1_DetectAssignCount
                   _Timer6_CheckFlag
           _mTouch_IntervalDecrement
                        _mTouch_Read
 ---------------------------------------------------------------------------------
 (6) _mTouch_Read                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer6_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_DetectAssignCount                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_Count1ms                                      1     1      0      74
                                              2 COMMON     1     1      0
                i1_Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (7) i1_Buzzer_MiliSecond                                  2     0      2      74
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Buzzer_Count1ms                                      0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (7) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C2_Transmit
   _DAC_WriteVoltage
     _I2C_Transmit
       _I2C2_Transmit
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
     _Timer1_GetCPS
       ___lldiv
         ___lmul (ARG)
       ___lmul
     ___lmul
   _Timer1_GetCPS
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Timer1_GetCountSum
   _Timer1_GetMinute
   _Timer1_GetSecond
   _Timer1_Init
   _Timer1_StartCount
     _Timer1_ClearRecord
   _Timer1_StopCount
   _Timer6_Init
   _mTouch_Check
     _Buzzer_MiliSecond
   _mTouch_Init
     _mTouch_PortInit
   _printf
     _Timer1_GetCPM (ARG)
       _Timer1_GetCPS
         ___lldiv
           ___lmul (ARG)
         ___lmul
       ___lmul
     _Timer1_GetCPS (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _Timer1_GetCountSum (ARG)
     _Timer1_GetMinute (ARG)
     _Timer1_GetSecond (ARG)
     ___lldiv (ARG)
       ___lmul (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Count1ms
     _Buzzer_SetDuty
   _I2C_CommonInterrupt
     _I2C2_Interrupt
   _Timer1_Count1ms
     i1_Buzzer_MiliSecond
   _Timer1_DetectAssignCount
   _Timer6_CheckFlag
   _mTouch_IntervalDecrement
   _mTouch_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      D5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     45      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3D       8       76.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      D5      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Jun 27 20:13:24 2017

                   _LCD_CursorHome 0D92           __end_of_Timer1_StopCount 0D26  
                      __CFG_CP$OFF 0000                                 l74 0690  
                               l91 04B3                                 l78 06C1  
                   I2C2_Transmit@i 0025              ??_I2C_CommonInterrupt 0077  
              ___wmul@multiplicand 0022                                l100 04DC  
                              l109 04F9                                l191 0E3C  
                              l543 0084                                l712 0EB5  
                              l560 0127                                l570 0186  
                              l554 00CE                                l557 00F0  
                              l559 00D0                                l587 0225  
                              _GIE 005F                                _PR2 001B  
                  _Buzzer_Count1ms 0DFA                       __CFG_CPD$OFF 0000  
                              _PR6 041D                       __CFG_BORV$LO 0000  
                              wreg 0009                         _Basic_Init 0DB2  
                     __CFG_LVP$OFF 0000         ??_Timer1_DetectAssignCount 0076  
                             l3001 0E36                               l3011 0E72  
                             l3005 0E5C                               l3009 0E6D  
                             l3053 0EAF                               l3071 06D1  
                             l3047 0D80                               l3073 06DF  
                             l3081 0702                               l3401 01BE  
                             l3403 01C2                               l3411 01D7  
                             l3331 009F                               l3309 0682  
                             l3077 06F7                               l3341 00D2  
                             l3325 0089                               l3407 01CF  
                             l3327 0092                               l3319 007F  
                             l3417 01DD                               l3363 0136  
                             l3419 0063                               l3373 014D  
                             l3349 0101                               l2903 04BF  
                             l3367 0147                               l2921 051B  
                             l2905 04C3                               l3297 0648  
                             l3481 040B                               l2907 04EA  
                             l3395 01AF                               l3387 01A2  
                             l3379 017A                               l3491 0467  
                             l3483 040F                               l3475 03FE  
                             l2861 06A5                               l2917 04FF  
                             l2925 051E                               l3389 01A5  
                             l3493 0470                               l3469 03ED  
                             l2863 06A7                               l2855 069A  
                             l2919 0516                               l2927 0527  
                             l3495 0479                               l2873 06B6  
                             l2881 0496                               l2883 04A4  
                             l2955 0FA5                               l3499 0482  
                             l2877 06B8                               l2893 04C7  
                             l2973 05FE                               l2983 062C  
                             l2975 060C                               l2959 0FAF  
                             l2987 0637                               l2997 0E29  
                ?_DAC_WriteVoltage 0030                               STR_1 028F  
                             STR_2 03B2                               STR_3 026C  
                             STR_4 027A                               STR_5 02B1  
                             STR_6 0285                               STR_7 0399  
                             STR_8 0349                               STR_9 039E  
                             u3007 054C                               u3017 0561  
                             u3027 0576                               u2405 0752  
                             u3037 0DAC                               u3047 0E22  
                             u3057 0D9C                               u2505 062D  
                             u2425 0FB0                               u3067 074B  
                             u2435 0FB7                               u2605 06D4  
                             u2465 0601                               u2625 06ED  
                             u2635 06F8                               u2485 060D  
                             u2565 0EB6                               u2655 0E17  
                             u2495 0621                               u2575 0EBB  
                             u2815 0195                               u2675 0668  
                             _PEIE 005E                               u2775 0170  
                             u2997 0533              Buzzer_MiliSecond@time 0020  
                             _TMR0 0015                               _TMR1 0016  
                             _TMR2 001A                               _TMR6 041C  
                             _WPUB 020D                       __CFG_WRT$OFF 0000  
               ??_DAC_WriteVoltage 0032                               _cnts 00A0  
                             _main 03B7                               _mode 006D  
                 __end_of_I2C_Init 0E3F                               _tcnt 0065  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                      __CFG_BOREN$ON 0000  
                  ??_I2C2_Transmit 0022                               start 002B  
                    __CFG_IESO$OFF 0000                    __end_of_Handler 002B  
           __end_of_LCD_CursorHome 0DA2                      _LCD_WriteData 0748  
                    __CFG_MCLRE$ON 0000                   ??_I2C2_Interrupt 0076  
         __end_of_LCD_DisplayClear 0DB2              __size_of_I2C_Transmit 001B  
                 __end_of_LCD_Init 0599                      __CFG_PLLEN$ON 0000  
                            ?_main 0076                              STR_10 034F  
                            STR_11 03A3                              STR_20 0343  
                            STR_12 0355                              STR_21 0394  
                            STR_13 03A8                              STR_30 02E3  
                            STR_22 037B                              STR_14 035B  
                            STR_31 02F1                              STR_23 0376  
                            STR_15 03AD                              STR_32 02B9  
                            STR_24 0385                              STR_40 0371  
                            STR_16 0361                              STR_33 02FF  
                            STR_25 0337                              STR_41 031F  
                            STR_17 038A                      __CFG_WDTE$OFF 0000  
                            STR_34 02A9                              STR_26 030D  
                            STR_50 02C0                              STR_42 0325  
                            STR_18 033D                              STR_35 02A1  
                            STR_27 0319                              STR_51 02C7  
                            STR_43 032B                              STR_19 038F  
                            STR_36 0299                              STR_28 0331  
                            STR_44 0313                              STR_29 02EA  
                            STR_45 02CE                              STR_37 0367  
                            STR_46 02F8                              STR_38 036C  
                            STR_47 02D5                              STR_39 0380  
                            STR_48 02DC                              STR_49 0306  
                  __end_of___lldiv 0640                              _T1CON 0018  
                  __end_of___llmod 070B                              _T2CON 001C  
                            _LATA3 0863                              _LATA4 0864  
                            _LATA6 0866                              _T6CON 041E  
      __size_of_Timer1_ClearRecord 001C                              i1l157 05BC  
                            i1l510 0D8C                              i1l505 0024  
                            i1l509 0D87                              _PORTA 000C  
                            _PORTB 000D                              _TRISA 008C  
                            _TRISB 008D                  I2C2_Transmit@size 0021  
              ___lmul@multiplicand 0024                      __CFG_PWRTE$ON 0000  
                   __CFG_FCMEN$OFF 0000                    __end_of_dpowers 024E  
                            _count 0073                    __end_of_isdigit 0D82  
                ??_Timer1_Count1ms 0078                              _putch 0D3B  
                    ??_Buzzer_Init 0020              __end_of_Timer1_GetCPM 0F9C  
            __end_of_Timer1_GetCPS 0748        __size_of_Timer1_GetCountSum 0011  
                            status 0003                              wtemp0 007E  
                _Buzzer_MiliSecond 0D44                       _I2C_Transmit 0E59  
               _LCD_CursorPosition 0E0F                     ?_LCD_WriteData 0076  
               ?_Buzzer_MiliSecond 0020                   ??_DAC_Initialize 0030  
                  ?_LCD_CursorHome 0076                    __initialization 002D  
                     __end_of_main 0492            __end_of_Buzzer_Count1ms 0E0F  
              ?_LCD_CursorPosition 0023                ??_Buzzer_MiliSecond 0022  
                           ??_main 0061               __end_of_mTouch_Check 0684  
                      ?_Basic_Init 0076                             _BCL2IE 04A1  
                           _BCL2IF 00A1                   ___llmod@dividend 003E  
             __size_of_mTouch_Init 0013               __size_of_mTouch_Read 0025  
                           _CCPR2L 0298               ??_LCD_CursorPosition 0024  
                           _ANSELA 018C                             ?_putch 0076  
                           _ANSELB 018D                             _T1GCON 0019  
                           i1l2321 0E09                             i1l2163 05A6  
                           i1l2171 05AF                             i1l2191 05E1  
                           i1l2183 05C6                             i1l2511 0FEC  
                           i1l2193 05E3                             i1l2195 05E5  
                           i1l2189 05DC                             i1l2519 0FFC  
                           i1l2537 0E57                             i1l1673 0D57  
                           i1l2835 0012                 I2C2_Transmit@i_172 0026  
                  _mTouch_Interval 0070          __end_of_Buzzer_MiliSecond 0D4E  
                           u144_25 0E88                             _OSCCON 0099  
               I2C2_Transmit@pData 0020                             _TMR1IE 0488  
                           _TMR1IF 0088                          ??_Handler 007B  
                           _TMR6IE 049B                             _TMR1ON 00C0  
                           _TMR6IF 009B                             _SSP2IE 04A0  
                           _SSP2IF 00A0           _mTouch_IntervalDecrement 0D82  
                ?_Timer1_GetMinute 0076                  ?_Timer1_GetSecond 0076  
                  _mTouch_PortInit 0D66                      ??_Timer1_Init 0020  
              __end_of_Buzzer_Init 0F74                      ??_Timer6_Init 0020  
               ??_Timer1_GetMinute 0020                 ??_Timer1_GetSecond 0020  
                           ___lmul 0F9C                             ___wmul 0EAC  
                        ??___lldiv 0034                          ??___llmod 0042  
                           _printf 005E                   I2C_Transmit@I2Cx 002E  
                        ??_isdigit 0020                          ?_I2C_Init 0025  
                           putch@c 0023                   I2C_Transmit@size 002A  
          __end_of__initialization 005A                          ?_LCD_Init 0076  
                  ??_LCD_WriteData 0020                  ?_Timer6_CheckFlag 0076  
     __size_ofi1_Buzzer_MiliSecond 0009                         _VoltageReg 00BD  
               ??_Timer6_CheckFlag 0076                 Buzzer_SetDuty@duty 0076  
                   __pcstackCOMMON 0076                __size_of_Basic_Init 0011  
                     __pidataBANK1 0EC8                       __pidataBANK2 0785  
                 ?_Buzzer_Count1ms 0076                  ?_Timer1_StopCount 0076  
                    __end_of_putch 0D44                __end_of_Timer1_Init 0F27  
              __end_of_Timer6_Init 0DE7                 ??_Timer1_StopCount 0020  
        Buzzer_SetDuty@CCP2CON_Pre 007A                         ??_I2C_Init 0028  
                          ??_putch 0023            __end_of_mTouch_PortInit 0D73  
                       __pbssBANK0 0065                         __pbssBANK1 00A0  
       __size_of_Buzzer_MiliSecond 000A                        _Buzzer_Init 0F4C  
                       ??_LCD_Init 0024            __size_of_Buzzer_SetDuty 001C  
                    _DAC_DataTable 024E                       I2C_Init@I2Cx 002A  
      __end_of_I2C_CommonInterrupt 0D1D                       I2C_Init@mode 0026  
                       __pmaintext 03B7                            ?___lmul 0020  
                          ?___wmul 0020          __size_of_DAC_WriteVoltage 003A  
                       __pintentry 0004              __size_of_mTouch_Check 0044  
                          _CCP2CON 029A                  ?_LCD_DisplayClear 0076  
                   ___lmul@product 0028                            _APFCON0 011D  
                          _APFCON1 011E                            _CCPTMRS 029E  
                          ?_printf 0046                    _Timer1_Count1ms 0FCC  
               ??_LCD_DisplayClear 0023                            _CPSCON0 001E  
                          _CPSCON1 001F                            _SSP2ADD 021A  
                          _SSP2BUF 0219                            _SSP2MSK 021B  
              I2C2_Transmit@result 0027                   ??_LCD_CursorHome 0023  
                          _Handler 0004                 mTouch_Read@channel 0075  
                     _mTouch_Check 0640              __end_of_I2C2_Transmit 052A  
                      _Timer1_Init 0F06                        _Timer6_Init 0DD4  
__size_of_Timer1_DetectAssignCount 001A                    __size_of___lmul 0030  
        ?_Timer1_DetectAssignCount 0076                            ___lldiv 05ED  
                  __size_of___wmul 001C                            ___llmod 06C8  
                  __CFG_STVREN$OFF 0000         __end_of_Timer1_ClearRecord 0EAC  
                          __ptext1 005E                            __ptext2 0D3B  
                          __ptext3 0D73                            __ptext4 0EAC  
                          __ptext5 06C8                            __ptext6 0DE7  
                          __ptext7 0D66                            __ptext8 0640  
                          __ptext9 0D44                    __size_of_printf 01C8  
                          _dpowers 0226                            _isdigit 0D73  
                     ??_Basic_Init 0020         ??_mTouch_IntervalDecrement 0076  
                          clrloop0 0D27         __end_of_Timer1_GetCountSum 0DD4  
             end_of_initialization 005A                   ?_mTouch_PortInit 0076  
                          init_ram 0D2C                            initloop 0D2D  
                    ?_I2C2_PinInit 0076                        _I2C2_Config 00AA  
                  ___lldiv@divisor 002C                      ?_I2C2_Setting 0021  
                  ___lldiv@counter 0039                  I2C_Transmit@pData 0029  
          __end_of_Timer1_Count1ms 1000                            printf@c 0060  
                          printf@f 0046                 __end_of_Basic_Init 0DC3  
                 _DAC_VoltageTable 00BF                       __pstringtext 0226  
           __size_of_Timer1_GetCPM 0028             __size_of_Timer1_GetCPS 003D  
        __size_of_Timer1_GetMinute 0003          __size_of_Timer1_GetSecond 0003  
              i1_Buzzer_MiliSecond 0D32                   __CFG_FOSC$INTOSC 0000  
                    ??_mTouch_Init 0021                      ??_mTouch_Read 0076  
          __size_of_I2C2_Interrupt 0054                  __size_of_I2C_Init 0019  
      __size_of_LCD_CursorPosition 0017                     ??_I2C2_PinInit 0020  
                   _Buzzer_SetDuty 0E74               ?i1_Buzzer_MiliSecond 0076  
                      printf@width 005E                     ??_I2C2_Setting 0023  
                    _H7826_01_Gain 0120                  __size_of_LCD_Init 006F  
                _Timer1_StartCount 07FB                   _DAC_WriteVoltage 07C1  
               ?_Timer1_StartCount 0076                     __end_of___lmul 0FCC  
                   __end_of___wmul 0EC8                          _ConfigReg 006F  
        __size_of_Timer6_CheckFlag 000B                ??_Timer1_StartCount 0020  
          __size_of_DAC_Initialize 0020                     __end_of_printf 0226  
              start_initialization 002D          __size_of_Timer1_StopCount 0003  
           __end_of_Buzzer_SetDuty 0E90                       ?_Buzzer_Init 0076  
              __end_of_mTouch_Init 0DFA                __end_of_mTouch_Read 0F4C  
                    _Timer1_GetCPM 0F74                      _Timer1_GetCPS 070B  
            ??i1_Buzzer_MiliSecond 0078                I2C2_Setting@address 0024  
                  ___llmod@divisor 003A          __end_of_Timer1_StartCount 0800  
                  ___llmod@counter 0043               LCD_CursorPosition@tx 0025  
             LCD_CursorPosition@ty 0023              __end_of_LCD_WriteData 0785  
                 ?_Timer1_Count1ms 0076                           ??___lmul 0028  
                         ??___wmul 0024                        __pdataBANK1 00BF  
                      __pdataBANK2 0120                           ??_printf 0050  
         __size_of_Buzzer_Count1ms 0015                        __pbssCOMMON 0070  
                        ___latbits 0001                      __pcstackBANK0 0020  
 __end_of_mTouch_IntervalDecrement 0D92          __size_of_LCD_DisplayClear 0010  
                  ?_Buzzer_SetDuty 0076                 _Timer1_GetCPM$1073 0042  
                   ?_Timer1_GetCPM 003E                     ?_Timer1_GetCPS 003A  
 __end_of_Timer1_DetectAssignCount 0E59                    I2C_Init@address 0025  
                         ?_Handler 0076                      ?_I2C_Transmit 0028  
                    I2C_Init@Speed 0027                       ?_Timer1_Init 0076  
            DAC_WriteVoltage@volue 0030                       ?_Timer6_Init 0076  
                         ?___lldiv 002C                           ?___llmod 003A  
     __size_of_I2C_CommonInterrupt 0003                   _Timer1_GetMinute 0D1D  
                 _Timer1_GetSecond 0D20               __end_of_I2C2_PinInit 0D66  
                         ?_isdigit 0076                           _I2C_Init 0E26  
             __end_of_I2C2_Setting 06C8                     _I2C2_Interrupt 0599  
                       _H7826_Gain 013E                        _mTouch_Init 0DE7  
                      _mTouch_Read 0F27                 _Timer1_ClearRecord 0E90  
                   __size_of_putch 0009                           _LCD_Init 052A  
                   ___wmul@product 0024                           _CPS_Data 00A4  
                   ??_I2C_Transmit 002B                ?_Timer1_ClearRecord 0076  
       __size_of_Timer1_StartCount 0005                          clear_ram0 0D26  
               _Timer1_GetCountSum 0DC3               I2C2_Transmit@address 0024  
                         _SSP2CON1 021D                           _SSP2CON2 021E  
                         _SSP2STAT 021C                ?_Timer1_GetCountSum 0020  
                 _Timer6_CheckFlag 0D4E                  ___wmul@multiplier 0020  
                 mTouch_Check@chan 0027                     _DAC_Initialize 0EE6  
             ??_Timer1_ClearRecord 0020             __end_of_I2C2_Interrupt 05ED  
                       printf@flag 005D                         printf@prec 0056  
           __size_of_I2C2_Transmit 0098                    ??_Timer1_GetCPM 0042  
                 _Timer1_StopCount 0D23                    ??_Timer1_GetCPS 003E  
         __end_of_DAC_WriteVoltage 07FB                        _CPS_PreData 00A7  
                ___lmul@multiplier 0020                  ??_Buzzer_Count1ms 007B  
             ??_Timer1_GetCountSum 0024                   __size_of_Handler 0027  
             __size_of_Buzzer_Init 0028           _Timer1_DetectAssignCount 0E3F  
         __size_of_mTouch_PortInit 000D  __size_of_mTouch_IntervalDecrement 0010  
        ?_mTouch_IntervalDecrement 0076            __size_of_LCD_CursorHome 0010  
           __end_of_DAC_Initialize 0F06                   __size_of___lldiv 0053  
                 __size_of___llmod 0043                 LCD_WriteData@point 0022  
                      _isdigit$786 0020                    ?_I2C2_Interrupt 0076  
                 __size_of_isdigit 000F         __end_of_LCD_CursorPosition 0E26  
                         __ptext10 0DD4                           __ptext11 0D23  
                         __ptext20 0F9C                           __ptext12 07FB  
                         __ptext21 05ED                           __ptext13 0E90  
                         __ptext30 0492                           __ptext22 052A  
                         __ptext14 0F06                           __ptext31 0E26  
                         __ptext23 0DA2                           __ptext15 0D20  
                         __ptext40 0E3F                           __ptext32 0684  
                         __ptext24 0E0F                           __ptext16 0D1D  
                         __ptext41 0FCC                           __ptext33 0D59  
                         __ptext25 0D92                           __ptext17 0DC3  
                         __ptext42 0D32                           __ptext34 0F4C  
                         __ptext26 0748                           __ptext18 0F74  
                         __ptext43 0D1A                           __ptext35 0DB2  
                         __ptext27 07C1                           __ptext19 070B  
                         __ptext44 0599                           __ptext28 0EE6  
                         __ptext45 0DFA                           __ptext37 0F27  
                         __ptext29 0E59                           __ptext46 0E74  
                         __ptext38 0D82                           __ptext39 0D4E  
                 _LCD_DisplayClear 0DA2                       _SSP2CON1bits 021D  
                     _SSP2CON2bits 021E              __end_of_DAC_DataTable 026C  
                    __size_of_main 00DB                      _I2C2_Transmit 0492  
             __size_of_Timer1_Init 0021                           int$flags 007E  
            __size_of_I2C2_PinInit 000D                I2C_Transmit@address 0028  
             __size_of_Timer6_Init 0013                    ?_DAC_Initialize 0076  
                        printf@val 0058              __size_of_I2C2_Setting 0044  
                     _SSP2STATbits 021C               __end_of_I2C_Transmit 0E74  
                I2C2_Setting@Speed 0022                   ??_Buzzer_SetDuty 0078  
      __end_ofi1_Buzzer_MiliSecond 0D3B                           isdigit@c 0021  
          i1Buzzer_MiliSecond@time 0076                           intlevel1 0000  
              _I2C_CommonInterrupt 0D1A                   ___lldiv@dividend 0030  
         __end_of_Timer1_GetMinute 0D20           __end_of_Timer1_GetSecond 0D23  
                __CFG_CLKOUTEN$OFF 0000                       _I2C2_PinInit 0D59  
                    ?_mTouch_Check 0076                     ?_I2C2_Transmit 0020  
                     _I2C2_Setting 0684                           printf@ap 005C  
               I2C_Transmit@result 002F                  ??_mTouch_PortInit 0020  
                 I2C2_Setting@mode 0021               ?_I2C_CommonInterrupt 0076  
                       _OPTION_REG 0095           __size_of_Timer1_Count1ms 0034  
                 ___lldiv@quotient 0035                       ?_mTouch_Init 0076  
                     ?_mTouch_Read 0076             __size_of_LCD_WriteData 003D  
         __end_of_Timer6_CheckFlag 0D59                     ??_mTouch_Check 0022  
