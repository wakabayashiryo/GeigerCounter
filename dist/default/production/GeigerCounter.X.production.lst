

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Jul  4 08:35:08 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 1.41
    78                           ; Generated 25/01/2017 GMT
    79                           ; 
    80                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F1827 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  0111                     	;# 
   160  0112                     	;# 
   161  0113                     	;# 
   162  0114                     	;# 
   163  0115                     	;# 
   164  0116                     	;# 
   165  0117                     	;# 
   166  0118                     	;# 
   167  0119                     	;# 
   168  011A                     	;# 
   169  011B                     	;# 
   170  011D                     	;# 
   171  011E                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0191                     	;# 
   175  0191                     	;# 
   176  0192                     	;# 
   177  0193                     	;# 
   178  0193                     	;# 
   179  0193                     	;# 
   180  0194                     	;# 
   181  0195                     	;# 
   182  0196                     	;# 
   183  0199                     	;# 
   184  019A                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019C                     	;# 
   190  019C                     	;# 
   191  019D                     	;# 
   192  019E                     	;# 
   193  019F                     	;# 
   194  020C                     	;# 
   195  020D                     	;# 
   196  0211                     	;# 
   197  0211                     	;# 
   198  0212                     	;# 
   199  0212                     	;# 
   200  0213                     	;# 
   201  0213                     	;# 
   202  0214                     	;# 
   203  0214                     	;# 
   204  0215                     	;# 
   205  0215                     	;# 
   206  0215                     	;# 
   207  0216                     	;# 
   208  0216                     	;# 
   209  0217                     	;# 
   210  0217                     	;# 
   211  0219                     	;# 
   212  021A                     	;# 
   213  021B                     	;# 
   214  021C                     	;# 
   215  021D                     	;# 
   216  021E                     	;# 
   217  021F                     	;# 
   218  0291                     	;# 
   219  0291                     	;# 
   220  0292                     	;# 
   221  0293                     	;# 
   222  0294                     	;# 
   223  0295                     	;# 
   224  0295                     	;# 
   225  0296                     	;# 
   226  0298                     	;# 
   227  0298                     	;# 
   228  0299                     	;# 
   229  029A                     	;# 
   230  029B                     	;# 
   231  029C                     	;# 
   232  029C                     	;# 
   233  029D                     	;# 
   234  029E                     	;# 
   235  029E                     	;# 
   236  0311                     	;# 
   237  0311                     	;# 
   238  0312                     	;# 
   239  0313                     	;# 
   240  0318                     	;# 
   241  0318                     	;# 
   242  0319                     	;# 
   243  031A                     	;# 
   244  0394                     	;# 
   245  0395                     	;# 
   246  0396                     	;# 
   247  039A                     	;# 
   248  039C                     	;# 
   249  039D                     	;# 
   250  039E                     	;# 
   251  039F                     	;# 
   252  0415                     	;# 
   253  0416                     	;# 
   254  0417                     	;# 
   255  041C                     	;# 
   256  041D                     	;# 
   257  041E                     	;# 
   258  0FE4                     	;# 
   259  0FE5                     	;# 
   260  0FE6                     	;# 
   261  0FE7                     	;# 
   262  0FE8                     	;# 
   263  0FE9                     	;# 
   264  0FEA                     	;# 
   265  0FEB                     	;# 
   266  0FED                     	;# 
   267  0FEE                     	;# 
   268  0FEF                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0008                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000D                     	;# 
   283  0011                     	;# 
   284  0012                     	;# 
   285  0013                     	;# 
   286  0014                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0016                     	;# 
   290  0017                     	;# 
   291  0018                     	;# 
   292  0019                     	;# 
   293  001A                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001E                     	;# 
   297  001F                     	;# 
   298  008C                     	;# 
   299  008D                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  0111                     	;# 
   318  0112                     	;# 
   319  0113                     	;# 
   320  0114                     	;# 
   321  0115                     	;# 
   322  0116                     	;# 
   323  0117                     	;# 
   324  0118                     	;# 
   325  0119                     	;# 
   326  011A                     	;# 
   327  011B                     	;# 
   328  011D                     	;# 
   329  011E                     	;# 
   330  018C                     	;# 
   331  018D                     	;# 
   332  0191                     	;# 
   333  0191                     	;# 
   334  0192                     	;# 
   335  0193                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0194                     	;# 
   339  0195                     	;# 
   340  0196                     	;# 
   341  0199                     	;# 
   342  019A                     	;# 
   343  019B                     	;# 
   344  019B                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019C                     	;# 
   348  019C                     	;# 
   349  019D                     	;# 
   350  019E                     	;# 
   351  019F                     	;# 
   352  020C                     	;# 
   353  020D                     	;# 
   354  0211                     	;# 
   355  0211                     	;# 
   356  0212                     	;# 
   357  0212                     	;# 
   358  0213                     	;# 
   359  0213                     	;# 
   360  0214                     	;# 
   361  0214                     	;# 
   362  0215                     	;# 
   363  0215                     	;# 
   364  0215                     	;# 
   365  0216                     	;# 
   366  0216                     	;# 
   367  0217                     	;# 
   368  0217                     	;# 
   369  0219                     	;# 
   370  021A                     	;# 
   371  021B                     	;# 
   372  021C                     	;# 
   373  021D                     	;# 
   374  021E                     	;# 
   375  021F                     	;# 
   376  0291                     	;# 
   377  0291                     	;# 
   378  0292                     	;# 
   379  0293                     	;# 
   380  0294                     	;# 
   381  0295                     	;# 
   382  0295                     	;# 
   383  0296                     	;# 
   384  0298                     	;# 
   385  0298                     	;# 
   386  0299                     	;# 
   387  029A                     	;# 
   388  029B                     	;# 
   389  029C                     	;# 
   390  029C                     	;# 
   391  029D                     	;# 
   392  029E                     	;# 
   393  029E                     	;# 
   394  0311                     	;# 
   395  0311                     	;# 
   396  0312                     	;# 
   397  0313                     	;# 
   398  0318                     	;# 
   399  0318                     	;# 
   400  0319                     	;# 
   401  031A                     	;# 
   402  0394                     	;# 
   403  0395                     	;# 
   404  0396                     	;# 
   405  039A                     	;# 
   406  039C                     	;# 
   407  039D                     	;# 
   408  039E                     	;# 
   409  039F                     	;# 
   410  0415                     	;# 
   411  0416                     	;# 
   412  0417                     	;# 
   413  041C                     	;# 
   414  041D                     	;# 
   415  041E                     	;# 
   416  0FE4                     	;# 
   417  0FE5                     	;# 
   418  0FE6                     	;# 
   419  0FE7                     	;# 
   420  0FE8                     	;# 
   421  0FE9                     	;# 
   422  0FEA                     	;# 
   423  0FEB                     	;# 
   424  0FED                     	;# 
   425  0FEE                     	;# 
   426  0FEF                     	;# 
   427  0000                     	;# 
   428  0001                     	;# 
   429  0002                     	;# 
   430  0003                     	;# 
   431  0004                     	;# 
   432  0005                     	;# 
   433  0006                     	;# 
   434  0007                     	;# 
   435  0008                     	;# 
   436  0009                     	;# 
   437  000A                     	;# 
   438  000B                     	;# 
   439  000C                     	;# 
   440  000D                     	;# 
   441  0011                     	;# 
   442  0012                     	;# 
   443  0013                     	;# 
   444  0014                     	;# 
   445  0015                     	;# 
   446  0016                     	;# 
   447  0016                     	;# 
   448  0017                     	;# 
   449  0018                     	;# 
   450  0019                     	;# 
   451  001A                     	;# 
   452  001B                     	;# 
   453  001C                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  008C                     	;# 
   457  008D                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0094                     	;# 
   462  0095                     	;# 
   463  0096                     	;# 
   464  0097                     	;# 
   465  0098                     	;# 
   466  0099                     	;# 
   467  009A                     	;# 
   468  009B                     	;# 
   469  009B                     	;# 
   470  009C                     	;# 
   471  009D                     	;# 
   472  009E                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  0111                     	;# 
   476  0112                     	;# 
   477  0113                     	;# 
   478  0114                     	;# 
   479  0115                     	;# 
   480  0116                     	;# 
   481  0117                     	;# 
   482  0118                     	;# 
   483  0119                     	;# 
   484  011A                     	;# 
   485  011B                     	;# 
   486  011D                     	;# 
   487  011E                     	;# 
   488  018C                     	;# 
   489  018D                     	;# 
   490  0191                     	;# 
   491  0191                     	;# 
   492  0192                     	;# 
   493  0193                     	;# 
   494  0193                     	;# 
   495  0193                     	;# 
   496  0194                     	;# 
   497  0195                     	;# 
   498  0196                     	;# 
   499  0199                     	;# 
   500  019A                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019C                     	;# 
   506  019C                     	;# 
   507  019D                     	;# 
   508  019E                     	;# 
   509  019F                     	;# 
   510  020C                     	;# 
   511  020D                     	;# 
   512  0211                     	;# 
   513  0211                     	;# 
   514  0212                     	;# 
   515  0212                     	;# 
   516  0213                     	;# 
   517  0213                     	;# 
   518  0214                     	;# 
   519  0214                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0216                     	;# 
   524  0216                     	;# 
   525  0217                     	;# 
   526  0217                     	;# 
   527  0219                     	;# 
   528  021A                     	;# 
   529  021B                     	;# 
   530  021C                     	;# 
   531  021D                     	;# 
   532  021E                     	;# 
   533  021F                     	;# 
   534  0291                     	;# 
   535  0291                     	;# 
   536  0292                     	;# 
   537  0293                     	;# 
   538  0294                     	;# 
   539  0295                     	;# 
   540  0295                     	;# 
   541  0296                     	;# 
   542  0298                     	;# 
   543  0298                     	;# 
   544  0299                     	;# 
   545  029A                     	;# 
   546  029B                     	;# 
   547  029C                     	;# 
   548  029C                     	;# 
   549  029D                     	;# 
   550  029E                     	;# 
   551  029E                     	;# 
   552  0311                     	;# 
   553  0311                     	;# 
   554  0312                     	;# 
   555  0313                     	;# 
   556  0318                     	;# 
   557  0318                     	;# 
   558  0319                     	;# 
   559  031A                     	;# 
   560  0394                     	;# 
   561  0395                     	;# 
   562  0396                     	;# 
   563  039A                     	;# 
   564  039C                     	;# 
   565  039D                     	;# 
   566  039E                     	;# 
   567  039F                     	;# 
   568  0415                     	;# 
   569  0416                     	;# 
   570  0417                     	;# 
   571  041C                     	;# 
   572  041D                     	;# 
   573  041E                     	;# 
   574  0FE4                     	;# 
   575  0FE5                     	;# 
   576  0FE6                     	;# 
   577  0FE7                     	;# 
   578  0FE8                     	;# 
   579  0FE9                     	;# 
   580  0FEA                     	;# 
   581  0FEB                     	;# 
   582  0FED                     	;# 
   583  0FEE                     	;# 
   584  0FEF                     	;# 
   585  0000                     	;# 
   586  0001                     	;# 
   587  0002                     	;# 
   588  0003                     	;# 
   589  0004                     	;# 
   590  0005                     	;# 
   591  0006                     	;# 
   592  0007                     	;# 
   593  0008                     	;# 
   594  0009                     	;# 
   595  000A                     	;# 
   596  000B                     	;# 
   597  000C                     	;# 
   598  000D                     	;# 
   599  0011                     	;# 
   600  0012                     	;# 
   601  0013                     	;# 
   602  0014                     	;# 
   603  0015                     	;# 
   604  0016                     	;# 
   605  0016                     	;# 
   606  0017                     	;# 
   607  0018                     	;# 
   608  0019                     	;# 
   609  001A                     	;# 
   610  001B                     	;# 
   611  001C                     	;# 
   612  001E                     	;# 
   613  001F                     	;# 
   614  008C                     	;# 
   615  008D                     	;# 
   616  0091                     	;# 
   617  0092                     	;# 
   618  0093                     	;# 
   619  0094                     	;# 
   620  0095                     	;# 
   621  0096                     	;# 
   622  0097                     	;# 
   623  0098                     	;# 
   624  0099                     	;# 
   625  009A                     	;# 
   626  009B                     	;# 
   627  009B                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  010C                     	;# 
   632  010D                     	;# 
   633  0111                     	;# 
   634  0112                     	;# 
   635  0113                     	;# 
   636  0114                     	;# 
   637  0115                     	;# 
   638  0116                     	;# 
   639  0117                     	;# 
   640  0118                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011B                     	;# 
   644  011D                     	;# 
   645  011E                     	;# 
   646  018C                     	;# 
   647  018D                     	;# 
   648  0191                     	;# 
   649  0191                     	;# 
   650  0192                     	;# 
   651  0193                     	;# 
   652  0193                     	;# 
   653  0193                     	;# 
   654  0194                     	;# 
   655  0195                     	;# 
   656  0196                     	;# 
   657  0199                     	;# 
   658  019A                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019C                     	;# 
   664  019C                     	;# 
   665  019D                     	;# 
   666  019E                     	;# 
   667  019F                     	;# 
   668  020C                     	;# 
   669  020D                     	;# 
   670  0211                     	;# 
   671  0211                     	;# 
   672  0212                     	;# 
   673  0212                     	;# 
   674  0213                     	;# 
   675  0213                     	;# 
   676  0214                     	;# 
   677  0214                     	;# 
   678  0215                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0216                     	;# 
   682  0216                     	;# 
   683  0217                     	;# 
   684  0217                     	;# 
   685  0219                     	;# 
   686  021A                     	;# 
   687  021B                     	;# 
   688  021C                     	;# 
   689  021D                     	;# 
   690  021E                     	;# 
   691  021F                     	;# 
   692  0291                     	;# 
   693  0291                     	;# 
   694  0292                     	;# 
   695  0293                     	;# 
   696  0294                     	;# 
   697  0295                     	;# 
   698  0295                     	;# 
   699  0296                     	;# 
   700  0298                     	;# 
   701  0298                     	;# 
   702  0299                     	;# 
   703  029A                     	;# 
   704  029B                     	;# 
   705  029C                     	;# 
   706  029C                     	;# 
   707  029D                     	;# 
   708  029E                     	;# 
   709  029E                     	;# 
   710  0311                     	;# 
   711  0311                     	;# 
   712  0312                     	;# 
   713  0313                     	;# 
   714  0318                     	;# 
   715  0318                     	;# 
   716  0319                     	;# 
   717  031A                     	;# 
   718  0394                     	;# 
   719  0395                     	;# 
   720  0396                     	;# 
   721  039A                     	;# 
   722  039C                     	;# 
   723  039D                     	;# 
   724  039E                     	;# 
   725  039F                     	;# 
   726  0415                     	;# 
   727  0416                     	;# 
   728  0417                     	;# 
   729  041C                     	;# 
   730  041D                     	;# 
   731  041E                     	;# 
   732  0FE4                     	;# 
   733  0FE5                     	;# 
   734  0FE6                     	;# 
   735  0FE7                     	;# 
   736  0FE8                     	;# 
   737  0FE9                     	;# 
   738  0FEA                     	;# 
   739  0FEB                     	;# 
   740  0FED                     	;# 
   741  0FEE                     	;# 
   742  0FEF                     	;# 
   743  0000                     	;# 
   744  0001                     	;# 
   745  0002                     	;# 
   746  0003                     	;# 
   747  0004                     	;# 
   748  0005                     	;# 
   749  0006                     	;# 
   750  0007                     	;# 
   751  0008                     	;# 
   752  0009                     	;# 
   753  000A                     	;# 
   754  000B                     	;# 
   755  000C                     	;# 
   756  000D                     	;# 
   757  0011                     	;# 
   758  0012                     	;# 
   759  0013                     	;# 
   760  0014                     	;# 
   761  0015                     	;# 
   762  0016                     	;# 
   763  0016                     	;# 
   764  0017                     	;# 
   765  0018                     	;# 
   766  0019                     	;# 
   767  001A                     	;# 
   768  001B                     	;# 
   769  001C                     	;# 
   770  001E                     	;# 
   771  001F                     	;# 
   772  008C                     	;# 
   773  008D                     	;# 
   774  0091                     	;# 
   775  0092                     	;# 
   776  0093                     	;# 
   777  0094                     	;# 
   778  0095                     	;# 
   779  0096                     	;# 
   780  0097                     	;# 
   781  0098                     	;# 
   782  0099                     	;# 
   783  009A                     	;# 
   784  009B                     	;# 
   785  009B                     	;# 
   786  009C                     	;# 
   787  009D                     	;# 
   788  009E                     	;# 
   789  010C                     	;# 
   790  010D                     	;# 
   791  0111                     	;# 
   792  0112                     	;# 
   793  0113                     	;# 
   794  0114                     	;# 
   795  0115                     	;# 
   796  0116                     	;# 
   797  0117                     	;# 
   798  0118                     	;# 
   799  0119                     	;# 
   800  011A                     	;# 
   801  011B                     	;# 
   802  011D                     	;# 
   803  011E                     	;# 
   804  018C                     	;# 
   805  018D                     	;# 
   806  0191                     	;# 
   807  0191                     	;# 
   808  0192                     	;# 
   809  0193                     	;# 
   810  0193                     	;# 
   811  0193                     	;# 
   812  0194                     	;# 
   813  0195                     	;# 
   814  0196                     	;# 
   815  0199                     	;# 
   816  019A                     	;# 
   817  019B                     	;# 
   818  019B                     	;# 
   819  019B                     	;# 
   820  019B                     	;# 
   821  019C                     	;# 
   822  019C                     	;# 
   823  019D                     	;# 
   824  019E                     	;# 
   825  019F                     	;# 
   826  020C                     	;# 
   827  020D                     	;# 
   828  0211                     	;# 
   829  0211                     	;# 
   830  0212                     	;# 
   831  0212                     	;# 
   832  0213                     	;# 
   833  0213                     	;# 
   834  0214                     	;# 
   835  0214                     	;# 
   836  0215                     	;# 
   837  0215                     	;# 
   838  0215                     	;# 
   839  0216                     	;# 
   840  0216                     	;# 
   841  0217                     	;# 
   842  0217                     	;# 
   843  0219                     	;# 
   844  021A                     	;# 
   845  021B                     	;# 
   846  021C                     	;# 
   847  021D                     	;# 
   848  021E                     	;# 
   849  021F                     	;# 
   850  0291                     	;# 
   851  0291                     	;# 
   852  0292                     	;# 
   853  0293                     	;# 
   854  0294                     	;# 
   855  0295                     	;# 
   856  0295                     	;# 
   857  0296                     	;# 
   858  0298                     	;# 
   859  0298                     	;# 
   860  0299                     	;# 
   861  029A                     	;# 
   862  029B                     	;# 
   863  029C                     	;# 
   864  029C                     	;# 
   865  029D                     	;# 
   866  029E                     	;# 
   867  029E                     	;# 
   868  0311                     	;# 
   869  0311                     	;# 
   870  0312                     	;# 
   871  0313                     	;# 
   872  0318                     	;# 
   873  0318                     	;# 
   874  0319                     	;# 
   875  031A                     	;# 
   876  0394                     	;# 
   877  0395                     	;# 
   878  0396                     	;# 
   879  039A                     	;# 
   880  039C                     	;# 
   881  039D                     	;# 
   882  039E                     	;# 
   883  039F                     	;# 
   884  0415                     	;# 
   885  0416                     	;# 
   886  0417                     	;# 
   887  041C                     	;# 
   888  041D                     	;# 
   889  041E                     	;# 
   890  0FE4                     	;# 
   891  0FE5                     	;# 
   892  0FE6                     	;# 
   893  0FE7                     	;# 
   894  0FE8                     	;# 
   895  0FE9                     	;# 
   896  0FEA                     	;# 
   897  0FEB                     	;# 
   898  0FED                     	;# 
   899  0FEE                     	;# 
   900  0FEF                     	;# 
   901  0000                     	;# 
   902  0001                     	;# 
   903  0002                     	;# 
   904  0003                     	;# 
   905  0004                     	;# 
   906  0005                     	;# 
   907  0006                     	;# 
   908  0007                     	;# 
   909  0008                     	;# 
   910  0009                     	;# 
   911  000A                     	;# 
   912  000B                     	;# 
   913  000C                     	;# 
   914  000D                     	;# 
   915  0011                     	;# 
   916  0012                     	;# 
   917  0013                     	;# 
   918  0014                     	;# 
   919  0015                     	;# 
   920  0016                     	;# 
   921  0016                     	;# 
   922  0017                     	;# 
   923  0018                     	;# 
   924  0019                     	;# 
   925  001A                     	;# 
   926  001B                     	;# 
   927  001C                     	;# 
   928  001E                     	;# 
   929  001F                     	;# 
   930  008C                     	;# 
   931  008D                     	;# 
   932  0091                     	;# 
   933  0092                     	;# 
   934  0093                     	;# 
   935  0094                     	;# 
   936  0095                     	;# 
   937  0096                     	;# 
   938  0097                     	;# 
   939  0098                     	;# 
   940  0099                     	;# 
   941  009A                     	;# 
   942  009B                     	;# 
   943  009B                     	;# 
   944  009C                     	;# 
   945  009D                     	;# 
   946  009E                     	;# 
   947  010C                     	;# 
   948  010D                     	;# 
   949  0111                     	;# 
   950  0112                     	;# 
   951  0113                     	;# 
   952  0114                     	;# 
   953  0115                     	;# 
   954  0116                     	;# 
   955  0117                     	;# 
   956  0118                     	;# 
   957  0119                     	;# 
   958  011A                     	;# 
   959  011B                     	;# 
   960  011D                     	;# 
   961  011E                     	;# 
   962  018C                     	;# 
   963  018D                     	;# 
   964  0191                     	;# 
   965  0191                     	;# 
   966  0192                     	;# 
   967  0193                     	;# 
   968  0193                     	;# 
   969  0193                     	;# 
   970  0194                     	;# 
   971  0195                     	;# 
   972  0196                     	;# 
   973  0199                     	;# 
   974  019A                     	;# 
   975  019B                     	;# 
   976  019B                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019C                     	;# 
   980  019C                     	;# 
   981  019D                     	;# 
   982  019E                     	;# 
   983  019F                     	;# 
   984  020C                     	;# 
   985  020D                     	;# 
   986  0211                     	;# 
   987  0211                     	;# 
   988  0212                     	;# 
   989  0212                     	;# 
   990  0213                     	;# 
   991  0213                     	;# 
   992  0214                     	;# 
   993  0214                     	;# 
   994  0215                     	;# 
   995  0215                     	;# 
   996  0215                     	;# 
   997  0216                     	;# 
   998  0216                     	;# 
   999  0217                     	;# 
  1000  0217                     	;# 
  1001  0219                     	;# 
  1002  021A                     	;# 
  1003  021B                     	;# 
  1004  021C                     	;# 
  1005  021D                     	;# 
  1006  021E                     	;# 
  1007  021F                     	;# 
  1008  0291                     	;# 
  1009  0291                     	;# 
  1010  0292                     	;# 
  1011  0293                     	;# 
  1012  0294                     	;# 
  1013  0295                     	;# 
  1014  0295                     	;# 
  1015  0296                     	;# 
  1016  0298                     	;# 
  1017  0298                     	;# 
  1018  0299                     	;# 
  1019  029A                     	;# 
  1020  029B                     	;# 
  1021  029C                     	;# 
  1022  029C                     	;# 
  1023  029D                     	;# 
  1024  029E                     	;# 
  1025  029E                     	;# 
  1026  0311                     	;# 
  1027  0311                     	;# 
  1028  0312                     	;# 
  1029  0313                     	;# 
  1030  0318                     	;# 
  1031  0318                     	;# 
  1032  0319                     	;# 
  1033  031A                     	;# 
  1034  0394                     	;# 
  1035  0395                     	;# 
  1036  0396                     	;# 
  1037  039A                     	;# 
  1038  039C                     	;# 
  1039  039D                     	;# 
  1040  039E                     	;# 
  1041  039F                     	;# 
  1042  0415                     	;# 
  1043  0416                     	;# 
  1044  0417                     	;# 
  1045  041C                     	;# 
  1046  041D                     	;# 
  1047  041E                     	;# 
  1048  0FE4                     	;# 
  1049  0FE5                     	;# 
  1050  0FE6                     	;# 
  1051  0FE7                     	;# 
  1052  0FE8                     	;# 
  1053  0FE9                     	;# 
  1054  0FEA                     	;# 
  1055  0FEB                     	;# 
  1056  0FED                     	;# 
  1057  0FEE                     	;# 
  1058  0FEF                     	;# 
  1059  0000                     	;# 
  1060  0001                     	;# 
  1061  0002                     	;# 
  1062  0003                     	;# 
  1063  0004                     	;# 
  1064  0005                     	;# 
  1065  0006                     	;# 
  1066  0007                     	;# 
  1067  0008                     	;# 
  1068  0009                     	;# 
  1069  000A                     	;# 
  1070  000B                     	;# 
  1071  000C                     	;# 
  1072  000D                     	;# 
  1073  0011                     	;# 
  1074  0012                     	;# 
  1075  0013                     	;# 
  1076  0014                     	;# 
  1077  0015                     	;# 
  1078  0016                     	;# 
  1079  0016                     	;# 
  1080  0017                     	;# 
  1081  0018                     	;# 
  1082  0019                     	;# 
  1083  001A                     	;# 
  1084  001B                     	;# 
  1085  001C                     	;# 
  1086  001E                     	;# 
  1087  001F                     	;# 
  1088  008C                     	;# 
  1089  008D                     	;# 
  1090  0091                     	;# 
  1091  0092                     	;# 
  1092  0093                     	;# 
  1093  0094                     	;# 
  1094  0095                     	;# 
  1095  0096                     	;# 
  1096  0097                     	;# 
  1097  0098                     	;# 
  1098  0099                     	;# 
  1099  009A                     	;# 
  1100  009B                     	;# 
  1101  009B                     	;# 
  1102  009C                     	;# 
  1103  009D                     	;# 
  1104  009E                     	;# 
  1105  010C                     	;# 
  1106  010D                     	;# 
  1107  0111                     	;# 
  1108  0112                     	;# 
  1109  0113                     	;# 
  1110  0114                     	;# 
  1111  0115                     	;# 
  1112  0116                     	;# 
  1113  0117                     	;# 
  1114  0118                     	;# 
  1115  0119                     	;# 
  1116  011A                     	;# 
  1117  011B                     	;# 
  1118  011D                     	;# 
  1119  011E                     	;# 
  1120  018C                     	;# 
  1121  018D                     	;# 
  1122  0191                     	;# 
  1123  0191                     	;# 
  1124  0192                     	;# 
  1125  0193                     	;# 
  1126  0193                     	;# 
  1127  0193                     	;# 
  1128  0194                     	;# 
  1129  0195                     	;# 
  1130  0196                     	;# 
  1131  0199                     	;# 
  1132  019A                     	;# 
  1133  019B                     	;# 
  1134  019B                     	;# 
  1135  019B                     	;# 
  1136  019B                     	;# 
  1137  019C                     	;# 
  1138  019C                     	;# 
  1139  019D                     	;# 
  1140  019E                     	;# 
  1141  019F                     	;# 
  1142  020C                     	;# 
  1143  020D                     	;# 
  1144  0211                     	;# 
  1145  0211                     	;# 
  1146  0212                     	;# 
  1147  0212                     	;# 
  1148  0213                     	;# 
  1149  0213                     	;# 
  1150  0214                     	;# 
  1151  0214                     	;# 
  1152  0215                     	;# 
  1153  0215                     	;# 
  1154  0215                     	;# 
  1155  0216                     	;# 
  1156  0216                     	;# 
  1157  0217                     	;# 
  1158  0217                     	;# 
  1159  0219                     	;# 
  1160  021A                     	;# 
  1161  021B                     	;# 
  1162  021C                     	;# 
  1163  021D                     	;# 
  1164  021E                     	;# 
  1165  021F                     	;# 
  1166  0291                     	;# 
  1167  0291                     	;# 
  1168  0292                     	;# 
  1169  0293                     	;# 
  1170  0294                     	;# 
  1171  0295                     	;# 
  1172  0295                     	;# 
  1173  0296                     	;# 
  1174  0298                     	;# 
  1175  0298                     	;# 
  1176  0299                     	;# 
  1177  029A                     	;# 
  1178  029B                     	;# 
  1179  029C                     	;# 
  1180  029C                     	;# 
  1181  029D                     	;# 
  1182  029E                     	;# 
  1183  029E                     	;# 
  1184  0311                     	;# 
  1185  0311                     	;# 
  1186  0312                     	;# 
  1187  0313                     	;# 
  1188  0318                     	;# 
  1189  0318                     	;# 
  1190  0319                     	;# 
  1191  031A                     	;# 
  1192  0394                     	;# 
  1193  0395                     	;# 
  1194  0396                     	;# 
  1195  039A                     	;# 
  1196  039C                     	;# 
  1197  039D                     	;# 
  1198  039E                     	;# 
  1199  039F                     	;# 
  1200  0415                     	;# 
  1201  0416                     	;# 
  1202  0417                     	;# 
  1203  041C                     	;# 
  1204  041D                     	;# 
  1205  041E                     	;# 
  1206  0FE4                     	;# 
  1207  0FE5                     	;# 
  1208  0FE6                     	;# 
  1209  0FE7                     	;# 
  1210  0FE8                     	;# 
  1211  0FE9                     	;# 
  1212  0FEA                     	;# 
  1213  0FEB                     	;# 
  1214  0FED                     	;# 
  1215  0FEE                     	;# 
  1216  0FEF                     	;# 
  1217  0000                     	;# 
  1218  0001                     	;# 
  1219  0002                     	;# 
  1220  0003                     	;# 
  1221  0004                     	;# 
  1222  0005                     	;# 
  1223  0006                     	;# 
  1224  0007                     	;# 
  1225  0008                     	;# 
  1226  0009                     	;# 
  1227  000A                     	;# 
  1228  000B                     	;# 
  1229  000C                     	;# 
  1230  000D                     	;# 
  1231  0011                     	;# 
  1232  0012                     	;# 
  1233  0013                     	;# 
  1234  0014                     	;# 
  1235  0015                     	;# 
  1236  0016                     	;# 
  1237  0016                     	;# 
  1238  0017                     	;# 
  1239  0018                     	;# 
  1240  0019                     	;# 
  1241  001A                     	;# 
  1242  001B                     	;# 
  1243  001C                     	;# 
  1244  001E                     	;# 
  1245  001F                     	;# 
  1246  008C                     	;# 
  1247  008D                     	;# 
  1248  0091                     	;# 
  1249  0092                     	;# 
  1250  0093                     	;# 
  1251  0094                     	;# 
  1252  0095                     	;# 
  1253  0096                     	;# 
  1254  0097                     	;# 
  1255  0098                     	;# 
  1256  0099                     	;# 
  1257  009A                     	;# 
  1258  009B                     	;# 
  1259  009B                     	;# 
  1260  009C                     	;# 
  1261  009D                     	;# 
  1262  009E                     	;# 
  1263  010C                     	;# 
  1264  010D                     	;# 
  1265  0111                     	;# 
  1266  0112                     	;# 
  1267  0113                     	;# 
  1268  0114                     	;# 
  1269  0115                     	;# 
  1270  0116                     	;# 
  1271  0117                     	;# 
  1272  0118                     	;# 
  1273  0119                     	;# 
  1274  011A                     	;# 
  1275  011B                     	;# 
  1276  011D                     	;# 
  1277  011E                     	;# 
  1278  018C                     	;# 
  1279  018D                     	;# 
  1280  0191                     	;# 
  1281  0191                     	;# 
  1282  0192                     	;# 
  1283  0193                     	;# 
  1284  0193                     	;# 
  1285  0193                     	;# 
  1286  0194                     	;# 
  1287  0195                     	;# 
  1288  0196                     	;# 
  1289  0199                     	;# 
  1290  019A                     	;# 
  1291  019B                     	;# 
  1292  019B                     	;# 
  1293  019B                     	;# 
  1294  019B                     	;# 
  1295  019C                     	;# 
  1296  019C                     	;# 
  1297  019D                     	;# 
  1298  019E                     	;# 
  1299  019F                     	;# 
  1300  020C                     	;# 
  1301  020D                     	;# 
  1302  0211                     	;# 
  1303  0211                     	;# 
  1304  0212                     	;# 
  1305  0212                     	;# 
  1306  0213                     	;# 
  1307  0213                     	;# 
  1308  0214                     	;# 
  1309  0214                     	;# 
  1310  0215                     	;# 
  1311  0215                     	;# 
  1312  0215                     	;# 
  1313  0216                     	;# 
  1314  0216                     	;# 
  1315  0217                     	;# 
  1316  0217                     	;# 
  1317  0219                     	;# 
  1318  021A                     	;# 
  1319  021B                     	;# 
  1320  021C                     	;# 
  1321  021D                     	;# 
  1322  021E                     	;# 
  1323  021F                     	;# 
  1324  0291                     	;# 
  1325  0291                     	;# 
  1326  0292                     	;# 
  1327  0293                     	;# 
  1328  0294                     	;# 
  1329  0295                     	;# 
  1330  0295                     	;# 
  1331  0296                     	;# 
  1332  0298                     	;# 
  1333  0298                     	;# 
  1334  0299                     	;# 
  1335  029A                     	;# 
  1336  029B                     	;# 
  1337  029C                     	;# 
  1338  029C                     	;# 
  1339  029D                     	;# 
  1340  029E                     	;# 
  1341  029E                     	;# 
  1342  0311                     	;# 
  1343  0311                     	;# 
  1344  0312                     	;# 
  1345  0313                     	;# 
  1346  0318                     	;# 
  1347  0318                     	;# 
  1348  0319                     	;# 
  1349  031A                     	;# 
  1350  0394                     	;# 
  1351  0395                     	;# 
  1352  0396                     	;# 
  1353  039A                     	;# 
  1354  039C                     	;# 
  1355  039D                     	;# 
  1356  039E                     	;# 
  1357  039F                     	;# 
  1358  0415                     	;# 
  1359  0416                     	;# 
  1360  0417                     	;# 
  1361  041C                     	;# 
  1362  041D                     	;# 
  1363  041E                     	;# 
  1364  0FE4                     	;# 
  1365  0FE5                     	;# 
  1366  0FE6                     	;# 
  1367  0FE7                     	;# 
  1368  0FE8                     	;# 
  1369  0FE9                     	;# 
  1370  0FEA                     	;# 
  1371  0FEB                     	;# 
  1372  0FED                     	;# 
  1373  0FEE                     	;# 
  1374  0FEF                     	;# 
  1375  0000                     	;# 
  1376  0001                     	;# 
  1377  0002                     	;# 
  1378  0003                     	;# 
  1379  0004                     	;# 
  1380  0005                     	;# 
  1381  0006                     	;# 
  1382  0007                     	;# 
  1383  0008                     	;# 
  1384  0009                     	;# 
  1385  000A                     	;# 
  1386  000B                     	;# 
  1387  000C                     	;# 
  1388  000D                     	;# 
  1389  0011                     	;# 
  1390  0012                     	;# 
  1391  0013                     	;# 
  1392  0014                     	;# 
  1393  0015                     	;# 
  1394  0016                     	;# 
  1395  0016                     	;# 
  1396  0017                     	;# 
  1397  0018                     	;# 
  1398  0019                     	;# 
  1399  001A                     	;# 
  1400  001B                     	;# 
  1401  001C                     	;# 
  1402  001E                     	;# 
  1403  001F                     	;# 
  1404  008C                     	;# 
  1405  008D                     	;# 
  1406  0091                     	;# 
  1407  0092                     	;# 
  1408  0093                     	;# 
  1409  0094                     	;# 
  1410  0095                     	;# 
  1411  0096                     	;# 
  1412  0097                     	;# 
  1413  0098                     	;# 
  1414  0099                     	;# 
  1415  009A                     	;# 
  1416  009B                     	;# 
  1417  009B                     	;# 
  1418  009C                     	;# 
  1419  009D                     	;# 
  1420  009E                     	;# 
  1421  010C                     	;# 
  1422  010D                     	;# 
  1423  0111                     	;# 
  1424  0112                     	;# 
  1425  0113                     	;# 
  1426  0114                     	;# 
  1427  0115                     	;# 
  1428  0116                     	;# 
  1429  0117                     	;# 
  1430  0118                     	;# 
  1431  0119                     	;# 
  1432  011A                     	;# 
  1433  011B                     	;# 
  1434  011D                     	;# 
  1435  011E                     	;# 
  1436  018C                     	;# 
  1437  018D                     	;# 
  1438  0191                     	;# 
  1439  0191                     	;# 
  1440  0192                     	;# 
  1441  0193                     	;# 
  1442  0193                     	;# 
  1443  0193                     	;# 
  1444  0194                     	;# 
  1445  0195                     	;# 
  1446  0196                     	;# 
  1447  0199                     	;# 
  1448  019A                     	;# 
  1449  019B                     	;# 
  1450  019B                     	;# 
  1451  019B                     	;# 
  1452  019B                     	;# 
  1453  019C                     	;# 
  1454  019C                     	;# 
  1455  019D                     	;# 
  1456  019E                     	;# 
  1457  019F                     	;# 
  1458  020C                     	;# 
  1459  020D                     	;# 
  1460  0211                     	;# 
  1461  0211                     	;# 
  1462  0212                     	;# 
  1463  0212                     	;# 
  1464  0213                     	;# 
  1465  0213                     	;# 
  1466  0214                     	;# 
  1467  0214                     	;# 
  1468  0215                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0216                     	;# 
  1472  0216                     	;# 
  1473  0217                     	;# 
  1474  0217                     	;# 
  1475  0219                     	;# 
  1476  021A                     	;# 
  1477  021B                     	;# 
  1478  021C                     	;# 
  1479  021D                     	;# 
  1480  021E                     	;# 
  1481  021F                     	;# 
  1482  0291                     	;# 
  1483  0291                     	;# 
  1484  0292                     	;# 
  1485  0293                     	;# 
  1486  0294                     	;# 
  1487  0295                     	;# 
  1488  0295                     	;# 
  1489  0296                     	;# 
  1490  0298                     	;# 
  1491  0298                     	;# 
  1492  0299                     	;# 
  1493  029A                     	;# 
  1494  029B                     	;# 
  1495  029C                     	;# 
  1496  029C                     	;# 
  1497  029D                     	;# 
  1498  029E                     	;# 
  1499  029E                     	;# 
  1500  0311                     	;# 
  1501  0311                     	;# 
  1502  0312                     	;# 
  1503  0313                     	;# 
  1504  0318                     	;# 
  1505  0318                     	;# 
  1506  0319                     	;# 
  1507  031A                     	;# 
  1508  0394                     	;# 
  1509  0395                     	;# 
  1510  0396                     	;# 
  1511  039A                     	;# 
  1512  039C                     	;# 
  1513  039D                     	;# 
  1514  039E                     	;# 
  1515  039F                     	;# 
  1516  0415                     	;# 
  1517  0416                     	;# 
  1518  0417                     	;# 
  1519  041C                     	;# 
  1520  041D                     	;# 
  1521  041E                     	;# 
  1522  0FE4                     	;# 
  1523  0FE5                     	;# 
  1524  0FE6                     	;# 
  1525  0FE7                     	;# 
  1526  0FE8                     	;# 
  1527  0FE9                     	;# 
  1528  0FEA                     	;# 
  1529  0FEB                     	;# 
  1530  0FED                     	;# 
  1531  0FEE                     	;# 
  1532  0FEF                     	;# 
  1533                           
  1534                           	psect	eeprom_data
  1535  0000  0001 0000 0000 0000 0000 0000 0000 0000 	db	1,0,0,0,0,0,0,0	;# 
  1536  0000                     	;# 
  1537  0001                     	;# 
  1538  0002                     	;# 
  1539  0003                     	;# 
  1540  0004                     	;# 
  1541  0005                     	;# 
  1542  0006                     	;# 
  1543  0007                     	;# 
  1544  0008                     	;# 
  1545  0009                     	;# 
  1546  000A                     	;# 
  1547  000B                     	;# 
  1548  000C                     	;# 
  1549  000D                     	;# 
  1550  0011                     	;# 
  1551  0012                     	;# 
  1552  0013                     	;# 
  1553  0014                     	;# 
  1554  0015                     	;# 
  1555  0016                     	;# 
  1556  0016                     	;# 
  1557  0017                     	;# 
  1558  0018                     	;# 
  1559  0019                     	;# 
  1560  001A                     	;# 
  1561  001B                     	;# 
  1562  001C                     	;# 
  1563  001E                     	;# 
  1564  001F                     	;# 
  1565  008C                     	;# 
  1566  008D                     	;# 
  1567  0091                     	;# 
  1568  0092                     	;# 
  1569  0093                     	;# 
  1570  0094                     	;# 
  1571  0095                     	;# 
  1572  0096                     	;# 
  1573  0097                     	;# 
  1574  0098                     	;# 
  1575  0099                     	;# 
  1576  009A                     	;# 
  1577  009B                     	;# 
  1578  009B                     	;# 
  1579  009C                     	;# 
  1580  009D                     	;# 
  1581  009E                     	;# 
  1582  010C                     	;# 
  1583  010D                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  011A                     	;# 
  1594  011B                     	;# 
  1595  011D                     	;# 
  1596  011E                     	;# 
  1597  018C                     	;# 
  1598  018D                     	;# 
  1599  0191                     	;# 
  1600  0191                     	;# 
  1601  0192                     	;# 
  1602  0193                     	;# 
  1603  0193                     	;# 
  1604  0193                     	;# 
  1605  0194                     	;# 
  1606  0195                     	;# 
  1607  0196                     	;# 
  1608  0199                     	;# 
  1609  019A                     	;# 
  1610  019B                     	;# 
  1611  019B                     	;# 
  1612  019B                     	;# 
  1613  019B                     	;# 
  1614  019C                     	;# 
  1615  019C                     	;# 
  1616  019D                     	;# 
  1617  019E                     	;# 
  1618  019F                     	;# 
  1619  020C                     	;# 
  1620  020D                     	;# 
  1621  0211                     	;# 
  1622  0211                     	;# 
  1623  0212                     	;# 
  1624  0212                     	;# 
  1625  0213                     	;# 
  1626  0213                     	;# 
  1627  0214                     	;# 
  1628  0214                     	;# 
  1629  0215                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0216                     	;# 
  1633  0216                     	;# 
  1634  0217                     	;# 
  1635  0217                     	;# 
  1636  0219                     	;# 
  1637  021A                     	;# 
  1638  021B                     	;# 
  1639  021C                     	;# 
  1640  021D                     	;# 
  1641  021E                     	;# 
  1642  021F                     	;# 
  1643  0291                     	;# 
  1644  0291                     	;# 
  1645  0292                     	;# 
  1646  0293                     	;# 
  1647  0294                     	;# 
  1648  0295                     	;# 
  1649  0295                     	;# 
  1650  0296                     	;# 
  1651  0298                     	;# 
  1652  0298                     	;# 
  1653  0299                     	;# 
  1654  029A                     	;# 
  1655  029B                     	;# 
  1656  029C                     	;# 
  1657  029C                     	;# 
  1658  029D                     	;# 
  1659  029E                     	;# 
  1660  029E                     	;# 
  1661  0311                     	;# 
  1662  0311                     	;# 
  1663  0312                     	;# 
  1664  0313                     	;# 
  1665  0318                     	;# 
  1666  0318                     	;# 
  1667  0319                     	;# 
  1668  031A                     	;# 
  1669  0394                     	;# 
  1670  0395                     	;# 
  1671  0396                     	;# 
  1672  039A                     	;# 
  1673  039C                     	;# 
  1674  039D                     	;# 
  1675  039E                     	;# 
  1676  039F                     	;# 
  1677  0415                     	;# 
  1678  0416                     	;# 
  1679  0417                     	;# 
  1680  041C                     	;# 
  1681  041D                     	;# 
  1682  041E                     	;# 
  1683  0FE4                     	;# 
  1684  0FE5                     	;# 
  1685  0FE6                     	;# 
  1686  0FE7                     	;# 
  1687  0FE8                     	;# 
  1688  0FE9                     	;# 
  1689  0FEA                     	;# 
  1690  0FEB                     	;# 
  1691  0FED                     	;# 
  1692  0FEE                     	;# 
  1693  0FEF                     	;# 
  1694  0000                     	;# 
  1695  0001                     	;# 
  1696  0002                     	;# 
  1697  0003                     	;# 
  1698  0004                     	;# 
  1699  0005                     	;# 
  1700  0006                     	;# 
  1701  0007                     	;# 
  1702  0008                     	;# 
  1703  0009                     	;# 
  1704  000A                     	;# 
  1705  000B                     	;# 
  1706  000C                     	;# 
  1707  000D                     	;# 
  1708  0011                     	;# 
  1709  0012                     	;# 
  1710  0013                     	;# 
  1711  0014                     	;# 
  1712  0015                     	;# 
  1713  0016                     	;# 
  1714  0016                     	;# 
  1715  0017                     	;# 
  1716  0018                     	;# 
  1717  0019                     	;# 
  1718  001A                     	;# 
  1719  001B                     	;# 
  1720  001C                     	;# 
  1721  001E                     	;# 
  1722  001F                     	;# 
  1723  008C                     	;# 
  1724  008D                     	;# 
  1725  0091                     	;# 
  1726  0092                     	;# 
  1727  0093                     	;# 
  1728  0094                     	;# 
  1729  0095                     	;# 
  1730  0096                     	;# 
  1731  0097                     	;# 
  1732  0098                     	;# 
  1733  0099                     	;# 
  1734  009A                     	;# 
  1735  009B                     	;# 
  1736  009B                     	;# 
  1737  009C                     	;# 
  1738  009D                     	;# 
  1739  009E                     	;# 
  1740  010C                     	;# 
  1741  010D                     	;# 
  1742  0111                     	;# 
  1743  0112                     	;# 
  1744  0113                     	;# 
  1745  0114                     	;# 
  1746  0115                     	;# 
  1747  0116                     	;# 
  1748  0117                     	;# 
  1749  0118                     	;# 
  1750  0119                     	;# 
  1751  011A                     	;# 
  1752  011B                     	;# 
  1753  011D                     	;# 
  1754  011E                     	;# 
  1755  018C                     	;# 
  1756  018D                     	;# 
  1757  0191                     	;# 
  1758  0191                     	;# 
  1759  0192                     	;# 
  1760  0193                     	;# 
  1761  0193                     	;# 
  1762  0193                     	;# 
  1763  0194                     	;# 
  1764  0195                     	;# 
  1765  0196                     	;# 
  1766  0199                     	;# 
  1767  019A                     	;# 
  1768  019B                     	;# 
  1769  019B                     	;# 
  1770  019B                     	;# 
  1771  019B                     	;# 
  1772  019C                     	;# 
  1773  019C                     	;# 
  1774  019D                     	;# 
  1775  019E                     	;# 
  1776  019F                     	;# 
  1777  020C                     	;# 
  1778  020D                     	;# 
  1779  0211                     	;# 
  1780  0211                     	;# 
  1781  0212                     	;# 
  1782  0212                     	;# 
  1783  0213                     	;# 
  1784  0213                     	;# 
  1785  0214                     	;# 
  1786  0214                     	;# 
  1787  0215                     	;# 
  1788  0215                     	;# 
  1789  0215                     	;# 
  1790  0216                     	;# 
  1791  0216                     	;# 
  1792  0217                     	;# 
  1793  0217                     	;# 
  1794  0219                     	;# 
  1795  021A                     	;# 
  1796  021B                     	;# 
  1797  021C                     	;# 
  1798  021D                     	;# 
  1799  021E                     	;# 
  1800  021F                     	;# 
  1801  0291                     	;# 
  1802  0291                     	;# 
  1803  0292                     	;# 
  1804  0293                     	;# 
  1805  0294                     	;# 
  1806  0295                     	;# 
  1807  0295                     	;# 
  1808  0296                     	;# 
  1809  0298                     	;# 
  1810  0298                     	;# 
  1811  0299                     	;# 
  1812  029A                     	;# 
  1813  029B                     	;# 
  1814  029C                     	;# 
  1815  029C                     	;# 
  1816  029D                     	;# 
  1817  029E                     	;# 
  1818  029E                     	;# 
  1819  0311                     	;# 
  1820  0311                     	;# 
  1821  0312                     	;# 
  1822  0313                     	;# 
  1823  0318                     	;# 
  1824  0318                     	;# 
  1825  0319                     	;# 
  1826  031A                     	;# 
  1827  0394                     	;# 
  1828  0395                     	;# 
  1829  0396                     	;# 
  1830  039A                     	;# 
  1831  039C                     	;# 
  1832  039D                     	;# 
  1833  039E                     	;# 
  1834  039F                     	;# 
  1835  0415                     	;# 
  1836  0416                     	;# 
  1837  0417                     	;# 
  1838  041C                     	;# 
  1839  041D                     	;# 
  1840  041E                     	;# 
  1841  0FE4                     	;# 
  1842  0FE5                     	;# 
  1843  0FE6                     	;# 
  1844  0FE7                     	;# 
  1845  0FE8                     	;# 
  1846  0FE9                     	;# 
  1847  0FEA                     	;# 
  1848  0FEB                     	;# 
  1849  0FED                     	;# 
  1850  0FEE                     	;# 
  1851  0FEF                     	;# 
  1852  0000                     	;# 
  1853  0001                     	;# 
  1854  0002                     	;# 
  1855  0003                     	;# 
  1856  0004                     	;# 
  1857  0005                     	;# 
  1858  0006                     	;# 
  1859  0007                     	;# 
  1860  0008                     	;# 
  1861  0009                     	;# 
  1862  000A                     	;# 
  1863  000B                     	;# 
  1864  000C                     	;# 
  1865  000D                     	;# 
  1866  0011                     	;# 
  1867  0012                     	;# 
  1868  0013                     	;# 
  1869  0014                     	;# 
  1870  0015                     	;# 
  1871  0016                     	;# 
  1872  0016                     	;# 
  1873  0017                     	;# 
  1874  0018                     	;# 
  1875  0019                     	;# 
  1876  001A                     	;# 
  1877  001B                     	;# 
  1878  001C                     	;# 
  1879  001E                     	;# 
  1880  001F                     	;# 
  1881  008C                     	;# 
  1882  008D                     	;# 
  1883  0091                     	;# 
  1884  0092                     	;# 
  1885  0093                     	;# 
  1886  0094                     	;# 
  1887  0095                     	;# 
  1888  0096                     	;# 
  1889  0097                     	;# 
  1890  0098                     	;# 
  1891  0099                     	;# 
  1892  009A                     	;# 
  1893  009B                     	;# 
  1894  009B                     	;# 
  1895  009C                     	;# 
  1896  009D                     	;# 
  1897  009E                     	;# 
  1898  010C                     	;# 
  1899  010D                     	;# 
  1900  0111                     	;# 
  1901  0112                     	;# 
  1902  0113                     	;# 
  1903  0114                     	;# 
  1904  0115                     	;# 
  1905  0116                     	;# 
  1906  0117                     	;# 
  1907  0118                     	;# 
  1908  0119                     	;# 
  1909  011A                     	;# 
  1910  011B                     	;# 
  1911  011D                     	;# 
  1912  011E                     	;# 
  1913  018C                     	;# 
  1914  018D                     	;# 
  1915  0191                     	;# 
  1916  0191                     	;# 
  1917  0192                     	;# 
  1918  0193                     	;# 
  1919  0193                     	;# 
  1920  0193                     	;# 
  1921  0194                     	;# 
  1922  0195                     	;# 
  1923  0196                     	;# 
  1924  0199                     	;# 
  1925  019A                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019D                     	;# 
  1933  019E                     	;# 
  1934  019F                     	;# 
  1935  020C                     	;# 
  1936  020D                     	;# 
  1937  0211                     	;# 
  1938  0211                     	;# 
  1939  0212                     	;# 
  1940  0212                     	;# 
  1941  0213                     	;# 
  1942  0213                     	;# 
  1943  0214                     	;# 
  1944  0214                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0216                     	;# 
  1949  0216                     	;# 
  1950  0217                     	;# 
  1951  0217                     	;# 
  1952  0219                     	;# 
  1953  021A                     	;# 
  1954  021B                     	;# 
  1955  021C                     	;# 
  1956  021D                     	;# 
  1957  021E                     	;# 
  1958  021F                     	;# 
  1959  0291                     	;# 
  1960  0291                     	;# 
  1961  0292                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0295                     	;# 
  1965  0295                     	;# 
  1966  0296                     	;# 
  1967  0298                     	;# 
  1968  0298                     	;# 
  1969  0299                     	;# 
  1970  029A                     	;# 
  1971  029B                     	;# 
  1972  029C                     	;# 
  1973  029C                     	;# 
  1974  029D                     	;# 
  1975  029E                     	;# 
  1976  029E                     	;# 
  1977  0311                     	;# 
  1978  0311                     	;# 
  1979  0312                     	;# 
  1980  0313                     	;# 
  1981  0318                     	;# 
  1982  0318                     	;# 
  1983  0319                     	;# 
  1984  031A                     	;# 
  1985  0394                     	;# 
  1986  0395                     	;# 
  1987  0396                     	;# 
  1988  039A                     	;# 
  1989  039C                     	;# 
  1990  039D                     	;# 
  1991  039E                     	;# 
  1992  039F                     	;# 
  1993  0415                     	;# 
  1994  0416                     	;# 
  1995  0417                     	;# 
  1996  041C                     	;# 
  1997  041D                     	;# 
  1998  041E                     	;# 
  1999  0FE4                     	;# 
  2000  0FE5                     	;# 
  2001  0FE6                     	;# 
  2002  0FE7                     	;# 
  2003  0FE8                     	;# 
  2004  0FE9                     	;# 
  2005  0FEA                     	;# 
  2006  0FEB                     	;# 
  2007  0FED                     	;# 
  2008  0FEE                     	;# 
  2009  0FEF                     	;# 
  2010                           
  2011                           	psect	idataBANK1
  2012  0A88                     __pidataBANK1:	
  2013                           
  2014                           ;initializer for _DAC_DataTable
  2015  0A88  3499               	retlw	153
  2016  0A89  3401               	retlw	1
  2017  0A8A  34C2               	retlw	194
  2018  0A8B  3401               	retlw	1
  2019  0A8C  34EB               	retlw	235
  2020  0A8D  3401               	retlw	1
  2021  0A8E  3414               	retlw	20
  2022  0A8F  3402               	retlw	2
  2023  0A90  343D               	retlw	61
  2024  0A91  3402               	retlw	2
  2025  0A92  3466               	retlw	102
  2026  0A93  3402               	retlw	2
  2027  0A94  348F               	retlw	143
  2028  0A95  3402               	retlw	2
  2029  0A96  34B8               	retlw	184
  2030  0A97  3402               	retlw	2
  2031  0A98  34E1               	retlw	225
  2032  0A99  3402               	retlw	2
  2033  0A9A  340A               	retlw	10
  2034  0A9B  3403               	retlw	3
  2035  0A9C  3433               	retlw	51
  2036  0A9D  3403               	retlw	3
  2037  0A9E  345B               	retlw	91
  2038  0A9F  3403               	retlw	3
  2039  0AA0  3484               	retlw	132
  2040  0AA1  3403               	retlw	3
  2041  0AA2  34AD               	retlw	173
  2042  0AA3  3403               	retlw	3
  2043  0AA4  34D6               	retlw	214
  2044  0AA5  3403               	retlw	3
  2045                           
  2046                           	psect	idataBANK2
  2047  0CA5                     __pidataBANK2:	
  2048                           
  2049                           ;initializer for _H7826_01_Gain
  2050  0CA5  346B               	retlw	low (STR_22| (0+32768))
  2051  0CA6  3484               	retlw	high (STR_22| (0+32768))
  2052  0CA7  3470               	retlw	low (STR_23| (0+32768))
  2053  0CA8  3484               	retlw	high (STR_23| (0+32768))
  2054  0CA9  3484               	retlw	low (STR_24| (0+32768))
  2055  0CAA  3484               	retlw	high (STR_24| (0+32768))
  2056  0CAB  3475               	retlw	low (STR_25| (0+32768))
  2057  0CAC  3484               	retlw	high (STR_25| (0+32768))
  2058  0CAD  3448               	retlw	low (STR_26| (0+32768))
  2059  0CAE  3484               	retlw	high (STR_26| (0+32768))
  2060  0CAF  344E               	retlw	low (STR_27| (0+32768))
  2061  0CB0  3484               	retlw	high (STR_27| (0+32768))
  2062  0CB1  3454               	retlw	low (STR_28| (0+32768))
  2063  0CB2  3484               	retlw	high (STR_28| (0+32768))
  2064  0CB3  343C               	retlw	low (STR_29| (0+32768))
  2065  0CB4  3484               	retlw	high (STR_29| (0+32768))
  2066  0CB5  34F7               	retlw	low (STR_30| (0+32768))
  2067  0CB6  3483               	retlw	high (STR_30| (0+32768))
  2068  0CB7  3421               	retlw	low (STR_31| (0+32768))
  2069  0CB8  3484               	retlw	high (STR_31| (0+32768))
  2070  0CB9  34FE               	retlw	low (STR_32| (0+32768))
  2071  0CBA  3483               	retlw	high (STR_32| (0+32768))
  2072  0CBB  3405               	retlw	low (STR_33| (0+32768))
  2073  0CBC  3484               	retlw	high (STR_33| (0+32768))
  2074  0CBD  342F               	retlw	low (STR_34| (0+32768))
  2075  0CBE  3484               	retlw	high (STR_34| (0+32768))
  2076  0CBF  34E9               	retlw	low (STR_35| (0+32768))
  2077  0CC0  3483               	retlw	high (STR_35| (0+32768))
  2078  0CC1  34F0               	retlw	low (STR_36| (0+32768))
  2079  0CC2  3483               	retlw	high (STR_36| (0+32768))
  2080                           
  2081                           ;initializer for _H7826_Gain
  2082  0CC3  347F               	retlw	low (STR_7| (0+32768))
  2083  0CC4  3484               	retlw	high (STR_7| (0+32768))
  2084  0CC5  347A               	retlw	low (STR_8| (0+32768))
  2085  0CC6  3484               	retlw	high (STR_8| (0+32768))
  2086  0CC7  3489               	retlw	low (STR_9| (0+32768))
  2087  0CC8  3484               	retlw	high (STR_9| (0+32768))
  2088  0CC9  3460               	retlw	low (STR_10| (0+32768))
  2089  0CCA  3484               	retlw	high (STR_10| (0+32768))
  2090  0CCB  3436               	retlw	low (STR_11| (0+32768))
  2091  0CCC  3484               	retlw	high (STR_11| (0+32768))
  2092  0CCD  3442               	retlw	low (STR_12| (0+32768))
  2093  0CCE  3484               	retlw	high (STR_12| (0+32768))
  2094  0CCF  345A               	retlw	low (STR_13| (0+32768))
  2095  0CD0  3484               	retlw	high (STR_13| (0+32768))
  2096  0CD1  3413               	retlw	low (STR_14| (0+32768))
  2097  0CD2  3484               	retlw	high (STR_14| (0+32768))
  2098  0CD3  340C               	retlw	low (STR_15| (0+32768))
  2099  0CD4  3484               	retlw	high (STR_15| (0+32768))
  2100  0CD5  341A               	retlw	low (STR_16| (0+32768))
  2101  0CD6  3484               	retlw	high (STR_16| (0+32768))
  2102  0CD7  34E2               	retlw	low (STR_17| (0+32768))
  2103  0CD8  3483               	retlw	high (STR_17| (0+32768))
  2104  0CD9  3428               	retlw	low (STR_18| (0+32768))
  2105  0CDA  3484               	retlw	high (STR_18| (0+32768))
  2106  0CDB  34D3               	retlw	low (STR_19| (0+32768))
  2107  0CDC  3483               	retlw	high (STR_19| (0+32768))
  2108  0CDD  34CB               	retlw	low (STR_20| (0+32768))
  2109  0CDE  3483               	retlw	high (STR_20| (0+32768))
  2110  0CDF  34C3               	retlw	low (STR_21| (0+32768))
  2111  0CE0  3483               	retlw	high (STR_21| (0+32768))
  2112                           
  2113                           	psect	stringtext
  2114  027E                     __pstringtext:	
  2115  027E                     _dpowers:	
  2116  027E  3401               	retlw	1
  2117  027F  3400               	retlw	0
  2118  0280  3400               	retlw	0
  2119  0281  3400               	retlw	0
  2120  0282  340A               	retlw	10
  2121  0283  3400               	retlw	0
  2122  0284  3400               	retlw	0
  2123  0285  3400               	retlw	0
  2124  0286  3464               	retlw	100
  2125  0287  3400               	retlw	0
  2126  0288  3400               	retlw	0
  2127  0289  3400               	retlw	0
  2128  028A  34E8               	retlw	232
  2129  028B  3403               	retlw	3
  2130  028C  3400               	retlw	0
  2131  028D  3400               	retlw	0
  2132  028E  3410               	retlw	16
  2133  028F  3427               	retlw	39
  2134  0290  3400               	retlw	0
  2135  0291  3400               	retlw	0
  2136  0292  34A0               	retlw	160
  2137  0293  3486               	retlw	134
  2138  0294  3401               	retlw	1
  2139  0295  3400               	retlw	0
  2140  0296  3440               	retlw	64
  2141  0297  3442               	retlw	66
  2142  0298  340F               	retlw	15
  2143  0299  3400               	retlw	0
  2144  029A  3480               	retlw	128
  2145  029B  3496               	retlw	150
  2146  029C  3498               	retlw	152
  2147  029D  3400               	retlw	0
  2148  029E  3400               	retlw	0
  2149  029F  34E1               	retlw	225
  2150  02A0  34F5               	retlw	245
  2151  02A1  3405               	retlw	5
  2152  02A2  3400               	retlw	0
  2153  02A3  34CA               	retlw	202
  2154  02A4  349A               	retlw	154
  2155  02A5  343B               	retlw	59
  2156  02A6                     __end_of_dpowers:	
  2157  02A6                     _sense_parameter:	
  2158  02A6  3464               	retlw	100
  2159  02A7  3464               	retlw	100
  2160  02A8  3464               	retlw	100
  2161  02A9                     __end_of_sense_parameter:	
  2162  0016                     _TMR1	set	22
  2163  000C                     _PORTA	set	12
  2164  001F                     _CPSCON1	set	31
  2165  001E                     _CPSCON0	set	30
  2166  0015                     _TMR0	set	21
  2167  0019                     _T1GCON	set	25
  2168  0018                     _T1CON	set	24
  2169  000D                     _PORTB	set	13
  2170  001B                     _PR2	set	27
  2171  001A                     _TMR2	set	26
  2172  001C                     _T2CON	set	28
  2173  0018                     _CARRY	set	24
  2174  00A1                     _BCL2IF	set	161
  2175  00A0                     _SSP2IF	set	160
  2176  009B                     _TMR6IF	set	155
  2177  0088                     _TMR1IF	set	136
  2178  00C0                     _TMR1ON	set	192
  2179  005F                     _GIE	set	95
  2180  005E                     _PEIE	set	94
  2181  0099                     _OSCCON	set	153
  2182  0095                     _OPTION_REG	set	149
  2183  008D                     _TRISB	set	141
  2184  008C                     _TRISA	set	140
  2185  04A1                     _BCL2IE	set	1185
  2186  04A0                     _SSP2IE	set	1184
  2187  049B                     _TMR6IE	set	1179
  2188  0488                     _TMR1IE	set	1160
  2189  011E                     _APFCON1	set	286
  2190  011D                     _APFCON0	set	285
  2191  0866                     _LATA6	set	2150
  2192  0863                     _LATA3	set	2147
  2193  0864                     _LATA4	set	2148
  2194  0191                     _EEADR	set	401
  2195  0196                     _EECON2	set	406
  2196  0193                     _EEDATA	set	403
  2197  0195                     _EECON1	set	405
  2198  018D                     _ANSELB	set	397
  2199  018C                     _ANSELA	set	396
  2200  0CAA                     _WREN	set	3242
  2201  0CA8                     _RD	set	3240
  2202  0CA9                     _WR	set	3241
  2203  021C                     _SSP2STATbits	set	540
  2204  0219                     _SSP2BUF	set	537
  2205  021E                     _SSP2CON2	set	542
  2206  021B                     _SSP2MSK	set	539
  2207  021E                     _SSP2CON2bits	set	542
  2208  021D                     _SSP2CON1bits	set	541
  2209  021A                     _SSP2ADD	set	538
  2210  021C                     _SSP2STAT	set	540
  2211  021D                     _SSP2CON1	set	541
  2212  020D                     _WPUB	set	525
  2213  0298                     _CCPR2L	set	664
  2214  029E                     _CCPTMRS	set	670
  2215  029A                     _CCP2CON	set	666
  2216  041E                     _T6CON	set	1054
  2217  041C                     _TMR6	set	1052
  2218  041D                     _PR6	set	1053
  2219  02A9                     STR_41:	
  2220  02A9  3420               	retlw	32	;' '
  2221  02AA  3420               	retlw	32	;' '
  2222  02AB  3420               	retlw	32	;' '
  2223  02AC  3453               	retlw	83	;'S'
  2224  02AD  3465               	retlw	101	;'e'
  2225  02AE  3472               	retlw	114	;'r'
  2226  02AF  342E               	retlw	46	;'.'
  2227  02B0  344E               	retlw	78	;'N'
  2228  02B1  346F               	retlw	111	;'o'
  2229  02B2  342E               	retlw	46	;'.'
  2230  02B3  3425               	retlw	37	;'%'
  2231  02B4  3430               	retlw	48	;'0'
  2232  02B5  3430               	retlw	48	;'0'
  2233  02B6  3430               	retlw	48	;'0'
  2234  02B7  3433               	retlw	51	;'3'
  2235  02B8  3464               	retlw	100	;'d'
  2236  02B9  3420               	retlw	32	;' '
  2237  02BA  3420               	retlw	32	;' '
  2238  02BB  3420               	retlw	32	;' '
  2239  02BC  3400               	retlw	0
  2240  02BD                     STR_38:	
  2241  02BD  3420               	retlw	32	;' '
  2242  02BE  3420               	retlw	32	;' '
  2243  02BF  3420               	retlw	32	;' '
  2244  02C0  3420               	retlw	32	;' '
  2245  02C1  3477               	retlw	119	;'w'
  2246  02C2  3469               	retlw	105	;'i'
  2247  02C3  3474               	retlw	116	;'t'
  2248  02C4  3468               	retlw	104	;'h'
  2249  02C5  3420               	retlw	32	;' '
  2250  02C6  3450               	retlw	80	;'P'
  2251  02C7  3449               	retlw	73	;'I'
  2252  02C8  3443               	retlw	67	;'C'
  2253  02C9  3420               	retlw	32	;' '
  2254  02CA  3420               	retlw	32	;' '
  2255  02CB  3420               	retlw	32	;' '
  2256  02CC  3420               	retlw	32	;' '
  2257  02CD  3400               	retlw	0
  2258  02CE                     STR_53:	
  2259  02CE  3444               	retlw	68	;'D'
  2260  02CF  3465               	retlw	101	;'e'
  2261  02D0  3476               	retlw	118	;'v'
  2262  02D1  3465               	retlw	101	;'e'
  2263  02D2  3469               	retlw	105	;'i'
  2264  02D3  3463               	retlw	99	;'c'
  2265  02D4  3465               	retlw	101	;'e'
  2266  02D5  343A               	retlw	58	;':'
  2267  02D6  3448               	retlw	72	;'H'
  2268  02D7  3437               	retlw	55	;'7'
  2269  02D8  3438               	retlw	56	;'8'
  2270  02D9  3432               	retlw	50	;'2'
  2271  02DA  3436               	retlw	54	;'6'
  2272  02DB  3420               	retlw	32	;' '
  2273  02DC  3420               	retlw	32	;' '
  2274  02DD  3420               	retlw	32	;' '
  2275  02DE  3400               	retlw	0
  2276  02DF                     STR_44:	
  2277  02DF  3420               	retlw	32	;' '
  2278  02E0  3420               	retlw	32	;' '
  2279  02E1  3420               	retlw	32	;' '
  2280  02E2  3450               	retlw	80	;'P'
  2281  02E3  344D               	retlw	77	;'M'
  2282  02E4  3454               	retlw	84	;'T'
  2283  02E5  3420               	retlw	32	;' '
  2284  02E6  3444               	retlw	68	;'D'
  2285  02E7  3465               	retlw	101	;'e'
  2286  02E8  3476               	retlw	118	;'v'
  2287  02E9  3469               	retlw	105	;'i'
  2288  02EA  3463               	retlw	99	;'c'
  2289  02EB  3465               	retlw	101	;'e'
  2290  02EC  3420               	retlw	32	;' '
  2291  02ED  3420               	retlw	32	;' '
  2292  02EE  3420               	retlw	32	;' '
  2293  02EF  3400               	retlw	0
  2294  02F0                     STR_47:	
  2295  02F0  3420               	retlw	32	;' '
  2296  02F1  3420               	retlw	32	;' '
  2297  02F2  3453               	retlw	83	;'S'
  2298  02F3  3465               	retlw	101	;'e'
  2299  02F4  3474               	retlw	116	;'t'
  2300  02F5  3420               	retlw	32	;' '
  2301  02F6  3450               	retlw	80	;'P'
  2302  02F7  344D               	retlw	77	;'M'
  2303  02F8  3454               	retlw	84	;'T'
  2304  02F9  3420               	retlw	32	;' '
  2305  02FA  3447               	retlw	71	;'G'
  2306  02FB  3461               	retlw	97	;'a'
  2307  02FC  3469               	retlw	105	;'i'
  2308  02FD  346E               	retlw	110	;'n'
  2309  02FE  3420               	retlw	32	;' '
  2310  02FF  3420               	retlw	32	;' '
  2311  0300  3400               	retlw	0
  2312  0301                     STR_37:	
  2313  0301  3420               	retlw	32	;' '
  2314  0302  3447               	retlw	71	;'G'
  2315  0303  3465               	retlw	101	;'e'
  2316  0304  3469               	retlw	105	;'i'
  2317  0305  3467               	retlw	103	;'g'
  2318  0306  3465               	retlw	101	;'e'
  2319  0307  3472               	retlw	114	;'r'
  2320  0308  3420               	retlw	32	;' '
  2321  0309  3443               	retlw	67	;'C'
  2322  030A  346F               	retlw	111	;'o'
  2323  030B  3475               	retlw	117	;'u'
  2324  030C  346E               	retlw	110	;'n'
  2325  030D  3474               	retlw	116	;'t'
  2326  030E  3465               	retlw	101	;'e'
  2327  030F  3472               	retlw	114	;'r'
  2328  0310  3420               	retlw	32	;' '
  2329  0311  3400               	retlw	0
  2330  0312                     STR_54:	
  2331  0312  3444               	retlw	68	;'D'
  2332  0313  3465               	retlw	101	;'e'
  2333  0314  3476               	retlw	118	;'v'
  2334  0315  3465               	retlw	101	;'e'
  2335  0316  3469               	retlw	105	;'i'
  2336  0317  3463               	retlw	99	;'c'
  2337  0318  3465               	retlw	101	;'e'
  2338  0319  343A               	retlw	58	;':'
  2339  031A  3448               	retlw	72	;'H'
  2340  031B  3437               	retlw	55	;'7'
  2341  031C  3438               	retlw	56	;'8'
  2342  031D  3432               	retlw	50	;'2'
  2343  031E  3436               	retlw	54	;'6'
  2344  031F  345F               	retlw	95	;'_'
  2345  0320  3430               	retlw	48	;'0'
  2346  0321  3431               	retlw	49	;'1'
  2347  0322  3400               	retlw	0
  2348  0323                     STR_45:	
  2349  0323  343C               	retlw	60	;'<'
  2350  0324  342D               	retlw	45	;'-'
  2351  0325  342D               	retlw	45	;'-'
  2352  0326  3420               	retlw	32	;' '
  2353  0327  3420               	retlw	32	;' '
  2354  0328  3448               	retlw	72	;'H'
  2355  0329  3437               	retlw	55	;'7'
  2356  032A  3438               	retlw	56	;'8'
  2357  032B  3432               	retlw	50	;'2'
  2358  032C  3436               	retlw	54	;'6'
  2359  032D  3420               	retlw	32	;' '
  2360  032E  3420               	retlw	32	;' '
  2361  032F  3420               	retlw	32	;' '
  2362  0330  342D               	retlw	45	;'-'
  2363  0331  342D               	retlw	45	;'-'
  2364  0332  343E               	retlw	62	;'>'
  2365  0333  3400               	retlw	0
  2366  0334                     STR_46:	
  2367  0334  343C               	retlw	60	;'<'
  2368  0335  342D               	retlw	45	;'-'
  2369  0336  342D               	retlw	45	;'-'
  2370  0337  3420               	retlw	32	;' '
  2371  0338  3448               	retlw	72	;'H'
  2372  0339  3437               	retlw	55	;'7'
  2373  033A  3438               	retlw	56	;'8'
  2374  033B  3432               	retlw	50	;'2'
  2375  033C  3436               	retlw	54	;'6'
  2376  033D  345F               	retlw	95	;'_'
  2377  033E  3430               	retlw	48	;'0'
  2378  033F  3431               	retlw	49	;'1'
  2379  0340  3420               	retlw	32	;' '
  2380  0341  342D               	retlw	45	;'-'
  2381  0342  342D               	retlw	45	;'-'
  2382  0343  343E               	retlw	62	;'>'
  2383  0344  3400               	retlw	0
  2384  0345                     STR_43:	
  2385  0345  3420               	retlw	32	;' '
  2386  0346  3420               	retlw	32	;' '
  2387  0347  3452               	retlw	82	;'R'
  2388  0348  3479               	retlw	121	;'y'
  2389  0349  346F               	retlw	111	;'o'
  2390  034A  3420               	retlw	32	;' '
  2391  034B  3457               	retlw	87	;'W'
  2392  034C  3461               	retlw	97	;'a'
  2393  034D  346B               	retlw	107	;'k'
  2394  034E  3461               	retlw	97	;'a'
  2395  034F  3462               	retlw	98	;'b'
  2396  0350  3461               	retlw	97	;'a'
  2397  0351  3479               	retlw	121	;'y'
  2398  0352  3473               	retlw	115	;'s'
  2399  0353  3468               	retlw	104	;'h'
  2400  0354  3469               	retlw	105	;'i'
  2401  0355  3400               	retlw	0
  2402  0356                     STR_1:	
  2403  0356  3420               	retlw	32	;' '
  2404  0357  3420               	retlw	32	;' '
  2405  0358  3443               	retlw	67	;'C'
  2406  0359  346F               	retlw	111	;'o'
  2407  035A  3475               	retlw	117	;'u'
  2408  035B  346E               	retlw	110	;'n'
  2409  035C  3474               	retlw	116	;'t'
  2410  035D  3474               	retlw	116	;'t'
  2411  035E  3469               	retlw	105	;'i'
  2412  035F  346E               	retlw	110	;'n'
  2413  0360  3467               	retlw	103	;'g'
  2414  0361  342E               	retlw	46	;'.'
  2415  0362  342E               	retlw	46	;'.'
  2416  0363  342E               	retlw	46	;'.'
  2417  0364  3420               	retlw	32	;' '
  2418  0365  3420               	retlw	32	;' '
  2419  0366  3400               	retlw	0
  2420  0367                     STR_2:	
  2421  0367  3420               	retlw	32	;' '
  2422  0368  3425               	retlw	37	;'%'
  2423  0369  3437               	retlw	55	;'7'
  2424  036A  346C               	retlw	108	;'l'
  2425  036B  3475               	retlw	117	;'u'
  2426  036C  3420               	retlw	32	;' '
  2427  036D  3420               	retlw	32	;' '
  2428  036E  3425               	retlw	37	;'%'
  2429  036F  3430               	retlw	48	;'0'
  2430  0370  3432               	retlw	50	;'2'
  2431  0371  3464               	retlw	100	;'d'
  2432  0372  343A               	retlw	58	;':'
  2433  0373  3425               	retlw	37	;'%'
  2434  0374  3430               	retlw	48	;'0'
  2435  0375  3432               	retlw	50	;'2'
  2436  0376  3464               	retlw	100	;'d'
  2437  0377  3400               	retlw	0
  2438  0378                     STR_3:	
  2439  0378  3420               	retlw	32	;' '
  2440  0379  3443               	retlw	67	;'C'
  2441  037A  346F               	retlw	111	;'o'
  2442  037B  3475               	retlw	117	;'u'
  2443  037C  346E               	retlw	110	;'n'
  2444  037D  3474               	retlw	116	;'t'
  2445  037E  3420               	retlw	32	;' '
  2446  037F  3453               	retlw	83	;'S'
  2447  0380  3474               	retlw	116	;'t'
  2448  0381  346F               	retlw	111	;'o'
  2449  0382  3470               	retlw	112	;'p'
  2450  0383  3470               	retlw	112	;'p'
  2451  0384  3465               	retlw	101	;'e'
  2452  0385  3464               	retlw	100	;'d'
  2453  0386  3420               	retlw	32	;' '
  2454  0387  3400               	retlw	0
  2455  0388                     STR_39:	
  2456  0388  3453               	retlw	83	;'S'
  2457  0389  346F               	retlw	111	;'o'
  2458  038A  3474               	retlw	116	;'t'
  2459  038B  3457               	retlw	87	;'W'
  2460  038C  3461               	retlw	97	;'a'
  2461  038D  3472               	retlw	114	;'r'
  2462  038E  3465               	retlw	101	;'e'
  2463  038F  3420               	retlw	32	;' '
  2464  0390  3476               	retlw	118	;'v'
  2465  0391  3465               	retlw	101	;'e'
  2466  0392  3472               	retlw	114	;'r'
  2467  0393  3425               	retlw	37	;'%'
  2468  0394  3473               	retlw	115	;'s'
  2469  0395  3400               	retlw	0
  2470  0396                     STR_55:	
  2471  0396  3420               	retlw	32	;' '
  2472  0397  3447               	retlw	71	;'G'
  2473  0398  3461               	retlw	97	;'a'
  2474  0399  3469               	retlw	105	;'i'
  2475  039A  346E               	retlw	110	;'n'
  2476  039B  343A               	retlw	58	;':'
  2477  039C  3420               	retlw	32	;' '
  2478  039D  3425               	retlw	37	;'%'
  2479  039E  3438               	retlw	56	;'8'
  2480  039F  3473               	retlw	115	;'s'
  2481  03A0  3420               	retlw	32	;' '
  2482  03A1  3400               	retlw	0
  2483  03A2                     STR_48:	
  2484  03A2  343C               	retlw	60	;'<'
  2485  03A3  342D               	retlw	45	;'-'
  2486  03A4  342D               	retlw	45	;'-'
  2487  03A5  3420               	retlw	32	;' '
  2488  03A6  3425               	retlw	37	;'%'
  2489  03A7  3438               	retlw	56	;'8'
  2490  03A8  3473               	retlw	115	;'s'
  2491  03A9  3420               	retlw	32	;' '
  2492  03AA  342D               	retlw	45	;'-'
  2493  03AB  342D               	retlw	45	;'-'
  2494  03AC  343E               	retlw	62	;'>'
  2495  03AD  3400               	retlw	0
  2496  03AE                     STR_42:	
  2497  03AE  3443               	retlw	67	;'C'
  2498  03AF  3472               	retlw	114	;'r'
  2499  03B0  3465               	retlw	101	;'e'
  2500  03B1  3461               	retlw	97	;'a'
  2501  03B2  3474               	retlw	116	;'t'
  2502  03B3  3465               	retlw	101	;'e'
  2503  03B4  3464               	retlw	100	;'d'
  2504  03B5  3420               	retlw	32	;' '
  2505  03B6  3442               	retlw	66	;'B'
  2506  03B7  3479               	retlw	121	;'y'
  2507  03B8  3400               	retlw	0
  2508  03B9                     STR_5:	
  2509  03B9  3425               	retlw	37	;'%'
  2510  03BA  3437               	retlw	55	;'7'
  2511  03BB  346C               	retlw	108	;'l'
  2512  03BC  3475               	retlw	117	;'u'
  2513  03BD  3420               	retlw	32	;' '
  2514  03BE  3425               	retlw	37	;'%'
  2515  03BF  3437               	retlw	55	;'7'
  2516  03C0  346C               	retlw	108	;'l'
  2517  03C1  3475               	retlw	117	;'u'
  2518  03C2  3400               	retlw	0
  2519  03C3                     STR_21:	
  2520  03C3  3432               	retlw	50	;'2'
  2521  03C4  3437               	retlw	55	;'7'
  2522  03C5  3437               	retlw	55	;'7'
  2523  03C6  3434               	retlw	52	;'4'
  2524  03C7  3435               	retlw	53	;'5'
  2525  03C8  3436               	retlw	54	;'6'
  2526  03C9  3432               	retlw	50	;'2'
  2527  03CA  3400               	retlw	0
  2528  03CB                     STR_20:	
  2529  03CB  3431               	retlw	49	;'1'
  2530  03CC  3439               	retlw	57	;'9'
  2531  03CD  3434               	retlw	52	;'4'
  2532  03CE  3430               	retlw	48	;'0'
  2533  03CF  3436               	retlw	54	;'6'
  2534  03D0  3437               	retlw	55	;'7'
  2535  03D1  3433               	retlw	51	;'3'
  2536  03D2  3400               	retlw	0
  2537  03D3                     STR_19:	
  2538  03D3  3431               	retlw	49	;'1'
  2539  03D4  3433               	retlw	51	;'3'
  2540  03D5  3433               	retlw	51	;'3'
  2541  03D6  3436               	retlw	54	;'6'
  2542  03D7  3430               	retlw	48	;'0'
  2543  03D8  3430               	retlw	48	;'0'
  2544  03D9  3436               	retlw	54	;'6'
  2545  03DA  3400               	retlw	0
  2546  03DB                     STR_57:	
  2547  03DB  3428               	retlw	40	;'('
  2548  03DC  346E               	retlw	110	;'n'
  2549  03DD  3475               	retlw	117	;'u'
  2550  03DE  346C               	retlw	108	;'l'
  2551  03DF  346C               	retlw	108	;'l'
  2552  03E0  3429               	retlw	41	;')'
  2553  03E1  3400               	retlw	0
  2554  03E2                     STR_17:	
  2555  03E2  3436               	retlw	54	;'6'
  2556  03E3  3430               	retlw	48	;'0'
  2557  03E4  3430               	retlw	48	;'0'
  2558  03E5  3430               	retlw	48	;'0'
  2559  03E6  3430               	retlw	48	;'0'
  2560  03E7  3430               	retlw	48	;'0'
  2561  03E8  3400               	retlw	0
  2562  03E9                     STR_35:	
  2563  03E9  3437               	retlw	55	;'7'
  2564  03EA  3430               	retlw	48	;'0'
  2565  03EB  3430               	retlw	48	;'0'
  2566  03EC  3438               	retlw	56	;'8'
  2567  03ED  3439               	retlw	57	;'9'
  2568  03EE  3430               	retlw	48	;'0'
  2569  03EF  3400               	retlw	0
  2570  03F0                     STR_36:	
  2571  03F0  3439               	retlw	57	;'9'
  2572  03F1  3436               	retlw	54	;'6'
  2573  03F2  3438               	retlw	56	;'8'
  2574  03F3  3434               	retlw	52	;'4'
  2575  03F4  3437               	retlw	55	;'7'
  2576  03F5  3432               	retlw	50	;'2'
  2577  03F6  3400               	retlw	0
  2578  03F7                     STR_30:	
  2579  03F7  3431               	retlw	49	;'1'
  2580  03F8  3430               	retlw	48	;'0'
  2581  03F9  3438               	retlw	56	;'8'
  2582  03FA  3438               	retlw	56	;'8'
  2583  03FB  3434               	retlw	52	;'4'
  2584  03FC  3433               	retlw	51	;'3'
  2585  03FD  3400               	retlw	0
  2586  03FE                     STR_32:	
  2587  03FE  3432               	retlw	50	;'2'
  2588  03FF  3434               	retlw	52	;'4'
  2589  0400  3432               	retlw	50	;'2'
  2590  0401  3433               	retlw	51	;'3'
  2591  0402  3436               	retlw	54	;'6'
  2592  0403  3434               	retlw	52	;'4'
  2593  0404  3400               	retlw	0
  2594  0405                     STR_33:	
  2595  0405  3433               	retlw	51	;'3'
  2596  0406  3435               	retlw	53	;'5'
  2597  0407  3431               	retlw	49	;'1'
  2598  0408  3431               	retlw	49	;'1'
  2599  0409  3432               	retlw	50	;'2'
  2600  040A  3437               	retlw	55	;'7'
  2601  040B  3400               	retlw	0
  2602  040C                     STR_15:	
  2603  040C  3432               	retlw	50	;'2'
  2604  040D  3434               	retlw	52	;'4'
  2605  040E  3437               	retlw	55	;'7'
  2606  040F  3436               	retlw	54	;'6'
  2607  0410  3434               	retlw	52	;'4'
  2608  0411  3437               	retlw	55	;'7'
  2609  0412  3400               	retlw	0
  2610  0413                     STR_14:	
  2611  0413  3431               	retlw	49	;'1'
  2612  0414  3435               	retlw	53	;'5'
  2613  0415  3433               	retlw	51	;'3'
  2614  0416  3432               	retlw	50	;'2'
  2615  0417  3432               	retlw	50	;'2'
  2616  0418  3438               	retlw	56	;'8'
  2617  0419  3400               	retlw	0
  2618  041A                     STR_16:	
  2619  041A  3433               	retlw	51	;'3'
  2620  041B  3438               	retlw	56	;'8'
  2621  041C  3439               	retlw	57	;'9'
  2622  041D  3439               	retlw	57	;'9'
  2623  041E  3438               	retlw	56	;'8'
  2624  041F  3438               	retlw	56	;'8'
  2625  0420  3400               	retlw	0
  2626  0421                     STR_31:	
  2627  0421  3431               	retlw	49	;'1'
  2628  0422  3436               	retlw	54	;'6'
  2629  0423  3434               	retlw	52	;'4'
  2630  0424  3431               	retlw	49	;'1'
  2631  0425  3433               	retlw	51	;'3'
  2632  0426  3439               	retlw	57	;'9'
  2633  0427  3400               	retlw	0
  2634  0428                     STR_18:	
  2635  0428  3439               	retlw	57	;'9'
  2636  0429  3430               	retlw	48	;'0'
  2637  042A  3433               	retlw	51	;'3'
  2638  042B  3438               	retlw	56	;'8'
  2639  042C  3439               	retlw	57	;'9'
  2640  042D  3439               	retlw	57	;'9'
  2641  042E  3400               	retlw	0
  2642  042F                     STR_34:	
  2643  042F  3434               	retlw	52	;'4'
  2644  0430  3439               	retlw	57	;'9'
  2645  0431  3439               	retlw	57	;'9'
  2646  0432  3439               	retlw	57	;'9'
  2647  0433  3439               	retlw	57	;'9'
  2648  0434  3439               	retlw	57	;'9'
  2649  0435  3400               	retlw	0
  2650  0436                     STR_11:	
  2651  0436  3433               	retlw	51	;'3'
  2652  0437  3430               	retlw	48	;'0'
  2653  0438  3430               	retlw	48	;'0'
  2654  0439  3430               	retlw	48	;'0'
  2655  043A  3430               	retlw	48	;'0'
  2656  043B  3400               	retlw	0
  2657  043C                     STR_29:	
  2658  043C  3437               	retlw	55	;'7'
  2659  043D  3430               	retlw	48	;'0'
  2660  043E  3435               	retlw	53	;'5'
  2661  043F  3430               	retlw	48	;'0'
  2662  0440  3430               	retlw	48	;'0'
  2663  0441  3400               	retlw	0
  2664  0442                     STR_12:	
  2665  0442  3435               	retlw	53	;'5'
  2666  0443  3433               	retlw	51	;'3'
  2667  0444  3435               	retlw	53	;'5'
  2668  0445  3435               	retlw	53	;'5'
  2669  0446  3433               	retlw	51	;'3'
  2670  0447  3400               	retlw	0
  2671  0448                     STR_26:	
  2672  0448  3431               	retlw	49	;'1'
  2673  0449  3436               	retlw	54	;'6'
  2674  044A  3431               	retlw	49	;'1'
  2675  044B  3432               	retlw	50	;'2'
  2676  044C  3435               	retlw	53	;'5'
  2677  044D  3400               	retlw	0
  2678  044E                     STR_27:	
  2679  044E  3432               	retlw	50	;'2'
  2680  044F  3437               	retlw	55	;'7'
  2681  0450  3432               	retlw	50	;'2'
  2682  0451  3433               	retlw	51	;'3'
  2683  0452  3438               	retlw	56	;'8'
  2684  0453  3400               	retlw	0
  2685  0454                     STR_28:	
  2686  0454  3434               	retlw	52	;'4'
  2687  0455  3434               	retlw	52	;'4'
  2688  0456  3434               	retlw	52	;'4'
  2689  0457  3437               	retlw	55	;'7'
  2690  0458  3438               	retlw	56	;'8'
  2691  0459  3400               	retlw	0
  2692  045A                     STR_13:	
  2693  045A  3439               	retlw	57	;'9'
  2694  045B  3432               	retlw	50	;'2'
  2695  045C  3430               	retlw	48	;'0'
  2696  045D  3438               	retlw	56	;'8'
  2697  045E  3438               	retlw	56	;'8'
  2698  045F  3400               	retlw	0
  2699  0460                     STR_10:	
  2700  0460  3431               	retlw	49	;'1'
  2701  0461  3436               	retlw	54	;'6'
  2702  0462  3430               	retlw	48	;'0'
  2703  0463  3439               	retlw	57	;'9'
  2704  0464  3439               	retlw	57	;'9'
  2705  0465  3400               	retlw	0
  2706  0466                     STR_40:	
  2707  0466  3431               	retlw	49	;'1'
  2708  0467  342E               	retlw	46	;'.'
  2709  0468  3430               	retlw	48	;'0'
  2710  0469  3431               	retlw	49	;'1'
  2711  046A  3400               	retlw	0
  2712  046B                     STR_22:	
  2713  046B  3431               	retlw	49	;'1'
  2714  046C  3432               	retlw	50	;'2'
  2715  046D  3435               	retlw	53	;'5'
  2716  046E  3430               	retlw	48	;'0'
  2717  046F  3400               	retlw	0
  2718  0470                     STR_23:	
  2719  0470  3432               	retlw	50	;'2'
  2720  0471  3435               	retlw	53	;'5'
  2721  0472  3438               	retlw	56	;'8'
  2722  0473  3430               	retlw	48	;'0'
  2723  0474  3400               	retlw	0
  2724  0475                     STR_25:	
  2725  0475  3439               	retlw	57	;'9'
  2726  0476  3431               	retlw	49	;'1'
  2727  0477  3438               	retlw	56	;'8'
  2728  0478  3432               	retlw	50	;'2'
  2729  0479  3400               	retlw	0
  2730  047A                     STR_8:	
  2731  047A  3433               	retlw	51	;'3'
  2732  047B  3439               	retlw	57	;'9'
  2733  047C  3435               	retlw	53	;'5'
  2734  047D  3437               	retlw	55	;'7'
  2735  047E  3400               	retlw	0
  2736  047F                     STR_7:	
  2737  047F  3431               	retlw	49	;'1'
  2738  0480  3437               	retlw	55	;'7'
  2739  0481  3437               	retlw	55	;'7'
  2740  0482  3437               	retlw	55	;'7'
  2741  0483  3400               	retlw	0
  2742  0484                     STR_24:	
  2743  0484  3434               	retlw	52	;'4'
  2744  0485  3439               	retlw	57	;'9'
  2745  0486  3439               	retlw	57	;'9'
  2746  0487  3438               	retlw	56	;'8'
  2747  0488  3400               	retlw	0
  2748  0489                     STR_9:	
  2749  0489  3438               	retlw	56	;'8'
  2750  048A  3432               	retlw	50	;'2'
  2751  048B  3431               	retlw	49	;'1'
  2752  048C  3439               	retlw	57	;'9'
  2753  048D  3400               	retlw	0
  2754  02A9                     
  2755                           ; #config settings
  2756  0000                     
  2757                           	psect	cinit
  2758  002D                     start_initialization:	
  2759  002D                     __initialization:	
  2760                           
  2761                           ; Initialize objects allocated to BANK1
  2762  002D  3088               	movlw	low __pidataBANK1
  2763  002E  0084               	movwf	4
  2764  002F  308A               	movlw	(high __pidataBANK1)| (0+128)
  2765  0030  0085               	movwf	5
  2766  0031  30C8               	movlw	low __pdataBANK1
  2767  0032  0086               	movwf	6
  2768  0033  3000               	movlw	high __pdataBANK1
  2769  0034  0087               	movwf	7
  2770  0035  301E               	movlw	30
  2771  0036  3188  20DE  3180   	fcall	init_ram
  2772                           
  2773                           ; Initialize objects allocated to BANK2
  2774  0039  30A5               	movlw	low __pidataBANK2
  2775  003A  0084               	movwf	4
  2776  003B  308C               	movlw	(high __pidataBANK2)| (0+128)
  2777  003C  0085               	movwf	5
  2778  003D  3020               	movlw	low __pdataBANK2
  2779  003E  0086               	movwf	6
  2780  003F  3001               	movlw	high __pdataBANK2
  2781  0040  0087               	movwf	7
  2782  0041  303C               	movlw	60
  2783  0042  3188  20DE  3180   	fcall	init_ram
  2784                           
  2785                           ; Clear objects allocated to COMMON
  2786  0045  01F0               	clrf	__pbssCOMMON& (0+127)
  2787  0046  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2788  0047  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2789  0048  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2790  0049  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2791  004A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2792                           
  2793                           ; Clear objects allocated to BANK0
  2794  004B  01EC               	clrf	__pbssBANK0& (0+127)
  2795  004C  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  2796  004D  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  2797  004E  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  2798                           
  2799                           ; Clear objects allocated to BANK1
  2800  004F  30A0               	movlw	low __pbssBANK1
  2801  0050  0084               	movwf	4
  2802  0051  3000               	movlw	high __pbssBANK1
  2803  0052  0085               	movwf	5
  2804  0053  3028               	movlw	40
  2805  0054  3188  20D8         	fcall	clear_ram0
  2806  0056                     end_of_initialization:	
  2807                           ;End of C runtime variable initialization code
  2808                           
  2809  0056                     __end_of__initialization:	
  2810  0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2811  0057  0020               	movlb	0
  2812  0058  3184  2C8E         	ljmp	_main	;jump to C main() function
  2813                           
  2814                           	psect	bssCOMMON
  2815  0070                     __pbssCOMMON:	
  2816  0070                     _mTouch_Interval:	
  2817  0070                     	ds	3
  2818  0073                     _count:	
  2819  0073                     	ds	2
  2820  0075                     mTouch_Read@channel:	
  2821  0075                     	ds	1
  2822                           
  2823                           	psect	bssBANK0
  2824  006C                     __pbssBANK0:	
  2825  006C                     main@state_mode:	
  2826  006C                     	ds	1
  2827  006D                     _VoltageReg:	
  2828  006D                     	ds	2
  2829  006F                     _ConfigReg:	
  2830  006F                     	ds	1
  2831                           
  2832                           	psect	bssBANK1
  2833  00A0                     __pbssBANK1:	
  2834  00A0                     _tcnt:	
  2835  00A0                     	ds	8
  2836  00A8                     _cnts:	
  2837  00A8                     	ds	4
  2838  00AC                     _CPS_PreData:	
  2839  00AC                     	ds	3
  2840  00AF                     _CPS_Data:	
  2841  00AF                     	ds	3
  2842  00B2                     _I2C2_Config:	
  2843  00B2                     	ds	19
  2844  00C5                     main@pmt_config:	
  2845  00C5                     	ds	3
  2846                           
  2847                           	psect	dataBANK1
  2848  00C8                     __pdataBANK1:	
  2849  00C8                     _DAC_DataTable:	
  2850  00C8                     	ds	30
  2851                           
  2852                           	psect	dataBANK2
  2853  0120                     __pdataBANK2:	
  2854  0120                     _H7826_01_Gain:	
  2855  0120                     	ds	30
  2856  013E                     _H7826_Gain:	
  2857  013E                     	ds	30
  2858                           
  2859                           	psect	inittext
  2860  08DE                     init_ram:	
  2861  08DE  00FE               	movwf	126
  2862  08DF                     initloop:	
  2863  08DF  0012               	moviw fsr0++
  2864  08E0  001E               	movwi fsr1++
  2865  08E1  0BFE               	decfsz	126,f
  2866  08E2  28DF               	goto	initloop
  2867  08E3  3400               	retlw	0
  2868                           
  2869                           	psect	clrtext
  2870  08D8                     clear_ram0:	
  2871                           ;	Called with FSR0 containing the base address, and
  2872                           ;	WREG with the size to clear
  2873                           
  2874  08D8  0064               	clrwdt	;clear the watchdog before getting into this loop
  2875  08D9                     clrloop0:	
  2876  08D9  0180               	clrf	0	;clear RAM location pointed to by FSR
  2877  08DA  3101               	addfsr 0,1
  2878  08DB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2879  08DC  28D9               	goto	clrloop0	;have we reached the end yet?
  2880  08DD  3400               	retlw	0	;all done for this memory range, return
  2881                           
  2882                           	psect	cstackCOMMON
  2883  0076                     __pcstackCOMMON:	
  2884  0076                     ?_isdigit:	
  2885  0076                     ?_I2C2_Interrupt:	
  2886                           ; 1 bit 
  2887                           
  2888  0076                     ??_I2C2_Interrupt:	
  2889                           ; 1 bytes @ 0x0
  2890                           
  2891  0076                     ?_LCD_DisplayClear:	
  2892                           ; 1 bytes @ 0x0
  2893                           
  2894  0076                     ?_Timer1_ClearRecord:	
  2895                           ; 1 bytes @ 0x0
  2896                           
  2897  0076                     ?_eeprom_read:	
  2898                           ; 1 bytes @ 0x0
  2899                           
  2900  0076                     ?_Basic_Init:	
  2901                           ; 1 bytes @ 0x0
  2902                           
  2903  0076                     ?_StartUp_Menu:	
  2904                           ; 1 bytes @ 0x0
  2905                           
  2906  0076                     ?_Ssetting_PMT_Config:	
  2907                           ; 1 bytes @ 0x0
  2908                           
  2909  0076                     ?_Show_PMT_Config:	
  2910                           ; 1 bytes @ 0x0
  2911                           
  2912  0076                     ?_Buzzer_Init:	
  2913                           ; 1 bytes @ 0x0
  2914                           
  2915  0076                     ?_Buzzer_SetDuty:	
  2916                           ; 1 bytes @ 0x0
  2917                           
  2918  0076                     ?_Buzzer_Count1ms:	
  2919                           ; 1 bytes @ 0x0
  2920                           
  2921  0076                     ?_I2C_CommonInterrupt:	
  2922                           ; 1 bytes @ 0x0
  2923                           
  2924  0076                     ?_LCD_WriteData:	
  2925                           ; 1 bytes @ 0x0
  2926                           
  2927  0076                     ?_LCD_Init:	
  2928                           ; 1 bytes @ 0x0
  2929                           
  2930  0076                     ?_putch:	
  2931                           ; 1 bytes @ 0x0
  2932                           
  2933  0076                     ?_LCD_CursorHome:	
  2934                           ; 1 bytes @ 0x0
  2935                           
  2936  0076                     ?_DAC_Initialize:	
  2937                           ; 1 bytes @ 0x0
  2938                           
  2939  0076                     ?_Timer1_Init:	
  2940                           ; 1 bytes @ 0x0
  2941                           
  2942  0076                     ?_Timer1_StartCount:	
  2943                           ; 1 bytes @ 0x0
  2944                           
  2945  0076                     ?_Timer1_StopCount:	
  2946                           ; 1 bytes @ 0x0
  2947                           
  2948  0076                     ?_Timer1_GetSecond:	
  2949                           ; 1 bytes @ 0x0
  2950                           
  2951  0076                     ?_Timer1_GetMinute:	
  2952                           ; 1 bytes @ 0x0
  2953                           
  2954  0076                     ?_Timer1_Count1ms:	
  2955                           ; 1 bytes @ 0x0
  2956                           
  2957  0076                     ?_Timer1_DetectAssignCount:	
  2958                           ; 1 bytes @ 0x0
  2959                           
  2960  0076                     ??_Timer1_DetectAssignCount:	
  2961                           ; 1 bytes @ 0x0
  2962                           
  2963  0076                     ?_Timer6_Init:	
  2964                           ; 1 bytes @ 0x0
  2965                           
  2966  0076                     ?_Timer6_CheckFlag:	
  2967                           ; 1 bytes @ 0x0
  2968                           
  2969  0076                     ??_Timer6_CheckFlag:	
  2970                           ; 1 bytes @ 0x0
  2971                           
  2972  0076                     ?_mTouch_PortInit:	
  2973                           ; 1 bytes @ 0x0
  2974                           
  2975  0076                     ?_mTouch_Init:	
  2976                           ; 1 bytes @ 0x0
  2977                           
  2978  0076                     ?_mTouch_Read:	
  2979                           ; 1 bytes @ 0x0
  2980                           
  2981  0076                     ??_mTouch_Read:	
  2982                           ; 1 bytes @ 0x0
  2983                           
  2984  0076                     ?_mTouch_IntervalDecrement:	
  2985                           ; 1 bytes @ 0x0
  2986                           
  2987  0076                     ??_mTouch_IntervalDecrement:	
  2988                           ; 1 bytes @ 0x0
  2989                           
  2990  0076                     ?_mTouch_Check:	
  2991                           ; 1 bytes @ 0x0
  2992                           
  2993  0076                     ?_main:	
  2994                           ; 1 bytes @ 0x0
  2995                           
  2996  0076                     ?_Handler:	
  2997                           ; 1 bytes @ 0x0
  2998                           
  2999  0076                     ?_I2C2_PinInit:	
  3000                           ; 1 bytes @ 0x0
  3001                           
  3002  0076                     ?_Save_PMTConfig:	
  3003                           ; 1 bytes @ 0x0
  3004                           
  3005  0076                     ?_Load_PMTConfing:	
  3006                           ; 1 bytes @ 0x0
  3007                           
  3008  0076                     ?i1_Buzzer_MiliSecond:	
  3009                           ; 1 bytes @ 0x0
  3010                           
  3011  0076                     Buzzer_SetDuty@duty:	
  3012                           ; 1 bytes @ 0x0
  3013                           
  3014  0076                     i1Buzzer_MiliSecond@time:	
  3015                           ; 2 bytes @ 0x0
  3016                           
  3017                           
  3018                           ; 2 bytes @ 0x0
  3019  0076                     	ds	1
  3020  0077                     ??_I2C_CommonInterrupt:	
  3021                           
  3022                           ; 1 bytes @ 0x1
  3023  0077                     	ds	1
  3024  0078                     ??_Buzzer_SetDuty:	
  3025  0078                     ??_Timer1_Count1ms:	
  3026                           ; 1 bytes @ 0x2
  3027                           
  3028  0078                     ??i1_Buzzer_MiliSecond:	
  3029                           ; 1 bytes @ 0x2
  3030                           
  3031                           
  3032                           ; 1 bytes @ 0x2
  3033  0078                     	ds	2
  3034  007A                     Buzzer_SetDuty@CCP2CON_Pre:	
  3035                           
  3036                           ; 1 bytes @ 0x4
  3037  007A                     	ds	1
  3038  007B                     ??_Buzzer_Count1ms:	
  3039  007B                     ??_Handler:	
  3040                           ; 1 bytes @ 0x5
  3041                           
  3042                           
  3043                           ; 1 bytes @ 0x5
  3044  007B                     	ds	1
  3045                           
  3046                           	psect	cstackBANK0
  3047  0020                     __pcstackBANK0:	
  3048  0020                     ?_I2C2_Transmit:	
  3049  0020                     ??_Timer1_ClearRecord:	
  3050                           ; 1 bytes @ 0x0
  3051                           
  3052  0020                     ?_eeprom_write:	
  3053                           ; 1 bytes @ 0x0
  3054                           
  3055  0020                     ??_eeprom_read:	
  3056                           ; 1 bytes @ 0x0
  3057                           
  3058  0020                     ??_Basic_Init:	
  3059                           ; 1 bytes @ 0x0
  3060                           
  3061  0020                     ??_isdigit:	
  3062                           ; 1 bytes @ 0x0
  3063                           
  3064  0020                     ??_Buzzer_Init:	
  3065                           ; 1 bytes @ 0x0
  3066                           
  3067  0020                     ?_Buzzer_MiliSecond:	
  3068                           ; 1 bytes @ 0x0
  3069                           
  3070  0020                     ??_LCD_WriteData:	
  3071                           ; 1 bytes @ 0x0
  3072                           
  3073  0020                     ??_Timer1_Init:	
  3074                           ; 1 bytes @ 0x0
  3075                           
  3076  0020                     ??_Timer1_StartCount:	
  3077                           ; 1 bytes @ 0x0
  3078                           
  3079  0020                     ??_Timer1_StopCount:	
  3080                           ; 1 bytes @ 0x0
  3081                           
  3082  0020                     ??_Timer1_GetSecond:	
  3083                           ; 1 bytes @ 0x0
  3084                           
  3085  0020                     ??_Timer1_GetMinute:	
  3086                           ; 1 bytes @ 0x0
  3087                           
  3088  0020                     ??_Timer6_Init:	
  3089                           ; 1 bytes @ 0x0
  3090                           
  3091  0020                     ??_mTouch_PortInit:	
  3092                           ; 1 bytes @ 0x0
  3093                           
  3094  0020                     ??_I2C2_PinInit:	
  3095                           ; 1 bytes @ 0x0
  3096                           
  3097  0020                     ?___wmul:	
  3098                           ; 1 bytes @ 0x0
  3099                           
  3100  0020                     ?_Timer1_GetCountSum:	
  3101                           ; 2 bytes @ 0x0
  3102                           
  3103  0020                     ?___lmul:	
  3104                           ; 4 bytes @ 0x0
  3105                           
  3106  0020                     I2C2_Transmit@pData:	
  3107                           ; 4 bytes @ 0x0
  3108                           
  3109  0020                     eeprom_write@value:	
  3110                           ; 1 bytes @ 0x0
  3111                           
  3112  0020                     _isdigit$904:	
  3113                           ; 1 bytes @ 0x0
  3114                           
  3115  0020                     Buzzer_MiliSecond@time:	
  3116                           ; 1 bytes @ 0x0
  3117                           
  3118  0020                     ___wmul@multiplier:	
  3119                           ; 2 bytes @ 0x0
  3120                           
  3121  0020                     ___lmul@multiplier:	
  3122                           ; 2 bytes @ 0x0
  3123                           
  3124                           
  3125                           ; 4 bytes @ 0x0
  3126  0020                     	ds	1
  3127  0021                     ?_I2C2_Setting:	
  3128  0021                     ??_eeprom_write:	
  3129                           ; 1 bytes @ 0x1
  3130                           
  3131  0021                     ??_mTouch_Init:	
  3132                           ; 1 bytes @ 0x1
  3133                           
  3134  0021                     I2C2_Setting@mode:	
  3135                           ; 1 bytes @ 0x1
  3136                           
  3137  0021                     I2C2_Transmit@size:	
  3138                           ; 1 bytes @ 0x1
  3139                           
  3140  0021                     isdigit@c:	
  3141                           ; 1 bytes @ 0x1
  3142                           
  3143                           
  3144                           ; 1 bytes @ 0x1
  3145  0021                     	ds	1
  3146  0022                     ??_I2C2_Transmit:	
  3147  0022                     ??_Buzzer_MiliSecond:	
  3148                           ; 1 bytes @ 0x2
  3149                           
  3150  0022                     ??_mTouch_Check:	
  3151                           ; 1 bytes @ 0x2
  3152                           
  3153  0022                     LCD_WriteData@point:	
  3154                           ; 1 bytes @ 0x2
  3155                           
  3156  0022                     I2C2_Setting@Speed:	
  3157                           ; 1 bytes @ 0x2
  3158                           
  3159  0022                     ___wmul@multiplicand:	
  3160                           ; 1 bytes @ 0x2
  3161                           
  3162                           
  3163                           ; 2 bytes @ 0x2
  3164  0022                     	ds	1
  3165  0023                     ??_I2C2_Setting:	
  3166  0023                     ??_LCD_DisplayClear:	
  3167                           ; 1 bytes @ 0x3
  3168                           
  3169  0023                     ??_putch:	
  3170                           ; 1 bytes @ 0x3
  3171                           
  3172  0023                     ??_LCD_CursorHome:	
  3173                           ; 1 bytes @ 0x3
  3174                           
  3175  0023                     ?_LCD_CursorPosition:	
  3176                           ; 1 bytes @ 0x3
  3177                           
  3178  0023                     putch@c:	
  3179                           ; 1 bytes @ 0x3
  3180                           
  3181  0023                     LCD_CursorPosition@ty:	
  3182                           ; 1 bytes @ 0x3
  3183                           
  3184  0023                     eeprom_read@addr:	
  3185                           ; 1 bytes @ 0x3
  3186                           
  3187  0023                     eeprom_write@addr:	
  3188                           ; 1 bytes @ 0x3
  3189                           
  3190                           
  3191                           ; 1 bytes @ 0x3
  3192  0023                     	ds	1
  3193  0024                     ??_LCD_Init:	
  3194  0024                     ??_LCD_CursorPosition:	
  3195                           ; 1 bytes @ 0x4
  3196                           
  3197  0024                     ??_Timer1_GetCountSum:	
  3198                           ; 1 bytes @ 0x4
  3199                           
  3200  0024                     ?_EEPROM_MultiWrite:	
  3201                           ; 1 bytes @ 0x4
  3202                           
  3203  0024                     ?_EEPROM_MultiRead:	
  3204                           ; 1 bytes @ 0x4
  3205                           
  3206  0024                     ??___wmul:	
  3207                           ; 1 bytes @ 0x4
  3208                           
  3209  0024                     EEPROM_MultiWrite@size:	
  3210                           ; 1 bytes @ 0x4
  3211                           
  3212  0024                     EEPROM_MultiRead@size:	
  3213                           ; 1 bytes @ 0x4
  3214                           
  3215  0024                     I2C2_Setting@address:	
  3216                           ; 1 bytes @ 0x4
  3217                           
  3218  0024                     I2C2_Transmit@address:	
  3219                           ; 1 bytes @ 0x4
  3220                           
  3221  0024                     ___wmul@product:	
  3222                           ; 1 bytes @ 0x4
  3223                           
  3224  0024                     ___lmul@multiplicand:	
  3225                           ; 2 bytes @ 0x4
  3226                           
  3227                           
  3228                           ; 4 bytes @ 0x4
  3229  0024                     	ds	1
  3230  0025                     ?_I2C_Init:	
  3231  0025                     I2C_Init@address:	
  3232                           ; 1 bytes @ 0x5
  3233                           
  3234  0025                     LCD_CursorPosition@tx:	
  3235                           ; 1 bytes @ 0x5
  3236                           
  3237  0025                     EEPROM_MultiWrite@addr:	
  3238                           ; 1 bytes @ 0x5
  3239                           
  3240  0025                     EEPROM_MultiRead@addr:	
  3241                           ; 1 bytes @ 0x5
  3242                           
  3243  0025                     I2C2_Transmit@i:	
  3244                           ; 1 bytes @ 0x5
  3245                           
  3246                           
  3247                           ; 1 bytes @ 0x5
  3248  0025                     	ds	1
  3249  0026                     ??_EEPROM_MultiWrite:	
  3250  0026                     ??_EEPROM_MultiRead:	
  3251                           ; 1 bytes @ 0x6
  3252                           
  3253  0026                     I2C_Init@mode:	
  3254                           ; 1 bytes @ 0x6
  3255                           
  3256  0026                     I2C2_Transmit@i_560:	
  3257                           ; 1 bytes @ 0x6
  3258                           
  3259                           
  3260                           ; 1 bytes @ 0x6
  3261  0026                     	ds	1
  3262  0027                     I2C_Init@Speed:	
  3263  0027                     mTouch_Check@chan:	
  3264                           ; 1 bytes @ 0x7
  3265                           
  3266  0027                     I2C2_Transmit@result:	
  3267                           ; 1 bytes @ 0x7
  3268                           
  3269                           
  3270                           ; 1 bytes @ 0x7
  3271  0027                     	ds	1
  3272  0028                     ??_I2C_Init:	
  3273  0028                     ?_I2C_Transmit:	
  3274                           ; 1 bytes @ 0x8
  3275                           
  3276  0028                     ??___lmul:	
  3277                           ; 1 bytes @ 0x8
  3278                           
  3279  0028                     I2C_Transmit@address:	
  3280                           ; 1 bytes @ 0x8
  3281                           
  3282  0028                     ___lmul@product:	
  3283                           ; 1 bytes @ 0x8
  3284                           
  3285                           
  3286                           ; 4 bytes @ 0x8
  3287  0028                     	ds	1
  3288  0029                     I2C_Transmit@pData:	
  3289  0029                     EEPROM_MultiWrite@pData:	
  3290                           ; 1 bytes @ 0x9
  3291                           
  3292  0029                     EEPROM_MultiRead@pData:	
  3293                           ; 1 bytes @ 0x9
  3294                           
  3295                           
  3296                           ; 1 bytes @ 0x9
  3297  0029                     	ds	1
  3298  002A                     I2C_Init@I2Cx:	
  3299  002A                     I2C_Transmit@size:	
  3300                           ; 1 bytes @ 0xA
  3301                           
  3302  002A                     EEPROM_MultiWrite@i:	
  3303                           ; 1 bytes @ 0xA
  3304                           
  3305  002A                     EEPROM_MultiRead@i:	
  3306                           ; 1 bytes @ 0xA
  3307                           
  3308                           
  3309                           ; 1 bytes @ 0xA
  3310  002A                     	ds	1
  3311  002B                     ??_I2C_Transmit:	
  3312  002B                     ??_Save_PMTConfig:	
  3313                           ; 1 bytes @ 0xB
  3314                           
  3315  002B                     ??_Load_PMTConfing:	
  3316                           ; 1 bytes @ 0xB
  3317                           
  3318                           
  3319                           ; 1 bytes @ 0xB
  3320  002B                     	ds	1
  3321  002C                     ?___lldiv:	
  3322  002C                     Save_PMTConfig@data:	
  3323                           ; 4 bytes @ 0xC
  3324                           
  3325  002C                     Load_PMTConfing@data:	
  3326                           ; 1 bytes @ 0xC
  3327                           
  3328  002C                     ___lldiv@divisor:	
  3329                           ; 1 bytes @ 0xC
  3330                           
  3331                           
  3332                           ; 4 bytes @ 0xC
  3333  002C                     	ds	2
  3334  002E                     I2C_Transmit@I2Cx:	
  3335                           
  3336                           ; 1 bytes @ 0xE
  3337  002E                     	ds	1
  3338  002F                     I2C_Transmit@result:	
  3339                           
  3340                           ; 1 bytes @ 0xF
  3341  002F                     	ds	1
  3342  0030                     ??_DAC_Initialize:	
  3343  0030                     ?_DAC_WriteVoltage:	
  3344                           ; 1 bytes @ 0x10
  3345                           
  3346  0030                     DAC_WriteVoltage@volue:	
  3347                           ; 1 bytes @ 0x10
  3348                           
  3349  0030                     ___lldiv@dividend:	
  3350                           ; 2 bytes @ 0x10
  3351                           
  3352                           
  3353                           ; 4 bytes @ 0x10
  3354  0030                     	ds	2
  3355  0032                     ??_DAC_WriteVoltage:	
  3356                           
  3357                           ; 1 bytes @ 0x12
  3358  0032                     	ds	2
  3359  0034                     ??___lldiv:	
  3360                           
  3361                           ; 1 bytes @ 0x14
  3362  0034                     	ds	1
  3363  0035                     ___lldiv@quotient:	
  3364                           
  3365                           ; 4 bytes @ 0x15
  3366  0035                     	ds	4
  3367  0039                     ___lldiv@counter:	
  3368                           
  3369                           ; 1 bytes @ 0x19
  3370  0039                     	ds	1
  3371  003A                     ?_Timer1_GetCPS:	
  3372  003A                     ?___llmod:	
  3373                           ; 4 bytes @ 0x1A
  3374                           
  3375  003A                     ___llmod@divisor:	
  3376                           ; 4 bytes @ 0x1A
  3377                           
  3378                           
  3379                           ; 4 bytes @ 0x1A
  3380  003A                     	ds	4
  3381  003E                     ??_Timer1_GetCPS:	
  3382  003E                     ?_Timer1_GetCPM:	
  3383                           ; 1 bytes @ 0x1E
  3384                           
  3385  003E                     ___llmod@dividend:	
  3386                           ; 4 bytes @ 0x1E
  3387                           
  3388                           
  3389                           ; 4 bytes @ 0x1E
  3390  003E                     	ds	4
  3391  0042                     ??_Timer1_GetCPM:	
  3392  0042                     ??___llmod:	
  3393                           ; 1 bytes @ 0x22
  3394                           
  3395  0042                     _Timer1_GetCPM$1189:	
  3396                           ; 1 bytes @ 0x22
  3397                           
  3398                           
  3399                           ; 4 bytes @ 0x22
  3400  0042                     	ds	1
  3401  0043                     ___llmod@counter:	
  3402                           
  3403                           ; 1 bytes @ 0x23
  3404  0043                     	ds	3
  3405  0046                     ?_printf:	
  3406  0046                     printf@f:	
  3407                           ; 2 bytes @ 0x26
  3408                           
  3409                           
  3410                           ; 2 bytes @ 0x26
  3411  0046                     	ds	10
  3412  0050                     ??_printf:	
  3413                           
  3414                           ; 1 bytes @ 0x30
  3415  0050                     	ds	6
  3416  0056                     printf@prec:	
  3417                           
  3418                           ; 2 bytes @ 0x36
  3419  0056                     	ds	2
  3420  0058                     printf@cp:	
  3421                           
  3422                           ; 2 bytes @ 0x38
  3423  0058                     	ds	2
  3424  005A                     printf@len:	
  3425                           
  3426                           ; 2 bytes @ 0x3A
  3427  005A                     	ds	2
  3428  005C                     printf@val:	
  3429                           
  3430                           ; 4 bytes @ 0x3C
  3431  005C                     	ds	4
  3432  0060                     printf@ap:	
  3433                           
  3434                           ; 1 bytes @ 0x40
  3435  0060                     	ds	1
  3436  0061                     printf@flag:	
  3437                           
  3438                           ; 1 bytes @ 0x41
  3439  0061                     	ds	1
  3440  0062                     printf@c:	
  3441                           
  3442                           ; 1 bytes @ 0x42
  3443  0062                     	ds	1
  3444  0063                     printf@width:	
  3445                           
  3446                           ; 2 bytes @ 0x43
  3447  0063                     	ds	2
  3448  0065                     ??_StartUp_Menu:	
  3449  0065                     ??_Ssetting_PMT_Config:	
  3450                           ; 1 bytes @ 0x45
  3451                           
  3452  0065                     ??_Show_PMT_Config:	
  3453                           ; 1 bytes @ 0x45
  3454                           
  3455                           
  3456                           ; 1 bytes @ 0x45
  3457  0065                     	ds	1
  3458  0066                     Ssetting_PMT_Config@data:	
  3459                           
  3460                           ; 1 bytes @ 0x46
  3461  0066                     	ds	1
  3462  0067                     StartUp_Menu@data:	
  3463  0067                     Show_PMT_Config@data:	
  3464                           ; 1 bytes @ 0x47
  3465                           
  3466                           
  3467                           ; 1 bytes @ 0x47
  3468  0067                     	ds	1
  3469  0068                     ??_main:	
  3470                           
  3471                           ; 1 bytes @ 0x48
  3472  0068                     	ds	4
  3473                           
  3474                           	psect	maintext
  3475  048E                     __pmaintext:	
  3476 ;;
  3477 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3478 ;;
  3479 ;; *************** function _main *****************
  3480 ;; Defined at:
  3481 ;;		line 23 in file "main.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;		None
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      char 
  3488 ;; Registers used:
  3489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : B1F/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3495 ;;      Params:         0       0       0       0       0       0
  3496 ;;      Locals:         0       0       0       0       0       0
  3497 ;;      Temps:          0       4       0       0       0       0
  3498 ;;      Totals:         0       4       0       0       0       0
  3499 ;;Total ram usage:        4 bytes
  3500 ;; Hardware stack levels required when called:    7
  3501 ;; This function calls:
  3502 ;;		_Basic_Init
  3503 ;;		_Buzzer_Init
  3504 ;;		_DAC_Initialize
  3505 ;;		_LCD_CursorPosition
  3506 ;;		_LCD_DisplayClear
  3507 ;;		_LCD_Init
  3508 ;;		_Show_PMT_Config
  3509 ;;		_Ssetting_PMT_Config
  3510 ;;		_StartUp_Menu
  3511 ;;		_Timer1_ClearRecord
  3512 ;;		_Timer1_GetCPM
  3513 ;;		_Timer1_GetCPS
  3514 ;;		_Timer1_GetCountSum
  3515 ;;		_Timer1_GetMinute
  3516 ;;		_Timer1_GetSecond
  3517 ;;		_Timer1_Init
  3518 ;;		_Timer1_StartCount
  3519 ;;		_Timer1_StopCount
  3520 ;;		_Timer6_Init
  3521 ;;		_mTouch_Check
  3522 ;;		_mTouch_Init
  3523 ;;		_printf
  3524 ;; This function is called by:
  3525 ;;		Startup code after reset
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           
  3530                           ;psect for function _main
  3531  048E                     _main:	
  3532                           
  3533                           ;main.c: 26: static STATE_OF_MODE state_mode = STOPPING;
  3534                           ;main.c: 27: static PMT_CONFIGURATION pmt_config;
  3535                           ;main.c: 29: Basic_Init();
  3536                           
  3537                           ;incstack = 0
  3538                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3539  048E  3189  217A  3184   	fcall	_Basic_Init
  3540                           
  3541                           ;main.c: 31: LATA6 = 1;
  3542  0491  0022               	movlb	2	; select bank2
  3543  0492  170C               	bsf	12,6	;volatile
  3544                           
  3545                           ;main.c: 33: Buzzer_Init();
  3546  0493  318B  232E  3184   	fcall	_Buzzer_Init
  3547                           
  3548                           ;main.c: 35: LCD_Init();
  3549  0496  3187  278C  3184   	fcall	_LCD_Init
  3550                           
  3551                           ;main.c: 37: Timer1_Init();
  3552  0499  318A  22E7  3184   	fcall	_Timer1_Init
  3553                           
  3554                           ;main.c: 38: Timer1_StopCount();
  3555  049C  3188  20D5  3184   	fcall	_Timer1_StopCount
  3556                           
  3557                           ;main.c: 40: mTouch_Init();
  3558  049F  3189  21AF  3184   	fcall	_mTouch_Init
  3559                           
  3560                           ;main.c: 42: Timer6_Init();
  3561  04A2  3189  219C  3184   	fcall	_Timer6_Init
  3562                           
  3563                           ;main.c: 44: DAC_Initialize();
  3564  04A5  318A  22A6  3184   	fcall	_DAC_Initialize
  3565                           
  3566                           ;main.c: 46: StartUp_Menu(&pmt_config);
  3567  04A8  30C5               	movlw	(low (main@pmt_config| 0))& (0+255)
  3568  04A9  3186  26EB  3184   	fcall	_StartUp_Menu
  3569                           
  3570                           ;main.c: 49: {
  3571                           ;main.c: 50: switch(state_mode)
  3572                           
  3573                           ;main.c: 48: while(1)
  3574  04AC  2D16               	goto	l4390
  3575  04AD                     l4346:	
  3576                           ;main.c: 51: {
  3577                           ;main.c: 52: case COUNTING:
  3578                           
  3579                           
  3580                           ;main.c: 53: if(mTouch_Check(0x02))
  3581  04AD  3002               	movlw	2
  3582  04AE  318D  25E2  3184   	fcall	_mTouch_Check
  3583  04B1  3A00               	xorlw	0
  3584  04B2  1903               	skipnz
  3585  04B3  2D0B               	goto	l4420
  3586                           
  3587                           ;main.c: 54: {
  3588                           ;main.c: 55: Timer1_StopCount();
  3589  04B4  3188  20D5  3184   	fcall	_Timer1_StopCount
  3590  04B7  2CF6               	goto	l4378
  3591  04B8                     l4354:	
  3592                           ;main.c: 61: case STOPPING:
  3593                           
  3594                           ;main.c: 58: }
  3595                           ;main.c: 59: break;
  3596                           
  3597                           ;main.c: 57: state_mode = STOPPING;
  3598                           
  3599                           ;main.c: 56: LCD_DisplayClear();
  3600                           
  3601                           
  3602                           ;main.c: 62: if(mTouch_Check(0x00))
  3603  04B8  3000               	movlw	0
  3604  04B9  318D  25E2  3184   	fcall	_mTouch_Check
  3605  04BC  3A00               	xorlw	0
  3606  04BD  1903               	skipnz
  3607  04BE  2CC9               	goto	l4360
  3608                           
  3609                           ;main.c: 63: {
  3610                           ;main.c: 64: Timer1_StartCount();
  3611  04BF  3187  27FB  3184   	fcall	_Timer1_StartCount
  3612                           
  3613                           ;main.c: 65: LCD_DisplayClear();
  3614  04C2  3189  215A  3184   	fcall	_LCD_DisplayClear
  3615                           
  3616                           ;main.c: 66: state_mode = COUNTING;
  3617  04C5  0020               	movlb	0	; select bank0
  3618  04C6  01EC               	clrf	main@state_mode
  3619  04C7  0AEC               	incf	main@state_mode,f
  3620                           
  3621                           ;main.c: 67: }
  3622  04C8  2D0B               	goto	l4420
  3623  04C9                     l4360:	
  3624                           
  3625                           ;main.c: 68: else if(mTouch_Check(0x01))
  3626  04C9  3001               	movlw	1
  3627  04CA  318D  25E2  3184   	fcall	_mTouch_Check
  3628  04CD  3A00               	xorlw	0
  3629  04CE  1903               	skipnz
  3630  04CF  2CD4               	goto	l4364
  3631                           
  3632                           ;main.c: 69: {
  3633                           ;main.c: 70: Timer1_ClearRecord();
  3634  04D0  3189  21C2  3184   	fcall	_Timer1_ClearRecord
  3635                           
  3636                           ;main.c: 71: }
  3637  04D3  2D0B               	goto	l4420
  3638  04D4                     l4364:	
  3639                           
  3640                           ;main.c: 72: else if(mTouch_Check(0x02))
  3641  04D4  3002               	movlw	2
  3642  04D5  318D  25E2  3184   	fcall	_mTouch_Check
  3643  04D8  3A00               	xorlw	0
  3644  04D9  1903               	skipnz
  3645  04DA  2D0B               	goto	l4420
  3646                           
  3647                           ;main.c: 73: {
  3648                           ;main.c: 74: Timer1_StopCount();
  3649  04DB  3188  20D5  3184   	fcall	_Timer1_StopCount
  3650                           
  3651                           ;main.c: 75: LCD_DisplayClear();
  3652  04DE  3189  215A  3184   	fcall	_LCD_DisplayClear
  3653                           
  3654                           ;main.c: 76: state_mode = RESULT;
  3655  04E1  3002               	movlw	2
  3656  04E2  2D07               	goto	L2
  3657  04E3                     l4370:	
  3658                           ;main.c: 80: case RESULT:
  3659                           
  3660                           ;main.c: 77: }
  3661                           ;main.c: 78: break;
  3662                           
  3663                           
  3664                           ;main.c: 81: if(mTouch_Check(0x00))
  3665  04E3  3000               	movlw	0
  3666  04E4  318D  25E2  3184   	fcall	_mTouch_Check
  3667  04E7  3A00               	xorlw	0
  3668  04E8  1903               	skipnz
  3669  04E9  2CEF               	goto	l4376
  3670                           
  3671                           ;main.c: 82: {
  3672                           ;main.c: 83: LCD_DisplayClear();
  3673  04EA  3189  215A  3184   	fcall	_LCD_DisplayClear
  3674                           
  3675                           ;main.c: 84: state_mode = SETTING;
  3676  04ED  3003               	movlw	3
  3677  04EE  2D07               	goto	L2
  3678  04EF                     l4376:	
  3679                           ;main.c: 85: }
  3680                           
  3681                           
  3682                           ;main.c: 86: else if(mTouch_Check(0x02))
  3683  04EF  3002               	movlw	2
  3684  04F0  318D  25E2  3184   	fcall	_mTouch_Check
  3685  04F3  3A00               	xorlw	0
  3686  04F4  1903               	skipnz
  3687  04F5  2CFC               	goto	l4382
  3688  04F6                     l4378:	
  3689                           
  3690                           ;main.c: 87: {
  3691                           ;main.c: 88: LCD_DisplayClear();
  3692  04F6  3189  215A  3184   	fcall	_LCD_DisplayClear
  3693                           
  3694                           ;main.c: 89: state_mode = STOPPING;
  3695  04F9  0020               	movlb	0	; select bank0
  3696  04FA  01EC               	clrf	main@state_mode
  3697                           
  3698                           ;main.c: 90: }
  3699  04FB  2D0B               	goto	l4420
  3700  04FC                     l4382:	
  3701                           
  3702                           ;main.c: 91: else if(mTouch_Check(0x01))
  3703  04FC  3001               	movlw	1
  3704  04FD  318D  25E2  3184   	fcall	_mTouch_Check
  3705  0500  3A00               	xorlw	0
  3706  0501  1903               	skipnz
  3707  0502  2D0B               	goto	l4420
  3708                           
  3709                           ;main.c: 92: {
  3710                           ;main.c: 93: LCD_DisplayClear();
  3711  0503  3189  215A  3184   	fcall	_LCD_DisplayClear
  3712                           
  3713                           ;main.c: 94: state_mode = SHOW_CONFIG;
  3714  0506  3004               	movlw	4
  3715  0507                     L2:	
  3716  0507  0020               	movlb	0	; select bank0
  3717  0508  00E8               	movwf	??_main
  3718  0509  0868               	movf	??_main,w
  3719  050A  00EC               	movwf	main@state_mode
  3720  050B                     l4420:	
  3721                           ;main.c: 100: }
  3722                           
  3723                           ;main.c: 99: break;
  3724                           
  3725                           ;main.c: 98: default:
  3726                           
  3727                           ;main.c: 95: }
  3728                           ;main.c: 96: break;
  3729                           
  3730  050B  0020               	movlb	0	; select bank0
  3731  050C  086C               	movf	main@state_mode,w
  3732                           
  3733                           ; Switch size 1, requested type "space"
  3734                           ; Number of cases is 5, Range of values is 0 to 4
  3735                           ; switch strategies available:
  3736                           ; Name         Instructions Cycles
  3737                           ; direct_byte           16     6 (fixed)
  3738                           ; simple_byte           16     9 (average)
  3739                           ; jumptable            260     6 (fixed)
  3740                           ;	Chosen strategy is direct_byte
  3741  050D  0084               	movwf	4
  3742  050E  3005               	movlw	5
  3743  050F  0204               	subwf	4,w
  3744  0510  1803               	skipnc
  3745  0511  2D16               	goto	l4390
  3746  0512  3188               	movlp	high S4446
  3747  0513  3504               	lslf	4,w
  3748  0514  3E00               	addlw	low S4446
  3749  0515  0082               	movwf	2
  3750  0516                     l4390:	
  3751  0516  0020               	movlb	0	; select bank0
  3752  0517  086C               	movf	main@state_mode,w
  3753                           
  3754                           ; Switch size 1, requested type "space"
  3755                           ; Number of cases is 3, Range of values is 0 to 2
  3756                           ; switch strategies available:
  3757                           ; Name         Instructions Cycles
  3758                           ; simple_byte           10     6 (average)
  3759                           ; direct_byte           12     6 (fixed)
  3760                           ; jumptable            260     6 (fixed)
  3761                           ;	Chosen strategy is simple_byte
  3762  0518  3A00               	xorlw	0	; case 0
  3763  0519  1903               	skipnz
  3764  051A  2CB8               	goto	l4354
  3765  051B  3A01               	xorlw	1	; case 1
  3766  051C  1903               	skipnz
  3767  051D  2CAD               	goto	l4346
  3768  051E  3A03               	xorlw	3	; case 2
  3769  051F  1903               	skipnz
  3770  0520  2CE3               	goto	l4370
  3771  0521  2D0B               	goto	l4420
  3772                           
  3773                           ;main.c: 102: switch(state_mode)
  3774  0522  2D0B               	goto	l4420
  3775  0523                     l4392:	
  3776                           ;main.c: 103: {
  3777                           ;main.c: 104: case COUNTING:
  3778                           
  3779                           
  3780                           ;main.c: 105: LCD_CursorPosition(0,0);
  3781  0523  01A3               	clrf	LCD_CursorPosition@ty
  3782  0524  3000               	movlw	0
  3783  0525  3189  21EB  3184   	fcall	_LCD_CursorPosition
  3784                           
  3785                           ;main.c: 106: printf("  Countting...  ");
  3786  0528  3056               	movlw	low (STR_1| (0+32768))
  3787  0529  0020               	movlb	0	; select bank0
  3788  052A  00C6               	movwf	printf@f
  3789  052B  3083               	movlw	high (STR_1| (0+32768))
  3790  052C  00C7               	movwf	printf@f+1
  3791  052D  3180  205A  3184   	fcall	_printf
  3792                           
  3793                           ;main.c: 107: LCD_CursorPosition(0,1);
  3794  0530  0020               	movlb	0	; select bank0
  3795  0531  01A3               	clrf	LCD_CursorPosition@ty
  3796  0532  0AA3               	incf	LCD_CursorPosition@ty,f
  3797  0533  3000               	movlw	0
  3798  0534  3189  21EB  3184   	fcall	_LCD_CursorPosition
  3799                           
  3800                           ;main.c: 108: printf(" %7lu  %02d:%02d",Timer1_GetCountSum(),Timer1_GetMinute(),Timer1_G
      +                          etSecond());
  3801  0537  3067               	movlw	low (STR_2| (0+32768))
  3802  0538  0020               	movlb	0	; select bank0
  3803  0539  00C6               	movwf	printf@f
  3804  053A  3083               	movlw	high (STR_2| (0+32768))
  3805  053B  00C7               	movwf	printf@f+1
  3806  053C  3189  218B  3184   	fcall	_Timer1_GetCountSum
  3807  053F  0020               	movlb	0	; select bank0
  3808  0540  0823               	movf	?_Timer1_GetCountSum+3,w
  3809  0541  00CB               	movwf	?_printf+5
  3810  0542  0822               	movf	?_Timer1_GetCountSum+2,w
  3811  0543  00CA               	movwf	?_printf+4
  3812  0544  0821               	movf	?_Timer1_GetCountSum+1,w
  3813  0545  00C9               	movwf	?_printf+3
  3814  0546  0820               	movf	?_Timer1_GetCountSum,w
  3815  0547  00C8               	movwf	?_printf+2
  3816  0548  3188  20CF  3184   	fcall	_Timer1_GetMinute
  3817  054B  0020               	movlb	0	; select bank0
  3818  054C  00E8               	movwf	??_main
  3819  054D  01E9               	clrf	??_main+1
  3820  054E  0868               	movf	??_main,w
  3821  054F  00CC               	movwf	?_printf+6
  3822  0550  0869               	movf	??_main+1,w
  3823  0551  00CD               	movwf	?_printf+7
  3824  0552  3188  20D2  3184   	fcall	_Timer1_GetSecond
  3825  0555  0020               	movlb	0	; select bank0
  3826  0556  00EA               	movwf	??_main+2
  3827  0557  01EB               	clrf	??_main+3
  3828  0558  086A               	movf	??_main+2,w
  3829  0559  00CE               	movwf	?_printf+8
  3830  055A  086B               	movf	??_main+3,w
  3831  055B  00CF               	movwf	?_printf+9
  3832  055C  3180  205A  3184   	fcall	_printf
  3833                           
  3834                           ;main.c: 109: break;
  3835  055F  2D16               	goto	l4390
  3836  0560                     l4398:	
  3837                           ;main.c: 111: case STOPPING:
  3838                           
  3839                           
  3840                           ;main.c: 112: LCD_CursorPosition(0,0);
  3841  0560  0020               	movlb	0	; select bank0
  3842  0561  01A3               	clrf	LCD_CursorPosition@ty
  3843  0562  3000               	movlw	0
  3844  0563  3189  21EB  3184   	fcall	_LCD_CursorPosition
  3845                           
  3846                           ;main.c: 113: printf(" Count Stopped ");
  3847  0566  3078               	movlw	low (STR_3| (0+32768))
  3848  0567  0020               	movlb	0	; select bank0
  3849  0568  00C6               	movwf	printf@f
  3850  0569  3083               	movlw	high (STR_3| (0+32768))
  3851  056A  00C7               	movwf	printf@f+1
  3852  056B  3180  205A  3184   	fcall	_printf
  3853                           
  3854                           ;main.c: 114: LCD_CursorPosition(0,1);
  3855  056E  0020               	movlb	0	; select bank0
  3856  056F  01A3               	clrf	LCD_CursorPosition@ty
  3857  0570  0AA3               	incf	LCD_CursorPosition@ty,f
  3858  0571  3000               	movlw	0
  3859  0572  3189  21EB  3184   	fcall	_LCD_CursorPosition
  3860                           
  3861                           ;main.c: 115: printf(" %7lu  %02d:%02d",Timer1_GetCountSum(),Timer1_GetMinute(),Timer1_G
      +                          etSecond());
  3862  0575  3067               	movlw	low (STR_2| (0+32768))
  3863  0576  0020               	movlb	0	; select bank0
  3864  0577  00C6               	movwf	printf@f
  3865  0578  3083               	movlw	high (STR_2| (0+32768))
  3866  0579  00C7               	movwf	printf@f+1
  3867  057A  3189  218B  3184   	fcall	_Timer1_GetCountSum
  3868  057D  0020               	movlb	0	; select bank0
  3869  057E  0823               	movf	?_Timer1_GetCountSum+3,w
  3870  057F  00CB               	movwf	?_printf+5
  3871  0580  0822               	movf	?_Timer1_GetCountSum+2,w
  3872  0581  00CA               	movwf	?_printf+4
  3873  0582  0821               	movf	?_Timer1_GetCountSum+1,w
  3874  0583  00C9               	movwf	?_printf+3
  3875  0584  0820               	movf	?_Timer1_GetCountSum,w
  3876  0585  00C8               	movwf	?_printf+2
  3877  0586  3188  20CF  3184   	fcall	_Timer1_GetMinute
  3878  0589  0020               	movlb	0	; select bank0
  3879  058A  00E8               	movwf	??_main
  3880  058B  01E9               	clrf	??_main+1
  3881  058C  0868               	movf	??_main,w
  3882  058D  00CC               	movwf	?_printf+6
  3883  058E  0869               	movf	??_main+1,w
  3884  058F  00CD               	movwf	?_printf+7
  3885  0590  3188  20D2  3184   	fcall	_Timer1_GetSecond
  3886  0593  0020               	movlb	0	; select bank0
  3887  0594  00EA               	movwf	??_main+2
  3888  0595  01EB               	clrf	??_main+3
  3889  0596  086A               	movf	??_main+2,w
  3890  0597  00CE               	movwf	?_printf+8
  3891  0598  086B               	movf	??_main+3,w
  3892  0599  00CF               	movwf	?_printf+9
  3893  059A  3180  205A  3184   	fcall	_printf
  3894                           
  3895                           ;main.c: 116: break;
  3896  059D  2D16               	goto	l4390
  3897  059E                     l4404:	
  3898                           ;main.c: 118: case RESULT:
  3899                           
  3900                           
  3901                           ;main.c: 119: LCD_CursorPosition(0,0);
  3902  059E  0020               	movlb	0	; select bank0
  3903  059F  01A3               	clrf	LCD_CursorPosition@ty
  3904  05A0  3000               	movlw	0
  3905  05A1  3189  21EB  3184   	fcall	_LCD_CursorPosition
  3906                           
  3907                           ;main.c: 120: printf("%7lu %7lu",Timer1_GetCPS(),Timer1_GetCPM());
  3908  05A4  30B9               	movlw	low (STR_5| (0+32768))
  3909  05A5  0020               	movlb	0	; select bank0
  3910  05A6  00C6               	movwf	printf@f
  3911  05A7  3083               	movlw	high (STR_5| (0+32768))
  3912  05A8  00C7               	movwf	printf@f+1
  3913  05A9  318D  251E  3184   	fcall	_Timer1_GetCPS
  3914  05AC  0020               	movlb	0	; select bank0
  3915  05AD  083D               	movf	?_Timer1_GetCPS+3,w
  3916  05AE  00CB               	movwf	?_printf+5
  3917  05AF  083C               	movf	?_Timer1_GetCPS+2,w
  3918  05B0  00CA               	movwf	?_printf+4
  3919  05B1  083B               	movf	?_Timer1_GetCPS+1,w
  3920  05B2  00C9               	movwf	?_printf+3
  3921  05B3  083A               	movf	?_Timer1_GetCPS,w
  3922  05B4  00C8               	movwf	?_printf+2
  3923  05B5  318B  2356  3184   	fcall	_Timer1_GetCPM
  3924  05B8  0020               	movlb	0	; select bank0
  3925  05B9  0841               	movf	?_Timer1_GetCPM+3,w
  3926  05BA  00CF               	movwf	?_printf+9
  3927  05BB  0840               	movf	?_Timer1_GetCPM+2,w
  3928  05BC  00CE               	movwf	?_printf+8
  3929  05BD  083F               	movf	?_Timer1_GetCPM+1,w
  3930  05BE  00CD               	movwf	?_printf+7
  3931  05BF  083E               	movf	?_Timer1_GetCPM,w
  3932  05C0  00CC               	movwf	?_printf+6
  3933  05C1  3180  205A  3184   	fcall	_printf
  3934                           
  3935                           ;main.c: 121: LCD_CursorPosition(0,1);
  3936  05C4  0020               	movlb	0	; select bank0
  3937  05C5  01A3               	clrf	LCD_CursorPosition@ty
  3938  05C6  0AA3               	incf	LCD_CursorPosition@ty,f
  3939  05C7  3000               	movlw	0
  3940  05C8  3189  21EB  3184   	fcall	_LCD_CursorPosition
  3941                           
  3942                           ;main.c: 122: printf(" %7lu  %02d:%02d",Timer1_GetCountSum(),Timer1_GetMinute(),Timer1_G
      +                          etSecond());
  3943  05CB  3067               	movlw	low (STR_2| (0+32768))
  3944  05CC  0020               	movlb	0	; select bank0
  3945  05CD  00C6               	movwf	printf@f
  3946  05CE  3083               	movlw	high (STR_2| (0+32768))
  3947  05CF  00C7               	movwf	printf@f+1
  3948  05D0  3189  218B  3184   	fcall	_Timer1_GetCountSum
  3949  05D3  0020               	movlb	0	; select bank0
  3950  05D4  0823               	movf	?_Timer1_GetCountSum+3,w
  3951  05D5  00CB               	movwf	?_printf+5
  3952  05D6  0822               	movf	?_Timer1_GetCountSum+2,w
  3953  05D7  00CA               	movwf	?_printf+4
  3954  05D8  0821               	movf	?_Timer1_GetCountSum+1,w
  3955  05D9  00C9               	movwf	?_printf+3
  3956  05DA  0820               	movf	?_Timer1_GetCountSum,w
  3957  05DB  00C8               	movwf	?_printf+2
  3958  05DC  3188  20CF  3184   	fcall	_Timer1_GetMinute
  3959  05DF  0020               	movlb	0	; select bank0
  3960  05E0  00E8               	movwf	??_main
  3961  05E1  01E9               	clrf	??_main+1
  3962  05E2  0868               	movf	??_main,w
  3963  05E3  00CC               	movwf	?_printf+6
  3964  05E4  0869               	movf	??_main+1,w
  3965  05E5  00CD               	movwf	?_printf+7
  3966  05E6  3188  20D2  3184   	fcall	_Timer1_GetSecond
  3967  05E9  0020               	movlb	0	; select bank0
  3968  05EA  00EA               	movwf	??_main+2
  3969  05EB  01EB               	clrf	??_main+3
  3970  05EC  086A               	movf	??_main+2,w
  3971  05ED  00CE               	movwf	?_printf+8
  3972  05EE  086B               	movf	??_main+3,w
  3973  05EF  00CF               	movwf	?_printf+9
  3974  05F0  3180  205A  3184   	fcall	_printf
  3975                           
  3976                           ;main.c: 123: break;
  3977  05F3  2D16               	goto	l4390
  3978  05F4                     l4410:	
  3979                           ;main.c: 125: case SETTING:
  3980                           
  3981                           
  3982                           ;main.c: 126: Ssetting_PMT_Config(&pmt_config);
  3983  05F4  30C5               	movlw	(low (main@pmt_config| 0))& (0+255)
  3984  05F5  3186  2603  3184   	fcall	_Ssetting_PMT_Config
  3985  05F8  2DFD               	goto	l4416
  3986  05F9                     l4414:	
  3987                           ;main.c: 130: case SHOW_CONFIG:
  3988                           
  3989                           ;main.c: 128: break;
  3990                           
  3991                           ;main.c: 127: state_mode = RESULT;
  3992                           
  3993                           
  3994                           ;main.c: 131: Show_PMT_Config(&pmt_config);
  3995  05F9  30C5               	movlw	(low (main@pmt_config| 0))& (0+255)
  3996  05FA  318E  26D4  3184   	fcall	_Show_PMT_Config
  3997  05FD                     l4416:	
  3998                           
  3999                           ;main.c: 132: state_mode = RESULT;
  4000  05FD  3002               	movlw	2
  4001  05FE  0020               	movlb	0	; select bank0
  4002  05FF  00E8               	movwf	??_main
  4003  0600  0868               	movf	??_main,w
  4004  0601  00EC               	movwf	main@state_mode
  4005                           
  4006                           ;main.c: 136: }
  4007                           
  4008                           ;main.c: 135: break;
  4009                           
  4010                           ;main.c: 134: default:
  4011                           
  4012                           ;main.c: 133: break;
  4013  0602  2D16               	goto	l4390
  4014  0603                     __end_of_main:	
  4015                           ;main.c: 137: }
  4016                           ;main.c: 138: return 0;
  4017                           ;	Return value of _main is never used
  4018                           
  4019                           
  4020                           	psect	swtext1
  4021  0800                     __pswtext1:	
  4022  0800                     S4446:	
  4023  0800  3185  2D60         	ljmp	l4398
  4024  0802  3185  2D23         	ljmp	l4392
  4025  0804  3185  2D9E         	ljmp	l4404
  4026  0806  3185  2DF4         	ljmp	l4410
  4027  0808  3185  2DF9         	ljmp	l4414
  4028                           
  4029                           	psect	text1
  4030  09AF                     __ptext1:	
  4031 ;; *************** function _mTouch_Init *****************
  4032 ;; Defined at:
  4033 ;;		line 19 in file "mTouch.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;		None
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg, status,2, status,0, pclath, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4047 ;;      Params:         0       0       0       0       0       0
  4048 ;;      Locals:         0       0       0       0       0       0
  4049 ;;      Temps:          0       1       0       0       0       0
  4050 ;;      Totals:         0       1       0       0       0       0
  4051 ;;Total ram usage:        1 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    4
  4054 ;; This function calls:
  4055 ;;		_mTouch_PortInit
  4056 ;; This function is called by:
  4057 ;;		_main
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           
  4062                           ;psect for function _mTouch_Init
  4063  09AF                     _mTouch_Init:	
  4064                           
  4065                           ;mTouch.c: 21: mTouch_PortInit();
  4066                           
  4067                           ;incstack = 0
  4068                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4069  09AF  3189  212E         	fcall	_mTouch_PortInit
  4070                           
  4071                           ;mTouch.c: 24: OPTION_REG |= (0x0<<0);
  4072  09B1  0021               	movlb	1	; select bank1
  4073  09B2  0815               	movf	21,w	;volatile
  4074                           
  4075                           ;mTouch.c: 25: OPTION_REG |= (0x1<<3);
  4076  09B3  1595               	bsf	21,3	;volatile
  4077                           
  4078                           ;mTouch.c: 26: OPTION_REG |= (0x1<<5);
  4079  09B4  1695               	bsf	21,5	;volatile
  4080                           
  4081                           ;mTouch.c: 27: TMR0 = 0x00;
  4082  09B5  0020               	movlb	0	; select bank0
  4083  09B6  0195               	clrf	21	;volatile
  4084                           
  4085                           ;mTouch.c: 30: CPSCON0 |= (0x01<<0);
  4086  09B7  141E               	bsf	30,0	;volatile
  4087                           
  4088                           ;mTouch.c: 31: CPSCON0 |= (0x03<<2);
  4089  09B8  300C               	movlw	12
  4090  09B9  00A1               	movwf	??_mTouch_Init
  4091  09BA  0821               	movf	??_mTouch_Init,w
  4092  09BB  049E               	iorwf	30,f	;volatile
  4093                           
  4094                           ;mTouch.c: 32: CPSCON0 &= ~(0x01<<7);;
  4095  09BC  307F               	movlw	127
  4096  09BD  00A1               	movwf	??_mTouch_Init
  4097  09BE  0821               	movf	??_mTouch_Init,w
  4098  09BF  059E               	andwf	30,f	;volatile
  4099                           
  4100                           ;mTouch.c: 33: CPSCON1 = (uint8_t)0x00;
  4101  09C0  019F               	clrf	31	;volatile
  4102  09C1  0008               	return
  4103  09C2                     __end_of_mTouch_Init:	
  4104                           
  4105                           	psect	text2
  4106  092E                     __ptext2:	
  4107 ;; *************** function _mTouch_PortInit *****************
  4108 ;; Defined at:
  4109 ;;		line 13 in file "mTouch.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4123 ;;      Params:         0       0       0       0       0       0
  4124 ;;      Locals:         0       0       0       0       0       0
  4125 ;;      Temps:          0       1       0       0       0       0
  4126 ;;      Totals:         0       1       0       0       0       0
  4127 ;;Total ram usage:        1 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; Hardware stack levels required when called:    3
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_mTouch_Init
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           
  4138                           ;psect for function _mTouch_PortInit
  4139  092E                     _mTouch_PortInit:	
  4140                           
  4141                           ;mTouch.c: 15: TRISA |= (0x07);
  4142                           
  4143                           ;incstack = 0
  4144                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4145  092E  3007               	movlw	7
  4146  092F  0020               	movlb	0	; select bank0
  4147  0930  00A0               	movwf	??_mTouch_PortInit
  4148  0931  0820               	movf	??_mTouch_PortInit,w
  4149  0932  0021               	movlb	1	; select bank1
  4150  0933  048C               	iorwf	12,f	;volatile
  4151                           
  4152                           ;mTouch.c: 16: ANSELA |= (0x07);
  4153  0934  3007               	movlw	7
  4154  0935  0020               	movlb	0	; select bank0
  4155  0936  00A0               	movwf	??_mTouch_PortInit
  4156  0937  0820               	movf	??_mTouch_PortInit,w
  4157  0938  0023               	movlb	3	; select bank3
  4158  0939  048C               	iorwf	12,f	;volatile
  4159  093A  0008               	return
  4160  093B                     __end_of_mTouch_PortInit:	
  4161                           
  4162                           	psect	text3
  4163  099C                     __ptext3:	
  4164 ;; *************** function _Timer6_Init *****************
  4165 ;; Defined at:
  4166 ;;		line 3 in file "Timer6.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;		None
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;		None
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4180 ;;      Params:         0       0       0       0       0       0
  4181 ;;      Locals:         0       0       0       0       0       0
  4182 ;;      Temps:          0       1       0       0       0       0
  4183 ;;      Totals:         0       1       0       0       0       0
  4184 ;;Total ram usage:        1 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    3
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           
  4195                           ;psect for function _Timer6_Init
  4196  099C                     _Timer6_Init:	
  4197                           
  4198                           ;Timer6.c: 5: PR6 = 0x7D;
  4199                           
  4200                           ;incstack = 0
  4201                           ; Regs used in _Timer6_Init: [wreg+status,2+status,0]
  4202  099C  307D               	movlw	125
  4203  099D  0028               	movlb	8	; select bank8
  4204  099E  009D               	movwf	29	;volatile
  4205                           
  4206                           ;Timer6.c: 6: TMR6 = 0x00;
  4207  099F  019C               	clrf	28	;volatile
  4208                           
  4209                           ;Timer6.c: 7: T6CON |= (0x03<<0);
  4210  09A0  3003               	movlw	3
  4211  09A1  0020               	movlb	0	; select bank0
  4212  09A2  00A0               	movwf	??_Timer6_Init
  4213  09A3  0820               	movf	??_Timer6_Init,w
  4214  09A4  0028               	movlb	8	; select bank8
  4215  09A5  049E               	iorwf	30,f	;volatile
  4216                           
  4217                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  4218  09A6  081E               	movf	30,w	;volatile
  4219                           
  4220                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  4221  09A7  151E               	bsf	30,2	;volatile
  4222                           
  4223                           ;Timer6.c: 11: TMR6IF = 0;
  4224  09A8  0020               	movlb	0	; select bank0
  4225  09A9  1193               	bcf	19,3	;volatile
  4226                           
  4227                           ;Timer6.c: 12: TMR6IE = 1;
  4228  09AA  0021               	movlb	1	; select bank1
  4229  09AB  1593               	bsf	19,3	;volatile
  4230                           
  4231                           ;Timer6.c: 13: PEIE = 1;
  4232  09AC  170B               	bsf	11,6	;volatile
  4233                           
  4234                           ;Timer6.c: 14: GIE = 1;
  4235  09AD  178B               	bsf	11,7	;volatile
  4236  09AE  0008               	return
  4237  09AF                     __end_of_Timer6_Init:	
  4238                           
  4239                           	psect	text4
  4240  08D5                     __ptext4:	
  4241 ;; *************** function _Timer1_StopCount *****************
  4242 ;; Defined at:
  4243 ;;		line 37 in file "Timer1.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		None
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4257 ;;      Params:         0       0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0
  4260 ;;      Totals:         0       0       0       0       0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    3
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_main
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _Timer1_StopCount
  4273  08D5                     _Timer1_StopCount:	
  4274                           
  4275                           ;Timer1.c: 39: TMR1ON = 0;
  4276                           
  4277                           ;incstack = 0
  4278                           ; Regs used in _Timer1_StopCount: []
  4279  08D5  0020               	movlb	0	; select bank0
  4280  08D6  1018               	bcf	24,0	;volatile
  4281  08D7  0008               	return
  4282  08D8                     __end_of_Timer1_StopCount:	
  4283                           
  4284                           	psect	text5
  4285  07FB                     __ptext5:	
  4286 ;; *************** function _Timer1_StartCount *****************
  4287 ;; Defined at:
  4288 ;;		line 31 in file "Timer1.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0, pclath, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4302 ;;      Params:         0       0       0       0       0       0
  4303 ;;      Locals:         0       0       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0
  4305 ;;      Totals:         0       0       0       0       0       0
  4306 ;;Total ram usage:        0 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    4
  4309 ;; This function calls:
  4310 ;;		_Timer1_ClearRecord
  4311 ;; This function is called by:
  4312 ;;		_main
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           
  4317                           ;psect for function _Timer1_StartCount
  4318  07FB                     _Timer1_StartCount:	
  4319                           
  4320                           ;Timer1.c: 33: Timer1_ClearRecord();
  4321                           
  4322                           ;incstack = 0
  4323                           ; Regs used in _Timer1_StartCount: [wreg+status,2+status,0+pclath+cstack]
  4324  07FB  3189  21C2         	fcall	_Timer1_ClearRecord
  4325                           
  4326                           ;Timer1.c: 34: TMR1ON = 1;
  4327  07FD  0020               	movlb	0	; select bank0
  4328  07FE  1418               	bsf	24,0	;volatile
  4329  07FF  0008               	return
  4330  0800                     __end_of_Timer1_StartCount:	
  4331                           
  4332                           	psect	text6
  4333  09C2                     __ptext6:	
  4334 ;; *************** function _Timer1_ClearRecord *****************
  4335 ;; Defined at:
  4336 ;;		line 42 in file "Timer1.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4350 ;;      Params:         0       0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0
  4353 ;;      Totals:         0       0       0       0       0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    3
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_Timer1_StartCount
  4361 ;;		_main
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           
  4366                           ;psect for function _Timer1_ClearRecord
  4367  09C2                     _Timer1_ClearRecord:	
  4368                           
  4369                           ;Timer1.c: 44: cnts.SigmaDeltaCount= 0;
  4370                           
  4371                           ;incstack = 0
  4372                           ; Regs used in _Timer1_ClearRecord: [wreg+status,2]
  4373  09C2  3000               	movlw	0
  4374  09C3  0021               	movlb	1	; select bank1
  4375  09C4  00AB               	movwf	(_cnts+3)^(0+128)
  4376  09C5  3000               	movlw	0
  4377  09C6  00AA               	movwf	(_cnts+2)^(0+128)
  4378  09C7  3000               	movlw	0
  4379  09C8  00A9               	movwf	(_cnts+1)^(0+128)
  4380  09C9  3000               	movlw	0
  4381  09CA  00A8               	movwf	_cnts^(0+128)
  4382                           
  4383                           ;Timer1.c: 45: tcnt.Delta_t = 0;
  4384  09CB  3000               	movlw	0
  4385  09CC  00A5               	movwf	((_tcnt+3)^(0+128)+2)
  4386  09CD  3000               	movlw	0
  4387  09CE  00A4               	movwf	((_tcnt+2)^(0+128)+2)
  4388  09CF  3000               	movlw	0
  4389  09D0  00A3               	movwf	((_tcnt+1)^(0+128)+2)
  4390  09D1  3000               	movlw	0
  4391  09D2  00A2               	movwf	(_tcnt^(0+128)+2)
  4392                           
  4393                           ;Timer1.c: 46: tcnt.Second_t = 0;
  4394  09D3  01A0               	clrf	_tcnt^(0+128)
  4395                           
  4396                           ;Timer1.c: 47: tcnt.Minute_t = 0;
  4397  09D4  01A1               	clrf	(_tcnt^(0+128)+1)
  4398  09D5  0008               	return
  4399  09D6                     __end_of_Timer1_ClearRecord:	
  4400                           
  4401                           	psect	text7
  4402  0AE7                     __ptext7:	
  4403 ;; *************** function _Timer1_Init *****************
  4404 ;; Defined at:
  4405 ;;		line 6 in file "Timer1.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;		None
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4419 ;;      Params:         0       0       0       0       0       0
  4420 ;;      Locals:         0       0       0       0       0       0
  4421 ;;      Temps:          0       1       0       0       0       0
  4422 ;;      Totals:         0       1       0       0       0       0
  4423 ;;Total ram usage:        1 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    3
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_main
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           
  4434                           ;psect for function _Timer1_Init
  4435  0AE7                     _Timer1_Init:	
  4436                           
  4437                           ;Timer1.c: 8: TRISB |= (1<<6);
  4438                           
  4439                           ;incstack = 0
  4440                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4441  0AE7  0021               	movlb	1	; select bank1
  4442  0AE8  170D               	bsf	13,6	;volatile
  4443                           
  4444                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  4445  0AE9  30BF               	movlw	191
  4446  0AEA  0020               	movlb	0	; select bank0
  4447  0AEB  00A0               	movwf	??_Timer1_Init
  4448  0AEC  0820               	movf	??_Timer1_Init,w
  4449  0AED  0023               	movlb	3	; select bank3
  4450  0AEE  058D               	andwf	13,f	;volatile
  4451                           
  4452                           ;Timer1.c: 10: WPUB |= (1<<6);
  4453  0AEF  0024               	movlb	4	; select bank4
  4454  0AF0  170D               	bsf	13,6	;volatile
  4455                           
  4456                           ;Timer1.c: 12: T1CON |= (0x01<<2);
  4457  0AF1  0020               	movlb	0	; select bank0
  4458  0AF2  1518               	bsf	24,2	;volatile
  4459                           
  4460                           ;Timer1.c: 13: T1CON &= ~(0x01<<3);
  4461  0AF3  30F7               	movlw	247
  4462  0AF4  00A0               	movwf	??_Timer1_Init
  4463  0AF5  0820               	movf	??_Timer1_Init,w
  4464  0AF6  0598               	andwf	24,f	;volatile
  4465                           
  4466                           ;Timer1.c: 14: T1CON |= (0x00<<4);
  4467  0AF7  0818               	movf	24,w	;volatile
  4468                           
  4469                           ;Timer1.c: 15: T1CON |= (0x02<<6);
  4470  0AF8  1798               	bsf	24,7	;volatile
  4471                           
  4472                           ;Timer1.c: 17: T1GCON = 0x00;
  4473  0AF9  0199               	clrf	25	;volatile
  4474                           
  4475                           ;Timer1.c: 19: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF-2UL+1; TMR1ON = 1; };
  4476  0AFA  1018               	bcf	24,0	;volatile
  4477  0AFB  30FF               	movlw	255
  4478  0AFC  0097               	movwf	23	;volatile
  4479  0AFD  30FE               	movlw	254
  4480  0AFE  0096               	movwf	22	;volatile
  4481  0AFF  1418               	bsf	24,0	;volatile
  4482                           
  4483                           ;Timer1.c: 21: TMR1IF = 0;
  4484  0B00  1011               	bcf	17,0	;volatile
  4485                           
  4486                           ;Timer1.c: 22: TMR1IE = 1;
  4487  0B01  0021               	movlb	1	; select bank1
  4488  0B02  1411               	bsf	17,0	;volatile
  4489                           
  4490                           ;Timer1.c: 23: PEIE = 1;
  4491  0B03  170B               	bsf	11,6	;volatile
  4492                           
  4493                           ;Timer1.c: 24: GIE = 1;
  4494  0B04  178B               	bsf	11,7	;volatile
  4495                           
  4496                           ;Timer1.c: 26: TMR1ON = 0;
  4497  0B05  0020               	movlb	0	; select bank0
  4498  0B06  1018               	bcf	24,0	;volatile
  4499  0B07  0008               	return
  4500  0B08                     __end_of_Timer1_Init:	
  4501                           
  4502                           	psect	text8
  4503  08D2                     __ptext8:	
  4504 ;; *************** function _Timer1_GetSecond *****************
  4505 ;; Defined at:
  4506 ;;		line 65 in file "Timer1.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      unsigned char 
  4513 ;; Registers used:
  4514 ;;		wreg
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4520 ;;      Params:         0       0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0
  4523 ;;      Totals:         0       0       0       0       0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    3
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_main
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           
  4535                           ;psect for function _Timer1_GetSecond
  4536  08D2                     _Timer1_GetSecond:	
  4537                           
  4538                           ;Timer1.c: 67: return tcnt.Second_t;
  4539                           
  4540                           ;incstack = 0
  4541                           ; Regs used in _Timer1_GetSecond: [wreg]
  4542  08D2  0021               	movlb	1	; select bank1
  4543  08D3  0820               	movf	_tcnt^(0+128),w
  4544  08D4  0008               	return
  4545  08D5                     __end_of_Timer1_GetSecond:	
  4546                           
  4547                           	psect	text9
  4548  08CF                     __ptext9:	
  4549 ;; *************** function _Timer1_GetMinute *****************
  4550 ;; Defined at:
  4551 ;;		line 70 in file "Timer1.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      unsigned char 
  4558 ;; Registers used:
  4559 ;;		wreg
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4565 ;;      Params:         0       0       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0
  4568 ;;      Totals:         0       0       0       0       0       0
  4569 ;;Total ram usage:        0 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    3
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_main
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           
  4580                           ;psect for function _Timer1_GetMinute
  4581  08CF                     _Timer1_GetMinute:	
  4582                           
  4583                           ;Timer1.c: 72: return tcnt.Minute_t;
  4584                           
  4585                           ;incstack = 0
  4586                           ; Regs used in _Timer1_GetMinute: [wreg]
  4587  08CF  0021               	movlb	1	; select bank1
  4588  08D0  0821               	movf	(_tcnt^(0+128)+1),w
  4589  08D1  0008               	return
  4590  08D2                     __end_of_Timer1_GetMinute:	
  4591                           
  4592                           	psect	text10
  4593  098B                     __ptext10:	
  4594 ;; *************** function _Timer1_GetCountSum *****************
  4595 ;; Defined at:
  4596 ;;		line 50 in file "Timer1.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  4    0[BANK0 ] unsigned long 
  4603 ;; Registers used:
  4604 ;;		wreg
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4610 ;;      Params:         0       4       0       0       0       0
  4611 ;;      Locals:         0       0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0
  4613 ;;      Totals:         0       4       0       0       0       0
  4614 ;;Total ram usage:        4 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    3
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_main
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           
  4625                           ;psect for function _Timer1_GetCountSum
  4626  098B                     _Timer1_GetCountSum:	
  4627                           
  4628                           ;Timer1.c: 52: return cnts.SigmaDeltaCount;
  4629                           
  4630                           ;incstack = 0
  4631                           ; Regs used in _Timer1_GetCountSum: [wreg]
  4632  098B  0021               	movlb	1	; select bank1
  4633  098C  082B               	movf	(_cnts+3)^(0+128),w
  4634  098D  0020               	movlb	0	; select bank0
  4635  098E  00A3               	movwf	?_Timer1_GetCountSum+3
  4636  098F  0021               	movlb	1	; select bank1
  4637  0990  082A               	movf	(_cnts+2)^(0+128),w
  4638  0991  0020               	movlb	0	; select bank0
  4639  0992  00A2               	movwf	?_Timer1_GetCountSum+2
  4640  0993  0021               	movlb	1	; select bank1
  4641  0994  0829               	movf	(_cnts+1)^(0+128),w
  4642  0995  0020               	movlb	0	; select bank0
  4643  0996  00A1               	movwf	?_Timer1_GetCountSum+1
  4644  0997  0021               	movlb	1	; select bank1
  4645  0998  0828               	movf	_cnts^(0+128),w
  4646  0999  0020               	movlb	0	; select bank0
  4647  099A  00A0               	movwf	?_Timer1_GetCountSum
  4648  099B  0008               	return
  4649  099C                     __end_of_Timer1_GetCountSum:	
  4650                           
  4651                           	psect	text11
  4652  0B56                     __ptext11:	
  4653 ;; *************** function _Timer1_GetCPM *****************
  4654 ;; Defined at:
  4655 ;;		line 60 in file "Timer1.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  4   30[BANK0 ] unsigned long 
  4662 ;; Registers used:
  4663 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4669 ;;      Params:         0       4       0       0       0       0
  4670 ;;      Locals:         0       4       0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0
  4672 ;;      Totals:         0       8       0       0       0       0
  4673 ;;Total ram usage:        8 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    5
  4676 ;; This function calls:
  4677 ;;		_Timer1_GetCPS
  4678 ;;		___lmul
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           
  4685                           ;psect for function _Timer1_GetCPM
  4686  0B56                     _Timer1_GetCPM:	
  4687                           
  4688                           ;Timer1.c: 62: return (uint32_t)(Timer1_GetCPS()*60);
  4689                           
  4690                           ;incstack = 0
  4691                           ; Regs used in _Timer1_GetCPM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4692  0B56  318D  251E  318B   	fcall	_Timer1_GetCPS
  4693  0B59  0020               	movlb	0	; select bank0
  4694  0B5A  083D               	movf	?_Timer1_GetCPS+3,w
  4695  0B5B  00C5               	movwf	_Timer1_GetCPM$1189+3
  4696  0B5C  083C               	movf	?_Timer1_GetCPS+2,w
  4697  0B5D  00C4               	movwf	_Timer1_GetCPM$1189+2
  4698  0B5E  083B               	movf	?_Timer1_GetCPS+1,w
  4699  0B5F  00C3               	movwf	_Timer1_GetCPM$1189+1
  4700  0B60  083A               	movf	?_Timer1_GetCPS,w
  4701  0B61  00C2               	movwf	_Timer1_GetCPM$1189
  4702                           
  4703                           ;Timer1.c: 62: return (uint32_t)(Timer1_GetCPS()*60);
  4704  0B62  0845               	movf	_Timer1_GetCPM$1189+3,w
  4705  0B63  00A3               	movwf	___lmul@multiplier+3
  4706  0B64  0844               	movf	_Timer1_GetCPM$1189+2,w
  4707  0B65  00A2               	movwf	___lmul@multiplier+2
  4708  0B66  0843               	movf	_Timer1_GetCPM$1189+1,w
  4709  0B67  00A1               	movwf	___lmul@multiplier+1
  4710  0B68  0842               	movf	_Timer1_GetCPM$1189,w
  4711  0B69  00A0               	movwf	___lmul@multiplier
  4712  0B6A  3000               	movlw	0
  4713  0B6B  00A7               	movwf	___lmul@multiplicand+3
  4714  0B6C  3000               	movlw	0
  4715  0B6D  00A6               	movwf	___lmul@multiplicand+2
  4716  0B6E  3000               	movlw	0
  4717  0B6F  00A5               	movwf	___lmul@multiplicand+1
  4718  0B70  303C               	movlw	60
  4719  0B71  00A4               	movwf	___lmul@multiplicand
  4720  0B72  318C  2409         	fcall	___lmul
  4721  0B74  0020               	movlb	0	; select bank0
  4722  0B75  0823               	movf	?___lmul+3,w
  4723  0B76  00C1               	movwf	?_Timer1_GetCPM+3
  4724  0B77  0822               	movf	?___lmul+2,w
  4725  0B78  00C0               	movwf	?_Timer1_GetCPM+2
  4726  0B79  0821               	movf	?___lmul+1,w
  4727  0B7A  00BF               	movwf	?_Timer1_GetCPM+1
  4728  0B7B  0820               	movf	?___lmul,w
  4729  0B7C  00BE               	movwf	?_Timer1_GetCPM
  4730  0B7D  0008               	return
  4731  0B7E                     __end_of_Timer1_GetCPM:	
  4732                           
  4733                           	psect	text12
  4734  0D1E                     __ptext12:	
  4735 ;; *************** function _Timer1_GetCPS *****************
  4736 ;; Defined at:
  4737 ;;		line 55 in file "Timer1.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  4   26[BANK0 ] unsigned long 
  4744 ;; Registers used:
  4745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4751 ;;      Params:         0       4       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0
  4754 ;;      Totals:         0       4       0       0       0       0
  4755 ;;Total ram usage:        4 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    4
  4758 ;; This function calls:
  4759 ;;		___lldiv
  4760 ;;		___lmul
  4761 ;; This function is called by:
  4762 ;;		_Timer1_GetCPM
  4763 ;;		_main
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           
  4768                           ;psect for function _Timer1_GetCPS
  4769  0D1E                     _Timer1_GetCPS:	
  4770                           
  4771                           ;Timer1.c: 57: return (uint32_t)((cnts.SigmaDeltaCount * 1000UL)/tcnt.Delta_t);
  4772                           
  4773                           ;incstack = 0
  4774                           ; Regs used in _Timer1_GetCPS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4775  0D1E  3002               	movlw	2
  4776  0D1F  3EA0               	addlw	(low (_tcnt| 0))& (0+255)
  4777  0D20  0086               	movwf	6
  4778  0D21  0187               	clrf	7
  4779  0D22  3F40               	moviw [0]fsr1
  4780  0D23  0020               	movlb	0	; select bank0
  4781  0D24  00AC               	movwf	___lldiv@divisor
  4782  0D25  3F41               	moviw [1]fsr1
  4783  0D26  00AD               	movwf	___lldiv@divisor+1
  4784  0D27  3F42               	moviw [2]fsr1
  4785  0D28  00AE               	movwf	___lldiv@divisor+2
  4786  0D29  3F43               	moviw [3]fsr1
  4787  0D2A  00AF               	movwf	___lldiv@divisor+3
  4788  0D2B  0021               	movlb	1	; select bank1
  4789  0D2C  082B               	movf	(_cnts+3)^(0+128),w
  4790  0D2D  0020               	movlb	0	; select bank0
  4791  0D2E  00A3               	movwf	___lmul@multiplier+3
  4792  0D2F  0021               	movlb	1	; select bank1
  4793  0D30  082A               	movf	(_cnts+2)^(0+128),w
  4794  0D31  0020               	movlb	0	; select bank0
  4795  0D32  00A2               	movwf	___lmul@multiplier+2
  4796  0D33  0021               	movlb	1	; select bank1
  4797  0D34  0829               	movf	(_cnts+1)^(0+128),w
  4798  0D35  0020               	movlb	0	; select bank0
  4799  0D36  00A1               	movwf	___lmul@multiplier+1
  4800  0D37  0021               	movlb	1	; select bank1
  4801  0D38  0828               	movf	_cnts^(0+128),w
  4802  0D39  0020               	movlb	0	; select bank0
  4803  0D3A  00A0               	movwf	___lmul@multiplier
  4804  0D3B  3000               	movlw	0
  4805  0D3C  00A7               	movwf	___lmul@multiplicand+3
  4806  0D3D  3000               	movlw	0
  4807  0D3E  00A6               	movwf	___lmul@multiplicand+2
  4808  0D3F  3003               	movlw	3
  4809  0D40  00A5               	movwf	___lmul@multiplicand+1
  4810  0D41  30E8               	movlw	232
  4811  0D42  00A4               	movwf	___lmul@multiplicand
  4812  0D43  318C  2409  318D   	fcall	___lmul
  4813  0D46  0020               	movlb	0	; select bank0
  4814  0D47  0823               	movf	?___lmul+3,w
  4815  0D48  00B3               	movwf	___lldiv@dividend+3
  4816  0D49  0822               	movf	?___lmul+2,w
  4817  0D4A  00B2               	movwf	___lldiv@dividend+2
  4818  0D4B  0821               	movf	?___lmul+1,w
  4819  0D4C  00B1               	movwf	___lldiv@dividend+1
  4820  0D4D  0820               	movf	?___lmul,w
  4821  0D4E  00B0               	movwf	___lldiv@dividend
  4822  0D4F  318E  262D         	fcall	___lldiv
  4823  0D51  0020               	movlb	0	; select bank0
  4824  0D52  082F               	movf	?___lldiv+3,w
  4825  0D53  00BD               	movwf	?_Timer1_GetCPS+3
  4826  0D54  082E               	movf	?___lldiv+2,w
  4827  0D55  00BC               	movwf	?_Timer1_GetCPS+2
  4828  0D56  082D               	movf	?___lldiv+1,w
  4829  0D57  00BB               	movwf	?_Timer1_GetCPS+1
  4830  0D58  082C               	movf	?___lldiv,w
  4831  0D59  00BA               	movwf	?_Timer1_GetCPS
  4832  0D5A  0008               	return
  4833  0D5B                     __end_of_Timer1_GetCPS:	
  4834                           
  4835                           	psect	text13
  4836  0C09                     __ptext13:	
  4837 ;; *************** function ___lmul *****************
  4838 ;; Defined at:
  4839 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul32.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4842 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  product         4    8[BANK0 ] unsigned long 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  4    0[BANK0 ] unsigned long 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4854 ;;      Params:         0       8       0       0       0       0
  4855 ;;      Locals:         0       4       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0
  4857 ;;      Totals:         0      12       0       0       0       0
  4858 ;;Total ram usage:       12 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    3
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_Timer1_GetCPS
  4865 ;;		_Timer1_GetCPM
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           
  4870                           ;psect for function ___lmul
  4871  0C09                     ___lmul:	
  4872                           
  4873                           ;incstack = 0
  4874                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4875  0C09  3000               	movlw	0
  4876  0C0A  0020               	movlb	0	; select bank0
  4877  0C0B  00AB               	movwf	___lmul@product+3
  4878  0C0C  3000               	movlw	0
  4879  0C0D  00AA               	movwf	___lmul@product+2
  4880  0C0E  3000               	movlw	0
  4881  0C0F  00A9               	movwf	___lmul@product+1
  4882  0C10  3000               	movlw	0
  4883  0C11  00A8               	movwf	___lmul@product
  4884  0C12                     l3722:	
  4885  0C12  1C20               	btfss	___lmul@multiplier,0
  4886  0C13  2C1C               	goto	l3726
  4887  0C14  0824               	movf	___lmul@multiplicand,w
  4888  0C15  07A8               	addwf	___lmul@product,f
  4889  0C16  0825               	movf	___lmul@multiplicand+1,w
  4890  0C17  3DA9               	addwfc	___lmul@product+1,f
  4891  0C18  0826               	movf	___lmul@multiplicand+2,w
  4892  0C19  3DAA               	addwfc	___lmul@product+2,f
  4893  0C1A  0827               	movf	___lmul@multiplicand+3,w
  4894  0C1B  3DAB               	addwfc	___lmul@product+3,f
  4895  0C1C                     l3726:	
  4896  0C1C  3001               	movlw	1
  4897  0C1D                     u3295:	
  4898  0C1D  35A4               	lslf	___lmul@multiplicand,f
  4899  0C1E  0DA5               	rlf	___lmul@multiplicand+1,f
  4900  0C1F  0DA6               	rlf	___lmul@multiplicand+2,f
  4901  0C20  0DA7               	rlf	___lmul@multiplicand+3,f
  4902  0C21  0B89               	decfsz	9,f
  4903  0C22  2C1D               	goto	u3295
  4904  0C23  3001               	movlw	1
  4905  0C24                     u3305:	
  4906  0C24  36A3               	lsrf	___lmul@multiplier+3,f
  4907  0C25  0CA2               	rrf	___lmul@multiplier+2,f
  4908  0C26  0CA1               	rrf	___lmul@multiplier+1,f
  4909  0C27  0CA0               	rrf	___lmul@multiplier,f
  4910  0C28  0B89               	decfsz	9,f
  4911  0C29  2C24               	goto	u3305
  4912  0C2A  0823               	movf	___lmul@multiplier+3,w
  4913  0C2B  0422               	iorwf	___lmul@multiplier+2,w
  4914  0C2C  0421               	iorwf	___lmul@multiplier+1,w
  4915  0C2D  0420               	iorwf	___lmul@multiplier,w
  4916  0C2E  1D03               	skipz
  4917  0C2F  2C12               	goto	l3722
  4918  0C30  082B               	movf	___lmul@product+3,w
  4919  0C31  00A3               	movwf	?___lmul+3
  4920  0C32  082A               	movf	___lmul@product+2,w
  4921  0C33  00A2               	movwf	?___lmul+2
  4922  0C34  0829               	movf	___lmul@product+1,w
  4923  0C35  00A1               	movwf	?___lmul+1
  4924  0C36  0828               	movf	___lmul@product,w
  4925  0C37  00A0               	movwf	?___lmul
  4926  0C38  0008               	return
  4927  0C39                     __end_of___lmul:	
  4928                           
  4929                           	psect	text14
  4930  06EB                     __ptext14:	
  4931 ;; *************** function _StartUp_Menu *****************
  4932 ;; Defined at:
  4933 ;;		line 17 in file "User_Interface.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  data            1    wreg     PTR struct .
  4936 ;;		 -> main@pmt_config(3), 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  data            1   71[BANK0 ] PTR struct .
  4939 ;;		 -> main@pmt_config(3), 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4949 ;;      Params:         0       0       0       0       0       0
  4950 ;;      Locals:         0       1       0       0       0       0
  4951 ;;      Temps:          0       2       0       0       0       0
  4952 ;;      Totals:         0       3       0       0       0       0
  4953 ;;Total ram usage:        3 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    6
  4956 ;; This function calls:
  4957 ;;		_DAC_WriteVoltage
  4958 ;;		_LCD_CursorHome
  4959 ;;		_LCD_CursorPosition
  4960 ;;		_LCD_DisplayClear
  4961 ;;		_Load_PMTConfing
  4962 ;;		_printf
  4963 ;; This function is called by:
  4964 ;;		_main
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           
  4969                           ;psect for function _StartUp_Menu
  4970  06EB                     _StartUp_Menu:	
  4971                           
  4972                           ;incstack = 0
  4973                           ; Regs used in _StartUp_Menu: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4974                           ;StartUp_Menu@data stored from wreg
  4975  06EB  0020               	movlb	0	; select bank0
  4976  06EC  00E7               	movwf	StartUp_Menu@data
  4977                           
  4978                           ;User_Interface.c: 19: Load_PMTConfing(data);
  4979  06ED  0867               	movf	StartUp_Menu@data,w
  4980  06EE  3189  2116  3186   	fcall	_Load_PMTConfing
  4981                           
  4982                           ;User_Interface.c: 20: DAC_WriteVoltage(DAC_DataTable[data->GainElements]);
  4983  06F1  0020               	movlb	0	; select bank0
  4984  06F2  0A67               	incf	StartUp_Menu@data,w
  4985  06F3  0086               	movwf	6
  4986  06F4  0187               	clrf	7
  4987  06F5  3501               	lslf	1,w
  4988  06F6  3EC8               	addlw	(low (_DAC_DataTable| 0))& (0+255)
  4989  06F7  0086               	movwf	6
  4990  06F8  0187               	clrf	7
  4991  06F9  3F40               	moviw [0]fsr1
  4992  06FA  00B0               	movwf	DAC_WriteVoltage@volue
  4993  06FB  3F41               	moviw [1]fsr1
  4994  06FC  00B1               	movwf	DAC_WriteVoltage@volue+1
  4995  06FD  318B  23AA  3186   	fcall	_DAC_WriteVoltage
  4996                           
  4997                           ;User_Interface.c: 22: LCD_CursorHome();
  4998  0700  3189  216A  3186   	fcall	_LCD_CursorHome
  4999                           
  5000                           ;User_Interface.c: 23: printf(" Geiger Counter ");
  5001  0703  3001               	movlw	low (STR_37| (0+32768))
  5002  0704  0020               	movlb	0	; select bank0
  5003  0705  00C6               	movwf	printf@f
  5004  0706  3083               	movlw	high (STR_37| (0+32768))
  5005  0707  00C7               	movwf	printf@f+1
  5006  0708  3180  205A  3186   	fcall	_printf
  5007                           
  5008                           ;User_Interface.c: 24: LCD_CursorPosition(0,1);
  5009  070B  0020               	movlb	0	; select bank0
  5010  070C  01A3               	clrf	LCD_CursorPosition@ty
  5011  070D  0AA3               	incf	LCD_CursorPosition@ty,f
  5012  070E  3000               	movlw	0
  5013  070F  3189  21EB  3186   	fcall	_LCD_CursorPosition
  5014                           
  5015                           ;User_Interface.c: 25: printf("    with PIC    ");
  5016  0712  30BD               	movlw	low (STR_38| (0+32768))
  5017  0713  0020               	movlb	0	; select bank0
  5018  0714  00C6               	movwf	printf@f
  5019  0715  3082               	movlw	high (STR_38| (0+32768))
  5020  0716  00C7               	movwf	printf@f+1
  5021  0717  3180  205A  3186   	fcall	_printf
  5022                           
  5023                           ;User_Interface.c: 26: _delay((unsigned long)((2000)*(32000000/4000.0)));
  5024  071A  3052               	movlw	82
  5025  071B  0020               	movlb	0	; select bank0
  5026  071C  00E6               	movwf	??_StartUp_Menu+1
  5027  071D  302B               	movlw	43
  5028  071E  00E5               	movwf	??_StartUp_Menu
  5029  071F  3000               	movlw	0
  5030  0720                     u4077:	
  5031  0720  0B89               	decfsz	9,f
  5032  0721  2F20               	goto	u4077
  5033  0722  0BE5               	decfsz	??_StartUp_Menu,f
  5034  0723  2F20               	goto	u4077
  5035  0724  0BE6               	decfsz	??_StartUp_Menu+1,f
  5036  0725  2F20               	goto	u4077
  5037  0726  0000               	nop
  5038                           
  5039                           ;User_Interface.c: 28: LCD_DisplayClear();
  5040  0727  3189  215A  3186   	fcall	_LCD_DisplayClear
  5041                           
  5042                           ;User_Interface.c: 30: LCD_CursorHome();
  5043  072A  3189  216A  3186   	fcall	_LCD_CursorHome
  5044                           
  5045                           ;User_Interface.c: 31: printf("SotWare ver%s","1.01");
  5046  072D  3088               	movlw	low (STR_39| (0+32768))
  5047  072E  0020               	movlb	0	; select bank0
  5048  072F  00C6               	movwf	printf@f
  5049  0730  3083               	movlw	high (STR_39| (0+32768))
  5050  0731  00C7               	movwf	printf@f+1
  5051  0732  3066               	movlw	low (STR_40| (0+32768))
  5052  0733  00C8               	movwf	low ((?_printf| 0+2))
  5053  0734  3084               	movlw	high (STR_40| (0+32768))
  5054  0735  00C9               	movwf	(low ((?_printf| 0+2))+1)
  5055  0736  3180  205A  3186   	fcall	_printf
  5056                           
  5057                           ;User_Interface.c: 32: LCD_CursorPosition(0,1);
  5058  0739  0020               	movlb	0	; select bank0
  5059  073A  01A3               	clrf	LCD_CursorPosition@ty
  5060  073B  0AA3               	incf	LCD_CursorPosition@ty,f
  5061  073C  3000               	movlw	0
  5062  073D  3189  21EB  3186   	fcall	_LCD_CursorPosition
  5063                           
  5064                           ;User_Interface.c: 33: printf("   Ser.No.%0003d   ",data->SerialNum);
  5065  0740  30A9               	movlw	low (STR_41| (0+32768))
  5066  0741  0020               	movlb	0	; select bank0
  5067  0742  00C6               	movwf	printf@f
  5068  0743  3082               	movlw	high (STR_41| (0+32768))
  5069  0744  00C7               	movwf	printf@f+1
  5070  0745  0867               	movf	StartUp_Menu@data,w
  5071  0746  0086               	movwf	6
  5072  0747  0187               	clrf	7
  5073  0748  0801               	movf	1,w
  5074  0749  00E5               	movwf	??_StartUp_Menu
  5075  074A  01E6               	clrf	??_StartUp_Menu+1
  5076  074B  0865               	movf	??_StartUp_Menu,w
  5077  074C  00C8               	movwf	?_printf+2
  5078  074D  0866               	movf	??_StartUp_Menu+1,w
  5079  074E  00C9               	movwf	?_printf+3
  5080  074F  3180  205A  3186   	fcall	_printf
  5081                           
  5082                           ;User_Interface.c: 34: _delay((unsigned long)((2000)*(32000000/4000.0)));
  5083  0752  3052               	movlw	82
  5084  0753  0020               	movlb	0	; select bank0
  5085  0754  00E6               	movwf	??_StartUp_Menu+1
  5086  0755  302B               	movlw	43
  5087  0756  00E5               	movwf	??_StartUp_Menu
  5088  0757  3000               	movlw	0
  5089  0758                     u4087:	
  5090  0758  0B89               	decfsz	9,f
  5091  0759  2F58               	goto	u4087
  5092  075A  0BE5               	decfsz	??_StartUp_Menu,f
  5093  075B  2F58               	goto	u4087
  5094  075C  0BE6               	decfsz	??_StartUp_Menu+1,f
  5095  075D  2F58               	goto	u4087
  5096  075E  0000               	nop
  5097                           
  5098                           ;User_Interface.c: 36: LCD_DisplayClear();
  5099  075F  3189  215A  3186   	fcall	_LCD_DisplayClear
  5100                           
  5101                           ;User_Interface.c: 38: LCD_CursorHome();
  5102  0762  3189  216A  3186   	fcall	_LCD_CursorHome
  5103                           
  5104                           ;User_Interface.c: 39: printf("Created By");
  5105  0765  30AE               	movlw	low (STR_42| (0+32768))
  5106  0766  0020               	movlb	0	; select bank0
  5107  0767  00C6               	movwf	printf@f
  5108  0768  3083               	movlw	high (STR_42| (0+32768))
  5109  0769  00C7               	movwf	printf@f+1
  5110  076A  3180  205A  3186   	fcall	_printf
  5111                           
  5112                           ;User_Interface.c: 40: LCD_CursorPosition(0,1);
  5113  076D  0020               	movlb	0	; select bank0
  5114  076E  01A3               	clrf	LCD_CursorPosition@ty
  5115  076F  0AA3               	incf	LCD_CursorPosition@ty,f
  5116  0770  3000               	movlw	0
  5117  0771  3189  21EB  3186   	fcall	_LCD_CursorPosition
  5118                           
  5119                           ;User_Interface.c: 41: printf("  Ryo Wakabayshi");
  5120  0774  3045               	movlw	low (STR_43| (0+32768))
  5121  0775  0020               	movlb	0	; select bank0
  5122  0776  00C6               	movwf	printf@f
  5123  0777  3083               	movlw	high (STR_43| (0+32768))
  5124  0778  00C7               	movwf	printf@f+1
  5125  0779  3180  205A  3186   	fcall	_printf
  5126                           
  5127                           ;User_Interface.c: 42: _delay((unsigned long)((2000)*(32000000/4000.0)));
  5128  077C  3052               	movlw	82
  5129  077D  0020               	movlb	0	; select bank0
  5130  077E  00E6               	movwf	??_StartUp_Menu+1
  5131  077F  302B               	movlw	43
  5132  0780  00E5               	movwf	??_StartUp_Menu
  5133  0781  3000               	movlw	0
  5134  0782                     u4097:	
  5135  0782  0B89               	decfsz	9,f
  5136  0783  2F82               	goto	u4097
  5137  0784  0BE5               	decfsz	??_StartUp_Menu,f
  5138  0785  2F82               	goto	u4097
  5139  0786  0BE6               	decfsz	??_StartUp_Menu+1,f
  5140  0787  2F82               	goto	u4097
  5141  0788  0000               	nop
  5142                           
  5143                           ;User_Interface.c: 44: LCD_DisplayClear();
  5144  0789  3189  215A         	fcall	_LCD_DisplayClear
  5145  078B  0008               	return
  5146  078C                     __end_of_StartUp_Menu:	
  5147                           
  5148                           	psect	text15
  5149  0916                     __ptext15:	
  5150 ;; *************** function _Load_PMTConfing *****************
  5151 ;; Defined at:
  5152 ;;		line 12 in file "User_Interface.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  data            1    wreg     PTR struct .
  5155 ;;		 -> main@pmt_config(3), 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;  data            1   12[BANK0 ] PTR struct .
  5158 ;;		 -> main@pmt_config(3), 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      unsigned char 
  5161 ;; Registers used:
  5162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5168 ;;      Params:         0       0       0       0       0       0
  5169 ;;      Locals:         0       1       0       0       0       0
  5170 ;;      Temps:          0       1       0       0       0       0
  5171 ;;      Totals:         0       2       0       0       0       0
  5172 ;;Total ram usage:        2 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    5
  5175 ;; This function calls:
  5176 ;;		_EEPROM_MultiRead
  5177 ;; This function is called by:
  5178 ;;		_StartUp_Menu
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           
  5183                           ;psect for function _Load_PMTConfing
  5184  0916                     _Load_PMTConfing:	
  5185                           
  5186                           ;incstack = 0
  5187                           ; Regs used in _Load_PMTConfing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5188                           ;Load_PMTConfing@data stored from wreg
  5189  0916  0020               	movlb	0	; select bank0
  5190  0917  00AC               	movwf	Load_PMTConfing@data
  5191                           
  5192                           ;User_Interface.c: 14: return EEPROM_MultiRead(data->Eeprom_table,3,0);
  5193                           ;	Return value of _Load_PMTConfing is never used
  5194  0918  3003               	movlw	3
  5195  0919  00AB               	movwf	??_Load_PMTConfing
  5196  091A  082B               	movf	??_Load_PMTConfing,w
  5197  091B  00A4               	movwf	EEPROM_MultiRead@size
  5198  091C  01A5               	clrf	EEPROM_MultiRead@addr
  5199  091D  082C               	movf	Load_PMTConfing@data,w
  5200  091E  318B  23D9         	fcall	_EEPROM_MultiRead
  5201  0920  0008               	return
  5202  0921                     __end_of_Load_PMTConfing:	
  5203                           
  5204                           	psect	text16
  5205  0BD9                     __ptext16:	
  5206 ;; *************** function _EEPROM_MultiRead *****************
  5207 ;; Defined at:
  5208 ;;		line 30 in file "eeprom.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  pData           1    wreg     PTR unsigned char 
  5211 ;;		 -> F3344..(3), main@pmt_config(3), 
  5212 ;;  size            1    4[BANK0 ] unsigned char 
  5213 ;;  addr            1    5[BANK0 ] unsigned char 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  5216 ;;		 -> F3344..(3), main@pmt_config(3), 
  5217 ;;  i               1   10[BANK0 ] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      char 
  5220 ;; Registers used:
  5221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5227 ;;      Params:         0       2       0       0       0       0
  5228 ;;      Locals:         0       2       0       0       0       0
  5229 ;;      Temps:          0       3       0       0       0       0
  5230 ;;      Totals:         0       7       0       0       0       0
  5231 ;;Total ram usage:        7 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    4
  5234 ;; This function calls:
  5235 ;;		_eeprom_read
  5236 ;; This function is called by:
  5237 ;;		_Load_PMTConfing
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           
  5242                           ;psect for function _EEPROM_MultiRead
  5243  0BD9                     _EEPROM_MultiRead:	
  5244                           
  5245                           ;incstack = 0
  5246                           ; Regs used in _EEPROM_MultiRead: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5247                           ;EEPROM_MultiRead@pData stored from wreg
  5248  0BD9  0020               	movlb	0	; select bank0
  5249  0BDA  00A9               	movwf	EEPROM_MultiRead@pData
  5250                           
  5251                           ;eeprom.c: 32: uint8_t i = 0;
  5252  0BDB  01AA               	clrf	EEPROM_MultiRead@i
  5253  0BDC                     l3688:	
  5254                           ;eeprom.c: 34: for(;i<size;i++)
  5255                           
  5256  0BDC  0824               	movf	EEPROM_MultiRead@size,w
  5257  0BDD  022A               	subwf	EEPROM_MultiRead@i,w
  5258  0BDE  1803               	btfsc	3,0
  5259  0BDF  2C07               	goto	l3690
  5260                           
  5261                           ;eeprom.c: 35: {
  5262                           ;eeprom.c: 36: if((addr+i)>256-1)
  5263  0BE0  0825               	movf	EEPROM_MultiRead@addr,w
  5264  0BE1  072A               	addwf	EEPROM_MultiRead@i,w
  5265  0BE2  00A6               	movwf	??_EEPROM_MultiRead
  5266  0BE3  01A7               	clrf	??_EEPROM_MultiRead+1
  5267  0BE4  0DA7               	rlf	??_EEPROM_MultiRead+1,f
  5268  0BE5  0827               	movf	??_EEPROM_MultiRead+1,w
  5269  0BE6  3A80               	xorlw	128
  5270  0BE7  00A8               	movwf	??_EEPROM_MultiRead+2
  5271  0BE8  3081               	movlw	129
  5272  0BE9  0228               	subwf	??_EEPROM_MultiRead+2,w
  5273  0BEA  1D03               	skipz
  5274  0BEB  2BEE               	goto	u3205
  5275  0BEC  3000               	movlw	0
  5276  0BED  0226               	subwf	??_EEPROM_MultiRead,w
  5277  0BEE                     u3205:	
  5278  0BEE  1C03               	skipc
  5279  0BEF  2BF2               	goto	l3684
  5280                           
  5281                           ;eeprom.c: 37: return 1;
  5282  0BF0  3001               	movlw	1
  5283  0BF1  0008               	return
  5284  0BF2                     l3684:	
  5285                           
  5286                           ;eeprom.c: 38: pData[i] = eeprom_read(addr+i);
  5287  0BF2  0020               	movlb	0	; select bank0
  5288  0BF3  0825               	movf	EEPROM_MultiRead@addr,w
  5289  0BF4  072A               	addwf	EEPROM_MultiRead@i,w
  5290  0BF5  318A  22C6  318B   	fcall	_eeprom_read
  5291  0BF8  0020               	movlb	0	; select bank0
  5292  0BF9  00A6               	movwf	??_EEPROM_MultiRead
  5293  0BFA  082A               	movf	EEPROM_MultiRead@i,w
  5294  0BFB  0729               	addwf	EEPROM_MultiRead@pData,w
  5295  0BFC  00A7               	movwf	??_EEPROM_MultiRead+1
  5296  0BFD  0827               	movf	??_EEPROM_MultiRead+1,w
  5297  0BFE  0086               	movwf	6
  5298  0BFF  0187               	clrf	7
  5299  0C00  0826               	movf	??_EEPROM_MultiRead,w
  5300  0C01  0081               	movwf	1
  5301  0C02  3001               	movlw	1
  5302  0C03  00A6               	movwf	??_EEPROM_MultiRead
  5303  0C04  0826               	movf	??_EEPROM_MultiRead,w
  5304  0C05  07AA               	addwf	EEPROM_MultiRead@i,f
  5305  0C06  2BDC               	goto	l3688
  5306  0C07                     l3690:	
  5307                           
  5308                           ;eeprom.c: 39: }
  5309                           ;eeprom.c: 41: return 0;
  5310  0C07  3000               	movlw	0
  5311  0C08  0008               	return
  5312  0C09                     __end_of_EEPROM_MultiRead:	
  5313                           
  5314                           	psect	text17
  5315  0AC6                     __ptext17:	
  5316 ;; *************** function _eeprom_read *****************
  5317 ;; Defined at:
  5318 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/pic/eeread.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  addr            1    wreg     unsigned char 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  addr            1    3[BANK0 ] unsigned char 
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1    wreg      unsigned char 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2, status,0
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5332 ;;      Params:         0       0       0       0       0       0
  5333 ;;      Locals:         0       1       0       0       0       0
  5334 ;;      Temps:          0       3       0       0       0       0
  5335 ;;      Totals:         0       4       0       0       0       0
  5336 ;;Total ram usage:        4 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:    3
  5339 ;; This function calls:
  5340 ;;		Nothing
  5341 ;; This function is called by:
  5342 ;;		_EEPROM_MultiRead
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           
  5347                           ;psect for function _eeprom_read
  5348  0AC6                     _eeprom_read:	
  5349                           
  5350                           ;incstack = 0
  5351                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5352                           ;eeprom_read@addr stored from wreg
  5353  0AC6  0020               	movlb	0	; select bank0
  5354  0AC7  00A3               	movwf	eeprom_read@addr
  5355  0AC8  2ACA               	goto	l701
  5356  0AC9                     u3141:	
  5357  0AC9  0020               	movlb	0	; select bank0
  5358  0ACA                     l701:	
  5359  0ACA  0064               	clrwdt	;# 
  5360  0ACB  0023               	movlb	3	; select bank3
  5361  0ACC  1895               	btfsc	21,1	;volsfr
  5362  0ACD  2AC9               	goto	u3141
  5363  0ACE  0020               	movlb	0	; select bank0
  5364  0ACF  0823               	movf	eeprom_read@addr,w
  5365  0AD0  00A0               	movwf	??_eeprom_read
  5366  0AD1  01A1               	clrf	??_eeprom_read+1
  5367  0AD2  0820               	movf	??_eeprom_read,w
  5368  0AD3  0023               	movlb	3	; select bank3
  5369  0AD4  0091               	movwf	17	;volatile
  5370  0AD5  0020               	movlb	0	; select bank0
  5371  0AD6  0821               	movf	??_eeprom_read+1,w
  5372  0AD7  0023               	movlb	3	; select bank3
  5373  0AD8  0092               	movwf	18	;volatile
  5374  0AD9  303F               	movlw	63
  5375  0ADA  0020               	movlb	0	; select bank0
  5376  0ADB  00A2               	movwf	??_eeprom_read+2
  5377  0ADC  0822               	movf	??_eeprom_read+2,w
  5378  0ADD  0023               	movlb	3	; select bank3
  5379  0ADE  0595               	andwf	21,f	;volsfr
  5380  0ADF  1415               	bsf	21,0	;volsfr
  5381  0AE0  1003               	clrc
  5382  0AE1  1815               	btfsc	21,0	;volsfr
  5383  0AE2  1403               	setc
  5384  0AE3  3000               	movlw	0
  5385  0AE4  3D09               	addwfc	9,w
  5386  0AE5  0813               	movf	19,w	;volatile
  5387  0AE6  0008               	return
  5388  0AE7                     __end_of_eeprom_read:	
  5389                           
  5390                           	psect	text18
  5391  0603                     __ptext18:	
  5392 ;; *************** function _Ssetting_PMT_Config *****************
  5393 ;; Defined at:
  5394 ;;		line 47 in file "User_Interface.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  data            1    wreg     PTR struct .
  5397 ;;		 -> main@pmt_config(3), 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  data            1   70[BANK0 ] PTR struct .
  5400 ;;		 -> main@pmt_config(3), 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5410 ;;      Params:         0       0       0       0       0       0
  5411 ;;      Locals:         0       1       0       0       0       0
  5412 ;;      Temps:          0       1       0       0       0       0
  5413 ;;      Totals:         0       2       0       0       0       0
  5414 ;;Total ram usage:        2 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    6
  5417 ;; This function calls:
  5418 ;;		_DAC_WriteVoltage
  5419 ;;		_LCD_CursorHome
  5420 ;;		_LCD_CursorPosition
  5421 ;;		_LCD_DisplayClear
  5422 ;;		_Save_PMTConfig
  5423 ;;		_mTouch_Check
  5424 ;;		_printf
  5425 ;; This function is called by:
  5426 ;;		_main
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           
  5431                           ;psect for function _Ssetting_PMT_Config
  5432  0603                     _Ssetting_PMT_Config:	
  5433                           
  5434                           ;incstack = 0
  5435                           ; Regs used in _Ssetting_PMT_Config: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5436                           ;Ssetting_PMT_Config@data stored from wreg
  5437  0603  0020               	movlb	0	; select bank0
  5438  0604  00E6               	movwf	Ssetting_PMT_Config@data
  5439                           
  5440                           ;User_Interface.c: 49: LCD_CursorHome();
  5441  0605  3189  216A  3186   	fcall	_LCD_CursorHome
  5442                           
  5443                           ;User_Interface.c: 50: printf("   PMT Device   ");
  5444  0608  30DF               	movlw	low (STR_44| (0+32768))
  5445  0609  0020               	movlb	0	; select bank0
  5446  060A  00C6               	movwf	printf@f
  5447  060B  3082               	movlw	high (STR_44| (0+32768))
  5448  060C                     L3:	
  5449  060C  00C7               	movwf	printf@f+1
  5450  060D  3180  205A  3186   	fcall	_printf
  5451  0610                     l580:	
  5452                           ;User_Interface.c: 52: while(!mTouch_Check(0x00))
  5453                           
  5454  0610  3000               	movlw	0
  5455  0611  318D  25E2  3186   	fcall	_mTouch_Check
  5456  0614  3A00               	xorlw	0
  5457  0615  1D03               	btfss	3,2
  5458  0616  2E60               	goto	l4244
  5459                           
  5460                           ;User_Interface.c: 53: {
  5461                           ;User_Interface.c: 54: if(mTouch_Check(0x01)&&(data->DeviceNum==0))
  5462  0617  3001               	movlw	1
  5463  0618  318D  25E2  3186   	fcall	_mTouch_Check
  5464  061B  3A00               	xorlw	0
  5465  061C  1903               	skipnz
  5466  061D  2E2D               	goto	l4228
  5467  061E  0020               	movlb	0	; select bank0
  5468  061F  0866               	movf	Ssetting_PMT_Config@data,w
  5469  0620  3E02               	addlw	2
  5470  0621  0086               	movwf	6
  5471  0622  0187               	clrf	7
  5472  0623  0801               	movf	1,w
  5473  0624  1D03               	btfss	3,2
  5474  0625  2E2D               	goto	l4228
  5475                           
  5476                           ;User_Interface.c: 55: data->DeviceNum = 1;
  5477  0626  0866               	movf	Ssetting_PMT_Config@data,w
  5478  0627  3E02               	addlw	2
  5479  0628  0086               	movwf	6
  5480  0629  0187               	clrf	7
  5481  062A  0181               	clrf	1
  5482  062B  0A81               	incf	1,f
  5483  062C  2E41               	goto	l4234
  5484  062D                     l4228:	
  5485                           
  5486                           ;User_Interface.c: 56: else if(mTouch_Check(0x02)&&(data->DeviceNum==1))
  5487  062D  3002               	movlw	2
  5488  062E  318D  25E2  3186   	fcall	_mTouch_Check
  5489  0631  3A00               	xorlw	0
  5490  0632  1903               	skipnz
  5491  0633  2E41               	goto	l4234
  5492  0634  0020               	movlb	0	; select bank0
  5493  0635  0866               	movf	Ssetting_PMT_Config@data,w
  5494  0636  3E02               	addlw	2
  5495  0637  0086               	movwf	6
  5496  0638  0187               	clrf	7
  5497  0639  0301               	decf	1,w
  5498  063A  1D03               	btfss	3,2
  5499  063B  2E41               	goto	l4234
  5500                           
  5501                           ;User_Interface.c: 57: data->DeviceNum = 0;
  5502  063C  0866               	movf	Ssetting_PMT_Config@data,w
  5503  063D  3E02               	addlw	2
  5504  063E  0086               	movwf	6
  5505  063F  0187               	clrf	7
  5506  0640  0181               	clrf	1
  5507  0641                     l4234:	
  5508                           
  5509                           ;User_Interface.c: 59: LCD_CursorPosition(0,1);
  5510  0641  0020               	movlb	0	; select bank0
  5511  0642  01A3               	clrf	LCD_CursorPosition@ty
  5512  0643  0AA3               	incf	LCD_CursorPosition@ty,f
  5513  0644  3000               	movlw	0
  5514  0645  3189  21EB  3186   	fcall	_LCD_CursorPosition
  5515                           
  5516                           ;User_Interface.c: 60: if(data->DeviceNum==0)
  5517  0648  0020               	movlb	0	; select bank0
  5518  0649  0866               	movf	Ssetting_PMT_Config@data,w
  5519  064A  3E02               	addlw	2
  5520  064B  0086               	movwf	6
  5521  064C  0187               	clrf	7
  5522  064D  0801               	movf	1,w
  5523  064E  1D03               	btfss	3,2
  5524  064F  2E54               	goto	l4240
  5525                           
  5526                           ;User_Interface.c: 61: printf("<--  H7826   -->");
  5527  0650  3023               	movlw	low (STR_45| (0+32768))
  5528  0651  00C6               	movwf	printf@f
  5529  0652  3083               	movlw	high (STR_45| (0+32768))
  5530  0653  2E0C               	goto	L3
  5531  0654                     l4240:	
  5532                           
  5533                           ;User_Interface.c: 62: else if(data->DeviceNum==1)
  5534  0654  0020               	movlb	0	; select bank0
  5535  0655  0866               	movf	Ssetting_PMT_Config@data,w
  5536  0656  3E02               	addlw	2
  5537  0657  0086               	movwf	6
  5538  0658  0187               	clrf	7
  5539  0659  0301               	decf	1,w
  5540  065A  1D03               	btfss	3,2
  5541  065B  2E10               	goto	l580
  5542                           
  5543                           ;User_Interface.c: 63: printf("<-- H7826_01 -->");
  5544  065C  3034               	movlw	low (STR_46| (0+32768))
  5545  065D  00C6               	movwf	printf@f
  5546  065E  3083               	movlw	high (STR_46| (0+32768))
  5547  065F  2E0C               	goto	L3
  5548  0660                     l4244:	
  5549                           
  5550                           ;User_Interface.c: 64: }
  5551                           ;User_Interface.c: 66: LCD_CursorHome();
  5552  0660  3189  216A  3186   	fcall	_LCD_CursorHome
  5553                           
  5554                           ;User_Interface.c: 67: printf("  Set PMT Gain  ");
  5555  0663  30F0               	movlw	low (STR_47| (0+32768))
  5556  0664  0020               	movlb	0	; select bank0
  5557  0665  00C6               	movwf	printf@f
  5558  0666  3082               	movlw	high (STR_47| (0+32768))
  5559  0667  00C7               	movwf	printf@f+1
  5560  0668                     L4:	
  5561  0668  3180  205A  3186   	fcall	_printf
  5562  066B                     l589:	
  5563                           ;User_Interface.c: 69: while(!mTouch_Check(0x00))
  5564                           
  5565  066B  3000               	movlw	0
  5566  066C  318D  25E2  3186   	fcall	_mTouch_Check
  5567  066F  3A00               	xorlw	0
  5568  0670  1D03               	btfss	3,2
  5569  0671  2ED4               	goto	l4270
  5570                           
  5571                           ;User_Interface.c: 70: {
  5572                           ;User_Interface.c: 71: if(mTouch_Check(0x01)&&(data->GainElements<11))
  5573  0672  3001               	movlw	1
  5574  0673  318D  25E2  3186   	fcall	_mTouch_Check
  5575  0676  3A00               	xorlw	0
  5576  0677  1903               	skipnz
  5577  0678  2E89               	goto	l4254
  5578  0679  0020               	movlb	0	; select bank0
  5579  067A  0A66               	incf	Ssetting_PMT_Config@data,w
  5580  067B  0086               	movwf	6
  5581  067C  0187               	clrf	7
  5582  067D  300B               	movlw	11
  5583  067E  0201               	subwf	1,w
  5584  067F  1803               	skipnc
  5585  0680  2E89               	goto	l4254
  5586                           
  5587                           ;User_Interface.c: 72: data->GainElements++;
  5588  0681  3001               	movlw	1
  5589  0682  00E5               	movwf	??_Ssetting_PMT_Config
  5590  0683  0A66               	incf	Ssetting_PMT_Config@data,w
  5591  0684  0086               	movwf	6
  5592  0685  0187               	clrf	7
  5593  0686  0865               	movf	??_Ssetting_PMT_Config,w
  5594  0687  0781               	addwf	1,f
  5595  0688  2E9C               	goto	l4260
  5596  0689                     l4254:	
  5597                           
  5598                           ;User_Interface.c: 73: else if(mTouch_Check(0x02)&&(0<data->GainElements))
  5599  0689  3002               	movlw	2
  5600  068A  318D  25E2  3186   	fcall	_mTouch_Check
  5601  068D  3A00               	xorlw	0
  5602  068E  1903               	skipnz
  5603  068F  2E9C               	goto	l4260
  5604  0690  0020               	movlb	0	; select bank0
  5605  0691  0A66               	incf	Ssetting_PMT_Config@data,w
  5606  0692  0086               	movwf	6
  5607  0693  0187               	clrf	7
  5608  0694  0801               	movf	1,w
  5609  0695  1903               	btfsc	3,2
  5610  0696  2E9C               	goto	l4260
  5611                           
  5612                           ;User_Interface.c: 74: data->GainElements--;
  5613  0697  0A66               	incf	Ssetting_PMT_Config@data,w
  5614  0698  0086               	movwf	6
  5615  0699  0187               	clrf	7
  5616  069A  3001               	movlw	1
  5617  069B  0281               	subwf	1,f
  5618  069C                     l4260:	
  5619                           
  5620                           ;User_Interface.c: 76: LCD_CursorPosition(0,1);
  5621  069C  0020               	movlb	0	; select bank0
  5622  069D  01A3               	clrf	LCD_CursorPosition@ty
  5623  069E  0AA3               	incf	LCD_CursorPosition@ty,f
  5624  069F  3000               	movlw	0
  5625  06A0  3189  21EB  3186   	fcall	_LCD_CursorPosition
  5626                           
  5627                           ;User_Interface.c: 77: if(data->DeviceNum==0)
  5628  06A3  0020               	movlb	0	; select bank0
  5629  06A4  0866               	movf	Ssetting_PMT_Config@data,w
  5630  06A5  3E02               	addlw	2
  5631  06A6  0086               	movwf	6
  5632  06A7  0187               	clrf	7
  5633  06A8  0801               	movf	1,w
  5634  06A9  1D03               	btfss	3,2
  5635  06AA  2EBB               	goto	l4266
  5636                           
  5637                           ;User_Interface.c: 78: printf("<-- %8s -->",H7826_Gain[data->GainElements]);
  5638  06AB  30A2               	movlw	low (STR_48| (0+32768))
  5639  06AC  00C6               	movwf	printf@f
  5640  06AD  3083               	movlw	high (STR_48| (0+32768))
  5641  06AE  00C7               	movwf	printf@f+1
  5642  06AF  0A66               	incf	Ssetting_PMT_Config@data,w
  5643  06B0  0086               	movwf	6
  5644  06B1  0187               	clrf	7
  5645  06B2  3501               	lslf	1,w
  5646  06B3  3E3E               	addlw	(low (_H7826_Gain| (0+256)))& (0+255)
  5647  06B4  0086               	movwf	6
  5648  06B5  3001               	movlw	1	; select bank2/3
  5649  06B6  0087               	movwf	7
  5650  06B7  3F40               	moviw [0]fsr1
  5651  06B8  00C8               	movwf	low ((?_printf| 0+2))
  5652  06B9  3F41               	moviw [1]fsr1
  5653  06BA  2ED2               	goto	L5
  5654  06BB                     l4266:	
  5655                           
  5656                           ;User_Interface.c: 79: else if(data->DeviceNum==1)
  5657  06BB  0020               	movlb	0	; select bank0
  5658  06BC  0866               	movf	Ssetting_PMT_Config@data,w
  5659  06BD  3E02               	addlw	2
  5660  06BE  0086               	movwf	6
  5661  06BF  0187               	clrf	7
  5662  06C0  0301               	decf	1,w
  5663  06C1  1D03               	btfss	3,2
  5664  06C2  2E6B               	goto	l589
  5665                           
  5666                           ;User_Interface.c: 80: printf("<-- %8s -->",H7826_01_Gain[data->GainElements]);
  5667  06C3  30A2               	movlw	low (STR_48| (0+32768))
  5668  06C4  00C6               	movwf	printf@f
  5669  06C5  3083               	movlw	high (STR_48| (0+32768))
  5670  06C6  00C7               	movwf	printf@f+1
  5671  06C7  0A66               	incf	Ssetting_PMT_Config@data,w
  5672  06C8  0086               	movwf	6
  5673  06C9  0187               	clrf	7
  5674  06CA  3501               	lslf	1,w
  5675  06CB  3E20               	addlw	(low (_H7826_01_Gain| (0+256)))& (0+255)
  5676  06CC  0086               	movwf	6
  5677  06CD  3001               	movlw	1	; select bank2/3
  5678  06CE  0087               	movwf	7
  5679  06CF  3F40               	moviw [0]fsr1
  5680  06D0  00C8               	movwf	low ((?_printf| 0+2))
  5681  06D1  3F41               	moviw [1]fsr1
  5682  06D2                     L5:	
  5683  06D2  00C9               	movwf	(low ((?_printf| 0+2))+1)
  5684  06D3  2E68               	goto	L4
  5685  06D4                     l4270:	
  5686                           
  5687                           ;User_Interface.c: 81: }
  5688                           ;User_Interface.c: 83: DAC_WriteVoltage(DAC_DataTable[data->GainElements]);
  5689  06D4  0020               	movlb	0	; select bank0
  5690  06D5  0A66               	incf	Ssetting_PMT_Config@data,w
  5691  06D6  0086               	movwf	6
  5692  06D7  0187               	clrf	7
  5693  06D8  3501               	lslf	1,w
  5694  06D9  3EC8               	addlw	(low (_DAC_DataTable| 0))& (0+255)
  5695  06DA  0086               	movwf	6
  5696  06DB  0187               	clrf	7
  5697  06DC  3F40               	moviw [0]fsr1
  5698  06DD  00B0               	movwf	DAC_WriteVoltage@volue
  5699  06DE  3F41               	moviw [1]fsr1
  5700  06DF  00B1               	movwf	DAC_WriteVoltage@volue+1
  5701  06E0  318B  23AA  3186   	fcall	_DAC_WriteVoltage
  5702                           
  5703                           ;User_Interface.c: 85: LCD_DisplayClear();
  5704  06E3  3189  215A  3186   	fcall	_LCD_DisplayClear
  5705                           
  5706                           ;User_Interface.c: 87: Save_PMTConfig(data);
  5707  06E6  0020               	movlb	0	; select bank0
  5708  06E7  0866               	movf	Ssetting_PMT_Config@data,w
  5709  06E8  3189  210B         	fcall	_Save_PMTConfig
  5710  06EA  0008               	return
  5711  06EB                     __end_of_Ssetting_PMT_Config:	
  5712                           
  5713                           	psect	text19
  5714  090B                     __ptext19:	
  5715 ;; *************** function _Save_PMTConfig *****************
  5716 ;; Defined at:
  5717 ;;		line 7 in file "User_Interface.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;  data            1    wreg     PTR struct .
  5720 ;;		 -> main@pmt_config(3), 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  data            1   12[BANK0 ] PTR struct .
  5723 ;;		 -> main@pmt_config(3), 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      unsigned char 
  5726 ;; Registers used:
  5727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5733 ;;      Params:         0       0       0       0       0       0
  5734 ;;      Locals:         0       1       0       0       0       0
  5735 ;;      Temps:          0       1       0       0       0       0
  5736 ;;      Totals:         0       2       0       0       0       0
  5737 ;;Total ram usage:        2 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    5
  5740 ;; This function calls:
  5741 ;;		_EEPROM_MultiWrite
  5742 ;; This function is called by:
  5743 ;;		_Ssetting_PMT_Config
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           
  5748                           ;psect for function _Save_PMTConfig
  5749  090B                     _Save_PMTConfig:	
  5750                           
  5751                           ;incstack = 0
  5752                           ; Regs used in _Save_PMTConfig: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5753                           ;Save_PMTConfig@data stored from wreg
  5754  090B  0020               	movlb	0	; select bank0
  5755  090C  00AC               	movwf	Save_PMTConfig@data
  5756                           
  5757                           ;User_Interface.c: 9: return EEPROM_MultiWrite(data->Eeprom_table,3,0);
  5758                           ;	Return value of _Save_PMTConfig is never used
  5759  090D  3003               	movlw	3
  5760  090E  00AB               	movwf	??_Save_PMTConfig
  5761  090F  082B               	movf	??_Save_PMTConfig,w
  5762  0910  00A4               	movwf	EEPROM_MultiWrite@size
  5763  0911  01A5               	clrf	EEPROM_MultiWrite@addr
  5764  0912  082C               	movf	Save_PMTConfig@data,w
  5765  0913  318C  2439         	fcall	_EEPROM_MultiWrite
  5766  0915  0008               	return
  5767  0916                     __end_of_Save_PMTConfig:	
  5768                           
  5769                           	psect	text20
  5770  0C39                     __ptext20:	
  5771 ;; *************** function _EEPROM_MultiWrite *****************
  5772 ;; Defined at:
  5773 ;;		line 12 in file "eeprom.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  pData           1    wreg     PTR unsigned char 
  5776 ;;		 -> F3344..(3), main@pmt_config(3), 
  5777 ;;  size            1    4[BANK0 ] unsigned char 
  5778 ;;  addr            1    5[BANK0 ] unsigned char 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  5781 ;;		 -> F3344..(3), main@pmt_config(3), 
  5782 ;;  i               1   10[BANK0 ] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      char 
  5785 ;; Registers used:
  5786 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5792 ;;      Params:         0       2       0       0       0       0
  5793 ;;      Locals:         0       2       0       0       0       0
  5794 ;;      Temps:          0       3       0       0       0       0
  5795 ;;      Totals:         0       7       0       0       0       0
  5796 ;;Total ram usage:        7 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    4
  5799 ;; This function calls:
  5800 ;;		_eeprom_write
  5801 ;; This function is called by:
  5802 ;;		_Save_PMTConfig
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           
  5807                           ;psect for function _EEPROM_MultiWrite
  5808  0C39                     _EEPROM_MultiWrite:	
  5809                           
  5810                           ;incstack = 0
  5811                           ; Regs used in _EEPROM_MultiWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5812                           ;EEPROM_MultiWrite@pData stored from wreg
  5813  0C39  0020               	movlb	0	; select bank0
  5814  0C3A  00A9               	movwf	EEPROM_MultiWrite@pData
  5815                           
  5816                           ;eeprom.c: 14: uint8_t i = 0;
  5817  0C3B  01AA               	clrf	EEPROM_MultiWrite@i
  5818  0C3C                     l3670:	
  5819                           ;eeprom.c: 16: for(;i<size;i++)
  5820                           
  5821  0C3C  0824               	movf	EEPROM_MultiWrite@size,w
  5822  0C3D  022A               	subwf	EEPROM_MultiWrite@i,w
  5823  0C3E  1803               	btfsc	3,0
  5824  0C3F  2C68               	goto	l3672
  5825                           
  5826                           ;eeprom.c: 17: {
  5827                           ;eeprom.c: 18: if((addr+i)>256-1)
  5828  0C40  0825               	movf	EEPROM_MultiWrite@addr,w
  5829  0C41  072A               	addwf	EEPROM_MultiWrite@i,w
  5830  0C42  00A6               	movwf	??_EEPROM_MultiWrite
  5831  0C43  01A7               	clrf	??_EEPROM_MultiWrite+1
  5832  0C44  0DA7               	rlf	??_EEPROM_MultiWrite+1,f
  5833  0C45  0827               	movf	??_EEPROM_MultiWrite+1,w
  5834  0C46  3A80               	xorlw	128
  5835  0C47  00A8               	movwf	??_EEPROM_MultiWrite+2
  5836  0C48  3081               	movlw	129
  5837  0C49  0228               	subwf	??_EEPROM_MultiWrite+2,w
  5838  0C4A  1D03               	skipz
  5839  0C4B  2C4E               	goto	u3185
  5840  0C4C  3000               	movlw	0
  5841  0C4D  0226               	subwf	??_EEPROM_MultiWrite,w
  5842  0C4E                     u3185:	
  5843  0C4E  1C03               	skipc
  5844  0C4F  2C52               	goto	l3666
  5845                           
  5846                           ;eeprom.c: 19: return 1;
  5847  0C50  3001               	movlw	1
  5848  0C51  0008               	return
  5849  0C52                     l3666:	
  5850                           
  5851                           ;eeprom.c: 20: eeprom_write(addr+i,pData[i]);
  5852  0C52  0020               	movlb	0	; select bank0
  5853  0C53  082A               	movf	EEPROM_MultiWrite@i,w
  5854  0C54  0729               	addwf	EEPROM_MultiWrite@pData,w
  5855  0C55  00A6               	movwf	??_EEPROM_MultiWrite
  5856  0C56  0826               	movf	??_EEPROM_MultiWrite,w
  5857  0C57  0086               	movwf	6
  5858  0C58  0187               	clrf	7
  5859  0C59  0801               	movf	1,w
  5860  0C5A  00A7               	movwf	??_EEPROM_MultiWrite+1
  5861  0C5B  0827               	movf	??_EEPROM_MultiWrite+1,w
  5862  0C5C  00A0               	movwf	eeprom_write@value
  5863  0C5D  0825               	movf	EEPROM_MultiWrite@addr,w
  5864  0C5E  072A               	addwf	EEPROM_MultiWrite@i,w
  5865  0C5F  318B  237E  318C   	fcall	_eeprom_write
  5866  0C62  3001               	movlw	1
  5867  0C63  0020               	movlb	0	; select bank0
  5868  0C64  00A6               	movwf	??_EEPROM_MultiWrite
  5869  0C65  0826               	movf	??_EEPROM_MultiWrite,w
  5870  0C66  07AA               	addwf	EEPROM_MultiWrite@i,f
  5871  0C67  2C3C               	goto	l3670
  5872  0C68                     l3672:	
  5873                           
  5874                           ;eeprom.c: 21: }
  5875                           ;eeprom.c: 23: return 0;
  5876  0C68  3000               	movlw	0
  5877  0C69  0008               	return
  5878  0C6A                     __end_of_EEPROM_MultiWrite:	
  5879                           
  5880                           	psect	text21
  5881  0B7E                     __ptext21:	
  5882 ;; *************** function _eeprom_write *****************
  5883 ;; Defined at:
  5884 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/pic/eewrite.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  addr            1    wreg     unsigned char 
  5887 ;;  value           1    0[BANK0 ] unsigned char 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  addr            1    3[BANK0 ] unsigned char 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      void 
  5892 ;; Registers used:
  5893 ;;		wreg, status,2, status,0
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5899 ;;      Params:         0       1       0       0       0       0
  5900 ;;      Locals:         0       1       0       0       0       0
  5901 ;;      Temps:          0       2       0       0       0       0
  5902 ;;      Totals:         0       4       0       0       0       0
  5903 ;;Total ram usage:        4 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    3
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_EEPROM_MultiWrite
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           
  5914                           ;psect for function _eeprom_write
  5915  0B7E                     _eeprom_write:	
  5916                           
  5917                           ;incstack = 0
  5918                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  5919                           ;eeprom_write@addr stored from wreg
  5920  0B7E  0020               	movlb	0	; select bank0
  5921  0B7F  00A3               	movwf	eeprom_write@addr
  5922  0B80                     l723:	
  5923  0B80  0023               	movlb	3	; select bank3
  5924  0B81  1895               	btfsc	21,1	;volsfr
  5925  0B82  2B80               	goto	l723
  5926  0B83  0020               	movlb	0	; select bank0
  5927  0B84  0823               	movf	eeprom_write@addr,w
  5928  0B85  00A1               	movwf	??_eeprom_write
  5929  0B86  01A2               	clrf	??_eeprom_write+1
  5930  0B87  0821               	movf	??_eeprom_write,w
  5931  0B88  0023               	movlb	3	; select bank3
  5932  0B89  0091               	movwf	17	;volatile
  5933  0B8A  0020               	movlb	0	; select bank0
  5934  0B8B  0822               	movf	??_eeprom_write+1,w
  5935  0B8C  0023               	movlb	3	; select bank3
  5936  0B8D  0092               	movwf	18	;volatile
  5937  0B8E  0020               	movlb	0	; select bank0
  5938  0B8F  0820               	movf	eeprom_write@value,w
  5939  0B90  0023               	movlb	3	; select bank3
  5940  0B91  0093               	movwf	19	;volatile
  5941  0B92  303F               	movlw	63
  5942  0B93  0020               	movlb	0	; select bank0
  5943  0B94  00A1               	movwf	??_eeprom_write
  5944  0B95  0821               	movf	??_eeprom_write,w
  5945  0B96  0023               	movlb	3	; select bank3
  5946  0B97  0595               	andwf	21,f	;volsfr
  5947  0B98  0020               	movlb	0	; select bank0
  5948  0B99  1003               	bcf	3,0	;volatile
  5949  0B9A  1B8B               	btfsc	11,7	;volatile
  5950  0B9B  1403               	bsf	3,0	;volatile
  5951  0B9C  138B               	bcf	11,7	;volatile
  5952  0B9D  0023               	movlb	3	; select bank3
  5953  0B9E  1515               	bsf	21,2	;volsfr
  5954  0B9F  3055               	movlw	85
  5955  0BA0  0096               	movwf	22	;volsfr
  5956  0BA1  30AA               	movlw	170
  5957  0BA2  0096               	movwf	22	;volsfr
  5958  0BA3  1495               	bsf	21,1	;volsfr
  5959  0BA4  1115               	bcf	21,2	;volsfr
  5960  0BA5  0020               	movlb	0	; select bank0
  5961  0BA6  1C03               	btfss	3,0	;volatile
  5962  0BA7  0008               	return
  5963  0BA8  178B               	bsf	11,7	;volatile
  5964  0BA9  0008               	return
  5965  0BAA                     __end_of_eeprom_write:	
  5966                           
  5967                           	psect	text22
  5968  0BAA                     __ptext22:	
  5969 ;; *************** function _DAC_WriteVoltage *****************
  5970 ;; Defined at:
  5971 ;;		line 27 in file "MCP4726.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  volue           2   16[BANK0 ] unsigned int 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      char 
  5978 ;; Registers used:
  5979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5985 ;;      Params:         0       2       0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0       0
  5987 ;;      Temps:          0       3       0       0       0       0
  5988 ;;      Totals:         0       5       0       0       0       0
  5989 ;;Total ram usage:        5 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    5
  5992 ;; This function calls:
  5993 ;;		_I2C_Transmit
  5994 ;; This function is called by:
  5995 ;;		_StartUp_Menu
  5996 ;;		_Ssetting_PMT_Config
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           
  6001                           ;psect for function _DAC_WriteVoltage
  6002  0BAA                     _DAC_WriteVoltage:	
  6003                           
  6004                           ;MCP4726.c: 29: VoltageReg.Command = (uint8_t)(0x0);
  6005                           
  6006                           ;incstack = 0
  6007                           ; Regs used in _DAC_WriteVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6008  0BAA  303F               	movlw	-193
  6009  0BAB  0020               	movlb	0	; select bank0
  6010  0BAC  05ED               	andwf	_VoltageReg,f
  6011                           
  6012                           ;MCP4726.c: 30: VoltageReg.PowerDown = ConfigReg.PowerDown;
  6013  0BAD  0C6F               	rrf	_ConfigReg,w
  6014  0BAE  3903               	andlw	3
  6015  0BAF  00B2               	movwf	??_DAC_WriteVoltage
  6016  0BB0  0EB2               	swapf	??_DAC_WriteVoltage,f
  6017  0BB1  086D               	movf	_VoltageReg,w
  6018  0BB2  0632               	xorwf	??_DAC_WriteVoltage,w
  6019  0BB3  39CF               	andlw	-49
  6020  0BB4  0632               	xorwf	??_DAC_WriteVoltage,w
  6021  0BB5  00ED               	movwf	_VoltageReg
  6022                           
  6023                           ;MCP4726.c: 31: VoltageReg.Voltage4bits = (uint8_t)((volue&0x0F00)>>8);
  6024  0BB6  0831               	movf	DAC_WriteVoltage@volue+1,w
  6025  0BB7  00B3               	movwf	??_DAC_WriteVoltage+1
  6026  0BB8  0830               	movf	DAC_WriteVoltage@volue,w
  6027  0BB9  00B2               	movwf	??_DAC_WriteVoltage
  6028  0BBA  0833               	movf	??_DAC_WriteVoltage+1,w
  6029  0BBB  00B2               	movwf	??_DAC_WriteVoltage
  6030  0BBC  01B3               	clrf	??_DAC_WriteVoltage+1
  6031  0BBD  300F               	movlw	15
  6032  0BBE  0532               	andwf	??_DAC_WriteVoltage,w
  6033  0BBF  00B4               	movwf	??_DAC_WriteVoltage+2
  6034  0BC0  086D               	movf	_VoltageReg,w
  6035  0BC1  0634               	xorwf	??_DAC_WriteVoltage+2,w
  6036  0BC2  39F0               	andlw	-16
  6037  0BC3  0634               	xorwf	??_DAC_WriteVoltage+2,w
  6038  0BC4  00ED               	movwf	_VoltageReg
  6039                           
  6040                           ;MCP4726.c: 32: VoltageReg.Voltage8bits = (uint8_t)(volue&0x00FF);
  6041  0BC5  0830               	movf	DAC_WriteVoltage@volue,w
  6042  0BC6  00B2               	movwf	??_DAC_WriteVoltage
  6043  0BC7  0832               	movf	??_DAC_WriteVoltage,w
  6044  0BC8  00EE               	movwf	_VoltageReg+1
  6045                           
  6046                           ;MCP4726.c: 34: return I2C_Transmit(I2C2_MODULE,0x60,VoltageReg.Voltage_Data,2);
  6047                           ;	Return value of _DAC_WriteVoltage is never used
  6048  0BC9  3060               	movlw	96
  6049  0BCA  00B2               	movwf	??_DAC_WriteVoltage
  6050  0BCB  0832               	movf	??_DAC_WriteVoltage,w
  6051  0BCC  00A8               	movwf	I2C_Transmit@address
  6052  0BCD  306D               	movlw	(low (_VoltageReg| 0))& (0+255)
  6053  0BCE  00B3               	movwf	??_DAC_WriteVoltage+1
  6054  0BCF  0833               	movf	??_DAC_WriteVoltage+1,w
  6055  0BD0  00A9               	movwf	I2C_Transmit@pData
  6056  0BD1  3002               	movlw	2
  6057  0BD2  00B4               	movwf	??_DAC_WriteVoltage+2
  6058  0BD3  0834               	movf	??_DAC_WriteVoltage+2,w
  6059  0BD4  00AA               	movwf	I2C_Transmit@size
  6060  0BD5  3001               	movlw	1
  6061  0BD6  318A  2235         	fcall	_I2C_Transmit
  6062  0BD8  0008               	return
  6063  0BD9                     __end_of_DAC_WriteVoltage:	
  6064                           
  6065                           	psect	text23
  6066  0ED4                     __ptext23:	
  6067 ;; *************** function _Show_PMT_Config *****************
  6068 ;; Defined at:
  6069 ;;		line 90 in file "User_Interface.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  data            1    wreg     PTR struct .
  6072 ;;		 -> main@pmt_config(3), 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  data            1   71[BANK0 ] PTR struct .
  6075 ;;		 -> main@pmt_config(3), 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6085 ;;      Params:         0       0       0       0       0       0
  6086 ;;      Locals:         0       1       0       0       0       0
  6087 ;;      Temps:          0       2       0       0       0       0
  6088 ;;      Totals:         0       3       0       0       0       0
  6089 ;;Total ram usage:        3 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    6
  6092 ;; This function calls:
  6093 ;;		_LCD_CursorHome
  6094 ;;		_LCD_CursorPosition
  6095 ;;		_LCD_DisplayClear
  6096 ;;		_mTouch_Check
  6097 ;;		_printf
  6098 ;; This function is called by:
  6099 ;;		_main
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           
  6104                           ;psect for function _Show_PMT_Config
  6105  0ED4                     _Show_PMT_Config:	
  6106                           
  6107                           ;incstack = 0
  6108                           ; Regs used in _Show_PMT_Config: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6109                           ;Show_PMT_Config@data stored from wreg
  6110  0ED4  0020               	movlb	0	; select bank0
  6111  0ED5  00E7               	movwf	Show_PMT_Config@data
  6112  0ED6                     l601:	
  6113                           ;User_Interface.c: 92: while(!mTouch_Check(0x00))
  6114                           
  6115  0ED6  3000               	movlw	0
  6116  0ED7  318D  25E2  318E   	fcall	_mTouch_Check
  6117  0EDA  3A00               	xorlw	0
  6118  0EDB  1D03               	btfss	3,2
  6119  0EDC  2F5E               	goto	l604
  6120                           
  6121                           ;User_Interface.c: 93: {
  6122                           ;User_Interface.c: 94: LCD_CursorHome();
  6123  0EDD  3189  216A  318E   	fcall	_LCD_CursorHome
  6124                           
  6125                           ;User_Interface.c: 95: printf("SotWare ver%s","1.01");
  6126  0EE0  3088               	movlw	low (STR_39| (0+32768))
  6127  0EE1  0020               	movlb	0	; select bank0
  6128  0EE2  00C6               	movwf	printf@f
  6129  0EE3  3083               	movlw	high (STR_39| (0+32768))
  6130  0EE4  00C7               	movwf	printf@f+1
  6131  0EE5  3066               	movlw	low (STR_40| (0+32768))
  6132  0EE6  00C8               	movwf	low ((?_printf| 0+2))
  6133  0EE7  3084               	movlw	high (STR_40| (0+32768))
  6134  0EE8  00C9               	movwf	(low ((?_printf| 0+2))+1)
  6135  0EE9  3180  205A  318E   	fcall	_printf
  6136                           
  6137                           ;User_Interface.c: 96: LCD_CursorPosition(0,1);
  6138  0EEC  0020               	movlb	0	; select bank0
  6139  0EED  01A3               	clrf	LCD_CursorPosition@ty
  6140  0EEE  0AA3               	incf	LCD_CursorPosition@ty,f
  6141  0EEF  3000               	movlw	0
  6142  0EF0  3189  21EB  318E   	fcall	_LCD_CursorPosition
  6143                           
  6144                           ;User_Interface.c: 97: printf("   Ser.No.%0003d   ",data->SerialNum);
  6145  0EF3  30A9               	movlw	low (STR_41| (0+32768))
  6146  0EF4  0020               	movlb	0	; select bank0
  6147  0EF5  00C6               	movwf	printf@f
  6148  0EF6  3082               	movlw	high (STR_41| (0+32768))
  6149  0EF7  00C7               	movwf	printf@f+1
  6150  0EF8  0867               	movf	Show_PMT_Config@data,w
  6151  0EF9  0086               	movwf	6
  6152  0EFA  0187               	clrf	7
  6153  0EFB  0801               	movf	1,w
  6154  0EFC  00E5               	movwf	??_Show_PMT_Config
  6155  0EFD  01E6               	clrf	??_Show_PMT_Config+1
  6156  0EFE  0865               	movf	??_Show_PMT_Config,w
  6157  0EFF  00C8               	movwf	?_printf+2
  6158  0F00  0866               	movf	??_Show_PMT_Config+1,w
  6159  0F01  00C9               	movwf	?_printf+3
  6160  0F02  3180  205A  318E   	fcall	_printf
  6161  0F05  2ED6               	goto	l601
  6162  0F06                     l4284:	
  6163                           ;User_Interface.c: 98: }
  6164                           ;User_Interface.c: 99: while(!mTouch_Check(0x00))
  6165                           
  6166                           
  6167                           ;User_Interface.c: 100: {
  6168                           ;User_Interface.c: 101: LCD_CursorHome();
  6169  0F06  3189  216A  318E   	fcall	_LCD_CursorHome
  6170                           
  6171                           ;User_Interface.c: 102: if(data->DeviceNum==0)
  6172  0F09  0020               	movlb	0	; select bank0
  6173  0F0A  0867               	movf	Show_PMT_Config@data,w
  6174  0F0B  3E02               	addlw	2
  6175  0F0C  0086               	movwf	6
  6176  0F0D  0187               	clrf	7
  6177  0F0E  0801               	movf	1,w
  6178  0F0F  1D03               	btfss	3,2
  6179  0F10  2F15               	goto	l4290
  6180                           
  6181                           ;User_Interface.c: 103: printf("Deveice:H7826   ");
  6182  0F11  30CE               	movlw	low (STR_53| (0+32768))
  6183  0F12  00C6               	movwf	printf@f
  6184  0F13  3082               	movlw	high (STR_53| (0+32768))
  6185  0F14  2F20               	goto	L6
  6186  0F15                     l4290:	
  6187                           
  6188                           ;User_Interface.c: 104: else if(data->DeviceNum==1)
  6189  0F15  0020               	movlb	0	; select bank0
  6190  0F16  0867               	movf	Show_PMT_Config@data,w
  6191  0F17  3E02               	addlw	2
  6192  0F18  0086               	movwf	6
  6193  0F19  0187               	clrf	7
  6194  0F1A  0301               	decf	1,w
  6195  0F1B  1D03               	btfss	3,2
  6196  0F1C  2F24               	goto	l4294
  6197                           
  6198                           ;User_Interface.c: 105: printf("Deveice:H7826_01");
  6199  0F1D  3012               	movlw	low (STR_54| (0+32768))
  6200  0F1E  00C6               	movwf	printf@f
  6201  0F1F  3083               	movlw	high (STR_54| (0+32768))
  6202  0F20                     L6:	
  6203  0F20  00C7               	movwf	printf@f+1
  6204  0F21  3180  205A  318E   	fcall	_printf
  6205  0F24                     l4294:	
  6206                           
  6207                           ;User_Interface.c: 106: LCD_CursorPosition(0,1);
  6208  0F24  0020               	movlb	0	; select bank0
  6209  0F25  01A3               	clrf	LCD_CursorPosition@ty
  6210  0F26  0AA3               	incf	LCD_CursorPosition@ty,f
  6211  0F27  3000               	movlw	0
  6212  0F28  3189  21EB  318E   	fcall	_LCD_CursorPosition
  6213                           
  6214                           ;User_Interface.c: 107: if(data->DeviceNum==0)
  6215  0F2B  0020               	movlb	0	; select bank0
  6216  0F2C  0867               	movf	Show_PMT_Config@data,w
  6217  0F2D  3E02               	addlw	2
  6218  0F2E  0086               	movwf	6
  6219  0F2F  0187               	clrf	7
  6220  0F30  0801               	movf	1,w
  6221  0F31  1D03               	btfss	3,2
  6222  0F32  2F43               	goto	l4300
  6223                           
  6224                           ;User_Interface.c: 108: printf(" Gain: %8s ",H7826_Gain[data->GainElements]);
  6225  0F33  3096               	movlw	low (STR_55| (0+32768))
  6226  0F34  00C6               	movwf	printf@f
  6227  0F35  3083               	movlw	high (STR_55| (0+32768))
  6228  0F36  00C7               	movwf	printf@f+1
  6229  0F37  0A67               	incf	Show_PMT_Config@data,w
  6230  0F38  0086               	movwf	6
  6231  0F39  0187               	clrf	7
  6232  0F3A  3501               	lslf	1,w
  6233  0F3B  3E3E               	addlw	(low (_H7826_Gain| (0+256)))& (0+255)
  6234  0F3C  0086               	movwf	6
  6235  0F3D  3001               	movlw	1	; select bank2/3
  6236  0F3E  0087               	movwf	7
  6237  0F3F  3F40               	moviw [0]fsr1
  6238  0F40  00C8               	movwf	low ((?_printf| 0+2))
  6239  0F41  3F41               	moviw [1]fsr1
  6240  0F42  2F5A               	goto	L7
  6241  0F43                     l4300:	
  6242                           
  6243                           ;User_Interface.c: 109: else if(data->DeviceNum==1)
  6244  0F43  0020               	movlb	0	; select bank0
  6245  0F44  0867               	movf	Show_PMT_Config@data,w
  6246  0F45  3E02               	addlw	2
  6247  0F46  0086               	movwf	6
  6248  0F47  0187               	clrf	7
  6249  0F48  0301               	decf	1,w
  6250  0F49  1D03               	btfss	3,2
  6251  0F4A  2F5E               	goto	l604
  6252                           
  6253                           ;User_Interface.c: 110: printf(" Gain: %8s ",H7826_01_Gain[data->GainElements]);
  6254  0F4B  3096               	movlw	low (STR_55| (0+32768))
  6255  0F4C  00C6               	movwf	printf@f
  6256  0F4D  3083               	movlw	high (STR_55| (0+32768))
  6257  0F4E  00C7               	movwf	printf@f+1
  6258  0F4F  0A67               	incf	Show_PMT_Config@data,w
  6259  0F50  0086               	movwf	6
  6260  0F51  0187               	clrf	7
  6261  0F52  3501               	lslf	1,w
  6262  0F53  3E20               	addlw	(low (_H7826_01_Gain| (0+256)))& (0+255)
  6263  0F54  0086               	movwf	6
  6264  0F55  3001               	movlw	1	; select bank2/3
  6265  0F56  0087               	movwf	7
  6266  0F57  3F40               	moviw [0]fsr1
  6267  0F58  00C8               	movwf	low ((?_printf| 0+2))
  6268  0F59  3F41               	moviw [1]fsr1
  6269  0F5A                     L7:	
  6270  0F5A  00C9               	movwf	(low ((?_printf| 0+2))+1)
  6271  0F5B  3180  205A  318E   	fcall	_printf
  6272  0F5E                     l604:	
  6273  0F5E  3000               	movlw	0
  6274  0F5F  318D  25E2  318E   	fcall	_mTouch_Check
  6275  0F62  3A00               	xorlw	0
  6276  0F63  1903               	skipnz
  6277  0F64  2F06               	goto	l4284
  6278                           
  6279                           ;User_Interface.c: 111: }
  6280                           ;User_Interface.c: 112: LCD_DisplayClear();
  6281  0F65  3189  215A         	fcall	_LCD_DisplayClear
  6282  0F67  0008               	return
  6283  0F68                     __end_of_Show_PMT_Config:	
  6284                           
  6285                           	psect	text24
  6286  005A                     __ptext24:	
  6287 ;; *************** function _printf *****************
  6288 ;; Defined at:
  6289 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  f               2   38[BANK0 ] PTR const unsigned char 
  6292 ;;		 -> STR_56(12), STR_55(12), STR_54(17), STR_53(17), 
  6293 ;;		 -> STR_52(20), STR_50(14), STR_49(12), STR_48(12), 
  6294 ;;		 -> STR_47(17), STR_46(17), STR_45(17), STR_44(17), 
  6295 ;;		 -> STR_43(17), STR_42(11), STR_41(20), STR_39(14), 
  6296 ;;		 -> STR_38(17), STR_37(17), STR_6(17), STR_5(10), 
  6297 ;;		 -> STR_4(17), STR_3(16), STR_2(17), STR_1(17), 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  val             4   60[BANK0 ] unsigned long 
  6300 ;;  tmpval          4    0        struct .
  6301 ;;  width           2   67[BANK0 ] int 
  6302 ;;  len             2   58[BANK0 ] unsigned int 
  6303 ;;  cp              2   56[BANK0 ] PTR const unsigned char 
  6304 ;;		 -> STR_57(7), STR_51(5), STR_40(5), STR_36(7), 
  6305 ;;		 -> STR_35(7), STR_34(7), STR_33(7), STR_32(7), 
  6306 ;;		 -> STR_31(7), STR_30(7), STR_29(6), STR_28(6), 
  6307 ;;		 -> STR_27(6), STR_26(6), STR_25(5), STR_24(5), 
  6308 ;;		 -> STR_23(5), STR_22(5), STR_21(8), STR_20(8), 
  6309 ;;		 -> STR_19(8), STR_18(7), STR_17(7), STR_16(7), 
  6310 ;;		 -> STR_15(7), STR_14(7), STR_13(6), STR_12(6), 
  6311 ;;		 -> STR_11(6), STR_10(6), STR_9(5), STR_8(5), 
  6312 ;;		 -> STR_7(5), 
  6313 ;;  prec            2   54[BANK0 ] int 
  6314 ;;  c               1   66[BANK0 ] char 
  6315 ;;  flag            1   65[BANK0 ] unsigned char 
  6316 ;;  ap              1   64[BANK0 ] PTR void [1]
  6317 ;;		 -> ?_printf(2), 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  2   38[BANK0 ] int 
  6320 ;; Registers used:
  6321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6327 ;;      Params:         0      10       0       0       0       0
  6328 ;;      Locals:         0      15       0       0       0       0
  6329 ;;      Temps:          0       6       0       0       0       0
  6330 ;;      Totals:         0      31       0       0       0       0
  6331 ;;Total ram usage:       31 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; Hardware stack levels required when called:    5
  6334 ;; This function calls:
  6335 ;;		___lldiv
  6336 ;;		___llmod
  6337 ;;		___wmul
  6338 ;;		_isdigit
  6339 ;;		_putch
  6340 ;; This function is called by:
  6341 ;;		_main
  6342 ;;		_StartUp_Menu
  6343 ;;		_Ssetting_PMT_Config
  6344 ;;		_Show_PMT_Config
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           
  6349                           ;psect for function _printf
  6350  005A                     _printf:	
  6351                           
  6352                           ;doprnt.c: 466: va_list ap;
  6353                           ;doprnt.c: 499: signed char c;
  6354                           ;doprnt.c: 501: int width;
  6355                           ;doprnt.c: 504: int prec;
  6356                           ;doprnt.c: 508: unsigned char flag;
  6357                           ;doprnt.c: 523: union {
  6358                           ;doprnt.c: 524: unsigned long vd;
  6359                           ;doprnt.c: 525: double integ;
  6360                           ;doprnt.c: 526: } tmpval;
  6361                           ;doprnt.c: 528: unsigned long val;
  6362                           ;doprnt.c: 529: unsigned len;
  6363                           ;doprnt.c: 530: const char * cp;
  6364                           ;doprnt.c: 533: *ap = __va_start();
  6365                           
  6366                           ;incstack = 0
  6367                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6368  005A  3048               	movlw	(low ((?_printf| 0+2)))& (0+255)
  6369  005B  0020               	movlb	0	; select bank0
  6370  005C  00D0               	movwf	??_printf
  6371  005D  0850               	movf	??_printf,w
  6372  005E  00E0               	movwf	printf@ap
  6373  005F                     l3982:	
  6374                           ;doprnt.c: 536: while(c = *f++) {
  6375                           
  6376  005F  0020               	movlb	0	; select bank0
  6377  0060  0847               	movf	printf@f+1,w
  6378  0061  00D1               	movwf	??_printf+1
  6379  0062  0846               	movf	printf@f,w
  6380  0063  00D0               	movwf	??_printf
  6381  0064  0AC6               	incf	printf@f,f
  6382  0065  1903               	skipnz
  6383  0066  0AC7               	incf	printf@f+1,f
  6384  0067  0850               	movf	??_printf,w
  6385  0068  0084               	movwf	4
  6386  0069  0851               	movf	??_printf+1,w
  6387  006A  0085               	movwf	5
  6388  006B  0800               	movf	0,w	;code access
  6389  006C  00D2               	movwf	??_printf+2
  6390  006D  0852               	movf	??_printf+2,w
  6391  006E  00E2               	movwf	printf@c
  6392  006F  0862               	movf	printf@c,w
  6393  0070  1903               	btfsc	3,2
  6394  0071  0008               	return
  6395                           
  6396                           ;doprnt.c: 538: if(c != '%')
  6397  0072  3025               	movlw	37
  6398  0073  0662               	xorwf	printf@c,w
  6399  0074  1903               	btfsc	3,2
  6400  0075  287B               	goto	l3852
  6401                           
  6402                           ;doprnt.c: 540: {
  6403                           ;doprnt.c: 541: (putch(c) );
  6404  0076  0862               	movf	printf@c,w
  6405  0077  3188  20ED  3180   	fcall	_putch
  6406                           
  6407                           ;doprnt.c: 542: continue;
  6408  007A  285F               	goto	l3982
  6409  007B                     l3852:	
  6410                           
  6411                           ;doprnt.c: 543: }
  6412                           ;doprnt.c: 546: width = 0;
  6413  007B  0020               	movlb	0	; select bank0
  6414  007C  01E3               	clrf	printf@width
  6415  007D  01E4               	clrf	printf@width+1
  6416                           
  6417                           ;doprnt.c: 548: flag = 0;
  6418  007E  01E1               	clrf	printf@flag
  6419                           
  6420                           ;doprnt.c: 551: switch(*f) {
  6421                           
  6422                           ;doprnt.c: 550: for(;;) {
  6423  007F  2885               	goto	l3858
  6424  0080                     l631:	
  6425                           ;doprnt.c: 579: case '0':
  6426                           
  6427                           
  6428                           ;doprnt.c: 580: flag |= 0x04;
  6429  0080  1561               	bsf	printf@flag,2
  6430                           
  6431                           ;doprnt.c: 581: f++;
  6432  0081  3001               	movlw	1
  6433  0082  07C6               	addwf	printf@f,f
  6434  0083  3000               	movlw	0
  6435  0084  3DC7               	addwfc	printf@f+1,f
  6436  0085                     l3858:	
  6437                           ;doprnt.c: 584: }
  6438                           
  6439                           ;doprnt.c: 582: continue;
  6440                           
  6441  0085  0846               	movf	printf@f,w
  6442  0086  0084               	movwf	4
  6443  0087  0847               	movf	printf@f+1,w
  6444  0088  0085               	movwf	5
  6445  0089  0800               	movf	0,w	;code access
  6446                           
  6447                           ; Switch size 1, requested type "space"
  6448                           ; Number of cases is 1, Range of values is 48 to 48
  6449                           ; switch strategies available:
  6450                           ; Name         Instructions Cycles
  6451                           ; simple_byte            4     3 (average)
  6452                           ; direct_byte           11     9 (fixed)
  6453                           ; jumptable            263     9 (fixed)
  6454                           ;	Chosen strategy is simple_byte
  6455  008A  3A30               	xorlw	48	; case 48
  6456  008B  1903               	skipnz
  6457  008C  2880               	goto	l631
  6458  008D  288E               	goto	l3860
  6459  008E                     l3860:	
  6460                           ;doprnt.c: 586: }
  6461                           
  6462                           ;doprnt.c: 585: break;
  6463                           
  6464                           
  6465                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6466  008E  0846               	movf	printf@f,w
  6467  008F  0084               	movwf	4
  6468  0090  0847               	movf	printf@f+1,w
  6469  0091  0085               	movwf	5
  6470  0092  0800               	movf	0,w	;code access
  6471  0093  3189  213B  3180   	fcall	_isdigit
  6472  0096  1C03               	btfss	3,0
  6473  0097  2927               	goto	l3904
  6474                           
  6475                           ;doprnt.c: 598: width = 0;
  6476  0098  0020               	movlb	0	; select bank0
  6477  0099  01E3               	clrf	printf@width
  6478  009A  01E4               	clrf	printf@width+1
  6479  009B                     l3864:	
  6480                           ;doprnt.c: 599: do {
  6481                           
  6482                           
  6483                           ;doprnt.c: 600: width *= 10;
  6484  009B  300A               	movlw	10
  6485  009C  0020               	movlb	0	; select bank0
  6486  009D  00A0               	movwf	___wmul@multiplier
  6487  009E  3000               	movlw	0
  6488  009F  00A1               	movwf	___wmul@multiplier+1
  6489  00A0  0864               	movf	printf@width+1,w
  6490  00A1  00A3               	movwf	___wmul@multiplicand+1
  6491  00A2  0863               	movf	printf@width,w
  6492  00A3  00A2               	movwf	___wmul@multiplicand
  6493  00A4  318A  226C  3180   	fcall	___wmul
  6494  00A7  0020               	movlb	0	; select bank0
  6495  00A8  0821               	movf	?___wmul+1,w
  6496  00A9  00E4               	movwf	printf@width+1
  6497  00AA  0820               	movf	?___wmul,w
  6498  00AB  00E3               	movwf	printf@width
  6499                           
  6500                           ;doprnt.c: 601: width += *f++ - '0';
  6501  00AC  0846               	movf	printf@f,w
  6502  00AD  0084               	movwf	4
  6503  00AE  0847               	movf	printf@f+1,w
  6504  00AF  0085               	movwf	5
  6505  00B0  0800               	movf	0,w	;code access
  6506  00B1  3ED0               	addlw	208
  6507  00B2  00D0               	movwf	??_printf
  6508  00B3  30FF               	movlw	255
  6509  00B4  1803               	skipnc
  6510  00B5  3000               	movlw	0
  6511  00B6  00D1               	movwf	??_printf+1
  6512  00B7  0850               	movf	??_printf,w
  6513  00B8  07E3               	addwf	printf@width,f
  6514  00B9  0851               	movf	??_printf+1,w
  6515  00BA  3DE4               	addwfc	printf@width+1,f
  6516  00BB  3001               	movlw	1
  6517  00BC  07C6               	addwf	printf@f,f
  6518  00BD  3000               	movlw	0
  6519  00BE  3DC7               	addwfc	printf@f+1,f
  6520                           
  6521                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6522  00BF  0846               	movf	printf@f,w
  6523  00C0  0084               	movwf	4
  6524  00C1  0847               	movf	printf@f+1,w
  6525  00C2  0085               	movwf	5
  6526  00C3  0800               	movf	0,w	;code access
  6527  00C4  3189  213B  3180   	fcall	_isdigit
  6528  00C7  1C03               	btfss	3,0
  6529  00C8  2927               	goto	l3904
  6530  00C9  289B               	goto	l3864
  6531  00CA                     l642:	
  6532                           ;doprnt.c: 641: case 'l':
  6533                           
  6534                           ;doprnt.c: 638: goto alldone;
  6535                           
  6536                           ;doprnt.c: 637: case 0:
  6537                           
  6538                           ;doprnt.c: 635: switch(c = *f++) {
  6539                           
  6540                           ;doprnt.c: 608: }
  6541                           ;doprnt.c: 633: loop:
  6542                           
  6543                           
  6544                           ;doprnt.c: 643: flag |= 0x10;
  6545  00CA  1661               	bsf	printf@flag,4
  6546                           
  6547                           ;doprnt.c: 644: goto loop;
  6548  00CB  2927               	goto	l3904
  6549  00CC                     l3872:	
  6550                           ;doprnt.c: 728: case 's':
  6551                           
  6552                           ;doprnt.c: 698: case 'i':
  6553                           ;doprnt.c: 699: break;
  6554                           
  6555                           ;doprnt.c: 697: case 'd':
  6556                           
  6557                           
  6558                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6559  00CC  0860               	movf	printf@ap,w
  6560  00CD  0086               	movwf	6
  6561  00CE  0187               	clrf	7
  6562  00CF  3F40               	moviw [0]fsr1
  6563  00D0  00D8               	movwf	printf@cp
  6564  00D1  3F41               	moviw [1]fsr1
  6565  00D2  00D9               	movwf	printf@cp+1
  6566  00D3  3002               	movlw	2
  6567  00D4  00D0               	movwf	??_printf
  6568  00D5  0850               	movf	??_printf,w
  6569  00D6  07E0               	addwf	printf@ap,f
  6570                           
  6571                           ;doprnt.c: 740: if(!cp)
  6572  00D7  0858               	movf	printf@cp,w
  6573  00D8  0459               	iorwf	printf@cp+1,w
  6574  00D9  1D03               	btfss	3,2
  6575  00DA  28DF               	goto	l3880
  6576                           
  6577                           ;doprnt.c: 741: cp = "(null)";
  6578  00DB  30DB               	movlw	low (STR_57| (0+32768))
  6579  00DC  00D8               	movwf	printf@cp
  6580  00DD  3083               	movlw	high (STR_57| (0+32768))
  6581  00DE  00D9               	movwf	printf@cp+1
  6582  00DF                     l3880:	
  6583                           
  6584                           ;doprnt.c: 745: len = 0;
  6585  00DF  01DA               	clrf	printf@len
  6586  00E0  01DB               	clrf	printf@len+1
  6587  00E1                     l3884:	
  6588                           ;doprnt.c: 746: while(cp[len])
  6589                           
  6590  00E1  0858               	movf	printf@cp,w
  6591  00E2  075A               	addwf	printf@len,w
  6592  00E3  0084               	movwf	4
  6593  00E4  0859               	movf	printf@cp+1,w
  6594  00E5  3D5B               	addwfc	printf@len+1,w
  6595  00E6  0085               	movwf	5
  6596  00E7  0012               	moviw fsr0++
  6597  00E8  1903               	btfsc	3,2
  6598  00E9  28EF               	goto	l3886
  6599                           
  6600                           ;doprnt.c: 747: len++;
  6601  00EA  3001               	movlw	1
  6602  00EB  07DA               	addwf	printf@len,f
  6603  00EC  3000               	movlw	0
  6604  00ED  3DDB               	addwfc	printf@len+1,f
  6605  00EE  28E1               	goto	l3884
  6606  00EF                     l3886:	
  6607                           
  6608                           ;doprnt.c: 757: if(width > len)
  6609  00EF  0864               	movf	printf@width+1,w
  6610  00F0  025B               	subwf	printf@len+1,w
  6611  00F1  1D03               	skipz
  6612  00F2  28F5               	goto	u3545
  6613  00F3  0863               	movf	printf@width,w
  6614  00F4  025A               	subwf	printf@len,w
  6615  00F5                     u3545:	
  6616  00F5  1803               	skipnc
  6617  00F6  28FC               	goto	l3890
  6618                           
  6619                           ;doprnt.c: 758: width -= len;
  6620  00F7  085A               	movf	printf@len,w
  6621  00F8  02E3               	subwf	printf@width,f
  6622  00F9  085B               	movf	printf@len+1,w
  6623  00FA  3BE4               	subwfb	printf@width+1,f
  6624  00FB  28FE               	goto	l3894
  6625  00FC                     l3890:	
  6626                           
  6627                           ;doprnt.c: 759: else
  6628                           ;doprnt.c: 760: width = 0;
  6629  00FC  01E3               	clrf	printf@width
  6630  00FD  01E4               	clrf	printf@width+1
  6631  00FE                     l3894:	
  6632                           ;doprnt.c: 764: while(width--)
  6633                           
  6634  00FE  30FF               	movlw	255
  6635  00FF  0020               	movlb	0	; select bank0
  6636  0100  07E3               	addwf	printf@width,f
  6637  0101  30FF               	movlw	255
  6638  0102  3DE4               	addwfc	printf@width+1,f
  6639  0103  0A63               	incf	printf@width,w
  6640  0104  1903               	btfsc	3,2
  6641  0105  0A64               	incf	printf@width+1,w
  6642  0106  1903               	btfsc	3,2
  6643  0107  291A               	goto	l3900
  6644                           
  6645                           ;doprnt.c: 765: (putch(' ') );
  6646  0108  3020               	movlw	32
  6647  0109  3188  20ED  3180   	fcall	_putch
  6648  010C  28FE               	goto	l3894
  6649  010D                     l3896:	
  6650                           ;doprnt.c: 767: while(len--)
  6651                           
  6652                           
  6653                           ;doprnt.c: 768: (putch(*cp++) );
  6654  010D  0858               	movf	printf@cp,w
  6655  010E  0084               	movwf	4
  6656  010F  0859               	movf	printf@cp+1,w
  6657  0110  0085               	movwf	5
  6658  0111  0800               	movf	0,w	;code access
  6659  0112  3188  20ED  3180   	fcall	_putch
  6660  0115  3001               	movlw	1
  6661  0116  0020               	movlb	0	; select bank0
  6662  0117  07D8               	addwf	printf@cp,f
  6663  0118  3000               	movlw	0
  6664  0119  3DD9               	addwfc	printf@cp+1,f
  6665  011A                     l3900:	
  6666  011A  3001               	movlw	1
  6667  011B  02DA               	subwf	printf@len,f
  6668  011C  3000               	movlw	0
  6669  011D  3BDB               	subwfb	printf@len+1,f
  6670  011E  0A5A               	incf	printf@len,w
  6671  011F  1D03               	skipz
  6672  0120  290D               	goto	l3896
  6673  0121  0A5B               	incf	printf@len+1,w
  6674  0122  1903               	btfsc	3,2
  6675  0123  285F               	goto	l3982
  6676  0124  290D               	goto	l3896
  6677  0125                     l660:	
  6678                           ;doprnt.c: 817: case 'u':
  6679                           
  6680                           ;doprnt.c: 813: continue;
  6681                           
  6682                           ;doprnt.c: 802: default:
  6683                           
  6684                           ;doprnt.c: 774: continue;
  6685                           
  6686                           
  6687                           ;doprnt.c: 818: flag |= 0x40;
  6688  0125  1761               	bsf	printf@flag,6
  6689                           
  6690                           ;doprnt.c: 822: }
  6691                           
  6692                           ;doprnt.c: 819: break;
  6693  0126  2948               	goto	l645
  6694  0127                     l3904:	
  6695  0127  0020               	movlb	0	; select bank0
  6696  0128  0847               	movf	printf@f+1,w
  6697  0129  00D1               	movwf	??_printf+1
  6698  012A  0846               	movf	printf@f,w
  6699  012B  00D0               	movwf	??_printf
  6700  012C  0AC6               	incf	printf@f,f
  6701  012D  1903               	skipnz
  6702  012E  0AC7               	incf	printf@f+1,f
  6703  012F  0850               	movf	??_printf,w
  6704  0130  0084               	movwf	4
  6705  0131  0851               	movf	??_printf+1,w
  6706  0132  0085               	movwf	5
  6707  0133  0800               	movf	0,w	;code access
  6708  0134  00E2               	movwf	printf@c
  6709                           
  6710                           ; Switch size 1, requested type "space"
  6711                           ; Number of cases is 6, Range of values is 0 to 117
  6712                           ; switch strategies available:
  6713                           ; Name         Instructions Cycles
  6714                           ; simple_byte           19    10 (average)
  6715                           ; direct_byte          242     6 (fixed)
  6716                           ; jumptable            260     6 (fixed)
  6717                           ;	Chosen strategy is simple_byte
  6718  0135  3A00               	xorlw	0	; case 0
  6719  0136  1903               	skipnz
  6720  0137  2A7D               	goto	l688
  6721  0138  3A64               	xorlw	100	; case 100
  6722  0139  1903               	skipnz
  6723  013A  2948               	goto	l645
  6724  013B  3A0D               	xorlw	13	; case 105
  6725  013C  1903               	skipnz
  6726  013D  2948               	goto	l645
  6727  013E  3A05               	xorlw	5	; case 108
  6728  013F  1903               	skipnz
  6729  0140  28CA               	goto	l642
  6730  0141  3A1F               	xorlw	31	; case 115
  6731  0142  1903               	skipnz
  6732  0143  28CC               	goto	l3872
  6733  0144  3A06               	xorlw	6	; case 117
  6734  0145  1903               	skipnz
  6735  0146  2925               	goto	l660
  6736  0147  285F               	goto	l3982
  6737  0148                     l645:	
  6738                           
  6739                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  6740  0148  1B61               	btfsc	printf@flag,6
  6741  0149  297F               	goto	l661
  6742                           
  6743                           ;doprnt.c: 1253: {
  6744                           ;doprnt.c: 1255: if(flag & 0x10)
  6745  014A  1E61               	btfss	printf@flag,4
  6746  014B  2959               	goto	l3912
  6747                           
  6748                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  6749  014C  0860               	movf	printf@ap,w
  6750  014D  0086               	movwf	6
  6751  014E  0187               	clrf	7
  6752  014F  3F40               	moviw [0]fsr1
  6753  0150  00DC               	movwf	printf@val
  6754  0151  3F41               	moviw [1]fsr1
  6755  0152  00DD               	movwf	printf@val+1
  6756  0153  3F42               	moviw [2]fsr1
  6757  0154  00DE               	movwf	printf@val+2
  6758  0155  3F43               	moviw [3]fsr1
  6759  0156  00DF               	movwf	printf@val+3
  6760  0157  3004               	movlw	4
  6761  0158  296A               	goto	L9
  6762  0159                     l3912:	
  6763                           
  6764                           ;doprnt.c: 1257: else
  6765                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  6766  0159  0860               	movf	printf@ap,w
  6767  015A  0086               	movwf	6
  6768  015B  0187               	clrf	7
  6769  015C  3F40               	moviw [0]fsr1
  6770  015D  00D0               	movwf	??_printf
  6771  015E  3F41               	moviw [1]fsr1
  6772  015F  00D1               	movwf	??_printf+1
  6773  0160  0850               	movf	??_printf,w
  6774  0161  00DC               	movwf	printf@val
  6775  0162  0851               	movf	??_printf+1,w
  6776  0163  00DD               	movwf	printf@val+1
  6777  0164  0D89               	rlf	9,f
  6778  0165  3B89               	subwfb	9,f
  6779  0166  0989               	comf	9,f
  6780  0167  00DE               	movwf	printf@val+2
  6781  0168  00DF               	movwf	printf@val+3
  6782  0169  3002               	movlw	2
  6783  016A                     L9:	
  6784  016A  00D0               	movwf	??_printf
  6785  016B  0850               	movf	??_printf,w
  6786  016C  07E0               	addwf	printf@ap,f
  6787                           
  6788                           ;doprnt.c: 1261: if((long)val < 0) {
  6789  016D  1FDF               	btfss	printf@val+3,7
  6790  016E  299F               	goto	l3930
  6791                           
  6792                           ;doprnt.c: 1262: flag |= 0x03;
  6793  016F  3003               	movlw	3
  6794  0170  00D0               	movwf	??_printf
  6795  0171  0850               	movf	??_printf,w
  6796  0172  04E1               	iorwf	printf@flag,f
  6797                           
  6798                           ;doprnt.c: 1263: val = -val;
  6799  0173  09DC               	comf	printf@val,f
  6800  0174  09DD               	comf	printf@val+1,f
  6801  0175  09DE               	comf	printf@val+2,f
  6802  0176  09DF               	comf	printf@val+3,f
  6803  0177  0ADC               	incf	printf@val,f
  6804  0178  1903               	skipnz
  6805  0179  0ADD               	incf	printf@val+1,f
  6806  017A  1903               	skipnz
  6807  017B  0ADE               	incf	printf@val+2,f
  6808  017C  1903               	skipnz
  6809  017D  0ADF               	incf	printf@val+3,f
  6810                           
  6811                           ;doprnt.c: 1264: }
  6812                           ;doprnt.c: 1266: }
  6813  017E  299F               	goto	l3930
  6814  017F                     l661:	
  6815                           
  6816                           ;doprnt.c: 1268: else
  6817                           ;doprnt.c: 1273: {
  6818                           ;doprnt.c: 1281: if(flag & 0x10)
  6819  017F  1E61               	btfss	printf@flag,4
  6820  0180  298E               	goto	l3926
  6821                           
  6822                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  6823  0181  0860               	movf	printf@ap,w
  6824  0182  0086               	movwf	6
  6825  0183  0187               	clrf	7
  6826  0184  3F40               	moviw [0]fsr1
  6827  0185  00DC               	movwf	printf@val
  6828  0186  3F41               	moviw [1]fsr1
  6829  0187  00DD               	movwf	printf@val+1
  6830  0188  3F42               	moviw [2]fsr1
  6831  0189  00DE               	movwf	printf@val+2
  6832  018A  3F43               	moviw [3]fsr1
  6833  018B  00DF               	movwf	printf@val+3
  6834  018C  3004               	movlw	4
  6835  018D  299C               	goto	L10
  6836  018E                     l3926:	
  6837                           
  6838                           ;doprnt.c: 1283: else
  6839                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6840  018E  0860               	movf	printf@ap,w
  6841  018F  0086               	movwf	6
  6842  0190  0187               	clrf	7
  6843  0191  3F40               	moviw [0]fsr1
  6844  0192  00D0               	movwf	??_printf
  6845  0193  3F41               	moviw [1]fsr1
  6846  0194  00D1               	movwf	??_printf+1
  6847  0195  0850               	movf	??_printf,w
  6848  0196  00DC               	movwf	printf@val
  6849  0197  0851               	movf	??_printf+1,w
  6850  0198  00DD               	movwf	printf@val+1
  6851  0199  01DE               	clrf	printf@val+2
  6852  019A  01DF               	clrf	printf@val+3
  6853  019B  3002               	movlw	2
  6854  019C                     L10:	
  6855  019C  00D0               	movwf	??_printf
  6856  019D  0850               	movf	??_printf,w
  6857  019E  07E0               	addwf	printf@ap,f
  6858  019F                     l3930:	
  6859                           
  6860                           ;doprnt.c: 1287: }
  6861                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6862  019F  01E2               	clrf	printf@c
  6863  01A0  0AE2               	incf	printf@c,f
  6864  01A1  300A               	movlw	10
  6865  01A2  0662               	xorwf	printf@c,w
  6866  01A3  1903               	btfsc	3,2
  6867  01A4  29D2               	goto	l3942
  6868  01A5                     l3936:	
  6869                           
  6870                           ;doprnt.c: 1306: if(val < dpowers[c])
  6871  01A5  0862               	movf	printf@c,w
  6872  01A6  00D0               	movwf	??_printf
  6873  01A7  01D1               	clrf	??_printf+1
  6874  01A8  35D0               	lslf	??_printf,f
  6875  01A9  0DD1               	rlf	??_printf+1,f
  6876  01AA  35D0               	lslf	??_printf,f
  6877  01AB  0DD1               	rlf	??_printf+1,f
  6878  01AC  307E               	movlw	low (_dpowers| (0+32768))
  6879  01AD  0750               	addwf	??_printf,w
  6880  01AE  0084               	movwf	4
  6881  01AF  3082               	movlw	high (_dpowers| (0+32768))
  6882  01B0  3D51               	addwfc	??_printf+1,w
  6883  01B1  0085               	movwf	5
  6884  01B2  3F00               	moviw [0]fsr0
  6885  01B3  00D2               	movwf	??_printf+2
  6886  01B4  3F01               	moviw [1]fsr0
  6887  01B5  00D3               	movwf	??_printf+3
  6888  01B6  3F02               	moviw [2]fsr0
  6889  01B7  00D4               	movwf	??_printf+4
  6890  01B8  3F03               	moviw [3]fsr0
  6891  01B9  00D5               	movwf	??_printf+5
  6892  01BA  0855               	movf	??_printf+5,w
  6893  01BB  025F               	subwf	printf@val+3,w
  6894  01BC  1D03               	skipz
  6895  01BD  29C8               	goto	u3625
  6896  01BE  0854               	movf	??_printf+4,w
  6897  01BF  025E               	subwf	printf@val+2,w
  6898  01C0  1D03               	skipz
  6899  01C1  29C8               	goto	u3625
  6900  01C2  0853               	movf	??_printf+3,w
  6901  01C3  025D               	subwf	printf@val+1,w
  6902  01C4  1D03               	skipz
  6903  01C5  29C8               	goto	u3625
  6904  01C6  0852               	movf	??_printf+2,w
  6905  01C7  025C               	subwf	printf@val,w
  6906  01C8                     u3625:	
  6907  01C8  1C03               	btfss	3,0
  6908  01C9  29D2               	goto	l3942
  6909                           
  6910                           ;doprnt.c: 1307: break;
  6911  01CA  3001               	movlw	1
  6912  01CB  00D0               	movwf	??_printf
  6913  01CC  0850               	movf	??_printf,w
  6914  01CD  07E2               	addwf	printf@c,f
  6915  01CE  300A               	movlw	10
  6916  01CF  0662               	xorwf	printf@c,w
  6917  01D0  1D03               	btfss	3,2
  6918  01D1  29A5               	goto	l3936
  6919  01D2                     l3942:	
  6920                           
  6921                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6922  01D2  0863               	movf	printf@width,w
  6923  01D3  0464               	iorwf	printf@width+1,w
  6924  01D4  1903               	btfsc	3,2
  6925  01D5  29DE               	goto	l671
  6926  01D6  0861               	movf	printf@flag,w
  6927  01D7  3903               	andlw	3
  6928  01D8  1903               	btfsc	3,2
  6929  01D9  29DE               	goto	l671
  6930                           
  6931                           ;doprnt.c: 1346: width--;
  6932  01DA  30FF               	movlw	255
  6933  01DB  07E3               	addwf	printf@width,f
  6934  01DC  30FF               	movlw	255
  6935  01DD  3DE4               	addwfc	printf@width+1,f
  6936  01DE                     l671:	
  6937                           
  6938                           ;doprnt.c: 1381: if(width > c)
  6939  01DE  0862               	movf	printf@c,w
  6940  01DF  00D0               	movwf	??_printf
  6941  01E0  01D1               	clrf	??_printf+1
  6942  01E1  1BD0               	btfsc	??_printf,7
  6943  01E2  03D1               	decf	??_printf+1,f
  6944  01E3  0851               	movf	??_printf+1,w
  6945  01E4  3A80               	xorlw	128
  6946  01E5  00D2               	movwf	??_printf+2
  6947  01E6  0864               	movf	printf@width+1,w
  6948  01E7  3A80               	xorlw	128
  6949  01E8  0252               	subwf	??_printf+2,w
  6950  01E9  1D03               	skipz
  6951  01EA  29ED               	goto	u3665
  6952  01EB  0863               	movf	printf@width,w
  6953  01EC  0250               	subwf	??_printf,w
  6954  01ED                     u3665:	
  6955  01ED  1803               	skipnc
  6956  01EE  29FA               	goto	l3950
  6957                           
  6958                           ;doprnt.c: 1382: width -= c;
  6959  01EF  0020               	movlb	0	; select bank0
  6960  01F0  0862               	movf	printf@c,w
  6961  01F1  00D0               	movwf	??_printf
  6962  01F2  01D1               	clrf	??_printf+1
  6963  01F3  1BD0               	btfsc	??_printf,7
  6964  01F4  03D1               	decf	??_printf+1,f
  6965  01F5  0850               	movf	??_printf,w
  6966  01F6  02E3               	subwf	printf@width,f
  6967  01F7  0851               	movf	??_printf+1,w
  6968  01F8  3BE4               	subwfb	printf@width+1,f
  6969  01F9  29FD               	goto	l3952
  6970  01FA                     l3950:	
  6971                           
  6972                           ;doprnt.c: 1383: else
  6973                           ;doprnt.c: 1384: width = 0;
  6974  01FA  0020               	movlb	0	; select bank0
  6975  01FB  01E3               	clrf	printf@width
  6976  01FC  01E4               	clrf	printf@width+1
  6977  01FD                     l3952:	
  6978                           
  6979                           ;doprnt.c: 1387: if(flag & 0x04) {
  6980  01FD  1D61               	btfss	printf@flag,2
  6981  01FE  2A16               	goto	l3964
  6982                           
  6983                           ;doprnt.c: 1392: if(flag & 0x03)
  6984  01FF  0861               	movf	printf@flag,w
  6985  0200  3903               	andlw	3
  6986  0201  1903               	btfsc	3,2
  6987  0202  2A07               	goto	l3958
  6988                           
  6989                           ;doprnt.c: 1393: (putch('-') );
  6990  0203  302D               	movlw	45
  6991  0204  3188  20ED  3180   	fcall	_putch
  6992  0207                     l3958:	
  6993                           
  6994                           ;doprnt.c: 1415: if(width)
  6995  0207  0020               	movlb	0	; select bank0
  6996  0208                     L11:	
  6997  0208  0863               	movf	printf@width,w
  6998  0209  0464               	iorwf	printf@width+1,w
  6999  020A  1903               	btfsc	3,2
  7000  020B  2A2F               	goto	l3974
  7001                           
  7002                           ;doprnt.c: 1417: (putch('0') );
  7003                           
  7004                           ;doprnt.c: 1416: do
  7005  020C  3030               	movlw	48
  7006  020D  3188  20ED  3180   	fcall	_putch
  7007                           
  7008                           ;doprnt.c: 1418: while(--width);
  7009  0210  30FF               	movlw	255
  7010  0211  0020               	movlb	0	; select bank0
  7011  0212  07E3               	addwf	printf@width,f
  7012  0213  30FF               	movlw	255
  7013  0214  3DE4               	addwfc	printf@width+1,f
  7014  0215  2A08               	goto	L11
  7015  0216                     l3964:	
  7016                           ;doprnt.c: 1420: } else
  7017                           
  7018                           
  7019                           ;doprnt.c: 1422: {
  7020                           ;doprnt.c: 1424: if(width
  7021                           ;doprnt.c: 1428: )
  7022  0216  0863               	movf	printf@width,w
  7023  0217  0464               	iorwf	printf@width+1,w
  7024  0218  1903               	btfsc	3,2
  7025  0219  2A27               	goto	l3970
  7026  021A                     l3966:	
  7027                           ;doprnt.c: 1429: do
  7028                           
  7029                           
  7030                           ;doprnt.c: 1430: (putch(' ') );
  7031  021A  3020               	movlw	32
  7032  021B  3188  20ED  3180   	fcall	_putch
  7033                           
  7034                           ;doprnt.c: 1431: while(--width);
  7035  021E  30FF               	movlw	255
  7036  021F  0020               	movlb	0	; select bank0
  7037  0220  07E3               	addwf	printf@width,f
  7038  0221  30FF               	movlw	255
  7039  0222  3DE4               	addwfc	printf@width+1,f
  7040  0223  0863               	movf	printf@width,w
  7041  0224  0464               	iorwf	printf@width+1,w
  7042  0225  1D03               	btfss	3,2
  7043  0226  2A1A               	goto	l3966
  7044  0227                     l3970:	
  7045                           
  7046                           ;doprnt.c: 1438: if(flag & 0x03)
  7047  0227  0861               	movf	printf@flag,w
  7048  0228  3903               	andlw	3
  7049  0229  1903               	btfsc	3,2
  7050  022A  2A2F               	goto	l3974
  7051                           
  7052                           ;doprnt.c: 1439: (putch('-') );
  7053  022B  302D               	movlw	45
  7054  022C  3188  20ED  3180   	fcall	_putch
  7055  022F                     l3974:	
  7056                           
  7057                           ;doprnt.c: 1469: }
  7058                           ;doprnt.c: 1472: prec = c;
  7059  022F  0020               	movlb	0	; select bank0
  7060  0230  0862               	movf	printf@c,w
  7061  0231  00D6               	movwf	printf@prec
  7062  0232  01D7               	clrf	printf@prec+1
  7063  0233  1BD6               	btfsc	printf@prec,7
  7064  0234  03D7               	decf	printf@prec+1,f
  7065  0235                     l3980:	
  7066                           ;doprnt.c: 1474: while(prec--) {
  7067                           
  7068  0235  30FF               	movlw	255
  7069  0236  0020               	movlb	0	; select bank0
  7070  0237  07D6               	addwf	printf@prec,f
  7071  0238  30FF               	movlw	255
  7072  0239  3DD7               	addwfc	printf@prec+1,f
  7073  023A  0A56               	incf	printf@prec,w
  7074  023B  1903               	btfsc	3,2
  7075  023C  0A57               	incf	printf@prec+1,w
  7076  023D  1903               	btfsc	3,2
  7077  023E  285F               	goto	l3982
  7078                           
  7079                           ;doprnt.c: 1478: {
  7080                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7081  023F  3000               	movlw	0
  7082  0240  00BD               	movwf	___llmod@divisor+3
  7083  0241  3000               	movlw	0
  7084  0242  00BC               	movwf	___llmod@divisor+2
  7085  0243  3000               	movlw	0
  7086  0244  00BB               	movwf	___llmod@divisor+1
  7087  0245  300A               	movlw	10
  7088  0246  00BA               	movwf	___llmod@divisor
  7089  0247  0857               	movf	printf@prec+1,w
  7090  0248  0085               	movwf	5
  7091  0249  0856               	movf	printf@prec,w
  7092  024A  0084               	movwf	4
  7093  024B  3584               	lslf	4,f
  7094  024C  0D85               	rlf	5,f
  7095  024D  3584               	lslf	4,f
  7096  024E  0D85               	rlf	5,f
  7097  024F  307E               	movlw	low (_dpowers| (0+32768))
  7098  0250  0784               	addwf	4,f
  7099  0251  3082               	movlw	high (_dpowers| (0+32768))
  7100  0252  3D85               	addwfc	5,f
  7101  0253  3F00               	moviw [0]fsr0
  7102  0254  00AC               	movwf	___lldiv@divisor
  7103  0255  3F01               	moviw [1]fsr0
  7104  0256  00AD               	movwf	___lldiv@divisor+1
  7105  0257  3F02               	moviw [2]fsr0
  7106  0258  00AE               	movwf	___lldiv@divisor+2
  7107  0259  3F03               	moviw [3]fsr0
  7108  025A  00AF               	movwf	___lldiv@divisor+3
  7109  025B  085F               	movf	printf@val+3,w
  7110  025C  00B3               	movwf	___lldiv@dividend+3
  7111  025D  085E               	movf	printf@val+2,w
  7112  025E  00B2               	movwf	___lldiv@dividend+2
  7113  025F  085D               	movf	printf@val+1,w
  7114  0260  00B1               	movwf	___lldiv@dividend+1
  7115  0261  085C               	movf	printf@val,w
  7116  0262  00B0               	movwf	___lldiv@dividend
  7117  0263  318E  262D  3180   	fcall	___lldiv
  7118  0266  0020               	movlb	0	; select bank0
  7119  0267  082F               	movf	?___lldiv+3,w
  7120  0268  00C1               	movwf	___llmod@dividend+3
  7121  0269  082E               	movf	?___lldiv+2,w
  7122  026A  00C0               	movwf	___llmod@dividend+2
  7123  026B  082D               	movf	?___lldiv+1,w
  7124  026C  00BF               	movwf	___llmod@dividend+1
  7125  026D  082C               	movf	?___lldiv,w
  7126  026E  00BE               	movwf	___llmod@dividend
  7127  026F  318D  255B  3180   	fcall	___llmod
  7128  0272  0020               	movlb	0	; select bank0
  7129  0273  083A               	movf	?___llmod,w
  7130  0274  3E30               	addlw	48
  7131  0275  00D0               	movwf	??_printf
  7132  0276  0850               	movf	??_printf,w
  7133  0277  00E2               	movwf	printf@c
  7134                           
  7135                           ;doprnt.c: 1523: }
  7136                           ;doprnt.c: 1524: (putch(c) );
  7137  0278  0862               	movf	printf@c,w
  7138  0279  3188  20ED  3180   	fcall	_putch
  7139  027C  2A35               	goto	l3980
  7140  027D                     l688:	
  7141                           ;doprnt.c: 1540: return 0;
  7142                           ;	Return value of _printf is never used
  7143                           
  7144                           ;doprnt.c: 1525: }
  7145                           ;doprnt.c: 1533: }
  7146                           ;doprnt.c: 1535: alldone:
  7147                           
  7148  027D  0008               	return
  7149  027E                     __end_of_printf:	
  7150                           
  7151                           	psect	text25
  7152  08ED                     __ptext25:	
  7153 ;; *************** function _putch *****************
  7154 ;; Defined at:
  7155 ;;		line 64 in file "LCD.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;  c               1    wreg     unsigned char 
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;  c               1    3[BANK0 ] unsigned char 
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  1    wreg      void 
  7162 ;; Registers used:
  7163 ;;		wreg, status,2, status,0, pclath, cstack
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7169 ;;      Params:         0       0       0       0       0       0
  7170 ;;      Locals:         0       1       0       0       0       0
  7171 ;;      Temps:          0       0       0       0       0       0
  7172 ;;      Totals:         0       1       0       0       0       0
  7173 ;;Total ram usage:        1 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; Hardware stack levels required when called:    4
  7176 ;; This function calls:
  7177 ;;		_LCD_WriteData
  7178 ;; This function is called by:
  7179 ;;		_printf
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           
  7184                           ;psect for function _putch
  7185  08ED                     _putch:	
  7186                           
  7187                           ;incstack = 0
  7188                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  7189                           ;putch@c stored from wreg
  7190  08ED  0020               	movlb	0	; select bank0
  7191  08EE  00A3               	movwf	putch@c
  7192                           
  7193                           ;LCD.c: 66: LATA3 = 1;
  7194  08EF  0022               	movlb	2	; select bank2
  7195  08F0  158C               	bsf	12,3	;volatile
  7196                           
  7197                           ;LCD.c: 67: LCD_WriteData(c);
  7198  08F1  0020               	movlb	0	; select bank0
  7199  08F2  0823               	movf	putch@c,w
  7200  08F3  318C  24E1         	fcall	_LCD_WriteData
  7201  08F5  0008               	return
  7202  08F6                     __end_of_putch:	
  7203                           
  7204                           	psect	text26
  7205  093B                     __ptext26:	
  7206 ;; *************** function _isdigit *****************
  7207 ;; Defined at:
  7208 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/isdigit.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  c               1    wreg     unsigned char 
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;  c               1    1[BANK0 ] unsigned char 
  7213 ;; Return value:  Size  Location     Type
  7214 ;;		None               void
  7215 ;; Registers used:
  7216 ;;		wreg, status,2, status,0
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7222 ;;      Params:         0       0       0       0       0       0
  7223 ;;      Locals:         0       2       0       0       0       0
  7224 ;;      Temps:          0       0       0       0       0       0
  7225 ;;      Totals:         0       2       0       0       0       0
  7226 ;;Total ram usage:        2 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    3
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_printf
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           
  7237                           ;psect for function _isdigit
  7238  093B                     _isdigit:	
  7239                           
  7240                           ;incstack = 0
  7241                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7242                           ;isdigit@c stored from wreg
  7243  093B  0020               	movlb	0	; select bank0
  7244  093C  00A1               	movwf	isdigit@c
  7245  093D  01A0               	clrf	_isdigit$904
  7246  093E  303A               	movlw	58
  7247  093F  0221               	subwf	isdigit@c,w
  7248  0940  1803               	skipnc
  7249  0941  2948               	goto	l3702
  7250  0942  3030               	movlw	48
  7251  0943  0221               	subwf	isdigit@c,w
  7252  0944  1C03               	skipc
  7253  0945  2948               	goto	l3702
  7254  0946  01A0               	clrf	_isdigit$904
  7255  0947  0AA0               	incf	_isdigit$904,f
  7256  0948                     l3702:	
  7257  0948  0C20               	rrf	_isdigit$904,w
  7258  0949  0008               	return
  7259  094A                     __end_of_isdigit:	
  7260                           
  7261                           	psect	text27
  7262  0A6C                     __ptext27:	
  7263 ;; *************** function ___wmul *****************
  7264 ;; Defined at:
  7265 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7268 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;  product         2    4[BANK0 ] unsigned int 
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  2    0[BANK0 ] unsigned int 
  7273 ;; Registers used:
  7274 ;;		wreg, status,2, status,0
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7280 ;;      Params:         0       4       0       0       0       0
  7281 ;;      Locals:         0       2       0       0       0       0
  7282 ;;      Temps:          0       0       0       0       0       0
  7283 ;;      Totals:         0       6       0       0       0       0
  7284 ;;Total ram usage:        6 bytes
  7285 ;; Hardware stack levels used:    1
  7286 ;; Hardware stack levels required when called:    3
  7287 ;; This function calls:
  7288 ;;		Nothing
  7289 ;; This function is called by:
  7290 ;;		_printf
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           
  7295                           ;psect for function ___wmul
  7296  0A6C                     ___wmul:	
  7297                           
  7298                           ;incstack = 0
  7299                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7300  0A6C  0020               	movlb	0	; select bank0
  7301  0A6D  01A4               	clrf	___wmul@product
  7302  0A6E  01A5               	clrf	___wmul@product+1
  7303  0A6F                     l3708:	
  7304  0A6F  1C20               	btfss	___wmul@multiplier,0
  7305  0A70  2A75               	goto	l813
  7306  0A71  0822               	movf	___wmul@multiplicand,w
  7307  0A72  07A4               	addwf	___wmul@product,f
  7308  0A73  0823               	movf	___wmul@multiplicand+1,w
  7309  0A74  3DA5               	addwfc	___wmul@product+1,f
  7310  0A75                     l813:	
  7311  0A75  3001               	movlw	1
  7312  0A76                     u3255:	
  7313  0A76  35A2               	lslf	___wmul@multiplicand,f
  7314  0A77  0DA3               	rlf	___wmul@multiplicand+1,f
  7315  0A78  0B89               	decfsz	9,f
  7316  0A79  2A76               	goto	u3255
  7317  0A7A  3001               	movlw	1
  7318  0A7B                     u3265:	
  7319  0A7B  36A1               	lsrf	___wmul@multiplier+1,f
  7320  0A7C  0CA0               	rrf	___wmul@multiplier,f
  7321  0A7D  0B89               	decfsz	9,f
  7322  0A7E  2A7B               	goto	u3265
  7323  0A7F  0820               	movf	___wmul@multiplier,w
  7324  0A80  0421               	iorwf	___wmul@multiplier+1,w
  7325  0A81  1D03               	btfss	3,2
  7326  0A82  2A6F               	goto	l3708
  7327  0A83  0825               	movf	___wmul@product+1,w
  7328  0A84  00A1               	movwf	?___wmul+1
  7329  0A85  0824               	movf	___wmul@product,w
  7330  0A86  00A0               	movwf	?___wmul
  7331  0A87  0008               	return
  7332  0A88                     __end_of___wmul:	
  7333                           
  7334                           	psect	text28
  7335  0D5B                     __ptext28:	
  7336 ;; *************** function ___llmod *****************
  7337 ;; Defined at:
  7338 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;  divisor         4   26[BANK0 ] unsigned long 
  7341 ;;  dividend        4   30[BANK0 ] unsigned long 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  counter         1   35[BANK0 ] unsigned char 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  4   26[BANK0 ] unsigned long 
  7346 ;; Registers used:
  7347 ;;		wreg, status,2, status,0
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7353 ;;      Params:         0       8       0       0       0       0
  7354 ;;      Locals:         0       1       0       0       0       0
  7355 ;;      Temps:          0       1       0       0       0       0
  7356 ;;      Totals:         0      10       0       0       0       0
  7357 ;;Total ram usage:       10 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:    3
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_printf
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           
  7368                           ;psect for function ___llmod
  7369  0D5B                     ___llmod:	
  7370                           
  7371                           ;incstack = 0
  7372                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7373  0D5B  0020               	movlb	0	; select bank0
  7374  0D5C  083D               	movf	___llmod@divisor+3,w
  7375  0D5D  043C               	iorwf	___llmod@divisor+2,w
  7376  0D5E  043B               	iorwf	___llmod@divisor+1,w
  7377  0D5F  043A               	iorwf	___llmod@divisor,w
  7378  0D60  1903               	skipnz
  7379  0D61  2D95               	goto	l3774
  7380  0D62  01C3               	clrf	___llmod@counter
  7381  0D63  0AC3               	incf	___llmod@counter,f
  7382  0D64                     l3764:	
  7383  0D64  1BBD               	btfsc	___llmod@divisor+3,7
  7384  0D65  2D72               	goto	l3766
  7385  0D66  3001               	movlw	1
  7386  0D67                     u3405:	
  7387  0D67  35BA               	lslf	___llmod@divisor,f
  7388  0D68  0DBB               	rlf	___llmod@divisor+1,f
  7389  0D69  0DBC               	rlf	___llmod@divisor+2,f
  7390  0D6A  0DBD               	rlf	___llmod@divisor+3,f
  7391  0D6B  0B89               	decfsz	9,f
  7392  0D6C  2D67               	goto	u3405
  7393  0D6D  3001               	movlw	1
  7394  0D6E  00C2               	movwf	??___llmod
  7395  0D6F  0842               	movf	??___llmod,w
  7396  0D70  07C3               	addwf	___llmod@counter,f
  7397  0D71  2D64               	goto	l3764
  7398  0D72                     l3766:	
  7399  0D72  083D               	movf	___llmod@divisor+3,w
  7400  0D73  0241               	subwf	___llmod@dividend+3,w
  7401  0D74  1D03               	skipz
  7402  0D75  2D80               	goto	u3425
  7403  0D76  083C               	movf	___llmod@divisor+2,w
  7404  0D77  0240               	subwf	___llmod@dividend+2,w
  7405  0D78  1D03               	skipz
  7406  0D79  2D80               	goto	u3425
  7407  0D7A  083B               	movf	___llmod@divisor+1,w
  7408  0D7B  023F               	subwf	___llmod@dividend+1,w
  7409  0D7C  1D03               	skipz
  7410  0D7D  2D80               	goto	u3425
  7411  0D7E  083A               	movf	___llmod@divisor,w
  7412  0D7F  023E               	subwf	___llmod@dividend,w
  7413  0D80                     u3425:	
  7414  0D80  1C03               	skipc
  7415  0D81  2D8A               	goto	l3770
  7416  0D82  083A               	movf	___llmod@divisor,w
  7417  0D83  02BE               	subwf	___llmod@dividend,f
  7418  0D84  083B               	movf	___llmod@divisor+1,w
  7419  0D85  3BBF               	subwfb	___llmod@dividend+1,f
  7420  0D86  083C               	movf	___llmod@divisor+2,w
  7421  0D87  3BC0               	subwfb	___llmod@dividend+2,f
  7422  0D88  083D               	movf	___llmod@divisor+3,w
  7423  0D89  3BC1               	subwfb	___llmod@dividend+3,f
  7424  0D8A                     l3770:	
  7425  0D8A  3001               	movlw	1
  7426  0D8B                     u3435:	
  7427  0D8B  36BD               	lsrf	___llmod@divisor+3,f
  7428  0D8C  0CBC               	rrf	___llmod@divisor+2,f
  7429  0D8D  0CBB               	rrf	___llmod@divisor+1,f
  7430  0D8E  0CBA               	rrf	___llmod@divisor,f
  7431  0D8F  0B89               	decfsz	9,f
  7432  0D90  2D8B               	goto	u3435
  7433  0D91  3001               	movlw	1
  7434  0D92  02C3               	subwf	___llmod@counter,f
  7435  0D93  1D03               	btfss	3,2
  7436  0D94  2D72               	goto	l3766
  7437  0D95                     l3774:	
  7438  0D95  0841               	movf	___llmod@dividend+3,w
  7439  0D96  00BD               	movwf	?___llmod+3
  7440  0D97  0840               	movf	___llmod@dividend+2,w
  7441  0D98  00BC               	movwf	?___llmod+2
  7442  0D99  083F               	movf	___llmod@dividend+1,w
  7443  0D9A  00BB               	movwf	?___llmod+1
  7444  0D9B  083E               	movf	___llmod@dividend,w
  7445  0D9C  00BA               	movwf	?___llmod
  7446  0D9D  0008               	return
  7447  0D9E                     __end_of___llmod:	
  7448                           
  7449                           	psect	text29
  7450  0E2D                     __ptext29:	
  7451 ;; *************** function ___lldiv *****************
  7452 ;; Defined at:
  7453 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  divisor         4   12[BANK0 ] unsigned long 
  7456 ;;  dividend        4   16[BANK0 ] unsigned long 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  quotient        4   21[BANK0 ] unsigned long 
  7459 ;;  counter         1   25[BANK0 ] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  4   12[BANK0 ] unsigned long 
  7462 ;; Registers used:
  7463 ;;		wreg, status,2, status,0
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7469 ;;      Params:         0       8       0       0       0       0
  7470 ;;      Locals:         0       5       0       0       0       0
  7471 ;;      Temps:          0       1       0       0       0       0
  7472 ;;      Totals:         0      14       0       0       0       0
  7473 ;;Total ram usage:       14 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    3
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		_Timer1_GetCPS
  7480 ;;		_printf
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           
  7485                           ;psect for function ___lldiv
  7486  0E2D                     ___lldiv:	
  7487                           
  7488                           ;incstack = 0
  7489                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7490  0E2D  3000               	movlw	0
  7491  0E2E  0020               	movlb	0	; select bank0
  7492  0E2F  00B8               	movwf	___lldiv@quotient+3
  7493  0E30  3000               	movlw	0
  7494  0E31  00B7               	movwf	___lldiv@quotient+2
  7495  0E32  3000               	movlw	0
  7496  0E33  00B6               	movwf	___lldiv@quotient+1
  7497  0E34  3000               	movlw	0
  7498  0E35  00B5               	movwf	___lldiv@quotient
  7499  0E36  082F               	movf	___lldiv@divisor+3,w
  7500  0E37  042E               	iorwf	___lldiv@divisor+2,w
  7501  0E38  042D               	iorwf	___lldiv@divisor+1,w
  7502  0E39  042C               	iorwf	___lldiv@divisor,w
  7503  0E3A  1903               	skipnz
  7504  0E3B  2E77               	goto	l3754
  7505  0E3C  01B9               	clrf	___lldiv@counter
  7506  0E3D  0AB9               	incf	___lldiv@counter,f
  7507  0E3E                     l3740:	
  7508  0E3E  1BAF               	btfsc	___lldiv@divisor+3,7
  7509  0E3F  2E4C               	goto	l3742
  7510  0E40  3001               	movlw	1
  7511  0E41                     u3335:	
  7512  0E41  35AC               	lslf	___lldiv@divisor,f
  7513  0E42  0DAD               	rlf	___lldiv@divisor+1,f
  7514  0E43  0DAE               	rlf	___lldiv@divisor+2,f
  7515  0E44  0DAF               	rlf	___lldiv@divisor+3,f
  7516  0E45  0B89               	decfsz	9,f
  7517  0E46  2E41               	goto	u3335
  7518  0E47  3001               	movlw	1
  7519  0E48  00B4               	movwf	??___lldiv
  7520  0E49  0834               	movf	??___lldiv,w
  7521  0E4A  07B9               	addwf	___lldiv@counter,f
  7522  0E4B  2E3E               	goto	l3740
  7523  0E4C                     l3742:	
  7524  0E4C  3001               	movlw	1
  7525  0E4D                     u3355:	
  7526  0E4D  35B5               	lslf	___lldiv@quotient,f
  7527  0E4E  0DB6               	rlf	___lldiv@quotient+1,f
  7528  0E4F  0DB7               	rlf	___lldiv@quotient+2,f
  7529  0E50  0DB8               	rlf	___lldiv@quotient+3,f
  7530  0E51  0B89               	decfsz	9,f
  7531  0E52  2E4D               	goto	u3355
  7532  0E53  082F               	movf	___lldiv@divisor+3,w
  7533  0E54  0233               	subwf	___lldiv@dividend+3,w
  7534  0E55  1D03               	skipz
  7535  0E56  2E61               	goto	u3365
  7536  0E57  082E               	movf	___lldiv@divisor+2,w
  7537  0E58  0232               	subwf	___lldiv@dividend+2,w
  7538  0E59  1D03               	skipz
  7539  0E5A  2E61               	goto	u3365
  7540  0E5B  082D               	movf	___lldiv@divisor+1,w
  7541  0E5C  0231               	subwf	___lldiv@dividend+1,w
  7542  0E5D  1D03               	skipz
  7543  0E5E  2E61               	goto	u3365
  7544  0E5F  082C               	movf	___lldiv@divisor,w
  7545  0E60  0230               	subwf	___lldiv@dividend,w
  7546  0E61                     u3365:	
  7547  0E61  1C03               	skipc
  7548  0E62  2E6C               	goto	l3750
  7549  0E63  082C               	movf	___lldiv@divisor,w
  7550  0E64  02B0               	subwf	___lldiv@dividend,f
  7551  0E65  082D               	movf	___lldiv@divisor+1,w
  7552  0E66  3BB1               	subwfb	___lldiv@dividend+1,f
  7553  0E67  082E               	movf	___lldiv@divisor+2,w
  7554  0E68  3BB2               	subwfb	___lldiv@dividend+2,f
  7555  0E69  082F               	movf	___lldiv@divisor+3,w
  7556  0E6A  3BB3               	subwfb	___lldiv@dividend+3,f
  7557  0E6B  1435               	bsf	___lldiv@quotient,0
  7558  0E6C                     l3750:	
  7559  0E6C  3001               	movlw	1
  7560  0E6D                     u3375:	
  7561  0E6D  36AF               	lsrf	___lldiv@divisor+3,f
  7562  0E6E  0CAE               	rrf	___lldiv@divisor+2,f
  7563  0E6F  0CAD               	rrf	___lldiv@divisor+1,f
  7564  0E70  0CAC               	rrf	___lldiv@divisor,f
  7565  0E71  0B89               	decfsz	9,f
  7566  0E72  2E6D               	goto	u3375
  7567  0E73  3001               	movlw	1
  7568  0E74  02B9               	subwf	___lldiv@counter,f
  7569  0E75  1D03               	btfss	3,2
  7570  0E76  2E4C               	goto	l3742
  7571  0E77                     l3754:	
  7572  0E77  0838               	movf	___lldiv@quotient+3,w
  7573  0E78  00AF               	movwf	?___lldiv+3
  7574  0E79  0837               	movf	___lldiv@quotient+2,w
  7575  0E7A  00AE               	movwf	?___lldiv+2
  7576  0E7B  0836               	movf	___lldiv@quotient+1,w
  7577  0E7C  00AD               	movwf	?___lldiv+1
  7578  0E7D  0835               	movf	___lldiv@quotient,w
  7579  0E7E  00AC               	movwf	?___lldiv
  7580  0E7F  0008               	return
  7581  0E80                     __end_of___lldiv:	
  7582                           
  7583                           	psect	text30
  7584  0DE2                     __ptext30:	
  7585 ;; *************** function _mTouch_Check *****************
  7586 ;; Defined at:
  7587 ;;		line 61 in file "mTouch.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  chan            1    wreg     unsigned char 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  chan            1    7[BANK0 ] unsigned char 
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      unsigned char 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7601 ;;      Params:         0       0       0       0       0       0
  7602 ;;      Locals:         0       1       0       0       0       0
  7603 ;;      Temps:          0       5       0       0       0       0
  7604 ;;      Totals:         0       6       0       0       0       0
  7605 ;;Total ram usage:        6 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:    4
  7608 ;; This function calls:
  7609 ;;		_Buzzer_MiliSecond
  7610 ;; This function is called by:
  7611 ;;		_main
  7612 ;;		_Ssetting_PMT_Config
  7613 ;;		_Show_PMT_Config
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           
  7618                           ;psect for function _mTouch_Check
  7619  0DE2                     _mTouch_Check:	
  7620                           
  7621                           ;incstack = 0
  7622                           ; Regs used in _mTouch_Check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7623                           ;mTouch_Check@chan stored from wreg
  7624  0DE2  0020               	movlb	0	; select bank0
  7625  0DE3  00A7               	movwf	mTouch_Check@chan
  7626                           
  7627                           ;mTouch.c: 63: if(2<chan)return 0;
  7628  0DE4  3003               	movlw	3
  7629  0DE5  0227               	subwf	mTouch_Check@chan,w
  7630  0DE6  1C03               	skipc
  7631  0DE7  2DEA               	goto	l3830
  7632  0DE8  3000               	movlw	0
  7633  0DE9  0008               	return
  7634  0DEA                     l3830:	
  7635                           
  7636                           ;mTouch.c: 65: if(((CPS_PreData[chan]-CPS_Data[chan])>sense_parameter[chan])&&!mTouch_In
      +                          terval[chan])
  7637  0DEA  0827               	movf	mTouch_Check@chan,w
  7638  0DEB  3EAF               	addlw	(low (_CPS_Data| 0))& (0+255)
  7639  0DEC  0086               	movwf	6
  7640  0DED  0187               	clrf	7
  7641  0DEE  0801               	movf	1,w
  7642  0DEF  00A2               	movwf	??_mTouch_Check
  7643  0DF0  01A3               	clrf	??_mTouch_Check+1
  7644  0DF1  09A2               	comf	??_mTouch_Check,f
  7645  0DF2  09A3               	comf	??_mTouch_Check+1,f
  7646  0DF3  0AA2               	incf	??_mTouch_Check,f
  7647  0DF4  1903               	skipnz
  7648  0DF5  0AA3               	incf	??_mTouch_Check+1,f
  7649  0DF6  0827               	movf	mTouch_Check@chan,w
  7650  0DF7  3EAC               	addlw	(low (_CPS_PreData| 0))& (0+255)
  7651  0DF8  0086               	movwf	6
  7652  0DF9  0187               	clrf	7
  7653  0DFA  0801               	movf	1,w
  7654  0DFB  0722               	addwf	??_mTouch_Check,w
  7655  0DFC  00A4               	movwf	??_mTouch_Check+2
  7656  0DFD  0823               	movf	??_mTouch_Check+1,w
  7657  0DFE  1803               	skipnc
  7658  0DFF  0A23               	incf	??_mTouch_Check+1,w
  7659  0E00  00A5               	movwf	??_mTouch_Check+3
  7660  0E01  0827               	movf	mTouch_Check@chan,w
  7661  0E02  3EA6               	addlw	low (_sense_parameter| (0+32768))
  7662  0E03  0084               	movwf	4
  7663  0E04  3082               	movlw	high (_sense_parameter| (0+32768))
  7664  0E05  1803               	skipnc
  7665  0E06  3E01               	addlw	1
  7666  0E07  0085               	movwf	5
  7667  0E08  0800               	movf	0,w	;code access
  7668  0E09  00A6               	movwf	??_mTouch_Check+4
  7669  0E0A  0825               	movf	??_mTouch_Check+3,w
  7670  0E0B  3A80               	xorlw	128
  7671  0E0C  3C80               	sublw	128
  7672  0E0D  1D03               	skipz
  7673  0E0E  2E11               	goto	u3475
  7674  0E0F  0824               	movf	??_mTouch_Check+2,w
  7675  0E10  0226               	subwf	??_mTouch_Check+4,w
  7676  0E11                     u3475:	
  7677  0E11  1803               	skipnc
  7678  0E12  2E2B               	goto	l3842
  7679  0E13  0020               	movlb	0	; select bank0
  7680  0E14  0827               	movf	mTouch_Check@chan,w
  7681  0E15  3E70               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  7682  0E16  0086               	movwf	6
  7683  0E17  0187               	clrf	7
  7684  0E18  0801               	movf	1,w
  7685  0E19  1D03               	btfss	3,2
  7686  0E1A  2E2B               	goto	l3842
  7687                           
  7688                           ;mTouch.c: 66: {
  7689                           ;mTouch.c: 67: mTouch_Interval[chan] = 100;
  7690  0E1B  3064               	movlw	100
  7691  0E1C  00A2               	movwf	??_mTouch_Check
  7692  0E1D  0827               	movf	mTouch_Check@chan,w
  7693  0E1E  3E70               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  7694  0E1F  0086               	movwf	6
  7695  0E20  0187               	clrf	7
  7696  0E21  0822               	movf	??_mTouch_Check,w
  7697  0E22  0081               	movwf	1
  7698                           
  7699                           ;mTouch.c: 68: Buzzer_MiliSecond(100);
  7700  0E23  3064               	movlw	100
  7701  0E24  00A0               	movwf	Buzzer_MiliSecond@time
  7702  0E25  3000               	movlw	0
  7703  0E26  00A1               	movwf	Buzzer_MiliSecond@time+1
  7704  0E27  3188  20F6         	fcall	_Buzzer_MiliSecond
  7705                           
  7706                           ;mTouch.c: 69: return 1;
  7707  0E29  3001               	movlw	1
  7708  0E2A  0008               	return
  7709  0E2B                     l3842:	
  7710                           
  7711                           ;mTouch.c: 70: }
  7712                           ;mTouch.c: 71: return 0;
  7713  0E2B  3000               	movlw	0
  7714  0E2C  0008               	return
  7715  0E2D                     __end_of_mTouch_Check:	
  7716                           
  7717                           	psect	text31
  7718  08F6                     __ptext31:	
  7719 ;; *************** function _Buzzer_MiliSecond *****************
  7720 ;; Defined at:
  7721 ;;		line 38 in file "Buzzer.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;  time            2    0[BANK0 ] unsigned int 
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;		None
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2, status,0
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7735 ;;      Params:         0       2       0       0       0       0
  7736 ;;      Locals:         0       0       0       0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0
  7738 ;;      Totals:         0       2       0       0       0       0
  7739 ;;Total ram usage:        2 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    3
  7742 ;; This function calls:
  7743 ;;		Nothing
  7744 ;; This function is called by:
  7745 ;;		_mTouch_Check
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           
  7750                           ;psect for function _Buzzer_MiliSecond
  7751  08F6                     _Buzzer_MiliSecond:	
  7752                           
  7753                           ;Buzzer.c: 40: if(count==0)
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  7757  08F6  0873               	movf	_count,w
  7758  08F7  0474               	iorwf	_count+1,w
  7759  08F8  1D03               	btfss	3,2
  7760  08F9  0008               	return
  7761                           
  7762                           ;Buzzer.c: 41: count = time;
  7763  08FA  0020               	movlb	0	; select bank0
  7764  08FB  0821               	movf	Buzzer_MiliSecond@time+1,w
  7765  08FC  00F4               	movwf	_count+1
  7766  08FD  0820               	movf	Buzzer_MiliSecond@time,w
  7767  08FE  00F3               	movwf	_count
  7768  08FF  0008               	return
  7769  0900                     __end_of_Buzzer_MiliSecond:	
  7770                           
  7771                           	psect	text32
  7772  09EB                     __ptext32:	
  7773 ;; *************** function _LCD_CursorPosition *****************
  7774 ;; Defined at:
  7775 ;;		line 95 in file "LCD.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  tx              1    wreg     unsigned char 
  7778 ;;  ty              1    3[BANK0 ] unsigned char 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  tx              1    5[BANK0 ] unsigned char 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  1    wreg      void 
  7783 ;; Registers used:
  7784 ;;		wreg, status,2, status,0, pclath, cstack
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7790 ;;      Params:         0       1       0       0       0       0
  7791 ;;      Locals:         0       1       0       0       0       0
  7792 ;;      Temps:          0       1       0       0       0       0
  7793 ;;      Totals:         0       3       0       0       0       0
  7794 ;;Total ram usage:        3 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; Hardware stack levels required when called:    4
  7797 ;; This function calls:
  7798 ;;		_LCD_WriteData
  7799 ;; This function is called by:
  7800 ;;		_main
  7801 ;;		_StartUp_Menu
  7802 ;;		_Ssetting_PMT_Config
  7803 ;;		_Show_PMT_Config
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           
  7808                           ;psect for function _LCD_CursorPosition
  7809  09EB                     _LCD_CursorPosition:	
  7810                           
  7811                           ;incstack = 0
  7812                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  7813                           ;LCD_CursorPosition@tx stored from wreg
  7814  09EB  0020               	movlb	0	; select bank0
  7815  09EC  00A5               	movwf	LCD_CursorPosition@tx
  7816                           
  7817                           ;LCD.c: 97: LATA3 = 0;
  7818  09ED  0022               	movlb	2	; select bank2
  7819  09EE  118C               	bcf	12,3	;volatile
  7820                           
  7821                           ;LCD.c: 98: LCD_WriteData(0x80|tx|(0x40*ty));
  7822  09EF  0020               	movlb	0	; select bank0
  7823  09F0  0823               	movf	LCD_CursorPosition@ty,w
  7824  09F1  00A4               	movwf	??_LCD_CursorPosition
  7825  09F2  3005               	movlw	5
  7826  09F3                     u3455:	
  7827  09F3  35A4               	lslf	??_LCD_CursorPosition,f
  7828  09F4  3EFF               	addlw	-1
  7829  09F5  1D03               	skipz
  7830  09F6  29F3               	goto	u3455
  7831  09F7  3524               	lslf	??_LCD_CursorPosition,w
  7832  09F8  0425               	iorwf	LCD_CursorPosition@tx,w
  7833  09F9  3880               	iorlw	-128
  7834  09FA  318C  24E1  3189   	fcall	_LCD_WriteData
  7835                           
  7836                           ;LCD.c: 99: _delay((unsigned long)((40)*(32000000/4000000.0)));
  7837  09FD  306A               	movlw	106
  7838  09FE                     u4107:	
  7839  09FE  0B89               	decfsz	9,f
  7840  09FF  29FE               	goto	u4107
  7841  0A00  3200               	nop2
  7842  0A01  0008               	return
  7843  0A02                     __end_of_LCD_CursorPosition:	
  7844                           
  7845                           	psect	text33
  7846  096A                     __ptext33:	
  7847 ;; *************** function _LCD_CursorHome *****************
  7848 ;; Defined at:
  7849 ;;		line 84 in file "LCD.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;		None
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  1    wreg      void 
  7856 ;; Registers used:
  7857 ;;		wreg, status,2, status,0, pclath, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7863 ;;      Params:         0       0       0       0       0       0
  7864 ;;      Locals:         0       0       0       0       0       0
  7865 ;;      Temps:          0       1       0       0       0       0
  7866 ;;      Totals:         0       1       0       0       0       0
  7867 ;;Total ram usage:        1 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:    4
  7870 ;; This function calls:
  7871 ;;		_LCD_WriteData
  7872 ;; This function is called by:
  7873 ;;		_StartUp_Menu
  7874 ;;		_Ssetting_PMT_Config
  7875 ;;		_Show_PMT_Config
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           
  7880                           ;psect for function _LCD_CursorHome
  7881  096A                     _LCD_CursorHome:	
  7882                           
  7883                           ;LCD.c: 86: LATA3 = 0;
  7884                           
  7885                           ;incstack = 0
  7886                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  7887  096A  0022               	movlb	2	; select bank2
  7888  096B  118C               	bcf	12,3	;volatile
  7889                           
  7890                           ;LCD.c: 87: LCD_WriteData(0x02);
  7891  096C  3002               	movlw	2
  7892  096D  318C  24E1  3189   	fcall	_LCD_WriteData
  7893                           
  7894                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  7895  0970  3015               	movlw	21
  7896  0971  0020               	movlb	0	; select bank0
  7897  0972  00A3               	movwf	??_LCD_CursorHome
  7898  0973  30C6               	movlw	198
  7899  0974                     u4117:	
  7900  0974  0B89               	decfsz	9,f
  7901  0975  2974               	goto	u4117
  7902  0976  0BA3               	decfsz	??_LCD_CursorHome,f
  7903  0977  2974               	goto	u4117
  7904  0978  0000               	nop
  7905  0979  0008               	return
  7906  097A                     __end_of_LCD_CursorHome:	
  7907                           
  7908                           	psect	text34
  7909  078C                     __ptext34:	
  7910 ;; *************** function _LCD_Init *****************
  7911 ;; Defined at:
  7912 ;;		line 28 in file "LCD.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;		None
  7915 ;; Auto vars:     Size  Location     Type
  7916 ;;		None
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  1    wreg      void 
  7919 ;; Registers used:
  7920 ;;		wreg, status,2, status,0, pclath, cstack
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7926 ;;      Params:         0       0       0       0       0       0
  7927 ;;      Locals:         0       0       0       0       0       0
  7928 ;;      Temps:          0       2       0       0       0       0
  7929 ;;      Totals:         0       2       0       0       0       0
  7930 ;;Total ram usage:        2 bytes
  7931 ;; Hardware stack levels used:    1
  7932 ;; Hardware stack levels required when called:    5
  7933 ;; This function calls:
  7934 ;;		_LCD_DisplayClear
  7935 ;;		_LCD_WriteData
  7936 ;; This function is called by:
  7937 ;;		_main
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           
  7942                           ;psect for function _LCD_Init
  7943  078C                     _LCD_Init:	
  7944                           
  7945                           ;LCD.c: 30: LATA3 = 0;
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  7949  078C  0022               	movlb	2	; select bank2
  7950  078D  118C               	bcf	12,3	;volatile
  7951                           
  7952                           ;LCD.c: 31: LATA4 = 0;
  7953  078E  120C               	bcf	12,4	;volatile
  7954                           
  7955                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  7956  078F  3002               	movlw	2
  7957  0790  0020               	movlb	0	; select bank0
  7958  0791  00A5               	movwf	??_LCD_Init+1
  7959  0792  3038               	movlw	56
  7960  0793  00A4               	movwf	??_LCD_Init
  7961  0794  30AD               	movlw	173
  7962  0795                     u4127:	
  7963  0795  0B89               	decfsz	9,f
  7964  0796  2F95               	goto	u4127
  7965  0797  0BA4               	decfsz	??_LCD_Init,f
  7966  0798  2F95               	goto	u4127
  7967  0799  0BA5               	decfsz	??_LCD_Init+1,f
  7968  079A  2F95               	goto	u4127
  7969                           
  7970                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  7971  079B  3003               	movlw	3
  7972  079C  0020               	movlb	0	; select bank0
  7973  079D  008D               	movwf	13	;volatile
  7974                           
  7975                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  7976  079E  0022               	movlb	2	; select bank2
  7977  079F  160C               	bsf	12,4	;volatile
  7978  07A0  3200               	nop2	;2 cycle nop
  7979  07A1  3200               	nop2	;2 cycle nop
  7980  07A2  3200               	nop2	;2 cycle nop
  7981  07A3  3200               	nop2	;2 cycle nop
  7982  07A4  0022               	movlb	2	; select bank2
  7983  07A5  120C               	bcf	12,4	;volatile
  7984  07A6  3200               	nop2	;2 cycle nop
  7985  07A7  3200               	nop2	;2 cycle nop
  7986  07A8  3200               	nop2	;2 cycle nop
  7987  07A9  3200               	nop2	;2 cycle nop
  7988                           
  7989                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  7990  07AA  3034               	movlw	52
  7991  07AB  0020               	movlb	0	; select bank0
  7992  07AC  00A4               	movwf	??_LCD_Init
  7993  07AD  30F1               	movlw	241
  7994  07AE                     u4137:	
  7995  07AE  0B89               	decfsz	9,f
  7996  07AF  2FAE               	goto	u4137
  7997  07B0  0BA4               	decfsz	??_LCD_Init,f
  7998  07B1  2FAE               	goto	u4137
  7999  07B2  3200               	nop2
  8000                           
  8001                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  8002  07B3  0022               	movlb	2	; select bank2
  8003  07B4  160C               	bsf	12,4	;volatile
  8004  07B5  3200               	nop2	;2 cycle nop
  8005  07B6  3200               	nop2	;2 cycle nop
  8006  07B7  3200               	nop2	;2 cycle nop
  8007  07B8  3200               	nop2	;2 cycle nop
  8008  07B9  0022               	movlb	2	; select bank2
  8009  07BA  120C               	bcf	12,4	;volatile
  8010  07BB  3200               	nop2	;2 cycle nop
  8011  07BC  3200               	nop2	;2 cycle nop
  8012  07BD  3200               	nop2	;2 cycle nop
  8013  07BE  3200               	nop2	;2 cycle nop
  8014                           
  8015                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  8016  07BF  3005               	movlw	5
  8017  07C0  0020               	movlb	0	; select bank0
  8018  07C1  00A4               	movwf	??_LCD_Init
  8019  07C2  3026               	movlw	38
  8020  07C3                     u4147:	
  8021  07C3  0B89               	decfsz	9,f
  8022  07C4  2FC3               	goto	u4147
  8023  07C5  0BA4               	decfsz	??_LCD_Init,f
  8024  07C6  2FC3               	goto	u4147
  8025  07C7  0000               	nop
  8026                           
  8027                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  8028  07C8  0022               	movlb	2	; select bank2
  8029  07C9  160C               	bsf	12,4	;volatile
  8030  07CA  3200               	nop2	;2 cycle nop
  8031  07CB  3200               	nop2	;2 cycle nop
  8032  07CC  3200               	nop2	;2 cycle nop
  8033  07CD  3200               	nop2	;2 cycle nop
  8034  07CE  0022               	movlb	2	; select bank2
  8035  07CF  120C               	bcf	12,4	;volatile
  8036  07D0  3200               	nop2	;2 cycle nop
  8037  07D1  3200               	nop2	;2 cycle nop
  8038  07D2  3200               	nop2	;2 cycle nop
  8039  07D3  3200               	nop2	;2 cycle nop
  8040                           
  8041                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  8042  07D4  3005               	movlw	5
  8043  07D5  0020               	movlb	0	; select bank0
  8044  07D6  00A4               	movwf	??_LCD_Init
  8045  07D7  3026               	movlw	38
  8046  07D8                     u4157:	
  8047  07D8  0B89               	decfsz	9,f
  8048  07D9  2FD8               	goto	u4157
  8049  07DA  0BA4               	decfsz	??_LCD_Init,f
  8050  07DB  2FD8               	goto	u4157
  8051  07DC  0000               	nop
  8052                           
  8053                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  8054  07DD  3002               	movlw	2
  8055  07DE  0020               	movlb	0	; select bank0
  8056  07DF  008D               	movwf	13	;volatile
  8057                           
  8058                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  8059  07E0  0022               	movlb	2	; select bank2
  8060  07E1  160C               	bsf	12,4	;volatile
  8061  07E2  3200               	nop2	;2 cycle nop
  8062  07E3  3200               	nop2	;2 cycle nop
  8063  07E4  3200               	nop2	;2 cycle nop
  8064  07E5  3200               	nop2	;2 cycle nop
  8065  07E6  0022               	movlb	2	; select bank2
  8066  07E7  120C               	bcf	12,4	;volatile
  8067  07E8  3200               	nop2	;2 cycle nop
  8068  07E9  3200               	nop2	;2 cycle nop
  8069  07EA  3200               	nop2	;2 cycle nop
  8070  07EB  3200               	nop2	;2 cycle nop
  8071                           
  8072                           ;LCD.c: 44: LCD_WriteData(0x28);
  8073  07EC  3028               	movlw	40
  8074  07ED  318C  24E1  3187   	fcall	_LCD_WriteData
  8075                           
  8076                           ;LCD.c: 45: LCD_WriteData(0x0c);
  8077  07F0  300C               	movlw	12
  8078  07F1  318C  24E1  3187   	fcall	_LCD_WriteData
  8079                           
  8080                           ;LCD.c: 46: LCD_DisplayClear();
  8081  07F4  3189  215A  3187   	fcall	_LCD_DisplayClear
  8082                           
  8083                           ;LCD.c: 47: LCD_WriteData(0x06);
  8084  07F7  3006               	movlw	6
  8085  07F8  318C  24E1         	fcall	_LCD_WriteData
  8086  07FA  0008               	return
  8087  07FB                     __end_of_LCD_Init:	
  8088                           
  8089                           	psect	text35
  8090  095A                     __ptext35:	
  8091 ;; *************** function _LCD_DisplayClear *****************
  8092 ;; Defined at:
  8093 ;;		line 73 in file "LCD.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;		None
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;		None
  8098 ;; Return value:  Size  Location     Type
  8099 ;;                  1    wreg      void 
  8100 ;; Registers used:
  8101 ;;		wreg, status,2, status,0, pclath, cstack
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8107 ;;      Params:         0       0       0       0       0       0
  8108 ;;      Locals:         0       0       0       0       0       0
  8109 ;;      Temps:          0       1       0       0       0       0
  8110 ;;      Totals:         0       1       0       0       0       0
  8111 ;;Total ram usage:        1 bytes
  8112 ;; Hardware stack levels used:    1
  8113 ;; Hardware stack levels required when called:    4
  8114 ;; This function calls:
  8115 ;;		_LCD_WriteData
  8116 ;; This function is called by:
  8117 ;;		_LCD_Init
  8118 ;;		_main
  8119 ;;		_StartUp_Menu
  8120 ;;		_Ssetting_PMT_Config
  8121 ;;		_Show_PMT_Config
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           
  8126                           ;psect for function _LCD_DisplayClear
  8127  095A                     _LCD_DisplayClear:	
  8128                           
  8129                           ;LCD.c: 75: LATA3 = 0;
  8130                           
  8131                           ;incstack = 0
  8132                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  8133  095A  0022               	movlb	2	; select bank2
  8134  095B  118C               	bcf	12,3	;volatile
  8135                           
  8136                           ;LCD.c: 76: LCD_WriteData(0x01);
  8137  095C  3001               	movlw	1
  8138  095D  318C  24E1  3189   	fcall	_LCD_WriteData
  8139                           
  8140                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  8141  0960  3015               	movlw	21
  8142  0961  0020               	movlb	0	; select bank0
  8143  0962  00A3               	movwf	??_LCD_DisplayClear
  8144  0963  30C6               	movlw	198
  8145  0964                     u4167:	
  8146  0964  0B89               	decfsz	9,f
  8147  0965  2964               	goto	u4167
  8148  0966  0BA3               	decfsz	??_LCD_DisplayClear,f
  8149  0967  2964               	goto	u4167
  8150  0968  0000               	nop
  8151  0969  0008               	return
  8152  096A                     __end_of_LCD_DisplayClear:	
  8153                           
  8154                           	psect	text36
  8155  0CE1                     __ptext36:	
  8156 ;; *************** function _LCD_WriteData *****************
  8157 ;; Defined at:
  8158 ;;		line 15 in file "LCD.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;  point           1    wreg     char 
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;  point           1    2[BANK0 ] char 
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, status,2, status,0
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8172 ;;      Params:         0       0       0       0       0       0
  8173 ;;      Locals:         0       1       0       0       0       0
  8174 ;;      Temps:          0       2       0       0       0       0
  8175 ;;      Totals:         0       3       0       0       0       0
  8176 ;;Total ram usage:        3 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:    3
  8179 ;; This function calls:
  8180 ;;		Nothing
  8181 ;; This function is called by:
  8182 ;;		_LCD_Init
  8183 ;;		_putch
  8184 ;;		_LCD_DisplayClear
  8185 ;;		_LCD_CursorHome
  8186 ;;		_LCD_CursorPosition
  8187 ;;		_LCD_Put
  8188 ;;		_LCD_CursorShift
  8189 ;;		_LCD_DispShift
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           
  8194                           ;psect for function _LCD_WriteData
  8195  0CE1                     _LCD_WriteData:	
  8196                           
  8197                           ;incstack = 0
  8198                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  8199                           ;LCD_WriteData@point stored from wreg
  8200  0CE1  0020               	movlb	0	; select bank0
  8201  0CE2  00A2               	movwf	LCD_WriteData@point
  8202                           
  8203                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  8204  0CE3  30D5               	movlw	213
  8205  0CE4                     u4177:	
  8206  0CE4  0B89               	decfsz	9,f
  8207  0CE5  2CE4               	goto	u4177
  8208  0CE6  0000               	nop
  8209                           
  8210                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  8211  0CE7  0020               	movlb	0	; select bank0
  8212  0CE8  0822               	movf	LCD_WriteData@point,w
  8213  0CE9  00A0               	movwf	??_LCD_WriteData
  8214  0CEA  3004               	movlw	4
  8215  0CEB                     u3105:	
  8216  0CEB  1003               	clrc
  8217  0CEC  1BA0               	btfsc	??_LCD_WriteData,7
  8218  0CED  1403               	setc
  8219  0CEE  0CA0               	rrf	??_LCD_WriteData,f
  8220  0CEF  0B89               	decfsz	9,f
  8221  0CF0  2CEB               	goto	u3105
  8222  0CF1  3003               	movlw	3
  8223  0CF2  0520               	andwf	??_LCD_WriteData,w
  8224  0CF3  00A1               	movwf	??_LCD_WriteData+1
  8225  0CF4  0E22               	swapf	LCD_WriteData@point,w
  8226  0CF5  390F               	andlw	15
  8227  0CF6  1989               	btfsc	9,3
  8228  0CF7  38F0               	iorlw	240
  8229  0CF8  390C               	andlw	12
  8230  0CF9  0709               	addwf	9,w
  8231  0CFA  0421               	iorwf	??_LCD_WriteData+1,w
  8232  0CFB  008D               	movwf	13	;volatile
  8233                           
  8234                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  8235  0CFC  0022               	movlb	2	; select bank2
  8236  0CFD  160C               	bsf	12,4	;volatile
  8237  0CFE  3200               	nop2	;2 cycle nop
  8238  0CFF  3200               	nop2	;2 cycle nop
  8239  0D00  3200               	nop2	;2 cycle nop
  8240  0D01  3200               	nop2	;2 cycle nop
  8241  0D02  0022               	movlb	2	; select bank2
  8242  0D03  120C               	bcf	12,4	;volatile
  8243  0D04  3200               	nop2	;2 cycle nop
  8244  0D05  3200               	nop2	;2 cycle nop
  8245  0D06  3200               	nop2	;2 cycle nop
  8246  0D07  3200               	nop2	;2 cycle nop
  8247                           
  8248                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  8249  0D08  3003               	movlw	3
  8250  0D09  0020               	movlb	0	; select bank0
  8251  0D0A  0522               	andwf	LCD_WriteData@point,w
  8252  0D0B  00A0               	movwf	??_LCD_WriteData
  8253  0D0C  0822               	movf	LCD_WriteData@point,w
  8254  0D0D  390C               	andlw	12
  8255  0D0E  0709               	addwf	9,w
  8256  0D0F  0420               	iorwf	??_LCD_WriteData,w
  8257  0D10  008D               	movwf	13	;volatile
  8258                           
  8259                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  8260  0D11  0022               	movlb	2	; select bank2
  8261  0D12  160C               	bsf	12,4	;volatile
  8262  0D13  3200               	nop2	;2 cycle nop
  8263  0D14  3200               	nop2	;2 cycle nop
  8264  0D15  3200               	nop2	;2 cycle nop
  8265  0D16  3200               	nop2	;2 cycle nop
  8266  0D17  0022               	movlb	2	; select bank2
  8267  0D18  120C               	bcf	12,4	;volatile
  8268  0D19  3200               	nop2	;2 cycle nop
  8269  0D1A  3200               	nop2	;2 cycle nop
  8270  0D1B  3200               	nop2	;2 cycle nop
  8271  0D1C  3200               	nop2	;2 cycle nop
  8272  0D1D  0008               	return
  8273  0D1E                     __end_of_LCD_WriteData:	
  8274                           
  8275                           	psect	text37
  8276  0AA6                     __ptext37:	
  8277 ;; *************** function _DAC_Initialize *****************
  8278 ;; Defined at:
  8279 ;;		line 14 in file "MCP4726.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;		None
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;		None
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8293 ;;      Params:         0       0       0       0       0       0
  8294 ;;      Locals:         0       0       0       0       0       0
  8295 ;;      Temps:          0       2       0       0       0       0
  8296 ;;      Totals:         0       2       0       0       0       0
  8297 ;;Total ram usage:        2 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; Hardware stack levels required when called:    6
  8300 ;; This function calls:
  8301 ;;		_I2C_Init
  8302 ;;		_I2C_Transmit
  8303 ;; This function is called by:
  8304 ;;		_main
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           
  8309                           ;psect for function _DAC_Initialize
  8310  0AA6                     _DAC_Initialize:	
  8311                           
  8312                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  8313                           
  8314                           ;incstack = 0
  8315                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8316  0AA6  0020               	movlb	0	; select bank0
  8317  0AA7  01A5               	clrf	I2C_Init@address
  8318  0AA8  01A6               	clrf	I2C_Init@mode
  8319  0AA9  01A7               	clrf	I2C_Init@Speed
  8320  0AAA  3001               	movlw	1
  8321  0AAB  318A  2202  318A   	fcall	_I2C_Init
  8322                           
  8323                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  8324  0AAE  0020               	movlb	0	; select bank0
  8325  0AAF  086F               	movf	_ConfigReg,w
  8326  0AB0  391F               	andlw	-225
  8327  0AB1  3880               	iorlw	128
  8328  0AB2  00EF               	movwf	_ConfigReg
  8329                           
  8330                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  8331  0AB3  106F               	bcf	_ConfigReg,0
  8332                           
  8333                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  8334  0AB4  30F9               	movlw	-7
  8335  0AB5  05EF               	andwf	_ConfigReg,f
  8336                           
  8337                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  8338  0AB6  30E7               	movlw	-25
  8339  0AB7  05EF               	andwf	_ConfigReg,f
  8340                           
  8341                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  8342  0AB8  3060               	movlw	96
  8343  0AB9  00B0               	movwf	??_DAC_Initialize
  8344  0ABA  0830               	movf	??_DAC_Initialize,w
  8345  0ABB  00A8               	movwf	I2C_Transmit@address
  8346  0ABC  306F               	movlw	(low (_ConfigReg| 0))& (0+255)
  8347  0ABD  00B1               	movwf	??_DAC_Initialize+1
  8348  0ABE  0831               	movf	??_DAC_Initialize+1,w
  8349  0ABF  00A9               	movwf	I2C_Transmit@pData
  8350  0AC0  01AA               	clrf	I2C_Transmit@size
  8351  0AC1  0AAA               	incf	I2C_Transmit@size,f
  8352  0AC2  3001               	movlw	1
  8353  0AC3  318A  2235         	fcall	_I2C_Transmit
  8354  0AC5  0008               	return
  8355  0AC6                     __end_of_DAC_Initialize:	
  8356                           
  8357                           	psect	text38
  8358  0A35                     __ptext38:	
  8359 ;; *************** function _I2C_Transmit *****************
  8360 ;; Defined at:
  8361 ;;		line 23 in file "I2C_Common.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  I2Cx            1    wreg     enum E3285
  8364 ;;  address         1    8[BANK0 ] unsigned char 
  8365 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  8366 ;;		 -> VoltageReg(2), ConfigReg(1), 
  8367 ;;  size            1   10[BANK0 ] unsigned char 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  I2Cx            1   14[BANK0 ] enum E3285
  8370 ;;  result          1   15[BANK0 ] char 
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      char 
  8373 ;; Registers used:
  8374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8380 ;;      Params:         0       3       0       0       0       0
  8381 ;;      Locals:         0       2       0       0       0       0
  8382 ;;      Temps:          0       3       0       0       0       0
  8383 ;;      Totals:         0       8       0       0       0       0
  8384 ;;Total ram usage:        8 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:    4
  8387 ;; This function calls:
  8388 ;;		_I2C2_Transmit
  8389 ;; This function is called by:
  8390 ;;		_DAC_Initialize
  8391 ;;		_DAC_WriteVoltage
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           
  8396                           ;psect for function _I2C_Transmit
  8397  0A35                     _I2C_Transmit:	
  8398                           
  8399                           ;incstack = 0
  8400                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8401                           ;I2C_Transmit@I2Cx stored from wreg
  8402  0A35  0020               	movlb	0	; select bank0
  8403  0A36  00AE               	movwf	I2C_Transmit@I2Cx
  8404                           
  8405                           ;I2C_Common.c: 25: int8_t result;
  8406                           ;I2C_Common.c: 27: switch(I2Cx)
  8407  0A37  2A49               	goto	l3648
  8408  0A38                     l3644:	
  8409                           ;I2C_Common.c: 28: {
  8410                           ;I2C_Common.c: 33: case I2C2_MODULE:
  8411                           
  8412                           
  8413                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  8414  0A38  0829               	movf	I2C_Transmit@pData,w
  8415  0A39  00AB               	movwf	??_I2C_Transmit
  8416  0A3A  082B               	movf	??_I2C_Transmit,w
  8417  0A3B  00A0               	movwf	I2C2_Transmit@pData
  8418  0A3C  082A               	movf	I2C_Transmit@size,w
  8419  0A3D  00AC               	movwf	??_I2C_Transmit+1
  8420  0A3E  082C               	movf	??_I2C_Transmit+1,w
  8421  0A3F  00A1               	movwf	I2C2_Transmit@size
  8422  0A40  0828               	movf	I2C_Transmit@address,w
  8423  0A41  318F  2768  318A   	fcall	_I2C2_Transmit
  8424  0A44  0020               	movlb	0	; select bank0
  8425  0A45  00AD               	movwf	??_I2C_Transmit+2
  8426  0A46  082D               	movf	??_I2C_Transmit+2,w
  8427  0A47  00AF               	movwf	I2C_Transmit@result
  8428                           
  8429                           ;I2C_Common.c: 36: }
  8430                           
  8431                           ;I2C_Common.c: 35: break;
  8432  0A48  2A4E               	goto	l3650
  8433  0A49                     l3648:	
  8434  0A49  082E               	movf	I2C_Transmit@I2Cx,w
  8435                           
  8436                           ; Switch size 1, requested type "space"
  8437                           ; Number of cases is 1, Range of values is 1 to 1
  8438                           ; switch strategies available:
  8439                           ; Name         Instructions Cycles
  8440                           ; simple_byte            4     3 (average)
  8441                           ; direct_byte           11     9 (fixed)
  8442                           ; jumptable            263     9 (fixed)
  8443                           ;	Chosen strategy is simple_byte
  8444  0A4A  3A01               	xorlw	1	; case 1
  8445  0A4B  1903               	skipnz
  8446  0A4C  2A38               	goto	l3644
  8447  0A4D  2A4E               	goto	l3650
  8448  0A4E                     l3650:	
  8449                           
  8450                           ;I2C_Common.c: 37: return result;
  8451  0A4E  082F               	movf	I2C_Transmit@result,w
  8452  0A4F  0008               	return
  8453  0A50                     __end_of_I2C_Transmit:	
  8454                           
  8455                           	psect	text39
  8456  0F68                     __ptext39:	
  8457 ;; *************** function _I2C2_Transmit *****************
  8458 ;; Defined at:
  8459 ;;		line 52 in file "I2C2.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;  address         1    wreg     unsigned char 
  8462 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  8463 ;;		 -> VoltageReg(2), ConfigReg(1), 
  8464 ;;  size            1    1[BANK0 ] unsigned char 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;  address         1    4[BANK0 ] unsigned char 
  8467 ;;  i               1    6[BANK0 ] unsigned char 
  8468 ;;  i               1    5[BANK0 ] unsigned char 
  8469 ;;  result          1    7[BANK0 ] char 
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  1    wreg      char 
  8472 ;; Registers used:
  8473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8474 ;; Tracked objects:
  8475 ;;		On entry : 0/0
  8476 ;;		On exit  : 0/0
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8479 ;;      Params:         0       2       0       0       0       0
  8480 ;;      Locals:         0       4       0       0       0       0
  8481 ;;      Temps:          0       2       0       0       0       0
  8482 ;;      Totals:         0       8       0       0       0       0
  8483 ;;Total ram usage:        8 bytes
  8484 ;; Hardware stack levels used:    1
  8485 ;; Hardware stack levels required when called:    3
  8486 ;; This function calls:
  8487 ;;		Nothing
  8488 ;; This function is called by:
  8489 ;;		_I2C_Transmit
  8490 ;; This function uses a non-reentrant model
  8491 ;;
  8492                           
  8493                           
  8494                           ;psect for function _I2C2_Transmit
  8495  0F68                     _I2C2_Transmit:	
  8496                           
  8497                           ;incstack = 0
  8498                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  8499                           ;I2C2_Transmit@address stored from wreg
  8500  0F68  0020               	movlb	0	; select bank0
  8501  0F69  00A4               	movwf	I2C2_Transmit@address
  8502                           
  8503                           ;I2C2.c: 54: int8_t result = 0;
  8504  0F6A  01A7               	clrf	I2C2_Transmit@result
  8505                           
  8506                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  8507  0F6B  2FF4               	goto	l3550
  8508  0F6C                     l3506:	
  8509                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  8510                           
  8511                           ;I2C2.c: 57: {
  8512                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  8513                           
  8514  0F6C  3005               	movlw	5
  8515  0F6D  0024               	movlb	4	; select bank4
  8516  0F6E  051C               	andwf	28,w	;volatile
  8517  0F6F  0020               	movlb	0	; select bank0
  8518  0F70  00A2               	movwf	??_I2C2_Transmit
  8519  0F71  0024               	movlb	4	; select bank4
  8520  0F72  081E               	movf	30,w	;volatile
  8521  0F73  391F               	andlw	31
  8522  0F74  0020               	movlb	0	; select bank0
  8523  0F75  0422               	iorwf	??_I2C2_Transmit,w
  8524  0F76  1D03               	btfss	3,2
  8525  0F77  2F6C               	goto	l3506
  8526                           
  8527                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  8528  0F78  0024               	movlb	4	; select bank4
  8529  0F79  141E               	bsf	30,0	;volatile
  8530  0F7A                     l3508:	
  8531                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  8532                           
  8533  0F7A  3005               	movlw	5
  8534  0F7B  0024               	movlb	4	; select bank4
  8535  0F7C  051C               	andwf	28,w	;volatile
  8536  0F7D  0020               	movlb	0	; select bank0
  8537  0F7E  00A2               	movwf	??_I2C2_Transmit
  8538  0F7F  0024               	movlb	4	; select bank4
  8539  0F80  081E               	movf	30,w	;volatile
  8540  0F81  391F               	andlw	31
  8541  0F82  0020               	movlb	0	; select bank0
  8542  0F83  0422               	iorwf	??_I2C2_Transmit,w
  8543  0F84  1D03               	btfss	3,2
  8544  0F85  2F7A               	goto	l3508
  8545                           
  8546                           ;I2C2.c: 63: SSP2BUF = address << 1;
  8547  0F86  3524               	lslf	I2C2_Transmit@address,w
  8548  0F87  0024               	movlb	4	; select bank4
  8549  0F88  0099               	movwf	25	;volatile
  8550  0F89                     l463:	
  8551                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  8552                           
  8553  0F89  191C               	btfsc	28,2	;volatile
  8554  0F8A  2F89               	goto	l463
  8555                           
  8556                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  8557  0F8B  3000               	movlw	0
  8558  0F8C  1B1E               	btfsc	30,6	;volatile
  8559  0F8D  3001               	movlw	1
  8560  0F8E  0020               	movlb	0	; select bank0
  8561  0F8F  00A7               	movwf	I2C2_Transmit@result
  8562                           
  8563                           ;I2C2.c: 67: if (!result)
  8564  0F90  0827               	movf	I2C2_Transmit@result,w
  8565  0F91  1D03               	btfss	3,2
  8566  0F92  2FC0               	goto	l3532
  8567                           
  8568                           ;I2C2.c: 68: {
  8569                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  8570  0F93  01A5               	clrf	I2C2_Transmit@i
  8571  0F94  2F99               	goto	l3530
  8572  0F95                     l3528:	
  8573                           ;I2C2.c: 79: break;
  8574                           
  8575  0F95  3001               	movlw	1
  8576  0F96  00A2               	movwf	??_I2C2_Transmit
  8577  0F97  0822               	movf	??_I2C2_Transmit,w
  8578  0F98  07A5               	addwf	I2C2_Transmit@i,f
  8579  0F99                     l3530:	
  8580  0F99  0821               	movf	I2C2_Transmit@size,w
  8581  0F9A  0225               	subwf	I2C2_Transmit@i,w
  8582  0F9B  1803               	btfsc	3,0
  8583  0F9C  2FC0               	goto	l3532
  8584  0F9D                     l3518:	
  8585                           ;I2C2.c: 70: {
  8586                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  8587                           
  8588  0F9D  3005               	movlw	5
  8589  0F9E  0024               	movlb	4	; select bank4
  8590  0F9F  051C               	andwf	28,w	;volatile
  8591  0FA0  0020               	movlb	0	; select bank0
  8592  0FA1  00A2               	movwf	??_I2C2_Transmit
  8593  0FA2  0024               	movlb	4	; select bank4
  8594  0FA3  081E               	movf	30,w	;volatile
  8595  0FA4  391F               	andlw	31
  8596  0FA5  0020               	movlb	0	; select bank0
  8597  0FA6  0422               	iorwf	??_I2C2_Transmit,w
  8598  0FA7  1D03               	btfss	3,2
  8599  0FA8  2F9D               	goto	l3518
  8600                           
  8601                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  8602  0FA9  0825               	movf	I2C2_Transmit@i,w
  8603  0FAA  0720               	addwf	I2C2_Transmit@pData,w
  8604  0FAB  00A2               	movwf	??_I2C2_Transmit
  8605  0FAC  0822               	movf	??_I2C2_Transmit,w
  8606  0FAD  0086               	movwf	6
  8607  0FAE  0187               	clrf	7
  8608  0FAF  0801               	movf	1,w
  8609  0FB0  0024               	movlb	4	; select bank4
  8610  0FB1  0099               	movwf	25	;volatile
  8611  0FB2                     l472:	
  8612                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  8613                           
  8614  0FB2  191C               	btfsc	28,2	;volatile
  8615  0FB3  2FB2               	goto	l472
  8616                           
  8617                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  8618  0FB4  3000               	movlw	0
  8619  0FB5  1B1E               	btfsc	30,6	;volatile
  8620  0FB6  3001               	movlw	1
  8621  0FB7  0020               	movlb	0	; select bank0
  8622  0FB8  00A7               	movwf	I2C2_Transmit@result
  8623                           
  8624                           ;I2C2.c: 76: if (result)
  8625  0FB9  0827               	movf	I2C2_Transmit@result,w
  8626  0FBA  1903               	btfsc	3,2
  8627  0FBB  2F95               	goto	l3528
  8628                           
  8629                           ;I2C2.c: 77: {
  8630                           ;I2C2.c: 78: result = 2;
  8631  0FBC  3002               	movlw	2
  8632  0FBD  00A2               	movwf	??_I2C2_Transmit
  8633  0FBE  0822               	movf	??_I2C2_Transmit,w
  8634  0FBF  00A7               	movwf	I2C2_Transmit@result
  8635  0FC0                     l3532:	
  8636                           ;I2C2.c: 80: }
  8637                           ;I2C2.c: 81: }
  8638                           ;I2C2.c: 82: }
  8639                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  8640                           
  8641  0FC0  3005               	movlw	5
  8642  0FC1  0024               	movlb	4	; select bank4
  8643  0FC2  051C               	andwf	28,w	;volatile
  8644  0FC3  0020               	movlb	0	; select bank0
  8645  0FC4  00A2               	movwf	??_I2C2_Transmit
  8646  0FC5  0024               	movlb	4	; select bank4
  8647  0FC6  081E               	movf	30,w	;volatile
  8648  0FC7  391F               	andlw	31
  8649  0FC8  0020               	movlb	0	; select bank0
  8650  0FC9  0422               	iorwf	??_I2C2_Transmit,w
  8651  0FCA  1D03               	btfss	3,2
  8652  0FCB  2FC0               	goto	l3532
  8653                           
  8654                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  8655  0FCC  0024               	movlb	4	; select bank4
  8656  0FCD  151E               	bsf	30,2	;volatile
  8657                           
  8658                           ;I2C2.c: 86: break;
  8659  0FCE  2FFD               	goto	l3552
  8660  0FCF                     l481:	
  8661                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  8662                           
  8663                           
  8664                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  8665  0FCF  0024               	movlb	4	; select bank4
  8666  0FD0  1D9C               	btfss	28,3	;volatile
  8667  0FD1  1E1C               	btfss	28,4	;volatile
  8668  0FD2  2FF1               	goto	l3546
  8669                           
  8670                           ;I2C2.c: 90: {
  8671                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  8672  0FD3  0020               	movlb	0	; select bank0
  8673  0FD4  01A6               	clrf	I2C2_Transmit@i_560
  8674  0FD5                     l3542:	
  8675  0FD5  0821               	movf	I2C2_Transmit@size,w
  8676  0FD6  0226               	subwf	I2C2_Transmit@i_560,w
  8677  0FD7  1803               	btfsc	3,0
  8678  0FD8  2FEC               	goto	l3544
  8679                           
  8680                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  8681  0FD9  0826               	movf	I2C2_Transmit@i_560,w
  8682  0FDA  0720               	addwf	I2C2_Transmit@pData,w
  8683  0FDB  00A2               	movwf	??_I2C2_Transmit
  8684  0FDC  0822               	movf	??_I2C2_Transmit,w
  8685  0FDD  0086               	movwf	6
  8686  0FDE  0187               	clrf	7
  8687  0FDF  0801               	movf	1,w
  8688  0FE0  00A3               	movwf	??_I2C2_Transmit+1
  8689  0FE1  0826               	movf	I2C2_Transmit@i_560,w
  8690  0FE2  3EB2               	addlw	(low (_I2C2_Config| 0))& (0+255)
  8691  0FE3  0086               	movwf	6
  8692  0FE4  0187               	clrf	7
  8693  0FE5  0823               	movf	??_I2C2_Transmit+1,w
  8694  0FE6  0081               	movwf	1
  8695  0FE7  3001               	movlw	1
  8696  0FE8  00A2               	movwf	??_I2C2_Transmit
  8697  0FE9  0822               	movf	??_I2C2_Transmit,w
  8698  0FEA  07A6               	addwf	I2C2_Transmit@i_560,f
  8699  0FEB  2FD5               	goto	l3542
  8700  0FEC                     l3544:	
  8701                           
  8702                           ;I2C2.c: 93: result = size;
  8703  0FEC  0821               	movf	I2C2_Transmit@size,w
  8704  0FED  00A2               	movwf	??_I2C2_Transmit
  8705  0FEE  0822               	movf	??_I2C2_Transmit,w
  8706  0FEF  00A7               	movwf	I2C2_Transmit@result
  8707                           
  8708                           ;I2C2.c: 94: }
  8709  0FF0  2FFD               	goto	l3552
  8710  0FF1                     l3546:	
  8711                           
  8712                           ;I2C2.c: 95: else
  8713                           ;I2C2.c: 96: result = 0;
  8714  0FF1  0020               	movlb	0	; select bank0
  8715  0FF2  01A7               	clrf	I2C2_Transmit@result
  8716                           
  8717                           ;I2C2.c: 98: }
  8718                           
  8719                           ;I2C2.c: 97: break;
  8720  0FF3  2FFD               	goto	l3552
  8721  0FF4                     l3550:	
  8722  0FF4  0021               	movlb	1	; select bank1
  8723  0FF5  0844               	movf	(_I2C2_Config^(0+128)+18),w
  8724                           
  8725                           ; Switch size 1, requested type "space"
  8726                           ; Number of cases is 2, Range of values is 0 to 1
  8727                           ; switch strategies available:
  8728                           ; Name         Instructions Cycles
  8729                           ; simple_byte            7     4 (average)
  8730                           ; direct_byte           10     6 (fixed)
  8731                           ; jumptable            260     6 (fixed)
  8732                           ;	Chosen strategy is simple_byte
  8733  0FF6  3A00               	xorlw	0	; case 0
  8734  0FF7  1903               	skipnz
  8735  0FF8  2F6C               	goto	l3506
  8736  0FF9  3A01               	xorlw	1	; case 1
  8737  0FFA  1903               	skipnz
  8738  0FFB  2FCF               	goto	l481
  8739  0FFC  2FFD               	goto	l3552
  8740  0FFD                     l3552:	
  8741                           
  8742                           ;I2C2.c: 100: return result;
  8743  0FFD  0020               	movlb	0	; select bank0
  8744  0FFE  0827               	movf	I2C2_Transmit@result,w
  8745  0FFF  0008               	return
  8746  1000                     __end_of_I2C2_Transmit:	
  8747                           
  8748                           	psect	text40
  8749  0A02                     __ptext40:	
  8750 ;; *************** function _I2C_Init *****************
  8751 ;; Defined at:
  8752 ;;		line 6 in file "I2C_Common.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;  I2Cx            1    wreg     enum E3285
  8755 ;;  address         1    5[BANK0 ] unsigned char 
  8756 ;;  mode            1    6[BANK0 ] enum E3276
  8757 ;;  Speed           1    7[BANK0 ] enum E3280
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;  I2Cx            1   10[BANK0 ] enum E3285
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8769 ;;      Params:         0       3       0       0       0       0
  8770 ;;      Locals:         0       1       0       0       0       0
  8771 ;;      Temps:          0       2       0       0       0       0
  8772 ;;      Totals:         0       6       0       0       0       0
  8773 ;;Total ram usage:        6 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    5
  8776 ;; This function calls:
  8777 ;;		_I2C2_Setting
  8778 ;; This function is called by:
  8779 ;;		_DAC_Initialize
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783                           
  8784                           ;psect for function _I2C_Init
  8785  0A02                     _I2C_Init:	
  8786                           
  8787                           ;incstack = 0
  8788                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8789                           ;I2C_Init@I2Cx stored from wreg
  8790  0A02  0020               	movlb	0	; select bank0
  8791  0A03  00AA               	movwf	I2C_Init@I2Cx
  8792                           
  8793                           ;I2C_Common.c: 8: switch(I2Cx)
  8794  0A04  2A12               	goto	l3784
  8795  0A05                     l3780:	
  8796                           ;I2C_Common.c: 9: {
  8797                           ;I2C_Common.c: 14: case I2C2_MODULE:
  8798                           
  8799                           
  8800                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  8801  0A05  0826               	movf	I2C_Init@mode,w
  8802  0A06  00A8               	movwf	??_I2C_Init
  8803  0A07  0828               	movf	??_I2C_Init,w
  8804  0A08  00A1               	movwf	I2C2_Setting@mode
  8805  0A09  0827               	movf	I2C_Init@Speed,w
  8806  0A0A  00A9               	movwf	??_I2C_Init+1
  8807  0A0B  0829               	movf	??_I2C_Init+1,w
  8808  0A0C  00A2               	movwf	I2C2_Setting@Speed
  8809  0A0D  0825               	movf	I2C_Init@address,w
  8810  0A0E  318D  259E  318A   	fcall	_I2C2_Setting
  8811                           
  8812                           ;I2C_Common.c: 17: }
  8813                           
  8814                           ;I2C_Common.c: 16: break;
  8815  0A11  2A18               	goto	l54
  8816  0A12                     l3784:	
  8817  0A12  0020               	movlb	0	; select bank0
  8818  0A13  082A               	movf	I2C_Init@I2Cx,w
  8819                           
  8820                           ; Switch size 1, requested type "space"
  8821                           ; Number of cases is 1, Range of values is 1 to 1
  8822                           ; switch strategies available:
  8823                           ; Name         Instructions Cycles
  8824                           ; simple_byte            4     3 (average)
  8825                           ; direct_byte           11     9 (fixed)
  8826                           ; jumptable            263     9 (fixed)
  8827                           ;	Chosen strategy is simple_byte
  8828  0A14  3A01               	xorlw	1	; case 1
  8829  0A15  1903               	skipnz
  8830  0A16  2A05               	goto	l3780
  8831  0A17  2A18               	goto	l54
  8832  0A18                     l54:	
  8833                           
  8834                           ;I2C_Common.c: 19: PEIE = 1;
  8835  0A18  170B               	bsf	11,6	;volatile
  8836                           
  8837                           ;I2C_Common.c: 20: GIE = 1;
  8838  0A19  178B               	bsf	11,7	;volatile
  8839  0A1A  0008               	return
  8840  0A1B                     __end_of_I2C_Init:	
  8841                           
  8842                           	psect	text41
  8843  0D9E                     __ptext41:	
  8844 ;; *************** function _I2C2_Setting *****************
  8845 ;; Defined at:
  8846 ;;		line 15 in file "I2C2.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  address         1    wreg     unsigned char 
  8849 ;;  mode            1    1[BANK0 ] enum E3276
  8850 ;;  Speed           1    2[BANK0 ] enum E3280
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;  address         1    4[BANK0 ] unsigned char 
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8862 ;;      Params:         0       2       0       0       0       0
  8863 ;;      Locals:         0       1       0       0       0       0
  8864 ;;      Temps:          0       1       0       0       0       0
  8865 ;;      Totals:         0       4       0       0       0       0
  8866 ;;Total ram usage:        4 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:    4
  8869 ;; This function calls:
  8870 ;;		_I2C2_PinInit
  8871 ;; This function is called by:
  8872 ;;		_I2C_Init
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           
  8877                           ;psect for function _I2C2_Setting
  8878  0D9E                     _I2C2_Setting:	
  8879                           
  8880                           ;incstack = 0
  8881                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8882                           ;I2C2_Setting@address stored from wreg
  8883  0D9E  0020               	movlb	0	; select bank0
  8884  0D9F  00A4               	movwf	I2C2_Setting@address
  8885                           
  8886                           ;I2C2.c: 17: I2C2_PinInit();
  8887  0DA0  3189  2121  318D   	fcall	_I2C2_PinInit
  8888                           
  8889                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  8890  0DA3  0020               	movlb	0	; select bank0
  8891  0DA4  0821               	movf	I2C2_Setting@mode,w
  8892  0DA5  00A3               	movwf	??_I2C2_Setting
  8893  0DA6  0823               	movf	??_I2C2_Setting,w
  8894  0DA7  0021               	movlb	1	; select bank1
  8895  0DA8  00C4               	movwf	(_I2C2_Config^(0+128)+18)
  8896                           
  8897                           ;I2C2.c: 20: switch(mode)
  8898  0DA9  2DD2               	goto	l3640
  8899  0DAA                     l446:	
  8900                           ;I2C2.c: 21: {
  8901                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  8902                           
  8903                           
  8904                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  8905  0DAA  0024               	movlb	4	; select bank4
  8906  0DAB  159D               	bsf	29,3	;volatile
  8907                           
  8908                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  8909  0DAC  0020               	movlb	0	; select bank0
  8910  0DAD  0822               	movf	I2C2_Setting@Speed,w
  8911  0DAE  1D03               	btfss	3,2
  8912  0DAF  2DB4               	goto	l3618
  8913                           
  8914                           ;I2C2.c: 25: {
  8915                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  8916  0DB0  0024               	movlb	4	; select bank4
  8917  0DB1  179C               	bsf	28,7	;volatile
  8918                           
  8919                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  8920  0DB2  304F               	movlw	79
  8921  0DB3  2DBE               	goto	L12
  8922  0DB4                     l3618:	
  8923                           ;I2C2.c: 28: }
  8924                           
  8925                           
  8926                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  8927  0DB4  0020               	movlb	0	; select bank0
  8928  0DB5  0322               	decf	I2C2_Setting@Speed,w
  8929  0DB6  1D03               	btfss	3,2
  8930  0DB7  2DBF               	goto	l3624
  8931                           
  8932                           ;I2C2.c: 30: {
  8933                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  8934  0DB8  307F               	movlw	127
  8935  0DB9  00A3               	movwf	??_I2C2_Setting
  8936  0DBA  0823               	movf	??_I2C2_Setting,w
  8937  0DBB  0024               	movlb	4	; select bank4
  8938  0DBC  059C               	andwf	28,f	;volatile
  8939                           
  8940                           ;I2C2.c: 32: SSP2ADD = 0x13;
  8941  0DBD  3013               	movlw	19
  8942  0DBE                     L12:	
  8943  0DBE  009A               	movwf	26	;volatile
  8944  0DBF                     l3624:	
  8945                           
  8946                           ;I2C2.c: 33: }
  8947                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  8948  0DBF  0024               	movlb	4	; select bank4
  8949  0DC0  2DD0               	goto	l3636
  8950  0DC1                     l3626:	
  8951                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  8952                           
  8953                           ;I2C2.c: 35: break;
  8954                           
  8955                           
  8956                           ;I2C2.c: 38: SSP2STAT = 0x00;
  8957  0DC1  0024               	movlb	4	; select bank4
  8958  0DC2  019C               	clrf	28	;volatile
  8959                           
  8960                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  8961  0DC3  3006               	movlw	6
  8962  0DC4  0020               	movlb	0	; select bank0
  8963  0DC5  00A3               	movwf	??_I2C2_Setting
  8964  0DC6  0823               	movf	??_I2C2_Setting,w
  8965  0DC7  0024               	movlb	4	; select bank4
  8966  0DC8  049D               	iorwf	29,f	;volatile
  8967                           
  8968                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  8969  0DC9  141E               	bsf	30,0	;volatile
  8970                           
  8971                           ;I2C2.c: 41: SSP2ADD = address << 1;
  8972  0DCA  0020               	movlb	0	; select bank0
  8973  0DCB  3524               	lslf	I2C2_Setting@address,w
  8974  0DCC  0024               	movlb	4	; select bank4
  8975  0DCD  009A               	movwf	26	;volatile
  8976                           
  8977                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  8978  0DCE  30FE               	movlw	254
  8979  0DCF  009B               	movwf	27	;volatile
  8980  0DD0                     l3636:	
  8981                           
  8982                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  8983  0DD0  169D               	bsf	29,5	;volatile
  8984                           
  8985                           ;I2C2.c: 45: }
  8986                           
  8987                           ;I2C2.c: 44: break;
  8988  0DD1  2DDB               	goto	l450
  8989  0DD2                     l3640:	
  8990  0DD2  0020               	movlb	0	; select bank0
  8991  0DD3  0821               	movf	I2C2_Setting@mode,w
  8992                           
  8993                           ; Switch size 1, requested type "space"
  8994                           ; Number of cases is 2, Range of values is 0 to 1
  8995                           ; switch strategies available:
  8996                           ; Name         Instructions Cycles
  8997                           ; simple_byte            7     4 (average)
  8998                           ; direct_byte           10     6 (fixed)
  8999                           ; jumptable            260     6 (fixed)
  9000                           ;	Chosen strategy is simple_byte
  9001  0DD4  3A00               	xorlw	0	; case 0
  9002  0DD5  1903               	skipnz
  9003  0DD6  2DAA               	goto	l446
  9004  0DD7  3A01               	xorlw	1	; case 1
  9005  0DD8  1903               	skipnz
  9006  0DD9  2DC1               	goto	l3626
  9007  0DDA  2DDB               	goto	l450
  9008  0DDB                     l450:	
  9009                           
  9010                           ;I2C2.c: 46: SSP2IE = 1;
  9011  0DDB  0021               	movlb	1	; select bank1
  9012  0DDC  1414               	bsf	20,0	;volatile
  9013                           
  9014                           ;I2C2.c: 47: BCL2IE = 1;
  9015  0DDD  1494               	bsf	20,1	;volatile
  9016                           
  9017                           ;I2C2.c: 48: SSP2IF = 0;
  9018  0DDE  0020               	movlb	0	; select bank0
  9019  0DDF  1014               	bcf	20,0	;volatile
  9020                           
  9021                           ;I2C2.c: 49: BCL2IF = 0;
  9022  0DE0  1094               	bcf	20,1	;volatile
  9023  0DE1  0008               	return
  9024  0DE2                     __end_of_I2C2_Setting:	
  9025                           
  9026                           	psect	text42
  9027  0921                     __ptext42:	
  9028 ;; *************** function _I2C2_PinInit *****************
  9029 ;; Defined at:
  9030 ;;		line 9 in file "I2C2.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;		None
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;		None
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  1    wreg      void 
  9037 ;; Registers used:
  9038 ;;		wreg, status,2, status,0
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9044 ;;      Params:         0       0       0       0       0       0
  9045 ;;      Locals:         0       0       0       0       0       0
  9046 ;;      Temps:          0       1       0       0       0       0
  9047 ;;      Totals:         0       1       0       0       0       0
  9048 ;;Total ram usage:        1 bytes
  9049 ;; Hardware stack levels used:    1
  9050 ;; Hardware stack levels required when called:    3
  9051 ;; This function calls:
  9052 ;;		Nothing
  9053 ;; This function is called by:
  9054 ;;		_I2C2_Setting
  9055 ;; This function uses a non-reentrant model
  9056 ;;
  9057                           
  9058                           
  9059                           ;psect for function _I2C2_PinInit
  9060  0921                     _I2C2_PinInit:	
  9061                           
  9062                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  9063                           
  9064                           ;incstack = 0
  9065                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  9066  0921  3024               	movlw	36
  9067  0922  0020               	movlb	0	; select bank0
  9068  0923  00A0               	movwf	??_I2C2_PinInit
  9069  0924  0820               	movf	??_I2C2_PinInit,w
  9070  0925  0021               	movlb	1	; select bank1
  9071  0926  048D               	iorwf	13,f	;volatile
  9072                           
  9073                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  9074  0927  30DB               	movlw	219
  9075  0928  0020               	movlb	0	; select bank0
  9076  0929  00A0               	movwf	??_I2C2_PinInit
  9077  092A  0820               	movf	??_I2C2_PinInit,w
  9078  092B  0023               	movlb	3	; select bank3
  9079  092C  058D               	andwf	13,f	;volatile
  9080  092D  0008               	return
  9081  092E                     __end_of_I2C2_PinInit:	
  9082                           
  9083                           	psect	text43
  9084  0B2E                     __ptext43:	
  9085 ;; *************** function _Buzzer_Init *****************
  9086 ;; Defined at:
  9087 ;;		line 11 in file "Buzzer.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;		None
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;		None
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  1    wreg      void 
  9094 ;; Registers used:
  9095 ;;		wreg, status,2, status,0
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9101 ;;      Params:         0       0       0       0       0       0
  9102 ;;      Locals:         0       0       0       0       0       0
  9103 ;;      Temps:          0       1       0       0       0       0
  9104 ;;      Totals:         0       1       0       0       0       0
  9105 ;;Total ram usage:        1 bytes
  9106 ;; Hardware stack levels used:    1
  9107 ;; Hardware stack levels required when called:    3
  9108 ;; This function calls:
  9109 ;;		Nothing
  9110 ;; This function is called by:
  9111 ;;		_main
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115                           
  9116                           ;psect for function _Buzzer_Init
  9117  0B2E                     _Buzzer_Init:	
  9118                           
  9119                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  9120                           
  9121                           ;incstack = 0
  9122                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  9123  0B2E  307F               	movlw	127
  9124  0B2F  0020               	movlb	0	; select bank0
  9125  0B30  00A0               	movwf	??_Buzzer_Init
  9126  0B31  0820               	movf	??_Buzzer_Init,w
  9127  0B32  0021               	movlb	1	; select bank1
  9128  0B33  058C               	andwf	12,f	;volatile
  9129                           
  9130                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  9131  0B34  307F               	movlw	127
  9132  0B35  0020               	movlb	0	; select bank0
  9133  0B36  00A0               	movwf	??_Buzzer_Init
  9134  0B37  0820               	movf	??_Buzzer_Init,w
  9135  0B38  0023               	movlb	3	; select bank3
  9136  0B39  058C               	andwf	12,f	;volatile
  9137                           
  9138                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  9139  0B3A  0022               	movlb	2	; select bank2
  9140  0B3B  159D               	bsf	29,3	;volatile
  9141                           
  9142                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  9143  0B3C  0020               	movlb	0	; select bank0
  9144  0B3D  081C               	movf	28,w	;volatile
  9145                           
  9146                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  9147  0B3E  149C               	bsf	28,1	;volatile
  9148                           
  9149                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  9150  0B3F  151C               	bsf	28,2	;volatile
  9151                           
  9152                           ;Buzzer.c: 21: TMR2 = 0x00;
  9153  0B40  019A               	clrf	26	;volatile
  9154                           
  9155                           ;Buzzer.c: 22: PR2 = 0xFF;
  9156  0B41  30FF               	movlw	255
  9157  0B42  009B               	movwf	27	;volatile
  9158                           
  9159                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  9160  0B43  303F               	movlw	63
  9161  0B44  00A0               	movwf	??_Buzzer_Init
  9162  0B45  0820               	movf	??_Buzzer_Init,w
  9163  0B46  0025               	movlb	5	; select bank5
  9164  0B47  059A               	andwf	26,f	;volatile
  9165                           
  9166                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  9167  0B48  300C               	movlw	12
  9168  0B49  0020               	movlb	0	; select bank0
  9169  0B4A  00A0               	movwf	??_Buzzer_Init
  9170  0B4B  0820               	movf	??_Buzzer_Init,w
  9171  0B4C  0025               	movlb	5	; select bank5
  9172  0B4D  049A               	iorwf	26,f	;volatile
  9173                           
  9174                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  9175  0B4E  30F3               	movlw	243
  9176  0B4F  0020               	movlb	0	; select bank0
  9177  0B50  00A0               	movwf	??_Buzzer_Init
  9178  0B51  0820               	movf	??_Buzzer_Init,w
  9179  0B52  0025               	movlb	5	; select bank5
  9180  0B53  059E               	andwf	30,f	;volatile
  9181                           
  9182                           ;Buzzer.c: 28: CCPR2L = 0x00;
  9183  0B54  0198               	clrf	24	;volatile
  9184  0B55  0008               	return
  9185  0B56                     __end_of_Buzzer_Init:	
  9186                           
  9187                           	psect	text44
  9188  097A                     __ptext44:	
  9189 ;; *************** function _Basic_Init *****************
  9190 ;; Defined at:
  9191 ;;		line 141 in file "main.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;		None
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;		None
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  1    wreg      char 
  9198 ;; Registers used:
  9199 ;;		wreg, status,2
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9205 ;;      Params:         0       0       0       0       0       0
  9206 ;;      Locals:         0       0       0       0       0       0
  9207 ;;      Temps:          0       0       0       0       0       0
  9208 ;;      Totals:         0       0       0       0       0       0
  9209 ;;Total ram usage:        0 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:    3
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_main
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           
  9220                           ;psect for function _Basic_Init
  9221  097A                     _Basic_Init:	
  9222                           
  9223                           ;main.c: 143: OSCCON = 0xF0;
  9224                           
  9225                           ;incstack = 0
  9226                           ; Regs used in _Basic_Init: [wreg+status,2]
  9227  097A  30F0               	movlw	240
  9228  097B  0021               	movlb	1	; select bank1
  9229  097C  0099               	movwf	25	;volatile
  9230                           
  9231                           ;main.c: 147: TRISA = 0x00;
  9232  097D  018C               	clrf	12	;volatile
  9233                           
  9234                           ;main.c: 148: ANSELA = 0x00;
  9235  097E  0023               	movlb	3	; select bank3
  9236  097F  018C               	clrf	12	;volatile
  9237                           
  9238                           ;main.c: 150: TRISB = 0x00;
  9239  0980  0021               	movlb	1	; select bank1
  9240  0981  018D               	clrf	13	;volatile
  9241                           
  9242                           ;main.c: 151: ANSELB = 0x00;
  9243  0982  0023               	movlb	3	; select bank3
  9244  0983  018D               	clrf	13	;volatile
  9245                           
  9246                           ;main.c: 153: APFCON0 = 0x00;
  9247  0984  0022               	movlb	2	; select bank2
  9248  0985  019D               	clrf	29	;volatile
  9249                           
  9250                           ;main.c: 154: APFCON1 = 0x00;
  9251  0986  019E               	clrf	30	;volatile
  9252                           
  9253                           ;main.c: 156: PORTA = 0x00;
  9254  0987  0020               	movlb	0	; select bank0
  9255  0988  018C               	clrf	12	;volatile
  9256                           
  9257                           ;main.c: 157: PORTB = 0x00;
  9258  0989  018D               	clrf	13	;volatile
  9259  098A  0008               	return
  9260  098B                     __end_of_Basic_Init:	
  9261                           ;main.c: 159: return 0;
  9262                           ;	Return value of _Basic_Init is never used
  9263                           
  9264                           
  9265                           	psect	intentry
  9266  0004                     __pintentry:	
  9267 ;; *************** function _Handler *****************
  9268 ;; Defined at:
  9269 ;;		line 162 in file "main.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;		None
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;		None
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  1    wreg      void 
  9276 ;; Registers used:
  9277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9283 ;;      Params:         0       0       0       0       0       0
  9284 ;;      Locals:         0       0       0       0       0       0
  9285 ;;      Temps:          1       0       0       0       0       0
  9286 ;;      Totals:         1       0       0       0       0       0
  9287 ;;Total ram usage:        1 bytes
  9288 ;; Hardware stack levels used:    1
  9289 ;; Hardware stack levels required when called:    2
  9290 ;; This function calls:
  9291 ;;		_Buzzer_Count1ms
  9292 ;;		_I2C_CommonInterrupt
  9293 ;;		_Timer1_Count1ms
  9294 ;;		_Timer1_DetectAssignCount
  9295 ;;		_Timer6_CheckFlag
  9296 ;;		_mTouch_IntervalDecrement
  9297 ;;		_mTouch_Read
  9298 ;; This function is called by:
  9299 ;;		Interrupt level 1
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303  0004                     _Handler:	
  9304                           
  9305                           ;incstack = 0
  9306  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9307                           
  9308                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9309  0005  3180               	pagesel	$
  9310  0006  0020               	movlb	0	; select bank0
  9311  0007  087F               	movf	127,w
  9312  0008  00FB               	movwf	??_Handler
  9313                           
  9314                           ;main.c: 164: if(Timer1_DetectAssignCount())
  9315  0009  318A  221B  3180   	fcall	_Timer1_DetectAssignCount
  9316  000C  3A00               	xorlw	0
  9317  000D  1903               	skipnz
  9318  000E  2812               	goto	i1l3476
  9319                           
  9320                           ;main.c: 165: LATA6 = !LATA6;
  9321  000F  3040               	movlw	64
  9322  0010  0022               	movlb	2	; select bank2
  9323  0011  068C               	xorwf	12,f
  9324  0012                     i1l3476:	
  9325                           
  9326                           ;main.c: 167: if(Timer6_CheckFlag())
  9327  0012  3189  2100  3180   	fcall	_Timer6_CheckFlag
  9328  0015  3A00               	xorlw	0
  9329  0016  1903               	skipnz
  9330  0017  2824               	goto	i1l400
  9331                           
  9332                           ;main.c: 168: {
  9333                           ;main.c: 169: mTouch_IntervalDecrement();
  9334  0018  3189  214A  3180   	fcall	_mTouch_IntervalDecrement
  9335                           
  9336                           ;main.c: 170: Timer1_Count1ms();
  9337  001B  318C  246A  3180   	fcall	_Timer1_Count1ms
  9338                           
  9339                           ;main.c: 172: mTouch_Read();
  9340  001E  318B  2308  3180   	fcall	_mTouch_Read
  9341                           
  9342                           ;main.c: 173: Buzzer_Count1ms();
  9343  0021  3189  21D6  3180   	fcall	_Buzzer_Count1ms
  9344  0024                     i1l400:	
  9345                           
  9346                           ;main.c: 174: }
  9347                           ;main.c: 175: I2C_CommonInterrupt();
  9348  0024  3188  20CC         	fcall	_I2C_CommonInterrupt
  9349  0026  087B               	movf	??_Handler,w
  9350  0027  0020               	movlb	0	; select bank0
  9351  0028  00FF               	movwf	127
  9352  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9353  002A  0009               	retfie
  9354  002B                     __end_of_Handler:	
  9355                           
  9356                           	psect	text46
  9357  0B08                     __ptext46:	
  9358 ;; *************** function _mTouch_Read *****************
  9359 ;; Defined at:
  9360 ;;		line 36 in file "mTouch.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;		None
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  1    wreg      void 
  9367 ;; Registers used:
  9368 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9374 ;;      Params:         0       0       0       0       0       0
  9375 ;;      Locals:         0       0       0       0       0       0
  9376 ;;      Temps:          1       0       0       0       0       0
  9377 ;;      Totals:         1       0       0       0       0       0
  9378 ;;Total ram usage:        1 bytes
  9379 ;; Hardware stack levels used:    1
  9380 ;; This function calls:
  9381 ;;		Nothing
  9382 ;; This function is called by:
  9383 ;;		_Handler
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           
  9388                           ;psect for function _mTouch_Read
  9389  0B08                     _mTouch_Read:	
  9390                           
  9391                           ;mTouch.c: 38: static uint8_t channel=0;
  9392                           ;mTouch.c: 40: CPS_PreData[channel] = CPS_Data[channel];
  9393                           
  9394                           ;incstack = 0
  9395                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9396  0B08  0875               	movf	mTouch_Read@channel,w
  9397  0B09  3EAF               	addlw	(low (_CPS_Data| 0))& (0+255)
  9398  0B0A  0086               	movwf	6
  9399  0B0B  0187               	clrf	7
  9400  0B0C  0801               	movf	1,w
  9401  0B0D  00F6               	movwf	??_mTouch_Read
  9402  0B0E  0875               	movf	mTouch_Read@channel,w
  9403  0B0F  3EAC               	addlw	(low (_CPS_PreData| 0))& (0+255)
  9404  0B10  0086               	movwf	6
  9405  0B11  0187               	clrf	7
  9406  0B12  0876               	movf	??_mTouch_Read,w
  9407  0B13  0081               	movwf	1
  9408                           
  9409                           ;mTouch.c: 42: CPSCON0 &= ~(0x01<<7);;
  9410  0B14  307F               	movlw	127
  9411  0B15  00F6               	movwf	??_mTouch_Read
  9412  0B16  0876               	movf	??_mTouch_Read,w
  9413  0B17  0020               	movlb	0	; select bank0
  9414  0B18  059E               	andwf	30,f	;volatile
  9415                           
  9416                           ;mTouch.c: 43: CPS_Data[channel] = TMR0;
  9417  0B19  0815               	movf	21,w	;volatile
  9418  0B1A  00F6               	movwf	??_mTouch_Read
  9419  0B1B  0875               	movf	mTouch_Read@channel,w
  9420  0B1C  3EAF               	addlw	(low (_CPS_Data| 0))& (0+255)
  9421  0B1D  0086               	movwf	6
  9422  0B1E  0187               	clrf	7
  9423  0B1F  0876               	movf	??_mTouch_Read,w
  9424  0B20  0081               	movwf	1
  9425                           
  9426                           ;mTouch.c: 44: TMR0 = 0x00;
  9427  0B21  0195               	clrf	21	;volatile
  9428                           
  9429                           ;mTouch.c: 45: CPSCON0 |= (0x01<<7);;
  9430  0B22  179E               	bsf	30,7	;volatile
  9431                           
  9432                           ;mTouch.c: 47: if(++channel>2)channel = 0;
  9433  0B23  3001               	movlw	1
  9434  0B24  00F6               	movwf	??_mTouch_Read
  9435  0B25  0876               	movf	??_mTouch_Read,w
  9436  0B26  07F5               	addwf	mTouch_Read@channel,f
  9437  0B27  3003               	movlw	3
  9438  0B28  0275               	subwf	mTouch_Read@channel,w
  9439  0B29  1803               	btfsc	3,0
  9440  0B2A  01F5               	clrf	mTouch_Read@channel
  9441                           
  9442                           ;mTouch.c: 48: CPSCON1 = (uint8_t)channel;
  9443  0B2B  0875               	movf	mTouch_Read@channel,w
  9444  0B2C  009F               	movwf	31	;volatile
  9445  0B2D  0008               	return
  9446  0B2E                     __end_of_mTouch_Read:	
  9447                           
  9448                           	psect	text47
  9449  094A                     __ptext47:	
  9450 ;; *************** function _mTouch_IntervalDecrement *****************
  9451 ;; Defined at:
  9452 ;;		line 51 in file "mTouch.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;		None
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;		None
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  1    wreg      void 
  9459 ;; Registers used:
  9460 ;;		wreg, status,2, status,0
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9466 ;;      Params:         0       0       0       0       0       0
  9467 ;;      Locals:         0       0       0       0       0       0
  9468 ;;      Temps:          0       0       0       0       0       0
  9469 ;;      Totals:         0       0       0       0       0       0
  9470 ;;Total ram usage:        0 bytes
  9471 ;; Hardware stack levels used:    1
  9472 ;; This function calls:
  9473 ;;		Nothing
  9474 ;; This function is called by:
  9475 ;;		_Handler
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           
  9480                           ;psect for function _mTouch_IntervalDecrement
  9481  094A                     _mTouch_IntervalDecrement:	
  9482                           
  9483                           ;mTouch.c: 53: if(mTouch_Interval[0]>0)
  9484                           
  9485                           ;incstack = 0
  9486                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  9487  094A  0870               	movf	_mTouch_Interval,w
  9488  094B  1903               	btfsc	3,2
  9489  094C  294F               	goto	i1l272
  9490                           
  9491                           ;mTouch.c: 54: mTouch_Interval[0]--;
  9492  094D  3001               	movlw	1
  9493  094E  02F0               	subwf	_mTouch_Interval,f
  9494  094F                     i1l272:	
  9495                           
  9496                           ;mTouch.c: 55: if(mTouch_Interval[1]>0)
  9497  094F  0871               	movf	_mTouch_Interval+1,w
  9498  0950  1903               	btfsc	3,2
  9499  0951  2954               	goto	i1l273
  9500                           
  9501                           ;mTouch.c: 56: mTouch_Interval[1]--;
  9502  0952  3001               	movlw	1
  9503  0953  02F1               	subwf	_mTouch_Interval+1,f
  9504  0954                     i1l273:	
  9505                           
  9506                           ;mTouch.c: 57: if(mTouch_Interval[2]>0)
  9507  0954  0872               	movf	_mTouch_Interval+2,w
  9508  0955  1903               	btfsc	3,2
  9509  0956  0008               	return
  9510                           
  9511                           ;mTouch.c: 58: mTouch_Interval[2]--;
  9512  0957  3001               	movlw	1
  9513  0958  02F2               	subwf	_mTouch_Interval+2,f
  9514  0959  0008               	return
  9515  095A                     __end_of_mTouch_IntervalDecrement:	
  9516                           
  9517                           	psect	text48
  9518  0900                     __ptext48:	
  9519 ;; *************** function _Timer6_CheckFlag *****************
  9520 ;; Defined at:
  9521 ;;		line 17 in file "Timer6.c"
  9522 ;; Parameters:    Size  Location     Type
  9523 ;;		None
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;		None
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  1    wreg      unsigned char 
  9528 ;; Registers used:
  9529 ;;		wreg
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/0
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9535 ;;      Params:         0       0       0       0       0       0
  9536 ;;      Locals:         0       0       0       0       0       0
  9537 ;;      Temps:          0       0       0       0       0       0
  9538 ;;      Totals:         0       0       0       0       0       0
  9539 ;;Total ram usage:        0 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; This function calls:
  9542 ;;		Nothing
  9543 ;; This function is called by:
  9544 ;;		_Handler
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548                           
  9549                           ;psect for function _Timer6_CheckFlag
  9550  0900                     _Timer6_CheckFlag:	
  9551                           
  9552                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  9553                           
  9554                           ;incstack = 0
  9555                           ; Regs used in _Timer6_CheckFlag: [wreg]
  9556  0900  0021               	movlb	1	; select bank1
  9557  0901  1D93               	btfss	19,3	;volatile
  9558  0902  2909               	goto	i1l1964
  9559  0903  0020               	movlb	0	; select bank0
  9560  0904  1D93               	btfss	19,3	;volatile
  9561  0905  2909               	goto	i1l1964
  9562                           
  9563                           ;Timer6.c: 20: {
  9564                           ;Timer6.c: 21: TMR6IF = 0;
  9565  0906  1193               	bcf	19,3	;volatile
  9566                           
  9567                           ;Timer6.c: 22: return 1;
  9568  0907  3001               	movlw	1
  9569  0908  0008               	return
  9570  0909                     i1l1964:	
  9571                           
  9572                           ;Timer6.c: 23: }
  9573                           ;Timer6.c: 24: return 0;
  9574  0909  3000               	movlw	0
  9575  090A  0008               	return
  9576  090B                     __end_of_Timer6_CheckFlag:	
  9577                           
  9578                           	psect	text49
  9579  0A1B                     __ptext49:	
  9580 ;; *************** function _Timer1_DetectAssignCount *****************
  9581 ;; Defined at:
  9582 ;;		line 105 in file "Timer1.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;		None
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;		None
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  1    wreg      unsigned char 
  9589 ;; Registers used:
  9590 ;;		wreg
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9596 ;;      Params:         0       0       0       0       0       0
  9597 ;;      Locals:         0       0       0       0       0       0
  9598 ;;      Temps:          0       0       0       0       0       0
  9599 ;;      Totals:         0       0       0       0       0       0
  9600 ;;Total ram usage:        0 bytes
  9601 ;; Hardware stack levels used:    1
  9602 ;; This function calls:
  9603 ;;		Nothing
  9604 ;; This function is called by:
  9605 ;;		_Handler
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           
  9610                           ;psect for function _Timer1_DetectAssignCount
  9611  0A1B                     _Timer1_DetectAssignCount:	
  9612                           
  9613                           ;Timer1.c: 107: if(TMR1IF&&TMR1IE)
  9614                           
  9615                           ;incstack = 0
  9616                           ; Regs used in _Timer1_DetectAssignCount: [wreg]
  9617  0A1B  0020               	movlb	0	; select bank0
  9618  0A1C  1C11               	btfss	17,0	;volatile
  9619  0A1D  2A33               	goto	i1l3092
  9620  0A1E  0021               	movlb	1	; select bank1
  9621  0A1F  1C11               	btfss	17,0	;volatile
  9622  0A20  2A33               	goto	i1l3092
  9623                           
  9624                           ;Timer1.c: 108: {
  9625                           ;Timer1.c: 109: cnts.SigmaDeltaCount+= 2UL;
  9626  0A21  3002               	movlw	2
  9627  0A22  07A8               	addwf	_cnts^(0+128),f
  9628  0A23  3000               	movlw	0
  9629  0A24  3DA9               	addwfc	(_cnts+1)^(0+128),f
  9630  0A25  3000               	movlw	0
  9631  0A26  3DAA               	addwfc	(_cnts+2)^(0+128),f
  9632  0A27  3000               	movlw	0
  9633  0A28  3DAB               	addwfc	(_cnts+3)^(0+128),f
  9634                           
  9635                           ;Timer1.c: 111: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF-2UL+1; TMR1ON = 1; };
  9636  0A29  0020               	movlb	0	; select bank0
  9637  0A2A  1018               	bcf	24,0	;volatile
  9638  0A2B  30FF               	movlw	255
  9639  0A2C  0097               	movwf	23	;volatile
  9640  0A2D  30FE               	movlw	254
  9641  0A2E  0096               	movwf	22	;volatile
  9642  0A2F  1418               	bsf	24,0	;volatile
  9643                           
  9644                           ;Timer1.c: 113: TMR1IF = 0;
  9645  0A30  1011               	bcf	17,0	;volatile
  9646                           
  9647                           ;Timer1.c: 115: return 1;
  9648  0A31  3001               	movlw	1
  9649  0A32  0008               	return
  9650  0A33                     i1l3092:	
  9651                           
  9652                           ;Timer1.c: 116: }
  9653                           ;Timer1.c: 117: return 0;
  9654  0A33  3000               	movlw	0
  9655  0A34  0008               	return
  9656  0A35                     __end_of_Timer1_DetectAssignCount:	
  9657                           
  9658                           	psect	text50
  9659  0C6A                     __ptext50:	
  9660 ;; *************** function _Timer1_Count1ms *****************
  9661 ;; Defined at:
  9662 ;;		line 76 in file "Timer1.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;		None
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;		None
  9667 ;; Return value:  Size  Location     Type
  9668 ;;                  1    wreg      void 
  9669 ;; Registers used:
  9670 ;;		wreg, status,2, status,0, pclath, cstack
  9671 ;; Tracked objects:
  9672 ;;		On entry : 0/0
  9673 ;;		On exit  : 0/0
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9676 ;;      Params:         0       0       0       0       0       0
  9677 ;;      Locals:         0       0       0       0       0       0
  9678 ;;      Temps:          1       0       0       0       0       0
  9679 ;;      Totals:         1       0       0       0       0       0
  9680 ;;Total ram usage:        1 bytes
  9681 ;; Hardware stack levels used:    1
  9682 ;; Hardware stack levels required when called:    1
  9683 ;; This function calls:
  9684 ;;		i1_Buzzer_MiliSecond
  9685 ;; This function is called by:
  9686 ;;		_Handler
  9687 ;; This function uses a non-reentrant model
  9688 ;;
  9689                           
  9690                           
  9691                           ;psect for function _Timer1_Count1ms
  9692  0C6A                     _Timer1_Count1ms:	
  9693                           
  9694                           ;Timer1.c: 78: if(TMR1ON==1)
  9695                           
  9696                           ;incstack = 0
  9697                           ; Regs used in _Timer1_Count1ms: [wreg+status,2+status,0+pclath+cstack]
  9698  0C6A  0020               	movlb	0	; select bank0
  9699  0C6B  1C18               	btfss	24,0	;volatile
  9700  0C6C  0008               	return
  9701                           
  9702                           ;Timer1.c: 79: {
  9703                           ;Timer1.c: 80: tcnt.Delta_t++;
  9704  0C6D  3001               	movlw	1
  9705  0C6E  0021               	movlb	1	; select bank1
  9706  0C6F  07A2               	addwf	(_tcnt^(0+128)+2),f
  9707  0C70  3000               	movlw	0
  9708  0C71  3DA3               	addwfc	((_tcnt+1)^(0+128)+2),f
  9709  0C72  3000               	movlw	0
  9710  0C73  3DA4               	addwfc	((_tcnt+2)^(0+128)+2),f
  9711  0C74  3000               	movlw	0
  9712  0C75  3DA5               	addwfc	((_tcnt+3)^(0+128)+2),f
  9713                           
  9714                           ;Timer1.c: 81: tcnt.RenewalRersult++;
  9715  0C76  3001               	movlw	1
  9716  0C77  07A6               	addwf	(_tcnt^(0+128)+6),f
  9717  0C78  3000               	movlw	0
  9718  0C79  3DA7               	addwfc	((_tcnt+1)^(0+128)+6),f
  9719                           
  9720                           ;Timer1.c: 83: if(tcnt.RenewalRersult>1000)
  9721  0C7A  3003               	movlw	3
  9722  0C7B  0227               	subwf	((_tcnt+1)^(0+128)+6),w
  9723  0C7C  30E9               	movlw	233
  9724  0C7D  1903               	skipnz
  9725  0C7E  0226               	subwf	(_tcnt^(0+128)+6),w
  9726  0C7F  1C03               	skipc
  9727  0C80  0008               	return
  9728                           
  9729                           ;Timer1.c: 84: {
  9730                           ;Timer1.c: 85: tcnt.Second_t++;
  9731  0C81  3001               	movlw	1
  9732  0C82  00F8               	movwf	??_Timer1_Count1ms
  9733  0C83  0878               	movf	??_Timer1_Count1ms,w
  9734  0C84  07A0               	addwf	_tcnt^(0+128),f
  9735                           
  9736                           ;Timer1.c: 87: if((56<tcnt.Second_t)&&(tcnt.Second_t<60))
  9737  0C85  3039               	movlw	57
  9738  0C86  0220               	subwf	_tcnt^(0+128),w
  9739  0C87  1C03               	skipc
  9740  0C88  2C91               	goto	i1l3066
  9741  0C89  303C               	movlw	60
  9742  0C8A  0220               	subwf	_tcnt^(0+128),w
  9743  0C8B  1803               	skipnc
  9744  0C8C  2C91               	goto	i1l3066
  9745                           
  9746                           ;Timer1.c: 88: {
  9747                           ;Timer1.c: 89: Buzzer_MiliSecond(300);
  9748  0C8D  302C               	movlw	44
  9749  0C8E  00F6               	movwf	i1Buzzer_MiliSecond@time
  9750  0C8F  3001               	movlw	1
  9751  0C90  2C9E               	goto	L13
  9752  0C91                     i1l3066:	
  9753                           ;Timer1.c: 90: }
  9754                           
  9755                           
  9756                           ;Timer1.c: 91: else if(tcnt.Second_t>59)
  9757  0C91  303C               	movlw	60
  9758  0C92  0021               	movlb	1	; select bank1
  9759  0C93  0220               	subwf	_tcnt^(0+128),w
  9760  0C94  1C03               	skipc
  9761  0C95  2CA1               	goto	i1l3074
  9762                           
  9763                           ;Timer1.c: 92: {
  9764                           ;Timer1.c: 93: tcnt.Second_t = 0;
  9765  0C96  01A0               	clrf	_tcnt^(0+128)
  9766                           
  9767                           ;Timer1.c: 94: tcnt.Minute_t++;
  9768  0C97  3001               	movlw	1
  9769  0C98  00F8               	movwf	??_Timer1_Count1ms
  9770  0C99  0878               	movf	??_Timer1_Count1ms,w
  9771  0C9A  07A1               	addwf	(_tcnt^(0+128)+1),f
  9772                           
  9773                           ;Timer1.c: 96: Buzzer_MiliSecond(600);
  9774  0C9B  3058               	movlw	88
  9775  0C9C  00F6               	movwf	i1Buzzer_MiliSecond@time
  9776  0C9D  3002               	movlw	2
  9777  0C9E                     L13:	
  9778  0C9E  00F7               	movwf	i1Buzzer_MiliSecond@time+1
  9779  0C9F  3188  20E4         	fcall	i1_Buzzer_MiliSecond
  9780  0CA1                     i1l3074:	
  9781                           
  9782                           ;Timer1.c: 97: }
  9783                           ;Timer1.c: 99: tcnt.RenewalRersult = 0;
  9784  0CA1  0021               	movlb	1	; select bank1
  9785  0CA2  01A6               	clrf	(_tcnt^(0+128)+6)
  9786  0CA3  01A7               	clrf	((_tcnt+1)^(0+128)+6)
  9787  0CA4  0008               	return
  9788  0CA5                     __end_of_Timer1_Count1ms:	
  9789                           
  9790                           	psect	text51
  9791  08E4                     __ptext51:	
  9792 ;; *************** function i1_Buzzer_MiliSecond *****************
  9793 ;; Defined at:
  9794 ;;		line 38 in file "Buzzer.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;  time            2    0[COMMON] unsigned int 
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;		None
  9799 ;; Return value:  Size  Location     Type
  9800 ;;                  1    wreg      void 
  9801 ;; Registers used:
  9802 ;;		wreg, status,2, status,0
  9803 ;; Tracked objects:
  9804 ;;		On entry : 0/0
  9805 ;;		On exit  : 0/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9808 ;;      Params:         2       0       0       0       0       0
  9809 ;;      Locals:         0       0       0       0       0       0
  9810 ;;      Temps:          0       0       0       0       0       0
  9811 ;;      Totals:         2       0       0       0       0       0
  9812 ;;Total ram usage:        2 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; This function calls:
  9815 ;;		Nothing
  9816 ;; This function is called by:
  9817 ;;		_Timer1_Count1ms
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           
  9822                           ;psect for function i1_Buzzer_MiliSecond
  9823  08E4                     i1_Buzzer_MiliSecond:	
  9824                           
  9825                           ;Buzzer.c: 40: if(count==0)
  9826                           
  9827                           ;incstack = 0
  9828                           ; Regs used in i1_Buzzer_MiliSecond: [wreg+status,2+status,0]
  9829  08E4  0873               	movf	_count,w
  9830  08E5  0474               	iorwf	_count+1,w
  9831  08E6  1D03               	btfss	3,2
  9832  08E7  0008               	return
  9833                           
  9834                           ;Buzzer.c: 41: count = time;
  9835  08E8  0877               	movf	i1Buzzer_MiliSecond@time+1,w
  9836  08E9  00F4               	movwf	_count+1
  9837  08EA  0876               	movf	i1Buzzer_MiliSecond@time,w
  9838  08EB  00F3               	movwf	_count
  9839  08EC  0008               	return
  9840  08ED                     __end_ofi1_Buzzer_MiliSecond:	
  9841                           
  9842                           	psect	text52
  9843  08CC                     __ptext52:	
  9844 ;; *************** function _I2C_CommonInterrupt *****************
  9845 ;; Defined at:
  9846 ;;		line 58 in file "I2C_Common.c"
  9847 ;; Parameters:    Size  Location     Type
  9848 ;;		None
  9849 ;; Auto vars:     Size  Location     Type
  9850 ;;		None
  9851 ;; Return value:  Size  Location     Type
  9852 ;;                  1    wreg      void 
  9853 ;; Registers used:
  9854 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9855 ;; Tracked objects:
  9856 ;;		On entry : 0/0
  9857 ;;		On exit  : 0/0
  9858 ;;		Unchanged: 0/0
  9859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9860 ;;      Params:         0       0       0       0       0       0
  9861 ;;      Locals:         0       0       0       0       0       0
  9862 ;;      Temps:          0       0       0       0       0       0
  9863 ;;      Totals:         0       0       0       0       0       0
  9864 ;;Total ram usage:        0 bytes
  9865 ;; Hardware stack levels used:    1
  9866 ;; Hardware stack levels required when called:    1
  9867 ;; This function calls:
  9868 ;;		_I2C2_Interrupt
  9869 ;; This function is called by:
  9870 ;;		_Handler
  9871 ;; This function uses a non-reentrant model
  9872 ;;
  9873                           
  9874                           
  9875                           ;psect for function _I2C_CommonInterrupt
  9876  08CC                     _I2C_CommonInterrupt:	
  9877                           
  9878                           ;I2C_Common.c: 61: I2C2_Interrupt();
  9879                           
  9880                           ;incstack = 0
  9881                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9882  08CC  318E  2680         	fcall	_I2C2_Interrupt
  9883  08CE  0008               	return
  9884  08CF                     __end_of_I2C_CommonInterrupt:	
  9885                           
  9886                           	psect	text53
  9887  0E80                     __ptext53:	
  9888 ;; *************** function _I2C2_Interrupt *****************
  9889 ;; Defined at:
  9890 ;;		line 152 in file "I2C2.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;		None
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;		None
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9904 ;;      Params:         0       0       0       0       0       0
  9905 ;;      Locals:         0       0       0       0       0       0
  9906 ;;      Temps:          1       0       0       0       0       0
  9907 ;;      Totals:         1       0       0       0       0       0
  9908 ;;Total ram usage:        1 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; This function calls:
  9911 ;;		Nothing
  9912 ;; This function is called by:
  9913 ;;		_I2C_CommonInterrupt
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           
  9918                           ;psect for function _I2C2_Interrupt
  9919  0E80                     _I2C2_Interrupt:	
  9920                           
  9921                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  9922                           
  9923                           ;incstack = 0
  9924                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  9925  0E80  0020               	movlb	0	; select bank0
  9926  0E81  1C14               	btfss	20,0	;volatile
  9927  0E82  2ECC               	goto	i1l2698
  9928  0E83  0021               	movlb	1	; select bank1
  9929  0E84  1C14               	btfss	20,0	;volatile
  9930  0E85  2ECC               	goto	i1l2698
  9931                           
  9932                           ;I2C2.c: 155: {
  9933                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  9934  0E86  0024               	movlb	4	; select bank4
  9935  0E87  1E9C               	btfss	28,5	;volatile
  9936  0E88  2EA3               	goto	i1l529
  9937                           
  9938                           ;I2C2.c: 157: {
  9939                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  9940  0E89  1D1C               	btfss	28,2	;volatile
  9941  0E8A  2E96               	goto	i1l2674
  9942                           
  9943                           ;I2C2.c: 159: {
  9944                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  9945  0E8B  1B1E               	btfsc	30,6	;volatile
  9946  0E8C  2ECA               	goto	i1l2696
  9947  0E8D                     i1l2666:	
  9948                           ;I2C2.c: 161: {
  9949                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  9950                           
  9951  0E8D  081C               	movf	28,w	;volatile
  9952  0E8E  3901               	andlw	1
  9953  0E8F  00F6               	movwf	??_I2C2_Interrupt
  9954  0E90  0E1D               	swapf	29,w	;volatile
  9955  0E91  3901               	andlw	1
  9956  0E92  0476               	iorwf	??_I2C2_Interrupt,w
  9957  0E93  1D03               	btfss	3,2
  9958  0E94  2E8D               	goto	i1l2666
  9959  0E95  2EB6               	goto	L14
  9960  0E96                     i1l2674:	
  9961                           ;I2C2.c: 166: }
  9962                           ;I2C2.c: 167: }
  9963                           
  9964                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  9965                           
  9966                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  9967                           
  9968                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  9969                           
  9970                           
  9971                           ;I2C2.c: 168: else
  9972                           ;I2C2.c: 169: {
  9973                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  9974  0E96  0819               	movf	25,w	;volatile
  9975  0E97  00F6               	movwf	??_I2C2_Interrupt
  9976  0E98  0021               	movlb	1	; select bank1
  9977  0E99  0843               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  9978  0E9A  0086               	movwf	6
  9979  0E9B  0187               	clrf	7
  9980  0E9C  0876               	movf	??_I2C2_Interrupt,w
  9981  0E9D  0081               	movwf	1
  9982                           
  9983                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  9984  0E9E  3001               	movlw	1
  9985  0E9F  00F6               	movwf	??_I2C2_Interrupt
  9986  0EA0  0876               	movf	??_I2C2_Interrupt,w
  9987  0EA1  07C3               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  9988  0EA2  2EC8               	goto	i1l2694
  9989  0EA3                     i1l529:	
  9990                           ;I2C2.c: 173: }
  9991                           ;I2C2.c: 174: }
  9992                           
  9993                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  9994                           
  9995                           
  9996                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  9997  0EA3  1A9C               	btfsc	28,5	;volatile
  9998  0EA4  2ECA               	goto	i1l2696
  9999                           
 10000                           ;I2C2.c: 176: {
 10001                           ;I2C2.c: 177: SSP2BUF;
 10002  0EA5  0819               	movf	25,w	;volatile
 10003                           
 10004                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
 10005  0EA6  1D1C               	btfss	28,2	;volatile
 10006  0EA7  2EC3               	goto	i1l2692
 10007                           
 10008                           ;I2C2.c: 180: {
 10009                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
 10010  0EA8  30B2               	movlw	(low (_I2C2_Config| 0))& (0+255)
 10011  0EA9  00F6               	movwf	??_I2C2_Interrupt
 10012  0EAA  0876               	movf	??_I2C2_Interrupt,w
 10013  0EAB  0021               	movlb	1	; select bank1
 10014  0EAC  00C2               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
 10015  0EAD                     i1l2686:	
 10016                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
 10017                           
 10018  0EAD  0024               	movlb	4	; select bank4
 10019  0EAE  081C               	movf	28,w	;volatile
 10020  0EAF  3901               	andlw	1
 10021  0EB0  00F6               	movwf	??_I2C2_Interrupt
 10022  0EB1  0E1D               	swapf	29,w	;volatile
 10023  0EB2  3901               	andlw	1
 10024  0EB3  0476               	iorwf	??_I2C2_Interrupt,w
 10025  0EB4  1D03               	btfss	3,2
 10026  0EB5  2EAD               	goto	i1l2686
 10027  0EB6                     L14:	
 10028                           
 10029                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
 10030  0EB6  0021               	movlb	1	; select bank1
 10031  0EB7  0842               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
 10032  0EB8  0086               	movwf	6
 10033  0EB9  0187               	clrf	7
 10034  0EBA  0801               	movf	1,w
 10035  0EBB  0024               	movlb	4	; select bank4
 10036  0EBC  0099               	movwf	25	;volatile
 10037                           
 10038                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
 10039  0EBD  3001               	movlw	1
 10040  0EBE  00F6               	movwf	??_I2C2_Interrupt
 10041  0EBF  0876               	movf	??_I2C2_Interrupt,w
 10042  0EC0  0021               	movlb	1	; select bank1
 10043  0EC1  07C2               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
 10044                           
 10045                           ;I2C2.c: 186: }
 10046  0EC2  2EC8               	goto	i1l2694
 10047  0EC3                     i1l2692:	
 10048                           
 10049                           ;I2C2.c: 187: else
 10050                           ;I2C2.c: 188: {
 10051                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
 10052  0EC3  30BA               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
 10053  0EC4  00F6               	movwf	??_I2C2_Interrupt
 10054  0EC5  0876               	movf	??_I2C2_Interrupt,w
 10055  0EC6  0021               	movlb	1	; select bank1
 10056  0EC7  00C3               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
 10057  0EC8                     i1l2694:	
 10058                           
 10059                           ;I2C2.c: 190: }
 10060                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
 10061  0EC8  0024               	movlb	4	; select bank4
 10062  0EC9  161D               	bsf	29,4	;volatile
 10063  0ECA                     i1l2696:	
 10064                           
 10065                           ;I2C2.c: 192: }
 10066                           ;I2C2.c: 193: SSP2IF = 0;
 10067  0ECA  0020               	movlb	0	; select bank0
 10068  0ECB  1014               	bcf	20,0	;volatile
 10069  0ECC                     i1l2698:	
 10070                           
 10071                           ;I2C2.c: 194: }
 10072                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
 10073  0ECC  0021               	movlb	1	; select bank1
 10074  0ECD  1C94               	btfss	20,1	;volatile
 10075  0ECE  0008               	return
 10076  0ECF  0020               	movlb	0	; select bank0
 10077  0ED0  1C94               	btfss	20,1	;volatile
 10078  0ED1  0008               	return
 10079                           
 10080                           ;I2C2.c: 197: BCL2IF = 0;
 10081  0ED2  1094               	bcf	20,1	;volatile
 10082  0ED3  0008               	return
 10083  0ED4                     __end_of_I2C2_Interrupt:	
 10084                           
 10085                           	psect	text54
 10086  09D6                     __ptext54:	
 10087 ;; *************** function _Buzzer_Count1ms *****************
 10088 ;; Defined at:
 10089 ;;		line 44 in file "Buzzer.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;		None
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;		None
 10094 ;; Return value:  Size  Location     Type
 10095 ;;                  1    wreg      void 
 10096 ;; Registers used:
 10097 ;;		wreg, status,2, status,0, pclath, cstack
 10098 ;; Tracked objects:
 10099 ;;		On entry : 0/0
 10100 ;;		On exit  : 0/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10103 ;;      Params:         0       0       0       0       0       0
 10104 ;;      Locals:         0       0       0       0       0       0
 10105 ;;      Temps:          0       0       0       0       0       0
 10106 ;;      Totals:         0       0       0       0       0       0
 10107 ;;Total ram usage:        0 bytes
 10108 ;; Hardware stack levels used:    1
 10109 ;; Hardware stack levels required when called:    1
 10110 ;; This function calls:
 10111 ;;		_Buzzer_SetDuty
 10112 ;; This function is called by:
 10113 ;;		_Handler
 10114 ;; This function uses a non-reentrant model
 10115 ;;
 10116                           
 10117                           
 10118                           ;psect for function _Buzzer_Count1ms
 10119  09D6                     _Buzzer_Count1ms:	
 10120                           
 10121                           ;Buzzer.c: 46: if(count>0)
 10122                           
 10123                           ;incstack = 0
 10124                           ; Regs used in _Buzzer_Count1ms: [wreg+status,2+status,0+pclath+cstack]
 10125  09D6  0873               	movf	_count,w
 10126  09D7  0474               	iorwf	_count+1,w
 10127  09D8  1903               	btfsc	3,2
 10128  09D9  29E5               	goto	i1l2940
 10129                           
 10130                           ;Buzzer.c: 47: {
 10131                           ;Buzzer.c: 48: count--;
 10132  09DA  3001               	movlw	1
 10133  09DB  02F3               	subwf	_count,f
 10134  09DC  3000               	movlw	0
 10135  09DD  3BF4               	subwfb	_count+1,f
 10136                           
 10137                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
 10138  09DE  30FF               	movlw	255
 10139  09DF  00F6               	movwf	Buzzer_SetDuty@duty
 10140  09E0  3001               	movlw	1
 10141  09E1  00F7               	movwf	Buzzer_SetDuty@duty+1
 10142  09E2  318A  2250         	fcall	_Buzzer_SetDuty
 10143                           
 10144                           ;Buzzer.c: 50: }
 10145  09E4  0008               	return
 10146  09E5                     i1l2940:	
 10147                           
 10148                           ;Buzzer.c: 51: else
 10149                           ;Buzzer.c: 52: {
 10150                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
 10151  09E5  3000               	movlw	0
 10152  09E6  00F6               	movwf	Buzzer_SetDuty@duty
 10153  09E7  00F7               	movwf	Buzzer_SetDuty@duty+1
 10154  09E8  318A  2250         	fcall	_Buzzer_SetDuty
 10155  09EA  0008               	return
 10156  09EB                     __end_of_Buzzer_Count1ms:	
 10157                           
 10158                           	psect	text55
 10159  0A50                     __ptext55:	
 10160 ;; *************** function _Buzzer_SetDuty *****************
 10161 ;; Defined at:
 10162 ;;		line 31 in file "Buzzer.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  duty            2    0[COMMON] unsigned int 
 10165 ;; Auto vars:     Size  Location     Type
 10166 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  1    wreg      void 
 10169 ;; Registers used:
 10170 ;;		wreg, status,2, status,0
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10176 ;;      Params:         2       0       0       0       0       0
 10177 ;;      Locals:         1       0       0       0       0       0
 10178 ;;      Temps:          2       0       0       0       0       0
 10179 ;;      Totals:         5       0       0       0       0       0
 10180 ;;Total ram usage:        5 bytes
 10181 ;; Hardware stack levels used:    1
 10182 ;; This function calls:
 10183 ;;		Nothing
 10184 ;; This function is called by:
 10185 ;;		_Buzzer_Count1ms
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           
 10190                           ;psect for function _Buzzer_SetDuty
 10191  0A50                     _Buzzer_SetDuty:	
 10192                           
 10193                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
 10194                           
 10195                           ;incstack = 0
 10196                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
 10197  0A50  0025               	movlb	5	; select bank5
 10198  0A51  081A               	movf	26,w	;volatile
 10199  0A52  39CF               	andlw	207
 10200  0A53  00F8               	movwf	??_Buzzer_SetDuty
 10201  0A54  0878               	movf	??_Buzzer_SetDuty,w
 10202  0A55  00FA               	movwf	Buzzer_SetDuty@CCP2CON_Pre
 10203                           
 10204                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
 10205  0A56  0877               	movf	Buzzer_SetDuty@duty+1,w
 10206  0A57  00F9               	movwf	??_Buzzer_SetDuty+1
 10207  0A58  0876               	movf	Buzzer_SetDuty@duty,w
 10208  0A59  00F8               	movwf	??_Buzzer_SetDuty
 10209  0A5A  36F9               	lsrf	??_Buzzer_SetDuty+1,f
 10210  0A5B  0CF8               	rrf	??_Buzzer_SetDuty,f
 10211  0A5C  36F9               	lsrf	??_Buzzer_SetDuty+1,f
 10212  0A5D  0CF8               	rrf	??_Buzzer_SetDuty,f
 10213  0A5E  0878               	movf	??_Buzzer_SetDuty,w
 10214  0A5F  0098               	movwf	24	;volatile
 10215                           
 10216                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
 10217  0A60  0876               	movf	Buzzer_SetDuty@duty,w
 10218  0A61  3903               	andlw	3
 10219  0A62  00F8               	movwf	??_Buzzer_SetDuty
 10220  0A63  3003               	movlw	3
 10221  0A64                     u199_25:	
 10222  0A64  35F8               	lslf	??_Buzzer_SetDuty,f
 10223  0A65  3EFF               	addlw	-1
 10224  0A66  1D03               	skipz
 10225  0A67  2A64               	goto	u199_25
 10226  0A68  3578               	lslf	??_Buzzer_SetDuty,w
 10227  0A69  047A               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
 10228  0A6A  009A               	movwf	26	;volatile
 10229  0A6B  0008               	return
 10230  0A6C                     __end_of_Buzzer_SetDuty:	
 10231  007E                     btemp	set	126	;btemp
 10232  007E                     int$flags	set	126
 10233  007E                     wtemp0	set	126


Data Sizes:
    Strings     485
    Constant    43
    Data        90
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     76      80
    BANK1            80      0      70
    BANK2            80      0      60
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    Show_PMT_Config$1191	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[6]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[8]), 
		 -> STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[7]), STR_17(CODE[7]), 
		 -> STR_16(CODE[7]), STR_15(CODE[7]), STR_14(CODE[7]), STR_13(CODE[6]), 
		 -> STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[6]), STR_9(CODE[5]), 
		 -> STR_8(CODE[5]), STR_7(CODE[5]), 

    Ssetting_PMT_Config$1190	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[6]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[8]), 
		 -> STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[7]), STR_17(CODE[7]), 
		 -> STR_16(CODE[7]), STR_15(CODE[7]), STR_14(CODE[7]), STR_13(CODE[6]), 
		 -> STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[6]), STR_9(CODE[5]), 
		 -> STR_8(CODE[5]), STR_7(CODE[5]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_57(CODE[7]), STR_51(CODE[5]), STR_40(CODE[5]), STR_36(CODE[7]), 
		 -> STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[7]), STR_32(CODE[7]), 
		 -> STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[6]), STR_28(CODE[6]), 
		 -> STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[5]), STR_24(CODE[5]), 
		 -> STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[8]), STR_20(CODE[8]), 
		 -> STR_19(CODE[8]), STR_18(CODE[7]), STR_17(CODE[7]), STR_16(CODE[7]), 
		 -> STR_15(CODE[7]), STR_14(CODE[7]), STR_13(CODE[6]), STR_12(CODE[6]), 
		 -> STR_11(CODE[6]), STR_10(CODE[6]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_56(CODE[12]), STR_55(CODE[12]), STR_54(CODE[17]), STR_53(CODE[17]), 
		 -> STR_52(CODE[20]), STR_50(CODE[14]), STR_49(CODE[12]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[17]), 
		 -> STR_43(CODE[17]), STR_42(CODE[11]), STR_41(CODE[20]), STR_39(CODE[14]), 
		 -> STR_38(CODE[17]), STR_37(CODE[17]), STR_6(CODE[17]), STR_5(CODE[10]), 
		 -> STR_4(CODE[17]), STR_3(CODE[16]), STR_2(CODE[17]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    Show_PMT_Config@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    Ssetting_PMT_Config@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    StartUp_Menu@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    Load_PMTConfing@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    Save_PMTConfig@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    H7826_01_Gain	PTR unsigned char [15] size(2) Largest target is 7
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[6]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), 

    H7826_Gain	PTR unsigned char [15] size(2) Largest target is 8
		 -> STR_21(CODE[8]), STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[7]), 
		 -> STR_17(CODE[7]), STR_16(CODE[7]), STR_15(CODE[7]), STR_14(CODE[7]), 
		 -> STR_13(CODE[6]), STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[5]), 

    EEPROM_MultiRead@pData	PTR unsigned char  size(1) Largest target is 3
		 -> F3344..(BANK1[3]), main@pmt_config(BANK1[3]), 

    EEPROM_MultiWrite@pData	PTR unsigned char  size(1) Largest target is 3
		 -> F3344..(BANK1[3]), main@pmt_config(BANK1[3]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S40$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), 

    S40$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Timer1_Count1ms->i1_Buzzer_MiliSecond
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Count1ms->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_Show_PMT_Config
    _main->_StartUp_Menu
    _mTouch_Init->_mTouch_PortInit
    _Timer1_GetCPM->_Timer1_GetCPS
    _Timer1_GetCPS->___lldiv
    _StartUp_Menu->_printf
    _Load_PMTConfing->_EEPROM_MultiRead
    _EEPROM_MultiRead->_eeprom_read
    _Ssetting_PMT_Config->_printf
    _Save_PMTConfig->_EEPROM_MultiWrite
    _EEPROM_MultiWrite->_eeprom_write
    _DAC_WriteVoltage->_I2C_Transmit
    _Show_PMT_Config->_printf
    _printf->_Timer1_GetCPM
    _putch->_LCD_WriteData
    ___llmod->___lldiv
    ___lldiv->___lmul
    _mTouch_Check->_Buzzer_MiliSecond
    _LCD_CursorPosition->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   45116
                                             72 BANK0      4     4      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                 _LCD_CursorPosition
                   _LCD_DisplayClear
                           _LCD_Init
                    _Show_PMT_Config
                _Ssetting_PMT_Config
                       _StartUp_Menu
                 _Timer1_ClearRecord
                      _Timer1_GetCPM
                      _Timer1_GetCPS
                 _Timer1_GetCountSum
                   _Timer1_GetMinute
                   _Timer1_GetSecond
                        _Timer1_Init
                  _Timer1_StartCount
                   _Timer1_StopCount
                        _Timer6_Init
                       _mTouch_Check
                        _mTouch_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StopCount                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StartCount                                    0     0      0       0
                 _Timer1_ClearRecord
 ---------------------------------------------------------------------------------
 (2) _Timer1_ClearRecord                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetSecond                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetMinute                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        8     4      4    1795
                                             30 BANK0      8     4      4
                      _Timer1_GetCPS
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPS                                        4     0      4    1209
                                             26 BANK0      4     0      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     552
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _StartUp_Menu                                         3     3      0   10620
                                             69 BANK0      3     3      0
                   _DAC_WriteVoltage
                     _LCD_CursorHome
                 _LCD_CursorPosition
                   _LCD_DisplayClear
                    _Load_PMTConfing
                             _printf
 ---------------------------------------------------------------------------------
 (2) _Load_PMTConfing                                      2     2      0     602
                                             11 BANK0      2     2      0
                   _EEPROM_MultiRead
 ---------------------------------------------------------------------------------
 (3) _EEPROM_MultiRead                                     7     5      2     532
                                              4 BANK0      7     5      2
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          4     4      0      31
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Ssetting_PMT_Config                                  2     2      0   11617
                                             69 BANK0      2     2      0
                   _DAC_WriteVoltage
                     _LCD_CursorHome
                 _LCD_CursorPosition
                   _LCD_DisplayClear
                     _Save_PMTConfig
                       _mTouch_Check
                             _printf
 ---------------------------------------------------------------------------------
 (2) _Save_PMTConfig                                       2     2      0     737
                                             11 BANK0      2     2      0
                  _EEPROM_MultiWrite
 ---------------------------------------------------------------------------------
 (3) _EEPROM_MultiWrite                                    7     5      2     667
                                              4 BANK0      7     5      2
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         4     3      1     166
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _DAC_WriteVoltage                                     5     3      2    1724
                                             16 BANK0      5     3      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _Show_PMT_Config                                      3     3      0    8877
                                             69 BANK0      3     3      0
                     _LCD_CursorHome
                 _LCD_CursorPosition
                   _LCD_DisplayClear
                       _mTouch_Check
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              35    25     10    6376
                                             38 BANK0     31    21     10
                      _Timer1_GetCPM (ARG)
                      _Timer1_GetCPS (ARG)
                 _Timer1_GetCountSum (ARG)
                   _Timer1_GetMinute (ARG)
                   _Timer1_GetSecond (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     155
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     896
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     440
                                             26 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     657
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _mTouch_Check                                         6     6      0     459
                                              2 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2     273
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LCD_CursorPosition                                   3     2      1    1538
                                              3 BANK0      3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_CursorHome                                       1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              4 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    2253
                                             16 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C_Transmit                                         8     5      3    1454
                                              8 BANK0      8     5      3
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (4) _I2C2_Transmit                                        8     6      2     672
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3     799
                                              5 BANK0      6     3      3
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     363
                                              1 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              1     1      0     319
                                              5 COMMON     1     1      0
                    _Buzzer_Count1ms
                _I2C_CommonInterrupt
                    _Timer1_Count1ms
           _Timer1_DetectAssignCount
                   _Timer6_CheckFlag
           _mTouch_IntervalDecrement
                        _mTouch_Read
 ---------------------------------------------------------------------------------
 (6) _mTouch_Read                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer6_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_DetectAssignCount                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_Count1ms                                      1     1      0      74
                                              2 COMMON     1     1      0
                i1_Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (7) i1_Buzzer_MiliSecond                                  2     0      2      74
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Buzzer_Count1ms                                      0     0      0     245
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (7) _Buzzer_SetDuty                                       5     3      2     245
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C2_Transmit
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_DisplayClear
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Show_PMT_Config
     _LCD_CursorHome
       _LCD_WriteData
     _LCD_CursorPosition
       _LCD_WriteData
     _LCD_DisplayClear
       _LCD_WriteData
     _mTouch_Check
       _Buzzer_MiliSecond
     _printf
       _Timer1_GetCPM (ARG)
         _Timer1_GetCPS
           ___lldiv
             ___lmul (ARG)
           ___lmul
         ___lmul
       _Timer1_GetCPS (ARG)
         ___lldiv
           ___lmul (ARG)
         ___lmul
       _Timer1_GetCountSum (ARG)
       _Timer1_GetMinute (ARG)
       _Timer1_GetSecond (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
         _LCD_WriteData
   _Ssetting_PMT_Config
     _DAC_WriteVoltage
       _I2C_Transmit
         _I2C2_Transmit
     _LCD_CursorHome
       _LCD_WriteData
     _LCD_CursorPosition
       _LCD_WriteData
     _LCD_DisplayClear
       _LCD_WriteData
     _Save_PMTConfig
       _EEPROM_MultiWrite
         _eeprom_write
     _mTouch_Check
       _Buzzer_MiliSecond
     _printf
       _Timer1_GetCPM (ARG)
         _Timer1_GetCPS
           ___lldiv
             ___lmul (ARG)
           ___lmul
         ___lmul
       _Timer1_GetCPS (ARG)
         ___lldiv
           ___lmul (ARG)
         ___lmul
       _Timer1_GetCountSum (ARG)
       _Timer1_GetMinute (ARG)
       _Timer1_GetSecond (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
         _LCD_WriteData
   _StartUp_Menu
     _DAC_WriteVoltage
       _I2C_Transmit
         _I2C2_Transmit
     _LCD_CursorHome
       _LCD_WriteData
     _LCD_CursorPosition
       _LCD_WriteData
     _LCD_DisplayClear
       _LCD_WriteData
     _Load_PMTConfing
       _EEPROM_MultiRead
         _eeprom_read
     _printf
       _Timer1_GetCPM (ARG)
         _Timer1_GetCPS
           ___lldiv
             ___lmul (ARG)
           ___lmul
         ___lmul
       _Timer1_GetCPS (ARG)
         ___lldiv
           ___lmul (ARG)
         ___lmul
       _Timer1_GetCountSum (ARG)
       _Timer1_GetMinute (ARG)
       _Timer1_GetSecond (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
         _LCD_WriteData
   _Timer1_ClearRecord
   _Timer1_GetCPM
     _Timer1_GetCPS
       ___lldiv
         ___lmul (ARG)
       ___lmul
     ___lmul
   _Timer1_GetCPS
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Timer1_GetCountSum
   _Timer1_GetMinute
   _Timer1_GetSecond
   _Timer1_Init
   _Timer1_StartCount
     _Timer1_ClearRecord
   _Timer1_StopCount
   _Timer6_Init
   _mTouch_Check
     _Buzzer_MiliSecond
   _mTouch_Init
     _mTouch_PortInit
   _printf
     _Timer1_GetCPM (ARG)
       _Timer1_GetCPS
         ___lldiv
           ___lmul (ARG)
         ___lmul
       ___lmul
     _Timer1_GetCPS (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _Timer1_GetCountSum (ARG)
     _Timer1_GetMinute (ARG)
     _Timer1_GetSecond (ARG)
     ___lldiv (ARG)
       ___lmul (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Count1ms
     _Buzzer_SetDuty
   _I2C_CommonInterrupt
     _I2C2_Interrupt
   _Timer1_Count1ms
     i1_Buzzer_MiliSecond
   _Timer1_DetectAssignCount
   _Timer6_CheckFlag
   _mTouch_IntervalDecrement
   _mTouch_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      DE       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      46       8       87.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      DE      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Jul  4 08:35:08 2017

                  _Load_PMTConfing 0916                     _LCD_CursorHome 096A  
         __end_of_Timer1_StopCount 08D8                                  pc 0002  
                      __CFG_CP$OFF 0000                                 l54 0A18  
                   I2C2_Transmit@i 0025                                 _RD 0CA8  
                               _WR 0CA9              ??_I2C_CommonInterrupt 0077  
              ___wmul@multiplicand 0022                _Ssetting_PMT_Config 0603  
                              l601 0ED6                                l450 0DDB  
                              l604 0F5E                                l701 0ACA  
                              l446 0DAA                                l463 0F89  
                              l631 0080                                l472 0FB2  
                              l481 0FCF                                l642 00CA  
                              l723 0B80                                l660 0125  
                              l580 0610                                l813 0A75  
                              l661 017F                                l645 0148  
                              l671 01DE                                l589 066B  
                              l688 027D                                _GIE 005F  
                              _PR2 001B                    _Buzzer_Count1ms 09D6  
                     __CFG_CPD$OFF 0000                                _PR6 041D  
                     __CFG_BORV$LO 0000                                wreg 0009  
                       _Basic_Init 097A                               S4446 0800  
                     __CFG_LVP$OFF 0000         ??_Timer1_DetectAssignCount 0076  
                             l4300 0F43                               l4240 0654  
                             l3530 0F99                               l3506 0F6C  
                             l4234 0641                               l4410 05F4  
                             l3532 0FC0                               l3508 0F7A  
                             l4260 069C                               l4244 0660  
                             l4228 062D                               l4404 059E  
                             l4420 050B                               l3542 0FD5  
                             l3518 0F9D                               l3550 0FF4  
                             l3702 0948                               l4270 06D4  
                             l4254 0689                               l4414 05F9  
                             l3624 0DBF                               l3640 0DD2  
                             l3544 0FEC                               l3552 0FFD  
                             l3528 0F95                               l4416 05FD  
                             l4360 04C9                               l3626 0DC1  
                             l3618 0DB4                               l3546 0FF1  
                             l3650 0A4E                               l4290 0F15  
                             l4266 06BB                               l3722 0C12  
                             l4370 04E3                               l4354 04B8  
                             l4346 04AD                               l3636 0DD0  
                             l3644 0A38                               l3740 0E3E  
                             l3708 0A6F                               l3900 011A  
                             l4284 0F06                               l4364 04D4  
                             l3830 0DEA                               l3750 0E6C  
                             l3742 0E4C                               l4294 0F24  
                             l3670 0C3C                               l3726 0C1C  
                             l4382 04FC                               l4390 0516  
                             l3648 0A49                               l3912 0159  
                             l3904 0127                               l3672 0C68  
                             l4392 0523                               l4376 04EF  
                             l3842 0E2B                               l3754 0E77  
                             l3770 0D8A                               l3930 019F  
                             l3666 0C52                               l3690 0C07  
                             l4378 04F6                               l3780 0A05  
                             l3764 0D64                               l3860 008E  
                             l3852 007B                               l3684 0BF2  
                             l3766 0D72                               l3774 0D95  
                             l3950 01FA                               l3942 01D2  
                             l3926 018E                               l4398 0560  
                             l3784 0A12                               l3952 01FD  
                             l3936 01A5                               l3880 00DF  
                             l3872 00CC                               l3864 009B  
                             l3688 0BDC                               l3970 0227  
                             l3890 00FC                               l3858 0085  
                             l3980 0235                               l3964 0216  
                             l3884 00E1                               l3966 021A  
                             l3974 022F                               l3958 0207  
                             l3894 00FE                               l3886 00EF  
                             l3982 005F                               l3896 010D  
                ?_DAC_WriteVoltage 0030               EEPROM_MultiRead@addr 0025  
                             STR_1 0356                               STR_2 0367  
                             STR_3 0378                               STR_4 0367  
                             STR_5 03B9                               STR_6 0367  
                             STR_7 047F                               STR_8 047A  
                             STR_9 0489                               u3105 0CEB  
                             u3141 0AC9                               u3205 0BEE  
                             u3305 0C24                               u4107 09FE  
                             u4117 0974                               u3405 0D67  
                             u4127 0795                               u3335 0E41  
                             u3255 0A76                               u4137 07AE  
                             u3425 0D80                               u3265 0A7B  
                             u3185 0C4E                               u4147 07C3  
                             u3355 0E4D                               u3435 0D8B  
                             u4157 07D8                               u3365 0E61  
                             u4077 0720                               u4167 0964  
                             u3455 09F3                               u3375 0E6D  
                             u4087 0758                               u3295 0C1D  
                             u4177 0CE4                               u3625 01C8  
                             u3545 00F5                               u4097 0782  
                             u3475 0E11                               _PEIE 005E  
                             u3665 01ED              Buzzer_MiliSecond@time 0020  
                             _TMR0 0015                               _TMR1 0016  
                             _TMR2 001A                               _TMR6 041C  
                  _sense_parameter 02A6               EEPROM_MultiRead@size 0024  
                             _WREN 0CAA                               _WPUB 020D  
                   ??_eeprom_write 0021                       __CFG_WRT$OFF 0000  
             ?_Ssetting_PMT_Config 0076                 ??_DAC_WriteVoltage 0032  
                             _cnts 00A8                               _main 048E  
                 __end_of_I2C_Init 0A1B                               _tcnt 00A0  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                      __CFG_BOREN$ON 0000  
                  ??_I2C2_Transmit 0022                               start 002B  
                    __CFG_IESO$OFF 0000                    __end_of_Handler 002B  
           __end_of_LCD_CursorHome 097A                      _LCD_WriteData 0CE1  
                    __CFG_MCLRE$ON 0000                   ??_I2C2_Interrupt 0076  
         __end_of_LCD_DisplayClear 096A              __size_of_I2C_Transmit 001B  
                 __end_of_LCD_Init 07FB                      __CFG_PLLEN$ON 0000  
                            ?_main 0076                              _EEADR 0191  
                            STR_10 0460                              STR_11 0436  
                            STR_20 03CB                              STR_12 0442  
                            STR_21 03C3                              STR_13 045A  
                            STR_14 0413                              STR_30 03F7  
                            STR_22 046B                              STR_15 040C  
                            STR_31 0421                              STR_23 0470  
                            STR_40 0466                              STR_16 041A  
                            STR_32 03FE                              STR_24 0484  
                            STR_41 02A9                              STR_17 03E2  
                            STR_33 0405                              STR_25 0475  
                    __CFG_WDTE$OFF 0000                              STR_50 0388  
                            STR_42 03AE                              STR_18 0428  
                            STR_34 042F                              STR_26 0448  
                            STR_51 0466                              STR_43 0345  
                            STR_19 03D3                              STR_35 03E9  
                            STR_27 044E                              STR_52 02A9  
                            STR_44 02DF                              STR_36 03F0  
                            STR_28 0454                              STR_45 0323  
                            STR_37 0301                              STR_53 02CE  
                            STR_29 043C                              STR_46 0334  
                            STR_54 0312                              STR_38 02BD  
                            STR_55 0396                              STR_39 0388  
                            STR_47 02F0                              STR_56 0396  
                            STR_48 03A2                              STR_49 03A2  
                            STR_57 03DB              EEPROM_MultiRead@pData 0029  
                            _CARRY 0018                    __end_of___lldiv 0E80  
                            _T1CON 0018                    __end_of___llmod 0D9E  
                            _T2CON 001C                              _LATA3 0863  
                            _LATA4 0864                              _LATA6 0866  
                            _T6CON 041E        __size_of_Timer1_ClearRecord 0014  
                            i1l400 0024                              i1l272 094F  
                            i1l273 0954                              i1l529 0EA3  
                            _PORTA 000C                              _PORTB 000D  
                            _TRISA 008C                              _TRISB 008D  
                I2C2_Transmit@size 0021                ___lmul@multiplicand 0024  
                    __CFG_PWRTE$ON 0000                     __CFG_FCMEN$OFF 0000  
       __size_of_EEPROM_MultiWrite 0031                    __end_of_dpowers 02A6  
                            _count 0073                    __end_of_isdigit 094A  
                 ??_Save_PMTConfig 002B                  ??_Timer1_Count1ms 0078  
                            _putch 08ED                      ??_Buzzer_Init 0020  
            __end_of_Timer1_GetCPM 0B7E              __end_of_Timer1_GetCPS 0D5B  
            ??_Ssetting_PMT_Config 0065        __size_of_Timer1_GetCountSum 0011  
                            status 0003                              wtemp0 007E  
          __end_of_Load_PMTConfing 0921                  _Buzzer_MiliSecond 08F6  
          Ssetting_PMT_Config@data 0066                       _I2C_Transmit 0A35  
               _LCD_CursorPosition 09EB                     ?_LCD_WriteData 0076  
               ?_Buzzer_MiliSecond 0020                  EEPROM_MultiRead@i 002A  
                 ??_DAC_Initialize 0030                    ?_LCD_CursorHome 0076  
                  __initialization 002D                       __end_of_main 0603  
          __end_of_Buzzer_Count1ms 09EB                ?_LCD_CursorPosition 0023  
              ??_Buzzer_MiliSecond 0022                             ??_main 0068  
         __size_of_Show_PMT_Config 0094               __end_of_mTouch_Check 0E2D  
          __end_of_sense_parameter 02A9                        ?_Basic_Init 0076  
                           _BCL2IE 04A1                             _BCL2IF 00A1  
                 ___llmod@dividend 003E               __size_of_mTouch_Init 0013  
             __size_of_mTouch_Read 0026                             _EEDATA 0193  
                           _CCPR2L 0298                             _EECON1 0195  
                           _EECON2 0196               ??_LCD_CursorPosition 0024  
                           _ANSELA 018C                             ?_putch 0076  
                           _ANSELB 018D                             _T1GCON 0019  
                           i1l3074 0CA1                             i1l3066 0C91  
                           i1l3092 0A33                             i1l2666 0E8D  
                           i1l2674 0E96                             i1l2940 09E5  
                           i1l2692 0EC3                             i1l1964 0909  
                           i1l3476 0012                             i1l2694 0EC8  
                           i1l2686 0EAD                             i1l2696 0ECA  
                           i1l2698 0ECC                    _mTouch_Interval 0070  
               I2C2_Transmit@i_560 0026          __end_of_Buzzer_MiliSecond 0900  
                           u199_25 0A64                             _OSCCON 0099  
               I2C2_Transmit@pData 0020                             _TMR1IE 0488  
                           _TMR1IF 0088                          ??_Handler 007B  
                           _TMR6IE 049B                             _TMR1ON 00C0  
                           _TMR6IF 009B                             _SSP2IE 04A0  
                           _SSP2IF 00A0           __end_of_EEPROM_MultiRead 0C09  
         _mTouch_IntervalDecrement 094A                  ?_Timer1_GetMinute 0076  
                ?_Timer1_GetSecond 0076                    _mTouch_PortInit 092E  
                    ??_Timer1_Init 0020                __end_of_Buzzer_Init 0B56  
                    ??_Timer6_Init 0020                 ??_Timer1_GetMinute 0020  
               ??_Timer1_GetSecond 0020               __size_of_eeprom_read 0021  
                           ___lmul 0C09                             ___wmul 0A6C  
                        ??___lldiv 0034                          ??___llmod 0042  
             __end_of_eeprom_write 0BAA                             _printf 005A  
                 I2C_Transmit@I2Cx 002E                          ??_isdigit 0020  
                        ?_I2C_Init 0025              EEPROM_MultiWrite@addr 0025  
            EEPROM_MultiWrite@size 0024                             putch@c 0023  
                 I2C_Transmit@size 002A            __end_of__initialization 0056  
                        ?_LCD_Init 0076                    eeprom_read@addr 0023  
                  ??_LCD_WriteData 0020                  ?_Timer6_CheckFlag 0076  
     __size_ofi1_Buzzer_MiliSecond 0009                   ?_Load_PMTConfing 0076  
                       _VoltageReg 006D                 ??_Timer6_CheckFlag 0076  
               Buzzer_SetDuty@duty 0076                     __pcstackCOMMON 0076  
              __size_of_Basic_Init 0011                       __pidataBANK1 0A88  
                     __pidataBANK2 0CA5                   ?_Buzzer_Count1ms 0076  
                ?_Timer1_StopCount 0076                 EEPROM_MultiWrite@i 002A  
                    __end_of_putch 08F6                __end_of_Timer1_Init 0B08  
              __end_of_Timer6_Init 09AF                 ??_Timer1_StopCount 0020  
        Buzzer_SetDuty@CCP2CON_Pre 007A                         ??_I2C_Init 0028  
                eeprom_write@value 0020                  ??_Show_PMT_Config 0065  
                          ??_putch 0023            __end_of_mTouch_PortInit 093B  
                       __pbssBANK0 006C                         __pbssBANK1 00A0  
       __size_of_Buzzer_MiliSecond 000A                        _Buzzer_Init 0B2E  
                       ??_LCD_Init 0024            __size_of_Buzzer_SetDuty 001C  
                    _DAC_DataTable 00C8                       I2C_Init@I2Cx 002A  
      __end_of_I2C_CommonInterrupt 08CF                       I2C_Init@mode 0026  
                       __pmaintext 048E                            ?___lmul 0020  
                          ?___wmul 0020          __size_of_DAC_WriteVoltage 002F  
                       __pintentry 0004              __size_of_mTouch_Check 004B  
                          _CCP2CON 029A                  ?_LCD_DisplayClear 0076  
                   ___lmul@product 0028                            _APFCON0 011D  
                          _APFCON1 011E                            _CCPTMRS 029E  
                          ?_printf 0046                    _Timer1_Count1ms 0C6A  
               ??_LCD_DisplayClear 0023                            _CPSCON0 001E  
                          _CPSCON1 001F                            _SSP2ADD 021A  
                          _SSP2BUF 0219                            _SSP2MSK 021B  
              I2C2_Transmit@result 0027                   ??_LCD_CursorHome 0023  
                          _Handler 0004                 mTouch_Read@channel 0075  
                     _mTouch_Check 0DE2              __end_of_I2C2_Transmit 1000  
                      _Timer1_Init 0AE7                Load_PMTConfing@data 002C  
                      _Timer6_Init 099C              __size_of_eeprom_write 002C  
__size_of_Timer1_DetectAssignCount 001A                    __size_of___lmul 0030  
        ?_Timer1_DetectAssignCount 0076                            ___lldiv 0E2D  
                  __size_of___wmul 001C                            ___llmod 0D5B  
                  __CFG_STVREN$OFF 0000         __end_of_Timer1_ClearRecord 09D6  
                          __ptext1 09AF                            __ptext2 092E  
                          __ptext3 099C                            __ptext4 08D5  
                          __ptext5 07FB                            __ptext6 09C2  
                          __ptext7 0AE7                            __ptext8 08D2  
                          __ptext9 08CF                    __size_of_printf 0224  
                          _dpowers 027E                            _isdigit 093B  
                     ??_Basic_Init 0020        __end_of_Ssetting_PMT_Config 06EB  
       ??_mTouch_IntervalDecrement 0076                     main@pmt_config 00C5  
                          clrloop0 08D9         __end_of_Timer1_GetCountSum 099C  
             end_of_initialization 0056                   ?_mTouch_PortInit 0076  
                          init_ram 08DE                       _eeprom_write 0B7E  
                          initloop 08DF                      ?_I2C2_PinInit 0076  
                ?_EEPROM_MultiRead 0024                        _I2C2_Config 00B2  
           EEPROM_MultiWrite@pData 0029                    ___lldiv@divisor 002C  
                    ?_I2C2_Setting 0021                    ___lldiv@counter 0039  
               ??_EEPROM_MultiRead 0026                  I2C_Transmit@pData 0029  
          __end_of_Timer1_Count1ms 0CA5                            printf@c 0062  
                          printf@f 0046                     main@state_mode 006C  
               __end_of_Basic_Init 098B                       __pstringtext 027E  
                    ?_StartUp_Menu 0076             __size_of_Timer1_GetCPM 0028  
           __size_of_Timer1_GetCPS 003D          __size_of_Timer1_GetMinute 0003  
        __size_of_Timer1_GetSecond 0003                i1_Buzzer_MiliSecond 08E4  
                 __CFG_FOSC$INTOSC 0000                      ??_mTouch_Init 0021  
                    ??_mTouch_Read 0076            __size_of_I2C2_Interrupt 0054  
                __size_of_I2C_Init 0019        __size_of_LCD_CursorPosition 0017  
                   ??_I2C2_PinInit 0020                     _Buzzer_SetDuty 0A50  
             ?i1_Buzzer_MiliSecond 0076                      ??_eeprom_read 0020  
                      printf@width 0063                     ??_I2C2_Setting 0023  
                    _H7826_01_Gain 0120                  __size_of_LCD_Init 006F  
                _Timer1_StartCount 07FB            __size_of_Save_PMTConfig 000B  
                 _DAC_WriteVoltage 0BAA                 ?_Timer1_StartCount 0076  
                   __end_of___lmul 0C39                     __end_of___wmul 0A88  
                        _ConfigReg 006F                     ??_StartUp_Menu 0065  
                  _Show_PMT_Config 0ED4          __size_of_Timer6_CheckFlag 000B  
              ??_Timer1_StartCount 0020            __size_of_DAC_Initialize 0020  
                   __end_of_printf 027E                start_initialization 002D  
        __size_of_Timer1_StopCount 0003             __end_of_Buzzer_SetDuty 0A6C  
                     ?_Buzzer_Init 0076                __end_of_mTouch_Init 09C2  
              __end_of_mTouch_Read 0B2E                      _Timer1_GetCPM 0B56  
                    _Timer1_GetCPS 0D1E              ??i1_Buzzer_MiliSecond 0078  
              I2C2_Setting@address 0024                    ___llmod@divisor 003A  
        __end_of_Timer1_StartCount 0800                    ___llmod@counter 0043  
             LCD_CursorPosition@tx 0025               LCD_CursorPosition@ty 0023  
            __end_of_LCD_WriteData 0D1E                   ?_Timer1_Count1ms 0076  
                         ??___lmul 0028                           ??___wmul 0024  
              __end_of_eeprom_read 0AE7           __size_of_Load_PMTConfing 000B  
                      __pdataBANK1 00C8                        __pdataBANK2 0120  
                         ??_printf 0050           __size_of_Buzzer_Count1ms 0015  
                      __pbssCOMMON 0070                          ___latbits 0001  
                    __pcstackBANK0 0020   __end_of_mTouch_IntervalDecrement 095A  
        __size_of_LCD_DisplayClear 0010                    ?_Buzzer_SetDuty 0076  
               _Timer1_GetCPM$1189 0042                     ?_Timer1_GetCPM 003E  
                   ?_Timer1_GetCPS 003A                   eeprom_write@addr 0023  
 __end_of_Timer1_DetectAssignCount 0A35                    I2C_Init@address 0025  
                         ?_Handler 0076                   StartUp_Menu@data 0067  
                    ?_I2C_Transmit 0028                      I2C_Init@Speed 0027  
                     ?_Timer1_Init 0076              DAC_WriteVoltage@volue 0030  
                     ?_Timer6_Init 0076            __end_of_Show_PMT_Config 0F68  
                         ?___lldiv 002C                           ?___llmod 003A  
     __size_of_I2C_CommonInterrupt 0003                          __pswtext1 0800  
                 _Timer1_GetMinute 08CF                   _Timer1_GetSecond 08D2  
             __end_of_I2C2_PinInit 092E                           ?_isdigit 0076  
                         _I2C_Init 0A02               __end_of_I2C2_Setting 0DE2  
                   _I2C2_Interrupt 0E80                         _H7826_Gain 013E  
                      _mTouch_Init 09AF                        _mTouch_Read 0B08  
               _Timer1_ClearRecord 09C2                     __size_of_putch 0009  
             __end_of_StartUp_Menu 078C                           _LCD_Init 078C  
                   ___wmul@product 0024                           _CPS_Data 00AF  
                   ??_I2C_Transmit 002B                ?_Timer1_ClearRecord 0076  
       __size_of_Timer1_StartCount 0005                          clear_ram0 08D8  
                      _eeprom_read 0AC6                     _Save_PMTConfig 090B  
               _Timer1_GetCountSum 098B               I2C2_Transmit@address 0024  
                         _SSP2CON1 021D                           _SSP2CON2 021E  
                         _SSP2STAT 021C                ?_Timer1_GetCountSum 0020  
                 _Timer6_CheckFlag 0900          __size_of_EEPROM_MultiRead 0030  
                ___wmul@multiplier 0020                   mTouch_Check@chan 0027  
                   _DAC_Initialize 0AA6               ??_Timer1_ClearRecord 0020  
           __end_of_I2C2_Interrupt 0ED4                         printf@flag 0061  
                ??_Load_PMTConfing 002B                         printf@prec 0056  
           __size_of_I2C2_Transmit 0098                    ??_Timer1_GetCPM 0042  
                 _Timer1_StopCount 08D5                    ??_Timer1_GetCPS 003E  
         __end_of_DAC_WriteVoltage 0BD9                        _CPS_PreData 00AC  
                ___lmul@multiplier 0020                  ??_Buzzer_Count1ms 007B  
             ??_Timer1_GetCountSum 0024       __size_of_Ssetting_PMT_Config 00E8  
           __end_of_Save_PMTConfig 0916                   __size_of_Handler 0027  
             __size_of_Buzzer_Init 0028           _Timer1_DetectAssignCount 0A1B  
         __size_of_mTouch_PortInit 000D  __size_of_mTouch_IntervalDecrement 0010  
        ?_mTouch_IntervalDecrement 0076                   ?_Show_PMT_Config 0076  
          __size_of_LCD_CursorHome 0010             __end_of_DAC_Initialize 0AC6  
                 __size_of___lldiv 0053                   __size_of___llmod 0043  
               LCD_WriteData@point 0022                        _isdigit$904 0020  
                  ?_I2C2_Interrupt 0076                   __size_of_isdigit 000F  
       __end_of_LCD_CursorPosition 0A02                           __ptext10 098B  
                         __ptext11 0B56                           __ptext20 0C39  
                         __ptext12 0D1E                           __ptext21 0B7E  
                         __ptext13 0C09                           __ptext30 0DE2  
                         __ptext22 0BAA                           __ptext14 06EB  
                         __ptext31 08F6                           __ptext23 0ED4  
                         __ptext15 0916                           __ptext40 0A02  
                         __ptext32 09EB                           __ptext24 005A  
                         __ptext16 0BD9                           __ptext41 0D9E  
                         __ptext33 096A                           __ptext25 08ED  
                         __ptext17 0AC6                           __ptext50 0C6A  
                         __ptext42 0921                           __ptext34 078C  
                         __ptext26 093B                           __ptext18 0603  
                         __ptext51 08E4                           __ptext43 0B2E  
                         __ptext35 095A                           __ptext27 0A6C  
                         __ptext19 090B                           __ptext52 08CC  
                         __ptext44 097A                           __ptext36 0CE1  
                         __ptext28 0D5B                           __ptext53 0E80  
                         __ptext37 0AA6                           __ptext29 0E2D  
                         __ptext54 09D6                           __ptext46 0B08  
                         __ptext38 0A35                           __ptext55 0A50  
                         __ptext47 094A                           __ptext39 0F68  
                         __ptext48 0900                           __ptext49 0A1B  
                 _LCD_DisplayClear 095A                       _SSP2CON1bits 021D  
                     _SSP2CON2bits 021E                      __size_of_main 0175  
                  ?_Save_PMTConfig 0076                      _I2C2_Transmit 0F68  
             __size_of_Timer1_Init 0021                           int$flags 007E  
            __size_of_I2C2_PinInit 000D                I2C_Transmit@address 0028  
             __size_of_Timer6_Init 0013                          printf@len 005A  
                  ?_DAC_Initialize 0076                          printf@val 005C  
            __size_of_I2C2_Setting 0044                Show_PMT_Config@data 0067  
                     _SSP2STATbits 021C               __end_of_I2C_Transmit 0A50  
                I2C2_Setting@Speed 0022                   ??_Buzzer_SetDuty 0078  
      __end_ofi1_Buzzer_MiliSecond 08ED                           isdigit@c 0021  
            __size_of_StartUp_Menu 00A1            i1Buzzer_MiliSecond@time 0076  
                _EEPROM_MultiWrite 0C39                           intlevel1 0000  
               ?_EEPROM_MultiWrite 0024                _I2C_CommonInterrupt 08CC  
                 ___lldiv@dividend 0030           __end_of_Timer1_GetMinute 08D2  
         __end_of_Timer1_GetSecond 08D5                  __CFG_CLKOUTEN$OFF 0000  
                     _I2C2_PinInit 0921                      ?_mTouch_Check 0076  
                   ?_I2C2_Transmit 0020                       _I2C2_Setting 0D9E  
              ??_EEPROM_MultiWrite 0026                           printf@ap 0060  
                         printf@cp 0058                 I2C_Transmit@result 002F  
                ??_mTouch_PortInit 0020                   I2C2_Setting@mode 0021  
             ?_I2C_CommonInterrupt 0076                   _EEPROM_MultiRead 0BD9  
                     _StartUp_Menu 06EB                         _OPTION_REG 0095  
         __size_of_Timer1_Count1ms 003B                   ___lldiv@quotient 0035  
                     ?_mTouch_Init 0076                       ?_mTouch_Read 0076  
           __size_of_LCD_WriteData 003D          __end_of_EEPROM_MultiWrite 0C6A  
               Save_PMTConfig@data 002C                      ?_eeprom_write 0020  
         __end_of_Timer6_CheckFlag 090B                     ??_mTouch_Check 0022  
                     ?_eeprom_read 0076  
