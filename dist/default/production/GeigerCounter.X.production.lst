

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun May 21 00:53:50 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 1.41
    61                           ; Generated 25/01/2017 GMT
    62                           ; 
    63                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F1827 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  0111                     	;# 
   143  0112                     	;# 
   144  0113                     	;# 
   145  0114                     	;# 
   146  0115                     	;# 
   147  0116                     	;# 
   148  0117                     	;# 
   149  0118                     	;# 
   150  0119                     	;# 
   151  011A                     	;# 
   152  011B                     	;# 
   153  011D                     	;# 
   154  011E                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0191                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0193                     	;# 
   163  0194                     	;# 
   164  0195                     	;# 
   165  0196                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176  019F                     	;# 
   177  020C                     	;# 
   178  020D                     	;# 
   179  0211                     	;# 
   180  0211                     	;# 
   181  0212                     	;# 
   182  0212                     	;# 
   183  0213                     	;# 
   184  0213                     	;# 
   185  0214                     	;# 
   186  0214                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  0219                     	;# 
   195  021A                     	;# 
   196  021B                     	;# 
   197  021C                     	;# 
   198  021D                     	;# 
   199  021E                     	;# 
   200  021F                     	;# 
   201  0291                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0294                     	;# 
   206  0295                     	;# 
   207  0295                     	;# 
   208  0296                     	;# 
   209  0298                     	;# 
   210  0298                     	;# 
   211  0299                     	;# 
   212  029A                     	;# 
   213  029B                     	;# 
   214  029C                     	;# 
   215  029C                     	;# 
   216  029D                     	;# 
   217  029E                     	;# 
   218  029E                     	;# 
   219  0311                     	;# 
   220  0311                     	;# 
   221  0312                     	;# 
   222  0313                     	;# 
   223  0318                     	;# 
   224  0318                     	;# 
   225  0319                     	;# 
   226  031A                     	;# 
   227  0394                     	;# 
   228  0395                     	;# 
   229  0396                     	;# 
   230  039A                     	;# 
   231  039C                     	;# 
   232  039D                     	;# 
   233  039E                     	;# 
   234  039F                     	;# 
   235  0415                     	;# 
   236  0416                     	;# 
   237  0417                     	;# 
   238  041C                     	;# 
   239  041D                     	;# 
   240  041E                     	;# 
   241  0FE4                     	;# 
   242  0FE5                     	;# 
   243  0FE6                     	;# 
   244  0FE7                     	;# 
   245  0FE8                     	;# 
   246  0FE9                     	;# 
   247  0FEA                     	;# 
   248  0FEB                     	;# 
   249  0FED                     	;# 
   250  0FEE                     	;# 
   251  0FEF                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0095                     	;# 
   288  0096                     	;# 
   289  0097                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  0111                     	;# 
   301  0112                     	;# 
   302  0113                     	;# 
   303  0114                     	;# 
   304  0115                     	;# 
   305  0116                     	;# 
   306  0117                     	;# 
   307  0118                     	;# 
   308  0119                     	;# 
   309  011A                     	;# 
   310  011B                     	;# 
   311  011D                     	;# 
   312  011E                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0191                     	;# 
   316  0191                     	;# 
   317  0192                     	;# 
   318  0193                     	;# 
   319  0193                     	;# 
   320  0193                     	;# 
   321  0194                     	;# 
   322  0195                     	;# 
   323  0196                     	;# 
   324  0199                     	;# 
   325  019A                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019B                     	;# 
   330  019C                     	;# 
   331  019C                     	;# 
   332  019D                     	;# 
   333  019E                     	;# 
   334  019F                     	;# 
   335  020C                     	;# 
   336  020D                     	;# 
   337  0211                     	;# 
   338  0211                     	;# 
   339  0212                     	;# 
   340  0212                     	;# 
   341  0213                     	;# 
   342  0213                     	;# 
   343  0214                     	;# 
   344  0214                     	;# 
   345  0215                     	;# 
   346  0215                     	;# 
   347  0215                     	;# 
   348  0216                     	;# 
   349  0216                     	;# 
   350  0217                     	;# 
   351  0217                     	;# 
   352  0219                     	;# 
   353  021A                     	;# 
   354  021B                     	;# 
   355  021C                     	;# 
   356  021D                     	;# 
   357  021E                     	;# 
   358  021F                     	;# 
   359  0291                     	;# 
   360  0291                     	;# 
   361  0292                     	;# 
   362  0293                     	;# 
   363  0294                     	;# 
   364  0295                     	;# 
   365  0295                     	;# 
   366  0296                     	;# 
   367  0298                     	;# 
   368  0298                     	;# 
   369  0299                     	;# 
   370  029A                     	;# 
   371  029B                     	;# 
   372  029C                     	;# 
   373  029C                     	;# 
   374  029D                     	;# 
   375  029E                     	;# 
   376  029E                     	;# 
   377  0311                     	;# 
   378  0311                     	;# 
   379  0312                     	;# 
   380  0313                     	;# 
   381  0318                     	;# 
   382  0318                     	;# 
   383  0319                     	;# 
   384  031A                     	;# 
   385  0394                     	;# 
   386  0395                     	;# 
   387  0396                     	;# 
   388  039A                     	;# 
   389  039C                     	;# 
   390  039D                     	;# 
   391  039E                     	;# 
   392  039F                     	;# 
   393  0415                     	;# 
   394  0416                     	;# 
   395  0417                     	;# 
   396  041C                     	;# 
   397  041D                     	;# 
   398  041E                     	;# 
   399  0FE4                     	;# 
   400  0FE5                     	;# 
   401  0FE6                     	;# 
   402  0FE7                     	;# 
   403  0FE8                     	;# 
   404  0FE9                     	;# 
   405  0FEA                     	;# 
   406  0FEB                     	;# 
   407  0FED                     	;# 
   408  0FEE                     	;# 
   409  0FEF                     	;# 
   410  0000                     	;# 
   411  0001                     	;# 
   412  0002                     	;# 
   413  0003                     	;# 
   414  0004                     	;# 
   415  0005                     	;# 
   416  0006                     	;# 
   417  0007                     	;# 
   418  0008                     	;# 
   419  0009                     	;# 
   420  000A                     	;# 
   421  000B                     	;# 
   422  000C                     	;# 
   423  000D                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0094                     	;# 
   445  0095                     	;# 
   446  0096                     	;# 
   447  0097                     	;# 
   448  0098                     	;# 
   449  0099                     	;# 
   450  009A                     	;# 
   451  009B                     	;# 
   452  009B                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  010C                     	;# 
   457  010D                     	;# 
   458  0111                     	;# 
   459  0112                     	;# 
   460  0113                     	;# 
   461  0114                     	;# 
   462  0115                     	;# 
   463  0116                     	;# 
   464  0117                     	;# 
   465  0118                     	;# 
   466  0119                     	;# 
   467  011A                     	;# 
   468  011B                     	;# 
   469  011D                     	;# 
   470  011E                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473  0191                     	;# 
   474  0191                     	;# 
   475  0192                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0194                     	;# 
   480  0195                     	;# 
   481  0196                     	;# 
   482  0199                     	;# 
   483  019A                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019C                     	;# 
   489  019C                     	;# 
   490  019D                     	;# 
   491  019E                     	;# 
   492  019F                     	;# 
   493  020C                     	;# 
   494  020D                     	;# 
   495  0211                     	;# 
   496  0211                     	;# 
   497  0212                     	;# 
   498  0212                     	;# 
   499  0213                     	;# 
   500  0213                     	;# 
   501  0214                     	;# 
   502  0214                     	;# 
   503  0215                     	;# 
   504  0215                     	;# 
   505  0215                     	;# 
   506  0216                     	;# 
   507  0216                     	;# 
   508  0217                     	;# 
   509  0217                     	;# 
   510  0219                     	;# 
   511  021A                     	;# 
   512  021B                     	;# 
   513  021C                     	;# 
   514  021D                     	;# 
   515  021E                     	;# 
   516  021F                     	;# 
   517  0291                     	;# 
   518  0291                     	;# 
   519  0292                     	;# 
   520  0293                     	;# 
   521  0294                     	;# 
   522  0295                     	;# 
   523  0295                     	;# 
   524  0296                     	;# 
   525  0298                     	;# 
   526  0298                     	;# 
   527  0299                     	;# 
   528  029A                     	;# 
   529  029B                     	;# 
   530  029C                     	;# 
   531  029C                     	;# 
   532  029D                     	;# 
   533  029E                     	;# 
   534  029E                     	;# 
   535  0311                     	;# 
   536  0311                     	;# 
   537  0312                     	;# 
   538  0313                     	;# 
   539  0318                     	;# 
   540  0318                     	;# 
   541  0319                     	;# 
   542  031A                     	;# 
   543  0394                     	;# 
   544  0395                     	;# 
   545  0396                     	;# 
   546  039A                     	;# 
   547  039C                     	;# 
   548  039D                     	;# 
   549  039E                     	;# 
   550  039F                     	;# 
   551  0415                     	;# 
   552  0416                     	;# 
   553  0417                     	;# 
   554  041C                     	;# 
   555  041D                     	;# 
   556  041E                     	;# 
   557  0FE4                     	;# 
   558  0FE5                     	;# 
   559  0FE6                     	;# 
   560  0FE7                     	;# 
   561  0FE8                     	;# 
   562  0FE9                     	;# 
   563  0FEA                     	;# 
   564  0FEB                     	;# 
   565  0FED                     	;# 
   566  0FEE                     	;# 
   567  0FEF                     	;# 
   568  0000                     	;# 
   569  0001                     	;# 
   570  0002                     	;# 
   571  0003                     	;# 
   572  0004                     	;# 
   573  0005                     	;# 
   574  0006                     	;# 
   575  0007                     	;# 
   576  0008                     	;# 
   577  0009                     	;# 
   578  000A                     	;# 
   579  000B                     	;# 
   580  000C                     	;# 
   581  000D                     	;# 
   582  0011                     	;# 
   583  0012                     	;# 
   584  0013                     	;# 
   585  0014                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0016                     	;# 
   589  0017                     	;# 
   590  0018                     	;# 
   591  0019                     	;# 
   592  001A                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001E                     	;# 
   596  001F                     	;# 
   597  008C                     	;# 
   598  008D                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0094                     	;# 
   603  0095                     	;# 
   604  0096                     	;# 
   605  0097                     	;# 
   606  0098                     	;# 
   607  0099                     	;# 
   608  009A                     	;# 
   609  009B                     	;# 
   610  009B                     	;# 
   611  009C                     	;# 
   612  009D                     	;# 
   613  009E                     	;# 
   614  010C                     	;# 
   615  010D                     	;# 
   616  0111                     	;# 
   617  0112                     	;# 
   618  0113                     	;# 
   619  0114                     	;# 
   620  0115                     	;# 
   621  0116                     	;# 
   622  0117                     	;# 
   623  0118                     	;# 
   624  0119                     	;# 
   625  011A                     	;# 
   626  011B                     	;# 
   627  011D                     	;# 
   628  011E                     	;# 
   629  018C                     	;# 
   630  018D                     	;# 
   631  0191                     	;# 
   632  0191                     	;# 
   633  0192                     	;# 
   634  0193                     	;# 
   635  0193                     	;# 
   636  0193                     	;# 
   637  0194                     	;# 
   638  0195                     	;# 
   639  0196                     	;# 
   640  0199                     	;# 
   641  019A                     	;# 
   642  019B                     	;# 
   643  019B                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019C                     	;# 
   647  019C                     	;# 
   648  019D                     	;# 
   649  019E                     	;# 
   650  019F                     	;# 
   651  020C                     	;# 
   652  020D                     	;# 
   653  0211                     	;# 
   654  0211                     	;# 
   655  0212                     	;# 
   656  0212                     	;# 
   657  0213                     	;# 
   658  0213                     	;# 
   659  0214                     	;# 
   660  0214                     	;# 
   661  0215                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0216                     	;# 
   665  0216                     	;# 
   666  0217                     	;# 
   667  0217                     	;# 
   668  0219                     	;# 
   669  021A                     	;# 
   670  021B                     	;# 
   671  021C                     	;# 
   672  021D                     	;# 
   673  021E                     	;# 
   674  021F                     	;# 
   675  0291                     	;# 
   676  0291                     	;# 
   677  0292                     	;# 
   678  0293                     	;# 
   679  0294                     	;# 
   680  0295                     	;# 
   681  0295                     	;# 
   682  0296                     	;# 
   683  0298                     	;# 
   684  0298                     	;# 
   685  0299                     	;# 
   686  029A                     	;# 
   687  029B                     	;# 
   688  029C                     	;# 
   689  029C                     	;# 
   690  029D                     	;# 
   691  029E                     	;# 
   692  029E                     	;# 
   693  0311                     	;# 
   694  0311                     	;# 
   695  0312                     	;# 
   696  0313                     	;# 
   697  0318                     	;# 
   698  0318                     	;# 
   699  0319                     	;# 
   700  031A                     	;# 
   701  0394                     	;# 
   702  0395                     	;# 
   703  0396                     	;# 
   704  039A                     	;# 
   705  039C                     	;# 
   706  039D                     	;# 
   707  039E                     	;# 
   708  039F                     	;# 
   709  0415                     	;# 
   710  0416                     	;# 
   711  0417                     	;# 
   712  041C                     	;# 
   713  041D                     	;# 
   714  041E                     	;# 
   715  0FE4                     	;# 
   716  0FE5                     	;# 
   717  0FE6                     	;# 
   718  0FE7                     	;# 
   719  0FE8                     	;# 
   720  0FE9                     	;# 
   721  0FEA                     	;# 
   722  0FEB                     	;# 
   723  0FED                     	;# 
   724  0FEE                     	;# 
   725  0FEF                     	;# 
   726  0000                     	;# 
   727  0001                     	;# 
   728  0002                     	;# 
   729  0003                     	;# 
   730  0004                     	;# 
   731  0005                     	;# 
   732  0006                     	;# 
   733  0007                     	;# 
   734  0008                     	;# 
   735  0009                     	;# 
   736  000A                     	;# 
   737  000B                     	;# 
   738  000C                     	;# 
   739  000D                     	;# 
   740  0011                     	;# 
   741  0012                     	;# 
   742  0013                     	;# 
   743  0014                     	;# 
   744  0015                     	;# 
   745  0016                     	;# 
   746  0016                     	;# 
   747  0017                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  001A                     	;# 
   751  001B                     	;# 
   752  001C                     	;# 
   753  001E                     	;# 
   754  001F                     	;# 
   755  008C                     	;# 
   756  008D                     	;# 
   757  0091                     	;# 
   758  0092                     	;# 
   759  0093                     	;# 
   760  0094                     	;# 
   761  0095                     	;# 
   762  0096                     	;# 
   763  0097                     	;# 
   764  0098                     	;# 
   765  0099                     	;# 
   766  009A                     	;# 
   767  009B                     	;# 
   768  009B                     	;# 
   769  009C                     	;# 
   770  009D                     	;# 
   771  009E                     	;# 
   772  010C                     	;# 
   773  010D                     	;# 
   774  0111                     	;# 
   775  0112                     	;# 
   776  0113                     	;# 
   777  0114                     	;# 
   778  0115                     	;# 
   779  0116                     	;# 
   780  0117                     	;# 
   781  0118                     	;# 
   782  0119                     	;# 
   783  011A                     	;# 
   784  011B                     	;# 
   785  011D                     	;# 
   786  011E                     	;# 
   787  018C                     	;# 
   788  018D                     	;# 
   789  0191                     	;# 
   790  0191                     	;# 
   791  0192                     	;# 
   792  0193                     	;# 
   793  0193                     	;# 
   794  0193                     	;# 
   795  0194                     	;# 
   796  0195                     	;# 
   797  0196                     	;# 
   798  0199                     	;# 
   799  019A                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019B                     	;# 
   804  019C                     	;# 
   805  019C                     	;# 
   806  019D                     	;# 
   807  019E                     	;# 
   808  019F                     	;# 
   809  020C                     	;# 
   810  020D                     	;# 
   811  0211                     	;# 
   812  0211                     	;# 
   813  0212                     	;# 
   814  0212                     	;# 
   815  0213                     	;# 
   816  0213                     	;# 
   817  0214                     	;# 
   818  0214                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0216                     	;# 
   823  0216                     	;# 
   824  0217                     	;# 
   825  0217                     	;# 
   826  0219                     	;# 
   827  021A                     	;# 
   828  021B                     	;# 
   829  021C                     	;# 
   830  021D                     	;# 
   831  021E                     	;# 
   832  021F                     	;# 
   833  0291                     	;# 
   834  0291                     	;# 
   835  0292                     	;# 
   836  0293                     	;# 
   837  0294                     	;# 
   838  0295                     	;# 
   839  0295                     	;# 
   840  0296                     	;# 
   841  0298                     	;# 
   842  0298                     	;# 
   843  0299                     	;# 
   844  029A                     	;# 
   845  029B                     	;# 
   846  029C                     	;# 
   847  029C                     	;# 
   848  029D                     	;# 
   849  029E                     	;# 
   850  029E                     	;# 
   851  0311                     	;# 
   852  0311                     	;# 
   853  0312                     	;# 
   854  0313                     	;# 
   855  0318                     	;# 
   856  0318                     	;# 
   857  0319                     	;# 
   858  031A                     	;# 
   859  0394                     	;# 
   860  0395                     	;# 
   861  0396                     	;# 
   862  039A                     	;# 
   863  039C                     	;# 
   864  039D                     	;# 
   865  039E                     	;# 
   866  039F                     	;# 
   867  0415                     	;# 
   868  0416                     	;# 
   869  0417                     	;# 
   870  041C                     	;# 
   871  041D                     	;# 
   872  041E                     	;# 
   873  0FE4                     	;# 
   874  0FE5                     	;# 
   875  0FE6                     	;# 
   876  0FE7                     	;# 
   877  0FE8                     	;# 
   878  0FE9                     	;# 
   879  0FEA                     	;# 
   880  0FEB                     	;# 
   881  0FED                     	;# 
   882  0FEE                     	;# 
   883  0FEF                     	;# 
   884  0000                     	;# 
   885  0001                     	;# 
   886  0002                     	;# 
   887  0003                     	;# 
   888  0004                     	;# 
   889  0005                     	;# 
   890  0006                     	;# 
   891  0007                     	;# 
   892  0008                     	;# 
   893  0009                     	;# 
   894  000A                     	;# 
   895  000B                     	;# 
   896  000C                     	;# 
   897  000D                     	;# 
   898  0011                     	;# 
   899  0012                     	;# 
   900  0013                     	;# 
   901  0014                     	;# 
   902  0015                     	;# 
   903  0016                     	;# 
   904  0016                     	;# 
   905  0017                     	;# 
   906  0018                     	;# 
   907  0019                     	;# 
   908  001A                     	;# 
   909  001B                     	;# 
   910  001C                     	;# 
   911  001E                     	;# 
   912  001F                     	;# 
   913  008C                     	;# 
   914  008D                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0094                     	;# 
   919  0095                     	;# 
   920  0096                     	;# 
   921  0097                     	;# 
   922  0098                     	;# 
   923  0099                     	;# 
   924  009A                     	;# 
   925  009B                     	;# 
   926  009B                     	;# 
   927  009C                     	;# 
   928  009D                     	;# 
   929  009E                     	;# 
   930  010C                     	;# 
   931  010D                     	;# 
   932  0111                     	;# 
   933  0112                     	;# 
   934  0113                     	;# 
   935  0114                     	;# 
   936  0115                     	;# 
   937  0116                     	;# 
   938  0117                     	;# 
   939  0118                     	;# 
   940  0119                     	;# 
   941  011A                     	;# 
   942  011B                     	;# 
   943  011D                     	;# 
   944  011E                     	;# 
   945  018C                     	;# 
   946  018D                     	;# 
   947  0191                     	;# 
   948  0191                     	;# 
   949  0192                     	;# 
   950  0193                     	;# 
   951  0193                     	;# 
   952  0193                     	;# 
   953  0194                     	;# 
   954  0195                     	;# 
   955  0196                     	;# 
   956  0199                     	;# 
   957  019A                     	;# 
   958  019B                     	;# 
   959  019B                     	;# 
   960  019B                     	;# 
   961  019B                     	;# 
   962  019C                     	;# 
   963  019C                     	;# 
   964  019D                     	;# 
   965  019E                     	;# 
   966  019F                     	;# 
   967  020C                     	;# 
   968  020D                     	;# 
   969  0211                     	;# 
   970  0211                     	;# 
   971  0212                     	;# 
   972  0212                     	;# 
   973  0213                     	;# 
   974  0213                     	;# 
   975  0214                     	;# 
   976  0214                     	;# 
   977  0215                     	;# 
   978  0215                     	;# 
   979  0215                     	;# 
   980  0216                     	;# 
   981  0216                     	;# 
   982  0217                     	;# 
   983  0217                     	;# 
   984  0219                     	;# 
   985  021A                     	;# 
   986  021B                     	;# 
   987  021C                     	;# 
   988  021D                     	;# 
   989  021E                     	;# 
   990  021F                     	;# 
   991  0291                     	;# 
   992  0291                     	;# 
   993  0292                     	;# 
   994  0293                     	;# 
   995  0294                     	;# 
   996  0295                     	;# 
   997  0295                     	;# 
   998  0296                     	;# 
   999  0298                     	;# 
  1000  0298                     	;# 
  1001  0299                     	;# 
  1002  029A                     	;# 
  1003  029B                     	;# 
  1004  029C                     	;# 
  1005  029C                     	;# 
  1006  029D                     	;# 
  1007  029E                     	;# 
  1008  029E                     	;# 
  1009  0311                     	;# 
  1010  0311                     	;# 
  1011  0312                     	;# 
  1012  0313                     	;# 
  1013  0318                     	;# 
  1014  0318                     	;# 
  1015  0319                     	;# 
  1016  031A                     	;# 
  1017  0394                     	;# 
  1018  0395                     	;# 
  1019  0396                     	;# 
  1020  039A                     	;# 
  1021  039C                     	;# 
  1022  039D                     	;# 
  1023  039E                     	;# 
  1024  039F                     	;# 
  1025  0415                     	;# 
  1026  0416                     	;# 
  1027  0417                     	;# 
  1028  041C                     	;# 
  1029  041D                     	;# 
  1030  041E                     	;# 
  1031  0FE4                     	;# 
  1032  0FE5                     	;# 
  1033  0FE6                     	;# 
  1034  0FE7                     	;# 
  1035  0FE8                     	;# 
  1036  0FE9                     	;# 
  1037  0FEA                     	;# 
  1038  0FEB                     	;# 
  1039  0FED                     	;# 
  1040  0FEE                     	;# 
  1041  0FEF                     	;# 
  1042  0000                     	;# 
  1043  0001                     	;# 
  1044  0002                     	;# 
  1045  0003                     	;# 
  1046  0004                     	;# 
  1047  0005                     	;# 
  1048  0006                     	;# 
  1049  0007                     	;# 
  1050  0008                     	;# 
  1051  0009                     	;# 
  1052  000A                     	;# 
  1053  000B                     	;# 
  1054  000C                     	;# 
  1055  000D                     	;# 
  1056  0011                     	;# 
  1057  0012                     	;# 
  1058  0013                     	;# 
  1059  0014                     	;# 
  1060  0015                     	;# 
  1061  0016                     	;# 
  1062  0016                     	;# 
  1063  0017                     	;# 
  1064  0018                     	;# 
  1065  0019                     	;# 
  1066  001A                     	;# 
  1067  001B                     	;# 
  1068  001C                     	;# 
  1069  001E                     	;# 
  1070  001F                     	;# 
  1071  008C                     	;# 
  1072  008D                     	;# 
  1073  0091                     	;# 
  1074  0092                     	;# 
  1075  0093                     	;# 
  1076  0094                     	;# 
  1077  0095                     	;# 
  1078  0096                     	;# 
  1079  0097                     	;# 
  1080  0098                     	;# 
  1081  0099                     	;# 
  1082  009A                     	;# 
  1083  009B                     	;# 
  1084  009B                     	;# 
  1085  009C                     	;# 
  1086  009D                     	;# 
  1087  009E                     	;# 
  1088  010C                     	;# 
  1089  010D                     	;# 
  1090  0111                     	;# 
  1091  0112                     	;# 
  1092  0113                     	;# 
  1093  0114                     	;# 
  1094  0115                     	;# 
  1095  0116                     	;# 
  1096  0117                     	;# 
  1097  0118                     	;# 
  1098  0119                     	;# 
  1099  011A                     	;# 
  1100  011B                     	;# 
  1101  011D                     	;# 
  1102  011E                     	;# 
  1103  018C                     	;# 
  1104  018D                     	;# 
  1105  0191                     	;# 
  1106  0191                     	;# 
  1107  0192                     	;# 
  1108  0193                     	;# 
  1109  0193                     	;# 
  1110  0193                     	;# 
  1111  0194                     	;# 
  1112  0195                     	;# 
  1113  0196                     	;# 
  1114  0199                     	;# 
  1115  019A                     	;# 
  1116  019B                     	;# 
  1117  019B                     	;# 
  1118  019B                     	;# 
  1119  019B                     	;# 
  1120  019C                     	;# 
  1121  019C                     	;# 
  1122  019D                     	;# 
  1123  019E                     	;# 
  1124  019F                     	;# 
  1125  020C                     	;# 
  1126  020D                     	;# 
  1127  0211                     	;# 
  1128  0211                     	;# 
  1129  0212                     	;# 
  1130  0212                     	;# 
  1131  0213                     	;# 
  1132  0213                     	;# 
  1133  0214                     	;# 
  1134  0214                     	;# 
  1135  0215                     	;# 
  1136  0215                     	;# 
  1137  0215                     	;# 
  1138  0216                     	;# 
  1139  0216                     	;# 
  1140  0217                     	;# 
  1141  0217                     	;# 
  1142  0219                     	;# 
  1143  021A                     	;# 
  1144  021B                     	;# 
  1145  021C                     	;# 
  1146  021D                     	;# 
  1147  021E                     	;# 
  1148  021F                     	;# 
  1149  0291                     	;# 
  1150  0291                     	;# 
  1151  0292                     	;# 
  1152  0293                     	;# 
  1153  0294                     	;# 
  1154  0295                     	;# 
  1155  0295                     	;# 
  1156  0296                     	;# 
  1157  0298                     	;# 
  1158  0298                     	;# 
  1159  0299                     	;# 
  1160  029A                     	;# 
  1161  029B                     	;# 
  1162  029C                     	;# 
  1163  029C                     	;# 
  1164  029D                     	;# 
  1165  029E                     	;# 
  1166  029E                     	;# 
  1167  0311                     	;# 
  1168  0311                     	;# 
  1169  0312                     	;# 
  1170  0313                     	;# 
  1171  0318                     	;# 
  1172  0318                     	;# 
  1173  0319                     	;# 
  1174  031A                     	;# 
  1175  0394                     	;# 
  1176  0395                     	;# 
  1177  0396                     	;# 
  1178  039A                     	;# 
  1179  039C                     	;# 
  1180  039D                     	;# 
  1181  039E                     	;# 
  1182  039F                     	;# 
  1183  0415                     	;# 
  1184  0416                     	;# 
  1185  0417                     	;# 
  1186  041C                     	;# 
  1187  041D                     	;# 
  1188  041E                     	;# 
  1189  0FE4                     	;# 
  1190  0FE5                     	;# 
  1191  0FE6                     	;# 
  1192  0FE7                     	;# 
  1193  0FE8                     	;# 
  1194  0FE9                     	;# 
  1195  0FEA                     	;# 
  1196  0FEB                     	;# 
  1197  0FED                     	;# 
  1198  0FEE                     	;# 
  1199  0FEF                     	;# 
  1200  0000                     	;# 
  1201  0001                     	;# 
  1202  0002                     	;# 
  1203  0003                     	;# 
  1204  0004                     	;# 
  1205  0005                     	;# 
  1206  0006                     	;# 
  1207  0007                     	;# 
  1208  0008                     	;# 
  1209  0009                     	;# 
  1210  000A                     	;# 
  1211  000B                     	;# 
  1212  000C                     	;# 
  1213  000D                     	;# 
  1214  0011                     	;# 
  1215  0012                     	;# 
  1216  0013                     	;# 
  1217  0014                     	;# 
  1218  0015                     	;# 
  1219  0016                     	;# 
  1220  0016                     	;# 
  1221  0017                     	;# 
  1222  0018                     	;# 
  1223  0019                     	;# 
  1224  001A                     	;# 
  1225  001B                     	;# 
  1226  001C                     	;# 
  1227  001E                     	;# 
  1228  001F                     	;# 
  1229  008C                     	;# 
  1230  008D                     	;# 
  1231  0091                     	;# 
  1232  0092                     	;# 
  1233  0093                     	;# 
  1234  0094                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0097                     	;# 
  1238  0098                     	;# 
  1239  0099                     	;# 
  1240  009A                     	;# 
  1241  009B                     	;# 
  1242  009B                     	;# 
  1243  009C                     	;# 
  1244  009D                     	;# 
  1245  009E                     	;# 
  1246  010C                     	;# 
  1247  010D                     	;# 
  1248  0111                     	;# 
  1249  0112                     	;# 
  1250  0113                     	;# 
  1251  0114                     	;# 
  1252  0115                     	;# 
  1253  0116                     	;# 
  1254  0117                     	;# 
  1255  0118                     	;# 
  1256  0119                     	;# 
  1257  011A                     	;# 
  1258  011B                     	;# 
  1259  011D                     	;# 
  1260  011E                     	;# 
  1261  018C                     	;# 
  1262  018D                     	;# 
  1263  0191                     	;# 
  1264  0191                     	;# 
  1265  0192                     	;# 
  1266  0193                     	;# 
  1267  0193                     	;# 
  1268  0193                     	;# 
  1269  0194                     	;# 
  1270  0195                     	;# 
  1271  0196                     	;# 
  1272  0199                     	;# 
  1273  019A                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019C                     	;# 
  1279  019C                     	;# 
  1280  019D                     	;# 
  1281  019E                     	;# 
  1282  019F                     	;# 
  1283  020C                     	;# 
  1284  020D                     	;# 
  1285  0211                     	;# 
  1286  0211                     	;# 
  1287  0212                     	;# 
  1288  0212                     	;# 
  1289  0213                     	;# 
  1290  0213                     	;# 
  1291  0214                     	;# 
  1292  0214                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0216                     	;# 
  1297  0216                     	;# 
  1298  0217                     	;# 
  1299  0217                     	;# 
  1300  0219                     	;# 
  1301  021A                     	;# 
  1302  021B                     	;# 
  1303  021C                     	;# 
  1304  021D                     	;# 
  1305  021E                     	;# 
  1306  021F                     	;# 
  1307  0291                     	;# 
  1308  0291                     	;# 
  1309  0292                     	;# 
  1310  0293                     	;# 
  1311  0294                     	;# 
  1312  0295                     	;# 
  1313  0295                     	;# 
  1314  0296                     	;# 
  1315  0298                     	;# 
  1316  0298                     	;# 
  1317  0299                     	;# 
  1318  029A                     	;# 
  1319  029B                     	;# 
  1320  029C                     	;# 
  1321  029C                     	;# 
  1322  029D                     	;# 
  1323  029E                     	;# 
  1324  029E                     	;# 
  1325  0311                     	;# 
  1326  0311                     	;# 
  1327  0312                     	;# 
  1328  0313                     	;# 
  1329  0318                     	;# 
  1330  0318                     	;# 
  1331  0319                     	;# 
  1332  031A                     	;# 
  1333  0394                     	;# 
  1334  0395                     	;# 
  1335  0396                     	;# 
  1336  039A                     	;# 
  1337  039C                     	;# 
  1338  039D                     	;# 
  1339  039E                     	;# 
  1340  039F                     	;# 
  1341  0415                     	;# 
  1342  0416                     	;# 
  1343  0417                     	;# 
  1344  041C                     	;# 
  1345  041D                     	;# 
  1346  041E                     	;# 
  1347  0FE4                     	;# 
  1348  0FE5                     	;# 
  1349  0FE6                     	;# 
  1350  0FE7                     	;# 
  1351  0FE8                     	;# 
  1352  0FE9                     	;# 
  1353  0FEA                     	;# 
  1354  0FEB                     	;# 
  1355  0FED                     	;# 
  1356  0FEE                     	;# 
  1357  0FEF                     	;# 
  1358  0000                     	;# 
  1359  0001                     	;# 
  1360  0002                     	;# 
  1361  0003                     	;# 
  1362  0004                     	;# 
  1363  0005                     	;# 
  1364  0006                     	;# 
  1365  0007                     	;# 
  1366  0008                     	;# 
  1367  0009                     	;# 
  1368  000A                     	;# 
  1369  000B                     	;# 
  1370  000C                     	;# 
  1371  000D                     	;# 
  1372  0011                     	;# 
  1373  0012                     	;# 
  1374  0013                     	;# 
  1375  0014                     	;# 
  1376  0015                     	;# 
  1377  0016                     	;# 
  1378  0016                     	;# 
  1379  0017                     	;# 
  1380  0018                     	;# 
  1381  0019                     	;# 
  1382  001A                     	;# 
  1383  001B                     	;# 
  1384  001C                     	;# 
  1385  001E                     	;# 
  1386  001F                     	;# 
  1387  008C                     	;# 
  1388  008D                     	;# 
  1389  0091                     	;# 
  1390  0092                     	;# 
  1391  0093                     	;# 
  1392  0094                     	;# 
  1393  0095                     	;# 
  1394  0096                     	;# 
  1395  0097                     	;# 
  1396  0098                     	;# 
  1397  0099                     	;# 
  1398  009A                     	;# 
  1399  009B                     	;# 
  1400  009B                     	;# 
  1401  009C                     	;# 
  1402  009D                     	;# 
  1403  009E                     	;# 
  1404  010C                     	;# 
  1405  010D                     	;# 
  1406  0111                     	;# 
  1407  0112                     	;# 
  1408  0113                     	;# 
  1409  0114                     	;# 
  1410  0115                     	;# 
  1411  0116                     	;# 
  1412  0117                     	;# 
  1413  0118                     	;# 
  1414  0119                     	;# 
  1415  011A                     	;# 
  1416  011B                     	;# 
  1417  011D                     	;# 
  1418  011E                     	;# 
  1419  018C                     	;# 
  1420  018D                     	;# 
  1421  0191                     	;# 
  1422  0191                     	;# 
  1423  0192                     	;# 
  1424  0193                     	;# 
  1425  0193                     	;# 
  1426  0193                     	;# 
  1427  0194                     	;# 
  1428  0195                     	;# 
  1429  0196                     	;# 
  1430  0199                     	;# 
  1431  019A                     	;# 
  1432  019B                     	;# 
  1433  019B                     	;# 
  1434  019B                     	;# 
  1435  019B                     	;# 
  1436  019C                     	;# 
  1437  019C                     	;# 
  1438  019D                     	;# 
  1439  019E                     	;# 
  1440  019F                     	;# 
  1441  020C                     	;# 
  1442  020D                     	;# 
  1443  0211                     	;# 
  1444  0211                     	;# 
  1445  0212                     	;# 
  1446  0212                     	;# 
  1447  0213                     	;# 
  1448  0213                     	;# 
  1449  0214                     	;# 
  1450  0214                     	;# 
  1451  0215                     	;# 
  1452  0215                     	;# 
  1453  0215                     	;# 
  1454  0216                     	;# 
  1455  0216                     	;# 
  1456  0217                     	;# 
  1457  0217                     	;# 
  1458  0219                     	;# 
  1459  021A                     	;# 
  1460  021B                     	;# 
  1461  021C                     	;# 
  1462  021D                     	;# 
  1463  021E                     	;# 
  1464  021F                     	;# 
  1465  0291                     	;# 
  1466  0291                     	;# 
  1467  0292                     	;# 
  1468  0293                     	;# 
  1469  0294                     	;# 
  1470  0295                     	;# 
  1471  0295                     	;# 
  1472  0296                     	;# 
  1473  0298                     	;# 
  1474  0298                     	;# 
  1475  0299                     	;# 
  1476  029A                     	;# 
  1477  029B                     	;# 
  1478  029C                     	;# 
  1479  029C                     	;# 
  1480  029D                     	;# 
  1481  029E                     	;# 
  1482  029E                     	;# 
  1483  0311                     	;# 
  1484  0311                     	;# 
  1485  0312                     	;# 
  1486  0313                     	;# 
  1487  0318                     	;# 
  1488  0318                     	;# 
  1489  0319                     	;# 
  1490  031A                     	;# 
  1491  0394                     	;# 
  1492  0395                     	;# 
  1493  0396                     	;# 
  1494  039A                     	;# 
  1495  039C                     	;# 
  1496  039D                     	;# 
  1497  039E                     	;# 
  1498  039F                     	;# 
  1499  0415                     	;# 
  1500  0416                     	;# 
  1501  0417                     	;# 
  1502  041C                     	;# 
  1503  041D                     	;# 
  1504  041E                     	;# 
  1505  0FE4                     	;# 
  1506  0FE5                     	;# 
  1507  0FE6                     	;# 
  1508  0FE7                     	;# 
  1509  0FE8                     	;# 
  1510  0FE9                     	;# 
  1511  0FEA                     	;# 
  1512  0FEB                     	;# 
  1513  0FED                     	;# 
  1514  0FEE                     	;# 
  1515  0FEF                     	;# 
  1516  0000                     	;# 
  1517  0001                     	;# 
  1518  0002                     	;# 
  1519  0003                     	;# 
  1520  0004                     	;# 
  1521  0005                     	;# 
  1522  0006                     	;# 
  1523  0007                     	;# 
  1524  0008                     	;# 
  1525  0009                     	;# 
  1526  000A                     	;# 
  1527  000B                     	;# 
  1528  000C                     	;# 
  1529  000D                     	;# 
  1530  0011                     	;# 
  1531  0012                     	;# 
  1532  0013                     	;# 
  1533  0014                     	;# 
  1534  0015                     	;# 
  1535  0016                     	;# 
  1536  0016                     	;# 
  1537  0017                     	;# 
  1538  0018                     	;# 
  1539  0019                     	;# 
  1540  001A                     	;# 
  1541  001B                     	;# 
  1542  001C                     	;# 
  1543  001E                     	;# 
  1544  001F                     	;# 
  1545  008C                     	;# 
  1546  008D                     	;# 
  1547  0091                     	;# 
  1548  0092                     	;# 
  1549  0093                     	;# 
  1550  0094                     	;# 
  1551  0095                     	;# 
  1552  0096                     	;# 
  1553  0097                     	;# 
  1554  0098                     	;# 
  1555  0099                     	;# 
  1556  009A                     	;# 
  1557  009B                     	;# 
  1558  009B                     	;# 
  1559  009C                     	;# 
  1560  009D                     	;# 
  1561  009E                     	;# 
  1562  010C                     	;# 
  1563  010D                     	;# 
  1564  0111                     	;# 
  1565  0112                     	;# 
  1566  0113                     	;# 
  1567  0114                     	;# 
  1568  0115                     	;# 
  1569  0116                     	;# 
  1570  0117                     	;# 
  1571  0118                     	;# 
  1572  0119                     	;# 
  1573  011A                     	;# 
  1574  011B                     	;# 
  1575  011D                     	;# 
  1576  011E                     	;# 
  1577  018C                     	;# 
  1578  018D                     	;# 
  1579  0191                     	;# 
  1580  0191                     	;# 
  1581  0192                     	;# 
  1582  0193                     	;# 
  1583  0193                     	;# 
  1584  0193                     	;# 
  1585  0194                     	;# 
  1586  0195                     	;# 
  1587  0196                     	;# 
  1588  0199                     	;# 
  1589  019A                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019C                     	;# 
  1595  019C                     	;# 
  1596  019D                     	;# 
  1597  019E                     	;# 
  1598  019F                     	;# 
  1599  020C                     	;# 
  1600  020D                     	;# 
  1601  0211                     	;# 
  1602  0211                     	;# 
  1603  0212                     	;# 
  1604  0212                     	;# 
  1605  0213                     	;# 
  1606  0213                     	;# 
  1607  0214                     	;# 
  1608  0214                     	;# 
  1609  0215                     	;# 
  1610  0215                     	;# 
  1611  0215                     	;# 
  1612  0216                     	;# 
  1613  0216                     	;# 
  1614  0217                     	;# 
  1615  0217                     	;# 
  1616  0219                     	;# 
  1617  021A                     	;# 
  1618  021B                     	;# 
  1619  021C                     	;# 
  1620  021D                     	;# 
  1621  021E                     	;# 
  1622  021F                     	;# 
  1623  0291                     	;# 
  1624  0291                     	;# 
  1625  0292                     	;# 
  1626  0293                     	;# 
  1627  0294                     	;# 
  1628  0295                     	;# 
  1629  0295                     	;# 
  1630  0296                     	;# 
  1631  0298                     	;# 
  1632  0298                     	;# 
  1633  0299                     	;# 
  1634  029A                     	;# 
  1635  029B                     	;# 
  1636  029C                     	;# 
  1637  029C                     	;# 
  1638  029D                     	;# 
  1639  029E                     	;# 
  1640  029E                     	;# 
  1641  0311                     	;# 
  1642  0311                     	;# 
  1643  0312                     	;# 
  1644  0313                     	;# 
  1645  0318                     	;# 
  1646  0318                     	;# 
  1647  0319                     	;# 
  1648  031A                     	;# 
  1649  0394                     	;# 
  1650  0395                     	;# 
  1651  0396                     	;# 
  1652  039A                     	;# 
  1653  039C                     	;# 
  1654  039D                     	;# 
  1655  039E                     	;# 
  1656  039F                     	;# 
  1657  0415                     	;# 
  1658  0416                     	;# 
  1659  0417                     	;# 
  1660  041C                     	;# 
  1661  041D                     	;# 
  1662  041E                     	;# 
  1663  0FE4                     	;# 
  1664  0FE5                     	;# 
  1665  0FE6                     	;# 
  1666  0FE7                     	;# 
  1667  0FE8                     	;# 
  1668  0FE9                     	;# 
  1669  0FEA                     	;# 
  1670  0FEB                     	;# 
  1671  0FED                     	;# 
  1672  0FEE                     	;# 
  1673  0FEF                     	;# 
  1674  0000                     	;# 
  1675  0001                     	;# 
  1676  0002                     	;# 
  1677  0003                     	;# 
  1678  0004                     	;# 
  1679  0005                     	;# 
  1680  0006                     	;# 
  1681  0007                     	;# 
  1682  0008                     	;# 
  1683  0009                     	;# 
  1684  000A                     	;# 
  1685  000B                     	;# 
  1686  000C                     	;# 
  1687  000D                     	;# 
  1688  0011                     	;# 
  1689  0012                     	;# 
  1690  0013                     	;# 
  1691  0014                     	;# 
  1692  0015                     	;# 
  1693  0016                     	;# 
  1694  0016                     	;# 
  1695  0017                     	;# 
  1696  0018                     	;# 
  1697  0019                     	;# 
  1698  001A                     	;# 
  1699  001B                     	;# 
  1700  001C                     	;# 
  1701  001E                     	;# 
  1702  001F                     	;# 
  1703  008C                     	;# 
  1704  008D                     	;# 
  1705  0091                     	;# 
  1706  0092                     	;# 
  1707  0093                     	;# 
  1708  0094                     	;# 
  1709  0095                     	;# 
  1710  0096                     	;# 
  1711  0097                     	;# 
  1712  0098                     	;# 
  1713  0099                     	;# 
  1714  009A                     	;# 
  1715  009B                     	;# 
  1716  009B                     	;# 
  1717  009C                     	;# 
  1718  009D                     	;# 
  1719  009E                     	;# 
  1720  010C                     	;# 
  1721  010D                     	;# 
  1722  0111                     	;# 
  1723  0112                     	;# 
  1724  0113                     	;# 
  1725  0114                     	;# 
  1726  0115                     	;# 
  1727  0116                     	;# 
  1728  0117                     	;# 
  1729  0118                     	;# 
  1730  0119                     	;# 
  1731  011A                     	;# 
  1732  011B                     	;# 
  1733  011D                     	;# 
  1734  011E                     	;# 
  1735  018C                     	;# 
  1736  018D                     	;# 
  1737  0191                     	;# 
  1738  0191                     	;# 
  1739  0192                     	;# 
  1740  0193                     	;# 
  1741  0193                     	;# 
  1742  0193                     	;# 
  1743  0194                     	;# 
  1744  0195                     	;# 
  1745  0196                     	;# 
  1746  0199                     	;# 
  1747  019A                     	;# 
  1748  019B                     	;# 
  1749  019B                     	;# 
  1750  019B                     	;# 
  1751  019B                     	;# 
  1752  019C                     	;# 
  1753  019C                     	;# 
  1754  019D                     	;# 
  1755  019E                     	;# 
  1756  019F                     	;# 
  1757  020C                     	;# 
  1758  020D                     	;# 
  1759  0211                     	;# 
  1760  0211                     	;# 
  1761  0212                     	;# 
  1762  0212                     	;# 
  1763  0213                     	;# 
  1764  0213                     	;# 
  1765  0214                     	;# 
  1766  0214                     	;# 
  1767  0215                     	;# 
  1768  0215                     	;# 
  1769  0215                     	;# 
  1770  0216                     	;# 
  1771  0216                     	;# 
  1772  0217                     	;# 
  1773  0217                     	;# 
  1774  0219                     	;# 
  1775  021A                     	;# 
  1776  021B                     	;# 
  1777  021C                     	;# 
  1778  021D                     	;# 
  1779  021E                     	;# 
  1780  021F                     	;# 
  1781  0291                     	;# 
  1782  0291                     	;# 
  1783  0292                     	;# 
  1784  0293                     	;# 
  1785  0294                     	;# 
  1786  0295                     	;# 
  1787  0295                     	;# 
  1788  0296                     	;# 
  1789  0298                     	;# 
  1790  0298                     	;# 
  1791  0299                     	;# 
  1792  029A                     	;# 
  1793  029B                     	;# 
  1794  029C                     	;# 
  1795  029C                     	;# 
  1796  029D                     	;# 
  1797  029E                     	;# 
  1798  029E                     	;# 
  1799  0311                     	;# 
  1800  0311                     	;# 
  1801  0312                     	;# 
  1802  0313                     	;# 
  1803  0318                     	;# 
  1804  0318                     	;# 
  1805  0319                     	;# 
  1806  031A                     	;# 
  1807  0394                     	;# 
  1808  0395                     	;# 
  1809  0396                     	;# 
  1810  039A                     	;# 
  1811  039C                     	;# 
  1812  039D                     	;# 
  1813  039E                     	;# 
  1814  039F                     	;# 
  1815  0415                     	;# 
  1816  0416                     	;# 
  1817  0417                     	;# 
  1818  041C                     	;# 
  1819  041D                     	;# 
  1820  041E                     	;# 
  1821  0FE4                     	;# 
  1822  0FE5                     	;# 
  1823  0FE6                     	;# 
  1824  0FE7                     	;# 
  1825  0FE8                     	;# 
  1826  0FE9                     	;# 
  1827  0FEA                     	;# 
  1828  0FEB                     	;# 
  1829  0FED                     	;# 
  1830  0FEE                     	;# 
  1831  0FEF                     	;# 
  1832  0000                     	;# 
  1833  0001                     	;# 
  1834  0002                     	;# 
  1835  0003                     	;# 
  1836  0004                     	;# 
  1837  0005                     	;# 
  1838  0006                     	;# 
  1839  0007                     	;# 
  1840  0008                     	;# 
  1841  0009                     	;# 
  1842  000A                     	;# 
  1843  000B                     	;# 
  1844  000C                     	;# 
  1845  000D                     	;# 
  1846  0011                     	;# 
  1847  0012                     	;# 
  1848  0013                     	;# 
  1849  0014                     	;# 
  1850  0015                     	;# 
  1851  0016                     	;# 
  1852  0016                     	;# 
  1853  0017                     	;# 
  1854  0018                     	;# 
  1855  0019                     	;# 
  1856  001A                     	;# 
  1857  001B                     	;# 
  1858  001C                     	;# 
  1859  001E                     	;# 
  1860  001F                     	;# 
  1861  008C                     	;# 
  1862  008D                     	;# 
  1863  0091                     	;# 
  1864  0092                     	;# 
  1865  0093                     	;# 
  1866  0094                     	;# 
  1867  0095                     	;# 
  1868  0096                     	;# 
  1869  0097                     	;# 
  1870  0098                     	;# 
  1871  0099                     	;# 
  1872  009A                     	;# 
  1873  009B                     	;# 
  1874  009B                     	;# 
  1875  009C                     	;# 
  1876  009D                     	;# 
  1877  009E                     	;# 
  1878  010C                     	;# 
  1879  010D                     	;# 
  1880  0111                     	;# 
  1881  0112                     	;# 
  1882  0113                     	;# 
  1883  0114                     	;# 
  1884  0115                     	;# 
  1885  0116                     	;# 
  1886  0117                     	;# 
  1887  0118                     	;# 
  1888  0119                     	;# 
  1889  011A                     	;# 
  1890  011B                     	;# 
  1891  011D                     	;# 
  1892  011E                     	;# 
  1893  018C                     	;# 
  1894  018D                     	;# 
  1895  0191                     	;# 
  1896  0191                     	;# 
  1897  0192                     	;# 
  1898  0193                     	;# 
  1899  0193                     	;# 
  1900  0193                     	;# 
  1901  0194                     	;# 
  1902  0195                     	;# 
  1903  0196                     	;# 
  1904  0199                     	;# 
  1905  019A                     	;# 
  1906  019B                     	;# 
  1907  019B                     	;# 
  1908  019B                     	;# 
  1909  019B                     	;# 
  1910  019C                     	;# 
  1911  019C                     	;# 
  1912  019D                     	;# 
  1913  019E                     	;# 
  1914  019F                     	;# 
  1915  020C                     	;# 
  1916  020D                     	;# 
  1917  0211                     	;# 
  1918  0211                     	;# 
  1919  0212                     	;# 
  1920  0212                     	;# 
  1921  0213                     	;# 
  1922  0213                     	;# 
  1923  0214                     	;# 
  1924  0214                     	;# 
  1925  0215                     	;# 
  1926  0215                     	;# 
  1927  0215                     	;# 
  1928  0216                     	;# 
  1929  0216                     	;# 
  1930  0217                     	;# 
  1931  0217                     	;# 
  1932  0219                     	;# 
  1933  021A                     	;# 
  1934  021B                     	;# 
  1935  021C                     	;# 
  1936  021D                     	;# 
  1937  021E                     	;# 
  1938  021F                     	;# 
  1939  0291                     	;# 
  1940  0291                     	;# 
  1941  0292                     	;# 
  1942  0293                     	;# 
  1943  0294                     	;# 
  1944  0295                     	;# 
  1945  0295                     	;# 
  1946  0296                     	;# 
  1947  0298                     	;# 
  1948  0298                     	;# 
  1949  0299                     	;# 
  1950  029A                     	;# 
  1951  029B                     	;# 
  1952  029C                     	;# 
  1953  029C                     	;# 
  1954  029D                     	;# 
  1955  029E                     	;# 
  1956  029E                     	;# 
  1957  0311                     	;# 
  1958  0311                     	;# 
  1959  0312                     	;# 
  1960  0313                     	;# 
  1961  0318                     	;# 
  1962  0318                     	;# 
  1963  0319                     	;# 
  1964  031A                     	;# 
  1965  0394                     	;# 
  1966  0395                     	;# 
  1967  0396                     	;# 
  1968  039A                     	;# 
  1969  039C                     	;# 
  1970  039D                     	;# 
  1971  039E                     	;# 
  1972  039F                     	;# 
  1973  0415                     	;# 
  1974  0416                     	;# 
  1975  0417                     	;# 
  1976  041C                     	;# 
  1977  041D                     	;# 
  1978  041E                     	;# 
  1979  0FE4                     	;# 
  1980  0FE5                     	;# 
  1981  0FE6                     	;# 
  1982  0FE7                     	;# 
  1983  0FE8                     	;# 
  1984  0FE9                     	;# 
  1985  0FEA                     	;# 
  1986  0FEB                     	;# 
  1987  0FED                     	;# 
  1988  0FEE                     	;# 
  1989  0FEF                     	;# 
  1990  0000                     	;# 
  1991  0001                     	;# 
  1992  0002                     	;# 
  1993  0003                     	;# 
  1994  0004                     	;# 
  1995  0005                     	;# 
  1996  0006                     	;# 
  1997  0007                     	;# 
  1998  0008                     	;# 
  1999  0009                     	;# 
  2000  000A                     	;# 
  2001  000B                     	;# 
  2002  000C                     	;# 
  2003  000D                     	;# 
  2004  0011                     	;# 
  2005  0012                     	;# 
  2006  0013                     	;# 
  2007  0014                     	;# 
  2008  0015                     	;# 
  2009  0016                     	;# 
  2010  0016                     	;# 
  2011  0017                     	;# 
  2012  0018                     	;# 
  2013  0019                     	;# 
  2014  001A                     	;# 
  2015  001B                     	;# 
  2016  001C                     	;# 
  2017  001E                     	;# 
  2018  001F                     	;# 
  2019  008C                     	;# 
  2020  008D                     	;# 
  2021  0091                     	;# 
  2022  0092                     	;# 
  2023  0093                     	;# 
  2024  0094                     	;# 
  2025  0095                     	;# 
  2026  0096                     	;# 
  2027  0097                     	;# 
  2028  0098                     	;# 
  2029  0099                     	;# 
  2030  009A                     	;# 
  2031  009B                     	;# 
  2032  009B                     	;# 
  2033  009C                     	;# 
  2034  009D                     	;# 
  2035  009E                     	;# 
  2036  010C                     	;# 
  2037  010D                     	;# 
  2038  0111                     	;# 
  2039  0112                     	;# 
  2040  0113                     	;# 
  2041  0114                     	;# 
  2042  0115                     	;# 
  2043  0116                     	;# 
  2044  0117                     	;# 
  2045  0118                     	;# 
  2046  0119                     	;# 
  2047  011A                     	;# 
  2048  011B                     	;# 
  2049  011D                     	;# 
  2050  011E                     	;# 
  2051  018C                     	;# 
  2052  018D                     	;# 
  2053  0191                     	;# 
  2054  0191                     	;# 
  2055  0192                     	;# 
  2056  0193                     	;# 
  2057  0193                     	;# 
  2058  0193                     	;# 
  2059  0194                     	;# 
  2060  0195                     	;# 
  2061  0196                     	;# 
  2062  0199                     	;# 
  2063  019A                     	;# 
  2064  019B                     	;# 
  2065  019B                     	;# 
  2066  019B                     	;# 
  2067  019B                     	;# 
  2068  019C                     	;# 
  2069  019C                     	;# 
  2070  019D                     	;# 
  2071  019E                     	;# 
  2072  019F                     	;# 
  2073  020C                     	;# 
  2074  020D                     	;# 
  2075  0211                     	;# 
  2076  0211                     	;# 
  2077  0212                     	;# 
  2078  0212                     	;# 
  2079  0213                     	;# 
  2080  0213                     	;# 
  2081  0214                     	;# 
  2082  0214                     	;# 
  2083  0215                     	;# 
  2084  0215                     	;# 
  2085  0215                     	;# 
  2086  0216                     	;# 
  2087  0216                     	;# 
  2088  0217                     	;# 
  2089  0217                     	;# 
  2090  0219                     	;# 
  2091  021A                     	;# 
  2092  021B                     	;# 
  2093  021C                     	;# 
  2094  021D                     	;# 
  2095  021E                     	;# 
  2096  021F                     	;# 
  2097  0291                     	;# 
  2098  0291                     	;# 
  2099  0292                     	;# 
  2100  0293                     	;# 
  2101  0294                     	;# 
  2102  0295                     	;# 
  2103  0295                     	;# 
  2104  0296                     	;# 
  2105  0298                     	;# 
  2106  0298                     	;# 
  2107  0299                     	;# 
  2108  029A                     	;# 
  2109  029B                     	;# 
  2110  029C                     	;# 
  2111  029C                     	;# 
  2112  029D                     	;# 
  2113  029E                     	;# 
  2114  029E                     	;# 
  2115  0311                     	;# 
  2116  0311                     	;# 
  2117  0312                     	;# 
  2118  0313                     	;# 
  2119  0318                     	;# 
  2120  0318                     	;# 
  2121  0319                     	;# 
  2122  031A                     	;# 
  2123  0394                     	;# 
  2124  0395                     	;# 
  2125  0396                     	;# 
  2126  039A                     	;# 
  2127  039C                     	;# 
  2128  039D                     	;# 
  2129  039E                     	;# 
  2130  039F                     	;# 
  2131  0415                     	;# 
  2132  0416                     	;# 
  2133  0417                     	;# 
  2134  041C                     	;# 
  2135  041D                     	;# 
  2136  041E                     	;# 
  2137  0FE4                     	;# 
  2138  0FE5                     	;# 
  2139  0FE6                     	;# 
  2140  0FE7                     	;# 
  2141  0FE8                     	;# 
  2142  0FE9                     	;# 
  2143  0FEA                     	;# 
  2144  0FEB                     	;# 
  2145  0FED                     	;# 
  2146  0FEE                     	;# 
  2147  0FEF                     	;# 
  2148                           
  2149                           	psect	idataBANK1
  2150  0F4B                     __pidataBANK1:	
  2151                           
  2152                           ;initializer for _DAC_VoltageTable
  2153  0F4B  34BF               	retlw	low (STR_5| (0+32768))
  2154  0F4C  3481               	retlw	high (STR_5| (0+32768))
  2155  0F4D  346F               	retlw	low (STR_6| (0+32768))
  2156  0F4E  3481               	retlw	high (STR_6| (0+32768))
  2157  0F4F  34C4               	retlw	low (STR_7| (0+32768))
  2158  0F50  3481               	retlw	high (STR_7| (0+32768))
  2159  0F51  3475               	retlw	low (STR_8| (0+32768))
  2160  0F52  3481               	retlw	high (STR_8| (0+32768))
  2161  0F53  34C9               	retlw	low (STR_9| (0+32768))
  2162  0F54  3481               	retlw	high (STR_9| (0+32768))
  2163  0F55  347B               	retlw	low (STR_10| (0+32768))
  2164  0F56  3481               	retlw	high (STR_10| (0+32768))
  2165  0F57  34CE               	retlw	low (STR_11| (0+32768))
  2166  0F58  3481               	retlw	high (STR_11| (0+32768))
  2167  0F59  3481               	retlw	low (STR_12| (0+32768))
  2168  0F5A  3481               	retlw	high (STR_12| (0+32768))
  2169  0F5B  34D3               	retlw	low (STR_13| (0+32768))
  2170  0F5C  3481               	retlw	high (STR_13| (0+32768))
  2171  0F5D  3487               	retlw	low (STR_14| (0+32768))
  2172  0F5E  3481               	retlw	high (STR_14| (0+32768))
  2173  0F5F  34B0               	retlw	low (STR_15| (0+32768))
  2174  0F60  3481               	retlw	high (STR_15| (0+32768))
  2175  0F61  3463               	retlw	low (STR_16| (0+32768))
  2176  0F62  3481               	retlw	high (STR_16| (0+32768))
  2177  0F63  34B5               	retlw	low (STR_17| (0+32768))
  2178  0F64  3481               	retlw	high (STR_17| (0+32768))
  2179  0F65  3469               	retlw	low (STR_18| (0+32768))
  2180  0F66  3481               	retlw	high (STR_18| (0+32768))
  2181  0F67  34BA               	retlw	low (STR_19| (0+32768))
  2182  0F68  3481               	retlw	high (STR_19| (0+32768))
  2183                           
  2184                           	psect	idataBANK2
  2185  0720                     __pidataBANK2:	
  2186                           
  2187                           ;initializer for _H7826_01_Gain
  2188  0720  348D               	retlw	low (STR_35| (0+32768))
  2189  0721  3481               	retlw	high (STR_35| (0+32768))
  2190  0722  3492               	retlw	low (STR_36| (0+32768))
  2191  0723  3481               	retlw	high (STR_36| (0+32768))
  2192  0724  34A6               	retlw	low (STR_37| (0+32768))
  2193  0725  3481               	retlw	high (STR_37| (0+32768))
  2194  0726  3497               	retlw	low (STR_38| (0+32768))
  2195  0727  3481               	retlw	high (STR_38| (0+32768))
  2196  0728  3445               	retlw	low (STR_39| (0+32768))
  2197  0729  3481               	retlw	high (STR_39| (0+32768))
  2198  072A  344B               	retlw	low (STR_40| (0+32768))
  2199  072B  3481               	retlw	high (STR_40| (0+32768))
  2200  072C  3451               	retlw	low (STR_41| (0+32768))
  2201  072D  3481               	retlw	high (STR_41| (0+32768))
  2202  072E  3439               	retlw	low (STR_42| (0+32768))
  2203  072F  3481               	retlw	high (STR_42| (0+32768))
  2204  0730  34F4               	retlw	low (STR_43| (0+32768))
  2205  0731  3480               	retlw	high (STR_43| (0+32768))
  2206  0732  341E               	retlw	low (STR_44| (0+32768))
  2207  0733  3481               	retlw	high (STR_44| (0+32768))
  2208  0734  34FB               	retlw	low (STR_45| (0+32768))
  2209  0735  3480               	retlw	high (STR_45| (0+32768))
  2210  0736  3402               	retlw	low (STR_46| (0+32768))
  2211  0737  3481               	retlw	high (STR_46| (0+32768))
  2212  0738  342C               	retlw	low (STR_47| (0+32768))
  2213  0739  3481               	retlw	high (STR_47| (0+32768))
  2214  073A  34E6               	retlw	low (STR_48| (0+32768))
  2215  073B  3480               	retlw	high (STR_48| (0+32768))
  2216  073C  34ED               	retlw	low (STR_49| (0+32768))
  2217  073D  3480               	retlw	high (STR_49| (0+32768))
  2218                           
  2219                           ;initializer for _H7826_Gain
  2220  073E  34A1               	retlw	low (STR_20| (0+32768))
  2221  073F  3481               	retlw	high (STR_20| (0+32768))
  2222  0740  349C               	retlw	low (STR_21| (0+32768))
  2223  0741  3481               	retlw	high (STR_21| (0+32768))
  2224  0742  34AB               	retlw	low (STR_22| (0+32768))
  2225  0743  3481               	retlw	high (STR_22| (0+32768))
  2226  0744  345D               	retlw	low (STR_23| (0+32768))
  2227  0745  3481               	retlw	high (STR_23| (0+32768))
  2228  0746  3433               	retlw	low (STR_24| (0+32768))
  2229  0747  3481               	retlw	high (STR_24| (0+32768))
  2230  0748  343F               	retlw	low (STR_25| (0+32768))
  2231  0749  3481               	retlw	high (STR_25| (0+32768))
  2232  074A  3457               	retlw	low (STR_26| (0+32768))
  2233  074B  3481               	retlw	high (STR_26| (0+32768))
  2234  074C  3410               	retlw	low (STR_27| (0+32768))
  2235  074D  3481               	retlw	high (STR_27| (0+32768))
  2236  074E  3409               	retlw	low (STR_28| (0+32768))
  2237  074F  3481               	retlw	high (STR_28| (0+32768))
  2238  0750  3417               	retlw	low (STR_29| (0+32768))
  2239  0751  3481               	retlw	high (STR_29| (0+32768))
  2240  0752  34DF               	retlw	low (STR_30| (0+32768))
  2241  0753  3480               	retlw	high (STR_30| (0+32768))
  2242  0754  3425               	retlw	low (STR_31| (0+32768))
  2243  0755  3481               	retlw	high (STR_31| (0+32768))
  2244  0756  34CF               	retlw	low (STR_32| (0+32768))
  2245  0757  3480               	retlw	high (STR_32| (0+32768))
  2246  0758  34C7               	retlw	low (STR_33| (0+32768))
  2247  0759  3480               	retlw	high (STR_33| (0+32768))
  2248  075A  34BF               	retlw	low (STR_34| (0+32768))
  2249  075B  3480               	retlw	high (STR_34| (0+32768))
  2250                           
  2251                           	psect	stringtext
  2252  0064                     __pstringtext:	
  2253  0064                     _dpowers:	
  2254  0064  3401               	retlw	1
  2255  0065  3400               	retlw	0
  2256  0066  3400               	retlw	0
  2257  0067  3400               	retlw	0
  2258  0068  340A               	retlw	10
  2259  0069  3400               	retlw	0
  2260  006A  3400               	retlw	0
  2261  006B  3400               	retlw	0
  2262  006C  3464               	retlw	100
  2263  006D  3400               	retlw	0
  2264  006E  3400               	retlw	0
  2265  006F  3400               	retlw	0
  2266  0070  34E8               	retlw	232
  2267  0071  3403               	retlw	3
  2268  0072  3400               	retlw	0
  2269  0073  3400               	retlw	0
  2270  0074  3410               	retlw	16
  2271  0075  3427               	retlw	39
  2272  0076  3400               	retlw	0
  2273  0077  3400               	retlw	0
  2274  0078  34A0               	retlw	160
  2275  0079  3486               	retlw	134
  2276  007A  3401               	retlw	1
  2277  007B  3400               	retlw	0
  2278  007C  3440               	retlw	64
  2279  007D  3442               	retlw	66
  2280  007E  340F               	retlw	15
  2281  007F  3400               	retlw	0
  2282  0080  3480               	retlw	128
  2283  0081  3496               	retlw	150
  2284  0082  3498               	retlw	152
  2285  0083  3400               	retlw	0
  2286  0084  3400               	retlw	0
  2287  0085  34E1               	retlw	225
  2288  0086  34F5               	retlw	245
  2289  0087  3405               	retlw	5
  2290  0088  3400               	retlw	0
  2291  0089  34CA               	retlw	202
  2292  008A  349A               	retlw	154
  2293  008B  343B               	retlw	59
  2294  008C                     __end_of_dpowers:	
  2295  008C                     _DAC_DataTable:	
  2296  008C  3499               	retlw	153
  2297  008D  3401               	retlw	1
  2298  008E  34C2               	retlw	194
  2299  008F  3401               	retlw	1
  2300  0090  34EB               	retlw	235
  2301  0091  3401               	retlw	1
  2302  0092  3414               	retlw	20
  2303  0093  3402               	retlw	2
  2304  0094  343D               	retlw	61
  2305  0095  3402               	retlw	2
  2306  0096  3466               	retlw	102
  2307  0097  3402               	retlw	2
  2308  0098  348F               	retlw	143
  2309  0099  3402               	retlw	2
  2310  009A  34B8               	retlw	184
  2311  009B  3402               	retlw	2
  2312  009C  34E1               	retlw	225
  2313  009D  3402               	retlw	2
  2314  009E  340A               	retlw	10
  2315  009F  3403               	retlw	3
  2316  00A0  3433               	retlw	51
  2317  00A1  3403               	retlw	3
  2318  00A2  345B               	retlw	91
  2319  00A3  3403               	retlw	3
  2320  00A4  3484               	retlw	132
  2321  00A5  3403               	retlw	3
  2322  00A6  34AD               	retlw	173
  2323  00A7  3403               	retlw	3
  2324  00A8  34D6               	retlw	214
  2325  00A9  3403               	retlw	3
  2326  00AA                     __end_of_DAC_DataTable:	
  2327  0016                     _TMR1	set	22
  2328  000C                     _PORTA	set	12
  2329  001F                     _CPSCON1	set	31
  2330  001E                     _CPSCON0	set	30
  2331  0015                     _TMR0	set	21
  2332  0019                     _T1GCON	set	25
  2333  0018                     _T1CON	set	24
  2334  000D                     _PORTB	set	13
  2335  001B                     _PR2	set	27
  2336  001A                     _TMR2	set	26
  2337  001C                     _T2CON	set	28
  2338  00C0                     _TMR1ON	set	192
  2339  009B                     _TMR6IF	set	155
  2340  0099                     _TMR4IF	set	153
  2341  0088                     _TMR1IF	set	136
  2342  005F                     _GIE	set	95
  2343  005E                     _PEIE	set	94
  2344  00A1                     _BCL2IF	set	161
  2345  00A0                     _SSP2IF	set	160
  2346  0093                     _BCL1IF	set	147
  2347  008B                     _SSP1IF	set	139
  2348  0099                     _OSCCON	set	153
  2349  0095                     _OPTION_REG	set	149
  2350  008D                     _TRISB	set	141
  2351  008C                     _TRISA	set	140
  2352  049B                     _TMR6IE	set	1179
  2353  0499                     _TMR4IE	set	1177
  2354  0488                     _TMR1IE	set	1160
  2355  04A1                     _BCL2IE	set	1185
  2356  04A0                     _SSP2IE	set	1184
  2357  0493                     _BCL1IE	set	1171
  2358  048B                     _SSP1IE	set	1163
  2359  011E                     _APFCON1	set	286
  2360  011D                     _APFCON0	set	285
  2361  0866                     _LATA6	set	2150
  2362  0863                     _LATA3	set	2147
  2363  0864                     _LATA4	set	2148
  2364  018D                     _ANSELB	set	397
  2365  018C                     _ANSELA	set	396
  2366  021C                     _SSP2STATbits	set	540
  2367  0219                     _SSP2BUF	set	537
  2368  021E                     _SSP2CON2	set	542
  2369  021B                     _SSP2MSK	set	539
  2370  021E                     _SSP2CON2bits	set	542
  2371  021D                     _SSP2CON1bits	set	541
  2372  021A                     _SSP2ADD	set	538
  2373  021C                     _SSP2STAT	set	540
  2374  021D                     _SSP2CON1	set	541
  2375  0214                     _SSP1STATbits	set	532
  2376  0211                     _SSP1BUF	set	529
  2377  0216                     _SSP1CON2	set	534
  2378  0213                     _SSP1MSK	set	531
  2379  0216                     _SSP1CON2bits	set	534
  2380  0215                     _SSP1CON1bits	set	533
  2381  0212                     _SSP1ADD	set	530
  2382  0214                     _SSP1STAT	set	532
  2383  0215                     _SSP1CON1	set	533
  2384  0298                     _CCPR2L	set	664
  2385  029E                     _CCPTMRS	set	670
  2386  029A                     _CCP2CON	set	666
  2387  041E                     _T6CON	set	1054
  2388  041C                     _TMR6	set	1052
  2389  041D                     _PR6	set	1053
  2390  0417                     _T4CON	set	1047
  2391  0415                     _TMR4	set	1045
  2392  0416                     _PR4	set	1046
  2393  00AA                     STR_2:	
  2394  00AA  3453               	retlw	83	;'S'
  2395  00AB  3445               	retlw	69	;'E'
  2396  00AC  344C               	retlw	76	;'L'
  2397  00AD  3445               	retlw	69	;'E'
  2398  00AE  3443               	retlw	67	;'C'
  2399  00AF  3454               	retlw	84	;'T'
  2400  00B0  3446               	retlw	70	;'F'
  2401  00B1  3455               	retlw	85	;'U'
  2402  00B2  344E               	retlw	78	;'N'
  2403  00B3  3443               	retlw	67	;'C'
  2404  00B4  3400               	retlw	0
  2405  00B5                     STR_4:	
  2406  00B5  3450               	retlw	80	;'P'
  2407  00B6  344D               	retlw	77	;'M'
  2408  00B7  3454               	retlw	84	;'T'
  2409  00B8  3444               	retlw	68	;'D'
  2410  00B9  3445               	retlw	69	;'E'
  2411  00BA  3456               	retlw	86	;'V'
  2412  00BB  3449               	retlw	73	;'I'
  2413  00BC  3443               	retlw	67	;'C'
  2414  00BD  3445               	retlw	69	;'E'
  2415  00BE  3400               	retlw	0
  2416  00BF                     STR_34:	
  2417  00BF  3432               	retlw	50	;'2'
  2418  00C0  3437               	retlw	55	;'7'
  2419  00C1  3437               	retlw	55	;'7'
  2420  00C2  3434               	retlw	52	;'4'
  2421  00C3  3435               	retlw	53	;'5'
  2422  00C4  3436               	retlw	54	;'6'
  2423  00C5  3432               	retlw	50	;'2'
  2424  00C6  3400               	retlw	0
  2425  00C7                     STR_33:	
  2426  00C7  3431               	retlw	49	;'1'
  2427  00C8  3439               	retlw	57	;'9'
  2428  00C9  3434               	retlw	52	;'4'
  2429  00CA  3430               	retlw	48	;'0'
  2430  00CB  3436               	retlw	54	;'6'
  2431  00CC  3437               	retlw	55	;'7'
  2432  00CD  3433               	retlw	51	;'3'
  2433  00CE  3400               	retlw	0
  2434  00CF                     STR_32:	
  2435  00CF  3431               	retlw	49	;'1'
  2436  00D0  3433               	retlw	51	;'3'
  2437  00D1  3433               	retlw	51	;'3'
  2438  00D2  3436               	retlw	54	;'6'
  2439  00D3  3430               	retlw	48	;'0'
  2440  00D4  3430               	retlw	48	;'0'
  2441  00D5  3436               	retlw	54	;'6'
  2442  00D6  3400               	retlw	0
  2443  00D7                     STR_3:	
  2444  00D7  3441               	retlw	65	;'A'
  2445  00D8  3444               	retlw	68	;'D'
  2446  00D9  344A               	retlw	74	;'J'
  2447  00DA  3447               	retlw	71	;'G'
  2448  00DB  3441               	retlw	65	;'A'
  2449  00DC  3449               	retlw	73	;'I'
  2450  00DD  344E               	retlw	78	;'N'
  2451  00DE  3400               	retlw	0
  2452  00DF                     STR_30:	
  2453  00DF  3436               	retlw	54	;'6'
  2454  00E0  3430               	retlw	48	;'0'
  2455  00E1  3430               	retlw	48	;'0'
  2456  00E2  3430               	retlw	48	;'0'
  2457  00E3  3430               	retlw	48	;'0'
  2458  00E4  3430               	retlw	48	;'0'
  2459  00E5  3400               	retlw	0
  2460  00E6                     STR_48:	
  2461  00E6  3437               	retlw	55	;'7'
  2462  00E7  3430               	retlw	48	;'0'
  2463  00E8  3430               	retlw	48	;'0'
  2464  00E9  3438               	retlw	56	;'8'
  2465  00EA  3439               	retlw	57	;'9'
  2466  00EB  3430               	retlw	48	;'0'
  2467  00EC  3400               	retlw	0
  2468  00ED                     STR_49:	
  2469  00ED  3439               	retlw	57	;'9'
  2470  00EE  3436               	retlw	54	;'6'
  2471  00EF  3438               	retlw	56	;'8'
  2472  00F0  3434               	retlw	52	;'4'
  2473  00F1  3437               	retlw	55	;'7'
  2474  00F2  3432               	retlw	50	;'2'
  2475  00F3  3400               	retlw	0
  2476  00F4                     STR_43:	
  2477  00F4  3431               	retlw	49	;'1'
  2478  00F5  3430               	retlw	48	;'0'
  2479  00F6  3438               	retlw	56	;'8'
  2480  00F7  3438               	retlw	56	;'8'
  2481  00F8  3434               	retlw	52	;'4'
  2482  00F9  3433               	retlw	51	;'3'
  2483  00FA  3400               	retlw	0
  2484  00FB                     STR_45:	
  2485  00FB  3432               	retlw	50	;'2'
  2486  00FC  3434               	retlw	52	;'4'
  2487  00FD  3432               	retlw	50	;'2'
  2488  00FE  3433               	retlw	51	;'3'
  2489  00FF  3436               	retlw	54	;'6'
  2490  0100  3434               	retlw	52	;'4'
  2491  0101  3400               	retlw	0
  2492  0102                     STR_46:	
  2493  0102  3433               	retlw	51	;'3'
  2494  0103  3435               	retlw	53	;'5'
  2495  0104  3431               	retlw	49	;'1'
  2496  0105  3431               	retlw	49	;'1'
  2497  0106  3432               	retlw	50	;'2'
  2498  0107  3437               	retlw	55	;'7'
  2499  0108  3400               	retlw	0
  2500  0109                     STR_28:	
  2501  0109  3432               	retlw	50	;'2'
  2502  010A  3434               	retlw	52	;'4'
  2503  010B  3437               	retlw	55	;'7'
  2504  010C  3436               	retlw	54	;'6'
  2505  010D  3434               	retlw	52	;'4'
  2506  010E  3437               	retlw	55	;'7'
  2507  010F  3400               	retlw	0
  2508  0110                     STR_27:	
  2509  0110  3431               	retlw	49	;'1'
  2510  0111  3435               	retlw	53	;'5'
  2511  0112  3433               	retlw	51	;'3'
  2512  0113  3432               	retlw	50	;'2'
  2513  0114  3432               	retlw	50	;'2'
  2514  0115  3438               	retlw	56	;'8'
  2515  0116  3400               	retlw	0
  2516  0117                     STR_29:	
  2517  0117  3433               	retlw	51	;'3'
  2518  0118  3438               	retlw	56	;'8'
  2519  0119  3439               	retlw	57	;'9'
  2520  011A  3439               	retlw	57	;'9'
  2521  011B  3438               	retlw	56	;'8'
  2522  011C  3438               	retlw	56	;'8'
  2523  011D  3400               	retlw	0
  2524  011E                     STR_44:	
  2525  011E  3431               	retlw	49	;'1'
  2526  011F  3436               	retlw	54	;'6'
  2527  0120  3434               	retlw	52	;'4'
  2528  0121  3431               	retlw	49	;'1'
  2529  0122  3433               	retlw	51	;'3'
  2530  0123  3439               	retlw	57	;'9'
  2531  0124  3400               	retlw	0
  2532  0125                     STR_31:	
  2533  0125  3439               	retlw	57	;'9'
  2534  0126  3430               	retlw	48	;'0'
  2535  0127  3433               	retlw	51	;'3'
  2536  0128  3438               	retlw	56	;'8'
  2537  0129  3439               	retlw	57	;'9'
  2538  012A  3439               	retlw	57	;'9'
  2539  012B  3400               	retlw	0
  2540  012C                     STR_47:	
  2541  012C  3434               	retlw	52	;'4'
  2542  012D  3439               	retlw	57	;'9'
  2543  012E  3439               	retlw	57	;'9'
  2544  012F  3439               	retlw	57	;'9'
  2545  0130  3439               	retlw	57	;'9'
  2546  0131  3439               	retlw	57	;'9'
  2547  0132  3400               	retlw	0
  2548  0133                     STR_24:	
  2549  0133  3433               	retlw	51	;'3'
  2550  0134  3430               	retlw	48	;'0'
  2551  0135  3430               	retlw	48	;'0'
  2552  0136  3430               	retlw	48	;'0'
  2553  0137  3430               	retlw	48	;'0'
  2554  0138  3400               	retlw	0
  2555  0139                     STR_42:	
  2556  0139  3437               	retlw	55	;'7'
  2557  013A  3430               	retlw	48	;'0'
  2558  013B  3435               	retlw	53	;'5'
  2559  013C  3430               	retlw	48	;'0'
  2560  013D  3430               	retlw	48	;'0'
  2561  013E  3400               	retlw	0
  2562  013F                     STR_25:	
  2563  013F  3435               	retlw	53	;'5'
  2564  0140  3433               	retlw	51	;'3'
  2565  0141  3435               	retlw	53	;'5'
  2566  0142  3435               	retlw	53	;'5'
  2567  0143  3433               	retlw	51	;'3'
  2568  0144  3400               	retlw	0
  2569  0145                     STR_39:	
  2570  0145  3431               	retlw	49	;'1'
  2571  0146  3436               	retlw	54	;'6'
  2572  0147  3431               	retlw	49	;'1'
  2573  0148  3432               	retlw	50	;'2'
  2574  0149  3435               	retlw	53	;'5'
  2575  014A  3400               	retlw	0
  2576  014B                     STR_40:	
  2577  014B  3432               	retlw	50	;'2'
  2578  014C  3437               	retlw	55	;'7'
  2579  014D  3432               	retlw	50	;'2'
  2580  014E  3433               	retlw	51	;'3'
  2581  014F  3438               	retlw	56	;'8'
  2582  0150  3400               	retlw	0
  2583  0151                     STR_41:	
  2584  0151  3434               	retlw	52	;'4'
  2585  0152  3434               	retlw	52	;'4'
  2586  0153  3434               	retlw	52	;'4'
  2587  0154  3437               	retlw	55	;'7'
  2588  0155  3438               	retlw	56	;'8'
  2589  0156  3400               	retlw	0
  2590  0157                     STR_26:	
  2591  0157  3439               	retlw	57	;'9'
  2592  0158  3432               	retlw	50	;'2'
  2593  0159  3430               	retlw	48	;'0'
  2594  015A  3438               	retlw	56	;'8'
  2595  015B  3438               	retlw	56	;'8'
  2596  015C  3400               	retlw	0
  2597  015D                     STR_23:	
  2598  015D  3431               	retlw	49	;'1'
  2599  015E  3436               	retlw	54	;'6'
  2600  015F  3430               	retlw	48	;'0'
  2601  0160  3439               	retlw	57	;'9'
  2602  0161  3439               	retlw	57	;'9'
  2603  0162  3400               	retlw	0
  2604  0163                     STR_16:	
  2605  0163  3431               	retlw	49	;'1'
  2606  0164  342E               	retlw	46	;'.'
  2607  0165  3430               	retlw	48	;'0'
  2608  0166  3435               	retlw	53	;'5'
  2609  0167  3456               	retlw	86	;'V'
  2610  0168  3400               	retlw	0
  2611  0169                     STR_18:	
  2612  0169  3431               	retlw	49	;'1'
  2613  016A  342E               	retlw	46	;'.'
  2614  016B  3431               	retlw	49	;'1'
  2615  016C  3435               	retlw	53	;'5'
  2616  016D  3456               	retlw	86	;'V'
  2617  016E  3400               	retlw	0
  2618  016F                     STR_6:	
  2619  016F  3430               	retlw	48	;'0'
  2620  0170  342E               	retlw	46	;'.'
  2621  0171  3435               	retlw	53	;'5'
  2622  0172  3435               	retlw	53	;'5'
  2623  0173  3456               	retlw	86	;'V'
  2624  0174  3400               	retlw	0
  2625  0175                     STR_8:	
  2626  0175  3430               	retlw	48	;'0'
  2627  0176  342E               	retlw	46	;'.'
  2628  0177  3436               	retlw	54	;'6'
  2629  0178  3435               	retlw	53	;'5'
  2630  0179  3456               	retlw	86	;'V'
  2631  017A  3400               	retlw	0
  2632  017B                     STR_10:	
  2633  017B  3430               	retlw	48	;'0'
  2634  017C  342E               	retlw	46	;'.'
  2635  017D  3437               	retlw	55	;'7'
  2636  017E  3435               	retlw	53	;'5'
  2637  017F  3456               	retlw	86	;'V'
  2638  0180  3400               	retlw	0
  2639  0181                     STR_12:	
  2640  0181  3430               	retlw	48	;'0'
  2641  0182  342E               	retlw	46	;'.'
  2642  0183  3438               	retlw	56	;'8'
  2643  0184  3435               	retlw	53	;'5'
  2644  0185  3456               	retlw	86	;'V'
  2645  0186  3400               	retlw	0
  2646  0187                     STR_14:	
  2647  0187  3430               	retlw	48	;'0'
  2648  0188  342E               	retlw	46	;'.'
  2649  0189  3439               	retlw	57	;'9'
  2650  018A  3435               	retlw	53	;'5'
  2651  018B  3456               	retlw	86	;'V'
  2652  018C  3400               	retlw	0
  2653  018D                     STR_35:	
  2654  018D  3431               	retlw	49	;'1'
  2655  018E  3432               	retlw	50	;'2'
  2656  018F  3435               	retlw	53	;'5'
  2657  0190  3430               	retlw	48	;'0'
  2658  0191  3400               	retlw	0
  2659  0192                     STR_36:	
  2660  0192  3432               	retlw	50	;'2'
  2661  0193  3435               	retlw	53	;'5'
  2662  0194  3438               	retlw	56	;'8'
  2663  0195  3430               	retlw	48	;'0'
  2664  0196  3400               	retlw	0
  2665  0197                     STR_38:	
  2666  0197  3439               	retlw	57	;'9'
  2667  0198  3431               	retlw	49	;'1'
  2668  0199  3438               	retlw	56	;'8'
  2669  019A  3432               	retlw	50	;'2'
  2670  019B  3400               	retlw	0
  2671  019C                     STR_21:	
  2672  019C  3433               	retlw	51	;'3'
  2673  019D  3439               	retlw	57	;'9'
  2674  019E  3435               	retlw	53	;'5'
  2675  019F  3437               	retlw	55	;'7'
  2676  01A0  3400               	retlw	0
  2677  01A1                     STR_20:	
  2678  01A1  3431               	retlw	49	;'1'
  2679  01A2  3437               	retlw	55	;'7'
  2680  01A3  3437               	retlw	55	;'7'
  2681  01A4  3437               	retlw	55	;'7'
  2682  01A5  3400               	retlw	0
  2683  01A6                     STR_37:	
  2684  01A6  3434               	retlw	52	;'4'
  2685  01A7  3439               	retlw	57	;'9'
  2686  01A8  3439               	retlw	57	;'9'
  2687  01A9  3438               	retlw	56	;'8'
  2688  01AA  3400               	retlw	0
  2689  01AB                     STR_22:	
  2690  01AB  3438               	retlw	56	;'8'
  2691  01AC  3432               	retlw	50	;'2'
  2692  01AD  3431               	retlw	49	;'1'
  2693  01AE  3439               	retlw	57	;'9'
  2694  01AF  3400               	retlw	0
  2695  01B0                     STR_15:	
  2696  01B0  3431               	retlw	49	;'1'
  2697  01B1  342E               	retlw	46	;'.'
  2698  01B2  3430               	retlw	48	;'0'
  2699  01B3  3456               	retlw	86	;'V'
  2700  01B4  3400               	retlw	0
  2701  01B5                     STR_17:	
  2702  01B5  3431               	retlw	49	;'1'
  2703  01B6  342E               	retlw	46	;'.'
  2704  01B7  3431               	retlw	49	;'1'
  2705  01B8  3456               	retlw	86	;'V'
  2706  01B9  3400               	retlw	0
  2707  01BA                     STR_19:	
  2708  01BA  3431               	retlw	49	;'1'
  2709  01BB  342E               	retlw	46	;'.'
  2710  01BC  3432               	retlw	50	;'2'
  2711  01BD  3456               	retlw	86	;'V'
  2712  01BE  3400               	retlw	0
  2713  01BF                     STR_5:	
  2714  01BF  3430               	retlw	48	;'0'
  2715  01C0  342E               	retlw	46	;'.'
  2716  01C1  3435               	retlw	53	;'5'
  2717  01C2  3456               	retlw	86	;'V'
  2718  01C3  3400               	retlw	0
  2719  01C4                     STR_7:	
  2720  01C4  3430               	retlw	48	;'0'
  2721  01C5  342E               	retlw	46	;'.'
  2722  01C6  3436               	retlw	54	;'6'
  2723  01C7  3456               	retlw	86	;'V'
  2724  01C8  3400               	retlw	0
  2725  01C9                     STR_9:	
  2726  01C9  3430               	retlw	48	;'0'
  2727  01CA  342E               	retlw	46	;'.'
  2728  01CB  3437               	retlw	55	;'7'
  2729  01CC  3456               	retlw	86	;'V'
  2730  01CD  3400               	retlw	0
  2731  01CE                     STR_11:	
  2732  01CE  3430               	retlw	48	;'0'
  2733  01CF  342E               	retlw	46	;'.'
  2734  01D0  3438               	retlw	56	;'8'
  2735  01D1  3456               	retlw	86	;'V'
  2736  01D2  3400               	retlw	0
  2737  01D3                     STR_13:	
  2738  01D3  3430               	retlw	48	;'0'
  2739  01D4  342E               	retlw	46	;'.'
  2740  01D5  3439               	retlw	57	;'9'
  2741  01D6  3456               	retlw	86	;'V'
  2742  01D7  3400               	retlw	0
  2743  01D8                     STR_1:	
  2744  01D8  3425               	retlw	37	;'%'
  2745  01D9  346C               	retlw	108	;'l'
  2746  01DA  3475               	retlw	117	;'u'
  2747  01DB  3400               	retlw	0
  2748                           
  2749                           ; #config settings
  2750  0000                     
  2751                           	psect	cinit
  2752  0033                     start_initialization:	
  2753  0033                     __initialization:	
  2754                           
  2755                           ; Initialize objects allocated to BANK1
  2756  0033  304B               	movlw	low __pidataBANK1
  2757  0034  0084               	movwf	4
  2758  0035  308F               	movlw	(high __pidataBANK1)| (0+128)
  2759  0036  0085               	movwf	5
  2760  0037  30C6               	movlw	low __pdataBANK1
  2761  0038  0086               	movwf	6
  2762  0039  3000               	movlw	high __pdataBANK1
  2763  003A  0087               	movwf	7
  2764  003B  301E               	movlw	30
  2765  003C  318E  262A  3180   	fcall	init_ram
  2766                           
  2767                           ; Initialize objects allocated to BANK2
  2768  003F  3020               	movlw	low __pidataBANK2
  2769  0040  0084               	movwf	4
  2770  0041  3087               	movlw	(high __pidataBANK2)| (0+128)
  2771  0042  0085               	movwf	5
  2772  0043  3020               	movlw	low __pdataBANK2
  2773  0044  0086               	movwf	6
  2774  0045  3001               	movlw	high __pdataBANK2
  2775  0046  0087               	movwf	7
  2776  0047  303C               	movlw	60
  2777  0048  318E  262A  3180   	fcall	init_ram
  2778                           
  2779                           ; Clear objects allocated to COMMON
  2780  004B  01F0               	clrf	__pbssCOMMON& (0+127)
  2781  004C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2782  004D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2783  004E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2784  004F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2785  0050  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2786                           
  2787                           ; Clear objects allocated to BANK0
  2788  0051  3058               	movlw	low __pbssBANK0
  2789  0052  0084               	movwf	4
  2790  0053  3000               	movlw	high __pbssBANK0
  2791  0054  0085               	movwf	5
  2792  0055  3015               	movlw	21
  2793  0056  318E  2624  3180   	fcall	clear_ram0
  2794                           
  2795                           ; Clear objects allocated to BANK1
  2796  0059  30A0               	movlw	low __pbssBANK1
  2797  005A  0084               	movwf	4
  2798  005B  3000               	movlw	high __pbssBANK1
  2799  005C  0085               	movwf	5
  2800  005D  3026               	movlw	38
  2801  005E  318E  2624         	fcall	clear_ram0
  2802  0060                     end_of_initialization:	
  2803                           ;End of C runtime variable initialization code
  2804                           
  2805  0060                     __end_of__initialization:	
  2806  0060  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2807  0061  0020               	movlb	0
  2808  0062  3183  2BEE         	ljmp	_main	;jump to C main() function
  2809                           
  2810                           	psect	bssCOMMON
  2811  0070                     __pbssCOMMON:	
  2812  0070                     _mTouch_Interval:	
  2813  0070                     	ds	3
  2814  0073                     _count:	
  2815  0073                     	ds	2
  2816  0075                     CPSx_Read@channel:	
  2817  0075                     	ds	1
  2818                           
  2819                           	psect	bssBANK0
  2820  0058                     __pbssBANK0:	
  2821  0058                     _timesum:	
  2822  0058                     	ds	4
  2823  005C                     _countsum:	
  2824  005C                     	ds	4
  2825  0060                     _CPS_Data:	
  2826  0060                     	ds	3
  2827  0063                     _CPS_PreData:	
  2828  0063                     	ds	3
  2829  0066                     _errno:	
  2830  0066                     	ds	2
  2831  0068                     _mode:	
  2832  0068                     	ds	2
  2833  006A                     _VoltageReg:	
  2834  006A                     	ds	2
  2835  006C                     _ConfigReg:	
  2836  006C                     	ds	1
  2837                           
  2838                           	psect	bssBANK1
  2839  00A0                     __pbssBANK1:	
  2840  00A0                     _I2C2_Config:	
  2841  00A0                     	ds	19
  2842  00B3                     _I2C1_Config:	
  2843  00B3                     	ds	19
  2844                           
  2845                           	psect	dataBANK1
  2846  00C6                     __pdataBANK1:	
  2847  00C6                     _DAC_VoltageTable:	
  2848  00C6                     	ds	30
  2849                           
  2850                           	psect	dataBANK2
  2851  0120                     __pdataBANK2:	
  2852  0120                     _H7826_01_Gain:	
  2853  0120                     	ds	30
  2854  013E                     _H7826_Gain:	
  2855  013E                     	ds	30
  2856                           
  2857                           	psect	inittext
  2858  0E2A                     init_ram:	
  2859  0E2A  00FE               	movwf	126
  2860  0E2B                     initloop:	
  2861  0E2B  0012               	moviw fsr0++
  2862  0E2C  001E               	movwi fsr1++
  2863  0E2D  0BFE               	decfsz	126,f
  2864  0E2E  2E2B               	goto	initloop
  2865  0E2F  3400               	retlw	0
  2866                           
  2867                           	psect	clrtext
  2868  0E24                     clear_ram0:	
  2869                           ;	Called with FSR0 containing the base address, and
  2870                           ;	WREG with the size to clear
  2871                           
  2872  0E24  0064               	clrwdt	;clear the watchdog before getting into this loop
  2873  0E25                     clrloop0:	
  2874  0E25  0180               	clrf	0	;clear RAM location pointed to by FSR
  2875  0E26  3101               	addfsr 0,1
  2876  0E27  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2877  0E28  2E25               	goto	clrloop0	;have we reached the end yet?
  2878  0E29  3400               	retlw	0	;all done for this memory range, return
  2879                           
  2880                           	psect	cstackCOMMON
  2881  0076                     __pcstackCOMMON:	
  2882  0076                     ?_LCD_DisplayClear:	
  2883  0076                     ?_Basic_Init:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0076                     ?_mTouch_Read:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0076                     ?_mTouch_IntervalDecrement:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0076                     ??_mTouch_IntervalDecrement:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0076                     ?_Buzzer_Init:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0076                     ?_Buzzer_SetDuty:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0076                     ?_Buzzer_Handler:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0076                     ?_I2C1_PinInit:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0076                     ?_I2C1_Interrupt:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0076                     ??_I2C1_Interrupt:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0076                     ?_I2C2_PinInit:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0076                     ?_I2C2_Interrupt:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0076                     ??_I2C2_Interrupt:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0076                     ?_I2C_CommonInterrupt:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0076                     ?_LCD_WriteData:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0076                     ?_LCD_Init:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0076                     ?_putch:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0076                     ?_LCD_CursorHome:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0076                     ?_DAC_Initialize:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0076                     ?_Timer1_Init:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0076                     ?_Timer1_Count10us:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0076                     ??_Timer1_Count10us:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949  0076                     ?_Timer1_DetectAssignCount:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0076                     ??_Timer1_DetectAssignCount:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955  0076                     ?_Timer4_Init:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0076                     ?_Timer4_Handler:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0076                     ??_Timer4_Handler:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0076                     ?_Timer6_Init:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967  0076                     ?_Timer6_Handler:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970  0076                     ??_Timer6_Handler:	
  2971                           ; 1 bytes @ 0x0
  2972                           
  2973  0076                     ?_mTouch_PortInit:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976  0076                     ?_mTouch_Init:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979  0076                     ?_CPSx_Read:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982  0076                     ??_CPSx_Read:	
  2983                           ; 1 bytes @ 0x0
  2984                           
  2985  0076                     ?_main:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988  0076                     ?_Handler:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991  0076                     Buzzer_SetDuty@duty:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994                           
  2995                           ; 2 bytes @ 0x0
  2996  0076                     	ds	1
  2997  0077                     ??_I2C_CommonInterrupt:	
  2998                           
  2999                           ; 1 bytes @ 0x1
  3000  0077                     	ds	1
  3001  0078                     ??_Buzzer_SetDuty:	
  3002                           
  3003                           ; 1 bytes @ 0x2
  3004  0078                     	ds	2
  3005  007A                     Buzzer_SetDuty@CCP2CON_Pre:	
  3006                           
  3007                           ; 1 bytes @ 0x4
  3008  007A                     	ds	1
  3009  007B                     ??_Buzzer_Handler:	
  3010  007B                     ??_Handler:	
  3011                           ; 1 bytes @ 0x5
  3012                           
  3013                           
  3014                           ; 1 bytes @ 0x5
  3015  007B                     	ds	1
  3016                           
  3017                           	psect	cstackBANK0
  3018  0020                     __pcstackBANK0:	
  3019  0020                     ??_Basic_Init:	
  3020  0020                     ??_Buzzer_Init:	
  3021                           ; 1 bytes @ 0x0
  3022                           
  3023  0020                     ?_Buzzer_MiliSecond:	
  3024                           ; 1 bytes @ 0x0
  3025                           
  3026  0020                     ??_I2C1_PinInit:	
  3027                           ; 1 bytes @ 0x0
  3028                           
  3029  0020                     ?_I2C1_Transmit:	
  3030                           ; 1 bytes @ 0x0
  3031                           
  3032  0020                     ??_I2C2_PinInit:	
  3033                           ; 1 bytes @ 0x0
  3034                           
  3035  0020                     ?_I2C2_Transmit:	
  3036                           ; 1 bytes @ 0x0
  3037                           
  3038  0020                     ??_LCD_WriteData:	
  3039                           ; 1 bytes @ 0x0
  3040                           
  3041  0020                     ??_Timer1_Init:	
  3042                           ; 1 bytes @ 0x0
  3043                           
  3044  0020                     ??_Timer4_Init:	
  3045                           ; 1 bytes @ 0x0
  3046                           
  3047  0020                     ??_Timer6_Init:	
  3048                           ; 1 bytes @ 0x0
  3049                           
  3050  0020                     ??_mTouch_PortInit:	
  3051                           ; 1 bytes @ 0x0
  3052                           
  3053  0020                     ?___lmul:	
  3054                           ; 1 bytes @ 0x0
  3055                           
  3056  0020                     I2C1_Transmit@pData:	
  3057                           ; 4 bytes @ 0x0
  3058                           
  3059  0020                     I2C2_Transmit@pData:	
  3060                           ; 1 bytes @ 0x0
  3061                           
  3062  0020                     Buzzer_MiliSecond@time:	
  3063                           ; 1 bytes @ 0x0
  3064                           
  3065  0020                     ___lmul@multiplier:	
  3066                           ; 2 bytes @ 0x0
  3067                           
  3068                           
  3069                           ; 4 bytes @ 0x0
  3070  0020                     	ds	1
  3071  0021                     ?_I2C1_Setting:	
  3072  0021                     ?_I2C2_Setting:	
  3073                           ; 1 bytes @ 0x1
  3074                           
  3075  0021                     ??_mTouch_Init:	
  3076                           ; 1 bytes @ 0x1
  3077                           
  3078  0021                     I2C1_Setting@mode:	
  3079                           ; 1 bytes @ 0x1
  3080                           
  3081  0021                     I2C1_Transmit@size:	
  3082                           ; 1 bytes @ 0x1
  3083                           
  3084  0021                     I2C2_Setting@mode:	
  3085                           ; 1 bytes @ 0x1
  3086                           
  3087  0021                     I2C2_Transmit@size:	
  3088                           ; 1 bytes @ 0x1
  3089                           
  3090                           
  3091                           ; 1 bytes @ 0x1
  3092  0021                     	ds	1
  3093  0022                     ??_mTouch_Read:	
  3094  0022                     ??_Buzzer_MiliSecond:	
  3095                           ; 1 bytes @ 0x2
  3096                           
  3097  0022                     ??_I2C1_Transmit:	
  3098                           ; 1 bytes @ 0x2
  3099                           
  3100  0022                     ??_I2C2_Transmit:	
  3101                           ; 1 bytes @ 0x2
  3102                           
  3103  0022                     I2C1_Setting@Speed:	
  3104                           ; 1 bytes @ 0x2
  3105                           
  3106  0022                     I2C2_Setting@Speed:	
  3107                           ; 1 bytes @ 0x2
  3108                           
  3109  0022                     LCD_WriteData@point:	
  3110                           ; 1 bytes @ 0x2
  3111                           
  3112                           
  3113                           ; 1 bytes @ 0x2
  3114  0022                     	ds	1
  3115  0023                     ??_LCD_DisplayClear:	
  3116  0023                     ??_I2C1_Setting:	
  3117                           ; 1 bytes @ 0x3
  3118                           
  3119  0023                     ??_I2C2_Setting:	
  3120                           ; 1 bytes @ 0x3
  3121                           
  3122  0023                     ??_putch:	
  3123                           ; 1 bytes @ 0x3
  3124                           
  3125  0023                     ??_LCD_CursorHome:	
  3126                           ; 1 bytes @ 0x3
  3127                           
  3128  0023                     putch@c:	
  3129                           ; 1 bytes @ 0x3
  3130                           
  3131                           
  3132                           ; 1 bytes @ 0x3
  3133  0023                     	ds	1
  3134  0024                     ??_LCD_Init:	
  3135  0024                     I2C1_Setting@address:	
  3136                           ; 1 bytes @ 0x4
  3137                           
  3138  0024                     I2C1_Transmit@address:	
  3139                           ; 1 bytes @ 0x4
  3140                           
  3141  0024                     I2C2_Setting@address:	
  3142                           ; 1 bytes @ 0x4
  3143                           
  3144  0024                     I2C2_Transmit@address:	
  3145                           ; 1 bytes @ 0x4
  3146                           
  3147  0024                     ___lmul@multiplicand:	
  3148                           ; 1 bytes @ 0x4
  3149                           
  3150                           
  3151                           ; 4 bytes @ 0x4
  3152  0024                     	ds	1
  3153  0025                     ?_I2C_Init:	
  3154  0025                     I2C1_Transmit@i:	
  3155                           ; 1 bytes @ 0x5
  3156                           
  3157  0025                     I2C2_Transmit@i:	
  3158                           ; 1 bytes @ 0x5
  3159                           
  3160  0025                     I2C_Init@address:	
  3161                           ; 1 bytes @ 0x5
  3162                           
  3163                           
  3164                           ; 1 bytes @ 0x5
  3165  0025                     	ds	1
  3166  0026                     I2C1_Transmit@i_172:	
  3167  0026                     I2C2_Transmit@i_316:	
  3168                           ; 1 bytes @ 0x6
  3169                           
  3170  0026                     I2C_Init@mode:	
  3171                           ; 1 bytes @ 0x6
  3172                           
  3173                           
  3174                           ; 1 bytes @ 0x6
  3175  0026                     	ds	1
  3176  0027                     I2C1_Transmit@result:	
  3177  0027                     I2C2_Transmit@result:	
  3178                           ; 1 bytes @ 0x7
  3179                           
  3180  0027                     I2C_Init@Speed:	
  3181                           ; 1 bytes @ 0x7
  3182                           
  3183  0027                     mTouch_Read@chan:	
  3184                           ; 1 bytes @ 0x7
  3185                           
  3186                           
  3187                           ; 1 bytes @ 0x7
  3188  0027                     	ds	1
  3189  0028                     ??_I2C_Init:	
  3190  0028                     ?_I2C_Transmit:	
  3191                           ; 1 bytes @ 0x8
  3192                           
  3193  0028                     ??___lmul:	
  3194                           ; 1 bytes @ 0x8
  3195                           
  3196  0028                     I2C_Transmit@address:	
  3197                           ; 1 bytes @ 0x8
  3198                           
  3199  0028                     ___lmul@product:	
  3200                           ; 1 bytes @ 0x8
  3201                           
  3202                           
  3203                           ; 4 bytes @ 0x8
  3204  0028                     	ds	1
  3205  0029                     I2C_Transmit@pData:	
  3206                           
  3207                           ; 1 bytes @ 0x9
  3208  0029                     	ds	1
  3209  002A                     I2C_Init@I2Cx:	
  3210  002A                     I2C_Transmit@size:	
  3211                           ; 1 bytes @ 0xA
  3212                           
  3213                           
  3214                           ; 1 bytes @ 0xA
  3215  002A                     	ds	1
  3216  002B                     ??_I2C_Transmit:	
  3217                           
  3218                           ; 1 bytes @ 0xB
  3219  002B                     	ds	1
  3220  002C                     ?___lldiv:	
  3221  002C                     ___lldiv@divisor:	
  3222                           ; 4 bytes @ 0xC
  3223                           
  3224                           
  3225                           ; 4 bytes @ 0xC
  3226  002C                     	ds	2
  3227  002E                     I2C_Transmit@I2Cx:	
  3228                           
  3229                           ; 1 bytes @ 0xE
  3230  002E                     	ds	1
  3231  002F                     I2C_Transmit@result:	
  3232                           
  3233                           ; 1 bytes @ 0xF
  3234  002F                     	ds	1
  3235  0030                     ??_DAC_Initialize:	
  3236  0030                     ___lldiv@dividend:	
  3237                           ; 1 bytes @ 0x10
  3238                           
  3239                           
  3240                           ; 4 bytes @ 0x10
  3241  0030                     	ds	4
  3242  0034                     ??___lldiv:	
  3243                           
  3244                           ; 1 bytes @ 0x14
  3245  0034                     	ds	1
  3246  0035                     ___lldiv@quotient:	
  3247                           
  3248                           ; 4 bytes @ 0x15
  3249  0035                     	ds	4
  3250  0039                     ___lldiv@counter:	
  3251                           
  3252                           ; 1 bytes @ 0x19
  3253  0039                     	ds	1
  3254  003A                     ?_Timer1_GetCPM:	
  3255  003A                     ?___llmod:	
  3256                           ; 2 bytes @ 0x1A
  3257                           
  3258  003A                     ___llmod@divisor:	
  3259                           ; 4 bytes @ 0x1A
  3260                           
  3261                           
  3262                           ; 4 bytes @ 0x1A
  3263  003A                     	ds	2
  3264  003C                     ??_Timer1_GetCPM:	
  3265                           
  3266                           ; 1 bytes @ 0x1C
  3267  003C                     	ds	2
  3268  003E                     ___llmod@dividend:	
  3269                           
  3270                           ; 4 bytes @ 0x1E
  3271  003E                     	ds	4
  3272  0042                     ??___llmod:	
  3273                           
  3274                           ; 1 bytes @ 0x22
  3275  0042                     	ds	1
  3276  0043                     ___llmod@counter:	
  3277                           
  3278                           ; 1 bytes @ 0x23
  3279  0043                     	ds	1
  3280  0044                     ?_printf:	
  3281  0044                     printf@f:	
  3282                           ; 2 bytes @ 0x24
  3283                           
  3284                           
  3285                           ; 2 bytes @ 0x24
  3286  0044                     	ds	4
  3287  0048                     ??_printf:	
  3288                           
  3289                           ; 1 bytes @ 0x28
  3290  0048                     	ds	6
  3291  004E                     printf@flag:	
  3292                           
  3293                           ; 1 bytes @ 0x2E
  3294  004E                     	ds	1
  3295  004F                     printf@prec:	
  3296                           
  3297                           ; 2 bytes @ 0x2F
  3298  004F                     	ds	2
  3299  0051                     printf@val:	
  3300                           
  3301                           ; 4 bytes @ 0x31
  3302  0051                     	ds	4
  3303  0055                     printf@ap:	
  3304                           
  3305                           ; 1 bytes @ 0x35
  3306  0055                     	ds	1
  3307  0056                     printf@c:	
  3308                           
  3309                           ; 1 bytes @ 0x36
  3310  0056                     	ds	1
  3311  0057                     ??_main:	
  3312                           
  3313                           ; 1 bytes @ 0x37
  3314  0057                     	ds	1
  3315                           
  3316                           	psect	maintext
  3317  03EE                     __pmaintext:	
  3318 ;;
  3319 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3320 ;;
  3321 ;; *************** function _main *****************
  3322 ;; Defined at:
  3323 ;;		line 18 in file "main.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      char 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : B1F/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3337 ;;      Params:         0       0       0       0       0       0
  3338 ;;      Locals:         0       0       0       0       0       0
  3339 ;;      Temps:          0       1       0       0       0       0
  3340 ;;      Totals:         0       1       0       0       0       0
  3341 ;;Total ram usage:        1 bytes
  3342 ;; Hardware stack levels required when called:    7
  3343 ;; This function calls:
  3344 ;;		_Basic_Init
  3345 ;;		_Buzzer_Init
  3346 ;;		_DAC_Initialize
  3347 ;;		_LCD_CursorHome
  3348 ;;		_LCD_Init
  3349 ;;		_Timer1_GetCPM
  3350 ;;		_Timer1_Init
  3351 ;;		_Timer4_Init
  3352 ;;		_Timer6_Init
  3353 ;;		_mTouch_Init
  3354 ;;		_mTouch_Read
  3355 ;;		_printf
  3356 ;; This function is called by:
  3357 ;;		Startup code after reset
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           
  3362                           ;psect for function _main
  3363  03EE                     _main:	
  3364                           
  3365                           ;main.c: 20: Basic_Init();
  3366                           
  3367                           ;incstack = 0
  3368                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3369  03EE  318F  2703  3183   	fcall	_Basic_Init
  3370                           
  3371                           ;main.c: 21: LATA6 = 1;
  3372  03F1  0022               	movlb	2	; select bank2
  3373  03F2  170C               	bsf	12,6	;volatile
  3374                           
  3375                           ;main.c: 22: Buzzer_Init();
  3376  03F3  318F  27AE  3183   	fcall	_Buzzer_Init
  3377                           
  3378                           ;main.c: 23: LCD_Init();
  3379  03F6  3184  246A  3183   	fcall	_LCD_Init
  3380                           
  3381                           ;main.c: 24: Timer1_Init();
  3382  03F9  318F  2730  3183   	fcall	_Timer1_Init
  3383                           
  3384                           ;main.c: 25: TMR1ON = 1;;
  3385  03FC  0020               	movlb	0	; select bank0
  3386  03FD  1418               	bsf	24,0	;volatile
  3387                           
  3388                           ;main.c: 26: mTouch_Init();
  3389  03FE  318E  26DB  3183   	fcall	_mTouch_Init
  3390                           
  3391                           ;main.c: 27: Timer4_Init();
  3392  0401  318E  26C8  3183   	fcall	_Timer4_Init
  3393                           
  3394                           ;main.c: 28: Timer6_Init();
  3395  0404  318E  268A  3183   	fcall	_Timer6_Init
  3396                           
  3397                           ;main.c: 29: DAC_Initialize();
  3398  0407  318F  2769  3183   	fcall	_DAC_Initialize
  3399                           
  3400                           ;main.c: 31: mode.ModeNum = 0;
  3401  040A  0020               	movlb	0	; select bank0
  3402  040B  01E9               	clrf	_mode+1
  3403  040C                     l3897:	
  3404                           ;main.c: 33: while(1)
  3405                           
  3406                           
  3407                           ;main.c: 34: {
  3408                           ;main.c: 35: if(mTouch_Read(2)&&(mode.ModeNum<4-1))
  3409  040C  3002               	movlw	2
  3410  040D  3185  25D4  3183   	fcall	_mTouch_Read
  3411  0410  3A00               	xorlw	0
  3412  0411  1903               	skipnz
  3413  0412  2C1D               	goto	l3903
  3414  0413  3003               	movlw	3
  3415  0414  0020               	movlb	0	; select bank0
  3416  0415  0269               	subwf	_mode+1,w
  3417  0416  1803               	skipnc
  3418  0417  2C1D               	goto	l3903
  3419                           
  3420                           ;main.c: 36: mode.ModeNum++;
  3421  0418  3001               	movlw	1
  3422  0419  00D7               	movwf	??_main
  3423  041A  0857               	movf	??_main,w
  3424  041B  07E9               	addwf	_mode+1,f
  3425  041C  2C2A               	goto	l3909
  3426  041D                     l3903:	
  3427                           
  3428                           ;main.c: 37: else if(mTouch_Read(1)&&(mode.ModeNum>0))
  3429  041D  3001               	movlw	1
  3430  041E  3185  25D4  3183   	fcall	_mTouch_Read
  3431  0421  3A00               	xorlw	0
  3432  0422  1903               	skipnz
  3433  0423  2C2A               	goto	l3909
  3434  0424  0020               	movlb	0	; select bank0
  3435  0425  0869               	movf	_mode+1,w
  3436  0426  1903               	btfsc	3,2
  3437  0427  2C2A               	goto	l3909
  3438                           
  3439                           ;main.c: 38: mode.ModeNum--;
  3440  0428  3001               	movlw	1
  3441  0429  02E9               	subwf	_mode+1,f
  3442  042A                     l3909:	
  3443                           
  3444                           ;main.c: 40: LCD_CursorHome();
  3445  042A  318E  26A8  3183   	fcall	_LCD_CursorHome
  3446                           
  3447                           ;main.c: 41: switch(mode.ModeNum)
  3448  042D  2C5A               	goto	l3921
  3449  042E                     l3911:	
  3450                           ;main.c: 42: {
  3451                           ;main.c: 43: case COUNT:
  3452                           
  3453                           
  3454                           ;main.c: 44: printf("%lu",Timer1_GetCPM());
  3455  042E  30D8               	movlw	low (STR_1| (0+32768))
  3456  042F  0020               	movlb	0	; select bank0
  3457  0430  00C4               	movwf	printf@f
  3458  0431  3081               	movlw	high (STR_1| (0+32768))
  3459  0432  00C5               	movwf	printf@f+1
  3460  0433  3187  278C  3183   	fcall	_Timer1_GetCPM
  3461  0436  0020               	movlb	0	; select bank0
  3462  0437  083B               	movf	?_Timer1_GetCPM+1,w
  3463  0438  00C7               	movwf	?_printf+3
  3464  0439  083A               	movf	?_Timer1_GetCPM,w
  3465  043A  00C6               	movwf	?_printf+2
  3466  043B  3181  21DC  3183   	fcall	_printf
  3467                           
  3468                           ;main.c: 45: break;
  3469  043E  2C0C               	goto	l3897
  3470  043F                     l3913:	
  3471                           ;main.c: 46: case SELECTFUNC:
  3472                           
  3473                           
  3474                           ;main.c: 47: printf("SELECTFUNC");
  3475  043F  30AA               	movlw	low (STR_2| (0+32768))
  3476  0440  0020               	movlb	0	; select bank0
  3477  0441  00C4               	movwf	printf@f
  3478  0442  3080               	movlw	high (STR_2| (0+32768))
  3479  0443  00C5               	movwf	printf@f+1
  3480  0444  3181  21DC  3183   	fcall	_printf
  3481                           
  3482                           ;main.c: 48: break;
  3483  0447  2C0C               	goto	l3897
  3484  0448                     l3915:	
  3485                           ;main.c: 49: case ADJGAIN:
  3486                           
  3487                           
  3488                           ;main.c: 50: printf("ADJGAIN");
  3489  0448  30D7               	movlw	low (STR_3| (0+32768))
  3490  0449  0020               	movlb	0	; select bank0
  3491  044A  00C4               	movwf	printf@f
  3492  044B  3080               	movlw	high (STR_3| (0+32768))
  3493  044C  00C5               	movwf	printf@f+1
  3494  044D  3181  21DC  3183   	fcall	_printf
  3495                           
  3496                           ;main.c: 51: break;
  3497  0450  2C0C               	goto	l3897
  3498  0451                     l3917:	
  3499                           ;main.c: 52: case PMTDEVICE:
  3500                           
  3501                           
  3502                           ;main.c: 53: printf("PMTDEVICE");
  3503  0451  30B5               	movlw	low (STR_4| (0+32768))
  3504  0452  0020               	movlb	0	; select bank0
  3505  0453  00C4               	movwf	printf@f
  3506  0454  3080               	movlw	high (STR_4| (0+32768))
  3507  0455  00C5               	movwf	printf@f+1
  3508  0456  3181  21DC  3183   	fcall	_printf
  3509                           
  3510                           ;main.c: 55: }
  3511                           
  3512                           ;main.c: 54: break;
  3513  0459  2C0C               	goto	l3897
  3514  045A                     l3921:	
  3515  045A  0020               	movlb	0	; select bank0
  3516  045B  0869               	movf	_mode+1,w
  3517                           
  3518                           ; Switch size 1, requested type "space"
  3519                           ; Number of cases is 4, Range of values is 0 to 3
  3520                           ; switch strategies available:
  3521                           ; Name         Instructions Cycles
  3522                           ; simple_byte           13     7 (average)
  3523                           ; direct_byte           14     6 (fixed)
  3524                           ; jumptable            260     6 (fixed)
  3525                           ;	Chosen strategy is simple_byte
  3526  045C  3A00               	xorlw	0	; case 0
  3527  045D  1903               	skipnz
  3528  045E  2C2E               	goto	l3911
  3529  045F  3A01               	xorlw	1	; case 1
  3530  0460  1903               	skipnz
  3531  0461  2C3F               	goto	l3913
  3532  0462  3A03               	xorlw	3	; case 2
  3533  0463  1903               	skipnz
  3534  0464  2C48               	goto	l3915
  3535  0465  3A01               	xorlw	1	; case 3
  3536  0466  1903               	skipnz
  3537  0467  2C51               	goto	l3917
  3538  0468  2C0C               	goto	l3897
  3539  0469  2C0C               	goto	l3897
  3540  046A                     __end_of_main:	
  3541                           ;main.c: 56: }
  3542                           ;main.c: 57: return 0;
  3543                           ;	Return value of _main is never used
  3544                           
  3545                           
  3546                           	psect	text1
  3547  01DC                     __ptext1:	
  3548 ;; *************** function _printf *****************
  3549 ;; Defined at:
  3550 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  f               2   36[BANK0 ] PTR const unsigned char 
  3553 ;;		 -> STR_4(10), STR_3(8), STR_2(11), STR_1(4), 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  val             4   49[BANK0 ] unsigned long 
  3556 ;;  tmpval          4    0        struct .
  3557 ;;  prec            2   47[BANK0 ] int 
  3558 ;;  cp              2    0        PTR const unsigned char 
  3559 ;;  len             2    0        unsigned int 
  3560 ;;  c               1   54[BANK0 ] char 
  3561 ;;  ap              1   53[BANK0 ] PTR void [1]
  3562 ;;		 -> ?_printf(2), 
  3563 ;;  flag            1   46[BANK0 ] unsigned char 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  2   36[BANK0 ] int 
  3566 ;; Registers used:
  3567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3573 ;;      Params:         0       4       0       0       0       0
  3574 ;;      Locals:         0       9       0       0       0       0
  3575 ;;      Temps:          0       6       0       0       0       0
  3576 ;;      Totals:         0      19       0       0       0       0
  3577 ;;Total ram usage:       19 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    5
  3580 ;; This function calls:
  3581 ;;		___lldiv
  3582 ;;		___llmod
  3583 ;;		_putch
  3584 ;; This function is called by:
  3585 ;;		_main
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           
  3590                           ;psect for function _printf
  3591  01DC                     _printf:	
  3592                           
  3593                           ;doprnt.c: 466: va_list ap;
  3594                           ;doprnt.c: 499: signed char c;
  3595                           ;doprnt.c: 504: int prec;
  3596                           ;doprnt.c: 508: unsigned char flag;
  3597                           ;doprnt.c: 523: union {
  3598                           ;doprnt.c: 524: unsigned long vd;
  3599                           ;doprnt.c: 525: double integ;
  3600                           ;doprnt.c: 526: } tmpval;
  3601                           ;doprnt.c: 528: unsigned long val;
  3602                           ;doprnt.c: 529: unsigned len;
  3603                           ;doprnt.c: 530: const char * cp;
  3604                           ;doprnt.c: 533: *ap = __va_start();
  3605                           
  3606                           ;incstack = 0
  3607                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3608  01DC  3046               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3609  01DD  0020               	movlb	0	; select bank0
  3610  01DE  00C8               	movwf	??_printf
  3611  01DF  0848               	movf	??_printf,w
  3612  01E0  00D5               	movwf	printf@ap
  3613  01E1                     l3843:	
  3614                           ;doprnt.c: 536: while(c = *f++) {
  3615                           
  3616  01E1  0020               	movlb	0	; select bank0
  3617  01E2  0845               	movf	printf@f+1,w
  3618  01E3  00C9               	movwf	??_printf+1
  3619  01E4  0844               	movf	printf@f,w
  3620  01E5  00C8               	movwf	??_printf
  3621  01E6  0AC4               	incf	printf@f,f
  3622  01E7  1903               	skipnz
  3623  01E8  0AC5               	incf	printf@f+1,f
  3624  01E9  0848               	movf	??_printf,w
  3625  01EA  0084               	movwf	4
  3626  01EB  0849               	movf	??_printf+1,w
  3627  01EC  0085               	movwf	5
  3628  01ED  0800               	movf	0,w	;code access
  3629  01EE  00CA               	movwf	??_printf+2
  3630  01EF  084A               	movf	??_printf+2,w
  3631  01F0  00D6               	movwf	printf@c
  3632  01F1  0856               	movf	printf@c,w
  3633  01F2  1903               	btfsc	3,2
  3634  01F3  0008               	return
  3635                           
  3636                           ;doprnt.c: 538: if(c != '%')
  3637  01F4  3025               	movlw	37
  3638  01F5  0656               	xorwf	printf@c,w
  3639  01F6  1903               	btfsc	3,2
  3640  01F7  29FD               	goto	l3807
  3641                           
  3642                           ;doprnt.c: 540: {
  3643                           ;doprnt.c: 541: (putch(c) );
  3644  01F8  0856               	movf	printf@c,w
  3645  01F9  318E  2630  3181   	fcall	_putch
  3646                           
  3647                           ;doprnt.c: 542: continue;
  3648  01FC  29E1               	goto	l3843
  3649  01FD                     l3807:	
  3650                           
  3651                           ;doprnt.c: 543: }
  3652                           ;doprnt.c: 548: flag = 0;
  3653  01FD  0020               	movlb	0	; select bank0
  3654  01FE  01CE               	clrf	printf@flag
  3655                           
  3656                           ;doprnt.c: 635: switch(c = *f++) {
  3657                           
  3658                           ;doprnt.c: 633: loop:
  3659  01FF  2A07               	goto	l3813
  3660  0200                     l678:	
  3661                           ;doprnt.c: 641: case 'l':
  3662                           
  3663                           ;doprnt.c: 638: goto alldone;
  3664                           
  3665                           ;doprnt.c: 637: case 0:
  3666                           
  3667                           
  3668                           ;doprnt.c: 643: flag |= 0x10;
  3669  0200  164E               	bsf	printf@flag,4
  3670                           
  3671                           ;doprnt.c: 644: goto loop;
  3672  0201  2A07               	goto	l3813
  3673  0202                     l3809:	
  3674                           ;doprnt.c: 817: case 'u':
  3675                           
  3676                           ;doprnt.c: 813: continue;
  3677                           
  3678                           ;doprnt.c: 802: default:
  3679                           
  3680                           
  3681                           ;doprnt.c: 818: flag |= 0xC0;
  3682  0202  30C0               	movlw	192
  3683  0203  00C8               	movwf	??_printf
  3684  0204  0848               	movf	??_printf,w
  3685  0205  04CE               	iorwf	printf@flag,f
  3686                           
  3687                           ;doprnt.c: 822: }
  3688                           
  3689                           ;doprnt.c: 819: break;
  3690  0206  2A1E               	goto	l681
  3691  0207                     l3813:	
  3692  0207  0845               	movf	printf@f+1,w
  3693  0208  00C9               	movwf	??_printf+1
  3694  0209  0844               	movf	printf@f,w
  3695  020A  00C8               	movwf	??_printf
  3696  020B  0AC4               	incf	printf@f,f
  3697  020C  1903               	skipnz
  3698  020D  0AC5               	incf	printf@f+1,f
  3699  020E  0848               	movf	??_printf,w
  3700  020F  0084               	movwf	4
  3701  0210  0849               	movf	??_printf+1,w
  3702  0211  0085               	movwf	5
  3703  0212  0800               	movf	0,w	;code access
  3704  0213  00D6               	movwf	printf@c
  3705                           
  3706                           ; Switch size 1, requested type "space"
  3707                           ; Number of cases is 3, Range of values is 0 to 117
  3708                           ; switch strategies available:
  3709                           ; Name         Instructions Cycles
  3710                           ; simple_byte           10     6 (average)
  3711                           ; direct_byte          242     6 (fixed)
  3712                           ; jumptable            260     6 (fixed)
  3713                           ;	Chosen strategy is simple_byte
  3714  0214  3A00               	xorlw	0	; case 0
  3715  0215  1903               	skipnz
  3716  0216  2ABE               	goto	l691
  3717  0217  3A6C               	xorlw	108	; case 108
  3718  0218  1903               	skipnz
  3719  0219  2A00               	goto	l678
  3720  021A  3A19               	xorlw	25	; case 117
  3721  021B  1903               	skipnz
  3722  021C  2A02               	goto	l3809
  3723  021D  29E1               	goto	l3843
  3724  021E                     l681:	
  3725                           
  3726                           ;doprnt.c: 1273: {
  3727                           ;doprnt.c: 1281: if(flag & 0x10)
  3728  021E  1E4E               	btfss	printf@flag,4
  3729  021F  2A2D               	goto	l3819
  3730                           
  3731                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3732  0220  0855               	movf	printf@ap,w
  3733  0221  0086               	movwf	6
  3734  0222  0187               	clrf	7
  3735  0223  3F40               	moviw [0]fsr1
  3736  0224  00D1               	movwf	printf@val
  3737  0225  3F41               	moviw [1]fsr1
  3738  0226  00D2               	movwf	printf@val+1
  3739  0227  3F42               	moviw [2]fsr1
  3740  0228  00D3               	movwf	printf@val+2
  3741  0229  3F43               	moviw [3]fsr1
  3742  022A  00D4               	movwf	printf@val+3
  3743  022B  3004               	movlw	4
  3744  022C  2A3B               	goto	L1
  3745  022D                     l3819:	
  3746                           
  3747                           ;doprnt.c: 1283: else
  3748                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3749  022D  0855               	movf	printf@ap,w
  3750  022E  0086               	movwf	6
  3751  022F  0187               	clrf	7
  3752  0230  3F40               	moviw [0]fsr1
  3753  0231  00C8               	movwf	??_printf
  3754  0232  3F41               	moviw [1]fsr1
  3755  0233  00C9               	movwf	??_printf+1
  3756  0234  0848               	movf	??_printf,w
  3757  0235  00D1               	movwf	printf@val
  3758  0236  0849               	movf	??_printf+1,w
  3759  0237  00D2               	movwf	printf@val+1
  3760  0238  01D3               	clrf	printf@val+2
  3761  0239  01D4               	clrf	printf@val+3
  3762  023A  3002               	movlw	2
  3763  023B                     L1:	
  3764  023B  00C8               	movwf	??_printf
  3765  023C  0848               	movf	??_printf,w
  3766  023D  07D5               	addwf	printf@ap,f
  3767                           
  3768                           ;doprnt.c: 1287: }
  3769                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3770  023E  01D6               	clrf	printf@c
  3771  023F  0AD6               	incf	printf@c,f
  3772  0240  300A               	movlw	10
  3773  0241  0656               	xorwf	printf@c,w
  3774  0242  1903               	btfsc	3,2
  3775  0243  2A71               	goto	l3835
  3776  0244                     l3829:	
  3777                           
  3778                           ;doprnt.c: 1306: if(val < dpowers[c])
  3779  0244  0856               	movf	printf@c,w
  3780  0245  00C8               	movwf	??_printf
  3781  0246  01C9               	clrf	??_printf+1
  3782  0247  35C8               	lslf	??_printf,f
  3783  0248  0DC9               	rlf	??_printf+1,f
  3784  0249  35C8               	lslf	??_printf,f
  3785  024A  0DC9               	rlf	??_printf+1,f
  3786  024B  3064               	movlw	low (_dpowers| (0+32768))
  3787  024C  0748               	addwf	??_printf,w
  3788  024D  0084               	movwf	4
  3789  024E  3080               	movlw	high (_dpowers| (0+32768))
  3790  024F  3D49               	addwfc	??_printf+1,w
  3791  0250  0085               	movwf	5
  3792  0251  3F00               	moviw [0]fsr0
  3793  0252  00CA               	movwf	??_printf+2
  3794  0253  3F01               	moviw [1]fsr0
  3795  0254  00CB               	movwf	??_printf+3
  3796  0255  3F02               	moviw [2]fsr0
  3797  0256  00CC               	movwf	??_printf+4
  3798  0257  3F03               	moviw [3]fsr0
  3799  0258  00CD               	movwf	??_printf+5
  3800  0259  084D               	movf	??_printf+5,w
  3801  025A  0254               	subwf	printf@val+3,w
  3802  025B  1D03               	skipz
  3803  025C  2A67               	goto	u3745
  3804  025D  084C               	movf	??_printf+4,w
  3805  025E  0253               	subwf	printf@val+2,w
  3806  025F  1D03               	skipz
  3807  0260  2A67               	goto	u3745
  3808  0261  084B               	movf	??_printf+3,w
  3809  0262  0252               	subwf	printf@val+1,w
  3810  0263  1D03               	skipz
  3811  0264  2A67               	goto	u3745
  3812  0265  084A               	movf	??_printf+2,w
  3813  0266  0251               	subwf	printf@val,w
  3814  0267                     u3745:	
  3815  0267  1C03               	btfss	3,0
  3816  0268  2A71               	goto	l3835
  3817                           
  3818                           ;doprnt.c: 1307: break;
  3819  0269  3001               	movlw	1
  3820  026A  00C8               	movwf	??_printf
  3821  026B  0848               	movf	??_printf,w
  3822  026C  07D6               	addwf	printf@c,f
  3823  026D  300A               	movlw	10
  3824  026E  0656               	xorwf	printf@c,w
  3825  026F  1D03               	btfss	3,2
  3826  0270  2A44               	goto	l3829
  3827  0271                     l3835:	
  3828                           
  3829                           ;doprnt.c: 1422: {
  3830                           ;doprnt.c: 1469: }
  3831                           ;doprnt.c: 1472: prec = c;
  3832  0271  0856               	movf	printf@c,w
  3833  0272  00CF               	movwf	printf@prec
  3834  0273  01D0               	clrf	printf@prec+1
  3835  0274  1BCF               	btfsc	printf@prec,7
  3836  0275  03D0               	decf	printf@prec+1,f
  3837  0276                     l3841:	
  3838                           ;doprnt.c: 1474: while(prec--) {
  3839                           
  3840  0276  30FF               	movlw	255
  3841  0277  0020               	movlb	0	; select bank0
  3842  0278  07CF               	addwf	printf@prec,f
  3843  0279  30FF               	movlw	255
  3844  027A  3DD0               	addwfc	printf@prec+1,f
  3845  027B  0A4F               	incf	printf@prec,w
  3846  027C  1903               	btfsc	3,2
  3847  027D  0A50               	incf	printf@prec+1,w
  3848  027E  1903               	btfsc	3,2
  3849  027F  29E1               	goto	l3843
  3850                           
  3851                           ;doprnt.c: 1478: {
  3852                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3853  0280  3000               	movlw	0
  3854  0281  00BD               	movwf	___llmod@divisor+3
  3855  0282  3000               	movlw	0
  3856  0283  00BC               	movwf	___llmod@divisor+2
  3857  0284  3000               	movlw	0
  3858  0285  00BB               	movwf	___llmod@divisor+1
  3859  0286  300A               	movlw	10
  3860  0287  00BA               	movwf	___llmod@divisor
  3861  0288  0850               	movf	printf@prec+1,w
  3862  0289  0085               	movwf	5
  3863  028A  084F               	movf	printf@prec,w
  3864  028B  0084               	movwf	4
  3865  028C  3584               	lslf	4,f
  3866  028D  0D85               	rlf	5,f
  3867  028E  3584               	lslf	4,f
  3868  028F  0D85               	rlf	5,f
  3869  0290  3064               	movlw	low (_dpowers| (0+32768))
  3870  0291  0784               	addwf	4,f
  3871  0292  3080               	movlw	high (_dpowers| (0+32768))
  3872  0293  3D85               	addwfc	5,f
  3873  0294  3F00               	moviw [0]fsr0
  3874  0295  00AC               	movwf	___lldiv@divisor
  3875  0296  3F01               	moviw [1]fsr0
  3876  0297  00AD               	movwf	___lldiv@divisor+1
  3877  0298  3F02               	moviw [2]fsr0
  3878  0299  00AE               	movwf	___lldiv@divisor+2
  3879  029A  3F03               	moviw [3]fsr0
  3880  029B  00AF               	movwf	___lldiv@divisor+3
  3881  029C  0854               	movf	printf@val+3,w
  3882  029D  00B3               	movwf	___lldiv@dividend+3
  3883  029E  0853               	movf	printf@val+2,w
  3884  029F  00B2               	movwf	___lldiv@dividend+2
  3885  02A0  0852               	movf	printf@val+1,w
  3886  02A1  00B1               	movwf	___lldiv@dividend+1
  3887  02A2  0851               	movf	printf@val,w
  3888  02A3  00B0               	movwf	___lldiv@dividend
  3889  02A4  3185  2581  3181   	fcall	___lldiv
  3890  02A7  0020               	movlb	0	; select bank0
  3891  02A8  082F               	movf	?___lldiv+3,w
  3892  02A9  00C1               	movwf	___llmod@dividend+3
  3893  02AA  082E               	movf	?___lldiv+2,w
  3894  02AB  00C0               	movwf	___llmod@dividend+2
  3895  02AC  082D               	movf	?___lldiv+1,w
  3896  02AD  00BF               	movwf	___llmod@dividend+1
  3897  02AE  082C               	movf	?___lldiv,w
  3898  02AF  00BE               	movwf	___llmod@dividend
  3899  02B0  3186  26A0  3181   	fcall	___llmod
  3900  02B3  0020               	movlb	0	; select bank0
  3901  02B4  083A               	movf	?___llmod,w
  3902  02B5  3E30               	addlw	48
  3903  02B6  00C8               	movwf	??_printf
  3904  02B7  0848               	movf	??_printf,w
  3905  02B8  00D6               	movwf	printf@c
  3906                           
  3907                           ;doprnt.c: 1523: }
  3908                           ;doprnt.c: 1524: (putch(c) );
  3909  02B9  0856               	movf	printf@c,w
  3910  02BA  318E  2630  3181   	fcall	_putch
  3911  02BD  2A76               	goto	l3841
  3912  02BE                     l691:	
  3913                           ;doprnt.c: 1540: return 0;
  3914                           ;	Return value of _printf is never used
  3915                           
  3916                           ;doprnt.c: 1525: }
  3917                           ;doprnt.c: 1533: }
  3918                           ;doprnt.c: 1535: alldone:
  3919                           
  3920  02BE  0008               	return
  3921  02BF                     __end_of_printf:	
  3922                           
  3923                           	psect	text2
  3924  0E30                     __ptext2:	
  3925 ;; *************** function _putch *****************
  3926 ;; Defined at:
  3927 ;;		line 64 in file "LCD.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  c               1    wreg     unsigned char 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  c               1    3[BANK0 ] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0, pclath, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3941 ;;      Params:         0       0       0       0       0       0
  3942 ;;      Locals:         0       1       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0
  3944 ;;      Totals:         0       1       0       0       0       0
  3945 ;;Total ram usage:        1 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    4
  3948 ;; This function calls:
  3949 ;;		_LCD_WriteData
  3950 ;; This function is called by:
  3951 ;;		_printf
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function _putch
  3957  0E30                     _putch:	
  3958                           
  3959                           ;incstack = 0
  3960                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3961                           ;putch@c stored from wreg
  3962  0E30  0020               	movlb	0	; select bank0
  3963  0E31  00A3               	movwf	putch@c
  3964                           
  3965                           ;LCD.c: 66: LATA3 = 1;
  3966  0E32  0022               	movlb	2	; select bank2
  3967  0E33  158C               	bsf	12,3	;volatile
  3968                           
  3969                           ;LCD.c: 67: LCD_WriteData(c);
  3970  0E34  0020               	movlb	0	; select bank0
  3971  0E35  0823               	movf	putch@c,w
  3972  0E36  3186  26E3         	fcall	_LCD_WriteData
  3973  0E38  0008               	return
  3974  0E39                     __end_of_putch:	
  3975                           
  3976                           	psect	text3
  3977  06A0                     __ptext3:	
  3978 ;; *************** function ___llmod *****************
  3979 ;; Defined at:
  3980 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  divisor         4   26[BANK0 ] unsigned long 
  3983 ;;  dividend        4   30[BANK0 ] unsigned long 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;  counter         1   35[BANK0 ] unsigned char 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  4   26[BANK0 ] unsigned long 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3995 ;;      Params:         0       8       0       0       0       0
  3996 ;;      Locals:         0       1       0       0       0       0
  3997 ;;      Temps:          0       1       0       0       0       0
  3998 ;;      Totals:         0      10       0       0       0       0
  3999 ;;Total ram usage:       10 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    3
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_printf
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           
  4010                           ;psect for function ___llmod
  4011  06A0                     ___llmod:	
  4012                           
  4013                           ;incstack = 0
  4014                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4015  06A0  0020               	movlb	0	; select bank0
  4016  06A1  083D               	movf	___llmod@divisor+3,w
  4017  06A2  043C               	iorwf	___llmod@divisor+2,w
  4018  06A3  043B               	iorwf	___llmod@divisor+1,w
  4019  06A4  043A               	iorwf	___llmod@divisor,w
  4020  06A5  1903               	skipnz
  4021  06A6  2EDA               	goto	l3605
  4022  06A7  01C3               	clrf	___llmod@counter
  4023  06A8  0AC3               	incf	___llmod@counter,f
  4024  06A9                     l3595:	
  4025  06A9  1BBD               	btfsc	___llmod@divisor+3,7
  4026  06AA  2EB7               	goto	l3597
  4027  06AB  3001               	movlw	1
  4028  06AC                     u3635:	
  4029  06AC  35BA               	lslf	___llmod@divisor,f
  4030  06AD  0DBB               	rlf	___llmod@divisor+1,f
  4031  06AE  0DBC               	rlf	___llmod@divisor+2,f
  4032  06AF  0DBD               	rlf	___llmod@divisor+3,f
  4033  06B0  0B89               	decfsz	9,f
  4034  06B1  2EAC               	goto	u3635
  4035  06B2  3001               	movlw	1
  4036  06B3  00C2               	movwf	??___llmod
  4037  06B4  0842               	movf	??___llmod,w
  4038  06B5  07C3               	addwf	___llmod@counter,f
  4039  06B6  2EA9               	goto	l3595
  4040  06B7                     l3597:	
  4041  06B7  083D               	movf	___llmod@divisor+3,w
  4042  06B8  0241               	subwf	___llmod@dividend+3,w
  4043  06B9  1D03               	skipz
  4044  06BA  2EC5               	goto	u3655
  4045  06BB  083C               	movf	___llmod@divisor+2,w
  4046  06BC  0240               	subwf	___llmod@dividend+2,w
  4047  06BD  1D03               	skipz
  4048  06BE  2EC5               	goto	u3655
  4049  06BF  083B               	movf	___llmod@divisor+1,w
  4050  06C0  023F               	subwf	___llmod@dividend+1,w
  4051  06C1  1D03               	skipz
  4052  06C2  2EC5               	goto	u3655
  4053  06C3  083A               	movf	___llmod@divisor,w
  4054  06C4  023E               	subwf	___llmod@dividend,w
  4055  06C5                     u3655:	
  4056  06C5  1C03               	skipc
  4057  06C6  2ECF               	goto	l3601
  4058  06C7  083A               	movf	___llmod@divisor,w
  4059  06C8  02BE               	subwf	___llmod@dividend,f
  4060  06C9  083B               	movf	___llmod@divisor+1,w
  4061  06CA  3BBF               	subwfb	___llmod@dividend+1,f
  4062  06CB  083C               	movf	___llmod@divisor+2,w
  4063  06CC  3BC0               	subwfb	___llmod@dividend+2,f
  4064  06CD  083D               	movf	___llmod@divisor+3,w
  4065  06CE  3BC1               	subwfb	___llmod@dividend+3,f
  4066  06CF                     l3601:	
  4067  06CF  3001               	movlw	1
  4068  06D0                     u3665:	
  4069  06D0  36BD               	lsrf	___llmod@divisor+3,f
  4070  06D1  0CBC               	rrf	___llmod@divisor+2,f
  4071  06D2  0CBB               	rrf	___llmod@divisor+1,f
  4072  06D3  0CBA               	rrf	___llmod@divisor,f
  4073  06D4  0B89               	decfsz	9,f
  4074  06D5  2ED0               	goto	u3665
  4075  06D6  3001               	movlw	1
  4076  06D7  02C3               	subwf	___llmod@counter,f
  4077  06D8  1D03               	btfss	3,2
  4078  06D9  2EB7               	goto	l3597
  4079  06DA                     l3605:	
  4080  06DA  0841               	movf	___llmod@dividend+3,w
  4081  06DB  00BD               	movwf	?___llmod+3
  4082  06DC  0840               	movf	___llmod@dividend+2,w
  4083  06DD  00BC               	movwf	?___llmod+2
  4084  06DE  083F               	movf	___llmod@dividend+1,w
  4085  06DF  00BB               	movwf	?___llmod+1
  4086  06E0  083E               	movf	___llmod@dividend,w
  4087  06E1  00BA               	movwf	?___llmod
  4088  06E2  0008               	return
  4089  06E3                     __end_of___llmod:	
  4090                           
  4091                           	psect	text4
  4092  05D4                     __ptext4:	
  4093 ;; *************** function _mTouch_Read *****************
  4094 ;; Defined at:
  4095 ;;		line 109 in file "main.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  chan            1    wreg     unsigned char 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  chan            1    7[BANK0 ] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      unsigned char 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4109 ;;      Params:         0       0       0       0       0       0
  4110 ;;      Locals:         0       1       0       0       0       0
  4111 ;;      Temps:          0       5       0       0       0       0
  4112 ;;      Totals:         0       6       0       0       0       0
  4113 ;;Total ram usage:        6 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    4
  4116 ;; This function calls:
  4117 ;;		_Buzzer_MiliSecond
  4118 ;; This function is called by:
  4119 ;;		_main
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           
  4124                           ;psect for function _mTouch_Read
  4125  05D4                     _mTouch_Read:	
  4126                           
  4127                           ;incstack = 0
  4128                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4129                           ;mTouch_Read@chan stored from wreg
  4130  05D4  0020               	movlb	0	; select bank0
  4131  05D5  00A7               	movwf	mTouch_Read@chan
  4132                           
  4133                           ;main.c: 111: if(chan>2)return 0;
  4134  05D6  3003               	movlw	3
  4135  05D7  0227               	subwf	mTouch_Read@chan,w
  4136  05D8  1C03               	skipc
  4137  05D9  2DDC               	goto	l3785
  4138  05DA  3000               	movlw	0
  4139  05DB  0008               	return
  4140  05DC                     l3785:	
  4141                           
  4142                           ;main.c: 113: if(((CPS_PreData[chan]-CPS_Data[chan])>100)&&!mTouch_Interval[chan])
  4143  05DC  0827               	movf	mTouch_Read@chan,w
  4144  05DD  3E60               	addlw	(low (_CPS_Data| 0))& (0+255)
  4145  05DE  0086               	movwf	6
  4146  05DF  0187               	clrf	7
  4147  05E0  0801               	movf	1,w
  4148  05E1  00A2               	movwf	??_mTouch_Read
  4149  05E2  01A3               	clrf	??_mTouch_Read+1
  4150  05E3  09A2               	comf	??_mTouch_Read,f
  4151  05E4  09A3               	comf	??_mTouch_Read+1,f
  4152  05E5  0AA2               	incf	??_mTouch_Read,f
  4153  05E6  1903               	skipnz
  4154  05E7  0AA3               	incf	??_mTouch_Read+1,f
  4155  05E8  0827               	movf	mTouch_Read@chan,w
  4156  05E9  3E63               	addlw	(low (_CPS_PreData| 0))& (0+255)
  4157  05EA  0086               	movwf	6
  4158  05EB  0187               	clrf	7
  4159  05EC  0801               	movf	1,w
  4160  05ED  0722               	addwf	??_mTouch_Read,w
  4161  05EE  00A4               	movwf	??_mTouch_Read+2
  4162  05EF  0823               	movf	??_mTouch_Read+1,w
  4163  05F0  1803               	skipnc
  4164  05F1  0A23               	incf	??_mTouch_Read+1,w
  4165  05F2  00A5               	movwf	??_mTouch_Read+3
  4166  05F3  0825               	movf	??_mTouch_Read+3,w
  4167  05F4  3A80               	xorlw	128
  4168  05F5  00A6               	movwf	??_mTouch_Read+4
  4169  05F6  3080               	movlw	128
  4170  05F7  0226               	subwf	??_mTouch_Read+4,w
  4171  05F8  1D03               	skipz
  4172  05F9  2DFC               	goto	u3695
  4173  05FA  3065               	movlw	101
  4174  05FB  0224               	subwf	??_mTouch_Read+2,w
  4175  05FC                     u3695:	
  4176  05FC  1C03               	skipc
  4177  05FD  2E16               	goto	l3797
  4178  05FE  0020               	movlb	0	; select bank0
  4179  05FF  0827               	movf	mTouch_Read@chan,w
  4180  0600  3E70               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4181  0601  0086               	movwf	6
  4182  0602  0187               	clrf	7
  4183  0603  0801               	movf	1,w
  4184  0604  1D03               	btfss	3,2
  4185  0605  2E16               	goto	l3797
  4186                           
  4187                           ;main.c: 114: {
  4188                           ;main.c: 115: mTouch_Interval[chan] = 100;
  4189  0606  3064               	movlw	100
  4190  0607  00A2               	movwf	??_mTouch_Read
  4191  0608  0827               	movf	mTouch_Read@chan,w
  4192  0609  3E70               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4193  060A  0086               	movwf	6
  4194  060B  0187               	clrf	7
  4195  060C  0822               	movf	??_mTouch_Read,w
  4196  060D  0081               	movwf	1
  4197                           
  4198                           ;main.c: 116: Buzzer_MiliSecond(100);
  4199  060E  3064               	movlw	100
  4200  060F  00A0               	movwf	Buzzer_MiliSecond@time
  4201  0610  3000               	movlw	0
  4202  0611  00A1               	movwf	Buzzer_MiliSecond@time+1
  4203  0612  318E  2643         	fcall	_Buzzer_MiliSecond
  4204                           
  4205                           ;main.c: 117: return 1;
  4206  0614  3001               	movlw	1
  4207  0615  0008               	return
  4208  0616                     l3797:	
  4209                           
  4210                           ;main.c: 118: }
  4211                           ;main.c: 119: return 0;
  4212  0616  3000               	movlw	0
  4213  0617  0008               	return
  4214  0618                     __end_of_mTouch_Read:	
  4215                           
  4216                           	psect	text5
  4217  0E43                     __ptext5:	
  4218 ;; *************** function _Buzzer_MiliSecond *****************
  4219 ;; Defined at:
  4220 ;;		line 38 in file "Buzzer.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  time            2    0[BANK0 ] unsigned int 
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		wreg, status,2, status,0
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4234 ;;      Params:         0       2       0       0       0       0
  4235 ;;      Locals:         0       0       0       0       0       0
  4236 ;;      Temps:          0       0       0       0       0       0
  4237 ;;      Totals:         0       2       0       0       0       0
  4238 ;;Total ram usage:        2 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    3
  4241 ;; This function calls:
  4242 ;;		Nothing
  4243 ;; This function is called by:
  4244 ;;		_mTouch_Read
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           
  4249                           ;psect for function _Buzzer_MiliSecond
  4250  0E43                     _Buzzer_MiliSecond:	
  4251                           
  4252                           ;Buzzer.c: 40: if(count==0)
  4253                           
  4254                           ;incstack = 0
  4255                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  4256  0E43  0873               	movf	_count,w
  4257  0E44  0474               	iorwf	_count+1,w
  4258  0E45  1D03               	btfss	3,2
  4259  0E46  0008               	return
  4260                           
  4261                           ;Buzzer.c: 41: count = time;
  4262  0E47  0020               	movlb	0	; select bank0
  4263  0E48  0821               	movf	Buzzer_MiliSecond@time+1,w
  4264  0E49  00F4               	movwf	_count+1
  4265  0E4A  0820               	movf	Buzzer_MiliSecond@time,w
  4266  0E4B  00F3               	movwf	_count
  4267  0E4C  0008               	return
  4268  0E4D                     __end_of_Buzzer_MiliSecond:	
  4269                           
  4270                           	psect	text6
  4271  0EDB                     __ptext6:	
  4272 ;; *************** function _mTouch_Init *****************
  4273 ;; Defined at:
  4274 ;;		line 12 in file "mTouch.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, status,2, status,0, pclath, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4288 ;;      Params:         0       0       0       0       0       0
  4289 ;;      Locals:         0       0       0       0       0       0
  4290 ;;      Temps:          0       1       0       0       0       0
  4291 ;;      Totals:         0       1       0       0       0       0
  4292 ;;Total ram usage:        1 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    4
  4295 ;; This function calls:
  4296 ;;		_mTouch_PortInit
  4297 ;; This function is called by:
  4298 ;;		_main
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           
  4303                           ;psect for function _mTouch_Init
  4304  0EDB                     _mTouch_Init:	
  4305                           
  4306                           ;mTouch.c: 14: mTouch_PortInit();
  4307                           
  4308                           ;incstack = 0
  4309                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4310  0EDB  318E  267D         	fcall	_mTouch_PortInit
  4311                           
  4312                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4313  0EDD  0021               	movlb	1	; select bank1
  4314  0EDE  0815               	movf	21,w	;volatile
  4315                           
  4316                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4317  0EDF  1595               	bsf	21,3	;volatile
  4318                           
  4319                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4320  0EE0  1695               	bsf	21,5	;volatile
  4321                           
  4322                           ;mTouch.c: 20: TMR0 = 0x00;
  4323  0EE1  0020               	movlb	0	; select bank0
  4324  0EE2  0195               	clrf	21	;volatile
  4325                           
  4326                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4327  0EE3  141E               	bsf	30,0	;volatile
  4328                           
  4329                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4330  0EE4  300C               	movlw	12
  4331  0EE5  00A1               	movwf	??_mTouch_Init
  4332  0EE6  0821               	movf	??_mTouch_Init,w
  4333  0EE7  049E               	iorwf	30,f	;volatile
  4334                           
  4335                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4336  0EE8  307F               	movlw	127
  4337  0EE9  00A1               	movwf	??_mTouch_Init
  4338  0EEA  0821               	movf	??_mTouch_Init,w
  4339  0EEB  059E               	andwf	30,f	;volatile
  4340                           
  4341                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4342  0EEC  019F               	clrf	31	;volatile
  4343  0EED  0008               	return
  4344  0EEE                     __end_of_mTouch_Init:	
  4345                           
  4346                           	psect	text7
  4347  0E7D                     __ptext7:	
  4348 ;; *************** function _mTouch_PortInit *****************
  4349 ;; Defined at:
  4350 ;;		line 6 in file "mTouch.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4364 ;;      Params:         0       0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0       0
  4366 ;;      Temps:          0       1       0       0       0       0
  4367 ;;      Totals:         0       1       0       0       0       0
  4368 ;;Total ram usage:        1 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    3
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_mTouch_Init
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           
  4379                           ;psect for function _mTouch_PortInit
  4380  0E7D                     _mTouch_PortInit:	
  4381                           
  4382                           ;mTouch.c: 8: TRISA |= (0x07);
  4383                           
  4384                           ;incstack = 0
  4385                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4386  0E7D  3007               	movlw	7
  4387  0E7E  0020               	movlb	0	; select bank0
  4388  0E7F  00A0               	movwf	??_mTouch_PortInit
  4389  0E80  0820               	movf	??_mTouch_PortInit,w
  4390  0E81  0021               	movlb	1	; select bank1
  4391  0E82  048C               	iorwf	12,f	;volatile
  4392                           
  4393                           ;mTouch.c: 9: ANSELA |= (0x07);
  4394  0E83  3007               	movlw	7
  4395  0E84  0020               	movlb	0	; select bank0
  4396  0E85  00A0               	movwf	??_mTouch_PortInit
  4397  0E86  0820               	movf	??_mTouch_PortInit,w
  4398  0E87  0023               	movlb	3	; select bank3
  4399  0E88  048C               	iorwf	12,f	;volatile
  4400  0E89  0008               	return
  4401  0E8A                     __end_of_mTouch_PortInit:	
  4402                           
  4403                           	psect	text8
  4404  0E8A                     __ptext8:	
  4405 ;; *************** function _Timer6_Init *****************
  4406 ;; Defined at:
  4407 ;;		line 3 in file "Timer6.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4421 ;;      Params:         0       0       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0
  4424 ;;      Totals:         0       0       0       0       0       0
  4425 ;;Total ram usage:        0 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    3
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_main
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           
  4436                           ;psect for function _Timer6_Init
  4437  0E8A                     _Timer6_Init:	
  4438                           
  4439                           ;Timer6.c: 5: PR6 = 50;
  4440                           
  4441                           ;incstack = 0
  4442                           ; Regs used in _Timer6_Init: [wreg+status,2]
  4443  0E8A  3032               	movlw	50
  4444  0E8B  0028               	movlb	8	; select bank8
  4445  0E8C  009D               	movwf	29	;volatile
  4446                           
  4447                           ;Timer6.c: 6: TMR6 = 0x00;
  4448  0E8D  019C               	clrf	28	;volatile
  4449                           
  4450                           ;Timer6.c: 7: T6CON |= (0x02<<0);
  4451  0E8E  149E               	bsf	30,1	;volatile
  4452                           
  4453                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  4454  0E8F  081E               	movf	30,w	;volatile
  4455                           
  4456                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  4457  0E90  151E               	bsf	30,2	;volatile
  4458                           
  4459                           ;Timer6.c: 11: TMR6IF = 0;
  4460  0E91  0020               	movlb	0	; select bank0
  4461  0E92  1193               	bcf	19,3	;volatile
  4462                           
  4463                           ;Timer6.c: 12: TMR6IE = 1;
  4464  0E93  0021               	movlb	1	; select bank1
  4465  0E94  1593               	bsf	19,3	;volatile
  4466                           
  4467                           ;Timer6.c: 13: PEIE = 1;
  4468  0E95  170B               	bsf	11,6	;volatile
  4469                           
  4470                           ;Timer6.c: 14: GIE = 1;
  4471  0E96  178B               	bsf	11,7	;volatile
  4472  0E97  0008               	return
  4473  0E98                     __end_of_Timer6_Init:	
  4474                           
  4475                           	psect	text9
  4476  0EC8                     __ptext9:	
  4477 ;; *************** function _Timer4_Init *****************
  4478 ;; Defined at:
  4479 ;;		line 3 in file "Timer4.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;		None
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4493 ;;      Params:         0       0       0       0       0       0
  4494 ;;      Locals:         0       0       0       0       0       0
  4495 ;;      Temps:          0       1       0       0       0       0
  4496 ;;      Totals:         0       1       0       0       0       0
  4497 ;;Total ram usage:        1 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    3
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_main
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           
  4508                           ;psect for function _Timer4_Init
  4509  0EC8                     _Timer4_Init:	
  4510                           
  4511                           ;Timer4.c: 5: PR4 = 0x7D;
  4512                           
  4513                           ;incstack = 0
  4514                           ; Regs used in _Timer4_Init: [wreg+status,2+status,0]
  4515  0EC8  307D               	movlw	125
  4516  0EC9  0028               	movlb	8	; select bank8
  4517  0ECA  0096               	movwf	22	;volatile
  4518                           
  4519                           ;Timer4.c: 6: TMR4 = 0x00;
  4520  0ECB  0195               	clrf	21	;volatile
  4521                           
  4522                           ;Timer4.c: 7: T4CON |= (0x03<<0);
  4523  0ECC  3003               	movlw	3
  4524  0ECD  0020               	movlb	0	; select bank0
  4525  0ECE  00A0               	movwf	??_Timer4_Init
  4526  0ECF  0820               	movf	??_Timer4_Init,w
  4527  0ED0  0028               	movlb	8	; select bank8
  4528  0ED1  0497               	iorwf	23,f	;volatile
  4529                           
  4530                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  4531  0ED2  0817               	movf	23,w	;volatile
  4532                           
  4533                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  4534  0ED3  1517               	bsf	23,2	;volatile
  4535                           
  4536                           ;Timer4.c: 11: TMR4IF = 0;
  4537  0ED4  0020               	movlb	0	; select bank0
  4538  0ED5  1093               	bcf	19,1	;volatile
  4539                           
  4540                           ;Timer4.c: 12: TMR4IE = 1;
  4541  0ED6  0021               	movlb	1	; select bank1
  4542  0ED7  1493               	bsf	19,1	;volatile
  4543                           
  4544                           ;Timer4.c: 13: PEIE = 1;
  4545  0ED8  170B               	bsf	11,6	;volatile
  4546                           
  4547                           ;Timer4.c: 14: GIE = 1;
  4548  0ED9  178B               	bsf	11,7	;volatile
  4549  0EDA  0008               	return
  4550  0EDB                     __end_of_Timer4_Init:	
  4551                           
  4552                           	psect	text10
  4553  0F30                     __ptext10:	
  4554 ;; *************** function _Timer1_Init *****************
  4555 ;; Defined at:
  4556 ;;		line 6 in file "Timer1.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg, status,2, status,0
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4570 ;;      Params:         0       0       0       0       0       0
  4571 ;;      Locals:         0       0       0       0       0       0
  4572 ;;      Temps:          0       1       0       0       0       0
  4573 ;;      Totals:         0       1       0       0       0       0
  4574 ;;Total ram usage:        1 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    3
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_main
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           
  4585                           ;psect for function _Timer1_Init
  4586  0F30                     _Timer1_Init:	
  4587                           
  4588                           ;Timer1.c: 8: TRISB |= (1<<6);
  4589                           
  4590                           ;incstack = 0
  4591                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4592  0F30  0021               	movlb	1	; select bank1
  4593  0F31  170D               	bsf	13,6	;volatile
  4594                           
  4595                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  4596  0F32  30BF               	movlw	191
  4597  0F33  0020               	movlb	0	; select bank0
  4598  0F34  00A0               	movwf	??_Timer1_Init
  4599  0F35  0820               	movf	??_Timer1_Init,w
  4600  0F36  0023               	movlb	3	; select bank3
  4601  0F37  058D               	andwf	13,f	;volatile
  4602                           
  4603                           ;Timer1.c: 11: T1CON |= (0x01<<2);
  4604  0F38  0020               	movlb	0	; select bank0
  4605  0F39  1518               	bsf	24,2	;volatile
  4606                           
  4607                           ;Timer1.c: 12: T1CON &= ~(0x01<<3);
  4608  0F3A  30F7               	movlw	247
  4609  0F3B  00A0               	movwf	??_Timer1_Init
  4610  0F3C  0820               	movf	??_Timer1_Init,w
  4611  0F3D  0598               	andwf	24,f	;volatile
  4612                           
  4613                           ;Timer1.c: 13: T1CON |= (0x00<<4);
  4614  0F3E  0818               	movf	24,w	;volatile
  4615                           
  4616                           ;Timer1.c: 14: T1CON |= (0x02<<6);
  4617  0F3F  1798               	bsf	24,7	;volatile
  4618                           
  4619                           ;Timer1.c: 16: T1GCON = 0x00;
  4620  0F40  0199               	clrf	25	;volatile
  4621                           
  4622                           ;Timer1.c: 18: TMR1 = 0xFFFF-10;
  4623  0F41  30FF               	movlw	255
  4624  0F42  0097               	movwf	23	;volatile
  4625  0F43  30F5               	movlw	245
  4626  0F44  0096               	movwf	22	;volatile
  4627                           
  4628                           ;Timer1.c: 20: TMR1IF = 0;
  4629  0F45  1011               	bcf	17,0	;volatile
  4630                           
  4631                           ;Timer1.c: 21: TMR1IE = 1;
  4632  0F46  0021               	movlb	1	; select bank1
  4633  0F47  1411               	bsf	17,0	;volatile
  4634                           
  4635                           ;Timer1.c: 22: PEIE = 1;
  4636  0F48  170B               	bsf	11,6	;volatile
  4637                           
  4638                           ;Timer1.c: 23: GIE = 1;
  4639  0F49  178B               	bsf	11,7	;volatile
  4640  0F4A  0008               	return
  4641  0F4B                     __end_of_Timer1_Init:	
  4642                           
  4643                           	psect	text11
  4644  078C                     __ptext11:	
  4645 ;; *************** function _Timer1_GetCPM *****************
  4646 ;; Defined at:
  4647 ;;		line 38 in file "Timer1.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;		None
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;		None
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  2   26[BANK0 ] unsigned int 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0, pclath, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4661 ;;      Params:         0       2       0       0       0       0
  4662 ;;      Locals:         0       0       0       0       0       0
  4663 ;;      Temps:          0       0       0       0       0       0
  4664 ;;      Totals:         0       2       0       0       0       0
  4665 ;;Total ram usage:        2 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    4
  4668 ;; This function calls:
  4669 ;;		___lldiv
  4670 ;;		___lmul
  4671 ;; This function is called by:
  4672 ;;		_main
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           
  4677                           ;psect for function _Timer1_GetCPM
  4678  078C                     _Timer1_GetCPM:	
  4679                           
  4680                           ;Timer1.c: 40: return (uint16_t)((countsum * 6000000) / timesum );
  4681                           
  4682                           ;incstack = 0
  4683                           ; Regs used in _Timer1_GetCPM: [wreg+status,2+status,0+pclath+cstack]
  4684  078C  0020               	movlb	0	; select bank0
  4685  078D  085B               	movf	_timesum+3,w
  4686  078E  00AF               	movwf	___lldiv@divisor+3
  4687  078F  085A               	movf	_timesum+2,w
  4688  0790  00AE               	movwf	___lldiv@divisor+2
  4689  0791  0859               	movf	_timesum+1,w
  4690  0792  00AD               	movwf	___lldiv@divisor+1
  4691  0793  0858               	movf	_timesum,w
  4692  0794  00AC               	movwf	___lldiv@divisor
  4693  0795  085F               	movf	_countsum+3,w
  4694  0796  00A3               	movwf	___lmul@multiplier+3
  4695  0797  085E               	movf	_countsum+2,w
  4696  0798  00A2               	movwf	___lmul@multiplier+2
  4697  0799  085D               	movf	_countsum+1,w
  4698  079A  00A1               	movwf	___lmul@multiplier+1
  4699  079B  085C               	movf	_countsum,w
  4700  079C  00A0               	movwf	___lmul@multiplier
  4701  079D  3000               	movlw	0
  4702  079E  00A7               	movwf	___lmul@multiplicand+3
  4703  079F  305B               	movlw	91
  4704  07A0  00A6               	movwf	___lmul@multiplicand+2
  4705  07A1  308D               	movlw	141
  4706  07A2  00A5               	movwf	___lmul@multiplicand+1
  4707  07A3  3080               	movlw	128
  4708  07A4  00A4               	movwf	___lmul@multiplicand
  4709  07A5  3187  275C  3187   	fcall	___lmul
  4710  07A8  0020               	movlb	0	; select bank0
  4711  07A9  0823               	movf	?___lmul+3,w
  4712  07AA  00B3               	movwf	___lldiv@dividend+3
  4713  07AB  0822               	movf	?___lmul+2,w
  4714  07AC  00B2               	movwf	___lldiv@dividend+2
  4715  07AD  0821               	movf	?___lmul+1,w
  4716  07AE  00B1               	movwf	___lldiv@dividend+1
  4717  07AF  0820               	movf	?___lmul,w
  4718  07B0  00B0               	movwf	___lldiv@dividend
  4719  07B1  3185  2581         	fcall	___lldiv
  4720  07B3  0020               	movlb	0	; select bank0
  4721  07B4  082D               	movf	?___lldiv+1,w
  4722  07B5  00BB               	movwf	?_Timer1_GetCPM+1
  4723  07B6  082C               	movf	?___lldiv,w
  4724  07B7  00BA               	movwf	?_Timer1_GetCPM
  4725  07B8  0008               	return
  4726  07B9                     __end_of_Timer1_GetCPM:	
  4727                           
  4728                           	psect	text12
  4729  075C                     __ptext12:	
  4730 ;; *************** function ___lmul *****************
  4731 ;; Defined at:
  4732 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul32.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4735 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  product         4    8[BANK0 ] unsigned long 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  4    0[BANK0 ] unsigned long 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4747 ;;      Params:         0       8       0       0       0       0
  4748 ;;      Locals:         0       4       0       0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0
  4750 ;;      Totals:         0      12       0       0       0       0
  4751 ;;Total ram usage:       12 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    3
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_Timer1_GetCPM
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           
  4762                           ;psect for function ___lmul
  4763  075C                     ___lmul:	
  4764                           
  4765                           ;incstack = 0
  4766                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4767  075C  3000               	movlw	0
  4768  075D  0020               	movlb	0	; select bank0
  4769  075E  00AB               	movwf	___lmul@product+3
  4770  075F  3000               	movlw	0
  4771  0760  00AA               	movwf	___lmul@product+2
  4772  0761  3000               	movlw	0
  4773  0762  00A9               	movwf	___lmul@product+1
  4774  0763  3000               	movlw	0
  4775  0764  00A8               	movwf	___lmul@product
  4776  0765                     l3553:	
  4777  0765  1C20               	btfss	___lmul@multiplier,0
  4778  0766  2F6F               	goto	l3557
  4779  0767  0824               	movf	___lmul@multiplicand,w
  4780  0768  07A8               	addwf	___lmul@product,f
  4781  0769  0825               	movf	___lmul@multiplicand+1,w
  4782  076A  3DA9               	addwfc	___lmul@product+1,f
  4783  076B  0826               	movf	___lmul@multiplicand+2,w
  4784  076C  3DAA               	addwfc	___lmul@product+2,f
  4785  076D  0827               	movf	___lmul@multiplicand+3,w
  4786  076E  3DAB               	addwfc	___lmul@product+3,f
  4787  076F                     l3557:	
  4788  076F  3001               	movlw	1
  4789  0770                     u3525:	
  4790  0770  35A4               	lslf	___lmul@multiplicand,f
  4791  0771  0DA5               	rlf	___lmul@multiplicand+1,f
  4792  0772  0DA6               	rlf	___lmul@multiplicand+2,f
  4793  0773  0DA7               	rlf	___lmul@multiplicand+3,f
  4794  0774  0B89               	decfsz	9,f
  4795  0775  2F70               	goto	u3525
  4796  0776  3001               	movlw	1
  4797  0777                     u3535:	
  4798  0777  36A3               	lsrf	___lmul@multiplier+3,f
  4799  0778  0CA2               	rrf	___lmul@multiplier+2,f
  4800  0779  0CA1               	rrf	___lmul@multiplier+1,f
  4801  077A  0CA0               	rrf	___lmul@multiplier,f
  4802  077B  0B89               	decfsz	9,f
  4803  077C  2F77               	goto	u3535
  4804  077D  0823               	movf	___lmul@multiplier+3,w
  4805  077E  0422               	iorwf	___lmul@multiplier+2,w
  4806  077F  0421               	iorwf	___lmul@multiplier+1,w
  4807  0780  0420               	iorwf	___lmul@multiplier,w
  4808  0781  1D03               	skipz
  4809  0782  2F65               	goto	l3553
  4810  0783  082B               	movf	___lmul@product+3,w
  4811  0784  00A3               	movwf	?___lmul+3
  4812  0785  082A               	movf	___lmul@product+2,w
  4813  0786  00A2               	movwf	?___lmul+2
  4814  0787  0829               	movf	___lmul@product+1,w
  4815  0788  00A1               	movwf	?___lmul+1
  4816  0789  0828               	movf	___lmul@product,w
  4817  078A  00A0               	movwf	?___lmul
  4818  078B  0008               	return
  4819  078C                     __end_of___lmul:	
  4820                           
  4821                           	psect	text13
  4822  0581                     __ptext13:	
  4823 ;; *************** function ___lldiv *****************
  4824 ;; Defined at:
  4825 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;  divisor         4   12[BANK0 ] unsigned long 
  4828 ;;  dividend        4   16[BANK0 ] unsigned long 
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  quotient        4   21[BANK0 ] unsigned long 
  4831 ;;  counter         1   25[BANK0 ] unsigned char 
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  4   12[BANK0 ] unsigned long 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2, status,0
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4841 ;;      Params:         0       8       0       0       0       0
  4842 ;;      Locals:         0       5       0       0       0       0
  4843 ;;      Temps:          0       1       0       0       0       0
  4844 ;;      Totals:         0      14       0       0       0       0
  4845 ;;Total ram usage:       14 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    3
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_Timer1_GetCPM
  4852 ;;		_printf
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function ___lldiv
  4858  0581                     ___lldiv:	
  4859                           
  4860                           ;incstack = 0
  4861                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4862  0581  3000               	movlw	0
  4863  0582  0020               	movlb	0	; select bank0
  4864  0583  00B8               	movwf	___lldiv@quotient+3
  4865  0584  3000               	movlw	0
  4866  0585  00B7               	movwf	___lldiv@quotient+2
  4867  0586  3000               	movlw	0
  4868  0587  00B6               	movwf	___lldiv@quotient+1
  4869  0588  3000               	movlw	0
  4870  0589  00B5               	movwf	___lldiv@quotient
  4871  058A  082F               	movf	___lldiv@divisor+3,w
  4872  058B  042E               	iorwf	___lldiv@divisor+2,w
  4873  058C  042D               	iorwf	___lldiv@divisor+1,w
  4874  058D  042C               	iorwf	___lldiv@divisor,w
  4875  058E  1903               	skipnz
  4876  058F  2DCB               	goto	l3585
  4877  0590  01B9               	clrf	___lldiv@counter
  4878  0591  0AB9               	incf	___lldiv@counter,f
  4879  0592                     l3571:	
  4880  0592  1BAF               	btfsc	___lldiv@divisor+3,7
  4881  0593  2DA0               	goto	l3573
  4882  0594  3001               	movlw	1
  4883  0595                     u3565:	
  4884  0595  35AC               	lslf	___lldiv@divisor,f
  4885  0596  0DAD               	rlf	___lldiv@divisor+1,f
  4886  0597  0DAE               	rlf	___lldiv@divisor+2,f
  4887  0598  0DAF               	rlf	___lldiv@divisor+3,f
  4888  0599  0B89               	decfsz	9,f
  4889  059A  2D95               	goto	u3565
  4890  059B  3001               	movlw	1
  4891  059C  00B4               	movwf	??___lldiv
  4892  059D  0834               	movf	??___lldiv,w
  4893  059E  07B9               	addwf	___lldiv@counter,f
  4894  059F  2D92               	goto	l3571
  4895  05A0                     l3573:	
  4896  05A0  3001               	movlw	1
  4897  05A1                     u3585:	
  4898  05A1  35B5               	lslf	___lldiv@quotient,f
  4899  05A2  0DB6               	rlf	___lldiv@quotient+1,f
  4900  05A3  0DB7               	rlf	___lldiv@quotient+2,f
  4901  05A4  0DB8               	rlf	___lldiv@quotient+3,f
  4902  05A5  0B89               	decfsz	9,f
  4903  05A6  2DA1               	goto	u3585
  4904  05A7  082F               	movf	___lldiv@divisor+3,w
  4905  05A8  0233               	subwf	___lldiv@dividend+3,w
  4906  05A9  1D03               	skipz
  4907  05AA  2DB5               	goto	u3595
  4908  05AB  082E               	movf	___lldiv@divisor+2,w
  4909  05AC  0232               	subwf	___lldiv@dividend+2,w
  4910  05AD  1D03               	skipz
  4911  05AE  2DB5               	goto	u3595
  4912  05AF  082D               	movf	___lldiv@divisor+1,w
  4913  05B0  0231               	subwf	___lldiv@dividend+1,w
  4914  05B1  1D03               	skipz
  4915  05B2  2DB5               	goto	u3595
  4916  05B3  082C               	movf	___lldiv@divisor,w
  4917  05B4  0230               	subwf	___lldiv@dividend,w
  4918  05B5                     u3595:	
  4919  05B5  1C03               	skipc
  4920  05B6  2DC0               	goto	l3581
  4921  05B7  082C               	movf	___lldiv@divisor,w
  4922  05B8  02B0               	subwf	___lldiv@dividend,f
  4923  05B9  082D               	movf	___lldiv@divisor+1,w
  4924  05BA  3BB1               	subwfb	___lldiv@dividend+1,f
  4925  05BB  082E               	movf	___lldiv@divisor+2,w
  4926  05BC  3BB2               	subwfb	___lldiv@dividend+2,f
  4927  05BD  082F               	movf	___lldiv@divisor+3,w
  4928  05BE  3BB3               	subwfb	___lldiv@dividend+3,f
  4929  05BF  1435               	bsf	___lldiv@quotient,0
  4930  05C0                     l3581:	
  4931  05C0  3001               	movlw	1
  4932  05C1                     u3605:	
  4933  05C1  36AF               	lsrf	___lldiv@divisor+3,f
  4934  05C2  0CAE               	rrf	___lldiv@divisor+2,f
  4935  05C3  0CAD               	rrf	___lldiv@divisor+1,f
  4936  05C4  0CAC               	rrf	___lldiv@divisor,f
  4937  05C5  0B89               	decfsz	9,f
  4938  05C6  2DC1               	goto	u3605
  4939  05C7  3001               	movlw	1
  4940  05C8  02B9               	subwf	___lldiv@counter,f
  4941  05C9  1D03               	btfss	3,2
  4942  05CA  2DA0               	goto	l3573
  4943  05CB                     l3585:	
  4944  05CB  0838               	movf	___lldiv@quotient+3,w
  4945  05CC  00AF               	movwf	?___lldiv+3
  4946  05CD  0837               	movf	___lldiv@quotient+2,w
  4947  05CE  00AE               	movwf	?___lldiv+2
  4948  05CF  0836               	movf	___lldiv@quotient+1,w
  4949  05D0  00AD               	movwf	?___lldiv+1
  4950  05D1  0835               	movf	___lldiv@quotient,w
  4951  05D2  00AC               	movwf	?___lldiv
  4952  05D3  0008               	return
  4953  05D4                     __end_of___lldiv:	
  4954                           
  4955                           	psect	text14
  4956  046A                     __ptext14:	
  4957 ;; *************** function _LCD_Init *****************
  4958 ;; Defined at:
  4959 ;;		line 28 in file "LCD.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;		None
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;		None
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      void 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0, pclath, cstack
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4973 ;;      Params:         0       0       0       0       0       0
  4974 ;;      Locals:         0       0       0       0       0       0
  4975 ;;      Temps:          0       2       0       0       0       0
  4976 ;;      Totals:         0       2       0       0       0       0
  4977 ;;Total ram usage:        2 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    5
  4980 ;; This function calls:
  4981 ;;		_LCD_DisplayClear
  4982 ;;		_LCD_WriteData
  4983 ;; This function is called by:
  4984 ;;		_main
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           
  4989                           ;psect for function _LCD_Init
  4990  046A                     _LCD_Init:	
  4991                           
  4992                           ;LCD.c: 30: LATA3 = 0;
  4993                           
  4994                           ;incstack = 0
  4995                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4996  046A  0022               	movlb	2	; select bank2
  4997  046B  118C               	bcf	12,3	;volatile
  4998                           
  4999                           ;LCD.c: 31: LATA4 = 0;
  5000  046C  120C               	bcf	12,4	;volatile
  5001                           
  5002                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  5003  046D  3002               	movlw	2
  5004  046E  0020               	movlb	0	; select bank0
  5005  046F  00A5               	movwf	??_LCD_Init+1
  5006  0470  3038               	movlw	56
  5007  0471  00A4               	movwf	??_LCD_Init
  5008  0472  30AD               	movlw	173
  5009  0473                     u3877:	
  5010  0473  0B89               	decfsz	9,f
  5011  0474  2C73               	goto	u3877
  5012  0475  0BA4               	decfsz	??_LCD_Init,f
  5013  0476  2C73               	goto	u3877
  5014  0477  0BA5               	decfsz	??_LCD_Init+1,f
  5015  0478  2C73               	goto	u3877
  5016                           
  5017                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  5018  0479  3003               	movlw	3
  5019  047A  0020               	movlb	0	; select bank0
  5020  047B  008D               	movwf	13	;volatile
  5021                           
  5022                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5023  047C  0022               	movlb	2	; select bank2
  5024  047D  160C               	bsf	12,4	;volatile
  5025  047E  3200               	nop2	;2 cycle nop
  5026  047F  3200               	nop2	;2 cycle nop
  5027  0480  3200               	nop2	;2 cycle nop
  5028  0481  3200               	nop2	;2 cycle nop
  5029  0482  0022               	movlb	2	; select bank2
  5030  0483  120C               	bcf	12,4	;volatile
  5031  0484  3200               	nop2	;2 cycle nop
  5032  0485  3200               	nop2	;2 cycle nop
  5033  0486  3200               	nop2	;2 cycle nop
  5034  0487  3200               	nop2	;2 cycle nop
  5035                           
  5036                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  5037  0488  3034               	movlw	52
  5038  0489  0020               	movlb	0	; select bank0
  5039  048A  00A4               	movwf	??_LCD_Init
  5040  048B  30F1               	movlw	241
  5041  048C                     u3887:	
  5042  048C  0B89               	decfsz	9,f
  5043  048D  2C8C               	goto	u3887
  5044  048E  0BA4               	decfsz	??_LCD_Init,f
  5045  048F  2C8C               	goto	u3887
  5046  0490  3200               	nop2
  5047                           
  5048                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5049  0491  0022               	movlb	2	; select bank2
  5050  0492  160C               	bsf	12,4	;volatile
  5051  0493  3200               	nop2	;2 cycle nop
  5052  0494  3200               	nop2	;2 cycle nop
  5053  0495  3200               	nop2	;2 cycle nop
  5054  0496  3200               	nop2	;2 cycle nop
  5055  0497  0022               	movlb	2	; select bank2
  5056  0498  120C               	bcf	12,4	;volatile
  5057  0499  3200               	nop2	;2 cycle nop
  5058  049A  3200               	nop2	;2 cycle nop
  5059  049B  3200               	nop2	;2 cycle nop
  5060  049C  3200               	nop2	;2 cycle nop
  5061                           
  5062                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5063  049D  3005               	movlw	5
  5064  049E  0020               	movlb	0	; select bank0
  5065  049F  00A4               	movwf	??_LCD_Init
  5066  04A0  3026               	movlw	38
  5067  04A1                     u3897:	
  5068  04A1  0B89               	decfsz	9,f
  5069  04A2  2CA1               	goto	u3897
  5070  04A3  0BA4               	decfsz	??_LCD_Init,f
  5071  04A4  2CA1               	goto	u3897
  5072  04A5  0000               	nop
  5073                           
  5074                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5075  04A6  0022               	movlb	2	; select bank2
  5076  04A7  160C               	bsf	12,4	;volatile
  5077  04A8  3200               	nop2	;2 cycle nop
  5078  04A9  3200               	nop2	;2 cycle nop
  5079  04AA  3200               	nop2	;2 cycle nop
  5080  04AB  3200               	nop2	;2 cycle nop
  5081  04AC  0022               	movlb	2	; select bank2
  5082  04AD  120C               	bcf	12,4	;volatile
  5083  04AE  3200               	nop2	;2 cycle nop
  5084  04AF  3200               	nop2	;2 cycle nop
  5085  04B0  3200               	nop2	;2 cycle nop
  5086  04B1  3200               	nop2	;2 cycle nop
  5087                           
  5088                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5089  04B2  3005               	movlw	5
  5090  04B3  0020               	movlb	0	; select bank0
  5091  04B4  00A4               	movwf	??_LCD_Init
  5092  04B5  3026               	movlw	38
  5093  04B6                     u3907:	
  5094  04B6  0B89               	decfsz	9,f
  5095  04B7  2CB6               	goto	u3907
  5096  04B8  0BA4               	decfsz	??_LCD_Init,f
  5097  04B9  2CB6               	goto	u3907
  5098  04BA  0000               	nop
  5099                           
  5100                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  5101  04BB  3002               	movlw	2
  5102  04BC  0020               	movlb	0	; select bank0
  5103  04BD  008D               	movwf	13	;volatile
  5104                           
  5105                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5106  04BE  0022               	movlb	2	; select bank2
  5107  04BF  160C               	bsf	12,4	;volatile
  5108  04C0  3200               	nop2	;2 cycle nop
  5109  04C1  3200               	nop2	;2 cycle nop
  5110  04C2  3200               	nop2	;2 cycle nop
  5111  04C3  3200               	nop2	;2 cycle nop
  5112  04C4  0022               	movlb	2	; select bank2
  5113  04C5  120C               	bcf	12,4	;volatile
  5114  04C6  3200               	nop2	;2 cycle nop
  5115  04C7  3200               	nop2	;2 cycle nop
  5116  04C8  3200               	nop2	;2 cycle nop
  5117  04C9  3200               	nop2	;2 cycle nop
  5118                           
  5119                           ;LCD.c: 44: LCD_WriteData(0x28);
  5120  04CA  3028               	movlw	40
  5121  04CB  3186  26E3  3184   	fcall	_LCD_WriteData
  5122                           
  5123                           ;LCD.c: 45: LCD_WriteData(0x0c);
  5124  04CE  300C               	movlw	12
  5125  04CF  3186  26E3  3184   	fcall	_LCD_WriteData
  5126                           
  5127                           ;LCD.c: 46: LCD_DisplayClear();
  5128  04D2  318E  26B8  3184   	fcall	_LCD_DisplayClear
  5129                           
  5130                           ;LCD.c: 47: LCD_WriteData(0x06);
  5131  04D5  3006               	movlw	6
  5132  04D6  3186  26E3         	fcall	_LCD_WriteData
  5133  04D8  0008               	return
  5134  04D9                     __end_of_LCD_Init:	
  5135                           
  5136                           	psect	text15
  5137  0EB8                     __ptext15:	
  5138 ;; *************** function _LCD_DisplayClear *****************
  5139 ;; Defined at:
  5140 ;;		line 73 in file "LCD.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;		None
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      void 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0, pclath, cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5154 ;;      Params:         0       0       0       0       0       0
  5155 ;;      Locals:         0       0       0       0       0       0
  5156 ;;      Temps:          0       1       0       0       0       0
  5157 ;;      Totals:         0       1       0       0       0       0
  5158 ;;Total ram usage:        1 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:    4
  5161 ;; This function calls:
  5162 ;;		_LCD_WriteData
  5163 ;; This function is called by:
  5164 ;;		_LCD_Init
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           
  5169                           ;psect for function _LCD_DisplayClear
  5170  0EB8                     _LCD_DisplayClear:	
  5171                           
  5172                           ;LCD.c: 75: LATA3 = 0;
  5173                           
  5174                           ;incstack = 0
  5175                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  5176  0EB8  0022               	movlb	2	; select bank2
  5177  0EB9  118C               	bcf	12,3	;volatile
  5178                           
  5179                           ;LCD.c: 76: LCD_WriteData(0x01);
  5180  0EBA  3001               	movlw	1
  5181  0EBB  3186  26E3  318E   	fcall	_LCD_WriteData
  5182                           
  5183                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  5184  0EBE  3015               	movlw	21
  5185  0EBF  0020               	movlb	0	; select bank0
  5186  0EC0  00A3               	movwf	??_LCD_DisplayClear
  5187  0EC1  30C6               	movlw	198
  5188  0EC2                     u3917:	
  5189  0EC2  0B89               	decfsz	9,f
  5190  0EC3  2EC2               	goto	u3917
  5191  0EC4  0BA3               	decfsz	??_LCD_DisplayClear,f
  5192  0EC5  2EC2               	goto	u3917
  5193  0EC6  0000               	nop
  5194  0EC7  0008               	return
  5195  0EC8                     __end_of_LCD_DisplayClear:	
  5196                           
  5197                           	psect	text16
  5198  0EA8                     __ptext16:	
  5199 ;; *************** function _LCD_CursorHome *****************
  5200 ;; Defined at:
  5201 ;;		line 84 in file "LCD.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0, pclath, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5215 ;;      Params:         0       0       0       0       0       0
  5216 ;;      Locals:         0       0       0       0       0       0
  5217 ;;      Temps:          0       1       0       0       0       0
  5218 ;;      Totals:         0       1       0       0       0       0
  5219 ;;Total ram usage:        1 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    4
  5222 ;; This function calls:
  5223 ;;		_LCD_WriteData
  5224 ;; This function is called by:
  5225 ;;		_main
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           
  5230                           ;psect for function _LCD_CursorHome
  5231  0EA8                     _LCD_CursorHome:	
  5232                           
  5233                           ;LCD.c: 86: LATA3 = 0;
  5234                           
  5235                           ;incstack = 0
  5236                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  5237  0EA8  0022               	movlb	2	; select bank2
  5238  0EA9  118C               	bcf	12,3	;volatile
  5239                           
  5240                           ;LCD.c: 87: LCD_WriteData(0x02);
  5241  0EAA  3002               	movlw	2
  5242  0EAB  3186  26E3  318E   	fcall	_LCD_WriteData
  5243                           
  5244                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  5245  0EAE  3015               	movlw	21
  5246  0EAF  0020               	movlb	0	; select bank0
  5247  0EB0  00A3               	movwf	??_LCD_CursorHome
  5248  0EB1  30C6               	movlw	198
  5249  0EB2                     u3927:	
  5250  0EB2  0B89               	decfsz	9,f
  5251  0EB3  2EB2               	goto	u3927
  5252  0EB4  0BA3               	decfsz	??_LCD_CursorHome,f
  5253  0EB5  2EB2               	goto	u3927
  5254  0EB6  0000               	nop
  5255  0EB7  0008               	return
  5256  0EB8                     __end_of_LCD_CursorHome:	
  5257                           
  5258                           	psect	text17
  5259  06E3                     __ptext17:	
  5260 ;; *************** function _LCD_WriteData *****************
  5261 ;; Defined at:
  5262 ;;		line 15 in file "LCD.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  point           1    wreg     char 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  point           1    2[BANK0 ] char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5276 ;;      Params:         0       0       0       0       0       0
  5277 ;;      Locals:         0       1       0       0       0       0
  5278 ;;      Temps:          0       2       0       0       0       0
  5279 ;;      Totals:         0       3       0       0       0       0
  5280 ;;Total ram usage:        3 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    3
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_LCD_Init
  5287 ;;		_putch
  5288 ;;		_LCD_DisplayClear
  5289 ;;		_LCD_CursorHome
  5290 ;;		_LCD_Put
  5291 ;;		_LCD_CursorPosition
  5292 ;;		_LCD_CursorShift
  5293 ;;		_LCD_DispShift
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           
  5298                           ;psect for function _LCD_WriteData
  5299  06E3                     _LCD_WriteData:	
  5300                           
  5301                           ;incstack = 0
  5302                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  5303                           ;LCD_WriteData@point stored from wreg
  5304  06E3  0020               	movlb	0	; select bank0
  5305  06E4  00A2               	movwf	LCD_WriteData@point
  5306                           
  5307                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  5308  06E5  30D5               	movlw	213
  5309  06E6                     u3937:	
  5310  06E6  0B89               	decfsz	9,f
  5311  06E7  2EE6               	goto	u3937
  5312  06E8  0000               	nop
  5313                           
  5314                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  5315  06E9  0020               	movlb	0	; select bank0
  5316  06EA  0822               	movf	LCD_WriteData@point,w
  5317  06EB  00A0               	movwf	??_LCD_WriteData
  5318  06EC  3004               	movlw	4
  5319  06ED                     u3495:	
  5320  06ED  1003               	clrc
  5321  06EE  1BA0               	btfsc	??_LCD_WriteData,7
  5322  06EF  1403               	setc
  5323  06F0  0CA0               	rrf	??_LCD_WriteData,f
  5324  06F1  0B89               	decfsz	9,f
  5325  06F2  2EED               	goto	u3495
  5326  06F3  3003               	movlw	3
  5327  06F4  0520               	andwf	??_LCD_WriteData,w
  5328  06F5  00A1               	movwf	??_LCD_WriteData+1
  5329  06F6  0E22               	swapf	LCD_WriteData@point,w
  5330  06F7  390F               	andlw	15
  5331  06F8  1989               	btfsc	9,3
  5332  06F9  38F0               	iorlw	240
  5333  06FA  390C               	andlw	12
  5334  06FB  0709               	addwf	9,w
  5335  06FC  0421               	iorwf	??_LCD_WriteData+1,w
  5336  06FD  008D               	movwf	13	;volatile
  5337                           
  5338                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5339  06FE  0022               	movlb	2	; select bank2
  5340  06FF  160C               	bsf	12,4	;volatile
  5341  0700  3200               	nop2	;2 cycle nop
  5342  0701  3200               	nop2	;2 cycle nop
  5343  0702  3200               	nop2	;2 cycle nop
  5344  0703  3200               	nop2	;2 cycle nop
  5345  0704  0022               	movlb	2	; select bank2
  5346  0705  120C               	bcf	12,4	;volatile
  5347  0706  3200               	nop2	;2 cycle nop
  5348  0707  3200               	nop2	;2 cycle nop
  5349  0708  3200               	nop2	;2 cycle nop
  5350  0709  3200               	nop2	;2 cycle nop
  5351                           
  5352                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  5353  070A  3003               	movlw	3
  5354  070B  0020               	movlb	0	; select bank0
  5355  070C  0522               	andwf	LCD_WriteData@point,w
  5356  070D  00A0               	movwf	??_LCD_WriteData
  5357  070E  0822               	movf	LCD_WriteData@point,w
  5358  070F  390C               	andlw	12
  5359  0710  0709               	addwf	9,w
  5360  0711  0420               	iorwf	??_LCD_WriteData,w
  5361  0712  008D               	movwf	13	;volatile
  5362                           
  5363                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5364  0713  0022               	movlb	2	; select bank2
  5365  0714  160C               	bsf	12,4	;volatile
  5366  0715  3200               	nop2	;2 cycle nop
  5367  0716  3200               	nop2	;2 cycle nop
  5368  0717  3200               	nop2	;2 cycle nop
  5369  0718  3200               	nop2	;2 cycle nop
  5370  0719  0022               	movlb	2	; select bank2
  5371  071A  120C               	bcf	12,4	;volatile
  5372  071B  3200               	nop2	;2 cycle nop
  5373  071C  3200               	nop2	;2 cycle nop
  5374  071D  3200               	nop2	;2 cycle nop
  5375  071E  3200               	nop2	;2 cycle nop
  5376  071F  0008               	return
  5377  0720                     __end_of_LCD_WriteData:	
  5378                           
  5379                           	psect	text18
  5380  0F69                     __ptext18:	
  5381 ;; *************** function _DAC_Initialize *****************
  5382 ;; Defined at:
  5383 ;;		line 14 in file "MCP4726.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;		None
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;		None
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  1    wreg      void 
  5390 ;; Registers used:
  5391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5397 ;;      Params:         0       0       0       0       0       0
  5398 ;;      Locals:         0       0       0       0       0       0
  5399 ;;      Temps:          0       2       0       0       0       0
  5400 ;;      Totals:         0       2       0       0       0       0
  5401 ;;Total ram usage:        2 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:    6
  5404 ;; This function calls:
  5405 ;;		_I2C_Init
  5406 ;;		_I2C_Transmit
  5407 ;; This function is called by:
  5408 ;;		_main
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           
  5413                           ;psect for function _DAC_Initialize
  5414  0F69                     _DAC_Initialize:	
  5415                           
  5416                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  5417                           
  5418                           ;incstack = 0
  5419                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5420  0F69  0020               	movlb	0	; select bank0
  5421  0F6A  01A5               	clrf	I2C_Init@address
  5422  0F6B  01A6               	clrf	I2C_Init@mode
  5423  0F6C  01A7               	clrf	I2C_Init@Speed
  5424  0F6D  3001               	movlw	1
  5425  0F6E  318F  27D6  318F   	fcall	_I2C_Init
  5426                           
  5427                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  5428  0F71  0020               	movlb	0	; select bank0
  5429  0F72  086C               	movf	_ConfigReg,w
  5430  0F73  391F               	andlw	-225
  5431  0F74  3880               	iorlw	128
  5432  0F75  00EC               	movwf	_ConfigReg
  5433                           
  5434                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  5435  0F76  106C               	bcf	_ConfigReg,0
  5436                           
  5437                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  5438  0F77  30F9               	movlw	-7
  5439  0F78  05EC               	andwf	_ConfigReg,f
  5440                           
  5441                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  5442  0F79  30E7               	movlw	-25
  5443  0F7A  05EC               	andwf	_ConfigReg,f
  5444                           
  5445                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  5446  0F7B  3060               	movlw	96
  5447  0F7C  00B0               	movwf	??_DAC_Initialize
  5448  0F7D  0830               	movf	??_DAC_Initialize,w
  5449  0F7E  00A8               	movwf	I2C_Transmit@address
  5450  0F7F  306C               	movlw	(low (_ConfigReg| 0))& (0+255)
  5451  0F80  00B1               	movwf	??_DAC_Initialize+1
  5452  0F81  0831               	movf	??_DAC_Initialize+1,w
  5453  0F82  00A9               	movwf	I2C_Transmit@pData
  5454  0F83  01AA               	clrf	I2C_Transmit@size
  5455  0F84  0AAA               	incf	I2C_Transmit@size,f
  5456  0F85  3001               	movlw	1
  5457  0F86  3187  27B9         	fcall	_I2C_Transmit
  5458  0F88  0008               	return
  5459  0F89                     __end_of_DAC_Initialize:	
  5460                           
  5461                           	psect	text19
  5462  07B9                     __ptext19:	
  5463 ;; *************** function _I2C_Transmit *****************
  5464 ;; Defined at:
  5465 ;;		line 23 in file "I2C_Common.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  I2Cx            1    wreg     enum E3164
  5468 ;;  address         1    8[BANK0 ] unsigned char 
  5469 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  5470 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5471 ;;  size            1   10[BANK0 ] unsigned char 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  I2Cx            1   14[BANK0 ] enum E3164
  5474 ;;  result          1   15[BANK0 ] char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      char 
  5477 ;; Registers used:
  5478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5484 ;;      Params:         0       3       0       0       0       0
  5485 ;;      Locals:         0       2       0       0       0       0
  5486 ;;      Temps:          0       3       0       0       0       0
  5487 ;;      Totals:         0       8       0       0       0       0
  5488 ;;Total ram usage:        8 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    4
  5491 ;; This function calls:
  5492 ;;		_I2C1_Transmit
  5493 ;;		_I2C2_Transmit
  5494 ;; This function is called by:
  5495 ;;		_DAC_Initialize
  5496 ;;		_DAC_WriteVoltage
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _I2C_Transmit
  5502  07B9                     _I2C_Transmit:	
  5503                           
  5504                           ;incstack = 0
  5505                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5506                           ;I2C_Transmit@I2Cx stored from wreg
  5507  07B9  0020               	movlb	0	; select bank0
  5508  07BA  00AE               	movwf	I2C_Transmit@I2Cx
  5509                           
  5510                           ;I2C_Common.c: 25: int8_t result;
  5511                           ;I2C_Common.c: 27: switch(I2Cx)
  5512  07BB  2FDA               	goto	l3533
  5513  07BC                     l3527:	
  5514                           ;I2C_Common.c: 28: {
  5515                           ;I2C_Common.c: 29: case I2C1_MODULE:
  5516                           
  5517                           
  5518                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  5519  07BC  0829               	movf	I2C_Transmit@pData,w
  5520  07BD  00AB               	movwf	??_I2C_Transmit
  5521  07BE  082B               	movf	??_I2C_Transmit,w
  5522  07BF  00A0               	movwf	I2C1_Transmit@pData
  5523  07C0  082A               	movf	I2C_Transmit@size,w
  5524  07C1  00AC               	movwf	??_I2C_Transmit+1
  5525  07C2  082C               	movf	??_I2C_Transmit+1,w
  5526  07C3  00A1               	movwf	I2C1_Transmit@size
  5527  07C4  0828               	movf	I2C_Transmit@address,w
  5528  07C5  3183  2357  3187   	fcall	_I2C1_Transmit
  5529  07C8  2FD5               	goto	L2
  5530  07C9                     l3529:	
  5531                           ;I2C_Common.c: 33: case I2C2_MODULE:
  5532                           
  5533                           ;I2C_Common.c: 31: break;
  5534                           
  5535                           
  5536                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  5537  07C9  0829               	movf	I2C_Transmit@pData,w
  5538  07CA  00AB               	movwf	??_I2C_Transmit
  5539  07CB  082B               	movf	??_I2C_Transmit,w
  5540  07CC  00A0               	movwf	I2C2_Transmit@pData
  5541  07CD  082A               	movf	I2C_Transmit@size,w
  5542  07CE  00AC               	movwf	??_I2C_Transmit+1
  5543  07CF  082C               	movf	??_I2C_Transmit+1,w
  5544  07D0  00A1               	movwf	I2C2_Transmit@size
  5545  07D1  0828               	movf	I2C_Transmit@address,w
  5546  07D2  3182  22BF  3187   	fcall	_I2C2_Transmit
  5547  07D5                     L2:	
  5548  07D5  0020               	movlb	0	; select bank0
  5549  07D6  00AD               	movwf	??_I2C_Transmit+2
  5550  07D7  082D               	movf	??_I2C_Transmit+2,w
  5551  07D8  00AF               	movwf	I2C_Transmit@result
  5552                           
  5553                           ;I2C_Common.c: 36: }
  5554                           
  5555                           ;I2C_Common.c: 35: break;
  5556  07D9  2FE2               	goto	l3535
  5557  07DA                     l3533:	
  5558  07DA  082E               	movf	I2C_Transmit@I2Cx,w
  5559                           
  5560                           ; Switch size 1, requested type "space"
  5561                           ; Number of cases is 2, Range of values is 0 to 1
  5562                           ; switch strategies available:
  5563                           ; Name         Instructions Cycles
  5564                           ; simple_byte            7     4 (average)
  5565                           ; direct_byte           10     6 (fixed)
  5566                           ; jumptable            260     6 (fixed)
  5567                           ;	Chosen strategy is simple_byte
  5568  07DB  3A00               	xorlw	0	; case 0
  5569  07DC  1903               	skipnz
  5570  07DD  2FBC               	goto	l3527
  5571  07DE  3A01               	xorlw	1	; case 1
  5572  07DF  1903               	skipnz
  5573  07E0  2FC9               	goto	l3529
  5574  07E1  2FE2               	goto	l3535
  5575  07E2                     l3535:	
  5576                           
  5577                           ;I2C_Common.c: 37: return result;
  5578  07E2  082F               	movf	I2C_Transmit@result,w
  5579  07E3  0008               	return
  5580  07E4                     __end_of_I2C_Transmit:	
  5581                           
  5582                           	psect	text20
  5583  02BF                     __ptext20:	
  5584 ;; *************** function _I2C2_Transmit *****************
  5585 ;; Defined at:
  5586 ;;		line 52 in file "I2C2.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;  address         1    wreg     unsigned char 
  5589 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  5590 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5591 ;;  size            1    1[BANK0 ] unsigned char 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  address         1    4[BANK0 ] unsigned char 
  5594 ;;  i               1    6[BANK0 ] unsigned char 
  5595 ;;  i               1    5[BANK0 ] unsigned char 
  5596 ;;  result          1    7[BANK0 ] char 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  1    wreg      char 
  5599 ;; Registers used:
  5600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5606 ;;      Params:         0       2       0       0       0       0
  5607 ;;      Locals:         0       4       0       0       0       0
  5608 ;;      Temps:          0       2       0       0       0       0
  5609 ;;      Totals:         0       8       0       0       0       0
  5610 ;;Total ram usage:        8 bytes
  5611 ;; Hardware stack levels used:    1
  5612 ;; Hardware stack levels required when called:    3
  5613 ;; This function calls:
  5614 ;;		Nothing
  5615 ;; This function is called by:
  5616 ;;		_I2C_Transmit
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           
  5621                           ;psect for function _I2C2_Transmit
  5622  02BF                     _I2C2_Transmit:	
  5623                           
  5624                           ;incstack = 0
  5625                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  5626                           ;I2C2_Transmit@address stored from wreg
  5627  02BF  0020               	movlb	0	; select bank0
  5628  02C0  00A4               	movwf	I2C2_Transmit@address
  5629                           
  5630                           ;I2C2.c: 54: int8_t result = 0;
  5631  02C1  01A7               	clrf	I2C2_Transmit@result
  5632                           
  5633                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  5634  02C2  2B4B               	goto	l3483
  5635  02C3                     l3439:	
  5636                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5637                           
  5638                           ;I2C2.c: 57: {
  5639                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  5640                           
  5641  02C3  3005               	movlw	5
  5642  02C4  0024               	movlb	4	; select bank4
  5643  02C5  051C               	andwf	28,w	;volatile
  5644  02C6  0020               	movlb	0	; select bank0
  5645  02C7  00A2               	movwf	??_I2C2_Transmit
  5646  02C8  0024               	movlb	4	; select bank4
  5647  02C9  081E               	movf	30,w	;volatile
  5648  02CA  391F               	andlw	31
  5649  02CB  0020               	movlb	0	; select bank0
  5650  02CC  0422               	iorwf	??_I2C2_Transmit,w
  5651  02CD  1D03               	btfss	3,2
  5652  02CE  2AC3               	goto	l3439
  5653                           
  5654                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  5655  02CF  0024               	movlb	4	; select bank4
  5656  02D0  141E               	bsf	30,0	;volatile
  5657  02D1                     l3441:	
  5658                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5659                           
  5660  02D1  3005               	movlw	5
  5661  02D2  0024               	movlb	4	; select bank4
  5662  02D3  051C               	andwf	28,w	;volatile
  5663  02D4  0020               	movlb	0	; select bank0
  5664  02D5  00A2               	movwf	??_I2C2_Transmit
  5665  02D6  0024               	movlb	4	; select bank4
  5666  02D7  081E               	movf	30,w	;volatile
  5667  02D8  391F               	andlw	31
  5668  02D9  0020               	movlb	0	; select bank0
  5669  02DA  0422               	iorwf	??_I2C2_Transmit,w
  5670  02DB  1D03               	btfss	3,2
  5671  02DC  2AD1               	goto	l3441
  5672                           
  5673                           ;I2C2.c: 63: SSP2BUF = address << 1;
  5674  02DD  3524               	lslf	I2C2_Transmit@address,w
  5675  02DE  0024               	movlb	4	; select bank4
  5676  02DF  0099               	movwf	25	;volatile
  5677  02E0                     l228:	
  5678                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  5679                           
  5680  02E0  191C               	btfsc	28,2	;volatile
  5681  02E1  2AE0               	goto	l228
  5682                           
  5683                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  5684  02E2  3000               	movlw	0
  5685  02E3  1B1E               	btfsc	30,6	;volatile
  5686  02E4  3001               	movlw	1
  5687  02E5  0020               	movlb	0	; select bank0
  5688  02E6  00A7               	movwf	I2C2_Transmit@result
  5689                           
  5690                           ;I2C2.c: 67: if (!result)
  5691  02E7  0827               	movf	I2C2_Transmit@result,w
  5692  02E8  1D03               	btfss	3,2
  5693  02E9  2B17               	goto	l3465
  5694                           
  5695                           ;I2C2.c: 68: {
  5696                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  5697  02EA  01A5               	clrf	I2C2_Transmit@i
  5698  02EB  2AF0               	goto	l3463
  5699  02EC                     l3461:	
  5700                           ;I2C2.c: 79: break;
  5701                           
  5702  02EC  3001               	movlw	1
  5703  02ED  00A2               	movwf	??_I2C2_Transmit
  5704  02EE  0822               	movf	??_I2C2_Transmit,w
  5705  02EF  07A5               	addwf	I2C2_Transmit@i,f
  5706  02F0                     l3463:	
  5707  02F0  0821               	movf	I2C2_Transmit@size,w
  5708  02F1  0225               	subwf	I2C2_Transmit@i,w
  5709  02F2  1803               	btfsc	3,0
  5710  02F3  2B17               	goto	l3465
  5711  02F4                     l3451:	
  5712                           ;I2C2.c: 70: {
  5713                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5714                           
  5715  02F4  3005               	movlw	5
  5716  02F5  0024               	movlb	4	; select bank4
  5717  02F6  051C               	andwf	28,w	;volatile
  5718  02F7  0020               	movlb	0	; select bank0
  5719  02F8  00A2               	movwf	??_I2C2_Transmit
  5720  02F9  0024               	movlb	4	; select bank4
  5721  02FA  081E               	movf	30,w	;volatile
  5722  02FB  391F               	andlw	31
  5723  02FC  0020               	movlb	0	; select bank0
  5724  02FD  0422               	iorwf	??_I2C2_Transmit,w
  5725  02FE  1D03               	btfss	3,2
  5726  02FF  2AF4               	goto	l3451
  5727                           
  5728                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  5729  0300  0825               	movf	I2C2_Transmit@i,w
  5730  0301  0720               	addwf	I2C2_Transmit@pData,w
  5731  0302  00A2               	movwf	??_I2C2_Transmit
  5732  0303  0822               	movf	??_I2C2_Transmit,w
  5733  0304  0086               	movwf	6
  5734  0305  0187               	clrf	7
  5735  0306  0801               	movf	1,w
  5736  0307  0024               	movlb	4	; select bank4
  5737  0308  0099               	movwf	25	;volatile
  5738  0309                     l237:	
  5739                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  5740                           
  5741  0309  191C               	btfsc	28,2	;volatile
  5742  030A  2B09               	goto	l237
  5743                           
  5744                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  5745  030B  3000               	movlw	0
  5746  030C  1B1E               	btfsc	30,6	;volatile
  5747  030D  3001               	movlw	1
  5748  030E  0020               	movlb	0	; select bank0
  5749  030F  00A7               	movwf	I2C2_Transmit@result
  5750                           
  5751                           ;I2C2.c: 76: if (result)
  5752  0310  0827               	movf	I2C2_Transmit@result,w
  5753  0311  1903               	btfsc	3,2
  5754  0312  2AEC               	goto	l3461
  5755                           
  5756                           ;I2C2.c: 77: {
  5757                           ;I2C2.c: 78: result = 2;
  5758  0313  3002               	movlw	2
  5759  0314  00A2               	movwf	??_I2C2_Transmit
  5760  0315  0822               	movf	??_I2C2_Transmit,w
  5761  0316  00A7               	movwf	I2C2_Transmit@result
  5762  0317                     l3465:	
  5763                           ;I2C2.c: 80: }
  5764                           ;I2C2.c: 81: }
  5765                           ;I2C2.c: 82: }
  5766                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5767                           
  5768  0317  3005               	movlw	5
  5769  0318  0024               	movlb	4	; select bank4
  5770  0319  051C               	andwf	28,w	;volatile
  5771  031A  0020               	movlb	0	; select bank0
  5772  031B  00A2               	movwf	??_I2C2_Transmit
  5773  031C  0024               	movlb	4	; select bank4
  5774  031D  081E               	movf	30,w	;volatile
  5775  031E  391F               	andlw	31
  5776  031F  0020               	movlb	0	; select bank0
  5777  0320  0422               	iorwf	??_I2C2_Transmit,w
  5778  0321  1D03               	btfss	3,2
  5779  0322  2B17               	goto	l3465
  5780                           
  5781                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  5782  0323  0024               	movlb	4	; select bank4
  5783  0324  151E               	bsf	30,2	;volatile
  5784                           
  5785                           ;I2C2.c: 86: break;
  5786  0325  2B54               	goto	l3485
  5787  0326                     l246:	
  5788                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  5789                           
  5790                           
  5791                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  5792  0326  0024               	movlb	4	; select bank4
  5793  0327  1D9C               	btfss	28,3	;volatile
  5794  0328  1E1C               	btfss	28,4	;volatile
  5795  0329  2B48               	goto	l3479
  5796                           
  5797                           ;I2C2.c: 90: {
  5798                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  5799  032A  0020               	movlb	0	; select bank0
  5800  032B  01A6               	clrf	I2C2_Transmit@i_316
  5801  032C                     l3475:	
  5802  032C  0821               	movf	I2C2_Transmit@size,w
  5803  032D  0226               	subwf	I2C2_Transmit@i_316,w
  5804  032E  1803               	btfsc	3,0
  5805  032F  2B43               	goto	l3477
  5806                           
  5807                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  5808  0330  0826               	movf	I2C2_Transmit@i_316,w
  5809  0331  0720               	addwf	I2C2_Transmit@pData,w
  5810  0332  00A2               	movwf	??_I2C2_Transmit
  5811  0333  0822               	movf	??_I2C2_Transmit,w
  5812  0334  0086               	movwf	6
  5813  0335  0187               	clrf	7
  5814  0336  0801               	movf	1,w
  5815  0337  00A3               	movwf	??_I2C2_Transmit+1
  5816  0338  0826               	movf	I2C2_Transmit@i_316,w
  5817  0339  3EA0               	addlw	(low (_I2C2_Config| 0))& (0+255)
  5818  033A  0086               	movwf	6
  5819  033B  0187               	clrf	7
  5820  033C  0823               	movf	??_I2C2_Transmit+1,w
  5821  033D  0081               	movwf	1
  5822  033E  3001               	movlw	1
  5823  033F  00A2               	movwf	??_I2C2_Transmit
  5824  0340  0822               	movf	??_I2C2_Transmit,w
  5825  0341  07A6               	addwf	I2C2_Transmit@i_316,f
  5826  0342  2B2C               	goto	l3475
  5827  0343                     l3477:	
  5828                           
  5829                           ;I2C2.c: 93: result = size;
  5830  0343  0821               	movf	I2C2_Transmit@size,w
  5831  0344  00A2               	movwf	??_I2C2_Transmit
  5832  0345  0822               	movf	??_I2C2_Transmit,w
  5833  0346  00A7               	movwf	I2C2_Transmit@result
  5834                           
  5835                           ;I2C2.c: 94: }
  5836  0347  2B54               	goto	l3485
  5837  0348                     l3479:	
  5838                           
  5839                           ;I2C2.c: 95: else
  5840                           ;I2C2.c: 96: result = 0;
  5841  0348  0020               	movlb	0	; select bank0
  5842  0349  01A7               	clrf	I2C2_Transmit@result
  5843                           
  5844                           ;I2C2.c: 98: }
  5845                           
  5846                           ;I2C2.c: 97: break;
  5847  034A  2B54               	goto	l3485
  5848  034B                     l3483:	
  5849  034B  0021               	movlb	1	; select bank1
  5850  034C  0832               	movf	(_I2C2_Config^(0+128)+18),w
  5851                           
  5852                           ; Switch size 1, requested type "space"
  5853                           ; Number of cases is 2, Range of values is 0 to 1
  5854                           ; switch strategies available:
  5855                           ; Name         Instructions Cycles
  5856                           ; simple_byte            7     4 (average)
  5857                           ; direct_byte           10     6 (fixed)
  5858                           ; jumptable            260     6 (fixed)
  5859                           ;	Chosen strategy is simple_byte
  5860  034D  3A00               	xorlw	0	; case 0
  5861  034E  1903               	skipnz
  5862  034F  2AC3               	goto	l3439
  5863  0350  3A01               	xorlw	1	; case 1
  5864  0351  1903               	skipnz
  5865  0352  2B26               	goto	l246
  5866  0353  2B54               	goto	l3485
  5867  0354                     l3485:	
  5868                           
  5869                           ;I2C2.c: 100: return result;
  5870  0354  0020               	movlb	0	; select bank0
  5871  0355  0827               	movf	I2C2_Transmit@result,w
  5872  0356  0008               	return
  5873  0357                     __end_of_I2C2_Transmit:	
  5874                           
  5875                           	psect	text21
  5876  0357                     __ptext21:	
  5877 ;; *************** function _I2C1_Transmit *****************
  5878 ;; Defined at:
  5879 ;;		line 52 in file "I2C1.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  address         1    wreg     unsigned char 
  5882 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  5883 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5884 ;;  size            1    1[BANK0 ] unsigned char 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;  address         1    4[BANK0 ] unsigned char 
  5887 ;;  i               1    6[BANK0 ] unsigned char 
  5888 ;;  i               1    5[BANK0 ] unsigned char 
  5889 ;;  result          1    7[BANK0 ] char 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      char 
  5892 ;; Registers used:
  5893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5899 ;;      Params:         0       2       0       0       0       0
  5900 ;;      Locals:         0       4       0       0       0       0
  5901 ;;      Temps:          0       2       0       0       0       0
  5902 ;;      Totals:         0       8       0       0       0       0
  5903 ;;Total ram usage:        8 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    3
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_I2C_Transmit
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           
  5914                           ;psect for function _I2C1_Transmit
  5915  0357                     _I2C1_Transmit:	
  5916                           
  5917                           ;incstack = 0
  5918                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  5919                           ;I2C1_Transmit@address stored from wreg
  5920  0357  0020               	movlb	0	; select bank0
  5921  0358  00A4               	movwf	I2C1_Transmit@address
  5922                           
  5923                           ;I2C1.c: 54: int8_t result;
  5924                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  5925  0359  2BE2               	goto	l3397
  5926  035A                     l3353:	
  5927                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5928                           
  5929                           ;I2C1.c: 57: {
  5930                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  5931                           
  5932  035A  3005               	movlw	5
  5933  035B  0024               	movlb	4	; select bank4
  5934  035C  0514               	andwf	20,w	;volatile
  5935  035D  0020               	movlb	0	; select bank0
  5936  035E  00A2               	movwf	??_I2C1_Transmit
  5937  035F  0024               	movlb	4	; select bank4
  5938  0360  0816               	movf	22,w	;volatile
  5939  0361  391F               	andlw	31
  5940  0362  0020               	movlb	0	; select bank0
  5941  0363  0422               	iorwf	??_I2C1_Transmit,w
  5942  0364  1D03               	btfss	3,2
  5943  0365  2B5A               	goto	l3353
  5944                           
  5945                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  5946  0366  0024               	movlb	4	; select bank4
  5947  0367  1416               	bsf	22,0	;volatile
  5948  0368                     l3355:	
  5949                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5950                           
  5951  0368  3005               	movlw	5
  5952  0369  0024               	movlb	4	; select bank4
  5953  036A  0514               	andwf	20,w	;volatile
  5954  036B  0020               	movlb	0	; select bank0
  5955  036C  00A2               	movwf	??_I2C1_Transmit
  5956  036D  0024               	movlb	4	; select bank4
  5957  036E  0816               	movf	22,w	;volatile
  5958  036F  391F               	andlw	31
  5959  0370  0020               	movlb	0	; select bank0
  5960  0371  0422               	iorwf	??_I2C1_Transmit,w
  5961  0372  1D03               	btfss	3,2
  5962  0373  2B68               	goto	l3355
  5963                           
  5964                           ;I2C1.c: 63: SSP1BUF = address << 1;
  5965  0374  3524               	lslf	I2C1_Transmit@address,w
  5966  0375  0024               	movlb	4	; select bank4
  5967  0376  0091               	movwf	17	;volatile
  5968  0377                     l91:	
  5969                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  5970                           
  5971  0377  1914               	btfsc	20,2	;volatile
  5972  0378  2B77               	goto	l91
  5973                           
  5974                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  5975  0379  3000               	movlw	0
  5976  037A  1B16               	btfsc	22,6	;volatile
  5977  037B  3001               	movlw	1
  5978  037C  0020               	movlb	0	; select bank0
  5979  037D  00A7               	movwf	I2C1_Transmit@result
  5980                           
  5981                           ;I2C1.c: 67: if (!result)
  5982  037E  0827               	movf	I2C1_Transmit@result,w
  5983  037F  1D03               	btfss	3,2
  5984  0380  2BAE               	goto	l3379
  5985                           
  5986                           ;I2C1.c: 68: {
  5987                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  5988  0381  01A5               	clrf	I2C1_Transmit@i
  5989  0382  2B87               	goto	l3377
  5990  0383                     l3375:	
  5991                           ;I2C1.c: 79: break;
  5992                           
  5993  0383  3001               	movlw	1
  5994  0384  00A2               	movwf	??_I2C1_Transmit
  5995  0385  0822               	movf	??_I2C1_Transmit,w
  5996  0386  07A5               	addwf	I2C1_Transmit@i,f
  5997  0387                     l3377:	
  5998  0387  0821               	movf	I2C1_Transmit@size,w
  5999  0388  0225               	subwf	I2C1_Transmit@i,w
  6000  0389  1803               	btfsc	3,0
  6001  038A  2BAE               	goto	l3379
  6002  038B                     l3365:	
  6003                           ;I2C1.c: 70: {
  6004                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6005                           
  6006  038B  3005               	movlw	5
  6007  038C  0024               	movlb	4	; select bank4
  6008  038D  0514               	andwf	20,w	;volatile
  6009  038E  0020               	movlb	0	; select bank0
  6010  038F  00A2               	movwf	??_I2C1_Transmit
  6011  0390  0024               	movlb	4	; select bank4
  6012  0391  0816               	movf	22,w	;volatile
  6013  0392  391F               	andlw	31
  6014  0393  0020               	movlb	0	; select bank0
  6015  0394  0422               	iorwf	??_I2C1_Transmit,w
  6016  0395  1D03               	btfss	3,2
  6017  0396  2B8B               	goto	l3365
  6018                           
  6019                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  6020  0397  0825               	movf	I2C1_Transmit@i,w
  6021  0398  0720               	addwf	I2C1_Transmit@pData,w
  6022  0399  00A2               	movwf	??_I2C1_Transmit
  6023  039A  0822               	movf	??_I2C1_Transmit,w
  6024  039B  0086               	movwf	6
  6025  039C  0187               	clrf	7
  6026  039D  0801               	movf	1,w
  6027  039E  0024               	movlb	4	; select bank4
  6028  039F  0091               	movwf	17	;volatile
  6029  03A0                     l100:	
  6030                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  6031                           
  6032  03A0  1914               	btfsc	20,2	;volatile
  6033  03A1  2BA0               	goto	l100
  6034                           
  6035                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  6036  03A2  3000               	movlw	0
  6037  03A3  1B16               	btfsc	22,6	;volatile
  6038  03A4  3001               	movlw	1
  6039  03A5  0020               	movlb	0	; select bank0
  6040  03A6  00A7               	movwf	I2C1_Transmit@result
  6041                           
  6042                           ;I2C1.c: 76: if (result)
  6043  03A7  0827               	movf	I2C1_Transmit@result,w
  6044  03A8  1903               	btfsc	3,2
  6045  03A9  2B83               	goto	l3375
  6046                           
  6047                           ;I2C1.c: 77: {
  6048                           ;I2C1.c: 78: result = 2;
  6049  03AA  3002               	movlw	2
  6050  03AB  00A2               	movwf	??_I2C1_Transmit
  6051  03AC  0822               	movf	??_I2C1_Transmit,w
  6052  03AD  00A7               	movwf	I2C1_Transmit@result
  6053  03AE                     l3379:	
  6054                           ;I2C1.c: 80: }
  6055                           ;I2C1.c: 81: }
  6056                           ;I2C1.c: 82: }
  6057                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6058                           
  6059  03AE  3005               	movlw	5
  6060  03AF  0024               	movlb	4	; select bank4
  6061  03B0  0514               	andwf	20,w	;volatile
  6062  03B1  0020               	movlb	0	; select bank0
  6063  03B2  00A2               	movwf	??_I2C1_Transmit
  6064  03B3  0024               	movlb	4	; select bank4
  6065  03B4  0816               	movf	22,w	;volatile
  6066  03B5  391F               	andlw	31
  6067  03B6  0020               	movlb	0	; select bank0
  6068  03B7  0422               	iorwf	??_I2C1_Transmit,w
  6069  03B8  1D03               	btfss	3,2
  6070  03B9  2BAE               	goto	l3379
  6071                           
  6072                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  6073  03BA  0024               	movlb	4	; select bank4
  6074  03BB  1516               	bsf	22,2	;volatile
  6075                           
  6076                           ;I2C1.c: 86: break;
  6077  03BC  2BEB               	goto	l3399
  6078  03BD                     l109:	
  6079                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  6080                           
  6081                           
  6082                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  6083  03BD  0024               	movlb	4	; select bank4
  6084  03BE  1D94               	btfss	20,3	;volatile
  6085  03BF  1E14               	btfss	20,4	;volatile
  6086  03C0  2BDF               	goto	l3393
  6087                           
  6088                           ;I2C1.c: 90: {
  6089                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  6090  03C1  0020               	movlb	0	; select bank0
  6091  03C2  01A6               	clrf	I2C1_Transmit@i_172
  6092  03C3                     l3389:	
  6093  03C3  0821               	movf	I2C1_Transmit@size,w
  6094  03C4  0226               	subwf	I2C1_Transmit@i_172,w
  6095  03C5  1803               	btfsc	3,0
  6096  03C6  2BDA               	goto	l3391
  6097                           
  6098                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  6099  03C7  0826               	movf	I2C1_Transmit@i_172,w
  6100  03C8  0720               	addwf	I2C1_Transmit@pData,w
  6101  03C9  00A2               	movwf	??_I2C1_Transmit
  6102  03CA  0822               	movf	??_I2C1_Transmit,w
  6103  03CB  0086               	movwf	6
  6104  03CC  0187               	clrf	7
  6105  03CD  0801               	movf	1,w
  6106  03CE  00A3               	movwf	??_I2C1_Transmit+1
  6107  03CF  0826               	movf	I2C1_Transmit@i_172,w
  6108  03D0  3EB3               	addlw	(low (_I2C1_Config| 0))& (0+255)
  6109  03D1  0086               	movwf	6
  6110  03D2  0187               	clrf	7
  6111  03D3  0823               	movf	??_I2C1_Transmit+1,w
  6112  03D4  0081               	movwf	1
  6113  03D5  3001               	movlw	1
  6114  03D6  00A2               	movwf	??_I2C1_Transmit
  6115  03D7  0822               	movf	??_I2C1_Transmit,w
  6116  03D8  07A6               	addwf	I2C1_Transmit@i_172,f
  6117  03D9  2BC3               	goto	l3389
  6118  03DA                     l3391:	
  6119                           
  6120                           ;I2C1.c: 93: result = size;
  6121  03DA  0821               	movf	I2C1_Transmit@size,w
  6122  03DB  00A2               	movwf	??_I2C1_Transmit
  6123  03DC  0822               	movf	??_I2C1_Transmit,w
  6124  03DD  00A7               	movwf	I2C1_Transmit@result
  6125                           
  6126                           ;I2C1.c: 94: }
  6127  03DE  2BEB               	goto	l3399
  6128  03DF                     l3393:	
  6129                           
  6130                           ;I2C1.c: 95: else
  6131                           ;I2C1.c: 96: result = 0;
  6132  03DF  0020               	movlb	0	; select bank0
  6133  03E0  01A7               	clrf	I2C1_Transmit@result
  6134                           
  6135                           ;I2C1.c: 98: }
  6136                           
  6137                           ;I2C1.c: 97: break;
  6138  03E1  2BEB               	goto	l3399
  6139  03E2                     l3397:	
  6140  03E2  0021               	movlb	1	; select bank1
  6141  03E3  0845               	movf	(_I2C1_Config^(0+128)+18),w
  6142                           
  6143                           ; Switch size 1, requested type "space"
  6144                           ; Number of cases is 2, Range of values is 0 to 1
  6145                           ; switch strategies available:
  6146                           ; Name         Instructions Cycles
  6147                           ; simple_byte            7     4 (average)
  6148                           ; direct_byte           10     6 (fixed)
  6149                           ; jumptable            260     6 (fixed)
  6150                           ;	Chosen strategy is simple_byte
  6151  03E4  3A00               	xorlw	0	; case 0
  6152  03E5  1903               	skipnz
  6153  03E6  2B5A               	goto	l3353
  6154  03E7  3A01               	xorlw	1	; case 1
  6155  03E8  1903               	skipnz
  6156  03E9  2BBD               	goto	l109
  6157  03EA  2BEB               	goto	l3399
  6158  03EB                     l3399:	
  6159                           
  6160                           ;I2C1.c: 100: return result;
  6161  03EB  0020               	movlb	0	; select bank0
  6162  03EC  0827               	movf	I2C1_Transmit@result,w
  6163  03ED  0008               	return
  6164  03EE                     __end_of_I2C1_Transmit:	
  6165                           
  6166                           	psect	text22
  6167  0FD6                     __ptext22:	
  6168 ;; *************** function _I2C_Init *****************
  6169 ;; Defined at:
  6170 ;;		line 6 in file "I2C_Common.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;  I2Cx            1    wreg     enum E3164
  6173 ;;  address         1    5[BANK0 ] unsigned char 
  6174 ;;  mode            1    6[BANK0 ] enum E3155
  6175 ;;  Speed           1    7[BANK0 ] enum E3159
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  I2Cx            1   10[BANK0 ] enum E3164
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      void 
  6180 ;; Registers used:
  6181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6187 ;;      Params:         0       3       0       0       0       0
  6188 ;;      Locals:         0       1       0       0       0       0
  6189 ;;      Temps:          0       2       0       0       0       0
  6190 ;;      Totals:         0       6       0       0       0       0
  6191 ;;Total ram usage:        6 bytes
  6192 ;; Hardware stack levels used:    1
  6193 ;; Hardware stack levels required when called:    5
  6194 ;; This function calls:
  6195 ;;		_I2C1_Setting
  6196 ;;		_I2C2_Setting
  6197 ;; This function is called by:
  6198 ;;		_DAC_Initialize
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           
  6203                           ;psect for function _I2C_Init
  6204  0FD6                     _I2C_Init:	
  6205                           
  6206                           ;incstack = 0
  6207                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6208                           ;I2C_Init@I2Cx stored from wreg
  6209  0FD6  0020               	movlb	0	; select bank0
  6210  0FD7  00AA               	movwf	I2C_Init@I2Cx
  6211                           
  6212                           ;I2C_Common.c: 8: switch(I2Cx)
  6213  0FD8  2FF4               	goto	l3523
  6214  0FD9                     l3517:	
  6215                           ;I2C_Common.c: 9: {
  6216                           ;I2C_Common.c: 10: case I2C1_MODULE:
  6217                           
  6218                           
  6219                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  6220  0FD9  0826               	movf	I2C_Init@mode,w
  6221  0FDA  00A8               	movwf	??_I2C_Init
  6222  0FDB  0828               	movf	??_I2C_Init,w
  6223  0FDC  00A1               	movwf	I2C1_Setting@mode
  6224  0FDD  0827               	movf	I2C_Init@Speed,w
  6225  0FDE  00A9               	movwf	??_I2C_Init+1
  6226  0FDF  0829               	movf	??_I2C_Init+1,w
  6227  0FE0  00A2               	movwf	I2C1_Setting@Speed
  6228  0FE1  0825               	movf	I2C_Init@address,w
  6229  0FE2  3186  265C  318F   	fcall	_I2C1_Setting
  6230                           
  6231                           ;I2C_Common.c: 12: break;
  6232  0FE5  2FFD               	goto	l338
  6233  0FE6                     l3519:	
  6234                           ;I2C_Common.c: 14: case I2C2_MODULE:
  6235                           
  6236                           
  6237                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  6238  0FE6  0020               	movlb	0	; select bank0
  6239  0FE7  0826               	movf	I2C_Init@mode,w
  6240  0FE8  00A8               	movwf	??_I2C_Init
  6241  0FE9  0828               	movf	??_I2C_Init,w
  6242  0FEA  00A1               	movwf	I2C2_Setting@mode
  6243  0FEB  0827               	movf	I2C_Init@Speed,w
  6244  0FEC  00A9               	movwf	??_I2C_Init+1
  6245  0FED  0829               	movf	??_I2C_Init+1,w
  6246  0FEE  00A2               	movwf	I2C2_Setting@Speed
  6247  0FEF  0825               	movf	I2C_Init@address,w
  6248  0FF0  3186  2618  318F   	fcall	_I2C2_Setting
  6249                           
  6250                           ;I2C_Common.c: 17: }
  6251                           
  6252                           ;I2C_Common.c: 16: break;
  6253  0FF3  2FFD               	goto	l338
  6254  0FF4                     l3523:	
  6255  0FF4  0020               	movlb	0	; select bank0
  6256  0FF5  082A               	movf	I2C_Init@I2Cx,w
  6257                           
  6258                           ; Switch size 1, requested type "space"
  6259                           ; Number of cases is 2, Range of values is 0 to 1
  6260                           ; switch strategies available:
  6261                           ; Name         Instructions Cycles
  6262                           ; simple_byte            7     4 (average)
  6263                           ; direct_byte           10     6 (fixed)
  6264                           ; jumptable            260     6 (fixed)
  6265                           ;	Chosen strategy is simple_byte
  6266  0FF6  3A00               	xorlw	0	; case 0
  6267  0FF7  1903               	skipnz
  6268  0FF8  2FD9               	goto	l3517
  6269  0FF9  3A01               	xorlw	1	; case 1
  6270  0FFA  1903               	skipnz
  6271  0FFB  2FE6               	goto	l3519
  6272  0FFC  2FFD               	goto	l338
  6273  0FFD                     l338:	
  6274                           
  6275                           ;I2C_Common.c: 19: PEIE = 1;
  6276  0FFD  170B               	bsf	11,6	;volatile
  6277                           
  6278                           ;I2C_Common.c: 20: GIE = 1;
  6279  0FFE  178B               	bsf	11,7	;volatile
  6280  0FFF  0008               	return
  6281  1000                     __end_of_I2C_Init:	
  6282                           
  6283                           	psect	text23
  6284  0618                     __ptext23:	
  6285 ;; *************** function _I2C2_Setting *****************
  6286 ;; Defined at:
  6287 ;;		line 15 in file "I2C2.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  address         1    wreg     unsigned char 
  6290 ;;  mode            1    1[BANK0 ] enum E3155
  6291 ;;  Speed           1    2[BANK0 ] enum E3159
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;  address         1    4[BANK0 ] unsigned char 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6303 ;;      Params:         0       2       0       0       0       0
  6304 ;;      Locals:         0       1       0       0       0       0
  6305 ;;      Temps:          0       1       0       0       0       0
  6306 ;;      Totals:         0       4       0       0       0       0
  6307 ;;Total ram usage:        4 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:    4
  6310 ;; This function calls:
  6311 ;;		_I2C2_PinInit
  6312 ;; This function is called by:
  6313 ;;		_I2C_Init
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           
  6318                           ;psect for function _I2C2_Setting
  6319  0618                     _I2C2_Setting:	
  6320                           
  6321                           ;incstack = 0
  6322                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6323                           ;I2C2_Setting@address stored from wreg
  6324  0618  0020               	movlb	0	; select bank0
  6325  0619  00A4               	movwf	I2C2_Setting@address
  6326                           
  6327                           ;I2C2.c: 17: I2C2_PinInit();
  6328  061A  318E  2670  3186   	fcall	_I2C2_PinInit
  6329                           
  6330                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  6331  061D  0020               	movlb	0	; select bank0
  6332  061E  0821               	movf	I2C2_Setting@mode,w
  6333  061F  00A3               	movwf	??_I2C2_Setting
  6334  0620  0823               	movf	??_I2C2_Setting,w
  6335  0621  0021               	movlb	1	; select bank1
  6336  0622  00B2               	movwf	(_I2C2_Config^(0+128)+18)
  6337                           
  6338                           ;I2C2.c: 20: switch(mode)
  6339  0623  2E4C               	goto	l3435
  6340  0624                     l211:	
  6341                           ;I2C2.c: 21: {
  6342                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  6343                           
  6344                           
  6345                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  6346  0624  0024               	movlb	4	; select bank4
  6347  0625  159D               	bsf	29,3	;volatile
  6348                           
  6349                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6350  0626  0020               	movlb	0	; select bank0
  6351  0627  0822               	movf	I2C2_Setting@Speed,w
  6352  0628  1D03               	btfss	3,2
  6353  0629  2E2E               	goto	l3413
  6354                           
  6355                           ;I2C2.c: 25: {
  6356                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  6357  062A  0024               	movlb	4	; select bank4
  6358  062B  179C               	bsf	28,7	;volatile
  6359                           
  6360                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  6361  062C  304F               	movlw	79
  6362  062D  2E38               	goto	L3
  6363  062E                     l3413:	
  6364                           ;I2C2.c: 28: }
  6365                           
  6366                           
  6367                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6368  062E  0020               	movlb	0	; select bank0
  6369  062F  0322               	decf	I2C2_Setting@Speed,w
  6370  0630  1D03               	btfss	3,2
  6371  0631  2E39               	goto	l3419
  6372                           
  6373                           ;I2C2.c: 30: {
  6374                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  6375  0632  307F               	movlw	127
  6376  0633  00A3               	movwf	??_I2C2_Setting
  6377  0634  0823               	movf	??_I2C2_Setting,w
  6378  0635  0024               	movlb	4	; select bank4
  6379  0636  059C               	andwf	28,f	;volatile
  6380                           
  6381                           ;I2C2.c: 32: SSP2ADD = 0x13;
  6382  0637  3013               	movlw	19
  6383  0638                     L3:	
  6384  0638  009A               	movwf	26	;volatile
  6385  0639                     l3419:	
  6386                           
  6387                           ;I2C2.c: 33: }
  6388                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  6389  0639  0024               	movlb	4	; select bank4
  6390  063A  2E4A               	goto	l3431
  6391  063B                     l3421:	
  6392                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  6393                           
  6394                           ;I2C2.c: 35: break;
  6395                           
  6396                           
  6397                           ;I2C2.c: 38: SSP2STAT = 0x00;
  6398  063B  0024               	movlb	4	; select bank4
  6399  063C  019C               	clrf	28	;volatile
  6400                           
  6401                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  6402  063D  3006               	movlw	6
  6403  063E  0020               	movlb	0	; select bank0
  6404  063F  00A3               	movwf	??_I2C2_Setting
  6405  0640  0823               	movf	??_I2C2_Setting,w
  6406  0641  0024               	movlb	4	; select bank4
  6407  0642  049D               	iorwf	29,f	;volatile
  6408                           
  6409                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  6410  0643  141E               	bsf	30,0	;volatile
  6411                           
  6412                           ;I2C2.c: 41: SSP2ADD = address << 1;
  6413  0644  0020               	movlb	0	; select bank0
  6414  0645  3524               	lslf	I2C2_Setting@address,w
  6415  0646  0024               	movlb	4	; select bank4
  6416  0647  009A               	movwf	26	;volatile
  6417                           
  6418                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  6419  0648  30FE               	movlw	254
  6420  0649  009B               	movwf	27	;volatile
  6421  064A                     l3431:	
  6422                           
  6423                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  6424  064A  169D               	bsf	29,5	;volatile
  6425                           
  6426                           ;I2C2.c: 45: }
  6427                           
  6428                           ;I2C2.c: 44: break;
  6429  064B  2E55               	goto	l215
  6430  064C                     l3435:	
  6431  064C  0020               	movlb	0	; select bank0
  6432  064D  0821               	movf	I2C2_Setting@mode,w
  6433                           
  6434                           ; Switch size 1, requested type "space"
  6435                           ; Number of cases is 2, Range of values is 0 to 1
  6436                           ; switch strategies available:
  6437                           ; Name         Instructions Cycles
  6438                           ; simple_byte            7     4 (average)
  6439                           ; direct_byte           10     6 (fixed)
  6440                           ; jumptable            260     6 (fixed)
  6441                           ;	Chosen strategy is simple_byte
  6442  064E  3A00               	xorlw	0	; case 0
  6443  064F  1903               	skipnz
  6444  0650  2E24               	goto	l211
  6445  0651  3A01               	xorlw	1	; case 1
  6446  0652  1903               	skipnz
  6447  0653  2E3B               	goto	l3421
  6448  0654  2E55               	goto	l215
  6449  0655                     l215:	
  6450                           
  6451                           ;I2C2.c: 46: SSP2IE = 1;
  6452  0655  0021               	movlb	1	; select bank1
  6453  0656  1414               	bsf	20,0	;volatile
  6454                           
  6455                           ;I2C2.c: 47: BCL2IE = 1;
  6456  0657  1494               	bsf	20,1	;volatile
  6457                           
  6458                           ;I2C2.c: 48: SSP2IF = 0;
  6459  0658  0020               	movlb	0	; select bank0
  6460  0659  1014               	bcf	20,0	;volatile
  6461                           
  6462                           ;I2C2.c: 49: BCL2IF = 0;
  6463  065A  1094               	bcf	20,1	;volatile
  6464  065B  0008               	return
  6465  065C                     __end_of_I2C2_Setting:	
  6466                           
  6467                           	psect	text24
  6468  0E70                     __ptext24:	
  6469 ;; *************** function _I2C2_PinInit *****************
  6470 ;; Defined at:
  6471 ;;		line 9 in file "I2C2.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;		None
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;		None
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  1    wreg      void 
  6478 ;; Registers used:
  6479 ;;		wreg, status,2, status,0
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6485 ;;      Params:         0       0       0       0       0       0
  6486 ;;      Locals:         0       0       0       0       0       0
  6487 ;;      Temps:          0       1       0       0       0       0
  6488 ;;      Totals:         0       1       0       0       0       0
  6489 ;;Total ram usage:        1 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    3
  6492 ;; This function calls:
  6493 ;;		Nothing
  6494 ;; This function is called by:
  6495 ;;		_I2C2_Setting
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           
  6500                           ;psect for function _I2C2_PinInit
  6501  0E70                     _I2C2_PinInit:	
  6502                           
  6503                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  6504                           
  6505                           ;incstack = 0
  6506                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  6507  0E70  3024               	movlw	36
  6508  0E71  0020               	movlb	0	; select bank0
  6509  0E72  00A0               	movwf	??_I2C2_PinInit
  6510  0E73  0820               	movf	??_I2C2_PinInit,w
  6511  0E74  0021               	movlb	1	; select bank1
  6512  0E75  048D               	iorwf	13,f	;volatile
  6513                           
  6514                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  6515  0E76  30DB               	movlw	219
  6516  0E77  0020               	movlb	0	; select bank0
  6517  0E78  00A0               	movwf	??_I2C2_PinInit
  6518  0E79  0820               	movf	??_I2C2_PinInit,w
  6519  0E7A  0023               	movlb	3	; select bank3
  6520  0E7B  058D               	andwf	13,f	;volatile
  6521  0E7C  0008               	return
  6522  0E7D                     __end_of_I2C2_PinInit:	
  6523                           
  6524                           	psect	text25
  6525  065C                     __ptext25:	
  6526 ;; *************** function _I2C1_Setting *****************
  6527 ;; Defined at:
  6528 ;;		line 15 in file "I2C1.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;  address         1    wreg     unsigned char 
  6531 ;;  mode            1    1[BANK0 ] enum E3155
  6532 ;;  Speed           1    2[BANK0 ] enum E3159
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;  address         1    4[BANK0 ] unsigned char 
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6544 ;;      Params:         0       2       0       0       0       0
  6545 ;;      Locals:         0       1       0       0       0       0
  6546 ;;      Temps:          0       1       0       0       0       0
  6547 ;;      Totals:         0       4       0       0       0       0
  6548 ;;Total ram usage:        4 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    4
  6551 ;; This function calls:
  6552 ;;		_I2C1_PinInit
  6553 ;; This function is called by:
  6554 ;;		_I2C_Init
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           
  6559                           ;psect for function _I2C1_Setting
  6560  065C                     _I2C1_Setting:	
  6561                           
  6562                           ;incstack = 0
  6563                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6564                           ;I2C1_Setting@address stored from wreg
  6565  065C  0020               	movlb	0	; select bank0
  6566  065D  00A4               	movwf	I2C1_Setting@address
  6567                           
  6568                           ;I2C1.c: 17: I2C1_PinInit();
  6569  065E  318E  2663  3186   	fcall	_I2C1_PinInit
  6570                           
  6571                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  6572  0661  0020               	movlb	0	; select bank0
  6573  0662  0821               	movf	I2C1_Setting@mode,w
  6574  0663  00A3               	movwf	??_I2C1_Setting
  6575  0664  0823               	movf	??_I2C1_Setting,w
  6576  0665  0021               	movlb	1	; select bank1
  6577  0666  00C5               	movwf	(_I2C1_Config^(0+128)+18)
  6578                           
  6579                           ;I2C1.c: 20: switch(mode)
  6580  0667  2E90               	goto	l3349
  6581  0668                     l74:	
  6582                           ;I2C1.c: 21: {
  6583                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  6584                           
  6585                           
  6586                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  6587  0668  0024               	movlb	4	; select bank4
  6588  0669  1595               	bsf	21,3	;volatile
  6589                           
  6590                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6591  066A  0020               	movlb	0	; select bank0
  6592  066B  0822               	movf	I2C1_Setting@Speed,w
  6593  066C  1D03               	btfss	3,2
  6594  066D  2E72               	goto	l3327
  6595                           
  6596                           ;I2C1.c: 25: {
  6597                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  6598  066E  0024               	movlb	4	; select bank4
  6599  066F  1794               	bsf	20,7	;volatile
  6600                           
  6601                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  6602  0670  304F               	movlw	79
  6603  0671  2E7C               	goto	L4
  6604  0672                     l3327:	
  6605                           ;I2C1.c: 28: }
  6606                           
  6607                           
  6608                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6609  0672  0020               	movlb	0	; select bank0
  6610  0673  0322               	decf	I2C1_Setting@Speed,w
  6611  0674  1D03               	btfss	3,2
  6612  0675  2E7D               	goto	l3333
  6613                           
  6614                           ;I2C1.c: 30: {
  6615                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  6616  0676  307F               	movlw	127
  6617  0677  00A3               	movwf	??_I2C1_Setting
  6618  0678  0823               	movf	??_I2C1_Setting,w
  6619  0679  0024               	movlb	4	; select bank4
  6620  067A  0594               	andwf	20,f	;volatile
  6621                           
  6622                           ;I2C1.c: 32: SSP1ADD = 0x13;
  6623  067B  3013               	movlw	19
  6624  067C                     L4:	
  6625  067C  0092               	movwf	18	;volatile
  6626  067D                     l3333:	
  6627                           
  6628                           ;I2C1.c: 33: }
  6629                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  6630  067D  0024               	movlb	4	; select bank4
  6631  067E  2E8E               	goto	l3345
  6632  067F                     l3335:	
  6633                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  6634                           
  6635                           ;I2C1.c: 35: break;
  6636                           
  6637                           
  6638                           ;I2C1.c: 38: SSP1STAT = 0x00;
  6639  067F  0024               	movlb	4	; select bank4
  6640  0680  0194               	clrf	20	;volatile
  6641                           
  6642                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  6643  0681  3006               	movlw	6
  6644  0682  0020               	movlb	0	; select bank0
  6645  0683  00A3               	movwf	??_I2C1_Setting
  6646  0684  0823               	movf	??_I2C1_Setting,w
  6647  0685  0024               	movlb	4	; select bank4
  6648  0686  0495               	iorwf	21,f	;volatile
  6649                           
  6650                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  6651  0687  1416               	bsf	22,0	;volatile
  6652                           
  6653                           ;I2C1.c: 41: SSP1ADD = address << 1;
  6654  0688  0020               	movlb	0	; select bank0
  6655  0689  3524               	lslf	I2C1_Setting@address,w
  6656  068A  0024               	movlb	4	; select bank4
  6657  068B  0092               	movwf	18	;volatile
  6658                           
  6659                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  6660  068C  30FE               	movlw	254
  6661  068D  0093               	movwf	19	;volatile
  6662  068E                     l3345:	
  6663                           
  6664                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  6665  068E  1695               	bsf	21,5	;volatile
  6666                           
  6667                           ;I2C1.c: 45: }
  6668                           
  6669                           ;I2C1.c: 44: break;
  6670  068F  2E99               	goto	l78
  6671  0690                     l3349:	
  6672  0690  0020               	movlb	0	; select bank0
  6673  0691  0821               	movf	I2C1_Setting@mode,w
  6674                           
  6675                           ; Switch size 1, requested type "space"
  6676                           ; Number of cases is 2, Range of values is 0 to 1
  6677                           ; switch strategies available:
  6678                           ; Name         Instructions Cycles
  6679                           ; simple_byte            7     4 (average)
  6680                           ; direct_byte           10     6 (fixed)
  6681                           ; jumptable            260     6 (fixed)
  6682                           ;	Chosen strategy is simple_byte
  6683  0692  3A00               	xorlw	0	; case 0
  6684  0693  1903               	skipnz
  6685  0694  2E68               	goto	l74
  6686  0695  3A01               	xorlw	1	; case 1
  6687  0696  1903               	skipnz
  6688  0697  2E7F               	goto	l3335
  6689  0698  2E99               	goto	l78
  6690  0699                     l78:	
  6691                           
  6692                           ;I2C1.c: 46: SSP1IE = 1;
  6693  0699  0021               	movlb	1	; select bank1
  6694  069A  1591               	bsf	17,3	;volatile
  6695                           
  6696                           ;I2C1.c: 47: BCL1IE = 1;
  6697  069B  1592               	bsf	18,3	;volatile
  6698                           
  6699                           ;I2C1.c: 48: SSP1IF = 0;
  6700  069C  0020               	movlb	0	; select bank0
  6701  069D  1191               	bcf	17,3	;volatile
  6702                           
  6703                           ;I2C1.c: 49: BCL1IF = 0;
  6704  069E  1192               	bcf	18,3	;volatile
  6705  069F  0008               	return
  6706  06A0                     __end_of_I2C1_Setting:	
  6707                           
  6708                           	psect	text26
  6709  0E63                     __ptext26:	
  6710 ;; *************** function _I2C1_PinInit *****************
  6711 ;; Defined at:
  6712 ;;		line 9 in file "I2C1.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  1    wreg      void 
  6719 ;; Registers used:
  6720 ;;		wreg, status,2, status,0
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6726 ;;      Params:         0       0       0       0       0       0
  6727 ;;      Locals:         0       0       0       0       0       0
  6728 ;;      Temps:          0       1       0       0       0       0
  6729 ;;      Totals:         0       1       0       0       0       0
  6730 ;;Total ram usage:        1 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:    3
  6733 ;; This function calls:
  6734 ;;		Nothing
  6735 ;; This function is called by:
  6736 ;;		_I2C1_Setting
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           
  6741                           ;psect for function _I2C1_PinInit
  6742  0E63                     _I2C1_PinInit:	
  6743                           
  6744                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  6745                           
  6746                           ;incstack = 0
  6747                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  6748  0E63  3012               	movlw	18
  6749  0E64  0020               	movlb	0	; select bank0
  6750  0E65  00A0               	movwf	??_I2C1_PinInit
  6751  0E66  0820               	movf	??_I2C1_PinInit,w
  6752  0E67  0021               	movlb	1	; select bank1
  6753  0E68  048D               	iorwf	13,f	;volatile
  6754                           
  6755                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  6756  0E69  30ED               	movlw	237
  6757  0E6A  0020               	movlb	0	; select bank0
  6758  0E6B  00A0               	movwf	??_I2C1_PinInit
  6759  0E6C  0820               	movf	??_I2C1_PinInit,w
  6760  0E6D  0023               	movlb	3	; select bank3
  6761  0E6E  058D               	andwf	13,f	;volatile
  6762  0E6F  0008               	return
  6763  0E70                     __end_of_I2C1_PinInit:	
  6764                           
  6765                           	psect	text27
  6766  0FAE                     __ptext27:	
  6767 ;; *************** function _Buzzer_Init *****************
  6768 ;; Defined at:
  6769 ;;		line 11 in file "Buzzer.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;		None
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;		None
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  1    wreg      void 
  6776 ;; Registers used:
  6777 ;;		wreg, status,2, status,0
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6783 ;;      Params:         0       0       0       0       0       0
  6784 ;;      Locals:         0       0       0       0       0       0
  6785 ;;      Temps:          0       1       0       0       0       0
  6786 ;;      Totals:         0       1       0       0       0       0
  6787 ;;Total ram usage:        1 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:    3
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_main
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           
  6798                           ;psect for function _Buzzer_Init
  6799  0FAE                     _Buzzer_Init:	
  6800                           
  6801                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  6802                           
  6803                           ;incstack = 0
  6804                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  6805  0FAE  307F               	movlw	127
  6806  0FAF  0020               	movlb	0	; select bank0
  6807  0FB0  00A0               	movwf	??_Buzzer_Init
  6808  0FB1  0820               	movf	??_Buzzer_Init,w
  6809  0FB2  0021               	movlb	1	; select bank1
  6810  0FB3  058C               	andwf	12,f	;volatile
  6811                           
  6812                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  6813  0FB4  307F               	movlw	127
  6814  0FB5  0020               	movlb	0	; select bank0
  6815  0FB6  00A0               	movwf	??_Buzzer_Init
  6816  0FB7  0820               	movf	??_Buzzer_Init,w
  6817  0FB8  0023               	movlb	3	; select bank3
  6818  0FB9  058C               	andwf	12,f	;volatile
  6819                           
  6820                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  6821  0FBA  0022               	movlb	2	; select bank2
  6822  0FBB  159D               	bsf	29,3	;volatile
  6823                           
  6824                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  6825  0FBC  0020               	movlb	0	; select bank0
  6826  0FBD  081C               	movf	28,w	;volatile
  6827                           
  6828                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  6829  0FBE  149C               	bsf	28,1	;volatile
  6830                           
  6831                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  6832  0FBF  151C               	bsf	28,2	;volatile
  6833                           
  6834                           ;Buzzer.c: 21: TMR2 = 0x00;
  6835  0FC0  019A               	clrf	26	;volatile
  6836                           
  6837                           ;Buzzer.c: 22: PR2 = 0xFF;
  6838  0FC1  30FF               	movlw	255
  6839  0FC2  009B               	movwf	27	;volatile
  6840                           
  6841                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  6842  0FC3  303F               	movlw	63
  6843  0FC4  00A0               	movwf	??_Buzzer_Init
  6844  0FC5  0820               	movf	??_Buzzer_Init,w
  6845  0FC6  0025               	movlb	5	; select bank5
  6846  0FC7  059A               	andwf	26,f	;volatile
  6847                           
  6848                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  6849  0FC8  300C               	movlw	12
  6850  0FC9  0020               	movlb	0	; select bank0
  6851  0FCA  00A0               	movwf	??_Buzzer_Init
  6852  0FCB  0820               	movf	??_Buzzer_Init,w
  6853  0FCC  0025               	movlb	5	; select bank5
  6854  0FCD  049A               	iorwf	26,f	;volatile
  6855                           
  6856                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  6857  0FCE  30F3               	movlw	243
  6858  0FCF  0020               	movlb	0	; select bank0
  6859  0FD0  00A0               	movwf	??_Buzzer_Init
  6860  0FD1  0820               	movf	??_Buzzer_Init,w
  6861  0FD2  0025               	movlb	5	; select bank5
  6862  0FD3  059E               	andwf	30,f	;volatile
  6863                           
  6864                           ;Buzzer.c: 28: CCPR2L = 0x00;
  6865  0FD4  0198               	clrf	24	;volatile
  6866  0FD5  0008               	return
  6867  0FD6                     __end_of_Buzzer_Init:	
  6868                           
  6869                           	psect	text28
  6870  0F03                     __ptext28:	
  6871 ;; *************** function _Basic_Init *****************
  6872 ;; Defined at:
  6873 ;;		line 60 in file "main.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;		None
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;		None
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  1    wreg      char 
  6880 ;; Registers used:
  6881 ;;		wreg, status,2
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6887 ;;      Params:         0       0       0       0       0       0
  6888 ;;      Locals:         0       0       0       0       0       0
  6889 ;;      Temps:          0       0       0       0       0       0
  6890 ;;      Totals:         0       0       0       0       0       0
  6891 ;;Total ram usage:        0 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:    3
  6894 ;; This function calls:
  6895 ;;		Nothing
  6896 ;; This function is called by:
  6897 ;;		_main
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           
  6902                           ;psect for function _Basic_Init
  6903  0F03                     _Basic_Init:	
  6904                           
  6905                           ;main.c: 62: OSCCON = 0xF0;
  6906                           
  6907                           ;incstack = 0
  6908                           ; Regs used in _Basic_Init: [wreg+status,2]
  6909  0F03  30F0               	movlw	240
  6910  0F04  0021               	movlb	1	; select bank1
  6911  0F05  0099               	movwf	25	;volatile
  6912                           
  6913                           ;main.c: 66: TRISA = 0x07;
  6914  0F06  3007               	movlw	7
  6915  0F07  008C               	movwf	12	;volatile
  6916                           
  6917                           ;main.c: 67: ANSELA = 0x07;
  6918  0F08  3007               	movlw	7
  6919  0F09  0023               	movlb	3	; select bank3
  6920  0F0A  008C               	movwf	12	;volatile
  6921                           
  6922                           ;main.c: 69: TRISB = 0x40;
  6923  0F0B  3040               	movlw	64
  6924  0F0C  0021               	movlb	1	; select bank1
  6925  0F0D  008D               	movwf	13	;volatile
  6926                           
  6927                           ;main.c: 70: ANSELB = 0x00;
  6928  0F0E  0023               	movlb	3	; select bank3
  6929  0F0F  018D               	clrf	13	;volatile
  6930                           
  6931                           ;main.c: 72: APFCON0 = 0x08;
  6932  0F10  3008               	movlw	8
  6933  0F11  0022               	movlb	2	; select bank2
  6934  0F12  009D               	movwf	29	;volatile
  6935                           
  6936                           ;main.c: 73: APFCON1 = 0x00;
  6937  0F13  019E               	clrf	30	;volatile
  6938                           
  6939                           ;main.c: 75: PORTA = 0x00;
  6940  0F14  0020               	movlb	0	; select bank0
  6941  0F15  018C               	clrf	12	;volatile
  6942                           
  6943                           ;main.c: 76: PORTB = 0x00;
  6944  0F16  018D               	clrf	13	;volatile
  6945  0F17  0008               	return
  6946  0F18                     __end_of_Basic_Init:	
  6947                           ;main.c: 78: return 0;
  6948                           ;	Return value of _Basic_Init is never used
  6949                           
  6950                           
  6951                           	psect	intentry
  6952  0004                     __pintentry:	
  6953 ;; *************** function _Handler *****************
  6954 ;; Defined at:
  6955 ;;		line 81 in file "main.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;		None
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  1    wreg      void 
  6962 ;; Registers used:
  6963 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6969 ;;      Params:         0       0       0       0       0       0
  6970 ;;      Locals:         0       0       0       0       0       0
  6971 ;;      Temps:          1       0       0       0       0       0
  6972 ;;      Totals:         1       0       0       0       0       0
  6973 ;;Total ram usage:        1 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; Hardware stack levels required when called:    2
  6976 ;; This function calls:
  6977 ;;		_Buzzer_Handler
  6978 ;;		_CPSx_Read
  6979 ;;		_I2C_CommonInterrupt
  6980 ;;		_Timer1_Count10us
  6981 ;;		_Timer1_DetectAssignCount
  6982 ;;		_Timer4_Handler
  6983 ;;		_Timer6_Handler
  6984 ;;		_mTouch_IntervalDecrement
  6985 ;; This function is called by:
  6986 ;;		Interrupt level 1
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990  0004                     _Handler:	
  6991                           
  6992                           ;incstack = 0
  6993  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6994                           
  6995                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6996  0005  3180               	pagesel	$
  6997  0006  0020               	movlb	0	; select bank0
  6998  0007  087F               	movf	127,w
  6999  0008  00FB               	movwf	??_Handler
  7000                           
  7001                           ;main.c: 83: if(Timer6_Handler())
  7002  0009  318E  2658  3180   	fcall	_Timer6_Handler
  7003  000C  3A00               	xorlw	0
  7004  000D  1903               	skipnz
  7005  000E  2812               	goto	i1l3247
  7006                           
  7007                           ;main.c: 84: {
  7008                           ;main.c: 85: Timer1_Count10us();
  7009  000F  318E  2639  3180   	fcall	_Timer1_Count10us
  7010  0012                     i1l3247:	
  7011                           
  7012                           ;main.c: 86: }
  7013                           ;main.c: 87: if(Timer4_Handler())
  7014  0012  318E  264D  3180   	fcall	_Timer4_Handler
  7015  0015  3A00               	xorlw	0
  7016  0016  1903               	skipnz
  7017  0017  2821               	goto	i1l3255
  7018                           
  7019                           ;main.c: 88: {
  7020                           ;main.c: 89: CPSx_Read();
  7021  0018  318F  2789  3180   	fcall	_CPSx_Read
  7022                           
  7023                           ;main.c: 90: Buzzer_Handler();
  7024  001B  318E  26EE  3180   	fcall	_Buzzer_Handler
  7025                           
  7026                           ;main.c: 91: mTouch_IntervalDecrement();
  7027  001E  318E  2698  3180   	fcall	_mTouch_IntervalDecrement
  7028  0021                     i1l3255:	
  7029                           
  7030                           ;main.c: 92: }
  7031                           ;main.c: 93: if(Timer1_DetectAssignCount())
  7032  0021  318F  2718  3180   	fcall	_Timer1_DetectAssignCount
  7033  0024  3A00               	xorlw	0
  7034  0025  1903               	skipnz
  7035  0026  282A               	goto	i1l3259
  7036                           
  7037                           ;main.c: 94: LATA6 = !LATA6;
  7038  0027  3040               	movlw	64
  7039  0028  0022               	movlb	2	; select bank2
  7040  0029  068C               	xorwf	12,f
  7041  002A                     i1l3259:	
  7042                           
  7043                           ;main.c: 96: I2C_CommonInterrupt();
  7044  002A  318E  261E         	fcall	_I2C_CommonInterrupt
  7045  002C  087B               	movf	??_Handler,w
  7046  002D  0020               	movlb	0	; select bank0
  7047  002E  00FF               	movwf	127
  7048  002F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7049  0030  0009               	retfie
  7050  0031                     __end_of_Handler:	
  7051                           
  7052                           	psect	text30
  7053  0E98                     __ptext30:	
  7054 ;; *************** function _mTouch_IntervalDecrement *****************
  7055 ;; Defined at:
  7056 ;;		line 99 in file "main.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2, status,0
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7070 ;;      Params:         0       0       0       0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0       0
  7073 ;;      Totals:         0       0       0       0       0       0
  7074 ;;Total ram usage:        0 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; This function calls:
  7077 ;;		Nothing
  7078 ;; This function is called by:
  7079 ;;		_Handler
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083                           
  7084                           ;psect for function _mTouch_IntervalDecrement
  7085  0E98                     _mTouch_IntervalDecrement:	
  7086                           
  7087                           ;main.c: 101: if(mTouch_Interval[0]>0)
  7088                           
  7089                           ;incstack = 0
  7090                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  7091  0E98  0870               	movf	_mTouch_Interval,w
  7092  0E99  1903               	btfsc	3,2
  7093  0E9A  2E9D               	goto	i1l644
  7094                           
  7095                           ;main.c: 102: mTouch_Interval[0]--;
  7096  0E9B  3001               	movlw	1
  7097  0E9C  02F0               	subwf	_mTouch_Interval,f
  7098  0E9D                     i1l644:	
  7099                           
  7100                           ;main.c: 103: if(mTouch_Interval[1]>0)
  7101  0E9D  0871               	movf	_mTouch_Interval+1,w
  7102  0E9E  1903               	btfsc	3,2
  7103  0E9F  2EA2               	goto	i1l645
  7104                           
  7105                           ;main.c: 104: mTouch_Interval[1]--;
  7106  0EA0  3001               	movlw	1
  7107  0EA1  02F1               	subwf	_mTouch_Interval+1,f
  7108  0EA2                     i1l645:	
  7109                           
  7110                           ;main.c: 105: if(mTouch_Interval[2]>0)
  7111  0EA2  0872               	movf	_mTouch_Interval+2,w
  7112  0EA3  1903               	btfsc	3,2
  7113  0EA4  0008               	return
  7114                           
  7115                           ;main.c: 106: mTouch_Interval[2]--;
  7116  0EA5  3001               	movlw	1
  7117  0EA6  02F2               	subwf	_mTouch_Interval+2,f
  7118  0EA7  0008               	return
  7119  0EA8                     __end_of_mTouch_IntervalDecrement:	
  7120                           
  7121                           	psect	text31
  7122  0E58                     __ptext31:	
  7123 ;; *************** function _Timer6_Handler *****************
  7124 ;; Defined at:
  7125 ;;		line 17 in file "Timer6.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;		None
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;		None
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  1    wreg      unsigned char 
  7132 ;; Registers used:
  7133 ;;		wreg
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7139 ;;      Params:         0       0       0       0       0       0
  7140 ;;      Locals:         0       0       0       0       0       0
  7141 ;;      Temps:          0       0       0       0       0       0
  7142 ;;      Totals:         0       0       0       0       0       0
  7143 ;;Total ram usage:        0 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; This function calls:
  7146 ;;		Nothing
  7147 ;; This function is called by:
  7148 ;;		_Handler
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           
  7153                           ;psect for function _Timer6_Handler
  7154  0E58                     _Timer6_Handler:	
  7155                           
  7156                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  7157                           
  7158                           ;incstack = 0
  7159                           ; Regs used in _Timer6_Handler: [wreg]
  7160  0E58  0021               	movlb	1	; select bank1
  7161  0E59  1D93               	btfss	19,3	;volatile
  7162  0E5A  2E61               	goto	i1l1901
  7163  0E5B  0020               	movlb	0	; select bank0
  7164  0E5C  1D93               	btfss	19,3	;volatile
  7165  0E5D  2E61               	goto	i1l1901
  7166                           
  7167                           ;Timer6.c: 20: {
  7168                           ;Timer6.c: 21: TMR6IF = 0;
  7169  0E5E  1193               	bcf	19,3	;volatile
  7170                           
  7171                           ;Timer6.c: 22: return 1;
  7172  0E5F  3001               	movlw	1
  7173  0E60  0008               	return
  7174  0E61                     i1l1901:	
  7175                           
  7176                           ;Timer6.c: 23: }
  7177                           ;Timer6.c: 24: return 0;
  7178  0E61  3000               	movlw	0
  7179  0E62  0008               	return
  7180  0E63                     __end_of_Timer6_Handler:	
  7181                           
  7182                           	psect	text32
  7183  0E4D                     __ptext32:	
  7184 ;; *************** function _Timer4_Handler *****************
  7185 ;; Defined at:
  7186 ;;		line 17 in file "Timer4.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;		None
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;		None
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  1    wreg      unsigned char 
  7193 ;; Registers used:
  7194 ;;		wreg
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7200 ;;      Params:         0       0       0       0       0       0
  7201 ;;      Locals:         0       0       0       0       0       0
  7202 ;;      Temps:          0       0       0       0       0       0
  7203 ;;      Totals:         0       0       0       0       0       0
  7204 ;;Total ram usage:        0 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; This function calls:
  7207 ;;		Nothing
  7208 ;; This function is called by:
  7209 ;;		_Handler
  7210 ;; This function uses a non-reentrant model
  7211 ;;
  7212                           
  7213                           
  7214                           ;psect for function _Timer4_Handler
  7215  0E4D                     _Timer4_Handler:	
  7216                           
  7217                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  7218                           
  7219                           ;incstack = 0
  7220                           ; Regs used in _Timer4_Handler: [wreg]
  7221  0E4D  0021               	movlb	1	; select bank1
  7222  0E4E  1C93               	btfss	19,1	;volatile
  7223  0E4F  2E56               	goto	i1l1869
  7224  0E50  0020               	movlb	0	; select bank0
  7225  0E51  1C93               	btfss	19,1	;volatile
  7226  0E52  2E56               	goto	i1l1869
  7227                           
  7228                           ;Timer4.c: 20: {
  7229                           ;Timer4.c: 21: TMR4IF = 0;
  7230  0E53  1093               	bcf	19,1	;volatile
  7231                           
  7232                           ;Timer4.c: 22: return 1;
  7233  0E54  3001               	movlw	1
  7234  0E55  0008               	return
  7235  0E56                     i1l1869:	
  7236                           
  7237                           ;Timer4.c: 23: }
  7238                           ;Timer4.c: 24: return 0;
  7239  0E56  3000               	movlw	0
  7240  0E57  0008               	return
  7241  0E58                     __end_of_Timer4_Handler:	
  7242                           
  7243                           	psect	text33
  7244  0F18                     __ptext33:	
  7245 ;; *************** function _Timer1_DetectAssignCount *****************
  7246 ;; Defined at:
  7247 ;;		line 48 in file "Timer1.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;		None
  7250 ;; Auto vars:     Size  Location     Type
  7251 ;;		None
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  1    wreg      unsigned char 
  7254 ;; Registers used:
  7255 ;;		wreg
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7261 ;;      Params:         0       0       0       0       0       0
  7262 ;;      Locals:         0       0       0       0       0       0
  7263 ;;      Temps:          0       0       0       0       0       0
  7264 ;;      Totals:         0       0       0       0       0       0
  7265 ;;Total ram usage:        0 bytes
  7266 ;; Hardware stack levels used:    1
  7267 ;; This function calls:
  7268 ;;		Nothing
  7269 ;; This function is called by:
  7270 ;;		_Handler
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           
  7275                           ;psect for function _Timer1_DetectAssignCount
  7276  0F18                     _Timer1_DetectAssignCount:	
  7277                           
  7278                           ;Timer1.c: 50: if(TMR1IF&&TMR1IE)
  7279                           
  7280                           ;incstack = 0
  7281                           ; Regs used in _Timer1_DetectAssignCount: [wreg]
  7282  0F18  0020               	movlb	0	; select bank0
  7283  0F19  1C11               	btfss	17,0	;volatile
  7284  0F1A  2F2E               	goto	i1l2893
  7285  0F1B  0021               	movlb	1	; select bank1
  7286  0F1C  1C11               	btfss	17,0	;volatile
  7287  0F1D  2F2E               	goto	i1l2893
  7288                           
  7289                           ;Timer1.c: 51: {
  7290                           ;Timer1.c: 52: countsum += 10;
  7291  0F1E  300A               	movlw	10
  7292  0F1F  0020               	movlb	0	; select bank0
  7293  0F20  07DC               	addwf	_countsum,f
  7294  0F21  3000               	movlw	0
  7295  0F22  3DDD               	addwfc	_countsum+1,f
  7296  0F23  3000               	movlw	0
  7297  0F24  3DDE               	addwfc	_countsum+2,f
  7298  0F25  3000               	movlw	0
  7299  0F26  3DDF               	addwfc	_countsum+3,f
  7300                           
  7301                           ;Timer1.c: 53: TMR1 = 0xFFFF-10;
  7302  0F27  30FF               	movlw	255
  7303  0F28  0097               	movwf	23	;volatile
  7304  0F29  30F5               	movlw	245
  7305  0F2A  0096               	movwf	22	;volatile
  7306                           
  7307                           ;Timer1.c: 54: TMR1IF = 0;
  7308  0F2B  1011               	bcf	17,0	;volatile
  7309                           
  7310                           ;Timer1.c: 55: return 1;
  7311  0F2C  3001               	movlw	1
  7312  0F2D  0008               	return
  7313  0F2E                     i1l2893:	
  7314                           
  7315                           ;Timer1.c: 56: }
  7316                           ;Timer1.c: 57: return 0;
  7317  0F2E  3000               	movlw	0
  7318  0F2F  0008               	return
  7319  0F30                     __end_of_Timer1_DetectAssignCount:	
  7320                           
  7321                           	psect	text34
  7322  0E39                     __ptext34:	
  7323 ;; *************** function _Timer1_Count10us *****************
  7324 ;; Defined at:
  7325 ;;		line 43 in file "Timer1.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;		None
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;		None
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  1    wreg      void 
  7332 ;; Registers used:
  7333 ;;		wreg
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7339 ;;      Params:         0       0       0       0       0       0
  7340 ;;      Locals:         0       0       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0       0
  7342 ;;      Totals:         0       0       0       0       0       0
  7343 ;;Total ram usage:        0 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_Handler
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           
  7353                           ;psect for function _Timer1_Count10us
  7354  0E39                     _Timer1_Count10us:	
  7355                           
  7356                           ;Timer1.c: 45: timesum++;
  7357                           
  7358                           ;incstack = 0
  7359                           ; Regs used in _Timer1_Count10us: [wreg]
  7360  0E39  3001               	movlw	1
  7361  0E3A  0020               	movlb	0	; select bank0
  7362  0E3B  07D8               	addwf	_timesum,f
  7363  0E3C  3000               	movlw	0
  7364  0E3D  3DD9               	addwfc	_timesum+1,f
  7365  0E3E  3000               	movlw	0
  7366  0E3F  3DDA               	addwfc	_timesum+2,f
  7367  0E40  3000               	movlw	0
  7368  0E41  3DDB               	addwfc	_timesum+3,f
  7369  0E42  0008               	return
  7370  0E43                     __end_of_Timer1_Count10us:	
  7371                           
  7372                           	psect	text35
  7373  0E1E                     __ptext35:	
  7374 ;; *************** function _I2C_CommonInterrupt *****************
  7375 ;; Defined at:
  7376 ;;		line 58 in file "I2C_Common.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;		None
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      void 
  7383 ;; Registers used:
  7384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7390 ;;      Params:         0       0       0       0       0       0
  7391 ;;      Locals:         0       0       0       0       0       0
  7392 ;;      Temps:          0       0       0       0       0       0
  7393 ;;      Totals:         0       0       0       0       0       0
  7394 ;;Total ram usage:        0 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:    1
  7397 ;; This function calls:
  7398 ;;		_I2C1_Interrupt
  7399 ;;		_I2C2_Interrupt
  7400 ;; This function is called by:
  7401 ;;		_Handler
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           
  7406                           ;psect for function _I2C_CommonInterrupt
  7407  0E1E                     _I2C_CommonInterrupt:	
  7408                           
  7409                           ;I2C_Common.c: 60: I2C1_Interrupt();
  7410                           
  7411                           ;incstack = 0
  7412                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7413  0E1E  3185  252D  318E   	fcall	_I2C1_Interrupt
  7414                           
  7415                           ;I2C_Common.c: 61: I2C2_Interrupt();
  7416  0E21  3184  24D9         	fcall	_I2C2_Interrupt
  7417  0E23  0008               	return
  7418  0E24                     __end_of_I2C_CommonInterrupt:	
  7419                           
  7420                           	psect	text36
  7421  04D9                     __ptext36:	
  7422 ;; *************** function _I2C2_Interrupt *****************
  7423 ;; Defined at:
  7424 ;;		line 152 in file "I2C2.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;		None
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;		None
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      void 
  7431 ;; Registers used:
  7432 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7438 ;;      Params:         0       0       0       0       0       0
  7439 ;;      Locals:         0       0       0       0       0       0
  7440 ;;      Temps:          1       0       0       0       0       0
  7441 ;;      Totals:         1       0       0       0       0       0
  7442 ;;Total ram usage:        1 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; This function calls:
  7445 ;;		Nothing
  7446 ;; This function is called by:
  7447 ;;		_I2C_CommonInterrupt
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           
  7452                           ;psect for function _I2C2_Interrupt
  7453  04D9                     _I2C2_Interrupt:	
  7454                           
  7455                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  7456                           
  7457                           ;incstack = 0
  7458                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7459  04D9  0020               	movlb	0	; select bank0
  7460  04DA  1C14               	btfss	20,0	;volatile
  7461  04DB  2D25               	goto	i1l2495
  7462  04DC  0021               	movlb	1	; select bank1
  7463  04DD  1C14               	btfss	20,0	;volatile
  7464  04DE  2D25               	goto	i1l2495
  7465                           
  7466                           ;I2C2.c: 155: {
  7467                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  7468  04DF  0024               	movlb	4	; select bank4
  7469  04E0  1E9C               	btfss	28,5	;volatile
  7470  04E1  2CFC               	goto	i1l294
  7471                           
  7472                           ;I2C2.c: 157: {
  7473                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  7474  04E2  1D1C               	btfss	28,2	;volatile
  7475  04E3  2CEF               	goto	i1l2471
  7476                           
  7477                           ;I2C2.c: 159: {
  7478                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  7479  04E4  1B1E               	btfsc	30,6	;volatile
  7480  04E5  2D23               	goto	i1l2493
  7481  04E6                     i1l2463:	
  7482                           ;I2C2.c: 161: {
  7483                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7484                           
  7485  04E6  081C               	movf	28,w	;volatile
  7486  04E7  3901               	andlw	1
  7487  04E8  00F6               	movwf	??_I2C2_Interrupt
  7488  04E9  0E1D               	swapf	29,w	;volatile
  7489  04EA  3901               	andlw	1
  7490  04EB  0476               	iorwf	??_I2C2_Interrupt,w
  7491  04EC  1D03               	btfss	3,2
  7492  04ED  2CE6               	goto	i1l2463
  7493  04EE  2D0F               	goto	L5
  7494  04EF                     i1l2471:	
  7495                           ;I2C2.c: 166: }
  7496                           ;I2C2.c: 167: }
  7497                           
  7498                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  7499                           
  7500                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  7501                           
  7502                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  7503                           
  7504                           
  7505                           ;I2C2.c: 168: else
  7506                           ;I2C2.c: 169: {
  7507                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  7508  04EF  0819               	movf	25,w	;volatile
  7509  04F0  00F6               	movwf	??_I2C2_Interrupt
  7510  04F1  0021               	movlb	1	; select bank1
  7511  04F2  0831               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  7512  04F3  0086               	movwf	6
  7513  04F4  0187               	clrf	7
  7514  04F5  0876               	movf	??_I2C2_Interrupt,w
  7515  04F6  0081               	movwf	1
  7516                           
  7517                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  7518  04F7  3001               	movlw	1
  7519  04F8  00F6               	movwf	??_I2C2_Interrupt
  7520  04F9  0876               	movf	??_I2C2_Interrupt,w
  7521  04FA  07B1               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  7522  04FB  2D21               	goto	i1l2491
  7523  04FC                     i1l294:	
  7524                           ;I2C2.c: 173: }
  7525                           ;I2C2.c: 174: }
  7526                           
  7527                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  7528                           
  7529                           
  7530                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  7531  04FC  1A9C               	btfsc	28,5	;volatile
  7532  04FD  2D23               	goto	i1l2493
  7533                           
  7534                           ;I2C2.c: 176: {
  7535                           ;I2C2.c: 177: SSP2BUF;
  7536  04FE  0819               	movf	25,w	;volatile
  7537                           
  7538                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  7539  04FF  1D1C               	btfss	28,2	;volatile
  7540  0500  2D1C               	goto	i1l2489
  7541                           
  7542                           ;I2C2.c: 180: {
  7543                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  7544  0501  30A0               	movlw	(low (_I2C2_Config| 0))& (0+255)
  7545  0502  00F6               	movwf	??_I2C2_Interrupt
  7546  0503  0876               	movf	??_I2C2_Interrupt,w
  7547  0504  0021               	movlb	1	; select bank1
  7548  0505  00B0               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  7549  0506                     i1l2483:	
  7550                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7551                           
  7552  0506  0024               	movlb	4	; select bank4
  7553  0507  081C               	movf	28,w	;volatile
  7554  0508  3901               	andlw	1
  7555  0509  00F6               	movwf	??_I2C2_Interrupt
  7556  050A  0E1D               	swapf	29,w	;volatile
  7557  050B  3901               	andlw	1
  7558  050C  0476               	iorwf	??_I2C2_Interrupt,w
  7559  050D  1D03               	btfss	3,2
  7560  050E  2D06               	goto	i1l2483
  7561  050F                     L5:	
  7562                           
  7563                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  7564  050F  0021               	movlb	1	; select bank1
  7565  0510  0830               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  7566  0511  0086               	movwf	6
  7567  0512  0187               	clrf	7
  7568  0513  0801               	movf	1,w
  7569  0514  0024               	movlb	4	; select bank4
  7570  0515  0099               	movwf	25	;volatile
  7571                           
  7572                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  7573  0516  3001               	movlw	1
  7574  0517  00F6               	movwf	??_I2C2_Interrupt
  7575  0518  0876               	movf	??_I2C2_Interrupt,w
  7576  0519  0021               	movlb	1	; select bank1
  7577  051A  07B0               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  7578                           
  7579                           ;I2C2.c: 186: }
  7580  051B  2D21               	goto	i1l2491
  7581  051C                     i1l2489:	
  7582                           
  7583                           ;I2C2.c: 187: else
  7584                           ;I2C2.c: 188: {
  7585                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  7586  051C  30A8               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  7587  051D  00F6               	movwf	??_I2C2_Interrupt
  7588  051E  0876               	movf	??_I2C2_Interrupt,w
  7589  051F  0021               	movlb	1	; select bank1
  7590  0520  00B1               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  7591  0521                     i1l2491:	
  7592                           
  7593                           ;I2C2.c: 190: }
  7594                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  7595  0521  0024               	movlb	4	; select bank4
  7596  0522  161D               	bsf	29,4	;volatile
  7597  0523                     i1l2493:	
  7598                           
  7599                           ;I2C2.c: 192: }
  7600                           ;I2C2.c: 193: SSP2IF = 0;
  7601  0523  0020               	movlb	0	; select bank0
  7602  0524  1014               	bcf	20,0	;volatile
  7603  0525                     i1l2495:	
  7604                           
  7605                           ;I2C2.c: 194: }
  7606                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  7607  0525  0021               	movlb	1	; select bank1
  7608  0526  1C94               	btfss	20,1	;volatile
  7609  0527  0008               	return
  7610  0528  0020               	movlb	0	; select bank0
  7611  0529  1C94               	btfss	20,1	;volatile
  7612  052A  0008               	return
  7613                           
  7614                           ;I2C2.c: 197: BCL2IF = 0;
  7615  052B  1094               	bcf	20,1	;volatile
  7616  052C  0008               	return
  7617  052D                     __end_of_I2C2_Interrupt:	
  7618                           
  7619                           	psect	text37
  7620  052D                     __ptext37:	
  7621 ;; *************** function _I2C1_Interrupt *****************
  7622 ;; Defined at:
  7623 ;;		line 152 in file "I2C1.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;		None
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;		None
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7637 ;;      Params:         0       0       0       0       0       0
  7638 ;;      Locals:         0       0       0       0       0       0
  7639 ;;      Temps:          1       0       0       0       0       0
  7640 ;;      Totals:         1       0       0       0       0       0
  7641 ;;Total ram usage:        1 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; This function calls:
  7644 ;;		Nothing
  7645 ;; This function is called by:
  7646 ;;		_I2C_CommonInterrupt
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           
  7651                           ;psect for function _I2C1_Interrupt
  7652  052D                     _I2C1_Interrupt:	
  7653                           
  7654                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  7655                           
  7656                           ;incstack = 0
  7657                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7658  052D  0020               	movlb	0	; select bank0
  7659  052E  1D91               	btfss	17,3	;volatile
  7660  052F  2D79               	goto	i1l2445
  7661  0530  0021               	movlb	1	; select bank1
  7662  0531  1D91               	btfss	17,3	;volatile
  7663  0532  2D79               	goto	i1l2445
  7664                           
  7665                           ;I2C1.c: 155: {
  7666                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  7667  0533  0024               	movlb	4	; select bank4
  7668  0534  1E94               	btfss	20,5	;volatile
  7669  0535  2D50               	goto	i1l157
  7670                           
  7671                           ;I2C1.c: 157: {
  7672                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  7673  0536  1D14               	btfss	20,2	;volatile
  7674  0537  2D43               	goto	i1l2421
  7675                           
  7676                           ;I2C1.c: 159: {
  7677                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  7678  0538  1B16               	btfsc	22,6	;volatile
  7679  0539  2D77               	goto	i1l2443
  7680  053A                     i1l2413:	
  7681                           ;I2C1.c: 161: {
  7682                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  7683                           
  7684  053A  0814               	movf	20,w	;volatile
  7685  053B  3901               	andlw	1
  7686  053C  00F6               	movwf	??_I2C1_Interrupt
  7687  053D  0E15               	swapf	21,w	;volatile
  7688  053E  3901               	andlw	1
  7689  053F  0476               	iorwf	??_I2C1_Interrupt,w
  7690  0540  1D03               	btfss	3,2
  7691  0541  2D3A               	goto	i1l2413
  7692  0542  2D63               	goto	L6
  7693  0543                     i1l2421:	
  7694                           ;I2C1.c: 166: }
  7695                           ;I2C1.c: 167: }
  7696                           
  7697                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  7698                           
  7699                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  7700                           
  7701                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  7702                           
  7703                           
  7704                           ;I2C1.c: 168: else
  7705                           ;I2C1.c: 169: {
  7706                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  7707  0543  0811               	movf	17,w	;volatile
  7708  0544  00F6               	movwf	??_I2C1_Interrupt
  7709  0545  0021               	movlb	1	; select bank1
  7710  0546  0844               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  7711  0547  0086               	movwf	6
  7712  0548  0187               	clrf	7
  7713  0549  0876               	movf	??_I2C1_Interrupt,w
  7714  054A  0081               	movwf	1
  7715                           
  7716                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  7717  054B  3001               	movlw	1
  7718  054C  00F6               	movwf	??_I2C1_Interrupt
  7719  054D  0876               	movf	??_I2C1_Interrupt,w
  7720  054E  07C4               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  7721  054F  2D75               	goto	i1l2441
  7722  0550                     i1l157:	
  7723                           ;I2C1.c: 173: }
  7724                           ;I2C1.c: 174: }
  7725                           
  7726                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  7727                           
  7728                           
  7729                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  7730  0550  1A94               	btfsc	20,5	;volatile
  7731  0551  2D77               	goto	i1l2443
  7732                           
  7733                           ;I2C1.c: 176: {
  7734                           ;I2C1.c: 177: SSP1BUF;
  7735  0552  0811               	movf	17,w	;volatile
  7736                           
  7737                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  7738  0553  1D14               	btfss	20,2	;volatile
  7739  0554  2D70               	goto	i1l2439
  7740                           
  7741                           ;I2C1.c: 180: {
  7742                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  7743  0555  30B3               	movlw	(low (_I2C1_Config| 0))& (0+255)
  7744  0556  00F6               	movwf	??_I2C1_Interrupt
  7745  0557  0876               	movf	??_I2C1_Interrupt,w
  7746  0558  0021               	movlb	1	; select bank1
  7747  0559  00C3               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  7748  055A                     i1l2433:	
  7749                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  7750                           
  7751  055A  0024               	movlb	4	; select bank4
  7752  055B  0814               	movf	20,w	;volatile
  7753  055C  3901               	andlw	1
  7754  055D  00F6               	movwf	??_I2C1_Interrupt
  7755  055E  0E15               	swapf	21,w	;volatile
  7756  055F  3901               	andlw	1
  7757  0560  0476               	iorwf	??_I2C1_Interrupt,w
  7758  0561  1D03               	btfss	3,2
  7759  0562  2D5A               	goto	i1l2433
  7760  0563                     L6:	
  7761                           
  7762                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  7763  0563  0021               	movlb	1	; select bank1
  7764  0564  0843               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  7765  0565  0086               	movwf	6
  7766  0566  0187               	clrf	7
  7767  0567  0801               	movf	1,w
  7768  0568  0024               	movlb	4	; select bank4
  7769  0569  0091               	movwf	17	;volatile
  7770                           
  7771                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  7772  056A  3001               	movlw	1
  7773  056B  00F6               	movwf	??_I2C1_Interrupt
  7774  056C  0876               	movf	??_I2C1_Interrupt,w
  7775  056D  0021               	movlb	1	; select bank1
  7776  056E  07C3               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  7777                           
  7778                           ;I2C1.c: 186: }
  7779  056F  2D75               	goto	i1l2441
  7780  0570                     i1l2439:	
  7781                           
  7782                           ;I2C1.c: 187: else
  7783                           ;I2C1.c: 188: {
  7784                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  7785  0570  30BB               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  7786  0571  00F6               	movwf	??_I2C1_Interrupt
  7787  0572  0876               	movf	??_I2C1_Interrupt,w
  7788  0573  0021               	movlb	1	; select bank1
  7789  0574  00C4               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  7790  0575                     i1l2441:	
  7791                           
  7792                           ;I2C1.c: 190: }
  7793                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  7794  0575  0024               	movlb	4	; select bank4
  7795  0576  1615               	bsf	21,4	;volatile
  7796  0577                     i1l2443:	
  7797                           
  7798                           ;I2C1.c: 192: }
  7799                           ;I2C1.c: 193: SSP1IF = 0;
  7800  0577  0020               	movlb	0	; select bank0
  7801  0578  1191               	bcf	17,3	;volatile
  7802  0579                     i1l2445:	
  7803                           
  7804                           ;I2C1.c: 194: }
  7805                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  7806  0579  0021               	movlb	1	; select bank1
  7807  057A  1D92               	btfss	18,3	;volatile
  7808  057B  0008               	return
  7809  057C  0020               	movlb	0	; select bank0
  7810  057D  1D92               	btfss	18,3	;volatile
  7811  057E  0008               	return
  7812                           
  7813                           ;I2C1.c: 197: BCL1IF = 0;
  7814  057F  1192               	bcf	18,3	;volatile
  7815  0580  0008               	return
  7816  0581                     __end_of_I2C1_Interrupt:	
  7817                           
  7818                           	psect	text38
  7819  0F89                     __ptext38:	
  7820 ;; *************** function _CPSx_Read *****************
  7821 ;; Defined at:
  7822 ;;		line 29 in file "mTouch.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;		None
  7825 ;; Auto vars:     Size  Location     Type
  7826 ;;		None
  7827 ;; Return value:  Size  Location     Type
  7828 ;;                  1    wreg      void 
  7829 ;; Registers used:
  7830 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7831 ;; Tracked objects:
  7832 ;;		On entry : 0/0
  7833 ;;		On exit  : 0/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7836 ;;      Params:         0       0       0       0       0       0
  7837 ;;      Locals:         0       0       0       0       0       0
  7838 ;;      Temps:          1       0       0       0       0       0
  7839 ;;      Totals:         1       0       0       0       0       0
  7840 ;;Total ram usage:        1 bytes
  7841 ;; Hardware stack levels used:    1
  7842 ;; This function calls:
  7843 ;;		Nothing
  7844 ;; This function is called by:
  7845 ;;		_Handler
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           
  7850                           ;psect for function _CPSx_Read
  7851  0F89                     _CPSx_Read:	
  7852                           
  7853                           ;mTouch.c: 31: static uint8_t channel=0;
  7854                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  7855                           
  7856                           ;incstack = 0
  7857                           ; Regs used in _CPSx_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7858  0F89  0875               	movf	CPSx_Read@channel,w
  7859  0F8A  3E60               	addlw	(low (_CPS_Data| 0))& (0+255)
  7860  0F8B  0086               	movwf	6
  7861  0F8C  0187               	clrf	7
  7862  0F8D  0801               	movf	1,w
  7863  0F8E  00F6               	movwf	??_CPSx_Read
  7864  0F8F  0875               	movf	CPSx_Read@channel,w
  7865  0F90  3E63               	addlw	(low (_CPS_PreData| 0))& (0+255)
  7866  0F91  0086               	movwf	6
  7867  0F92  0187               	clrf	7
  7868  0F93  0876               	movf	??_CPSx_Read,w
  7869  0F94  0081               	movwf	1
  7870                           
  7871                           ;mTouch.c: 34: CPSCON0 &= ~(0x01<<7);;
  7872  0F95  307F               	movlw	127
  7873  0F96  00F6               	movwf	??_CPSx_Read
  7874  0F97  0876               	movf	??_CPSx_Read,w
  7875  0F98  0020               	movlb	0	; select bank0
  7876  0F99  059E               	andwf	30,f	;volatile
  7877                           
  7878                           ;mTouch.c: 35: CPS_Data[channel] = TMR0;
  7879  0F9A  0815               	movf	21,w	;volatile
  7880  0F9B  00F6               	movwf	??_CPSx_Read
  7881  0F9C  0875               	movf	CPSx_Read@channel,w
  7882  0F9D  3E60               	addlw	(low (_CPS_Data| 0))& (0+255)
  7883  0F9E  0086               	movwf	6
  7884  0F9F  0187               	clrf	7
  7885  0FA0  0876               	movf	??_CPSx_Read,w
  7886  0FA1  0081               	movwf	1
  7887                           
  7888                           ;mTouch.c: 36: TMR0 = 0x00;
  7889  0FA2  0195               	clrf	21	;volatile
  7890                           
  7891                           ;mTouch.c: 37: CPSCON0 |= (0x01<<7);;
  7892  0FA3  179E               	bsf	30,7	;volatile
  7893                           
  7894                           ;mTouch.c: 39: if(channel++>2)channel = 0;
  7895  0FA4  0875               	movf	CPSx_Read@channel,w
  7896  0FA5  0AF5               	incf	CPSx_Read@channel,f
  7897  0FA6  00F6               	movwf	??_CPSx_Read
  7898  0FA7  3003               	movlw	3
  7899  0FA8  0276               	subwf	??_CPSx_Read,w
  7900  0FA9  1803               	btfsc	3,0
  7901  0FAA  01F5               	clrf	CPSx_Read@channel
  7902                           
  7903                           ;mTouch.c: 40: CPSCON1 = (uint8_t)channel;
  7904  0FAB  0875               	movf	CPSx_Read@channel,w
  7905  0FAC  009F               	movwf	31	;volatile
  7906  0FAD  0008               	return
  7907  0FAE                     __end_of_CPSx_Read:	
  7908                           
  7909                           	psect	text39
  7910  0EEE                     __ptext39:	
  7911 ;; *************** function _Buzzer_Handler *****************
  7912 ;; Defined at:
  7913 ;;		line 44 in file "Buzzer.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;		None
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1    wreg      void 
  7920 ;; Registers used:
  7921 ;;		wreg, status,2, status,0, pclath, cstack
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7927 ;;      Params:         0       0       0       0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0
  7930 ;;      Totals:         0       0       0       0       0       0
  7931 ;;Total ram usage:        0 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    1
  7934 ;; This function calls:
  7935 ;;		_Buzzer_SetDuty
  7936 ;; This function is called by:
  7937 ;;		_Handler
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           
  7942                           ;psect for function _Buzzer_Handler
  7943  0EEE                     _Buzzer_Handler:	
  7944                           
  7945                           ;Buzzer.c: 46: if(count>0)
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in _Buzzer_Handler: [wreg+status,2+status,0+pclath+cstack]
  7949  0EEE  0873               	movf	_count,w
  7950  0EEF  0474               	iorwf	_count+1,w
  7951  0EF0  1903               	btfsc	3,2
  7952  0EF1  2EFD               	goto	i1l2691
  7953                           
  7954                           ;Buzzer.c: 47: {
  7955                           ;Buzzer.c: 48: count--;
  7956  0EF2  3001               	movlw	1
  7957  0EF3  02F3               	subwf	_count,f
  7958  0EF4  3000               	movlw	0
  7959  0EF5  3BF4               	subwfb	_count+1,f
  7960                           
  7961                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  7962  0EF6  30FF               	movlw	255
  7963  0EF7  00F6               	movwf	Buzzer_SetDuty@duty
  7964  0EF8  3001               	movlw	1
  7965  0EF9  00F7               	movwf	Buzzer_SetDuty@duty+1
  7966  0EFA  3187  27E4         	fcall	_Buzzer_SetDuty
  7967                           
  7968                           ;Buzzer.c: 50: }
  7969  0EFC  0008               	return
  7970  0EFD                     i1l2691:	
  7971                           
  7972                           ;Buzzer.c: 51: else
  7973                           ;Buzzer.c: 52: {
  7974                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  7975  0EFD  3000               	movlw	0
  7976  0EFE  00F6               	movwf	Buzzer_SetDuty@duty
  7977  0EFF  00F7               	movwf	Buzzer_SetDuty@duty+1
  7978  0F00  3187  27E4         	fcall	_Buzzer_SetDuty
  7979  0F02  0008               	return
  7980  0F03                     __end_of_Buzzer_Handler:	
  7981                           
  7982                           	psect	text40
  7983  07E4                     __ptext40:	
  7984 ;; *************** function _Buzzer_SetDuty *****************
  7985 ;; Defined at:
  7986 ;;		line 31 in file "Buzzer.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;  duty            2    0[COMMON] unsigned int 
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  1    wreg      void 
  7993 ;; Registers used:
  7994 ;;		wreg, status,2, status,0
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8000 ;;      Params:         2       0       0       0       0       0
  8001 ;;      Locals:         1       0       0       0       0       0
  8002 ;;      Temps:          2       0       0       0       0       0
  8003 ;;      Totals:         5       0       0       0       0       0
  8004 ;;Total ram usage:        5 bytes
  8005 ;; Hardware stack levels used:    1
  8006 ;; This function calls:
  8007 ;;		Nothing
  8008 ;; This function is called by:
  8009 ;;		_Buzzer_Handler
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           
  8014                           ;psect for function _Buzzer_SetDuty
  8015  07E4                     _Buzzer_SetDuty:	
  8016                           
  8017                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  8018                           
  8019                           ;incstack = 0
  8020                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  8021  07E4  0025               	movlb	5	; select bank5
  8022  07E5  081A               	movf	26,w	;volatile
  8023  07E6  39CF               	andlw	207
  8024  07E7  00F8               	movwf	??_Buzzer_SetDuty
  8025  07E8  0878               	movf	??_Buzzer_SetDuty,w
  8026  07E9  00FA               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  8027                           
  8028                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  8029  07EA  0877               	movf	Buzzer_SetDuty@duty+1,w
  8030  07EB  00F9               	movwf	??_Buzzer_SetDuty+1
  8031  07EC  0876               	movf	Buzzer_SetDuty@duty,w
  8032  07ED  00F8               	movwf	??_Buzzer_SetDuty
  8033  07EE  36F9               	lsrf	??_Buzzer_SetDuty+1,f
  8034  07EF  0CF8               	rrf	??_Buzzer_SetDuty,f
  8035  07F0  36F9               	lsrf	??_Buzzer_SetDuty+1,f
  8036  07F1  0CF8               	rrf	??_Buzzer_SetDuty,f
  8037  07F2  0878               	movf	??_Buzzer_SetDuty,w
  8038  07F3  0098               	movwf	24	;volatile
  8039                           
  8040                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  8041  07F4  0876               	movf	Buzzer_SetDuty@duty,w
  8042  07F5  3903               	andlw	3
  8043  07F6  00F8               	movwf	??_Buzzer_SetDuty
  8044  07F7  3003               	movlw	3
  8045  07F8                     u175_25:	
  8046  07F8  35F8               	lslf	??_Buzzer_SetDuty,f
  8047  07F9  3EFF               	addlw	-1
  8048  07FA  1D03               	skipz
  8049  07FB  2FF8               	goto	u175_25
  8050  07FC  3578               	lslf	??_Buzzer_SetDuty,w
  8051  07FD  047A               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  8052  07FE  009A               	movwf	26	;volatile
  8053  07FF  0008               	return
  8054  0800                     __end_of_Buzzer_SetDuty:	
  8055  007E                     btemp	set	126	;btemp
  8056  007E                     int$flags	set	126
  8057  007E                     wtemp0	set	126


Data Sizes:
    Strings     306
    Constant    70
    Data        90
    BSS         65
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     56      77
    BANK1            80      0      68
    BANK2            80      0      60
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_49(CODE[7]), STR_48(CODE[7]), STR_47(CODE[7]), STR_46(CODE[7]), 
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[7]), STR_42(CODE[6]), 
		 -> STR_41(CODE[6]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[5]), 
		 -> STR_37(CODE[5]), STR_36(CODE[5]), STR_35(CODE[5]), 

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_34(CODE[8]), STR_33(CODE[8]), STR_32(CODE[8]), STR_31(CODE[7]), 
		 -> STR_30(CODE[7]), STR_29(CODE[7]), STR_28(CODE[7]), STR_27(CODE[7]), 
		 -> STR_26(CODE[6]), STR_25(CODE[6]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 

    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[6]), 
		 -> STR_15(CODE[5]), STR_14(CODE[6]), STR_13(CODE[5]), STR_12(CODE[6]), 
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[5]), STR_8(CODE[6]), 
		 -> STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[5]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S46$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S46$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Handler->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___llmod
    _putch->_LCD_WriteData
    ___llmod->___lldiv
    _mTouch_Read->_Buzzer_MiliSecond
    _mTouch_Init->_mTouch_PortInit
    _Timer1_GetCPM->___lldiv
    ___lldiv->___lmul
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6425
                                             55 BANK0      1     1      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                     _LCD_CursorHome
                           _LCD_Init
                      _Timer1_GetCPM
                        _Timer1_Init
                        _Timer4_Init
                        _Timer6_Init
                        _mTouch_Init
                        _mTouch_Read
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    23      4    1936
                                             36 BANK0     19    15      4
                      _Timer1_GetCPM (ARG)
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     155
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                             26 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _mTouch_Read                                          6     6      0     263
                                              2 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        2     0      2     839
                                             26 BANK0      2     0      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     290
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     549
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              4 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                             16 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              8 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              5 BANK0      6     3      3
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              1     1      0     195
                                              5 COMMON     1     1      0
                     _Buzzer_Handler
                          _CPSx_Read
                _I2C_CommonInterrupt
                   _Timer1_Count10us
           _Timer1_DetectAssignCount
                     _Timer4_Handler
                     _Timer6_Handler
           _mTouch_IntervalDecrement
 ---------------------------------------------------------------------------------
 (6) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer6_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer4_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_DetectAssignCount                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_Count10us                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _CPSx_Read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Buzzer_Handler                                       0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (7) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Timer1_Init
   _Timer4_Init
   _Timer6_Init
   _mTouch_Init
     _mTouch_PortInit
   _mTouch_Read
     _Buzzer_MiliSecond
   _printf
     _Timer1_GetCPM (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
     ___lldiv (ARG)
       ___lmul (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Handler
     _Buzzer_SetDuty
   _CPSx_Read
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Count10us
   _Timer1_DetectAssignCount
   _Timer4_Handler
   _Timer6_Handler
   _mTouch_IntervalDecrement

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      D9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     38      4D       6       96.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      44       8       85.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      D9      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun May 21 00:53:50 2017

                   _LCD_CursorHome 0EA8                        __CFG_CP$OFF 0000  
                               l74 0668                                 l91 0377  
                               l78 0699                     I2C2_Transmit@i 0025  
            ??_I2C_CommonInterrupt 0077                                l100 03A0  
                              l211 0624                                l109 03BD  
                              l215 0655                                l228 02E0  
                              l237 0309                                l246 0326  
                              l338 0FFD                                l681 021E  
                              l691 02BE                                l678 0200  
                              _GIE 005F                                _PR2 001B  
                              _PR4 0416                       __CFG_CPD$OFF 0000  
                              _PR6 041D                       __CFG_BORV$LO 0000  
                              wreg 0009                         _Basic_Init 0F03  
                     __CFG_LVP$OFF 0000         ??_Timer1_DetectAssignCount 0076  
                             l3333 067D                               l3421 063B  
                             l3413 062E                               l3335 067F  
                             l3327 0672                               l3431 064A  
                             l3345 068E                               l3353 035A  
                             l3441 02D1                               l3601 06CF  
                             l3419 0639                               l3435 064C  
                             l3523 0FF4                               l3355 0368  
                             l3451 02F4                               l3349 0690  
                             l3517 0FD9                               l3365 038B  
                             l3461 02EC                               l3533 07DA  
                             l3605 06DA                               l3519 0FE6  
                             l3391 03DA                               l3375 0383  
                             l3463 02F0                               l3439 02C3  
                             l3535 07E2                               l3527 07BC  
                             l3393 03DF                               l3377 0387  
                             l3465 0317                               l3529 07C9  
                             l3553 0765                               l3379 03AE  
                             l3475 032C                               l3483 034B  
                             l3571 0592                               l3389 03C3  
                             l3397 03E2                               l3477 0343  
                             l3485 0354                               l3581 05C0  
                             l3573 05A0                               l3557 076F  
                             l3813 0207                               l3399 03EB  
                             l3479 0348                               l3807 01FD  
                             l3911 042E                               l3903 041D  
                             l3585 05CB                               l3841 0276  
                             l3809 0202                               l3913 043F  
                             l3921 045A                               l3595 06A9  
                             l3835 0271                               l3819 022D  
                             l3843 01E1                               l3915 0448  
                             l3597 06B7                               l3829 0244  
                             l3917 0451                               l3909 042A  
                             l3785 05DC                               l3797 0616  
                             l3897 040C                               STR_1 01D8  
                             STR_2 00AA                               STR_3 00D7  
                             STR_4 00B5                               STR_5 01BF  
                             STR_6 016F                               STR_7 01C4  
                             STR_8 0175                               STR_9 01C9  
                             u3605 05C1                               u3525 0770  
                             u3535 0777                               u3635 06AC  
                             _PEIE 005E                               u3565 0595  
                             u3495 06ED                               u3655 06C5  
                             u3585 05A1                               u3665 06D0  
                             u3745 0267                               u3907 04B6  
                             u3595 05B5                               u3917 0EC2  
                             u3927 0EB2                               u3695 05FC  
                             u3937 06E6                               u3877 0473  
                             u3887 048C                               u3897 04A1  
            Buzzer_MiliSecond@time 0020                               _TMR0 0015  
                             _TMR1 0016                               _TMR2 001A  
                             _TMR4 0415                               _TMR6 041C  
                  ??_I2C1_Transmit 0022                       __CFG_WRT$OFF 0000  
                             _main 03EE                               _mode 0068  
                 __end_of_I2C_Init 1000                               fsr0h 0005  
                             fsr1h 0007                               indf0 0000  
                             fsr0l 0004                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    __CFG_BOREN$ON 0000                    ??_I2C2_Transmit 0022  
                 ??_I2C1_Interrupt 0076                               start 0031  
                    __CFG_IESO$OFF 0000                    __end_of_Handler 0031  
           __end_of_LCD_CursorHome 0EB8                      _LCD_WriteData 06E3  
                    __CFG_MCLRE$ON 0000                   ??_I2C2_Interrupt 0076  
               __size_of_CPSx_Read 0025           __end_of_LCD_DisplayClear 0EC8  
            __size_of_I2C_Transmit 002B                   __end_of_LCD_Init 04D9  
                    __CFG_PLLEN$ON 0000                              ?_main 0076  
                            STR_10 017B                              STR_11 01CE  
                            STR_20 01A1                              STR_12 0181  
                            STR_21 019C                              STR_13 01D3  
                            STR_30 00DF                              STR_22 01AB  
                            STR_14 0187                              STR_31 0125  
                            STR_23 015D                              STR_15 01B0  
                            STR_32 00CF                              STR_24 0133  
                            STR_40 014B                              STR_16 0163  
                            STR_33 00C7                              STR_25 013F  
                            STR_41 0151                              STR_17 01B5  
                    __CFG_WDTE$OFF 0000                              STR_34 00BF  
                            STR_26 0157                              STR_42 0139  
                            STR_18 0169                              STR_27 0110  
                            STR_43 00F4                              STR_35 018D  
                            STR_19 01BA                              STR_28 0109  
                            STR_44 011E                              STR_36 0192  
                            STR_29 0117                              STR_45 00FB  
                            STR_37 01A6                              STR_46 0102  
                            STR_38 0197                              STR_47 012C  
                            STR_39 0145                              STR_48 00E6  
                            STR_49 00ED                    __end_of___lldiv 05D4  
                            _T1CON 0018                    __end_of___llmod 06E3  
                            _T2CON 001C                              _LATA3 0863  
                            _LATA4 0864                              _LATA6 0866  
                            _T4CON 0417                              _T6CON 041E  
                            i1l157 0550                              i1l294 04FC  
                            i1l644 0E9D                              i1l645 0EA2  
                            _PORTA 000C                              _PORTB 000D  
                            _TRISA 008C                              _TRISB 008D  
                I2C2_Transmit@size 0021                ___lmul@multiplicand 0024  
                    __CFG_PWRTE$ON 0000                     __CFG_FCMEN$OFF 0000  
                  __end_of_dpowers 008C                              _count 0073  
                            _errno 0066                              _putch 0E30  
                    ??_Buzzer_Init 0020              __end_of_Timer1_GetCPM 07B9  
                            status 0003                              wtemp0 007E  
                _Buzzer_MiliSecond 0E43                       _I2C_Transmit 07B9  
                   ?_LCD_WriteData 0076                 ?_Buzzer_MiliSecond 0020  
                 ??_DAC_Initialize 0030                    ?_LCD_CursorHome 0076  
                  __initialization 0033                       __end_of_main 046A  
              ??_Buzzer_MiliSecond 0022                             ??_main 0057  
                 CPSx_Read@channel 0075                        ?_Basic_Init 0076  
                           _BCL1IE 0493                             _BCL1IF 0093  
                           _BCL2IE 04A1                             _BCL2IF 00A1  
                 ___llmod@dividend 003E               __size_of_mTouch_Init 0013  
             __size_of_mTouch_Read 0044                             _CCPR2L 0298  
                           _ANSELA 018C                             ?_putch 0076  
                           _ANSELB 018D                             _T1GCON 0019  
                __end_of_CPSx_Read 0FAE                             i1l2413 053A  
                           i1l2421 0543                             i1l2441 0575  
                           i1l2433 055A                             i1l2443 0577  
                           i1l2445 0579                             i1l1901 0E61  
                           i1l2439 0570                             i1l2463 04E6  
                           i1l2471 04EF                             i1l3255 0021  
                           i1l3247 0012                             i1l2491 0521  
                           i1l2483 0506                             i1l3259 002A  
                           i1l2493 0523                             i1l2495 0525  
                           i1l2489 051C                             i1l2691 0EFD  
               I2C2_Transmit@i_316 0026                             i1l1869 0E56  
                           i1l2893 0F2E                    _mTouch_Interval 0070  
        __end_of_Buzzer_MiliSecond 0E4D                             u175_25 07F8  
                           _OSCCON 0099                 I2C2_Transmit@pData 0020  
                   _Timer4_Handler 0E4D                             _TMR1IE 0488  
                           _TMR1IF 0088                          ??_Handler 007B  
                           _TMR4IE 0499                             _TMR4IF 0099  
                           _TMR6IE 049B                             _TMR6IF 009B  
                           _TMR1ON 00C0                             _SSP1IE 048B  
                           _SSP1IF 008B                             _SSP2IE 04A0  
                           _SSP2IF 00A0           _mTouch_IntervalDecrement 0E98  
                   _Timer6_Handler 0E58                    _mTouch_PortInit 0E7D  
                    ??_Timer1_Init 0020                      ??_Timer4_Init 0020  
              __end_of_Buzzer_Init 0FD6                      ??_Timer6_Init 0020  
                ?_Timer1_Count10us 0076                             ___lmul 075C  
                        ??___lldiv 0034                          ??___llmod 0042  
               ??_Timer1_Count10us 0076                             _printf 01DC  
                 I2C_Transmit@I2Cx 002E                          ?_I2C_Init 0025  
                           putch@c 0023                   I2C_Transmit@size 002A  
           __end_of_Timer4_Handler 0E58            __end_of__initialization 0060  
           __end_of_Timer6_Handler 0E63                          ?_LCD_Init 0076  
                  ??_LCD_WriteData 0020                         _VoltageReg 006A  
               Buzzer_SetDuty@duty 0076                     __pcstackCOMMON 0076  
              __size_of_Basic_Init 0015                       __pidataBANK1 0F4B  
                     __pidataBANK2 0720                      __end_of_putch 0E39  
              __end_of_Timer1_Init 0F4B                __end_of_Timer4_Init 0EDB  
              __end_of_Timer6_Init 0E98          Buzzer_SetDuty@CCP2CON_Pre 007A  
                       ??_I2C_Init 0028                I2C1_Transmit@result 0027  
                          ??_putch 0023            __size_of_Buzzer_Handler 0015  
                  ?_Timer4_Handler 0076            __end_of_mTouch_PortInit 0E8A  
                       __pbssBANK0 0058                         __pbssBANK1 00A0  
       __size_of_Buzzer_MiliSecond 000A                        _Buzzer_Init 0FAE  
                       ??_LCD_Init 0024                    ?_Timer6_Handler 0076  
          __size_of_Buzzer_SetDuty 001C                      _DAC_DataTable 008C  
                     I2C_Init@I2Cx 002A        __end_of_I2C_CommonInterrupt 0E24  
                     I2C_Init@mode 0026                         __pmaintext 03EE  
                          ?___lmul 0020                         __pintentry 0004  
                          _CCP2CON 029A                  ?_LCD_DisplayClear 0076  
                   ___lmul@product 0028                            _APFCON0 011D  
                          _APFCON1 011E                            _CCPTMRS 029E  
                          ?_printf 0044                 ??_LCD_DisplayClear 0023  
                          _CPSCON0 001E                            _CPSCON1 001F  
                          _SSP1ADD 0212                            _SSP2ADD 021A  
                          _SSP1BUF 0211                            _SSP2BUF 0219  
                          _SSP1MSK 0213                            _SSP2MSK 021B  
              I2C2_Transmit@result 0027                   ??_LCD_CursorHome 0023  
                          _Handler 0004              __end_of_I2C1_Transmit 03EE  
            __end_of_I2C2_Transmit 0357                        _Timer1_Init 0F30  
                      _Timer4_Init 0EC8                        _Timer6_Init 0E8A  
__size_of_Timer1_DetectAssignCount 0018                    __size_of___lmul 0030  
        ?_Timer1_DetectAssignCount 0076                            ___lldiv 0581  
                          ___llmod 06A0                    __CFG_STVREN$OFF 0000  
                          __ptext1 01DC                            __ptext2 0E30  
                          __ptext3 06A0                            __ptext4 05D4  
                          __ptext5 0E43                            __ptext6 0EDB  
                          __ptext7 0E7D                            __ptext8 0E8A  
                          __ptext9 0EC8                    __size_of_printf 00E3  
                  mTouch_Read@chan 0027                            _dpowers 0064  
                     ??_Basic_Init 0020         ??_mTouch_IntervalDecrement 0076  
                          _timesum 0058                            clrloop0 0E25  
             end_of_initialization 0060                   ?_mTouch_PortInit 0076  
                    ?_I2C1_PinInit 0076                            init_ram 0E2A  
                          initloop 0E2B                      ?_I2C2_PinInit 0076  
                      _I2C1_Config 00B3                          _CPSx_Read 0F89  
                      _I2C2_Config 00A0                      ?_I2C1_Setting 0021  
                  ___lldiv@divisor 002C                      ?_I2C2_Setting 0021  
                  ___lldiv@counter 0039                  I2C_Transmit@pData 0029  
                          printf@c 0056                            printf@f 0044  
               __end_of_Basic_Init 0F18                   _DAC_VoltageTable 00C6  
                     __pstringtext 0064            __size_of_I2C1_Interrupt 0054  
           __size_of_Timer1_GetCPM 002D                   __CFG_FOSC$INTOSC 0000  
                    ??_mTouch_Init 0021                      ??_mTouch_Read 0022  
          __size_of_I2C2_Interrupt 0054          __size_of_Timer1_Count10us 000A  
                __size_of_I2C_Init 002A                I2C1_Setting@address 0024  
                   _Buzzer_Handler 0EEE                     ??_I2C1_PinInit 0020  
                   ??_I2C2_PinInit 0020                     _Buzzer_SetDuty 07E4  
                   ??_I2C1_Setting 0023                         ?_CPSx_Read 0076  
                   ??_I2C2_Setting 0023                      _H7826_01_Gain 0120  
                __size_of_LCD_Init 006F                     __end_of___lmul 078C  
                        _ConfigReg 006C            __size_of_DAC_Initialize 0020  
                   __end_of_printf 02BF                   ??_Timer4_Handler 0076  
              start_initialization 0033             __end_of_Buzzer_Handler 0F03  
                 ??_Timer6_Handler 0076               I2C1_Transmit@address 0024  
           __end_of_Buzzer_SetDuty 0800                       ?_Buzzer_Init 0076  
              __end_of_mTouch_Init 0EEE                __end_of_mTouch_Read 0618  
                    _Timer1_GetCPM 078C                I2C2_Setting@address 0024  
                  ___llmod@divisor 003A                    ___llmod@counter 0043  
            __end_of_LCD_WriteData 0720                           ??___lmul 0028  
                      __pdataBANK1 00C6                        __pdataBANK2 0120  
                         ??_printf 0048                  I2C1_Setting@Speed 0022  
                      __pbssCOMMON 0070                          ___latbits 0001  
                    __pcstackBANK0 0020   __end_of_mTouch_IntervalDecrement 0EA8  
                  ?_Buzzer_Handler 0076                 I2C1_Transmit@i_172 0026  
               I2C1_Transmit@pData 0020          __size_of_LCD_DisplayClear 0010  
                  ?_Buzzer_SetDuty 0076                     ?_Timer1_GetCPM 003A  
 __end_of_Timer1_DetectAssignCount 0F30                    I2C_Init@address 0025  
                         ?_Handler 0076                        ??_CPSx_Read 0076  
                    ?_I2C_Transmit 0028                      I2C_Init@Speed 0027  
                     ?_Timer1_Init 0076                       ?_Timer4_Init 0076  
                     ?_Timer6_Init 0076                           ?___lldiv 002C  
                         ?___llmod 003A                     _I2C1_Interrupt 052D  
             __end_of_I2C1_PinInit 0E70       __size_of_I2C_CommonInterrupt 0006  
             __end_of_I2C2_PinInit 0E7D               __end_of_I2C1_Setting 06A0  
                         _I2C_Init 0FD6               __end_of_I2C2_Setting 065C  
                   _I2C2_Interrupt 04D9                         _H7826_Gain 013E  
                      _mTouch_Init 0EDB                        _mTouch_Read 05D4  
                 _Timer1_Count10us 0E39                     __size_of_putch 0009  
                         _LCD_Init 046A                           _CPS_Data 0060  
                   ??_I2C_Transmit 002B                          clear_ram0 0E24  
           __end_of_I2C1_Interrupt 0581                           _SSP1CON1 0215  
                         _SSP1CON2 0216               I2C2_Transmit@address 0024  
                         _SSP2CON1 021D                           _SSP2CON2 021E  
                         _SSP1STAT 0214                           _SSP2STAT 021C  
                   _DAC_Initialize 0F69             __end_of_I2C2_Interrupt 052D  
                       printf@flag 004E                         printf@prec 004F  
           __size_of_I2C1_Transmit 0097             __size_of_I2C2_Transmit 0098  
                  ??_Timer1_GetCPM 003C                        _CPS_PreData 0063  
                ___lmul@multiplier 0020                   __size_of_Handler 002D  
             __size_of_Buzzer_Init 0028           _Timer1_DetectAssignCount 0F18  
         __size_of_mTouch_PortInit 000D  __size_of_mTouch_IntervalDecrement 0010  
        ?_mTouch_IntervalDecrement 0076                    ?_I2C1_Interrupt 0076  
          __size_of_LCD_CursorHome 0010             __end_of_DAC_Initialize 0F89  
                 __size_of___lldiv 0053                   __size_of___llmod 0043  
                 I2C1_Setting@mode 0021                 LCD_WriteData@point 0022  
                  ?_I2C2_Interrupt 0076                  I2C1_Transmit@size 0021  
                         __ptext10 0F30                           __ptext11 078C  
                         __ptext20 02BF                           __ptext12 075C  
                         __ptext21 0357                           __ptext13 0581  
                         __ptext30 0E98                           __ptext22 0FD6  
                         __ptext14 046A                           __ptext31 0E58  
                         __ptext23 0618                           __ptext15 0EB8  
                         __ptext40 07E4                           __ptext32 0E4D  
                         __ptext24 0E70                           __ptext16 0EA8  
                         __ptext33 0F18                           __ptext25 065C  
                         __ptext17 06E3                           __ptext34 0E39  
                         __ptext26 0E63                           __ptext18 0F69  
                         __ptext35 0E1E                           __ptext27 0FAE  
                         __ptext19 07B9                           __ptext36 04D9  
                         __ptext28 0F03                           __ptext37 052D  
                         __ptext38 0F89                           __ptext39 0EEE  
                     _SSP1CON1bits 0215                       _SSP1CON2bits 0216  
                 _LCD_DisplayClear 0EB8                       _SSP2CON1bits 021D  
                     _SSP2CON2bits 021E                           _countsum 005C  
            __end_of_DAC_DataTable 00AA                      __size_of_main 007C  
                    _I2C1_Transmit 0357                      _I2C2_Transmit 02BF  
            __size_of_I2C1_PinInit 000D               __size_of_Timer1_Init 001B  
                         int$flags 007E              __size_of_I2C2_PinInit 000D  
             __size_of_Timer4_Init 0013                I2C_Transmit@address 0028  
             __size_of_Timer6_Init 000E              __size_of_I2C1_Setting 0044  
                  ?_DAC_Initialize 0076                          printf@val 0051  
                     _SSP1STATbits 0214              __size_of_I2C2_Setting 0044  
                     _SSP2STATbits 021C                   ??_Buzzer_Handler 007B  
             __end_of_I2C_Transmit 07E4                  I2C2_Setting@Speed 0022  
                 ??_Buzzer_SetDuty 0078                           intlevel1 0000  
              _I2C_CommonInterrupt 0E1E                       _I2C1_PinInit 0E63  
                 ___lldiv@dividend 0030                     ?_I2C1_Transmit 0020  
                __CFG_CLKOUTEN$OFF 0000                       _I2C2_PinInit 0E70  
                     _I2C1_Setting 065C                     ?_I2C2_Transmit 0020  
                     _I2C2_Setting 0618           __end_of_Timer1_Count10us 0E43  
                         printf@ap 0055                 I2C_Transmit@result 002F  
                ??_mTouch_PortInit 0020                   I2C2_Setting@mode 0021  
             ?_I2C_CommonInterrupt 0076                         _OPTION_REG 0095  
                 ___lldiv@quotient 0035                       ?_mTouch_Init 0076  
                     ?_mTouch_Read 0076             __size_of_LCD_WriteData 003D  
                   I2C1_Transmit@i 0025            __size_of_Timer4_Handler 000B  
          __size_of_Timer6_Handler 000B  
