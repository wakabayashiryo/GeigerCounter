

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Jun 15 11:55:14 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 1.41
    62                           ; Generated 25/01/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F1827 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  0111                     	;# 
   144  0112                     	;# 
   145  0113                     	;# 
   146  0114                     	;# 
   147  0115                     	;# 
   148  0116                     	;# 
   149  0117                     	;# 
   150  0118                     	;# 
   151  0119                     	;# 
   152  011A                     	;# 
   153  011B                     	;# 
   154  011D                     	;# 
   155  011E                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0191                     	;# 
   159  0191                     	;# 
   160  0192                     	;# 
   161  0193                     	;# 
   162  0193                     	;# 
   163  0193                     	;# 
   164  0194                     	;# 
   165  0195                     	;# 
   166  0196                     	;# 
   167  0199                     	;# 
   168  019A                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019E                     	;# 
   177  019F                     	;# 
   178  020C                     	;# 
   179  020D                     	;# 
   180  0211                     	;# 
   181  0211                     	;# 
   182  0212                     	;# 
   183  0212                     	;# 
   184  0213                     	;# 
   185  0213                     	;# 
   186  0214                     	;# 
   187  0214                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0216                     	;# 
   192  0216                     	;# 
   193  0217                     	;# 
   194  0217                     	;# 
   195  0219                     	;# 
   196  021A                     	;# 
   197  021B                     	;# 
   198  021C                     	;# 
   199  021D                     	;# 
   200  021E                     	;# 
   201  021F                     	;# 
   202  0291                     	;# 
   203  0291                     	;# 
   204  0292                     	;# 
   205  0293                     	;# 
   206  0294                     	;# 
   207  0295                     	;# 
   208  0295                     	;# 
   209  0296                     	;# 
   210  0298                     	;# 
   211  0298                     	;# 
   212  0299                     	;# 
   213  029A                     	;# 
   214  029B                     	;# 
   215  029C                     	;# 
   216  029C                     	;# 
   217  029D                     	;# 
   218  029E                     	;# 
   219  029E                     	;# 
   220  0311                     	;# 
   221  0311                     	;# 
   222  0312                     	;# 
   223  0313                     	;# 
   224  0318                     	;# 
   225  0318                     	;# 
   226  0319                     	;# 
   227  031A                     	;# 
   228  0394                     	;# 
   229  0395                     	;# 
   230  0396                     	;# 
   231  039A                     	;# 
   232  039C                     	;# 
   233  039D                     	;# 
   234  039E                     	;# 
   235  039F                     	;# 
   236  0415                     	;# 
   237  0416                     	;# 
   238  0417                     	;# 
   239  041C                     	;# 
   240  041D                     	;# 
   241  041E                     	;# 
   242  0FE4                     	;# 
   243  0FE5                     	;# 
   244  0FE6                     	;# 
   245  0FE7                     	;# 
   246  0FE8                     	;# 
   247  0FE9                     	;# 
   248  0FEA                     	;# 
   249  0FEB                     	;# 
   250  0FED                     	;# 
   251  0FEE                     	;# 
   252  0FEF                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  0111                     	;# 
   302  0112                     	;# 
   303  0113                     	;# 
   304  0114                     	;# 
   305  0115                     	;# 
   306  0116                     	;# 
   307  0117                     	;# 
   308  0118                     	;# 
   309  0119                     	;# 
   310  011A                     	;# 
   311  011B                     	;# 
   312  011D                     	;# 
   313  011E                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0191                     	;# 
   317  0191                     	;# 
   318  0192                     	;# 
   319  0193                     	;# 
   320  0193                     	;# 
   321  0193                     	;# 
   322  0194                     	;# 
   323  0195                     	;# 
   324  0196                     	;# 
   325  0199                     	;# 
   326  019A                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019B                     	;# 
   330  019B                     	;# 
   331  019C                     	;# 
   332  019C                     	;# 
   333  019D                     	;# 
   334  019E                     	;# 
   335  019F                     	;# 
   336  020C                     	;# 
   337  020D                     	;# 
   338  0211                     	;# 
   339  0211                     	;# 
   340  0212                     	;# 
   341  0212                     	;# 
   342  0213                     	;# 
   343  0213                     	;# 
   344  0214                     	;# 
   345  0214                     	;# 
   346  0215                     	;# 
   347  0215                     	;# 
   348  0215                     	;# 
   349  0216                     	;# 
   350  0216                     	;# 
   351  0217                     	;# 
   352  0217                     	;# 
   353  0219                     	;# 
   354  021A                     	;# 
   355  021B                     	;# 
   356  021C                     	;# 
   357  021D                     	;# 
   358  021E                     	;# 
   359  021F                     	;# 
   360  0291                     	;# 
   361  0291                     	;# 
   362  0292                     	;# 
   363  0293                     	;# 
   364  0294                     	;# 
   365  0295                     	;# 
   366  0295                     	;# 
   367  0296                     	;# 
   368  0298                     	;# 
   369  0298                     	;# 
   370  0299                     	;# 
   371  029A                     	;# 
   372  029B                     	;# 
   373  029C                     	;# 
   374  029C                     	;# 
   375  029D                     	;# 
   376  029E                     	;# 
   377  029E                     	;# 
   378  0311                     	;# 
   379  0311                     	;# 
   380  0312                     	;# 
   381  0313                     	;# 
   382  0318                     	;# 
   383  0318                     	;# 
   384  0319                     	;# 
   385  031A                     	;# 
   386  0394                     	;# 
   387  0395                     	;# 
   388  0396                     	;# 
   389  039A                     	;# 
   390  039C                     	;# 
   391  039D                     	;# 
   392  039E                     	;# 
   393  039F                     	;# 
   394  0415                     	;# 
   395  0416                     	;# 
   396  0417                     	;# 
   397  041C                     	;# 
   398  041D                     	;# 
   399  041E                     	;# 
   400  0FE4                     	;# 
   401  0FE5                     	;# 
   402  0FE6                     	;# 
   403  0FE7                     	;# 
   404  0FE8                     	;# 
   405  0FE9                     	;# 
   406  0FEA                     	;# 
   407  0FEB                     	;# 
   408  0FED                     	;# 
   409  0FEE                     	;# 
   410  0FEF                     	;# 
   411  0000                     	;# 
   412  0001                     	;# 
   413  0002                     	;# 
   414  0003                     	;# 
   415  0004                     	;# 
   416  0005                     	;# 
   417  0006                     	;# 
   418  0007                     	;# 
   419  0008                     	;# 
   420  0009                     	;# 
   421  000A                     	;# 
   422  000B                     	;# 
   423  000C                     	;# 
   424  000D                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0014                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  008C                     	;# 
   441  008D                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0093                     	;# 
   445  0094                     	;# 
   446  0095                     	;# 
   447  0096                     	;# 
   448  0097                     	;# 
   449  0098                     	;# 
   450  0099                     	;# 
   451  009A                     	;# 
   452  009B                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  0111                     	;# 
   460  0112                     	;# 
   461  0113                     	;# 
   462  0114                     	;# 
   463  0115                     	;# 
   464  0116                     	;# 
   465  0117                     	;# 
   466  0118                     	;# 
   467  0119                     	;# 
   468  011A                     	;# 
   469  011B                     	;# 
   470  011D                     	;# 
   471  011E                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474  0191                     	;# 
   475  0191                     	;# 
   476  0192                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0193                     	;# 
   480  0194                     	;# 
   481  0195                     	;# 
   482  0196                     	;# 
   483  0199                     	;# 
   484  019A                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019C                     	;# 
   490  019C                     	;# 
   491  019D                     	;# 
   492  019E                     	;# 
   493  019F                     	;# 
   494  020C                     	;# 
   495  020D                     	;# 
   496  0211                     	;# 
   497  0211                     	;# 
   498  0212                     	;# 
   499  0212                     	;# 
   500  0213                     	;# 
   501  0213                     	;# 
   502  0214                     	;# 
   503  0214                     	;# 
   504  0215                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0216                     	;# 
   508  0216                     	;# 
   509  0217                     	;# 
   510  0217                     	;# 
   511  0219                     	;# 
   512  021A                     	;# 
   513  021B                     	;# 
   514  021C                     	;# 
   515  021D                     	;# 
   516  021E                     	;# 
   517  021F                     	;# 
   518  0291                     	;# 
   519  0291                     	;# 
   520  0292                     	;# 
   521  0293                     	;# 
   522  0294                     	;# 
   523  0295                     	;# 
   524  0295                     	;# 
   525  0296                     	;# 
   526  0298                     	;# 
   527  0298                     	;# 
   528  0299                     	;# 
   529  029A                     	;# 
   530  029B                     	;# 
   531  029C                     	;# 
   532  029C                     	;# 
   533  029D                     	;# 
   534  029E                     	;# 
   535  029E                     	;# 
   536  0311                     	;# 
   537  0311                     	;# 
   538  0312                     	;# 
   539  0313                     	;# 
   540  0318                     	;# 
   541  0318                     	;# 
   542  0319                     	;# 
   543  031A                     	;# 
   544  0394                     	;# 
   545  0395                     	;# 
   546  0396                     	;# 
   547  039A                     	;# 
   548  039C                     	;# 
   549  039D                     	;# 
   550  039E                     	;# 
   551  039F                     	;# 
   552  0415                     	;# 
   553  0416                     	;# 
   554  0417                     	;# 
   555  041C                     	;# 
   556  041D                     	;# 
   557  041E                     	;# 
   558  0FE4                     	;# 
   559  0FE5                     	;# 
   560  0FE6                     	;# 
   561  0FE7                     	;# 
   562  0FE8                     	;# 
   563  0FE9                     	;# 
   564  0FEA                     	;# 
   565  0FEB                     	;# 
   566  0FED                     	;# 
   567  0FEE                     	;# 
   568  0FEF                     	;# 
   569  0000                     	;# 
   570  0001                     	;# 
   571  0002                     	;# 
   572  0003                     	;# 
   573  0004                     	;# 
   574  0005                     	;# 
   575  0006                     	;# 
   576  0007                     	;# 
   577  0008                     	;# 
   578  0009                     	;# 
   579  000A                     	;# 
   580  000B                     	;# 
   581  000C                     	;# 
   582  000D                     	;# 
   583  0011                     	;# 
   584  0012                     	;# 
   585  0013                     	;# 
   586  0014                     	;# 
   587  0015                     	;# 
   588  0016                     	;# 
   589  0016                     	;# 
   590  0017                     	;# 
   591  0018                     	;# 
   592  0019                     	;# 
   593  001A                     	;# 
   594  001B                     	;# 
   595  001C                     	;# 
   596  001E                     	;# 
   597  001F                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  0091                     	;# 
   601  0092                     	;# 
   602  0093                     	;# 
   603  0094                     	;# 
   604  0095                     	;# 
   605  0096                     	;# 
   606  0097                     	;# 
   607  0098                     	;# 
   608  0099                     	;# 
   609  009A                     	;# 
   610  009B                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  010C                     	;# 
   616  010D                     	;# 
   617  0111                     	;# 
   618  0112                     	;# 
   619  0113                     	;# 
   620  0114                     	;# 
   621  0115                     	;# 
   622  0116                     	;# 
   623  0117                     	;# 
   624  0118                     	;# 
   625  0119                     	;# 
   626  011A                     	;# 
   627  011B                     	;# 
   628  011D                     	;# 
   629  011E                     	;# 
   630  018C                     	;# 
   631  018D                     	;# 
   632  0191                     	;# 
   633  0191                     	;# 
   634  0192                     	;# 
   635  0193                     	;# 
   636  0193                     	;# 
   637  0193                     	;# 
   638  0194                     	;# 
   639  0195                     	;# 
   640  0196                     	;# 
   641  0199                     	;# 
   642  019A                     	;# 
   643  019B                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019C                     	;# 
   648  019C                     	;# 
   649  019D                     	;# 
   650  019E                     	;# 
   651  019F                     	;# 
   652  020C                     	;# 
   653  020D                     	;# 
   654  0211                     	;# 
   655  0211                     	;# 
   656  0212                     	;# 
   657  0212                     	;# 
   658  0213                     	;# 
   659  0213                     	;# 
   660  0214                     	;# 
   661  0214                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0215                     	;# 
   665  0216                     	;# 
   666  0216                     	;# 
   667  0217                     	;# 
   668  0217                     	;# 
   669  0219                     	;# 
   670  021A                     	;# 
   671  021B                     	;# 
   672  021C                     	;# 
   673  021D                     	;# 
   674  021E                     	;# 
   675  021F                     	;# 
   676  0291                     	;# 
   677  0291                     	;# 
   678  0292                     	;# 
   679  0293                     	;# 
   680  0294                     	;# 
   681  0295                     	;# 
   682  0295                     	;# 
   683  0296                     	;# 
   684  0298                     	;# 
   685  0298                     	;# 
   686  0299                     	;# 
   687  029A                     	;# 
   688  029B                     	;# 
   689  029C                     	;# 
   690  029C                     	;# 
   691  029D                     	;# 
   692  029E                     	;# 
   693  029E                     	;# 
   694  0311                     	;# 
   695  0311                     	;# 
   696  0312                     	;# 
   697  0313                     	;# 
   698  0318                     	;# 
   699  0318                     	;# 
   700  0319                     	;# 
   701  031A                     	;# 
   702  0394                     	;# 
   703  0395                     	;# 
   704  0396                     	;# 
   705  039A                     	;# 
   706  039C                     	;# 
   707  039D                     	;# 
   708  039E                     	;# 
   709  039F                     	;# 
   710  0415                     	;# 
   711  0416                     	;# 
   712  0417                     	;# 
   713  041C                     	;# 
   714  041D                     	;# 
   715  041E                     	;# 
   716  0FE4                     	;# 
   717  0FE5                     	;# 
   718  0FE6                     	;# 
   719  0FE7                     	;# 
   720  0FE8                     	;# 
   721  0FE9                     	;# 
   722  0FEA                     	;# 
   723  0FEB                     	;# 
   724  0FED                     	;# 
   725  0FEE                     	;# 
   726  0FEF                     	;# 
   727  0000                     	;# 
   728  0001                     	;# 
   729  0002                     	;# 
   730  0003                     	;# 
   731  0004                     	;# 
   732  0005                     	;# 
   733  0006                     	;# 
   734  0007                     	;# 
   735  0008                     	;# 
   736  0009                     	;# 
   737  000A                     	;# 
   738  000B                     	;# 
   739  000C                     	;# 
   740  000D                     	;# 
   741  0011                     	;# 
   742  0012                     	;# 
   743  0013                     	;# 
   744  0014                     	;# 
   745  0015                     	;# 
   746  0016                     	;# 
   747  0016                     	;# 
   748  0017                     	;# 
   749  0018                     	;# 
   750  0019                     	;# 
   751  001A                     	;# 
   752  001B                     	;# 
   753  001C                     	;# 
   754  001E                     	;# 
   755  001F                     	;# 
   756  008C                     	;# 
   757  008D                     	;# 
   758  0091                     	;# 
   759  0092                     	;# 
   760  0093                     	;# 
   761  0094                     	;# 
   762  0095                     	;# 
   763  0096                     	;# 
   764  0097                     	;# 
   765  0098                     	;# 
   766  0099                     	;# 
   767  009A                     	;# 
   768  009B                     	;# 
   769  009B                     	;# 
   770  009C                     	;# 
   771  009D                     	;# 
   772  009E                     	;# 
   773  010C                     	;# 
   774  010D                     	;# 
   775  0111                     	;# 
   776  0112                     	;# 
   777  0113                     	;# 
   778  0114                     	;# 
   779  0115                     	;# 
   780  0116                     	;# 
   781  0117                     	;# 
   782  0118                     	;# 
   783  0119                     	;# 
   784  011A                     	;# 
   785  011B                     	;# 
   786  011D                     	;# 
   787  011E                     	;# 
   788  018C                     	;# 
   789  018D                     	;# 
   790  0191                     	;# 
   791  0191                     	;# 
   792  0192                     	;# 
   793  0193                     	;# 
   794  0193                     	;# 
   795  0193                     	;# 
   796  0194                     	;# 
   797  0195                     	;# 
   798  0196                     	;# 
   799  0199                     	;# 
   800  019A                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019B                     	;# 
   804  019B                     	;# 
   805  019C                     	;# 
   806  019C                     	;# 
   807  019D                     	;# 
   808  019E                     	;# 
   809  019F                     	;# 
   810  020C                     	;# 
   811  020D                     	;# 
   812  0211                     	;# 
   813  0211                     	;# 
   814  0212                     	;# 
   815  0212                     	;# 
   816  0213                     	;# 
   817  0213                     	;# 
   818  0214                     	;# 
   819  0214                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0216                     	;# 
   824  0216                     	;# 
   825  0217                     	;# 
   826  0217                     	;# 
   827  0219                     	;# 
   828  021A                     	;# 
   829  021B                     	;# 
   830  021C                     	;# 
   831  021D                     	;# 
   832  021E                     	;# 
   833  021F                     	;# 
   834  0291                     	;# 
   835  0291                     	;# 
   836  0292                     	;# 
   837  0293                     	;# 
   838  0294                     	;# 
   839  0295                     	;# 
   840  0295                     	;# 
   841  0296                     	;# 
   842  0298                     	;# 
   843  0298                     	;# 
   844  0299                     	;# 
   845  029A                     	;# 
   846  029B                     	;# 
   847  029C                     	;# 
   848  029C                     	;# 
   849  029D                     	;# 
   850  029E                     	;# 
   851  029E                     	;# 
   852  0311                     	;# 
   853  0311                     	;# 
   854  0312                     	;# 
   855  0313                     	;# 
   856  0318                     	;# 
   857  0318                     	;# 
   858  0319                     	;# 
   859  031A                     	;# 
   860  0394                     	;# 
   861  0395                     	;# 
   862  0396                     	;# 
   863  039A                     	;# 
   864  039C                     	;# 
   865  039D                     	;# 
   866  039E                     	;# 
   867  039F                     	;# 
   868  0415                     	;# 
   869  0416                     	;# 
   870  0417                     	;# 
   871  041C                     	;# 
   872  041D                     	;# 
   873  041E                     	;# 
   874  0FE4                     	;# 
   875  0FE5                     	;# 
   876  0FE6                     	;# 
   877  0FE7                     	;# 
   878  0FE8                     	;# 
   879  0FE9                     	;# 
   880  0FEA                     	;# 
   881  0FEB                     	;# 
   882  0FED                     	;# 
   883  0FEE                     	;# 
   884  0FEF                     	;# 
   885  0000                     	;# 
   886  0001                     	;# 
   887  0002                     	;# 
   888  0003                     	;# 
   889  0004                     	;# 
   890  0005                     	;# 
   891  0006                     	;# 
   892  0007                     	;# 
   893  0008                     	;# 
   894  0009                     	;# 
   895  000A                     	;# 
   896  000B                     	;# 
   897  000C                     	;# 
   898  000D                     	;# 
   899  0011                     	;# 
   900  0012                     	;# 
   901  0013                     	;# 
   902  0014                     	;# 
   903  0015                     	;# 
   904  0016                     	;# 
   905  0016                     	;# 
   906  0017                     	;# 
   907  0018                     	;# 
   908  0019                     	;# 
   909  001A                     	;# 
   910  001B                     	;# 
   911  001C                     	;# 
   912  001E                     	;# 
   913  001F                     	;# 
   914  008C                     	;# 
   915  008D                     	;# 
   916  0091                     	;# 
   917  0092                     	;# 
   918  0093                     	;# 
   919  0094                     	;# 
   920  0095                     	;# 
   921  0096                     	;# 
   922  0097                     	;# 
   923  0098                     	;# 
   924  0099                     	;# 
   925  009A                     	;# 
   926  009B                     	;# 
   927  009B                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009E                     	;# 
   931  010C                     	;# 
   932  010D                     	;# 
   933  0111                     	;# 
   934  0112                     	;# 
   935  0113                     	;# 
   936  0114                     	;# 
   937  0115                     	;# 
   938  0116                     	;# 
   939  0117                     	;# 
   940  0118                     	;# 
   941  0119                     	;# 
   942  011A                     	;# 
   943  011B                     	;# 
   944  011D                     	;# 
   945  011E                     	;# 
   946  018C                     	;# 
   947  018D                     	;# 
   948  0191                     	;# 
   949  0191                     	;# 
   950  0192                     	;# 
   951  0193                     	;# 
   952  0193                     	;# 
   953  0193                     	;# 
   954  0194                     	;# 
   955  0195                     	;# 
   956  0196                     	;# 
   957  0199                     	;# 
   958  019A                     	;# 
   959  019B                     	;# 
   960  019B                     	;# 
   961  019B                     	;# 
   962  019B                     	;# 
   963  019C                     	;# 
   964  019C                     	;# 
   965  019D                     	;# 
   966  019E                     	;# 
   967  019F                     	;# 
   968  020C                     	;# 
   969  020D                     	;# 
   970  0211                     	;# 
   971  0211                     	;# 
   972  0212                     	;# 
   973  0212                     	;# 
   974  0213                     	;# 
   975  0213                     	;# 
   976  0214                     	;# 
   977  0214                     	;# 
   978  0215                     	;# 
   979  0215                     	;# 
   980  0215                     	;# 
   981  0216                     	;# 
   982  0216                     	;# 
   983  0217                     	;# 
   984  0217                     	;# 
   985  0219                     	;# 
   986  021A                     	;# 
   987  021B                     	;# 
   988  021C                     	;# 
   989  021D                     	;# 
   990  021E                     	;# 
   991  021F                     	;# 
   992  0291                     	;# 
   993  0291                     	;# 
   994  0292                     	;# 
   995  0293                     	;# 
   996  0294                     	;# 
   997  0295                     	;# 
   998  0295                     	;# 
   999  0296                     	;# 
  1000  0298                     	;# 
  1001  0298                     	;# 
  1002  0299                     	;# 
  1003  029A                     	;# 
  1004  029B                     	;# 
  1005  029C                     	;# 
  1006  029C                     	;# 
  1007  029D                     	;# 
  1008  029E                     	;# 
  1009  029E                     	;# 
  1010  0311                     	;# 
  1011  0311                     	;# 
  1012  0312                     	;# 
  1013  0313                     	;# 
  1014  0318                     	;# 
  1015  0318                     	;# 
  1016  0319                     	;# 
  1017  031A                     	;# 
  1018  0394                     	;# 
  1019  0395                     	;# 
  1020  0396                     	;# 
  1021  039A                     	;# 
  1022  039C                     	;# 
  1023  039D                     	;# 
  1024  039E                     	;# 
  1025  039F                     	;# 
  1026  0415                     	;# 
  1027  0416                     	;# 
  1028  0417                     	;# 
  1029  041C                     	;# 
  1030  041D                     	;# 
  1031  041E                     	;# 
  1032  0FE4                     	;# 
  1033  0FE5                     	;# 
  1034  0FE6                     	;# 
  1035  0FE7                     	;# 
  1036  0FE8                     	;# 
  1037  0FE9                     	;# 
  1038  0FEA                     	;# 
  1039  0FEB                     	;# 
  1040  0FED                     	;# 
  1041  0FEE                     	;# 
  1042  0FEF                     	;# 
  1043  0000                     	;# 
  1044  0001                     	;# 
  1045  0002                     	;# 
  1046  0003                     	;# 
  1047  0004                     	;# 
  1048  0005                     	;# 
  1049  0006                     	;# 
  1050  0007                     	;# 
  1051  0008                     	;# 
  1052  0009                     	;# 
  1053  000A                     	;# 
  1054  000B                     	;# 
  1055  000C                     	;# 
  1056  000D                     	;# 
  1057  0011                     	;# 
  1058  0012                     	;# 
  1059  0013                     	;# 
  1060  0014                     	;# 
  1061  0015                     	;# 
  1062  0016                     	;# 
  1063  0016                     	;# 
  1064  0017                     	;# 
  1065  0018                     	;# 
  1066  0019                     	;# 
  1067  001A                     	;# 
  1068  001B                     	;# 
  1069  001C                     	;# 
  1070  001E                     	;# 
  1071  001F                     	;# 
  1072  008C                     	;# 
  1073  008D                     	;# 
  1074  0091                     	;# 
  1075  0092                     	;# 
  1076  0093                     	;# 
  1077  0094                     	;# 
  1078  0095                     	;# 
  1079  0096                     	;# 
  1080  0097                     	;# 
  1081  0098                     	;# 
  1082  0099                     	;# 
  1083  009A                     	;# 
  1084  009B                     	;# 
  1085  009B                     	;# 
  1086  009C                     	;# 
  1087  009D                     	;# 
  1088  009E                     	;# 
  1089  010C                     	;# 
  1090  010D                     	;# 
  1091  0111                     	;# 
  1092  0112                     	;# 
  1093  0113                     	;# 
  1094  0114                     	;# 
  1095  0115                     	;# 
  1096  0116                     	;# 
  1097  0117                     	;# 
  1098  0118                     	;# 
  1099  0119                     	;# 
  1100  011A                     	;# 
  1101  011B                     	;# 
  1102  011D                     	;# 
  1103  011E                     	;# 
  1104  018C                     	;# 
  1105  018D                     	;# 
  1106  0191                     	;# 
  1107  0191                     	;# 
  1108  0192                     	;# 
  1109  0193                     	;# 
  1110  0193                     	;# 
  1111  0193                     	;# 
  1112  0194                     	;# 
  1113  0195                     	;# 
  1114  0196                     	;# 
  1115  0199                     	;# 
  1116  019A                     	;# 
  1117  019B                     	;# 
  1118  019B                     	;# 
  1119  019B                     	;# 
  1120  019B                     	;# 
  1121  019C                     	;# 
  1122  019C                     	;# 
  1123  019D                     	;# 
  1124  019E                     	;# 
  1125  019F                     	;# 
  1126  020C                     	;# 
  1127  020D                     	;# 
  1128  0211                     	;# 
  1129  0211                     	;# 
  1130  0212                     	;# 
  1131  0212                     	;# 
  1132  0213                     	;# 
  1133  0213                     	;# 
  1134  0214                     	;# 
  1135  0214                     	;# 
  1136  0215                     	;# 
  1137  0215                     	;# 
  1138  0215                     	;# 
  1139  0216                     	;# 
  1140  0216                     	;# 
  1141  0217                     	;# 
  1142  0217                     	;# 
  1143  0219                     	;# 
  1144  021A                     	;# 
  1145  021B                     	;# 
  1146  021C                     	;# 
  1147  021D                     	;# 
  1148  021E                     	;# 
  1149  021F                     	;# 
  1150  0291                     	;# 
  1151  0291                     	;# 
  1152  0292                     	;# 
  1153  0293                     	;# 
  1154  0294                     	;# 
  1155  0295                     	;# 
  1156  0295                     	;# 
  1157  0296                     	;# 
  1158  0298                     	;# 
  1159  0298                     	;# 
  1160  0299                     	;# 
  1161  029A                     	;# 
  1162  029B                     	;# 
  1163  029C                     	;# 
  1164  029C                     	;# 
  1165  029D                     	;# 
  1166  029E                     	;# 
  1167  029E                     	;# 
  1168  0311                     	;# 
  1169  0311                     	;# 
  1170  0312                     	;# 
  1171  0313                     	;# 
  1172  0318                     	;# 
  1173  0318                     	;# 
  1174  0319                     	;# 
  1175  031A                     	;# 
  1176  0394                     	;# 
  1177  0395                     	;# 
  1178  0396                     	;# 
  1179  039A                     	;# 
  1180  039C                     	;# 
  1181  039D                     	;# 
  1182  039E                     	;# 
  1183  039F                     	;# 
  1184  0415                     	;# 
  1185  0416                     	;# 
  1186  0417                     	;# 
  1187  041C                     	;# 
  1188  041D                     	;# 
  1189  041E                     	;# 
  1190  0FE4                     	;# 
  1191  0FE5                     	;# 
  1192  0FE6                     	;# 
  1193  0FE7                     	;# 
  1194  0FE8                     	;# 
  1195  0FE9                     	;# 
  1196  0FEA                     	;# 
  1197  0FEB                     	;# 
  1198  0FED                     	;# 
  1199  0FEE                     	;# 
  1200  0FEF                     	;# 
  1201  0000                     	;# 
  1202  0001                     	;# 
  1203  0002                     	;# 
  1204  0003                     	;# 
  1205  0004                     	;# 
  1206  0005                     	;# 
  1207  0006                     	;# 
  1208  0007                     	;# 
  1209  0008                     	;# 
  1210  0009                     	;# 
  1211  000A                     	;# 
  1212  000B                     	;# 
  1213  000C                     	;# 
  1214  000D                     	;# 
  1215  0011                     	;# 
  1216  0012                     	;# 
  1217  0013                     	;# 
  1218  0014                     	;# 
  1219  0015                     	;# 
  1220  0016                     	;# 
  1221  0016                     	;# 
  1222  0017                     	;# 
  1223  0018                     	;# 
  1224  0019                     	;# 
  1225  001A                     	;# 
  1226  001B                     	;# 
  1227  001C                     	;# 
  1228  001E                     	;# 
  1229  001F                     	;# 
  1230  008C                     	;# 
  1231  008D                     	;# 
  1232  0091                     	;# 
  1233  0092                     	;# 
  1234  0093                     	;# 
  1235  0094                     	;# 
  1236  0095                     	;# 
  1237  0096                     	;# 
  1238  0097                     	;# 
  1239  0098                     	;# 
  1240  0099                     	;# 
  1241  009A                     	;# 
  1242  009B                     	;# 
  1243  009B                     	;# 
  1244  009C                     	;# 
  1245  009D                     	;# 
  1246  009E                     	;# 
  1247  010C                     	;# 
  1248  010D                     	;# 
  1249  0111                     	;# 
  1250  0112                     	;# 
  1251  0113                     	;# 
  1252  0114                     	;# 
  1253  0115                     	;# 
  1254  0116                     	;# 
  1255  0117                     	;# 
  1256  0118                     	;# 
  1257  0119                     	;# 
  1258  011A                     	;# 
  1259  011B                     	;# 
  1260  011D                     	;# 
  1261  011E                     	;# 
  1262  018C                     	;# 
  1263  018D                     	;# 
  1264  0191                     	;# 
  1265  0191                     	;# 
  1266  0192                     	;# 
  1267  0193                     	;# 
  1268  0193                     	;# 
  1269  0193                     	;# 
  1270  0194                     	;# 
  1271  0195                     	;# 
  1272  0196                     	;# 
  1273  0199                     	;# 
  1274  019A                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019B                     	;# 
  1279  019C                     	;# 
  1280  019C                     	;# 
  1281  019D                     	;# 
  1282  019E                     	;# 
  1283  019F                     	;# 
  1284  020C                     	;# 
  1285  020D                     	;# 
  1286  0211                     	;# 
  1287  0211                     	;# 
  1288  0212                     	;# 
  1289  0212                     	;# 
  1290  0213                     	;# 
  1291  0213                     	;# 
  1292  0214                     	;# 
  1293  0214                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0216                     	;# 
  1298  0216                     	;# 
  1299  0217                     	;# 
  1300  0217                     	;# 
  1301  0219                     	;# 
  1302  021A                     	;# 
  1303  021B                     	;# 
  1304  021C                     	;# 
  1305  021D                     	;# 
  1306  021E                     	;# 
  1307  021F                     	;# 
  1308  0291                     	;# 
  1309  0291                     	;# 
  1310  0292                     	;# 
  1311  0293                     	;# 
  1312  0294                     	;# 
  1313  0295                     	;# 
  1314  0295                     	;# 
  1315  0296                     	;# 
  1316  0298                     	;# 
  1317  0298                     	;# 
  1318  0299                     	;# 
  1319  029A                     	;# 
  1320  029B                     	;# 
  1321  029C                     	;# 
  1322  029C                     	;# 
  1323  029D                     	;# 
  1324  029E                     	;# 
  1325  029E                     	;# 
  1326  0311                     	;# 
  1327  0311                     	;# 
  1328  0312                     	;# 
  1329  0313                     	;# 
  1330  0318                     	;# 
  1331  0318                     	;# 
  1332  0319                     	;# 
  1333  031A                     	;# 
  1334  0394                     	;# 
  1335  0395                     	;# 
  1336  0396                     	;# 
  1337  039A                     	;# 
  1338  039C                     	;# 
  1339  039D                     	;# 
  1340  039E                     	;# 
  1341  039F                     	;# 
  1342  0415                     	;# 
  1343  0416                     	;# 
  1344  0417                     	;# 
  1345  041C                     	;# 
  1346  041D                     	;# 
  1347  041E                     	;# 
  1348  0FE4                     	;# 
  1349  0FE5                     	;# 
  1350  0FE6                     	;# 
  1351  0FE7                     	;# 
  1352  0FE8                     	;# 
  1353  0FE9                     	;# 
  1354  0FEA                     	;# 
  1355  0FEB                     	;# 
  1356  0FED                     	;# 
  1357  0FEE                     	;# 
  1358  0FEF                     	;# 
  1359  0000                     	;# 
  1360  0001                     	;# 
  1361  0002                     	;# 
  1362  0003                     	;# 
  1363  0004                     	;# 
  1364  0005                     	;# 
  1365  0006                     	;# 
  1366  0007                     	;# 
  1367  0008                     	;# 
  1368  0009                     	;# 
  1369  000A                     	;# 
  1370  000B                     	;# 
  1371  000C                     	;# 
  1372  000D                     	;# 
  1373  0011                     	;# 
  1374  0012                     	;# 
  1375  0013                     	;# 
  1376  0014                     	;# 
  1377  0015                     	;# 
  1378  0016                     	;# 
  1379  0016                     	;# 
  1380  0017                     	;# 
  1381  0018                     	;# 
  1382  0019                     	;# 
  1383  001A                     	;# 
  1384  001B                     	;# 
  1385  001C                     	;# 
  1386  001E                     	;# 
  1387  001F                     	;# 
  1388  008C                     	;# 
  1389  008D                     	;# 
  1390  0091                     	;# 
  1391  0092                     	;# 
  1392  0093                     	;# 
  1393  0094                     	;# 
  1394  0095                     	;# 
  1395  0096                     	;# 
  1396  0097                     	;# 
  1397  0098                     	;# 
  1398  0099                     	;# 
  1399  009A                     	;# 
  1400  009B                     	;# 
  1401  009B                     	;# 
  1402  009C                     	;# 
  1403  009D                     	;# 
  1404  009E                     	;# 
  1405  010C                     	;# 
  1406  010D                     	;# 
  1407  0111                     	;# 
  1408  0112                     	;# 
  1409  0113                     	;# 
  1410  0114                     	;# 
  1411  0115                     	;# 
  1412  0116                     	;# 
  1413  0117                     	;# 
  1414  0118                     	;# 
  1415  0119                     	;# 
  1416  011A                     	;# 
  1417  011B                     	;# 
  1418  011D                     	;# 
  1419  011E                     	;# 
  1420  018C                     	;# 
  1421  018D                     	;# 
  1422  0191                     	;# 
  1423  0191                     	;# 
  1424  0192                     	;# 
  1425  0193                     	;# 
  1426  0193                     	;# 
  1427  0193                     	;# 
  1428  0194                     	;# 
  1429  0195                     	;# 
  1430  0196                     	;# 
  1431  0199                     	;# 
  1432  019A                     	;# 
  1433  019B                     	;# 
  1434  019B                     	;# 
  1435  019B                     	;# 
  1436  019B                     	;# 
  1437  019C                     	;# 
  1438  019C                     	;# 
  1439  019D                     	;# 
  1440  019E                     	;# 
  1441  019F                     	;# 
  1442  020C                     	;# 
  1443  020D                     	;# 
  1444  0211                     	;# 
  1445  0211                     	;# 
  1446  0212                     	;# 
  1447  0212                     	;# 
  1448  0213                     	;# 
  1449  0213                     	;# 
  1450  0214                     	;# 
  1451  0214                     	;# 
  1452  0215                     	;# 
  1453  0215                     	;# 
  1454  0215                     	;# 
  1455  0216                     	;# 
  1456  0216                     	;# 
  1457  0217                     	;# 
  1458  0217                     	;# 
  1459  0219                     	;# 
  1460  021A                     	;# 
  1461  021B                     	;# 
  1462  021C                     	;# 
  1463  021D                     	;# 
  1464  021E                     	;# 
  1465  021F                     	;# 
  1466  0291                     	;# 
  1467  0291                     	;# 
  1468  0292                     	;# 
  1469  0293                     	;# 
  1470  0294                     	;# 
  1471  0295                     	;# 
  1472  0295                     	;# 
  1473  0296                     	;# 
  1474  0298                     	;# 
  1475  0298                     	;# 
  1476  0299                     	;# 
  1477  029A                     	;# 
  1478  029B                     	;# 
  1479  029C                     	;# 
  1480  029C                     	;# 
  1481  029D                     	;# 
  1482  029E                     	;# 
  1483  029E                     	;# 
  1484  0311                     	;# 
  1485  0311                     	;# 
  1486  0312                     	;# 
  1487  0313                     	;# 
  1488  0318                     	;# 
  1489  0318                     	;# 
  1490  0319                     	;# 
  1491  031A                     	;# 
  1492  0394                     	;# 
  1493  0395                     	;# 
  1494  0396                     	;# 
  1495  039A                     	;# 
  1496  039C                     	;# 
  1497  039D                     	;# 
  1498  039E                     	;# 
  1499  039F                     	;# 
  1500  0415                     	;# 
  1501  0416                     	;# 
  1502  0417                     	;# 
  1503  041C                     	;# 
  1504  041D                     	;# 
  1505  041E                     	;# 
  1506  0FE4                     	;# 
  1507  0FE5                     	;# 
  1508  0FE6                     	;# 
  1509  0FE7                     	;# 
  1510  0FE8                     	;# 
  1511  0FE9                     	;# 
  1512  0FEA                     	;# 
  1513  0FEB                     	;# 
  1514  0FED                     	;# 
  1515  0FEE                     	;# 
  1516  0FEF                     	;# 
  1517  0000                     	;# 
  1518  0001                     	;# 
  1519  0002                     	;# 
  1520  0003                     	;# 
  1521  0004                     	;# 
  1522  0005                     	;# 
  1523  0006                     	;# 
  1524  0007                     	;# 
  1525  0008                     	;# 
  1526  0009                     	;# 
  1527  000A                     	;# 
  1528  000B                     	;# 
  1529  000C                     	;# 
  1530  000D                     	;# 
  1531  0011                     	;# 
  1532  0012                     	;# 
  1533  0013                     	;# 
  1534  0014                     	;# 
  1535  0015                     	;# 
  1536  0016                     	;# 
  1537  0016                     	;# 
  1538  0017                     	;# 
  1539  0018                     	;# 
  1540  0019                     	;# 
  1541  001A                     	;# 
  1542  001B                     	;# 
  1543  001C                     	;# 
  1544  001E                     	;# 
  1545  001F                     	;# 
  1546  008C                     	;# 
  1547  008D                     	;# 
  1548  0091                     	;# 
  1549  0092                     	;# 
  1550  0093                     	;# 
  1551  0094                     	;# 
  1552  0095                     	;# 
  1553  0096                     	;# 
  1554  0097                     	;# 
  1555  0098                     	;# 
  1556  0099                     	;# 
  1557  009A                     	;# 
  1558  009B                     	;# 
  1559  009B                     	;# 
  1560  009C                     	;# 
  1561  009D                     	;# 
  1562  009E                     	;# 
  1563  010C                     	;# 
  1564  010D                     	;# 
  1565  0111                     	;# 
  1566  0112                     	;# 
  1567  0113                     	;# 
  1568  0114                     	;# 
  1569  0115                     	;# 
  1570  0116                     	;# 
  1571  0117                     	;# 
  1572  0118                     	;# 
  1573  0119                     	;# 
  1574  011A                     	;# 
  1575  011B                     	;# 
  1576  011D                     	;# 
  1577  011E                     	;# 
  1578  018C                     	;# 
  1579  018D                     	;# 
  1580  0191                     	;# 
  1581  0191                     	;# 
  1582  0192                     	;# 
  1583  0193                     	;# 
  1584  0193                     	;# 
  1585  0193                     	;# 
  1586  0194                     	;# 
  1587  0195                     	;# 
  1588  0196                     	;# 
  1589  0199                     	;# 
  1590  019A                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019B                     	;# 
  1595  019C                     	;# 
  1596  019C                     	;# 
  1597  019D                     	;# 
  1598  019E                     	;# 
  1599  019F                     	;# 
  1600  020C                     	;# 
  1601  020D                     	;# 
  1602  0211                     	;# 
  1603  0211                     	;# 
  1604  0212                     	;# 
  1605  0212                     	;# 
  1606  0213                     	;# 
  1607  0213                     	;# 
  1608  0214                     	;# 
  1609  0214                     	;# 
  1610  0215                     	;# 
  1611  0215                     	;# 
  1612  0215                     	;# 
  1613  0216                     	;# 
  1614  0216                     	;# 
  1615  0217                     	;# 
  1616  0217                     	;# 
  1617  0219                     	;# 
  1618  021A                     	;# 
  1619  021B                     	;# 
  1620  021C                     	;# 
  1621  021D                     	;# 
  1622  021E                     	;# 
  1623  021F                     	;# 
  1624  0291                     	;# 
  1625  0291                     	;# 
  1626  0292                     	;# 
  1627  0293                     	;# 
  1628  0294                     	;# 
  1629  0295                     	;# 
  1630  0295                     	;# 
  1631  0296                     	;# 
  1632  0298                     	;# 
  1633  0298                     	;# 
  1634  0299                     	;# 
  1635  029A                     	;# 
  1636  029B                     	;# 
  1637  029C                     	;# 
  1638  029C                     	;# 
  1639  029D                     	;# 
  1640  029E                     	;# 
  1641  029E                     	;# 
  1642  0311                     	;# 
  1643  0311                     	;# 
  1644  0312                     	;# 
  1645  0313                     	;# 
  1646  0318                     	;# 
  1647  0318                     	;# 
  1648  0319                     	;# 
  1649  031A                     	;# 
  1650  0394                     	;# 
  1651  0395                     	;# 
  1652  0396                     	;# 
  1653  039A                     	;# 
  1654  039C                     	;# 
  1655  039D                     	;# 
  1656  039E                     	;# 
  1657  039F                     	;# 
  1658  0415                     	;# 
  1659  0416                     	;# 
  1660  0417                     	;# 
  1661  041C                     	;# 
  1662  041D                     	;# 
  1663  041E                     	;# 
  1664  0FE4                     	;# 
  1665  0FE5                     	;# 
  1666  0FE6                     	;# 
  1667  0FE7                     	;# 
  1668  0FE8                     	;# 
  1669  0FE9                     	;# 
  1670  0FEA                     	;# 
  1671  0FEB                     	;# 
  1672  0FED                     	;# 
  1673  0FEE                     	;# 
  1674  0FEF                     	;# 
  1675  0000                     	;# 
  1676  0001                     	;# 
  1677  0002                     	;# 
  1678  0003                     	;# 
  1679  0004                     	;# 
  1680  0005                     	;# 
  1681  0006                     	;# 
  1682  0007                     	;# 
  1683  0008                     	;# 
  1684  0009                     	;# 
  1685  000A                     	;# 
  1686  000B                     	;# 
  1687  000C                     	;# 
  1688  000D                     	;# 
  1689  0011                     	;# 
  1690  0012                     	;# 
  1691  0013                     	;# 
  1692  0014                     	;# 
  1693  0015                     	;# 
  1694  0016                     	;# 
  1695  0016                     	;# 
  1696  0017                     	;# 
  1697  0018                     	;# 
  1698  0019                     	;# 
  1699  001A                     	;# 
  1700  001B                     	;# 
  1701  001C                     	;# 
  1702  001E                     	;# 
  1703  001F                     	;# 
  1704  008C                     	;# 
  1705  008D                     	;# 
  1706  0091                     	;# 
  1707  0092                     	;# 
  1708  0093                     	;# 
  1709  0094                     	;# 
  1710  0095                     	;# 
  1711  0096                     	;# 
  1712  0097                     	;# 
  1713  0098                     	;# 
  1714  0099                     	;# 
  1715  009A                     	;# 
  1716  009B                     	;# 
  1717  009B                     	;# 
  1718  009C                     	;# 
  1719  009D                     	;# 
  1720  009E                     	;# 
  1721  010C                     	;# 
  1722  010D                     	;# 
  1723  0111                     	;# 
  1724  0112                     	;# 
  1725  0113                     	;# 
  1726  0114                     	;# 
  1727  0115                     	;# 
  1728  0116                     	;# 
  1729  0117                     	;# 
  1730  0118                     	;# 
  1731  0119                     	;# 
  1732  011A                     	;# 
  1733  011B                     	;# 
  1734  011D                     	;# 
  1735  011E                     	;# 
  1736  018C                     	;# 
  1737  018D                     	;# 
  1738  0191                     	;# 
  1739  0191                     	;# 
  1740  0192                     	;# 
  1741  0193                     	;# 
  1742  0193                     	;# 
  1743  0193                     	;# 
  1744  0194                     	;# 
  1745  0195                     	;# 
  1746  0196                     	;# 
  1747  0199                     	;# 
  1748  019A                     	;# 
  1749  019B                     	;# 
  1750  019B                     	;# 
  1751  019B                     	;# 
  1752  019B                     	;# 
  1753  019C                     	;# 
  1754  019C                     	;# 
  1755  019D                     	;# 
  1756  019E                     	;# 
  1757  019F                     	;# 
  1758  020C                     	;# 
  1759  020D                     	;# 
  1760  0211                     	;# 
  1761  0211                     	;# 
  1762  0212                     	;# 
  1763  0212                     	;# 
  1764  0213                     	;# 
  1765  0213                     	;# 
  1766  0214                     	;# 
  1767  0214                     	;# 
  1768  0215                     	;# 
  1769  0215                     	;# 
  1770  0215                     	;# 
  1771  0216                     	;# 
  1772  0216                     	;# 
  1773  0217                     	;# 
  1774  0217                     	;# 
  1775  0219                     	;# 
  1776  021A                     	;# 
  1777  021B                     	;# 
  1778  021C                     	;# 
  1779  021D                     	;# 
  1780  021E                     	;# 
  1781  021F                     	;# 
  1782  0291                     	;# 
  1783  0291                     	;# 
  1784  0292                     	;# 
  1785  0293                     	;# 
  1786  0294                     	;# 
  1787  0295                     	;# 
  1788  0295                     	;# 
  1789  0296                     	;# 
  1790  0298                     	;# 
  1791  0298                     	;# 
  1792  0299                     	;# 
  1793  029A                     	;# 
  1794  029B                     	;# 
  1795  029C                     	;# 
  1796  029C                     	;# 
  1797  029D                     	;# 
  1798  029E                     	;# 
  1799  029E                     	;# 
  1800  0311                     	;# 
  1801  0311                     	;# 
  1802  0312                     	;# 
  1803  0313                     	;# 
  1804  0318                     	;# 
  1805  0318                     	;# 
  1806  0319                     	;# 
  1807  031A                     	;# 
  1808  0394                     	;# 
  1809  0395                     	;# 
  1810  0396                     	;# 
  1811  039A                     	;# 
  1812  039C                     	;# 
  1813  039D                     	;# 
  1814  039E                     	;# 
  1815  039F                     	;# 
  1816  0415                     	;# 
  1817  0416                     	;# 
  1818  0417                     	;# 
  1819  041C                     	;# 
  1820  041D                     	;# 
  1821  041E                     	;# 
  1822  0FE4                     	;# 
  1823  0FE5                     	;# 
  1824  0FE6                     	;# 
  1825  0FE7                     	;# 
  1826  0FE8                     	;# 
  1827  0FE9                     	;# 
  1828  0FEA                     	;# 
  1829  0FEB                     	;# 
  1830  0FED                     	;# 
  1831  0FEE                     	;# 
  1832  0FEF                     	;# 
  1833  0000                     	;# 
  1834  0001                     	;# 
  1835  0002                     	;# 
  1836  0003                     	;# 
  1837  0004                     	;# 
  1838  0005                     	;# 
  1839  0006                     	;# 
  1840  0007                     	;# 
  1841  0008                     	;# 
  1842  0009                     	;# 
  1843  000A                     	;# 
  1844  000B                     	;# 
  1845  000C                     	;# 
  1846  000D                     	;# 
  1847  0011                     	;# 
  1848  0012                     	;# 
  1849  0013                     	;# 
  1850  0014                     	;# 
  1851  0015                     	;# 
  1852  0016                     	;# 
  1853  0016                     	;# 
  1854  0017                     	;# 
  1855  0018                     	;# 
  1856  0019                     	;# 
  1857  001A                     	;# 
  1858  001B                     	;# 
  1859  001C                     	;# 
  1860  001E                     	;# 
  1861  001F                     	;# 
  1862  008C                     	;# 
  1863  008D                     	;# 
  1864  0091                     	;# 
  1865  0092                     	;# 
  1866  0093                     	;# 
  1867  0094                     	;# 
  1868  0095                     	;# 
  1869  0096                     	;# 
  1870  0097                     	;# 
  1871  0098                     	;# 
  1872  0099                     	;# 
  1873  009A                     	;# 
  1874  009B                     	;# 
  1875  009B                     	;# 
  1876  009C                     	;# 
  1877  009D                     	;# 
  1878  009E                     	;# 
  1879  010C                     	;# 
  1880  010D                     	;# 
  1881  0111                     	;# 
  1882  0112                     	;# 
  1883  0113                     	;# 
  1884  0114                     	;# 
  1885  0115                     	;# 
  1886  0116                     	;# 
  1887  0117                     	;# 
  1888  0118                     	;# 
  1889  0119                     	;# 
  1890  011A                     	;# 
  1891  011B                     	;# 
  1892  011D                     	;# 
  1893  011E                     	;# 
  1894  018C                     	;# 
  1895  018D                     	;# 
  1896  0191                     	;# 
  1897  0191                     	;# 
  1898  0192                     	;# 
  1899  0193                     	;# 
  1900  0193                     	;# 
  1901  0193                     	;# 
  1902  0194                     	;# 
  1903  0195                     	;# 
  1904  0196                     	;# 
  1905  0199                     	;# 
  1906  019A                     	;# 
  1907  019B                     	;# 
  1908  019B                     	;# 
  1909  019B                     	;# 
  1910  019B                     	;# 
  1911  019C                     	;# 
  1912  019C                     	;# 
  1913  019D                     	;# 
  1914  019E                     	;# 
  1915  019F                     	;# 
  1916  020C                     	;# 
  1917  020D                     	;# 
  1918  0211                     	;# 
  1919  0211                     	;# 
  1920  0212                     	;# 
  1921  0212                     	;# 
  1922  0213                     	;# 
  1923  0213                     	;# 
  1924  0214                     	;# 
  1925  0214                     	;# 
  1926  0215                     	;# 
  1927  0215                     	;# 
  1928  0215                     	;# 
  1929  0216                     	;# 
  1930  0216                     	;# 
  1931  0217                     	;# 
  1932  0217                     	;# 
  1933  0219                     	;# 
  1934  021A                     	;# 
  1935  021B                     	;# 
  1936  021C                     	;# 
  1937  021D                     	;# 
  1938  021E                     	;# 
  1939  021F                     	;# 
  1940  0291                     	;# 
  1941  0291                     	;# 
  1942  0292                     	;# 
  1943  0293                     	;# 
  1944  0294                     	;# 
  1945  0295                     	;# 
  1946  0295                     	;# 
  1947  0296                     	;# 
  1948  0298                     	;# 
  1949  0298                     	;# 
  1950  0299                     	;# 
  1951  029A                     	;# 
  1952  029B                     	;# 
  1953  029C                     	;# 
  1954  029C                     	;# 
  1955  029D                     	;# 
  1956  029E                     	;# 
  1957  029E                     	;# 
  1958  0311                     	;# 
  1959  0311                     	;# 
  1960  0312                     	;# 
  1961  0313                     	;# 
  1962  0318                     	;# 
  1963  0318                     	;# 
  1964  0319                     	;# 
  1965  031A                     	;# 
  1966  0394                     	;# 
  1967  0395                     	;# 
  1968  0396                     	;# 
  1969  039A                     	;# 
  1970  039C                     	;# 
  1971  039D                     	;# 
  1972  039E                     	;# 
  1973  039F                     	;# 
  1974  0415                     	;# 
  1975  0416                     	;# 
  1976  0417                     	;# 
  1977  041C                     	;# 
  1978  041D                     	;# 
  1979  041E                     	;# 
  1980  0FE4                     	;# 
  1981  0FE5                     	;# 
  1982  0FE6                     	;# 
  1983  0FE7                     	;# 
  1984  0FE8                     	;# 
  1985  0FE9                     	;# 
  1986  0FEA                     	;# 
  1987  0FEB                     	;# 
  1988  0FED                     	;# 
  1989  0FEE                     	;# 
  1990  0FEF                     	;# 
  1991                           
  1992                           	psect	idataBANK1
  1993  0652                     __pidataBANK1:	
  1994                           
  1995                           ;initializer for _H7826_Gain
  1996  0652  3487               	retlw	low (STR_20| (0+32768))
  1997  0653  3481               	retlw	high (STR_20| (0+32768))
  1998  0654  3482               	retlw	low (STR_21| (0+32768))
  1999  0655  3481               	retlw	high (STR_21| (0+32768))
  2000  0656  3491               	retlw	low (STR_22| (0+32768))
  2001  0657  3481               	retlw	high (STR_22| (0+32768))
  2002  0658  3443               	retlw	low (STR_23| (0+32768))
  2003  0659  3481               	retlw	high (STR_23| (0+32768))
  2004  065A  3419               	retlw	low (STR_24| (0+32768))
  2005  065B  3481               	retlw	high (STR_24| (0+32768))
  2006  065C  3425               	retlw	low (STR_25| (0+32768))
  2007  065D  3481               	retlw	high (STR_25| (0+32768))
  2008  065E  343D               	retlw	low (STR_26| (0+32768))
  2009  065F  3481               	retlw	high (STR_26| (0+32768))
  2010  0660  34F6               	retlw	low (STR_27| (0+32768))
  2011  0661  3480               	retlw	high (STR_27| (0+32768))
  2012  0662  34EF               	retlw	low (STR_28| (0+32768))
  2013  0663  3480               	retlw	high (STR_28| (0+32768))
  2014  0664  34FD               	retlw	low (STR_29| (0+32768))
  2015  0665  3480               	retlw	high (STR_29| (0+32768))
  2016  0666  34C5               	retlw	low (STR_30| (0+32768))
  2017  0667  3480               	retlw	high (STR_30| (0+32768))
  2018  0668  340B               	retlw	low (STR_31| (0+32768))
  2019  0669  3481               	retlw	high (STR_31| (0+32768))
  2020  066A  34B5               	retlw	low (STR_32| (0+32768))
  2021  066B  3480               	retlw	high (STR_32| (0+32768))
  2022  066C  34AD               	retlw	low (STR_33| (0+32768))
  2023  066D  3480               	retlw	high (STR_33| (0+32768))
  2024  066E  34A5               	retlw	low (STR_34| (0+32768))
  2025  066F  3480               	retlw	high (STR_34| (0+32768))
  2026                           
  2027                           ;initializer for _DAC_VoltageTable
  2028  0670  34A5               	retlw	low (STR_5| (0+32768))
  2029  0671  3481               	retlw	high (STR_5| (0+32768))
  2030  0672  3455               	retlw	low (STR_6| (0+32768))
  2031  0673  3481               	retlw	high (STR_6| (0+32768))
  2032  0674  34AA               	retlw	low (STR_7| (0+32768))
  2033  0675  3481               	retlw	high (STR_7| (0+32768))
  2034  0676  345B               	retlw	low (STR_8| (0+32768))
  2035  0677  3481               	retlw	high (STR_8| (0+32768))
  2036  0678  34AF               	retlw	low (STR_9| (0+32768))
  2037  0679  3481               	retlw	high (STR_9| (0+32768))
  2038  067A  3461               	retlw	low (STR_10| (0+32768))
  2039  067B  3481               	retlw	high (STR_10| (0+32768))
  2040  067C  34B4               	retlw	low (STR_11| (0+32768))
  2041  067D  3481               	retlw	high (STR_11| (0+32768))
  2042  067E  3467               	retlw	low (STR_12| (0+32768))
  2043  067F  3481               	retlw	high (STR_12| (0+32768))
  2044  0680  34B9               	retlw	low (STR_13| (0+32768))
  2045  0681  3481               	retlw	high (STR_13| (0+32768))
  2046  0682  346D               	retlw	low (STR_14| (0+32768))
  2047  0683  3481               	retlw	high (STR_14| (0+32768))
  2048  0684  3496               	retlw	low (STR_15| (0+32768))
  2049  0685  3481               	retlw	high (STR_15| (0+32768))
  2050  0686  3449               	retlw	low (STR_16| (0+32768))
  2051  0687  3481               	retlw	high (STR_16| (0+32768))
  2052  0688  349B               	retlw	low (STR_17| (0+32768))
  2053  0689  3481               	retlw	high (STR_17| (0+32768))
  2054  068A  344F               	retlw	low (STR_18| (0+32768))
  2055  068B  3481               	retlw	high (STR_18| (0+32768))
  2056  068C  34A0               	retlw	low (STR_19| (0+32768))
  2057  068D  3481               	retlw	high (STR_19| (0+32768))
  2058                           
  2059                           	psect	idataBANK2
  2060  07D5                     __pidataBANK2:	
  2061                           
  2062                           ;initializer for _H7826_01_Gain
  2063  07D5  3473               	retlw	low (STR_35| (0+32768))
  2064  07D6  3481               	retlw	high (STR_35| (0+32768))
  2065  07D7  3478               	retlw	low (STR_36| (0+32768))
  2066  07D8  3481               	retlw	high (STR_36| (0+32768))
  2067  07D9  348C               	retlw	low (STR_37| (0+32768))
  2068  07DA  3481               	retlw	high (STR_37| (0+32768))
  2069  07DB  347D               	retlw	low (STR_38| (0+32768))
  2070  07DC  3481               	retlw	high (STR_38| (0+32768))
  2071  07DD  342B               	retlw	low (STR_39| (0+32768))
  2072  07DE  3481               	retlw	high (STR_39| (0+32768))
  2073  07DF  3431               	retlw	low (STR_40| (0+32768))
  2074  07E0  3481               	retlw	high (STR_40| (0+32768))
  2075  07E1  3437               	retlw	low (STR_41| (0+32768))
  2076  07E2  3481               	retlw	high (STR_41| (0+32768))
  2077  07E3  341F               	retlw	low (STR_42| (0+32768))
  2078  07E4  3481               	retlw	high (STR_42| (0+32768))
  2079  07E5  34DA               	retlw	low (STR_43| (0+32768))
  2080  07E6  3480               	retlw	high (STR_43| (0+32768))
  2081  07E7  3404               	retlw	low (STR_44| (0+32768))
  2082  07E8  3481               	retlw	high (STR_44| (0+32768))
  2083  07E9  34E1               	retlw	low (STR_45| (0+32768))
  2084  07EA  3480               	retlw	high (STR_45| (0+32768))
  2085  07EB  34E8               	retlw	low (STR_46| (0+32768))
  2086  07EC  3480               	retlw	high (STR_46| (0+32768))
  2087  07ED  3412               	retlw	low (STR_47| (0+32768))
  2088  07EE  3481               	retlw	high (STR_47| (0+32768))
  2089  07EF  34CC               	retlw	low (STR_48| (0+32768))
  2090  07F0  3480               	retlw	high (STR_48| (0+32768))
  2091  07F1  34D3               	retlw	low (STR_49| (0+32768))
  2092  07F2  3480               	retlw	high (STR_49| (0+32768))
  2093                           
  2094                           	psect	stringtext
  2095  005E                     __pstringtext:	
  2096  005E                     _DAC_DataTable:	
  2097  005E  3499               	retlw	153
  2098  005F  3401               	retlw	1
  2099  0060  34C2               	retlw	194
  2100  0061  3401               	retlw	1
  2101  0062  34EB               	retlw	235
  2102  0063  3401               	retlw	1
  2103  0064  3414               	retlw	20
  2104  0065  3402               	retlw	2
  2105  0066  343D               	retlw	61
  2106  0067  3402               	retlw	2
  2107  0068  3466               	retlw	102
  2108  0069  3402               	retlw	2
  2109  006A  348F               	retlw	143
  2110  006B  3402               	retlw	2
  2111  006C  34B8               	retlw	184
  2112  006D  3402               	retlw	2
  2113  006E  34E1               	retlw	225
  2114  006F  3402               	retlw	2
  2115  0070  340A               	retlw	10
  2116  0071  3403               	retlw	3
  2117  0072  3433               	retlw	51
  2118  0073  3403               	retlw	3
  2119  0074  345B               	retlw	91
  2120  0075  3403               	retlw	3
  2121  0076  3484               	retlw	132
  2122  0077  3403               	retlw	3
  2123  0078  34AD               	retlw	173
  2124  0079  3403               	retlw	3
  2125  007A  34D6               	retlw	214
  2126  007B  3403               	retlw	3
  2127  007C                     __end_of_DAC_DataTable:	
  2128  007C                     _dpowers:	
  2129  007C  3401               	retlw	1
  2130  007D  3400               	retlw	0
  2131  007E  340A               	retlw	10
  2132  007F  3400               	retlw	0
  2133  0080  3464               	retlw	100
  2134  0081  3400               	retlw	0
  2135  0082  34E8               	retlw	232
  2136  0083  3403               	retlw	3
  2137  0084  3410               	retlw	16
  2138  0085  3427               	retlw	39
  2139  0086                     __end_of_dpowers:	
  2140  0016                     _TMR1	set	22
  2141  000C                     _PORTA	set	12
  2142  001F                     _CPSCON1	set	31
  2143  001E                     _CPSCON0	set	30
  2144  0015                     _TMR0	set	21
  2145  0019                     _T1GCON	set	25
  2146  0018                     _T1CON	set	24
  2147  000D                     _PORTB	set	13
  2148  001B                     _PR2	set	27
  2149  001A                     _TMR2	set	26
  2150  001C                     _T2CON	set	28
  2151  00A1                     _BCL2IF	set	161
  2152  00A0                     _SSP2IF	set	160
  2153  009B                     _TMR6IF	set	155
  2154  0099                     _TMR4IF	set	153
  2155  0088                     _TMR1IF	set	136
  2156  00C0                     _TMR1ON	set	192
  2157  005F                     _GIE	set	95
  2158  005E                     _PEIE	set	94
  2159  0099                     _OSCCON	set	153
  2160  0095                     _OPTION_REG	set	149
  2161  008D                     _TRISB	set	141
  2162  008C                     _TRISA	set	140
  2163  04A1                     _BCL2IE	set	1185
  2164  04A0                     _SSP2IE	set	1184
  2165  049B                     _TMR6IE	set	1179
  2166  0499                     _TMR4IE	set	1177
  2167  0488                     _TMR1IE	set	1160
  2168  011E                     _APFCON1	set	286
  2169  011D                     _APFCON0	set	285
  2170  0866                     _LATA6	set	2150
  2171  0863                     _LATA3	set	2147
  2172  0864                     _LATA4	set	2148
  2173  018D                     _ANSELB	set	397
  2174  018C                     _ANSELA	set	396
  2175  021C                     _SSP2STATbits	set	540
  2176  0219                     _SSP2BUF	set	537
  2177  021E                     _SSP2CON2	set	542
  2178  021B                     _SSP2MSK	set	539
  2179  021E                     _SSP2CON2bits	set	542
  2180  021D                     _SSP2CON1bits	set	541
  2181  021A                     _SSP2ADD	set	538
  2182  021C                     _SSP2STAT	set	540
  2183  021D                     _SSP2CON1	set	541
  2184  020D                     _WPUB	set	525
  2185  0298                     _CCPR2L	set	664
  2186  029E                     _CCPTMRS	set	670
  2187  029A                     _CCP2CON	set	666
  2188  041E                     _T6CON	set	1054
  2189  041C                     _TMR6	set	1052
  2190  041D                     _PR6	set	1053
  2191  0417                     _T4CON	set	1047
  2192  0415                     _TMR4	set	1045
  2193  0416                     _PR4	set	1046
  2194  0086                     STR_2:	
  2195  0086  3453               	retlw	83	;'S'
  2196  0087  3445               	retlw	69	;'E'
  2197  0088  344C               	retlw	76	;'L'
  2198  0089  3445               	retlw	69	;'E'
  2199  008A  3443               	retlw	67	;'C'
  2200  008B  3454               	retlw	84	;'T'
  2201  008C  3446               	retlw	70	;'F'
  2202  008D  3455               	retlw	85	;'U'
  2203  008E  344E               	retlw	78	;'N'
  2204  008F  3443               	retlw	67	;'C'
  2205  0090  3400               	retlw	0
  2206  0091                     STR_4:	
  2207  0091  3450               	retlw	80	;'P'
  2208  0092  344D               	retlw	77	;'M'
  2209  0093  3454               	retlw	84	;'T'
  2210  0094  3444               	retlw	68	;'D'
  2211  0095  3445               	retlw	69	;'E'
  2212  0096  3456               	retlw	86	;'V'
  2213  0097  3449               	retlw	73	;'I'
  2214  0098  3443               	retlw	67	;'C'
  2215  0099  3445               	retlw	69	;'E'
  2216  009A  3400               	retlw	0
  2217  009B                     STR_1:	
  2218  009B  3425               	retlw	37	;'%'
  2219  009C  3435               	retlw	53	;'5'
  2220  009D  3475               	retlw	117	;'u'
  2221  009E  346C               	retlw	108	;'l'
  2222  009F  3420               	retlw	32	;' '
  2223  00A0  3425               	retlw	37	;'%'
  2224  00A1  3437               	retlw	55	;'7'
  2225  00A2  3475               	retlw	117	;'u'
  2226  00A3  346C               	retlw	108	;'l'
  2227  00A4  3400               	retlw	0
  2228  00A5                     STR_34:	
  2229  00A5  3432               	retlw	50	;'2'
  2230  00A6  3437               	retlw	55	;'7'
  2231  00A7  3437               	retlw	55	;'7'
  2232  00A8  3434               	retlw	52	;'4'
  2233  00A9  3435               	retlw	53	;'5'
  2234  00AA  3436               	retlw	54	;'6'
  2235  00AB  3432               	retlw	50	;'2'
  2236  00AC  3400               	retlw	0
  2237  00AD                     STR_33:	
  2238  00AD  3431               	retlw	49	;'1'
  2239  00AE  3439               	retlw	57	;'9'
  2240  00AF  3434               	retlw	52	;'4'
  2241  00B0  3430               	retlw	48	;'0'
  2242  00B1  3436               	retlw	54	;'6'
  2243  00B2  3437               	retlw	55	;'7'
  2244  00B3  3433               	retlw	51	;'3'
  2245  00B4  3400               	retlw	0
  2246  00B5                     STR_32:	
  2247  00B5  3431               	retlw	49	;'1'
  2248  00B6  3433               	retlw	51	;'3'
  2249  00B7  3433               	retlw	51	;'3'
  2250  00B8  3436               	retlw	54	;'6'
  2251  00B9  3430               	retlw	48	;'0'
  2252  00BA  3430               	retlw	48	;'0'
  2253  00BB  3436               	retlw	54	;'6'
  2254  00BC  3400               	retlw	0
  2255  00BD                     STR_3:	
  2256  00BD  3441               	retlw	65	;'A'
  2257  00BE  3444               	retlw	68	;'D'
  2258  00BF  344A               	retlw	74	;'J'
  2259  00C0  3447               	retlw	71	;'G'
  2260  00C1  3441               	retlw	65	;'A'
  2261  00C2  3449               	retlw	73	;'I'
  2262  00C3  344E               	retlw	78	;'N'
  2263  00C4  3400               	retlw	0
  2264  00C5                     STR_30:	
  2265  00C5  3436               	retlw	54	;'6'
  2266  00C6  3430               	retlw	48	;'0'
  2267  00C7  3430               	retlw	48	;'0'
  2268  00C8  3430               	retlw	48	;'0'
  2269  00C9  3430               	retlw	48	;'0'
  2270  00CA  3430               	retlw	48	;'0'
  2271  00CB  3400               	retlw	0
  2272  00CC                     STR_48:	
  2273  00CC  3437               	retlw	55	;'7'
  2274  00CD  3430               	retlw	48	;'0'
  2275  00CE  3430               	retlw	48	;'0'
  2276  00CF  3438               	retlw	56	;'8'
  2277  00D0  3439               	retlw	57	;'9'
  2278  00D1  3430               	retlw	48	;'0'
  2279  00D2  3400               	retlw	0
  2280  00D3                     STR_49:	
  2281  00D3  3439               	retlw	57	;'9'
  2282  00D4  3436               	retlw	54	;'6'
  2283  00D5  3438               	retlw	56	;'8'
  2284  00D6  3434               	retlw	52	;'4'
  2285  00D7  3437               	retlw	55	;'7'
  2286  00D8  3432               	retlw	50	;'2'
  2287  00D9  3400               	retlw	0
  2288  00DA                     STR_43:	
  2289  00DA  3431               	retlw	49	;'1'
  2290  00DB  3430               	retlw	48	;'0'
  2291  00DC  3438               	retlw	56	;'8'
  2292  00DD  3438               	retlw	56	;'8'
  2293  00DE  3434               	retlw	52	;'4'
  2294  00DF  3433               	retlw	51	;'3'
  2295  00E0  3400               	retlw	0
  2296  00E1                     STR_45:	
  2297  00E1  3432               	retlw	50	;'2'
  2298  00E2  3434               	retlw	52	;'4'
  2299  00E3  3432               	retlw	50	;'2'
  2300  00E4  3433               	retlw	51	;'3'
  2301  00E5  3436               	retlw	54	;'6'
  2302  00E6  3434               	retlw	52	;'4'
  2303  00E7  3400               	retlw	0
  2304  00E8                     STR_46:	
  2305  00E8  3433               	retlw	51	;'3'
  2306  00E9  3435               	retlw	53	;'5'
  2307  00EA  3431               	retlw	49	;'1'
  2308  00EB  3431               	retlw	49	;'1'
  2309  00EC  3432               	retlw	50	;'2'
  2310  00ED  3437               	retlw	55	;'7'
  2311  00EE  3400               	retlw	0
  2312  00EF                     STR_28:	
  2313  00EF  3432               	retlw	50	;'2'
  2314  00F0  3434               	retlw	52	;'4'
  2315  00F1  3437               	retlw	55	;'7'
  2316  00F2  3436               	retlw	54	;'6'
  2317  00F3  3434               	retlw	52	;'4'
  2318  00F4  3437               	retlw	55	;'7'
  2319  00F5  3400               	retlw	0
  2320  00F6                     STR_27:	
  2321  00F6  3431               	retlw	49	;'1'
  2322  00F7  3435               	retlw	53	;'5'
  2323  00F8  3433               	retlw	51	;'3'
  2324  00F9  3432               	retlw	50	;'2'
  2325  00FA  3432               	retlw	50	;'2'
  2326  00FB  3438               	retlw	56	;'8'
  2327  00FC  3400               	retlw	0
  2328  00FD                     STR_29:	
  2329  00FD  3433               	retlw	51	;'3'
  2330  00FE  3438               	retlw	56	;'8'
  2331  00FF  3439               	retlw	57	;'9'
  2332  0100  3439               	retlw	57	;'9'
  2333  0101  3438               	retlw	56	;'8'
  2334  0102  3438               	retlw	56	;'8'
  2335  0103  3400               	retlw	0
  2336  0104                     STR_44:	
  2337  0104  3431               	retlw	49	;'1'
  2338  0105  3436               	retlw	54	;'6'
  2339  0106  3434               	retlw	52	;'4'
  2340  0107  3431               	retlw	49	;'1'
  2341  0108  3433               	retlw	51	;'3'
  2342  0109  3439               	retlw	57	;'9'
  2343  010A  3400               	retlw	0
  2344  010B                     STR_31:	
  2345  010B  3439               	retlw	57	;'9'
  2346  010C  3430               	retlw	48	;'0'
  2347  010D  3433               	retlw	51	;'3'
  2348  010E  3438               	retlw	56	;'8'
  2349  010F  3439               	retlw	57	;'9'
  2350  0110  3439               	retlw	57	;'9'
  2351  0111  3400               	retlw	0
  2352  0112                     STR_47:	
  2353  0112  3434               	retlw	52	;'4'
  2354  0113  3439               	retlw	57	;'9'
  2355  0114  3439               	retlw	57	;'9'
  2356  0115  3439               	retlw	57	;'9'
  2357  0116  3439               	retlw	57	;'9'
  2358  0117  3439               	retlw	57	;'9'
  2359  0118  3400               	retlw	0
  2360  0119                     STR_24:	
  2361  0119  3433               	retlw	51	;'3'
  2362  011A  3430               	retlw	48	;'0'
  2363  011B  3430               	retlw	48	;'0'
  2364  011C  3430               	retlw	48	;'0'
  2365  011D  3430               	retlw	48	;'0'
  2366  011E  3400               	retlw	0
  2367  011F                     STR_42:	
  2368  011F  3437               	retlw	55	;'7'
  2369  0120  3430               	retlw	48	;'0'
  2370  0121  3435               	retlw	53	;'5'
  2371  0122  3430               	retlw	48	;'0'
  2372  0123  3430               	retlw	48	;'0'
  2373  0124  3400               	retlw	0
  2374  0125                     STR_25:	
  2375  0125  3435               	retlw	53	;'5'
  2376  0126  3433               	retlw	51	;'3'
  2377  0127  3435               	retlw	53	;'5'
  2378  0128  3435               	retlw	53	;'5'
  2379  0129  3433               	retlw	51	;'3'
  2380  012A  3400               	retlw	0
  2381  012B                     STR_39:	
  2382  012B  3431               	retlw	49	;'1'
  2383  012C  3436               	retlw	54	;'6'
  2384  012D  3431               	retlw	49	;'1'
  2385  012E  3432               	retlw	50	;'2'
  2386  012F  3435               	retlw	53	;'5'
  2387  0130  3400               	retlw	0
  2388  0131                     STR_40:	
  2389  0131  3432               	retlw	50	;'2'
  2390  0132  3437               	retlw	55	;'7'
  2391  0133  3432               	retlw	50	;'2'
  2392  0134  3433               	retlw	51	;'3'
  2393  0135  3438               	retlw	56	;'8'
  2394  0136  3400               	retlw	0
  2395  0137                     STR_41:	
  2396  0137  3434               	retlw	52	;'4'
  2397  0138  3434               	retlw	52	;'4'
  2398  0139  3434               	retlw	52	;'4'
  2399  013A  3437               	retlw	55	;'7'
  2400  013B  3438               	retlw	56	;'8'
  2401  013C  3400               	retlw	0
  2402  013D                     STR_26:	
  2403  013D  3439               	retlw	57	;'9'
  2404  013E  3432               	retlw	50	;'2'
  2405  013F  3430               	retlw	48	;'0'
  2406  0140  3438               	retlw	56	;'8'
  2407  0141  3438               	retlw	56	;'8'
  2408  0142  3400               	retlw	0
  2409  0143                     STR_23:	
  2410  0143  3431               	retlw	49	;'1'
  2411  0144  3436               	retlw	54	;'6'
  2412  0145  3430               	retlw	48	;'0'
  2413  0146  3439               	retlw	57	;'9'
  2414  0147  3439               	retlw	57	;'9'
  2415  0148  3400               	retlw	0
  2416  0149                     STR_16:	
  2417  0149  3431               	retlw	49	;'1'
  2418  014A  342E               	retlw	46	;'.'
  2419  014B  3430               	retlw	48	;'0'
  2420  014C  3435               	retlw	53	;'5'
  2421  014D  3456               	retlw	86	;'V'
  2422  014E  3400               	retlw	0
  2423  014F                     STR_18:	
  2424  014F  3431               	retlw	49	;'1'
  2425  0150  342E               	retlw	46	;'.'
  2426  0151  3431               	retlw	49	;'1'
  2427  0152  3435               	retlw	53	;'5'
  2428  0153  3456               	retlw	86	;'V'
  2429  0154  3400               	retlw	0
  2430  0155                     STR_6:	
  2431  0155  3430               	retlw	48	;'0'
  2432  0156  342E               	retlw	46	;'.'
  2433  0157  3435               	retlw	53	;'5'
  2434  0158  3435               	retlw	53	;'5'
  2435  0159  3456               	retlw	86	;'V'
  2436  015A  3400               	retlw	0
  2437  015B                     STR_8:	
  2438  015B  3430               	retlw	48	;'0'
  2439  015C  342E               	retlw	46	;'.'
  2440  015D  3436               	retlw	54	;'6'
  2441  015E  3435               	retlw	53	;'5'
  2442  015F  3456               	retlw	86	;'V'
  2443  0160  3400               	retlw	0
  2444  0161                     STR_10:	
  2445  0161  3430               	retlw	48	;'0'
  2446  0162  342E               	retlw	46	;'.'
  2447  0163  3437               	retlw	55	;'7'
  2448  0164  3435               	retlw	53	;'5'
  2449  0165  3456               	retlw	86	;'V'
  2450  0166  3400               	retlw	0
  2451  0167                     STR_12:	
  2452  0167  3430               	retlw	48	;'0'
  2453  0168  342E               	retlw	46	;'.'
  2454  0169  3438               	retlw	56	;'8'
  2455  016A  3435               	retlw	53	;'5'
  2456  016B  3456               	retlw	86	;'V'
  2457  016C  3400               	retlw	0
  2458  016D                     STR_14:	
  2459  016D  3430               	retlw	48	;'0'
  2460  016E  342E               	retlw	46	;'.'
  2461  016F  3439               	retlw	57	;'9'
  2462  0170  3435               	retlw	53	;'5'
  2463  0171  3456               	retlw	86	;'V'
  2464  0172  3400               	retlw	0
  2465  0173                     STR_35:	
  2466  0173  3431               	retlw	49	;'1'
  2467  0174  3432               	retlw	50	;'2'
  2468  0175  3435               	retlw	53	;'5'
  2469  0176  3430               	retlw	48	;'0'
  2470  0177  3400               	retlw	0
  2471  0178                     STR_36:	
  2472  0178  3432               	retlw	50	;'2'
  2473  0179  3435               	retlw	53	;'5'
  2474  017A  3438               	retlw	56	;'8'
  2475  017B  3430               	retlw	48	;'0'
  2476  017C  3400               	retlw	0
  2477  017D                     STR_38:	
  2478  017D  3439               	retlw	57	;'9'
  2479  017E  3431               	retlw	49	;'1'
  2480  017F  3438               	retlw	56	;'8'
  2481  0180  3432               	retlw	50	;'2'
  2482  0181  3400               	retlw	0
  2483  0182                     STR_21:	
  2484  0182  3433               	retlw	51	;'3'
  2485  0183  3439               	retlw	57	;'9'
  2486  0184  3435               	retlw	53	;'5'
  2487  0185  3437               	retlw	55	;'7'
  2488  0186  3400               	retlw	0
  2489  0187                     STR_20:	
  2490  0187  3431               	retlw	49	;'1'
  2491  0188  3437               	retlw	55	;'7'
  2492  0189  3437               	retlw	55	;'7'
  2493  018A  3437               	retlw	55	;'7'
  2494  018B  3400               	retlw	0
  2495  018C                     STR_37:	
  2496  018C  3434               	retlw	52	;'4'
  2497  018D  3439               	retlw	57	;'9'
  2498  018E  3439               	retlw	57	;'9'
  2499  018F  3438               	retlw	56	;'8'
  2500  0190  3400               	retlw	0
  2501  0191                     STR_22:	
  2502  0191  3438               	retlw	56	;'8'
  2503  0192  3432               	retlw	50	;'2'
  2504  0193  3431               	retlw	49	;'1'
  2505  0194  3439               	retlw	57	;'9'
  2506  0195  3400               	retlw	0
  2507  0196                     STR_15:	
  2508  0196  3431               	retlw	49	;'1'
  2509  0197  342E               	retlw	46	;'.'
  2510  0198  3430               	retlw	48	;'0'
  2511  0199  3456               	retlw	86	;'V'
  2512  019A  3400               	retlw	0
  2513  019B                     STR_17:	
  2514  019B  3431               	retlw	49	;'1'
  2515  019C  342E               	retlw	46	;'.'
  2516  019D  3431               	retlw	49	;'1'
  2517  019E  3456               	retlw	86	;'V'
  2518  019F  3400               	retlw	0
  2519  01A0                     STR_19:	
  2520  01A0  3431               	retlw	49	;'1'
  2521  01A1  342E               	retlw	46	;'.'
  2522  01A2  3432               	retlw	50	;'2'
  2523  01A3  3456               	retlw	86	;'V'
  2524  01A4  3400               	retlw	0
  2525  01A5                     STR_5:	
  2526  01A5  3430               	retlw	48	;'0'
  2527  01A6  342E               	retlw	46	;'.'
  2528  01A7  3435               	retlw	53	;'5'
  2529  01A8  3456               	retlw	86	;'V'
  2530  01A9  3400               	retlw	0
  2531  01AA                     STR_7:	
  2532  01AA  3430               	retlw	48	;'0'
  2533  01AB  342E               	retlw	46	;'.'
  2534  01AC  3436               	retlw	54	;'6'
  2535  01AD  3456               	retlw	86	;'V'
  2536  01AE  3400               	retlw	0
  2537  01AF                     STR_9:	
  2538  01AF  3430               	retlw	48	;'0'
  2539  01B0  342E               	retlw	46	;'.'
  2540  01B1  3437               	retlw	55	;'7'
  2541  01B2  3456               	retlw	86	;'V'
  2542  01B3  3400               	retlw	0
  2543  01B4                     STR_11:	
  2544  01B4  3430               	retlw	48	;'0'
  2545  01B5  342E               	retlw	46	;'.'
  2546  01B6  3438               	retlw	56	;'8'
  2547  01B7  3456               	retlw	86	;'V'
  2548  01B8  3400               	retlw	0
  2549  01B9                     STR_13:	
  2550  01B9  3430               	retlw	48	;'0'
  2551  01BA  342E               	retlw	46	;'.'
  2552  01BB  3439               	retlw	57	;'9'
  2553  01BC  3456               	retlw	86	;'V'
  2554  01BD  3400               	retlw	0
  2555                           
  2556                           ; #config settings
  2557  0000                     
  2558                           	psect	cinit
  2559  0033                     start_initialization:	
  2560  0033                     __initialization:	
  2561                           
  2562                           ; Initialize objects allocated to BANK1
  2563  0033  3052               	movlw	low __pidataBANK1
  2564  0034  0084               	movwf	4
  2565  0035  3086               	movlw	(high __pidataBANK1)| (0+128)
  2566  0036  0085               	movwf	5
  2567  0037  30A0               	movlw	low __pdataBANK1
  2568  0038  0086               	movwf	6
  2569  0039  3000               	movlw	high __pdataBANK1
  2570  003A  0087               	movwf	7
  2571  003B  303C               	movlw	60
  2572  003C  318E  26A9  3180   	fcall	init_ram
  2573                           
  2574                           ; Initialize objects allocated to BANK2
  2575  003F  30D5               	movlw	low __pidataBANK2
  2576  0040  0084               	movwf	4
  2577  0041  3087               	movlw	(high __pidataBANK2)| (0+128)
  2578  0042  0085               	movwf	5
  2579  0043  3020               	movlw	low __pdataBANK2
  2580  0044  0086               	movwf	6
  2581  0045  3001               	movlw	high __pdataBANK2
  2582  0046  0087               	movwf	7
  2583  0047  301E               	movlw	30
  2584  0048  318E  26A9  3180   	fcall	init_ram
  2585                           
  2586                           ; Clear objects allocated to BANK0
  2587  004B  3020               	movlw	low __pbssBANK0
  2588  004C  0084               	movwf	4
  2589  004D  3000               	movlw	high __pbssBANK0
  2590  004E  0085               	movwf	5
  2591  004F  3027               	movlw	39
  2592  0050  318E  26A3  3180   	fcall	clear_ram0
  2593                           
  2594                           ; Clear objects allocated to BANK1
  2595  0053  30DC               	movlw	low __pbssBANK1
  2596  0054  0084               	movwf	4
  2597  0055  3000               	movlw	high __pbssBANK1
  2598  0056  0085               	movwf	5
  2599  0057  3013               	movlw	19
  2600  0058  318E  26A3         	fcall	clear_ram0
  2601  005A                     end_of_initialization:	
  2602                           ;End of C runtime variable initialization code
  2603                           
  2604  005A                     __end_of__initialization:	
  2605  005A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2606  005B  0020               	movlb	0
  2607  005C  3183  2B6C         	ljmp	_main	;jump to C main() function
  2608                           
  2609                           	psect	bssBANK0
  2610  0020                     __pbssBANK0:	
  2611  0020                     _cnts:	
  2612  0020                     	ds	14
  2613  002E                     _tcnt:	
  2614  002E                     	ds	6
  2615  0034                     _mTouch_Interval:	
  2616  0034                     	ds	3
  2617  0037                     _CPS_Data:	
  2618  0037                     	ds	3
  2619  003A                     _CPS_PreData:	
  2620  003A                     	ds	3
  2621  003D                     _mode:	
  2622  003D                     	ds	2
  2623  003F                     Timer1_DetectAssignCount@PreviousTimer1:	
  2624  003F                     	ds	2
  2625  0041                     _count:	
  2626  0041                     	ds	2
  2627  0043                     mTouch_Read@channel:	
  2628  0043                     	ds	1
  2629  0044                     _VoltageReg:	
  2630  0044                     	ds	2
  2631  0046                     _ConfigReg:	
  2632  0046                     	ds	1
  2633                           
  2634                           	psect	bssBANK1
  2635  00DC                     __pbssBANK1:	
  2636  00DC                     _I2C2_Config:	
  2637  00DC                     	ds	19
  2638                           
  2639                           	psect	dataBANK1
  2640  00A0                     __pdataBANK1:	
  2641  00A0                     _H7826_Gain:	
  2642  00A0                     	ds	30
  2643  00BE                     _DAC_VoltageTable:	
  2644  00BE                     	ds	30
  2645                           
  2646                           	psect	dataBANK2
  2647  0120                     __pdataBANK2:	
  2648  0120                     _H7826_01_Gain:	
  2649  0120                     	ds	30
  2650                           
  2651                           	psect	inittext
  2652  0EA9                     init_ram:	
  2653  0EA9  00FE               	movwf	126
  2654  0EAA                     initloop:	
  2655  0EAA  0012               	moviw fsr0++
  2656  0EAB  001E               	movwi fsr1++
  2657  0EAC  0BFE               	decfsz	126,f
  2658  0EAD  2EAA               	goto	initloop
  2659  0EAE  3400               	retlw	0
  2660                           
  2661                           	psect	clrtext
  2662  0EA3                     clear_ram0:	
  2663                           ;	Called with FSR0 containing the base address, and
  2664                           ;	WREG with the size to clear
  2665                           
  2666  0EA3  0064               	clrwdt	;clear the watchdog before getting into this loop
  2667  0EA4                     clrloop0:	
  2668  0EA4  0180               	clrf	0	;clear RAM location pointed to by FSR
  2669  0EA5  3101               	addfsr 0,1
  2670  0EA6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2671  0EA7  2EA4               	goto	clrloop0	;have we reached the end yet?
  2672  0EA8  3400               	retlw	0	;all done for this memory range, return
  2673                           
  2674                           	psect	cstackCOMMON
  2675  0070                     __pcstackCOMMON:	
  2676  0070                     ?_isdigit:	
  2677  0070                     ?_I2C2_Interrupt:	
  2678                           ; 1 bit 
  2679                           
  2680  0070                     ??_I2C2_Interrupt:	
  2681                           ; 1 bytes @ 0x0
  2682                           
  2683  0070                     ?_LCD_DisplayClear:	
  2684                           ; 1 bytes @ 0x0
  2685                           
  2686  0070                     ?_Timer1_ClearRecord:	
  2687                           ; 1 bytes @ 0x0
  2688                           
  2689  0070                     ?_Basic_Init:	
  2690                           ; 1 bytes @ 0x0
  2691                           
  2692  0070                     ?_mTouch_Check:	
  2693                           ; 1 bytes @ 0x0
  2694                           
  2695  0070                     ?_mTouch_IntervalDecrement:	
  2696                           ; 1 bytes @ 0x0
  2697                           
  2698  0070                     ??_mTouch_IntervalDecrement:	
  2699                           ; 1 bytes @ 0x0
  2700                           
  2701  0070                     ?_Buzzer_Init:	
  2702                           ; 1 bytes @ 0x0
  2703                           
  2704  0070                     ?_Buzzer_SetDuty:	
  2705                           ; 1 bytes @ 0x0
  2706                           
  2707  0070                     ?_Buzzer_Count1ms:	
  2708                           ; 1 bytes @ 0x0
  2709                           
  2710  0070                     ?_I2C_CommonInterrupt:	
  2711                           ; 1 bytes @ 0x0
  2712                           
  2713  0070                     ?_LCD_WriteData:	
  2714                           ; 1 bytes @ 0x0
  2715                           
  2716  0070                     ?_LCD_Init:	
  2717                           ; 1 bytes @ 0x0
  2718                           
  2719  0070                     ?_putch:	
  2720                           ; 1 bytes @ 0x0
  2721                           
  2722  0070                     ?_LCD_CursorHome:	
  2723                           ; 1 bytes @ 0x0
  2724                           
  2725  0070                     ?_DAC_Initialize:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728  0070                     ?_Timer1_Init:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  0070                     ?_Timer1_StartCount:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  0070                     ?_Timer1_Count200us:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737  0070                     ??_Timer1_Count200us:	
  2738                           ; 1 bytes @ 0x0
  2739                           
  2740  0070                     ?_Timer1_DetectAssignCount:	
  2741                           ; 1 bytes @ 0x0
  2742                           
  2743  0070                     ?_Timer4_Init:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746  0070                     ?_Timer4_CheckFlag:	
  2747                           ; 1 bytes @ 0x0
  2748                           
  2749  0070                     ??_Timer4_CheckFlag:	
  2750                           ; 1 bytes @ 0x0
  2751                           
  2752  0070                     ?_Timer6_Init:	
  2753                           ; 1 bytes @ 0x0
  2754                           
  2755  0070                     ?_Timer6_CheckFlag:	
  2756                           ; 1 bytes @ 0x0
  2757                           
  2758  0070                     ??_Timer6_CheckFlag:	
  2759                           ; 1 bytes @ 0x0
  2760                           
  2761  0070                     ?_mTouch_PortInit:	
  2762                           ; 1 bytes @ 0x0
  2763                           
  2764  0070                     ?_mTouch_Init:	
  2765                           ; 1 bytes @ 0x0
  2766                           
  2767  0070                     ?_mTouch_Read:	
  2768                           ; 1 bytes @ 0x0
  2769                           
  2770  0070                     ??_mTouch_Read:	
  2771                           ; 1 bytes @ 0x0
  2772                           
  2773  0070                     ?_main:	
  2774                           ; 1 bytes @ 0x0
  2775                           
  2776  0070                     ?_Handler:	
  2777                           ; 1 bytes @ 0x0
  2778                           
  2779  0070                     ?_I2C2_PinInit:	
  2780                           ; 1 bytes @ 0x0
  2781                           
  2782  0070                     ?___lldiv:	
  2783                           ; 1 bytes @ 0x0
  2784                           
  2785  0070                     Buzzer_SetDuty@duty:	
  2786                           ; 4 bytes @ 0x0
  2787                           
  2788  0070                     ___lldiv@divisor:	
  2789                           ; 2 bytes @ 0x0
  2790                           
  2791                           
  2792                           ; 4 bytes @ 0x0
  2793  0070                     	ds	1
  2794  0071                     ??_I2C_CommonInterrupt:	
  2795                           
  2796                           ; 1 bytes @ 0x1
  2797  0071                     	ds	1
  2798  0072                     ??_Buzzer_SetDuty:	
  2799                           
  2800                           ; 1 bytes @ 0x2
  2801  0072                     	ds	2
  2802  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
  2803  0074                     ___lldiv@dividend:	
  2804                           ; 1 bytes @ 0x4
  2805                           
  2806                           
  2807                           ; 4 bytes @ 0x4
  2808  0074                     	ds	1
  2809  0075                     ??_Buzzer_Count1ms:	
  2810                           
  2811                           ; 1 bytes @ 0x5
  2812  0075                     	ds	3
  2813  0078                     ??___lldiv:	
  2814                           
  2815                           ; 1 bytes @ 0x8
  2816  0078                     	ds	1
  2817  0079                     ___lldiv@quotient:	
  2818                           
  2819                           ; 4 bytes @ 0x9
  2820  0079                     	ds	4
  2821  007D                     ___lldiv@counter:	
  2822                           
  2823                           ; 1 bytes @ 0xD
  2824  007D                     	ds	1
  2825  007E                     ??_Timer1_DetectAssignCount:	
  2826                           
  2827                           	psect	cstackBANK0
  2828  0047                     __pcstackBANK0:	
  2829                           ; 1 bytes @ 0xE
  2830                           
  2831  0047                     ??_Handler:	
  2832                           
  2833                           ; 1 bytes @ 0x0
  2834  0047                     	ds	1
  2835  0048                     ?_I2C2_Transmit:	
  2836  0048                     ??_Timer1_ClearRecord:	
  2837                           ; 1 bytes @ 0x1
  2838                           
  2839  0048                     ??_Basic_Init:	
  2840                           ; 1 bytes @ 0x1
  2841                           
  2842  0048                     ??_isdigit:	
  2843                           ; 1 bytes @ 0x1
  2844                           
  2845  0048                     ??_Buzzer_Init:	
  2846                           ; 1 bytes @ 0x1
  2847                           
  2848  0048                     ?_Buzzer_MiliSecond:	
  2849                           ; 1 bytes @ 0x1
  2850                           
  2851  0048                     ??_LCD_WriteData:	
  2852                           ; 1 bytes @ 0x1
  2853                           
  2854  0048                     ??_Timer1_Init:	
  2855                           ; 1 bytes @ 0x1
  2856                           
  2857  0048                     ??_Timer1_StartCount:	
  2858                           ; 1 bytes @ 0x1
  2859                           
  2860  0048                     ??_Timer4_Init:	
  2861                           ; 1 bytes @ 0x1
  2862                           
  2863  0048                     ??_Timer6_Init:	
  2864                           ; 1 bytes @ 0x1
  2865                           
  2866  0048                     ??_mTouch_PortInit:	
  2867                           ; 1 bytes @ 0x1
  2868                           
  2869  0048                     ??_I2C2_PinInit:	
  2870                           ; 1 bytes @ 0x1
  2871                           
  2872  0048                     ?_Timer1_GetCPM:	
  2873                           ; 1 bytes @ 0x1
  2874                           
  2875  0048                     ?___wmul:	
  2876                           ; 2 bytes @ 0x1
  2877                           
  2878  0048                     ?___lwdiv:	
  2879                           ; 2 bytes @ 0x1
  2880                           
  2881  0048                     ?_Timer1_GetCountSum:	
  2882                           ; 2 bytes @ 0x1
  2883                           
  2884  0048                     I2C2_Transmit@pData:	
  2885                           ; 4 bytes @ 0x1
  2886                           
  2887  0048                     _isdigit$803:	
  2888                           ; 1 bytes @ 0x1
  2889                           
  2890  0048                     Buzzer_MiliSecond@time:	
  2891                           ; 1 bytes @ 0x1
  2892                           
  2893  0048                     ___wmul@multiplier:	
  2894                           ; 2 bytes @ 0x1
  2895                           
  2896  0048                     ___lwdiv@divisor:	
  2897                           ; 2 bytes @ 0x1
  2898                           
  2899                           
  2900                           ; 2 bytes @ 0x1
  2901  0048                     	ds	1
  2902  0049                     ?_I2C2_Setting:	
  2903  0049                     ??_mTouch_Init:	
  2904                           ; 1 bytes @ 0x2
  2905                           
  2906  0049                     I2C2_Setting@mode:	
  2907                           ; 1 bytes @ 0x2
  2908                           
  2909  0049                     I2C2_Transmit@size:	
  2910                           ; 1 bytes @ 0x2
  2911                           
  2912  0049                     isdigit@c:	
  2913                           ; 1 bytes @ 0x2
  2914                           
  2915                           
  2916                           ; 1 bytes @ 0x2
  2917  0049                     	ds	1
  2918  004A                     ??_I2C2_Transmit:	
  2919  004A                     ??_mTouch_Check:	
  2920                           ; 1 bytes @ 0x3
  2921                           
  2922  004A                     ??_Buzzer_MiliSecond:	
  2923                           ; 1 bytes @ 0x3
  2924                           
  2925  004A                     ??_Timer1_GetCPM:	
  2926                           ; 1 bytes @ 0x3
  2927                           
  2928  004A                     LCD_WriteData@point:	
  2929                           ; 1 bytes @ 0x3
  2930                           
  2931  004A                     I2C2_Setting@Speed:	
  2932                           ; 1 bytes @ 0x3
  2933                           
  2934  004A                     ___wmul@multiplicand:	
  2935                           ; 1 bytes @ 0x3
  2936                           
  2937  004A                     ___lwdiv@dividend:	
  2938                           ; 2 bytes @ 0x3
  2939                           
  2940                           
  2941                           ; 2 bytes @ 0x3
  2942  004A                     	ds	1
  2943  004B                     ??_I2C2_Setting:	
  2944  004B                     ??_LCD_DisplayClear:	
  2945                           ; 1 bytes @ 0x4
  2946                           
  2947  004B                     ??_putch:	
  2948                           ; 1 bytes @ 0x4
  2949                           
  2950  004B                     ??_LCD_CursorHome:	
  2951                           ; 1 bytes @ 0x4
  2952                           
  2953  004B                     putch@c:	
  2954                           ; 1 bytes @ 0x4
  2955                           
  2956                           
  2957                           ; 1 bytes @ 0x4
  2958  004B                     	ds	1
  2959  004C                     ??_LCD_Init:	
  2960  004C                     ??_Timer1_GetCountSum:	
  2961                           ; 1 bytes @ 0x5
  2962                           
  2963  004C                     ??___wmul:	
  2964                           ; 1 bytes @ 0x5
  2965                           
  2966  004C                     ??___lwdiv:	
  2967                           ; 1 bytes @ 0x5
  2968                           
  2969  004C                     I2C2_Setting@address:	
  2970                           ; 1 bytes @ 0x5
  2971                           
  2972  004C                     I2C2_Transmit@address:	
  2973                           ; 1 bytes @ 0x5
  2974                           
  2975  004C                     ___wmul@product:	
  2976                           ; 1 bytes @ 0x5
  2977                           
  2978                           
  2979                           ; 2 bytes @ 0x5
  2980  004C                     	ds	1
  2981  004D                     ?_I2C_Init:	
  2982  004D                     I2C_Init@address:	
  2983                           ; 1 bytes @ 0x6
  2984                           
  2985  004D                     I2C2_Transmit@i:	
  2986                           ; 1 bytes @ 0x6
  2987                           
  2988  004D                     ___lwdiv@quotient:	
  2989                           ; 1 bytes @ 0x6
  2990                           
  2991                           
  2992                           ; 2 bytes @ 0x6
  2993  004D                     	ds	1
  2994  004E                     I2C_Init@mode:	
  2995  004E                     I2C2_Transmit@i_558:	
  2996                           ; 1 bytes @ 0x7
  2997                           
  2998                           
  2999                           ; 1 bytes @ 0x7
  3000  004E                     	ds	1
  3001  004F                     I2C_Init@Speed:	
  3002  004F                     mTouch_Check@chan:	
  3003                           ; 1 bytes @ 0x8
  3004                           
  3005  004F                     I2C2_Transmit@result:	
  3006                           ; 1 bytes @ 0x8
  3007                           
  3008  004F                     ___lwdiv@counter:	
  3009                           ; 1 bytes @ 0x8
  3010                           
  3011                           
  3012                           ; 1 bytes @ 0x8
  3013  004F                     	ds	1
  3014  0050                     ??_I2C_Init:	
  3015  0050                     ?_I2C_Transmit:	
  3016                           ; 1 bytes @ 0x9
  3017                           
  3018  0050                     ?___lwmod:	
  3019                           ; 1 bytes @ 0x9
  3020                           
  3021  0050                     I2C_Transmit@address:	
  3022                           ; 2 bytes @ 0x9
  3023                           
  3024  0050                     ___lwmod@divisor:	
  3025                           ; 1 bytes @ 0x9
  3026                           
  3027                           
  3028                           ; 2 bytes @ 0x9
  3029  0050                     	ds	1
  3030  0051                     I2C_Transmit@pData:	
  3031                           
  3032                           ; 1 bytes @ 0xA
  3033  0051                     	ds	1
  3034  0052                     I2C_Init@I2Cx:	
  3035  0052                     I2C_Transmit@size:	
  3036                           ; 1 bytes @ 0xB
  3037                           
  3038  0052                     ___lwmod@dividend:	
  3039                           ; 1 bytes @ 0xB
  3040                           
  3041                           
  3042                           ; 2 bytes @ 0xB
  3043  0052                     	ds	1
  3044  0053                     ??_I2C_Transmit:	
  3045                           
  3046                           ; 1 bytes @ 0xC
  3047  0053                     	ds	1
  3048  0054                     ??___lwmod:	
  3049                           
  3050                           ; 1 bytes @ 0xD
  3051  0054                     	ds	1
  3052  0055                     ___lwmod@counter:	
  3053                           
  3054                           ; 1 bytes @ 0xE
  3055  0055                     	ds	1
  3056  0056                     ?_printf:	
  3057  0056                     I2C_Transmit@I2Cx:	
  3058                           ; 2 bytes @ 0xF
  3059                           
  3060  0056                     printf@f:	
  3061                           ; 1 bytes @ 0xF
  3062                           
  3063                           
  3064                           ; 2 bytes @ 0xF
  3065  0056                     	ds	1
  3066  0057                     I2C_Transmit@result:	
  3067                           
  3068                           ; 1 bytes @ 0x10
  3069  0057                     	ds	1
  3070  0058                     ??_DAC_Initialize:	
  3071  0058                     ?_DAC_WriteVoltage:	
  3072                           ; 1 bytes @ 0x11
  3073                           
  3074  0058                     DAC_WriteVoltage@volue:	
  3075                           ; 1 bytes @ 0x11
  3076                           
  3077                           
  3078                           ; 2 bytes @ 0x11
  3079  0058                     	ds	2
  3080  005A                     ??_DAC_WriteVoltage:	
  3081                           
  3082                           ; 1 bytes @ 0x13
  3083  005A                     	ds	4
  3084  005E                     ??_printf:	
  3085                           
  3086                           ; 1 bytes @ 0x17
  3087  005E                     	ds	4
  3088  0062                     printf@flag:	
  3089                           
  3090                           ; 1 bytes @ 0x1B
  3091  0062                     	ds	1
  3092  0063                     printf@ap:	
  3093                           
  3094                           ; 1 bytes @ 0x1C
  3095  0063                     	ds	1
  3096  0064                     printf@val:	
  3097                           
  3098                           ; 2 bytes @ 0x1D
  3099  0064                     	ds	2
  3100  0066                     printf@prec:	
  3101                           
  3102                           ; 1 bytes @ 0x1F
  3103  0066                     	ds	1
  3104  0067                     printf@width:	
  3105                           
  3106                           ; 2 bytes @ 0x20
  3107  0067                     	ds	2
  3108  0069                     printf@c:	
  3109                           
  3110                           ; 1 bytes @ 0x22
  3111  0069                     	ds	1
  3112  006A                     ??_main:	
  3113                           
  3114                           ; 1 bytes @ 0x23
  3115  006A                     	ds	1
  3116                           
  3117                           	psect	maintext
  3118  036C                     __pmaintext:	
  3119 ;;
  3120 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3121 ;;
  3122 ;; *************** function _main *****************
  3123 ;; Defined at:
  3124 ;;		line 23 in file "main.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      char 
  3131 ;; Registers used:
  3132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : B1F/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3138 ;;      Params:         0       0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0
  3140 ;;      Temps:          0       1       0       0       0       0
  3141 ;;      Totals:         0       1       0       0       0       0
  3142 ;;Total ram usage:        1 bytes
  3143 ;; Hardware stack levels required when called:    7
  3144 ;; This function calls:
  3145 ;;		_Basic_Init
  3146 ;;		_Buzzer_Init
  3147 ;;		_DAC_Initialize
  3148 ;;		_DAC_WriteVoltage
  3149 ;;		_LCD_CursorHome
  3150 ;;		_LCD_Init
  3151 ;;		_Timer1_GetCPM
  3152 ;;		_Timer1_GetCountSum
  3153 ;;		_Timer1_Init
  3154 ;;		_Timer1_StartCount
  3155 ;;		_Timer4_Init
  3156 ;;		_Timer6_Init
  3157 ;;		_mTouch_Check
  3158 ;;		_mTouch_Init
  3159 ;;		_printf
  3160 ;; This function is called by:
  3161 ;;		Startup code after reset
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function _main
  3167  036C                     _main:	
  3168                           
  3169                           ;main.c: 25: Basic_Init();
  3170                           
  3171                           ;incstack = 0
  3172                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3173  036C  318F  2747  3183   	fcall	_Basic_Init
  3174                           
  3175                           ;main.c: 26: LATA6 = 1;
  3176  036F  0022               	movlb	2	; select bank2
  3177  0370  170C               	bsf	12,6	;volatile
  3178                           
  3179                           ;main.c: 27: Buzzer_Init();
  3180  0371  3187  2747  3183   	fcall	_Buzzer_Init
  3181                           
  3182                           ;main.c: 28: LCD_Init();
  3183  0374  3184  2478  3183   	fcall	_LCD_Init
  3184                           
  3185                           ;main.c: 29: Timer1_Init();
  3186  0377  3187  2794  3183   	fcall	_Timer1_Init
  3187                           
  3188                           ;main.c: 30: mTouch_Init();
  3189  037A  318F  276B  3183   	fcall	_mTouch_Init
  3190                           
  3191                           ;main.c: 31: Timer4_Init();
  3192  037D  318E  26F9  3183   	fcall	_Timer4_Init
  3193                           
  3194                           ;main.c: 32: Timer6_Init();
  3195  0380  318F  2758  3183   	fcall	_Timer6_Init
  3196                           
  3197                           ;main.c: 33: DAC_Initialize();
  3198  0383  3187  27B5  3183   	fcall	_DAC_Initialize
  3199                           
  3200                           ;main.c: 35: Timer1_StartCount();
  3201  0386  318E  2698  3183   	fcall	_Timer1_StartCount
  3202                           
  3203                           ;main.c: 37: mode.ModeNum = 0;
  3204  0389  0020               	movlb	0	; select bank0
  3205  038A  01BE               	clrf	_mode+1
  3206                           
  3207                           ;main.c: 39: DAC_WriteVoltage(DAC_DataTable[6]);
  3208  038B  306A               	movlw	low ((_DAC_DataTable+12)| (0+32768))
  3209  038C  0084               	movwf	4
  3210  038D  3080               	movlw	high ((_DAC_DataTable+12)| (0+32768))
  3211  038E  0085               	movwf	5
  3212  038F  3F00               	moviw [0]fsr0
  3213  0390  00D8               	movwf	DAC_WriteVoltage@volue
  3214  0391  3F01               	moviw [1]fsr0
  3215  0392  00D9               	movwf	DAC_WriteVoltage@volue+1
  3216  0393  3186  26C3  3183   	fcall	_DAC_WriteVoltage
  3217  0396                     l2712:	
  3218                           ;main.c: 41: while(1)
  3219                           
  3220                           
  3221                           ;main.c: 42: {
  3222                           ;main.c: 43: if(mTouch_Check(2)&&(mode.ModeNum<4-1))
  3223  0396  3002               	movlw	2
  3224  0397  3185  258D  3183   	fcall	_mTouch_Check
  3225  039A  3A00               	xorlw	0
  3226  039B  1903               	skipnz
  3227  039C  2BA7               	goto	l2718
  3228  039D  3003               	movlw	3
  3229  039E  0020               	movlb	0	; select bank0
  3230  039F  023E               	subwf	_mode+1,w
  3231  03A0  1803               	skipnc
  3232  03A1  2BA7               	goto	l2718
  3233                           
  3234                           ;main.c: 44: mode.ModeNum++;
  3235  03A2  3001               	movlw	1
  3236  03A3  00EA               	movwf	??_main
  3237  03A4  086A               	movf	??_main,w
  3238  03A5  07BE               	addwf	_mode+1,f
  3239  03A6  2BB4               	goto	l2724
  3240  03A7                     l2718:	
  3241                           
  3242                           ;main.c: 45: else if(mTouch_Check(1)&&(mode.ModeNum>0))
  3243  03A7  3001               	movlw	1
  3244  03A8  3185  258D  3183   	fcall	_mTouch_Check
  3245  03AB  3A00               	xorlw	0
  3246  03AC  1903               	skipnz
  3247  03AD  2BB4               	goto	l2724
  3248  03AE  0020               	movlb	0	; select bank0
  3249  03AF  083E               	movf	_mode+1,w
  3250  03B0  1903               	btfsc	3,2
  3251  03B1  2BB4               	goto	l2724
  3252                           
  3253                           ;main.c: 46: mode.ModeNum--;
  3254  03B2  3001               	movlw	1
  3255  03B3  02BE               	subwf	_mode+1,f
  3256  03B4                     l2724:	
  3257                           
  3258                           ;main.c: 48: LCD_CursorHome();
  3259  03B4  318F  2716  3183   	fcall	_LCD_CursorHome
  3260                           
  3261                           ;main.c: 49: switch(mode.ModeNum)
  3262  03B7  2BF0               	goto	l2736
  3263  03B8                     l2726:	
  3264                           ;main.c: 50: {
  3265                           ;main.c: 51: case COUNT:
  3266                           
  3267                           
  3268                           ;main.c: 52: printf("%5ul %7ul", Timer1_GetCPM(),Timer1_GetCountSum());
  3269  03B8  309B               	movlw	low (STR_1| (0+32768))
  3270  03B9  0020               	movlb	0	; select bank0
  3271  03BA  00D6               	movwf	printf@f
  3272  03BB  3080               	movlw	high (STR_1| (0+32768))
  3273  03BC  00D7               	movwf	printf@f+1
  3274  03BD  318E  269D  3183   	fcall	_Timer1_GetCPM
  3275  03C0  0020               	movlb	0	; select bank0
  3276  03C1  0849               	movf	?_Timer1_GetCPM+1,w
  3277  03C2  00D9               	movwf	?_printf+3
  3278  03C3  0848               	movf	?_Timer1_GetCPM,w
  3279  03C4  00D8               	movwf	?_printf+2
  3280  03C5  318E  26C2  3183   	fcall	_Timer1_GetCountSum
  3281  03C8  0020               	movlb	0	; select bank0
  3282  03C9  084B               	movf	?_Timer1_GetCountSum+3,w
  3283  03CA  00DD               	movwf	?_printf+7
  3284  03CB  084A               	movf	?_Timer1_GetCountSum+2,w
  3285  03CC  00DC               	movwf	?_printf+6
  3286  03CD  0849               	movf	?_Timer1_GetCountSum+1,w
  3287  03CE  00DB               	movwf	?_printf+5
  3288  03CF  0848               	movf	?_Timer1_GetCountSum,w
  3289  03D0  00DA               	movwf	?_printf+4
  3290  03D1  3181  21BE  3183   	fcall	_printf
  3291                           
  3292                           ;main.c: 53: break;
  3293  03D4  2B96               	goto	l2712
  3294  03D5                     l2728:	
  3295                           ;main.c: 54: case SELECTFUNC:
  3296                           
  3297                           
  3298                           ;main.c: 55: printf("SELECTFUNC");
  3299  03D5  3086               	movlw	low (STR_2| (0+32768))
  3300  03D6  0020               	movlb	0	; select bank0
  3301  03D7  00D6               	movwf	printf@f
  3302  03D8  3080               	movlw	high (STR_2| (0+32768))
  3303  03D9  00D7               	movwf	printf@f+1
  3304  03DA  3181  21BE  3183   	fcall	_printf
  3305                           
  3306                           ;main.c: 56: break;
  3307  03DD  2B96               	goto	l2712
  3308  03DE                     l2730:	
  3309                           ;main.c: 57: case ADJGAIN:
  3310                           
  3311                           
  3312                           ;main.c: 58: printf("ADJGAIN");
  3313  03DE  30BD               	movlw	low (STR_3| (0+32768))
  3314  03DF  0020               	movlb	0	; select bank0
  3315  03E0  00D6               	movwf	printf@f
  3316  03E1  3080               	movlw	high (STR_3| (0+32768))
  3317  03E2  00D7               	movwf	printf@f+1
  3318  03E3  3181  21BE  3183   	fcall	_printf
  3319                           
  3320                           ;main.c: 59: break;
  3321  03E6  2B96               	goto	l2712
  3322  03E7                     l2732:	
  3323                           ;main.c: 60: case PMTDEVICE:
  3324                           
  3325                           
  3326                           ;main.c: 61: printf("PMTDEVICE");
  3327  03E7  3091               	movlw	low (STR_4| (0+32768))
  3328  03E8  0020               	movlb	0	; select bank0
  3329  03E9  00D6               	movwf	printf@f
  3330  03EA  3080               	movlw	high (STR_4| (0+32768))
  3331  03EB  00D7               	movwf	printf@f+1
  3332  03EC  3181  21BE  3183   	fcall	_printf
  3333                           
  3334                           ;main.c: 63: }
  3335                           
  3336                           ;main.c: 62: break;
  3337  03EF  2B96               	goto	l2712
  3338  03F0                     l2736:	
  3339  03F0  0020               	movlb	0	; select bank0
  3340  03F1  083E               	movf	_mode+1,w
  3341                           
  3342                           ; Switch size 1, requested type "space"
  3343                           ; Number of cases is 4, Range of values is 0 to 3
  3344                           ; switch strategies available:
  3345                           ; Name         Instructions Cycles
  3346                           ; simple_byte           13     7 (average)
  3347                           ; direct_byte           14     6 (fixed)
  3348                           ; jumptable            260     6 (fixed)
  3349                           ;	Chosen strategy is simple_byte
  3350  03F2  3A00               	xorlw	0	; case 0
  3351  03F3  1903               	skipnz
  3352  03F4  2BB8               	goto	l2726
  3353  03F5  3A01               	xorlw	1	; case 1
  3354  03F6  1903               	skipnz
  3355  03F7  2BD5               	goto	l2728
  3356  03F8  3A03               	xorlw	3	; case 2
  3357  03F9  1903               	skipnz
  3358  03FA  2BDE               	goto	l2730
  3359  03FB  3A01               	xorlw	1	; case 3
  3360  03FC  1903               	skipnz
  3361  03FD  2BE7               	goto	l2732
  3362  03FE  2B96               	goto	l2712
  3363  03FF  2B96               	goto	l2712
  3364  0400                     __end_of_main:	
  3365                           ;main.c: 64: }
  3366                           ;main.c: 66: return 0;
  3367                           ;	Return value of _main is never used
  3368                           
  3369                           
  3370                           	psect	text1
  3371  01BE                     __ptext1:	
  3372 ;; *************** function _printf *****************
  3373 ;; Defined at:
  3374 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  3377 ;;		 -> STR_4(10), STR_3(8), STR_2(11), STR_1(10), 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  tmpval          4    0        struct .
  3380 ;;  width           2   32[BANK0 ] int 
  3381 ;;  val             2   29[BANK0 ] unsigned int 
  3382 ;;  cp              2    0        PTR const unsigned char 
  3383 ;;  len             2    0        unsigned int 
  3384 ;;  c               1   34[BANK0 ] char 
  3385 ;;  prec            1   31[BANK0 ] char 
  3386 ;;  ap              1   28[BANK0 ] PTR void [1]
  3387 ;;		 -> ?_printf(2), 
  3388 ;;  flag            1   27[BANK0 ] unsigned char 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  2   15[BANK0 ] int 
  3391 ;; Registers used:
  3392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3398 ;;      Params:         0       8       0       0       0       0
  3399 ;;      Locals:         0       8       0       0       0       0
  3400 ;;      Temps:          0       4       0       0       0       0
  3401 ;;      Totals:         0      20       0       0       0       0
  3402 ;;Total ram usage:       20 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    5
  3405 ;; This function calls:
  3406 ;;		___lwdiv
  3407 ;;		___lwmod
  3408 ;;		___wmul
  3409 ;;		_isdigit
  3410 ;;		_putch
  3411 ;; This function is called by:
  3412 ;;		_main
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _printf
  3418  01BE                     _printf:	
  3419                           
  3420                           ;doprnt.c: 466: va_list ap;
  3421                           ;doprnt.c: 499: signed char c;
  3422                           ;doprnt.c: 501: int width;
  3423                           ;doprnt.c: 506: signed char prec;
  3424                           ;doprnt.c: 508: unsigned char flag;
  3425                           ;doprnt.c: 523: union {
  3426                           ;doprnt.c: 524: unsigned long vd;
  3427                           ;doprnt.c: 525: double integ;
  3428                           ;doprnt.c: 526: } tmpval;
  3429                           ;doprnt.c: 528: unsigned int val;
  3430                           ;doprnt.c: 529: unsigned len;
  3431                           ;doprnt.c: 530: const char * cp;
  3432                           ;doprnt.c: 533: *ap = __va_start();
  3433                           
  3434                           ;incstack = 0
  3435                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3436  01BE  3058               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3437  01BF  0020               	movlb	0	; select bank0
  3438  01C0  00DE               	movwf	??_printf
  3439  01C1  085E               	movf	??_printf,w
  3440  01C2  00E3               	movwf	printf@ap
  3441  01C3                     l2600:	
  3442                           ;doprnt.c: 536: while(c = *f++) {
  3443                           
  3444  01C3  0020               	movlb	0	; select bank0
  3445  01C4  0857               	movf	printf@f+1,w
  3446  01C5  00DF               	movwf	??_printf+1
  3447  01C6  0856               	movf	printf@f,w
  3448  01C7  00DE               	movwf	??_printf
  3449  01C8  0AD6               	incf	printf@f,f
  3450  01C9  1903               	skipnz
  3451  01CA  0AD7               	incf	printf@f+1,f
  3452  01CB  085E               	movf	??_printf,w
  3453  01CC  0084               	movwf	4
  3454  01CD  085F               	movf	??_printf+1,w
  3455  01CE  0085               	movwf	5
  3456  01CF  0800               	movf	0,w	;code access
  3457  01D0  00E0               	movwf	??_printf+2
  3458  01D1  0860               	movf	??_printf+2,w
  3459  01D2  00E9               	movwf	printf@c
  3460  01D3  0869               	movf	printf@c,w
  3461  01D4  1903               	btfsc	3,2
  3462  01D5  0008               	return
  3463                           
  3464                           ;doprnt.c: 538: if(c != '%')
  3465  01D6  3025               	movlw	37
  3466  01D7  0669               	xorwf	printf@c,w
  3467  01D8  1903               	btfsc	3,2
  3468  01D9  29DF               	goto	l2544
  3469                           
  3470                           ;doprnt.c: 540: {
  3471                           ;doprnt.c: 541: (putch(c) );
  3472  01DA  0869               	movf	printf@c,w
  3473  01DB  318E  26AF  3181   	fcall	_putch
  3474                           
  3475                           ;doprnt.c: 542: continue;
  3476  01DE  29C3               	goto	l2600
  3477  01DF                     l2544:	
  3478                           
  3479                           ;doprnt.c: 543: }
  3480                           ;doprnt.c: 546: width = 0;
  3481  01DF  0020               	movlb	0	; select bank0
  3482  01E0  01E7               	clrf	printf@width
  3483  01E1  01E8               	clrf	printf@width+1
  3484                           
  3485                           ;doprnt.c: 548: flag = 0;
  3486  01E2  01E2               	clrf	printf@flag
  3487                           
  3488                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3489  01E3  0856               	movf	printf@f,w
  3490  01E4  0084               	movwf	4
  3491  01E5  0857               	movf	printf@f+1,w
  3492  01E6  0085               	movwf	5
  3493  01E7  0800               	movf	0,w	;code access
  3494  01E8  318F  2707  3181   	fcall	_isdigit
  3495  01EB  1C03               	btfss	3,0
  3496  01EC  2A25               	goto	l2562
  3497                           
  3498                           ;doprnt.c: 598: width = 0;
  3499  01ED  0020               	movlb	0	; select bank0
  3500  01EE  01E7               	clrf	printf@width
  3501  01EF  01E8               	clrf	printf@width+1
  3502  01F0                     l2550:	
  3503                           ;doprnt.c: 599: do {
  3504                           
  3505                           
  3506                           ;doprnt.c: 600: width *= 10;
  3507  01F0  300A               	movlw	10
  3508  01F1  0020               	movlb	0	; select bank0
  3509  01F2  00C8               	movwf	___wmul@multiplier
  3510  01F3  3000               	movlw	0
  3511  01F4  00C9               	movwf	___wmul@multiplier+1
  3512  01F5  0868               	movf	printf@width+1,w
  3513  01F6  00CB               	movwf	___wmul@multiplicand+1
  3514  01F7  0867               	movf	printf@width,w
  3515  01F8  00CA               	movwf	___wmul@multiplicand
  3516  01F9  318F  27E4  3181   	fcall	___wmul
  3517  01FC  0020               	movlb	0	; select bank0
  3518  01FD  0849               	movf	?___wmul+1,w
  3519  01FE  00E8               	movwf	printf@width+1
  3520  01FF  0848               	movf	?___wmul,w
  3521  0200  00E7               	movwf	printf@width
  3522                           
  3523                           ;doprnt.c: 601: width += *f++ - '0';
  3524  0201  0856               	movf	printf@f,w
  3525  0202  0084               	movwf	4
  3526  0203  0857               	movf	printf@f+1,w
  3527  0204  0085               	movwf	5
  3528  0205  0800               	movf	0,w	;code access
  3529  0206  3ED0               	addlw	208
  3530  0207  00DE               	movwf	??_printf
  3531  0208  30FF               	movlw	255
  3532  0209  1803               	skipnc
  3533  020A  3000               	movlw	0
  3534  020B  00DF               	movwf	??_printf+1
  3535  020C  085E               	movf	??_printf,w
  3536  020D  07E7               	addwf	printf@width,f
  3537  020E  085F               	movf	??_printf+1,w
  3538  020F  3DE8               	addwfc	printf@width+1,f
  3539  0210  3001               	movlw	1
  3540  0211  07D6               	addwf	printf@f,f
  3541  0212  3000               	movlw	0
  3542  0213  3DD7               	addwfc	printf@f+1,f
  3543                           
  3544                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3545  0214  0856               	movf	printf@f,w
  3546  0215  0084               	movwf	4
  3547  0216  0857               	movf	printf@f+1,w
  3548  0217  0085               	movwf	5
  3549  0218  0800               	movf	0,w	;code access
  3550  0219  318F  2707  3181   	fcall	_isdigit
  3551  021C  1C03               	btfss	3,0
  3552  021D  2A25               	goto	l2562
  3553  021E  29F0               	goto	l2550
  3554  021F                     l2558:	
  3555                           ;doprnt.c: 817: case 'u':
  3556                           
  3557                           ;doprnt.c: 813: continue;
  3558                           
  3559                           ;doprnt.c: 802: default:
  3560                           
  3561                           ;doprnt.c: 638: goto alldone;
  3562                           
  3563                           ;doprnt.c: 637: case 0:
  3564                           
  3565                           ;doprnt.c: 608: }
  3566                           ;doprnt.c: 635: switch(c = *f++) {
  3567                           
  3568                           
  3569                           ;doprnt.c: 818: flag |= 0xC0;
  3570  021F  30C0               	movlw	192
  3571  0220  0020               	movlb	0	; select bank0
  3572  0221  00DE               	movwf	??_printf
  3573  0222  085E               	movf	??_printf,w
  3574  0223  04E2               	iorwf	printf@flag,f
  3575                           
  3576                           ;doprnt.c: 822: }
  3577                           
  3578                           ;doprnt.c: 819: break;
  3579  0224  2A3A               	goto	l2564
  3580  0225                     l2562:	
  3581  0225  0020               	movlb	0	; select bank0
  3582  0226  0857               	movf	printf@f+1,w
  3583  0227  00DF               	movwf	??_printf+1
  3584  0228  0856               	movf	printf@f,w
  3585  0229  00DE               	movwf	??_printf
  3586  022A  0AD6               	incf	printf@f,f
  3587  022B  1903               	skipnz
  3588  022C  0AD7               	incf	printf@f+1,f
  3589  022D  085E               	movf	??_printf,w
  3590  022E  0084               	movwf	4
  3591  022F  085F               	movf	??_printf+1,w
  3592  0230  0085               	movwf	5
  3593  0231  0800               	movf	0,w	;code access
  3594  0232  00E9               	movwf	printf@c
  3595                           
  3596                           ; Switch size 1, requested type "space"
  3597                           ; Number of cases is 2, Range of values is 0 to 117
  3598                           ; switch strategies available:
  3599                           ; Name         Instructions Cycles
  3600                           ; simple_byte            7     4 (average)
  3601                           ; direct_byte          242     6 (fixed)
  3602                           ; jumptable            260     6 (fixed)
  3603                           ;	Chosen strategy is simple_byte
  3604  0233  3A00               	xorlw	0	; case 0
  3605  0234  1903               	skipnz
  3606  0235  2AD3               	goto	l566
  3607  0236  3A75               	xorlw	117	; case 117
  3608  0237  1903               	skipnz
  3609  0238  2A1F               	goto	l2558
  3610  0239  29C3               	goto	l2600
  3611  023A                     l2564:	
  3612                           
  3613                           ;doprnt.c: 1273: {
  3614                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3615  023A  0863               	movf	printf@ap,w
  3616  023B  0086               	movwf	6
  3617  023C  0187               	clrf	7
  3618  023D  3F40               	moviw [0]fsr1
  3619  023E  00E4               	movwf	printf@val
  3620  023F  3F41               	moviw [1]fsr1
  3621  0240  00E5               	movwf	printf@val+1
  3622  0241  3002               	movlw	2
  3623  0242  00DE               	movwf	??_printf
  3624  0243  085E               	movf	??_printf,w
  3625  0244  07E3               	addwf	printf@ap,f
  3626                           
  3627                           ;doprnt.c: 1287: }
  3628                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3629  0245  01E9               	clrf	printf@c
  3630  0246  0AE9               	incf	printf@c,f
  3631  0247  3005               	movlw	5
  3632  0248  0669               	xorwf	printf@c,w
  3633  0249  1903               	btfsc	3,2
  3634  024A  2A6A               	goto	l2580
  3635  024B                     l2574:	
  3636                           
  3637                           ;doprnt.c: 1306: if(val < dpowers[c])
  3638  024B  0869               	movf	printf@c,w
  3639  024C  00DE               	movwf	??_printf
  3640  024D  01DF               	clrf	??_printf+1
  3641  024E  35DE               	lslf	??_printf,f
  3642  024F  0DDF               	rlf	??_printf+1,f
  3643  0250  307C               	movlw	low (_dpowers| (0+32768))
  3644  0251  075E               	addwf	??_printf,w
  3645  0252  0084               	movwf	4
  3646  0253  3080               	movlw	high (_dpowers| (0+32768))
  3647  0254  3D5F               	addwfc	??_printf+1,w
  3648  0255  0085               	movwf	5
  3649  0256  3F00               	moviw [0]fsr0
  3650  0257  00E0               	movwf	??_printf+2
  3651  0258  3F01               	moviw [1]fsr0
  3652  0259  00E1               	movwf	??_printf+3
  3653  025A  0861               	movf	??_printf+3,w
  3654  025B  0265               	subwf	printf@val+1,w
  3655  025C  1D03               	skipz
  3656  025D  2A60               	goto	u1785
  3657  025E  0860               	movf	??_printf+2,w
  3658  025F  0264               	subwf	printf@val,w
  3659  0260                     u1785:	
  3660  0260  1C03               	btfss	3,0
  3661  0261  2A6A               	goto	l2580
  3662                           
  3663                           ;doprnt.c: 1307: break;
  3664  0262  3001               	movlw	1
  3665  0263  00DE               	movwf	??_printf
  3666  0264  085E               	movf	??_printf,w
  3667  0265  07E9               	addwf	printf@c,f
  3668  0266  3005               	movlw	5
  3669  0267  0669               	xorwf	printf@c,w
  3670  0268  1D03               	btfss	3,2
  3671  0269  2A4B               	goto	l2574
  3672  026A                     l2580:	
  3673                           
  3674                           ;doprnt.c: 1381: if(width > c)
  3675  026A  0869               	movf	printf@c,w
  3676  026B  00DE               	movwf	??_printf
  3677  026C  01DF               	clrf	??_printf+1
  3678  026D  1BDE               	btfsc	??_printf,7
  3679  026E  03DF               	decf	??_printf+1,f
  3680  026F  085F               	movf	??_printf+1,w
  3681  0270  3A80               	xorlw	128
  3682  0271  00E0               	movwf	??_printf+2
  3683  0272  0868               	movf	printf@width+1,w
  3684  0273  3A80               	xorlw	128
  3685  0274  0260               	subwf	??_printf+2,w
  3686  0275  1D03               	skipz
  3687  0276  2A79               	goto	u1805
  3688  0277  0867               	movf	printf@width,w
  3689  0278  025E               	subwf	??_printf,w
  3690  0279                     u1805:	
  3691  0279  1803               	skipnc
  3692  027A  2A86               	goto	l2584
  3693                           
  3694                           ;doprnt.c: 1382: width -= c;
  3695  027B  0020               	movlb	0	; select bank0
  3696  027C  0869               	movf	printf@c,w
  3697  027D  00DE               	movwf	??_printf
  3698  027E  01DF               	clrf	??_printf+1
  3699  027F  1BDE               	btfsc	??_printf,7
  3700  0280  03DF               	decf	??_printf+1,f
  3701  0281  085E               	movf	??_printf,w
  3702  0282  02E7               	subwf	printf@width,f
  3703  0283  085F               	movf	??_printf+1,w
  3704  0284  3BE8               	subwfb	printf@width+1,f
  3705  0285  2A89               	goto	l2586
  3706  0286                     l2584:	
  3707                           
  3708                           ;doprnt.c: 1383: else
  3709                           ;doprnt.c: 1384: width = 0;
  3710  0286  0020               	movlb	0	; select bank0
  3711  0287  01E7               	clrf	printf@width
  3712  0288  01E8               	clrf	printf@width+1
  3713  0289                     l2586:	
  3714                           
  3715                           ;doprnt.c: 1422: {
  3716                           ;doprnt.c: 1424: if(width
  3717                           ;doprnt.c: 1428: )
  3718  0289  0867               	movf	printf@width,w
  3719  028A  0468               	iorwf	printf@width+1,w
  3720  028B  1903               	btfsc	3,2
  3721  028C  2A9A               	goto	l2592
  3722  028D                     l2588:	
  3723                           ;doprnt.c: 1429: do
  3724                           
  3725                           
  3726                           ;doprnt.c: 1430: (putch(' ') );
  3727  028D  3020               	movlw	32
  3728  028E  318E  26AF  3181   	fcall	_putch
  3729                           
  3730                           ;doprnt.c: 1431: while(--width);
  3731  0291  30FF               	movlw	255
  3732  0292  0020               	movlb	0	; select bank0
  3733  0293  07E7               	addwf	printf@width,f
  3734  0294  30FF               	movlw	255
  3735  0295  3DE8               	addwfc	printf@width+1,f
  3736  0296  0867               	movf	printf@width,w
  3737  0297  0468               	iorwf	printf@width+1,w
  3738  0298  1D03               	btfss	3,2
  3739  0299  2A8D               	goto	l2588
  3740  029A                     l2592:	
  3741                           
  3742                           ;doprnt.c: 1469: }
  3743                           ;doprnt.c: 1472: prec = c;
  3744  029A  0869               	movf	printf@c,w
  3745  029B  00DE               	movwf	??_printf
  3746  029C  085E               	movf	??_printf,w
  3747  029D  00E6               	movwf	printf@prec
  3748  029E                     l2598:	
  3749                           ;doprnt.c: 1474: while(prec--) {
  3750                           
  3751  029E  30FF               	movlw	255
  3752  029F  0020               	movlb	0	; select bank0
  3753  02A0  00DE               	movwf	??_printf
  3754  02A1  085E               	movf	??_printf,w
  3755  02A2  07E6               	addwf	printf@prec,f
  3756  02A3  0A66               	incf	printf@prec,w
  3757  02A4  1903               	btfsc	3,2
  3758  02A5  29C3               	goto	l2600
  3759                           
  3760                           ;doprnt.c: 1478: {
  3761                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3762  02A6  300A               	movlw	10
  3763  02A7  00D0               	movwf	___lwmod@divisor
  3764  02A8  3000               	movlw	0
  3765  02A9  00D1               	movwf	___lwmod@divisor+1
  3766  02AA  0866               	movf	printf@prec,w
  3767  02AB  00DE               	movwf	??_printf
  3768  02AC  01DF               	clrf	??_printf+1
  3769  02AD  35DE               	lslf	??_printf,f
  3770  02AE  0DDF               	rlf	??_printf+1,f
  3771  02AF  307C               	movlw	low (_dpowers| (0+32768))
  3772  02B0  075E               	addwf	??_printf,w
  3773  02B1  0084               	movwf	4
  3774  02B2  3080               	movlw	high (_dpowers| (0+32768))
  3775  02B3  3D5F               	addwfc	??_printf+1,w
  3776  02B4  0085               	movwf	5
  3777  02B5  3F00               	moviw [0]fsr0
  3778  02B6  00C8               	movwf	___lwdiv@divisor
  3779  02B7  3F01               	moviw [1]fsr0
  3780  02B8  00C9               	movwf	___lwdiv@divisor+1
  3781  02B9  0865               	movf	printf@val+1,w
  3782  02BA  00CB               	movwf	___lwdiv@dividend+1
  3783  02BB  0864               	movf	printf@val,w
  3784  02BC  00CA               	movwf	___lwdiv@dividend
  3785  02BD  3186  268E  3181   	fcall	___lwdiv
  3786  02C0  0020               	movlb	0	; select bank0
  3787  02C1  0849               	movf	?___lwdiv+1,w
  3788  02C2  00D3               	movwf	___lwmod@dividend+1
  3789  02C3  0848               	movf	?___lwdiv,w
  3790  02C4  00D2               	movwf	___lwmod@dividend
  3791  02C5  3186  26F2  3181   	fcall	___lwmod
  3792  02C8  0020               	movlb	0	; select bank0
  3793  02C9  0850               	movf	?___lwmod,w
  3794  02CA  3E30               	addlw	48
  3795  02CB  00E0               	movwf	??_printf+2
  3796  02CC  0860               	movf	??_printf+2,w
  3797  02CD  00E9               	movwf	printf@c
  3798                           
  3799                           ;doprnt.c: 1523: }
  3800                           ;doprnt.c: 1524: (putch(c) );
  3801  02CE  0869               	movf	printf@c,w
  3802  02CF  318E  26AF  3181   	fcall	_putch
  3803  02D2  2A9E               	goto	l2598
  3804  02D3                     l566:	
  3805                           ;doprnt.c: 1540: return 0;
  3806                           ;	Return value of _printf is never used
  3807                           
  3808                           ;doprnt.c: 1525: }
  3809                           ;doprnt.c: 1533: }
  3810                           ;doprnt.c: 1535: alldone:
  3811                           
  3812  02D3  0008               	return
  3813  02D4                     __end_of_printf:	
  3814                           
  3815                           	psect	text2
  3816  0EAF                     __ptext2:	
  3817 ;; *************** function _putch *****************
  3818 ;; Defined at:
  3819 ;;		line 64 in file "LCD.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  c               1    wreg     unsigned char 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  c               1    4[BANK0 ] unsigned char 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0, pclath, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3833 ;;      Params:         0       0       0       0       0       0
  3834 ;;      Locals:         0       1       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0
  3836 ;;      Totals:         0       1       0       0       0       0
  3837 ;;Total ram usage:        1 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    4
  3840 ;; This function calls:
  3841 ;;		_LCD_WriteData
  3842 ;; This function is called by:
  3843 ;;		_printf
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           
  3848                           ;psect for function _putch
  3849  0EAF                     _putch:	
  3850                           
  3851                           ;incstack = 0
  3852                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3853                           ;putch@c stored from wreg
  3854  0EAF  0020               	movlb	0	; select bank0
  3855  0EB0  00CB               	movwf	putch@c
  3856                           
  3857                           ;LCD.c: 66: LATA3 = 1;
  3858  0EB1  0022               	movlb	2	; select bank2
  3859  0EB2  158C               	bsf	12,3	;volatile
  3860                           
  3861                           ;LCD.c: 67: LCD_WriteData(c);
  3862  0EB3  0020               	movlb	0	; select bank0
  3863  0EB4  084B               	movf	putch@c,w
  3864  0EB5  3186  2615         	fcall	_LCD_WriteData
  3865  0EB7  0008               	return
  3866  0EB8                     __end_of_putch:	
  3867                           
  3868                           	psect	text3
  3869  0F07                     __ptext3:	
  3870 ;; *************** function _isdigit *****************
  3871 ;; Defined at:
  3872 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/isdigit.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  c               1    wreg     unsigned char 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  c               1    2[BANK0 ] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;		None               void
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3886 ;;      Params:         0       0       0       0       0       0
  3887 ;;      Locals:         0       2       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0
  3889 ;;      Totals:         0       2       0       0       0       0
  3890 ;;Total ram usage:        2 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    3
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_printf
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           
  3901                           ;psect for function _isdigit
  3902  0F07                     _isdigit:	
  3903                           
  3904                           ;incstack = 0
  3905                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3906                           ;isdigit@c stored from wreg
  3907  0F07  0020               	movlb	0	; select bank0
  3908  0F08  00C9               	movwf	isdigit@c
  3909  0F09  01C8               	clrf	_isdigit$803
  3910  0F0A  303A               	movlw	58
  3911  0F0B  0249               	subwf	isdigit@c,w
  3912  0F0C  1803               	skipnc
  3913  0F0D  2F14               	goto	l2156
  3914  0F0E  3030               	movlw	48
  3915  0F0F  0249               	subwf	isdigit@c,w
  3916  0F10  1C03               	skipc
  3917  0F11  2F14               	goto	l2156
  3918  0F12  01C8               	clrf	_isdigit$803
  3919  0F13  0AC8               	incf	_isdigit$803,f
  3920  0F14                     l2156:	
  3921  0F14  0C48               	rrf	_isdigit$803,w
  3922  0F15  0008               	return
  3923  0F16                     __end_of_isdigit:	
  3924                           
  3925                           	psect	text4
  3926  0FE4                     __ptext4:	
  3927 ;; *************** function ___wmul *****************
  3928 ;; Defined at:
  3929 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  multiplier      2    1[BANK0 ] unsigned int 
  3932 ;;  multiplicand    2    3[BANK0 ] unsigned int 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  product         2    5[BANK0 ] unsigned int 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  2    1[BANK0 ] unsigned int 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3944 ;;      Params:         0       4       0       0       0       0
  3945 ;;      Locals:         0       2       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0
  3947 ;;      Totals:         0       6       0       0       0       0
  3948 ;;Total ram usage:        6 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    3
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_printf
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           
  3959                           ;psect for function ___wmul
  3960  0FE4                     ___wmul:	
  3961                           
  3962                           ;incstack = 0
  3963                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3964  0FE4  0020               	movlb	0	; select bank0
  3965  0FE5  01CC               	clrf	___wmul@product
  3966  0FE6  01CD               	clrf	___wmul@product+1
  3967  0FE7                     l2162:	
  3968  0FE7  1C48               	btfss	___wmul@multiplier,0
  3969  0FE8  2FED               	goto	l691
  3970  0FE9  084A               	movf	___wmul@multiplicand,w
  3971  0FEA  07CC               	addwf	___wmul@product,f
  3972  0FEB  084B               	movf	___wmul@multiplicand+1,w
  3973  0FEC  3DCD               	addwfc	___wmul@product+1,f
  3974  0FED                     l691:	
  3975  0FED  3001               	movlw	1
  3976  0FEE                     u1425:	
  3977  0FEE  35CA               	lslf	___wmul@multiplicand,f
  3978  0FEF  0DCB               	rlf	___wmul@multiplicand+1,f
  3979  0FF0  0B89               	decfsz	9,f
  3980  0FF1  2FEE               	goto	u1425
  3981  0FF2  3001               	movlw	1
  3982  0FF3                     u1435:	
  3983  0FF3  36C9               	lsrf	___wmul@multiplier+1,f
  3984  0FF4  0CC8               	rrf	___wmul@multiplier,f
  3985  0FF5  0B89               	decfsz	9,f
  3986  0FF6  2FF3               	goto	u1435
  3987  0FF7  0848               	movf	___wmul@multiplier,w
  3988  0FF8  0449               	iorwf	___wmul@multiplier+1,w
  3989  0FF9  1D03               	btfss	3,2
  3990  0FFA  2FE7               	goto	l2162
  3991  0FFB  084D               	movf	___wmul@product+1,w
  3992  0FFC  00C9               	movwf	?___wmul+1
  3993  0FFD  084C               	movf	___wmul@product,w
  3994  0FFE  00C8               	movwf	?___wmul
  3995  0FFF  0008               	return
  3996  1000                     __end_of___wmul:	
  3997                           
  3998                           	psect	text5
  3999  06F2                     __ptext5:	
  4000 ;; *************** function ___lwmod *****************
  4001 ;; Defined at:
  4002 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  divisor         2    9[BANK0 ] unsigned int 
  4005 ;;  dividend        2   11[BANK0 ] unsigned int 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  counter         1   14[BANK0 ] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  2    9[BANK0 ] unsigned int 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4017 ;;      Params:         0       4       0       0       0       0
  4018 ;;      Locals:         0       1       0       0       0       0
  4019 ;;      Temps:          0       1       0       0       0       0
  4020 ;;      Totals:         0       6       0       0       0       0
  4021 ;;Total ram usage:        6 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    3
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_printf
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           
  4032                           ;psect for function ___lwmod
  4033  06F2                     ___lwmod:	
  4034                           
  4035                           ;incstack = 0
  4036                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4037  06F2  0020               	movlb	0	; select bank0
  4038  06F3  0850               	movf	___lwmod@divisor,w
  4039  06F4  0451               	iorwf	___lwmod@divisor+1,w
  4040  06F5  1903               	btfsc	3,2
  4041  06F6  2F1A               	goto	l2242
  4042  06F7  01D5               	clrf	___lwmod@counter
  4043  06F8  0AD5               	incf	___lwmod@counter,f
  4044  06F9                     l2232:	
  4045  06F9  1BD1               	btfsc	___lwmod@divisor+1,7
  4046  06FA  2F05               	goto	l2234
  4047  06FB  3001               	movlw	1
  4048  06FC                     u1605:	
  4049  06FC  35D0               	lslf	___lwmod@divisor,f
  4050  06FD  0DD1               	rlf	___lwmod@divisor+1,f
  4051  06FE  0B89               	decfsz	9,f
  4052  06FF  2EFC               	goto	u1605
  4053  0700  3001               	movlw	1
  4054  0701  00D4               	movwf	??___lwmod
  4055  0702  0854               	movf	??___lwmod,w
  4056  0703  07D5               	addwf	___lwmod@counter,f
  4057  0704  2EF9               	goto	l2232
  4058  0705                     l2234:	
  4059  0705  0851               	movf	___lwmod@divisor+1,w
  4060  0706  0253               	subwf	___lwmod@dividend+1,w
  4061  0707  1D03               	skipz
  4062  0708  2F0B               	goto	u1625
  4063  0709  0850               	movf	___lwmod@divisor,w
  4064  070A  0252               	subwf	___lwmod@dividend,w
  4065  070B                     u1625:	
  4066  070B  1C03               	skipc
  4067  070C  2F11               	goto	l2238
  4068  070D  0850               	movf	___lwmod@divisor,w
  4069  070E  02D2               	subwf	___lwmod@dividend,f
  4070  070F  0851               	movf	___lwmod@divisor+1,w
  4071  0710  3BD3               	subwfb	___lwmod@dividend+1,f
  4072  0711                     l2238:	
  4073  0711  3001               	movlw	1
  4074  0712                     u1635:	
  4075  0712  36D1               	lsrf	___lwmod@divisor+1,f
  4076  0713  0CD0               	rrf	___lwmod@divisor,f
  4077  0714  0B89               	decfsz	9,f
  4078  0715  2F12               	goto	u1635
  4079  0716  3001               	movlw	1
  4080  0717  02D5               	subwf	___lwmod@counter,f
  4081  0718  1D03               	btfss	3,2
  4082  0719  2F05               	goto	l2234
  4083  071A                     l2242:	
  4084  071A  0853               	movf	___lwmod@dividend+1,w
  4085  071B  00D1               	movwf	?___lwmod+1
  4086  071C  0852               	movf	___lwmod@dividend,w
  4087  071D  00D0               	movwf	?___lwmod
  4088  071E  0008               	return
  4089  071F                     __end_of___lwmod:	
  4090                           
  4091                           	psect	text6
  4092  068E                     __ptext6:	
  4093 ;; *************** function ___lwdiv *****************
  4094 ;; Defined at:
  4095 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  divisor         2    1[BANK0 ] unsigned int 
  4098 ;;  dividend        2    3[BANK0 ] unsigned int 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  quotient        2    6[BANK0 ] unsigned int 
  4101 ;;  counter         1    8[BANK0 ] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  2    1[BANK0 ] unsigned int 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4111 ;;      Params:         0       4       0       0       0       0
  4112 ;;      Locals:         0       3       0       0       0       0
  4113 ;;      Temps:          0       1       0       0       0       0
  4114 ;;      Totals:         0       8       0       0       0       0
  4115 ;;Total ram usage:        8 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    3
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_printf
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           
  4126                           ;psect for function ___lwdiv
  4127  068E                     ___lwdiv:	
  4128                           
  4129                           ;incstack = 0
  4130                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4131  068E  0020               	movlb	0	; select bank0
  4132  068F  01CD               	clrf	___lwdiv@quotient
  4133  0690  01CE               	clrf	___lwdiv@quotient+1
  4134  0691  0848               	movf	___lwdiv@divisor,w
  4135  0692  0449               	iorwf	___lwdiv@divisor+1,w
  4136  0693  1903               	btfsc	3,2
  4137  0694  2EBE               	goto	l2220
  4138  0695  01CF               	clrf	___lwdiv@counter
  4139  0696  0ACF               	incf	___lwdiv@counter,f
  4140  0697                     l2208:	
  4141  0697  1BC9               	btfsc	___lwdiv@divisor+1,7
  4142  0698  2EA3               	goto	l2210
  4143  0699  3001               	movlw	1
  4144  069A                     u1535:	
  4145  069A  35C8               	lslf	___lwdiv@divisor,f
  4146  069B  0DC9               	rlf	___lwdiv@divisor+1,f
  4147  069C  0B89               	decfsz	9,f
  4148  069D  2E9A               	goto	u1535
  4149  069E  3001               	movlw	1
  4150  069F  00CC               	movwf	??___lwdiv
  4151  06A0  084C               	movf	??___lwdiv,w
  4152  06A1  07CF               	addwf	___lwdiv@counter,f
  4153  06A2  2E97               	goto	l2208
  4154  06A3                     l2210:	
  4155  06A3  3001               	movlw	1
  4156  06A4                     u1555:	
  4157  06A4  35CD               	lslf	___lwdiv@quotient,f
  4158  06A5  0DCE               	rlf	___lwdiv@quotient+1,f
  4159  06A6  0B89               	decfsz	9,f
  4160  06A7  2EA4               	goto	u1555
  4161  06A8  0849               	movf	___lwdiv@divisor+1,w
  4162  06A9  024B               	subwf	___lwdiv@dividend+1,w
  4163  06AA  1D03               	skipz
  4164  06AB  2EAE               	goto	u1565
  4165  06AC  0848               	movf	___lwdiv@divisor,w
  4166  06AD  024A               	subwf	___lwdiv@dividend,w
  4167  06AE                     u1565:	
  4168  06AE  1C03               	skipc
  4169  06AF  2EB5               	goto	l2216
  4170  06B0  0848               	movf	___lwdiv@divisor,w
  4171  06B1  02CA               	subwf	___lwdiv@dividend,f
  4172  06B2  0849               	movf	___lwdiv@divisor+1,w
  4173  06B3  3BCB               	subwfb	___lwdiv@dividend+1,f
  4174  06B4  144D               	bsf	___lwdiv@quotient,0
  4175  06B5                     l2216:	
  4176  06B5  3001               	movlw	1
  4177  06B6                     u1575:	
  4178  06B6  36C9               	lsrf	___lwdiv@divisor+1,f
  4179  06B7  0CC8               	rrf	___lwdiv@divisor,f
  4180  06B8  0B89               	decfsz	9,f
  4181  06B9  2EB6               	goto	u1575
  4182  06BA  3001               	movlw	1
  4183  06BB  02CF               	subwf	___lwdiv@counter,f
  4184  06BC  1D03               	btfss	3,2
  4185  06BD  2EA3               	goto	l2210
  4186  06BE                     l2220:	
  4187  06BE  084E               	movf	___lwdiv@quotient+1,w
  4188  06BF  00C9               	movwf	?___lwdiv+1
  4189  06C0  084D               	movf	___lwdiv@quotient,w
  4190  06C1  00C8               	movwf	?___lwdiv
  4191  06C2  0008               	return
  4192  06C3                     __end_of___lwdiv:	
  4193                           
  4194                           	psect	text7
  4195  0F6B                     __ptext7:	
  4196 ;; *************** function _mTouch_Init *****************
  4197 ;; Defined at:
  4198 ;;		line 12 in file "mTouch.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		wreg, status,2, status,0, pclath, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4212 ;;      Params:         0       0       0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0
  4214 ;;      Temps:          0       1       0       0       0       0
  4215 ;;      Totals:         0       1       0       0       0       0
  4216 ;;Total ram usage:        1 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    4
  4219 ;; This function calls:
  4220 ;;		_mTouch_PortInit
  4221 ;; This function is called by:
  4222 ;;		_main
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           
  4227                           ;psect for function _mTouch_Init
  4228  0F6B                     _mTouch_Init:	
  4229                           
  4230                           ;mTouch.c: 14: mTouch_PortInit();
  4231                           
  4232                           ;incstack = 0
  4233                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4234  0F6B  3187  27F3         	fcall	_mTouch_PortInit
  4235                           
  4236                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4237  0F6D  0021               	movlb	1	; select bank1
  4238  0F6E  0815               	movf	21,w	;volatile
  4239                           
  4240                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4241  0F6F  1595               	bsf	21,3	;volatile
  4242                           
  4243                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4244  0F70  1695               	bsf	21,5	;volatile
  4245                           
  4246                           ;mTouch.c: 20: TMR0 = 0x00;
  4247  0F71  0020               	movlb	0	; select bank0
  4248  0F72  0195               	clrf	21	;volatile
  4249                           
  4250                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4251  0F73  141E               	bsf	30,0	;volatile
  4252                           
  4253                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4254  0F74  300C               	movlw	12
  4255  0F75  00C9               	movwf	??_mTouch_Init
  4256  0F76  0849               	movf	??_mTouch_Init,w
  4257  0F77  049E               	iorwf	30,f	;volatile
  4258                           
  4259                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4260  0F78  307F               	movlw	127
  4261  0F79  00C9               	movwf	??_mTouch_Init
  4262  0F7A  0849               	movf	??_mTouch_Init,w
  4263  0F7B  059E               	andwf	30,f	;volatile
  4264                           
  4265                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4266  0F7C  019F               	clrf	31	;volatile
  4267  0F7D  0008               	return
  4268  0F7E                     __end_of_mTouch_Init:	
  4269                           
  4270                           	psect	text8
  4271  07F3                     __ptext8:	
  4272 ;; *************** function _mTouch_PortInit *****************
  4273 ;; Defined at:
  4274 ;;		line 6 in file "mTouch.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, status,2, status,0
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4288 ;;      Params:         0       0       0       0       0       0
  4289 ;;      Locals:         0       0       0       0       0       0
  4290 ;;      Temps:          0       1       0       0       0       0
  4291 ;;      Totals:         0       1       0       0       0       0
  4292 ;;Total ram usage:        1 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    3
  4295 ;; This function calls:
  4296 ;;		Nothing
  4297 ;; This function is called by:
  4298 ;;		_mTouch_Init
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           
  4303                           ;psect for function _mTouch_PortInit
  4304  07F3                     _mTouch_PortInit:	
  4305                           
  4306                           ;mTouch.c: 8: TRISA |= (0x07);
  4307                           
  4308                           ;incstack = 0
  4309                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4310  07F3  3007               	movlw	7
  4311  07F4  0020               	movlb	0	; select bank0
  4312  07F5  00C8               	movwf	??_mTouch_PortInit
  4313  07F6  0848               	movf	??_mTouch_PortInit,w
  4314  07F7  0021               	movlb	1	; select bank1
  4315  07F8  048C               	iorwf	12,f	;volatile
  4316                           
  4317                           ;mTouch.c: 9: ANSELA |= (0x07);
  4318  07F9  3007               	movlw	7
  4319  07FA  0020               	movlb	0	; select bank0
  4320  07FB  00C8               	movwf	??_mTouch_PortInit
  4321  07FC  0848               	movf	??_mTouch_PortInit,w
  4322  07FD  0023               	movlb	3	; select bank3
  4323  07FE  048C               	iorwf	12,f	;volatile
  4324  07FF  0008               	return
  4325  0800                     __end_of_mTouch_PortInit:	
  4326                           
  4327                           	psect	text9
  4328  058D                     __ptext9:	
  4329 ;; *************** function _mTouch_Check *****************
  4330 ;; Defined at:
  4331 ;;		line 118 in file "main.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  chan            1    wreg     unsigned char 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  chan            1    8[BANK0 ] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      unsigned char 
  4338 ;; Registers used:
  4339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4345 ;;      Params:         0       0       0       0       0       0
  4346 ;;      Locals:         0       1       0       0       0       0
  4347 ;;      Temps:          0       5       0       0       0       0
  4348 ;;      Totals:         0       6       0       0       0       0
  4349 ;;Total ram usage:        6 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    4
  4352 ;; This function calls:
  4353 ;;		_Buzzer_MiliSecond
  4354 ;; This function is called by:
  4355 ;;		_main
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           
  4360                           ;psect for function _mTouch_Check
  4361  058D                     _mTouch_Check:	
  4362                           
  4363                           ;incstack = 0
  4364                           ; Regs used in _mTouch_Check: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4365                           ;mTouch_Check@chan stored from wreg
  4366  058D  0020               	movlb	0	; select bank0
  4367  058E  00CF               	movwf	mTouch_Check@chan
  4368                           
  4369                           ;main.c: 120: if(chan>2)return 0;
  4370  058F  3003               	movlw	3
  4371  0590  024F               	subwf	mTouch_Check@chan,w
  4372  0591  1C03               	skipc
  4373  0592  2D95               	goto	l2522
  4374  0593  3000               	movlw	0
  4375  0594  0008               	return
  4376  0595                     l2522:	
  4377                           
  4378                           ;main.c: 122: if(((CPS_PreData[chan]-CPS_Data[chan])>200)&&!mTouch_Interval[chan])
  4379  0595  084F               	movf	mTouch_Check@chan,w
  4380  0596  3E37               	addlw	(low (_CPS_Data| 0))& (0+255)
  4381  0597  0086               	movwf	6
  4382  0598  0187               	clrf	7
  4383  0599  0801               	movf	1,w
  4384  059A  00CA               	movwf	??_mTouch_Check
  4385  059B  01CB               	clrf	??_mTouch_Check+1
  4386  059C  09CA               	comf	??_mTouch_Check,f
  4387  059D  09CB               	comf	??_mTouch_Check+1,f
  4388  059E  0ACA               	incf	??_mTouch_Check,f
  4389  059F  1903               	skipnz
  4390  05A0  0ACB               	incf	??_mTouch_Check+1,f
  4391  05A1  084F               	movf	mTouch_Check@chan,w
  4392  05A2  3E3A               	addlw	(low (_CPS_PreData| 0))& (0+255)
  4393  05A3  0086               	movwf	6
  4394  05A4  0187               	clrf	7
  4395  05A5  0801               	movf	1,w
  4396  05A6  074A               	addwf	??_mTouch_Check,w
  4397  05A7  00CC               	movwf	??_mTouch_Check+2
  4398  05A8  084B               	movf	??_mTouch_Check+1,w
  4399  05A9  1803               	skipnc
  4400  05AA  0A4B               	incf	??_mTouch_Check+1,w
  4401  05AB  00CD               	movwf	??_mTouch_Check+3
  4402  05AC  084D               	movf	??_mTouch_Check+3,w
  4403  05AD  3A80               	xorlw	128
  4404  05AE  00CE               	movwf	??_mTouch_Check+4
  4405  05AF  3080               	movlw	128
  4406  05B0  024E               	subwf	??_mTouch_Check+4,w
  4407  05B1  1D03               	skipz
  4408  05B2  2DB5               	goto	u1725
  4409  05B3  30C9               	movlw	201
  4410  05B4  024C               	subwf	??_mTouch_Check+2,w
  4411  05B5                     u1725:	
  4412  05B5  1C03               	skipc
  4413  05B6  2DCF               	goto	l2534
  4414  05B7  0020               	movlb	0	; select bank0
  4415  05B8  084F               	movf	mTouch_Check@chan,w
  4416  05B9  3E34               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4417  05BA  0086               	movwf	6
  4418  05BB  0187               	clrf	7
  4419  05BC  0801               	movf	1,w
  4420  05BD  1D03               	btfss	3,2
  4421  05BE  2DCF               	goto	l2534
  4422                           
  4423                           ;main.c: 123: {
  4424                           ;main.c: 124: mTouch_Interval[chan] = 100;
  4425  05BF  3064               	movlw	100
  4426  05C0  00CA               	movwf	??_mTouch_Check
  4427  05C1  084F               	movf	mTouch_Check@chan,w
  4428  05C2  3E34               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4429  05C3  0086               	movwf	6
  4430  05C4  0187               	clrf	7
  4431  05C5  084A               	movf	??_mTouch_Check,w
  4432  05C6  0081               	movwf	1
  4433                           
  4434                           ;main.c: 125: Buzzer_MiliSecond(100);
  4435  05C7  3064               	movlw	100
  4436  05C8  00C8               	movwf	Buzzer_MiliSecond@time
  4437  05C9  3000               	movlw	0
  4438  05CA  00C9               	movwf	Buzzer_MiliSecond@time+1
  4439  05CB  318E  26CC         	fcall	_Buzzer_MiliSecond
  4440                           
  4441                           ;main.c: 126: return 1;
  4442  05CD  3001               	movlw	1
  4443  05CE  0008               	return
  4444  05CF                     l2534:	
  4445                           
  4446                           ;main.c: 127: }
  4447                           ;main.c: 128: return 0;
  4448  05CF  3000               	movlw	0
  4449  05D0  0008               	return
  4450  05D1                     __end_of_mTouch_Check:	
  4451                           
  4452                           	psect	text10
  4453  0ECC                     __ptext10:	
  4454 ;; *************** function _Buzzer_MiliSecond *****************
  4455 ;; Defined at:
  4456 ;;		line 38 in file "Buzzer.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  time            2    1[BANK0 ] unsigned int 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4470 ;;      Params:         0       2       0       0       0       0
  4471 ;;      Locals:         0       0       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0       0
  4473 ;;      Totals:         0       2       0       0       0       0
  4474 ;;Total ram usage:        2 bytes
  4475 ;; Hardware stack levels used:    1
  4476 ;; Hardware stack levels required when called:    3
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_mTouch_Check
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           
  4485                           ;psect for function _Buzzer_MiliSecond
  4486  0ECC                     _Buzzer_MiliSecond:	
  4487                           
  4488                           ;Buzzer.c: 40: if(count==0)
  4489                           
  4490                           ;incstack = 0
  4491                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  4492  0ECC  0020               	movlb	0	; select bank0
  4493  0ECD  0841               	movf	_count,w
  4494  0ECE  0442               	iorwf	_count+1,w
  4495  0ECF  1D03               	btfss	3,2
  4496  0ED0  0008               	return
  4497                           
  4498                           ;Buzzer.c: 41: count = time;
  4499  0ED1  0849               	movf	Buzzer_MiliSecond@time+1,w
  4500  0ED2  00C2               	movwf	_count+1
  4501  0ED3  0848               	movf	Buzzer_MiliSecond@time,w
  4502  0ED4  00C1               	movwf	_count
  4503  0ED5  0008               	return
  4504  0ED6                     __end_of_Buzzer_MiliSecond:	
  4505                           
  4506                           	psect	text11
  4507  0F58                     __ptext11:	
  4508 ;; *************** function _Timer6_Init *****************
  4509 ;; Defined at:
  4510 ;;		line 3 in file "Timer6.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4524 ;;      Params:         0       0       0       0       0       0
  4525 ;;      Locals:         0       0       0       0       0       0
  4526 ;;      Temps:          0       1       0       0       0       0
  4527 ;;      Totals:         0       1       0       0       0       0
  4528 ;;Total ram usage:        1 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    3
  4531 ;; This function calls:
  4532 ;;		Nothing
  4533 ;; This function is called by:
  4534 ;;		_main
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           
  4539                           ;psect for function _Timer6_Init
  4540  0F58                     _Timer6_Init:	
  4541                           
  4542                           ;Timer6.c: 5: PR6 = 0x7D;
  4543                           
  4544                           ;incstack = 0
  4545                           ; Regs used in _Timer6_Init: [wreg+status,2+status,0]
  4546  0F58  307D               	movlw	125
  4547  0F59  0028               	movlb	8	; select bank8
  4548  0F5A  009D               	movwf	29	;volatile
  4549                           
  4550                           ;Timer6.c: 6: TMR6 = 0x00;
  4551  0F5B  019C               	clrf	28	;volatile
  4552                           
  4553                           ;Timer6.c: 7: T6CON |= (0x03<<0);
  4554  0F5C  3003               	movlw	3
  4555  0F5D  0020               	movlb	0	; select bank0
  4556  0F5E  00C8               	movwf	??_Timer6_Init
  4557  0F5F  0848               	movf	??_Timer6_Init,w
  4558  0F60  0028               	movlb	8	; select bank8
  4559  0F61  049E               	iorwf	30,f	;volatile
  4560                           
  4561                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  4562  0F62  081E               	movf	30,w	;volatile
  4563                           
  4564                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  4565  0F63  151E               	bsf	30,2	;volatile
  4566                           
  4567                           ;Timer6.c: 11: TMR6IF = 0;
  4568  0F64  0020               	movlb	0	; select bank0
  4569  0F65  1193               	bcf	19,3	;volatile
  4570                           
  4571                           ;Timer6.c: 12: TMR6IE = 1;
  4572  0F66  0021               	movlb	1	; select bank1
  4573  0F67  1593               	bsf	19,3	;volatile
  4574                           
  4575                           ;Timer6.c: 13: PEIE = 1;
  4576  0F68  170B               	bsf	11,6	;volatile
  4577                           
  4578                           ;Timer6.c: 14: GIE = 1;
  4579  0F69  178B               	bsf	11,7	;volatile
  4580  0F6A  0008               	return
  4581  0F6B                     __end_of_Timer6_Init:	
  4582                           
  4583                           	psect	text12
  4584  0EF9                     __ptext12:	
  4585 ;; *************** function _Timer4_Init *****************
  4586 ;; Defined at:
  4587 ;;		line 3 in file "Timer4.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;		None
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;		None
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4601 ;;      Params:         0       0       0       0       0       0
  4602 ;;      Locals:         0       0       0       0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0
  4604 ;;      Totals:         0       0       0       0       0       0
  4605 ;;Total ram usage:        0 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:    3
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		_main
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           
  4616                           ;psect for function _Timer4_Init
  4617  0EF9                     _Timer4_Init:	
  4618                           
  4619                           ;Timer4.c: 5: PR4 = 0x64;
  4620                           
  4621                           ;incstack = 0
  4622                           ; Regs used in _Timer4_Init: [wreg+status,2]
  4623  0EF9  3064               	movlw	100
  4624  0EFA  0028               	movlb	8	; select bank8
  4625  0EFB  0096               	movwf	22	;volatile
  4626                           
  4627                           ;Timer4.c: 6: TMR4 = 0x00;
  4628  0EFC  0195               	clrf	21	;volatile
  4629                           
  4630                           ;Timer4.c: 7: T4CON |= (0x02<<0);
  4631  0EFD  1497               	bsf	23,1	;volatile
  4632                           
  4633                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  4634  0EFE  0817               	movf	23,w	;volatile
  4635                           
  4636                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  4637  0EFF  1517               	bsf	23,2	;volatile
  4638                           
  4639                           ;Timer4.c: 11: TMR4IF = 0;
  4640  0F00  0020               	movlb	0	; select bank0
  4641  0F01  1093               	bcf	19,1	;volatile
  4642                           
  4643                           ;Timer4.c: 12: TMR4IE = 1;
  4644  0F02  0021               	movlb	1	; select bank1
  4645  0F03  1493               	bsf	19,1	;volatile
  4646                           
  4647                           ;Timer4.c: 13: PEIE = 1;
  4648  0F04  170B               	bsf	11,6	;volatile
  4649                           
  4650                           ;Timer4.c: 14: GIE = 1;
  4651  0F05  178B               	bsf	11,7	;volatile
  4652  0F06  0008               	return
  4653  0F07                     __end_of_Timer4_Init:	
  4654                           
  4655                           	psect	text13
  4656  0E98                     __ptext13:	
  4657 ;; *************** function _Timer1_StartCount *****************
  4658 ;; Defined at:
  4659 ;;		line 31 in file "Timer1.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0, pclath, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4673 ;;      Params:         0       0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0
  4676 ;;      Totals:         0       0       0       0       0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    4
  4680 ;; This function calls:
  4681 ;;		_Timer1_ClearRecord
  4682 ;; This function is called by:
  4683 ;;		_main
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           
  4688                           ;psect for function _Timer1_StartCount
  4689  0E98                     _Timer1_StartCount:	
  4690                           
  4691                           ;Timer1.c: 33: Timer1_ClearRecord();
  4692                           
  4693                           ;incstack = 0
  4694                           ; Regs used in _Timer1_StartCount: [wreg+status,2+status,0+pclath+cstack]
  4695  0E98  3187  271F         	fcall	_Timer1_ClearRecord
  4696                           
  4697                           ;Timer1.c: 34: TMR1ON = 1;
  4698  0E9A  0020               	movlb	0	; select bank0
  4699  0E9B  1418               	bsf	24,0	;volatile
  4700  0E9C  0008               	return
  4701  0E9D                     __end_of_Timer1_StartCount:	
  4702                           
  4703                           	psect	text14
  4704  071F                     __ptext14:	
  4705 ;; *************** function _Timer1_ClearRecord *****************
  4706 ;; Defined at:
  4707 ;;		line 42 in file "Timer1.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4721 ;;      Params:         0       0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0
  4724 ;;      Totals:         0       0       0       0       0       0
  4725 ;;Total ram usage:        0 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    3
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_Timer1_StartCount
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           
  4736                           ;psect for function _Timer1_ClearRecord
  4737  071F                     _Timer1_ClearRecord:	
  4738                           
  4739                           ;Timer1.c: 44: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL; TMR1ON = 1; };
  4740                           
  4741                           ;incstack = 0
  4742                           ; Regs used in _Timer1_ClearRecord: [wreg]
  4743  071F  0020               	movlb	0	; select bank0
  4744  0720  1018               	bcf	24,0	;volatile
  4745  0721  30FF               	movlw	255
  4746  0722  0097               	movwf	23	;volatile
  4747  0723  30F5               	movlw	245
  4748  0724  0096               	movwf	22	;volatile
  4749  0725  1418               	bsf	24,0	;volatile
  4750                           
  4751                           ;Timer1.c: 45: cnts.SigmaDeltaCount= 0;
  4752  0726  3000               	movlw	0
  4753  0727  00A3               	movwf	_cnts+3
  4754  0728  3000               	movlw	0
  4755  0729  00A2               	movwf	_cnts+2
  4756  072A  3000               	movlw	0
  4757  072B  00A1               	movwf	_cnts+1
  4758  072C  3000               	movlw	0
  4759  072D  00A0               	movwf	_cnts
  4760                           
  4761                           ;Timer1.c: 46: cnts.SigmaCPM = 0;
  4762  072E  3000               	movlw	0
  4763  072F  00A7               	movwf	_cnts+7
  4764  0730  3000               	movlw	0
  4765  0731  00A6               	movwf	_cnts+6
  4766  0732  3000               	movlw	0
  4767  0733  00A5               	movwf	_cnts+5
  4768  0734  3000               	movlw	0
  4769  0735  00A4               	movwf	_cnts+4
  4770                           
  4771                           ;Timer1.c: 47: cnts.Num_of_Detect = 0;
  4772  0736  3000               	movlw	0
  4773  0737  00AD               	movwf	_cnts+13
  4774  0738  3000               	movlw	0
  4775  0739  00AC               	movwf	_cnts+12
  4776  073A  3000               	movlw	0
  4777  073B  00AB               	movwf	_cnts+11
  4778  073C  3000               	movlw	0
  4779  073D  00AA               	movwf	_cnts+10
  4780                           
  4781                           ;Timer1.c: 48: tcnt.Delta_t = 0;
  4782  073E  3000               	movlw	0
  4783  073F  00B1               	movwf	_tcnt+3
  4784  0740  3000               	movlw	0
  4785  0741  00B0               	movwf	_tcnt+2
  4786  0742  3000               	movlw	0
  4787  0743  00AF               	movwf	_tcnt+1
  4788  0744  3000               	movlw	0
  4789  0745  00AE               	movwf	_tcnt
  4790  0746  0008               	return
  4791  0747                     __end_of_Timer1_ClearRecord:	
  4792                           
  4793                           	psect	text15
  4794  0794                     __ptext15:	
  4795 ;; *************** function _Timer1_Init *****************
  4796 ;; Defined at:
  4797 ;;		line 6 in file "Timer1.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4811 ;;      Params:         0       0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0
  4813 ;;      Temps:          0       1       0       0       0       0
  4814 ;;      Totals:         0       1       0       0       0       0
  4815 ;;Total ram usage:        1 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    3
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_main
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           
  4826                           ;psect for function _Timer1_Init
  4827  0794                     _Timer1_Init:	
  4828                           
  4829                           ;Timer1.c: 8: TRISB |= (1<<6);
  4830                           
  4831                           ;incstack = 0
  4832                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4833  0794  0021               	movlb	1	; select bank1
  4834  0795  170D               	bsf	13,6	;volatile
  4835                           
  4836                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  4837  0796  30BF               	movlw	191
  4838  0797  0020               	movlb	0	; select bank0
  4839  0798  00C8               	movwf	??_Timer1_Init
  4840  0799  0848               	movf	??_Timer1_Init,w
  4841  079A  0023               	movlb	3	; select bank3
  4842  079B  058D               	andwf	13,f	;volatile
  4843                           
  4844                           ;Timer1.c: 10: WPUB |= (1<<6);
  4845  079C  0024               	movlb	4	; select bank4
  4846  079D  170D               	bsf	13,6	;volatile
  4847                           
  4848                           ;Timer1.c: 12: T1CON |= (0x01<<2);
  4849  079E  0020               	movlb	0	; select bank0
  4850  079F  1518               	bsf	24,2	;volatile
  4851                           
  4852                           ;Timer1.c: 13: T1CON &= ~(0x01<<3);
  4853  07A0  30F7               	movlw	247
  4854  07A1  00C8               	movwf	??_Timer1_Init
  4855  07A2  0848               	movf	??_Timer1_Init,w
  4856  07A3  0598               	andwf	24,f	;volatile
  4857                           
  4858                           ;Timer1.c: 14: T1CON |= (0x00<<4);
  4859  07A4  0818               	movf	24,w	;volatile
  4860                           
  4861                           ;Timer1.c: 15: T1CON |= (0x02<<6);
  4862  07A5  1798               	bsf	24,7	;volatile
  4863                           
  4864                           ;Timer1.c: 17: T1GCON = 0x00;
  4865  07A6  0199               	clrf	25	;volatile
  4866                           
  4867                           ;Timer1.c: 19: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL; TMR1ON = 1; };
  4868  07A7  1018               	bcf	24,0	;volatile
  4869  07A8  30FF               	movlw	255
  4870  07A9  0097               	movwf	23	;volatile
  4871  07AA  30F5               	movlw	245
  4872  07AB  0096               	movwf	22	;volatile
  4873  07AC  1418               	bsf	24,0	;volatile
  4874                           
  4875                           ;Timer1.c: 21: TMR1IF = 0;
  4876  07AD  1011               	bcf	17,0	;volatile
  4877                           
  4878                           ;Timer1.c: 22: TMR1IE = 1;
  4879  07AE  0021               	movlb	1	; select bank1
  4880  07AF  1411               	bsf	17,0	;volatile
  4881                           
  4882                           ;Timer1.c: 23: PEIE = 1;
  4883  07B0  170B               	bsf	11,6	;volatile
  4884                           
  4885                           ;Timer1.c: 24: GIE = 1;
  4886  07B1  178B               	bsf	11,7	;volatile
  4887                           
  4888                           ;Timer1.c: 26: TMR1ON = 0;
  4889  07B2  0020               	movlb	0	; select bank0
  4890  07B3  1018               	bcf	24,0	;volatile
  4891  07B4  0008               	return
  4892  07B5                     __end_of_Timer1_Init:	
  4893                           
  4894                           	psect	text16
  4895  0EC2                     __ptext16:	
  4896 ;; *************** function _Timer1_GetCountSum *****************
  4897 ;; Defined at:
  4898 ;;		line 51 in file "Timer1.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  4    1[BANK0 ] unsigned long 
  4905 ;; Registers used:
  4906 ;;		wreg
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4912 ;;      Params:         0       4       0       0       0       0
  4913 ;;      Locals:         0       0       0       0       0       0
  4914 ;;      Temps:          0       0       0       0       0       0
  4915 ;;      Totals:         0       4       0       0       0       0
  4916 ;;Total ram usage:        4 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    3
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_main
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           
  4927                           ;psect for function _Timer1_GetCountSum
  4928  0EC2                     _Timer1_GetCountSum:	
  4929                           
  4930                           ;Timer1.c: 53: return cnts.SigmaDeltaCount;
  4931                           
  4932                           ;incstack = 0
  4933                           ; Regs used in _Timer1_GetCountSum: [wreg]
  4934  0EC2  0020               	movlb	0	; select bank0
  4935  0EC3  0823               	movf	_cnts+3,w
  4936  0EC4  00CB               	movwf	?_Timer1_GetCountSum+3
  4937  0EC5  0822               	movf	_cnts+2,w
  4938  0EC6  00CA               	movwf	?_Timer1_GetCountSum+2
  4939  0EC7  0821               	movf	_cnts+1,w
  4940  0EC8  00C9               	movwf	?_Timer1_GetCountSum+1
  4941  0EC9  0820               	movf	_cnts,w
  4942  0ECA  00C8               	movwf	?_Timer1_GetCountSum
  4943  0ECB  0008               	return
  4944  0ECC                     __end_of_Timer1_GetCountSum:	
  4945                           
  4946                           	psect	text17
  4947  0E9D                     __ptext17:	
  4948 ;; *************** function _Timer1_GetCPM *****************
  4949 ;; Defined at:
  4950 ;;		line 56 in file "Timer1.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  2    1[BANK0 ] unsigned int 
  4957 ;; Registers used:
  4958 ;;		wreg
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4964 ;;      Params:         0       2       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0       0
  4967 ;;      Totals:         0       2       0       0       0       0
  4968 ;;Total ram usage:        2 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    3
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_main
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           
  4979                           ;psect for function _Timer1_GetCPM
  4980  0E9D                     _Timer1_GetCPM:	
  4981                           
  4982                           ;Timer1.c: 58: return cnts.AverageCPM;
  4983                           
  4984                           ;incstack = 0
  4985                           ; Regs used in _Timer1_GetCPM: [wreg]
  4986  0E9D  0020               	movlb	0	; select bank0
  4987  0E9E  0829               	movf	_cnts+9,w
  4988  0E9F  00C9               	movwf	?_Timer1_GetCPM+1
  4989  0EA0  0828               	movf	_cnts+8,w
  4990  0EA1  00C8               	movwf	?_Timer1_GetCPM
  4991  0EA2  0008               	return
  4992  0EA3                     __end_of_Timer1_GetCPM:	
  4993                           
  4994                           	psect	text18
  4995  0478                     __ptext18:	
  4996 ;; *************** function _LCD_Init *****************
  4997 ;; Defined at:
  4998 ;;		line 28 in file "LCD.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0, pclath, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5012 ;;      Params:         0       0       0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0
  5014 ;;      Temps:          0       2       0       0       0       0
  5015 ;;      Totals:         0       2       0       0       0       0
  5016 ;;Total ram usage:        2 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    5
  5019 ;; This function calls:
  5020 ;;		_LCD_DisplayClear
  5021 ;;		_LCD_WriteData
  5022 ;; This function is called by:
  5023 ;;		_main
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           
  5028                           ;psect for function _LCD_Init
  5029  0478                     _LCD_Init:	
  5030                           
  5031                           ;LCD.c: 30: LATA3 = 0;
  5032                           
  5033                           ;incstack = 0
  5034                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5035  0478  0022               	movlb	2	; select bank2
  5036  0479  118C               	bcf	12,3	;volatile
  5037                           
  5038                           ;LCD.c: 31: LATA4 = 0;
  5039  047A  120C               	bcf	12,4	;volatile
  5040                           
  5041                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  5042  047B  3002               	movlw	2
  5043  047C  0020               	movlb	0	; select bank0
  5044  047D  00CD               	movwf	??_LCD_Init+1
  5045  047E  3038               	movlw	56
  5046  047F  00CC               	movwf	??_LCD_Init
  5047  0480  30AD               	movlw	173
  5048  0481                     u2137:	
  5049  0481  0B89               	decfsz	9,f
  5050  0482  2C81               	goto	u2137
  5051  0483  0BCC               	decfsz	??_LCD_Init,f
  5052  0484  2C81               	goto	u2137
  5053  0485  0BCD               	decfsz	??_LCD_Init+1,f
  5054  0486  2C81               	goto	u2137
  5055                           
  5056                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  5057  0487  3003               	movlw	3
  5058  0488  0020               	movlb	0	; select bank0
  5059  0489  008D               	movwf	13	;volatile
  5060                           
  5061                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5062  048A  0022               	movlb	2	; select bank2
  5063  048B  160C               	bsf	12,4	;volatile
  5064  048C  3200               	nop2	;2 cycle nop
  5065  048D  3200               	nop2	;2 cycle nop
  5066  048E  3200               	nop2	;2 cycle nop
  5067  048F  3200               	nop2	;2 cycle nop
  5068  0490  0022               	movlb	2	; select bank2
  5069  0491  120C               	bcf	12,4	;volatile
  5070  0492  3200               	nop2	;2 cycle nop
  5071  0493  3200               	nop2	;2 cycle nop
  5072  0494  3200               	nop2	;2 cycle nop
  5073  0495  3200               	nop2	;2 cycle nop
  5074                           
  5075                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  5076  0496  3034               	movlw	52
  5077  0497  0020               	movlb	0	; select bank0
  5078  0498  00CC               	movwf	??_LCD_Init
  5079  0499  30F1               	movlw	241
  5080  049A                     u2147:	
  5081  049A  0B89               	decfsz	9,f
  5082  049B  2C9A               	goto	u2147
  5083  049C  0BCC               	decfsz	??_LCD_Init,f
  5084  049D  2C9A               	goto	u2147
  5085  049E  3200               	nop2
  5086                           
  5087                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5088  049F  0022               	movlb	2	; select bank2
  5089  04A0  160C               	bsf	12,4	;volatile
  5090  04A1  3200               	nop2	;2 cycle nop
  5091  04A2  3200               	nop2	;2 cycle nop
  5092  04A3  3200               	nop2	;2 cycle nop
  5093  04A4  3200               	nop2	;2 cycle nop
  5094  04A5  0022               	movlb	2	; select bank2
  5095  04A6  120C               	bcf	12,4	;volatile
  5096  04A7  3200               	nop2	;2 cycle nop
  5097  04A8  3200               	nop2	;2 cycle nop
  5098  04A9  3200               	nop2	;2 cycle nop
  5099  04AA  3200               	nop2	;2 cycle nop
  5100                           
  5101                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5102  04AB  3005               	movlw	5
  5103  04AC  0020               	movlb	0	; select bank0
  5104  04AD  00CC               	movwf	??_LCD_Init
  5105  04AE  3026               	movlw	38
  5106  04AF                     u2157:	
  5107  04AF  0B89               	decfsz	9,f
  5108  04B0  2CAF               	goto	u2157
  5109  04B1  0BCC               	decfsz	??_LCD_Init,f
  5110  04B2  2CAF               	goto	u2157
  5111  04B3  0000               	nop
  5112                           
  5113                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5114  04B4  0022               	movlb	2	; select bank2
  5115  04B5  160C               	bsf	12,4	;volatile
  5116  04B6  3200               	nop2	;2 cycle nop
  5117  04B7  3200               	nop2	;2 cycle nop
  5118  04B8  3200               	nop2	;2 cycle nop
  5119  04B9  3200               	nop2	;2 cycle nop
  5120  04BA  0022               	movlb	2	; select bank2
  5121  04BB  120C               	bcf	12,4	;volatile
  5122  04BC  3200               	nop2	;2 cycle nop
  5123  04BD  3200               	nop2	;2 cycle nop
  5124  04BE  3200               	nop2	;2 cycle nop
  5125  04BF  3200               	nop2	;2 cycle nop
  5126                           
  5127                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5128  04C0  3005               	movlw	5
  5129  04C1  0020               	movlb	0	; select bank0
  5130  04C2  00CC               	movwf	??_LCD_Init
  5131  04C3  3026               	movlw	38
  5132  04C4                     u2167:	
  5133  04C4  0B89               	decfsz	9,f
  5134  04C5  2CC4               	goto	u2167
  5135  04C6  0BCC               	decfsz	??_LCD_Init,f
  5136  04C7  2CC4               	goto	u2167
  5137  04C8  0000               	nop
  5138                           
  5139                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  5140  04C9  3002               	movlw	2
  5141  04CA  0020               	movlb	0	; select bank0
  5142  04CB  008D               	movwf	13	;volatile
  5143                           
  5144                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5145  04CC  0022               	movlb	2	; select bank2
  5146  04CD  160C               	bsf	12,4	;volatile
  5147  04CE  3200               	nop2	;2 cycle nop
  5148  04CF  3200               	nop2	;2 cycle nop
  5149  04D0  3200               	nop2	;2 cycle nop
  5150  04D1  3200               	nop2	;2 cycle nop
  5151  04D2  0022               	movlb	2	; select bank2
  5152  04D3  120C               	bcf	12,4	;volatile
  5153  04D4  3200               	nop2	;2 cycle nop
  5154  04D5  3200               	nop2	;2 cycle nop
  5155  04D6  3200               	nop2	;2 cycle nop
  5156  04D7  3200               	nop2	;2 cycle nop
  5157                           
  5158                           ;LCD.c: 44: LCD_WriteData(0x28);
  5159  04D8  3028               	movlw	40
  5160  04D9  3186  2615  3184   	fcall	_LCD_WriteData
  5161                           
  5162                           ;LCD.c: 45: LCD_WriteData(0x0c);
  5163  04DC  300C               	movlw	12
  5164  04DD  3186  2615  3184   	fcall	_LCD_WriteData
  5165                           
  5166                           ;LCD.c: 46: LCD_DisplayClear();
  5167  04E0  318F  2726  3184   	fcall	_LCD_DisplayClear
  5168                           
  5169                           ;LCD.c: 47: LCD_WriteData(0x06);
  5170  04E3  3006               	movlw	6
  5171  04E4  3186  2615         	fcall	_LCD_WriteData
  5172  04E6  0008               	return
  5173  04E7                     __end_of_LCD_Init:	
  5174                           
  5175                           	psect	text19
  5176  0F26                     __ptext19:	
  5177 ;; *************** function _LCD_DisplayClear *****************
  5178 ;; Defined at:
  5179 ;;		line 73 in file "LCD.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;		None
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2, status,0, pclath, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5193 ;;      Params:         0       0       0       0       0       0
  5194 ;;      Locals:         0       0       0       0       0       0
  5195 ;;      Temps:          0       1       0       0       0       0
  5196 ;;      Totals:         0       1       0       0       0       0
  5197 ;;Total ram usage:        1 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    4
  5200 ;; This function calls:
  5201 ;;		_LCD_WriteData
  5202 ;; This function is called by:
  5203 ;;		_LCD_Init
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           
  5208                           ;psect for function _LCD_DisplayClear
  5209  0F26                     _LCD_DisplayClear:	
  5210                           
  5211                           ;LCD.c: 75: LATA3 = 0;
  5212                           
  5213                           ;incstack = 0
  5214                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  5215  0F26  0022               	movlb	2	; select bank2
  5216  0F27  118C               	bcf	12,3	;volatile
  5217                           
  5218                           ;LCD.c: 76: LCD_WriteData(0x01);
  5219  0F28  3001               	movlw	1
  5220  0F29  3186  2615  318F   	fcall	_LCD_WriteData
  5221                           
  5222                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  5223  0F2C  3015               	movlw	21
  5224  0F2D  0020               	movlb	0	; select bank0
  5225  0F2E  00CB               	movwf	??_LCD_DisplayClear
  5226  0F2F  30C6               	movlw	198
  5227  0F30                     u2177:	
  5228  0F30  0B89               	decfsz	9,f
  5229  0F31  2F30               	goto	u2177
  5230  0F32  0BCB               	decfsz	??_LCD_DisplayClear,f
  5231  0F33  2F30               	goto	u2177
  5232  0F34  0000               	nop
  5233  0F35  0008               	return
  5234  0F36                     __end_of_LCD_DisplayClear:	
  5235                           
  5236                           	psect	text20
  5237  0F16                     __ptext20:	
  5238 ;; *************** function _LCD_CursorHome *****************
  5239 ;; Defined at:
  5240 ;;		line 84 in file "LCD.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;		None
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;		None
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0, pclath, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5254 ;;      Params:         0       0       0       0       0       0
  5255 ;;      Locals:         0       0       0       0       0       0
  5256 ;;      Temps:          0       1       0       0       0       0
  5257 ;;      Totals:         0       1       0       0       0       0
  5258 ;;Total ram usage:        1 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; Hardware stack levels required when called:    4
  5261 ;; This function calls:
  5262 ;;		_LCD_WriteData
  5263 ;; This function is called by:
  5264 ;;		_main
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           
  5269                           ;psect for function _LCD_CursorHome
  5270  0F16                     _LCD_CursorHome:	
  5271                           
  5272                           ;LCD.c: 86: LATA3 = 0;
  5273                           
  5274                           ;incstack = 0
  5275                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  5276  0F16  0022               	movlb	2	; select bank2
  5277  0F17  118C               	bcf	12,3	;volatile
  5278                           
  5279                           ;LCD.c: 87: LCD_WriteData(0x02);
  5280  0F18  3002               	movlw	2
  5281  0F19  3186  2615  318F   	fcall	_LCD_WriteData
  5282                           
  5283                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  5284  0F1C  3015               	movlw	21
  5285  0F1D  0020               	movlb	0	; select bank0
  5286  0F1E  00CB               	movwf	??_LCD_CursorHome
  5287  0F1F  30C6               	movlw	198
  5288  0F20                     u2187:	
  5289  0F20  0B89               	decfsz	9,f
  5290  0F21  2F20               	goto	u2187
  5291  0F22  0BCB               	decfsz	??_LCD_CursorHome,f
  5292  0F23  2F20               	goto	u2187
  5293  0F24  0000               	nop
  5294  0F25  0008               	return
  5295  0F26                     __end_of_LCD_CursorHome:	
  5296                           
  5297                           	psect	text21
  5298  0615                     __ptext21:	
  5299 ;; *************** function _LCD_WriteData *****************
  5300 ;; Defined at:
  5301 ;;		line 15 in file "LCD.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  point           1    wreg     char 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  point           1    3[BANK0 ] char 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      void 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2, status,0
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5315 ;;      Params:         0       0       0       0       0       0
  5316 ;;      Locals:         0       1       0       0       0       0
  5317 ;;      Temps:          0       2       0       0       0       0
  5318 ;;      Totals:         0       3       0       0       0       0
  5319 ;;Total ram usage:        3 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:    3
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_LCD_Init
  5326 ;;		_putch
  5327 ;;		_LCD_DisplayClear
  5328 ;;		_LCD_CursorHome
  5329 ;;		_LCD_Put
  5330 ;;		_LCD_CursorPosition
  5331 ;;		_LCD_CursorShift
  5332 ;;		_LCD_DispShift
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           
  5337                           ;psect for function _LCD_WriteData
  5338  0615                     _LCD_WriteData:	
  5339                           
  5340                           ;incstack = 0
  5341                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  5342                           ;LCD_WriteData@point stored from wreg
  5343  0615  0020               	movlb	0	; select bank0
  5344  0616  00CA               	movwf	LCD_WriteData@point
  5345                           
  5346                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  5347  0617  30D5               	movlw	213
  5348  0618                     u2197:	
  5349  0618  0B89               	decfsz	9,f
  5350  0619  2E18               	goto	u2197
  5351  061A  0000               	nop
  5352                           
  5353                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  5354  061B  0020               	movlb	0	; select bank0
  5355  061C  084A               	movf	LCD_WriteData@point,w
  5356  061D  00C8               	movwf	??_LCD_WriteData
  5357  061E  3004               	movlw	4
  5358  061F                     u1255:	
  5359  061F  1003               	clrc
  5360  0620  1BC8               	btfsc	??_LCD_WriteData,7
  5361  0621  1403               	setc
  5362  0622  0CC8               	rrf	??_LCD_WriteData,f
  5363  0623  0B89               	decfsz	9,f
  5364  0624  2E1F               	goto	u1255
  5365  0625  3003               	movlw	3
  5366  0626  0548               	andwf	??_LCD_WriteData,w
  5367  0627  00C9               	movwf	??_LCD_WriteData+1
  5368  0628  0E4A               	swapf	LCD_WriteData@point,w
  5369  0629  390F               	andlw	15
  5370  062A  1989               	btfsc	9,3
  5371  062B  38F0               	iorlw	240
  5372  062C  390C               	andlw	12
  5373  062D  0709               	addwf	9,w
  5374  062E  0449               	iorwf	??_LCD_WriteData+1,w
  5375  062F  008D               	movwf	13	;volatile
  5376                           
  5377                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5378  0630  0022               	movlb	2	; select bank2
  5379  0631  160C               	bsf	12,4	;volatile
  5380  0632  3200               	nop2	;2 cycle nop
  5381  0633  3200               	nop2	;2 cycle nop
  5382  0634  3200               	nop2	;2 cycle nop
  5383  0635  3200               	nop2	;2 cycle nop
  5384  0636  0022               	movlb	2	; select bank2
  5385  0637  120C               	bcf	12,4	;volatile
  5386  0638  3200               	nop2	;2 cycle nop
  5387  0639  3200               	nop2	;2 cycle nop
  5388  063A  3200               	nop2	;2 cycle nop
  5389  063B  3200               	nop2	;2 cycle nop
  5390                           
  5391                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  5392  063C  3003               	movlw	3
  5393  063D  0020               	movlb	0	; select bank0
  5394  063E  054A               	andwf	LCD_WriteData@point,w
  5395  063F  00C8               	movwf	??_LCD_WriteData
  5396  0640  084A               	movf	LCD_WriteData@point,w
  5397  0641  390C               	andlw	12
  5398  0642  0709               	addwf	9,w
  5399  0643  0448               	iorwf	??_LCD_WriteData,w
  5400  0644  008D               	movwf	13	;volatile
  5401                           
  5402                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5403  0645  0022               	movlb	2	; select bank2
  5404  0646  160C               	bsf	12,4	;volatile
  5405  0647  3200               	nop2	;2 cycle nop
  5406  0648  3200               	nop2	;2 cycle nop
  5407  0649  3200               	nop2	;2 cycle nop
  5408  064A  3200               	nop2	;2 cycle nop
  5409  064B  0022               	movlb	2	; select bank2
  5410  064C  120C               	bcf	12,4	;volatile
  5411  064D  3200               	nop2	;2 cycle nop
  5412  064E  3200               	nop2	;2 cycle nop
  5413  064F  3200               	nop2	;2 cycle nop
  5414  0650  3200               	nop2	;2 cycle nop
  5415  0651  0008               	return
  5416  0652                     __end_of_LCD_WriteData:	
  5417                           
  5418                           	psect	text22
  5419  06C3                     __ptext22:	
  5420 ;; *************** function _DAC_WriteVoltage *****************
  5421 ;; Defined at:
  5422 ;;		line 27 in file "MCP4726.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;  volue           2   17[BANK0 ] unsigned int 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  1    wreg      char 
  5429 ;; Registers used:
  5430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5436 ;;      Params:         0       2       0       0       0       0
  5437 ;;      Locals:         0       0       0       0       0       0
  5438 ;;      Temps:          0       3       0       0       0       0
  5439 ;;      Totals:         0       5       0       0       0       0
  5440 ;;Total ram usage:        5 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; Hardware stack levels required when called:    5
  5443 ;; This function calls:
  5444 ;;		_I2C_Transmit
  5445 ;; This function is called by:
  5446 ;;		_main
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           
  5451                           ;psect for function _DAC_WriteVoltage
  5452  06C3                     _DAC_WriteVoltage:	
  5453                           
  5454                           ;MCP4726.c: 29: VoltageReg.Command = (uint8_t)(0x0);
  5455                           
  5456                           ;incstack = 0
  5457                           ; Regs used in _DAC_WriteVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5458  06C3  303F               	movlw	-193
  5459  06C4  0020               	movlb	0	; select bank0
  5460  06C5  05C4               	andwf	_VoltageReg,f
  5461                           
  5462                           ;MCP4726.c: 30: VoltageReg.PowerDown = ConfigReg.PowerDown;
  5463  06C6  0C46               	rrf	_ConfigReg,w
  5464  06C7  3903               	andlw	3
  5465  06C8  00DA               	movwf	??_DAC_WriteVoltage
  5466  06C9  0EDA               	swapf	??_DAC_WriteVoltage,f
  5467  06CA  0844               	movf	_VoltageReg,w
  5468  06CB  065A               	xorwf	??_DAC_WriteVoltage,w
  5469  06CC  39CF               	andlw	-49
  5470  06CD  065A               	xorwf	??_DAC_WriteVoltage,w
  5471  06CE  00C4               	movwf	_VoltageReg
  5472                           
  5473                           ;MCP4726.c: 31: VoltageReg.Voltage4bits = (uint8_t)((volue&0x0F00)>>8);
  5474  06CF  0859               	movf	DAC_WriteVoltage@volue+1,w
  5475  06D0  00DB               	movwf	??_DAC_WriteVoltage+1
  5476  06D1  0858               	movf	DAC_WriteVoltage@volue,w
  5477  06D2  00DA               	movwf	??_DAC_WriteVoltage
  5478  06D3  085B               	movf	??_DAC_WriteVoltage+1,w
  5479  06D4  00DA               	movwf	??_DAC_WriteVoltage
  5480  06D5  01DB               	clrf	??_DAC_WriteVoltage+1
  5481  06D6  300F               	movlw	15
  5482  06D7  055A               	andwf	??_DAC_WriteVoltage,w
  5483  06D8  00DC               	movwf	??_DAC_WriteVoltage+2
  5484  06D9  0844               	movf	_VoltageReg,w
  5485  06DA  065C               	xorwf	??_DAC_WriteVoltage+2,w
  5486  06DB  39F0               	andlw	-16
  5487  06DC  065C               	xorwf	??_DAC_WriteVoltage+2,w
  5488  06DD  00C4               	movwf	_VoltageReg
  5489                           
  5490                           ;MCP4726.c: 32: VoltageReg.Voltage8bits = (uint8_t)(volue&0x00FF);
  5491  06DE  0858               	movf	DAC_WriteVoltage@volue,w
  5492  06DF  00DA               	movwf	??_DAC_WriteVoltage
  5493  06E0  085A               	movf	??_DAC_WriteVoltage,w
  5494  06E1  00C5               	movwf	_VoltageReg+1
  5495                           
  5496                           ;MCP4726.c: 34: return I2C_Transmit(I2C2_MODULE,0x60,VoltageReg.Voltage_Data,2);
  5497                           ;	Return value of _DAC_WriteVoltage is never used
  5498  06E2  3060               	movlw	96
  5499  06E3  00DA               	movwf	??_DAC_WriteVoltage
  5500  06E4  085A               	movf	??_DAC_WriteVoltage,w
  5501  06E5  00D0               	movwf	I2C_Transmit@address
  5502  06E6  3044               	movlw	(low (_VoltageReg| 0))& (0+255)
  5503  06E7  00DB               	movwf	??_DAC_WriteVoltage+1
  5504  06E8  085B               	movf	??_DAC_WriteVoltage+1,w
  5505  06E9  00D1               	movwf	I2C_Transmit@pData
  5506  06EA  3002               	movlw	2
  5507  06EB  00DC               	movwf	??_DAC_WriteVoltage+2
  5508  06EC  085C               	movf	??_DAC_WriteVoltage+2,w
  5509  06ED  00D2               	movwf	I2C_Transmit@size
  5510  06EE  3001               	movlw	1
  5511  06EF  318F  27AD         	fcall	_I2C_Transmit
  5512  06F1  0008               	return
  5513  06F2                     __end_of_DAC_WriteVoltage:	
  5514                           
  5515                           	psect	text23
  5516  07B5                     __ptext23:	
  5517 ;; *************** function _DAC_Initialize *****************
  5518 ;; Defined at:
  5519 ;;		line 14 in file "MCP4726.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;		None
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;		None
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5533 ;;      Params:         0       0       0       0       0       0
  5534 ;;      Locals:         0       0       0       0       0       0
  5535 ;;      Temps:          0       2       0       0       0       0
  5536 ;;      Totals:         0       2       0       0       0       0
  5537 ;;Total ram usage:        2 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    6
  5540 ;; This function calls:
  5541 ;;		_I2C_Init
  5542 ;;		_I2C_Transmit
  5543 ;; This function is called by:
  5544 ;;		_main
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           
  5549                           ;psect for function _DAC_Initialize
  5550  07B5                     _DAC_Initialize:	
  5551                           
  5552                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  5553                           
  5554                           ;incstack = 0
  5555                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5556  07B5  0020               	movlb	0	; select bank0
  5557  07B6  01CD               	clrf	I2C_Init@address
  5558  07B7  01CE               	clrf	I2C_Init@mode
  5559  07B8  01CF               	clrf	I2C_Init@Speed
  5560  07B9  3001               	movlw	1
  5561  07BA  318F  2794  3187   	fcall	_I2C_Init
  5562                           
  5563                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  5564  07BD  0020               	movlb	0	; select bank0
  5565  07BE  0846               	movf	_ConfigReg,w
  5566  07BF  391F               	andlw	-225
  5567  07C0  3880               	iorlw	128
  5568  07C1  00C6               	movwf	_ConfigReg
  5569                           
  5570                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  5571  07C2  1046               	bcf	_ConfigReg,0
  5572                           
  5573                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  5574  07C3  30F9               	movlw	-7
  5575  07C4  05C6               	andwf	_ConfigReg,f
  5576                           
  5577                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  5578  07C5  30E7               	movlw	-25
  5579  07C6  05C6               	andwf	_ConfigReg,f
  5580                           
  5581                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  5582  07C7  3060               	movlw	96
  5583  07C8  00D8               	movwf	??_DAC_Initialize
  5584  07C9  0858               	movf	??_DAC_Initialize,w
  5585  07CA  00D0               	movwf	I2C_Transmit@address
  5586  07CB  3046               	movlw	(low (_ConfigReg| 0))& (0+255)
  5587  07CC  00D9               	movwf	??_DAC_Initialize+1
  5588  07CD  0859               	movf	??_DAC_Initialize+1,w
  5589  07CE  00D1               	movwf	I2C_Transmit@pData
  5590  07CF  01D2               	clrf	I2C_Transmit@size
  5591  07D0  0AD2               	incf	I2C_Transmit@size,f
  5592  07D1  3001               	movlw	1
  5593  07D2  318F  27AD         	fcall	_I2C_Transmit
  5594  07D4  0008               	return
  5595  07D5                     __end_of_DAC_Initialize:	
  5596                           
  5597                           	psect	text24
  5598  0FAD                     __ptext24:	
  5599 ;; *************** function _I2C_Transmit *****************
  5600 ;; Defined at:
  5601 ;;		line 23 in file "I2C_Common.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  I2Cx            1    wreg     enum E3178
  5604 ;;  address         1    9[BANK0 ] unsigned char 
  5605 ;;  pData           1   10[BANK0 ] PTR unsigned char 
  5606 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5607 ;;  size            1   11[BANK0 ] unsigned char 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  I2Cx            1   15[BANK0 ] enum E3178
  5610 ;;  result          1   16[BANK0 ] char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      char 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5620 ;;      Params:         0       3       0       0       0       0
  5621 ;;      Locals:         0       2       0       0       0       0
  5622 ;;      Temps:          0       3       0       0       0       0
  5623 ;;      Totals:         0       8       0       0       0       0
  5624 ;;Total ram usage:        8 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    4
  5627 ;; This function calls:
  5628 ;;		_I2C2_Transmit
  5629 ;; This function is called by:
  5630 ;;		_DAC_Initialize
  5631 ;;		_DAC_WriteVoltage
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           
  5636                           ;psect for function _I2C_Transmit
  5637  0FAD                     _I2C_Transmit:	
  5638                           
  5639                           ;incstack = 0
  5640                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5641                           ;I2C_Transmit@I2Cx stored from wreg
  5642  0FAD  0020               	movlb	0	; select bank0
  5643  0FAE  00D6               	movwf	I2C_Transmit@I2Cx
  5644                           
  5645                           ;I2C_Common.c: 25: int8_t result;
  5646                           ;I2C_Common.c: 27: switch(I2Cx)
  5647  0FAF  2FC1               	goto	l2076
  5648  0FB0                     l2072:	
  5649                           ;I2C_Common.c: 28: {
  5650                           ;I2C_Common.c: 33: case I2C2_MODULE:
  5651                           
  5652                           
  5653                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  5654  0FB0  0851               	movf	I2C_Transmit@pData,w
  5655  0FB1  00D3               	movwf	??_I2C_Transmit
  5656  0FB2  0853               	movf	??_I2C_Transmit,w
  5657  0FB3  00C8               	movwf	I2C2_Transmit@pData
  5658  0FB4  0852               	movf	I2C_Transmit@size,w
  5659  0FB5  00D4               	movwf	??_I2C_Transmit+1
  5660  0FB6  0854               	movf	??_I2C_Transmit+1,w
  5661  0FB7  00C9               	movwf	I2C2_Transmit@size
  5662  0FB8  0850               	movf	I2C_Transmit@address,w
  5663  0FB9  3182  22D4  318F   	fcall	_I2C2_Transmit
  5664  0FBC  0020               	movlb	0	; select bank0
  5665  0FBD  00D5               	movwf	??_I2C_Transmit+2
  5666  0FBE  0855               	movf	??_I2C_Transmit+2,w
  5667  0FBF  00D7               	movwf	I2C_Transmit@result
  5668                           
  5669                           ;I2C_Common.c: 36: }
  5670                           
  5671                           ;I2C_Common.c: 35: break;
  5672  0FC0  2FC6               	goto	l2078
  5673  0FC1                     l2076:	
  5674  0FC1  0856               	movf	I2C_Transmit@I2Cx,w
  5675                           
  5676                           ; Switch size 1, requested type "space"
  5677                           ; Number of cases is 1, Range of values is 1 to 1
  5678                           ; switch strategies available:
  5679                           ; Name         Instructions Cycles
  5680                           ; simple_byte            4     3 (average)
  5681                           ; direct_byte           11     9 (fixed)
  5682                           ; jumptable            263     9 (fixed)
  5683                           ;	Chosen strategy is simple_byte
  5684  0FC2  3A01               	xorlw	1	; case 1
  5685  0FC3  1903               	skipnz
  5686  0FC4  2FB0               	goto	l2072
  5687  0FC5  2FC6               	goto	l2078
  5688  0FC6                     l2078:	
  5689                           
  5690                           ;I2C_Common.c: 37: return result;
  5691  0FC6  0857               	movf	I2C_Transmit@result,w
  5692  0FC7  0008               	return
  5693  0FC8                     __end_of_I2C_Transmit:	
  5694                           
  5695                           	psect	text25
  5696  02D4                     __ptext25:	
  5697 ;; *************** function _I2C2_Transmit *****************
  5698 ;; Defined at:
  5699 ;;		line 52 in file "I2C2.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  address         1    wreg     unsigned char 
  5702 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  5703 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5704 ;;  size            1    2[BANK0 ] unsigned char 
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;  address         1    5[BANK0 ] unsigned char 
  5707 ;;  i               1    7[BANK0 ] unsigned char 
  5708 ;;  i               1    6[BANK0 ] unsigned char 
  5709 ;;  result          1    8[BANK0 ] char 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      char 
  5712 ;; Registers used:
  5713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5719 ;;      Params:         0       2       0       0       0       0
  5720 ;;      Locals:         0       4       0       0       0       0
  5721 ;;      Temps:          0       2       0       0       0       0
  5722 ;;      Totals:         0       8       0       0       0       0
  5723 ;;Total ram usage:        8 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    3
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		_I2C_Transmit
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           
  5734                           ;psect for function _I2C2_Transmit
  5735  02D4                     _I2C2_Transmit:	
  5736                           
  5737                           ;incstack = 0
  5738                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  5739                           ;I2C2_Transmit@address stored from wreg
  5740  02D4  0020               	movlb	0	; select bank0
  5741  02D5  00CC               	movwf	I2C2_Transmit@address
  5742                           
  5743                           ;I2C2.c: 54: int8_t result = 0;
  5744  02D6  01CF               	clrf	I2C2_Transmit@result
  5745                           
  5746                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  5747  02D7  2B60               	goto	l2024
  5748  02D8                     l1980:	
  5749                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5750                           
  5751                           ;I2C2.c: 57: {
  5752                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  5753                           
  5754  02D8  3005               	movlw	5
  5755  02D9  0024               	movlb	4	; select bank4
  5756  02DA  051C               	andwf	28,w	;volatile
  5757  02DB  0020               	movlb	0	; select bank0
  5758  02DC  00CA               	movwf	??_I2C2_Transmit
  5759  02DD  0024               	movlb	4	; select bank4
  5760  02DE  081E               	movf	30,w	;volatile
  5761  02DF  391F               	andlw	31
  5762  02E0  0020               	movlb	0	; select bank0
  5763  02E1  044A               	iorwf	??_I2C2_Transmit,w
  5764  02E2  1D03               	btfss	3,2
  5765  02E3  2AD8               	goto	l1980
  5766                           
  5767                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  5768  02E4  0024               	movlb	4	; select bank4
  5769  02E5  141E               	bsf	30,0	;volatile
  5770  02E6                     l1982:	
  5771                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5772                           
  5773  02E6  3005               	movlw	5
  5774  02E7  0024               	movlb	4	; select bank4
  5775  02E8  051C               	andwf	28,w	;volatile
  5776  02E9  0020               	movlb	0	; select bank0
  5777  02EA  00CA               	movwf	??_I2C2_Transmit
  5778  02EB  0024               	movlb	4	; select bank4
  5779  02EC  081E               	movf	30,w	;volatile
  5780  02ED  391F               	andlw	31
  5781  02EE  0020               	movlb	0	; select bank0
  5782  02EF  044A               	iorwf	??_I2C2_Transmit,w
  5783  02F0  1D03               	btfss	3,2
  5784  02F1  2AE6               	goto	l1982
  5785                           
  5786                           ;I2C2.c: 63: SSP2BUF = address << 1;
  5787  02F2  354C               	lslf	I2C2_Transmit@address,w
  5788  02F3  0024               	movlb	4	; select bank4
  5789  02F4  0099               	movwf	25	;volatile
  5790  02F5                     l448:	
  5791                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  5792                           
  5793  02F5  191C               	btfsc	28,2	;volatile
  5794  02F6  2AF5               	goto	l448
  5795                           
  5796                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  5797  02F7  3000               	movlw	0
  5798  02F8  1B1E               	btfsc	30,6	;volatile
  5799  02F9  3001               	movlw	1
  5800  02FA  0020               	movlb	0	; select bank0
  5801  02FB  00CF               	movwf	I2C2_Transmit@result
  5802                           
  5803                           ;I2C2.c: 67: if (!result)
  5804  02FC  084F               	movf	I2C2_Transmit@result,w
  5805  02FD  1D03               	btfss	3,2
  5806  02FE  2B2C               	goto	l2006
  5807                           
  5808                           ;I2C2.c: 68: {
  5809                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  5810  02FF  01CD               	clrf	I2C2_Transmit@i
  5811  0300  2B05               	goto	l2004
  5812  0301                     l2002:	
  5813                           ;I2C2.c: 79: break;
  5814                           
  5815  0301  3001               	movlw	1
  5816  0302  00CA               	movwf	??_I2C2_Transmit
  5817  0303  084A               	movf	??_I2C2_Transmit,w
  5818  0304  07CD               	addwf	I2C2_Transmit@i,f
  5819  0305                     l2004:	
  5820  0305  0849               	movf	I2C2_Transmit@size,w
  5821  0306  024D               	subwf	I2C2_Transmit@i,w
  5822  0307  1803               	btfsc	3,0
  5823  0308  2B2C               	goto	l2006
  5824  0309                     l1992:	
  5825                           ;I2C2.c: 70: {
  5826                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5827                           
  5828  0309  3005               	movlw	5
  5829  030A  0024               	movlb	4	; select bank4
  5830  030B  051C               	andwf	28,w	;volatile
  5831  030C  0020               	movlb	0	; select bank0
  5832  030D  00CA               	movwf	??_I2C2_Transmit
  5833  030E  0024               	movlb	4	; select bank4
  5834  030F  081E               	movf	30,w	;volatile
  5835  0310  391F               	andlw	31
  5836  0311  0020               	movlb	0	; select bank0
  5837  0312  044A               	iorwf	??_I2C2_Transmit,w
  5838  0313  1D03               	btfss	3,2
  5839  0314  2B09               	goto	l1992
  5840                           
  5841                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  5842  0315  084D               	movf	I2C2_Transmit@i,w
  5843  0316  0748               	addwf	I2C2_Transmit@pData,w
  5844  0317  00CA               	movwf	??_I2C2_Transmit
  5845  0318  084A               	movf	??_I2C2_Transmit,w
  5846  0319  0086               	movwf	6
  5847  031A  0187               	clrf	7
  5848  031B  0801               	movf	1,w
  5849  031C  0024               	movlb	4	; select bank4
  5850  031D  0099               	movwf	25	;volatile
  5851  031E                     l457:	
  5852                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  5853                           
  5854  031E  191C               	btfsc	28,2	;volatile
  5855  031F  2B1E               	goto	l457
  5856                           
  5857                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  5858  0320  3000               	movlw	0
  5859  0321  1B1E               	btfsc	30,6	;volatile
  5860  0322  3001               	movlw	1
  5861  0323  0020               	movlb	0	; select bank0
  5862  0324  00CF               	movwf	I2C2_Transmit@result
  5863                           
  5864                           ;I2C2.c: 76: if (result)
  5865  0325  084F               	movf	I2C2_Transmit@result,w
  5866  0326  1903               	btfsc	3,2
  5867  0327  2B01               	goto	l2002
  5868                           
  5869                           ;I2C2.c: 77: {
  5870                           ;I2C2.c: 78: result = 2;
  5871  0328  3002               	movlw	2
  5872  0329  00CA               	movwf	??_I2C2_Transmit
  5873  032A  084A               	movf	??_I2C2_Transmit,w
  5874  032B  00CF               	movwf	I2C2_Transmit@result
  5875  032C                     l2006:	
  5876                           ;I2C2.c: 80: }
  5877                           ;I2C2.c: 81: }
  5878                           ;I2C2.c: 82: }
  5879                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5880                           
  5881  032C  3005               	movlw	5
  5882  032D  0024               	movlb	4	; select bank4
  5883  032E  051C               	andwf	28,w	;volatile
  5884  032F  0020               	movlb	0	; select bank0
  5885  0330  00CA               	movwf	??_I2C2_Transmit
  5886  0331  0024               	movlb	4	; select bank4
  5887  0332  081E               	movf	30,w	;volatile
  5888  0333  391F               	andlw	31
  5889  0334  0020               	movlb	0	; select bank0
  5890  0335  044A               	iorwf	??_I2C2_Transmit,w
  5891  0336  1D03               	btfss	3,2
  5892  0337  2B2C               	goto	l2006
  5893                           
  5894                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  5895  0338  0024               	movlb	4	; select bank4
  5896  0339  151E               	bsf	30,2	;volatile
  5897                           
  5898                           ;I2C2.c: 86: break;
  5899  033A  2B69               	goto	l2026
  5900  033B                     l466:	
  5901                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  5902                           
  5903                           
  5904                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  5905  033B  0024               	movlb	4	; select bank4
  5906  033C  1D9C               	btfss	28,3	;volatile
  5907  033D  1E1C               	btfss	28,4	;volatile
  5908  033E  2B5D               	goto	l2020
  5909                           
  5910                           ;I2C2.c: 90: {
  5911                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  5912  033F  0020               	movlb	0	; select bank0
  5913  0340  01CE               	clrf	I2C2_Transmit@i_558
  5914  0341                     l2016:	
  5915  0341  0849               	movf	I2C2_Transmit@size,w
  5916  0342  024E               	subwf	I2C2_Transmit@i_558,w
  5917  0343  1803               	btfsc	3,0
  5918  0344  2B58               	goto	l2018
  5919                           
  5920                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  5921  0345  084E               	movf	I2C2_Transmit@i_558,w
  5922  0346  0748               	addwf	I2C2_Transmit@pData,w
  5923  0347  00CA               	movwf	??_I2C2_Transmit
  5924  0348  084A               	movf	??_I2C2_Transmit,w
  5925  0349  0086               	movwf	6
  5926  034A  0187               	clrf	7
  5927  034B  0801               	movf	1,w
  5928  034C  00CB               	movwf	??_I2C2_Transmit+1
  5929  034D  084E               	movf	I2C2_Transmit@i_558,w
  5930  034E  3EDC               	addlw	(low (_I2C2_Config| 0))& (0+255)
  5931  034F  0086               	movwf	6
  5932  0350  0187               	clrf	7
  5933  0351  084B               	movf	??_I2C2_Transmit+1,w
  5934  0352  0081               	movwf	1
  5935  0353  3001               	movlw	1
  5936  0354  00CA               	movwf	??_I2C2_Transmit
  5937  0355  084A               	movf	??_I2C2_Transmit,w
  5938  0356  07CE               	addwf	I2C2_Transmit@i_558,f
  5939  0357  2B41               	goto	l2016
  5940  0358                     l2018:	
  5941                           
  5942                           ;I2C2.c: 93: result = size;
  5943  0358  0849               	movf	I2C2_Transmit@size,w
  5944  0359  00CA               	movwf	??_I2C2_Transmit
  5945  035A  084A               	movf	??_I2C2_Transmit,w
  5946  035B  00CF               	movwf	I2C2_Transmit@result
  5947                           
  5948                           ;I2C2.c: 94: }
  5949  035C  2B69               	goto	l2026
  5950  035D                     l2020:	
  5951                           
  5952                           ;I2C2.c: 95: else
  5953                           ;I2C2.c: 96: result = 0;
  5954  035D  0020               	movlb	0	; select bank0
  5955  035E  01CF               	clrf	I2C2_Transmit@result
  5956                           
  5957                           ;I2C2.c: 98: }
  5958                           
  5959                           ;I2C2.c: 97: break;
  5960  035F  2B69               	goto	l2026
  5961  0360                     l2024:	
  5962  0360  0021               	movlb	1	; select bank1
  5963  0361  086E               	movf	(_I2C2_Config^(0+128)+18),w
  5964                           
  5965                           ; Switch size 1, requested type "space"
  5966                           ; Number of cases is 2, Range of values is 0 to 1
  5967                           ; switch strategies available:
  5968                           ; Name         Instructions Cycles
  5969                           ; simple_byte            7     4 (average)
  5970                           ; direct_byte           10     6 (fixed)
  5971                           ; jumptable            260     6 (fixed)
  5972                           ;	Chosen strategy is simple_byte
  5973  0362  3A00               	xorlw	0	; case 0
  5974  0363  1903               	skipnz
  5975  0364  2AD8               	goto	l1980
  5976  0365  3A01               	xorlw	1	; case 1
  5977  0366  1903               	skipnz
  5978  0367  2B3B               	goto	l466
  5979  0368  2B69               	goto	l2026
  5980  0369                     l2026:	
  5981                           
  5982                           ;I2C2.c: 100: return result;
  5983  0369  0020               	movlb	0	; select bank0
  5984  036A  084F               	movf	I2C2_Transmit@result,w
  5985  036B  0008               	return
  5986  036C                     __end_of_I2C2_Transmit:	
  5987                           
  5988                           	psect	text26
  5989  0F94                     __ptext26:	
  5990 ;; *************** function _I2C_Init *****************
  5991 ;; Defined at:
  5992 ;;		line 6 in file "I2C_Common.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  I2Cx            1    wreg     enum E3178
  5995 ;;  address         1    6[BANK0 ] unsigned char 
  5996 ;;  mode            1    7[BANK0 ] enum E3169
  5997 ;;  Speed           1    8[BANK0 ] enum E3173
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  I2Cx            1   11[BANK0 ] enum E3178
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6009 ;;      Params:         0       3       0       0       0       0
  6010 ;;      Locals:         0       1       0       0       0       0
  6011 ;;      Temps:          0       2       0       0       0       0
  6012 ;;      Totals:         0       6       0       0       0       0
  6013 ;;Total ram usage:        6 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:    5
  6016 ;; This function calls:
  6017 ;;		_I2C2_Setting
  6018 ;; This function is called by:
  6019 ;;		_DAC_Initialize
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           
  6024                           ;psect for function _I2C_Init
  6025  0F94                     _I2C_Init:	
  6026                           
  6027                           ;incstack = 0
  6028                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6029                           ;I2C_Init@I2Cx stored from wreg
  6030  0F94  0020               	movlb	0	; select bank0
  6031  0F95  00D2               	movwf	I2C_Init@I2Cx
  6032                           
  6033                           ;I2C_Common.c: 8: switch(I2Cx)
  6034  0F96  2FA4               	goto	l2068
  6035  0F97                     l2064:	
  6036                           ;I2C_Common.c: 9: {
  6037                           ;I2C_Common.c: 14: case I2C2_MODULE:
  6038                           
  6039                           
  6040                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  6041  0F97  084E               	movf	I2C_Init@mode,w
  6042  0F98  00D0               	movwf	??_I2C_Init
  6043  0F99  0850               	movf	??_I2C_Init,w
  6044  0F9A  00C9               	movwf	I2C2_Setting@mode
  6045  0F9B  084F               	movf	I2C_Init@Speed,w
  6046  0F9C  00D1               	movwf	??_I2C_Init+1
  6047  0F9D  0851               	movf	??_I2C_Init+1,w
  6048  0F9E  00CA               	movwf	I2C2_Setting@Speed
  6049  0F9F  084D               	movf	I2C_Init@address,w
  6050  0FA0  3185  25D1  318F   	fcall	_I2C2_Setting
  6051                           
  6052                           ;I2C_Common.c: 17: }
  6053                           
  6054                           ;I2C_Common.c: 16: break;
  6055  0FA3  2FAA               	goto	l54
  6056  0FA4                     l2068:	
  6057  0FA4  0020               	movlb	0	; select bank0
  6058  0FA5  0852               	movf	I2C_Init@I2Cx,w
  6059                           
  6060                           ; Switch size 1, requested type "space"
  6061                           ; Number of cases is 1, Range of values is 1 to 1
  6062                           ; switch strategies available:
  6063                           ; Name         Instructions Cycles
  6064                           ; simple_byte            4     3 (average)
  6065                           ; direct_byte           11     9 (fixed)
  6066                           ; jumptable            263     9 (fixed)
  6067                           ;	Chosen strategy is simple_byte
  6068  0FA6  3A01               	xorlw	1	; case 1
  6069  0FA7  1903               	skipnz
  6070  0FA8  2F97               	goto	l2064
  6071  0FA9  2FAA               	goto	l54
  6072  0FAA                     l54:	
  6073                           
  6074                           ;I2C_Common.c: 19: PEIE = 1;
  6075  0FAA  170B               	bsf	11,6	;volatile
  6076                           
  6077                           ;I2C_Common.c: 20: GIE = 1;
  6078  0FAB  178B               	bsf	11,7	;volatile
  6079  0FAC  0008               	return
  6080  0FAD                     __end_of_I2C_Init:	
  6081                           
  6082                           	psect	text27
  6083  05D1                     __ptext27:	
  6084 ;; *************** function _I2C2_Setting *****************
  6085 ;; Defined at:
  6086 ;;		line 15 in file "I2C2.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;  address         1    wreg     unsigned char 
  6089 ;;  mode            1    2[BANK0 ] enum E3169
  6090 ;;  Speed           1    3[BANK0 ] enum E3173
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;  address         1    5[BANK0 ] unsigned char 
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      void 
  6095 ;; Registers used:
  6096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6102 ;;      Params:         0       2       0       0       0       0
  6103 ;;      Locals:         0       1       0       0       0       0
  6104 ;;      Temps:          0       1       0       0       0       0
  6105 ;;      Totals:         0       4       0       0       0       0
  6106 ;;Total ram usage:        4 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    4
  6109 ;; This function calls:
  6110 ;;		_I2C2_PinInit
  6111 ;; This function is called by:
  6112 ;;		_I2C_Init
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           
  6117                           ;psect for function _I2C2_Setting
  6118  05D1                     _I2C2_Setting:	
  6119                           
  6120                           ;incstack = 0
  6121                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6122                           ;I2C2_Setting@address stored from wreg
  6123  05D1  0020               	movlb	0	; select bank0
  6124  05D2  00CC               	movwf	I2C2_Setting@address
  6125                           
  6126                           ;I2C2.c: 17: I2C2_PinInit();
  6127  05D3  318E  26EC  3185   	fcall	_I2C2_PinInit
  6128                           
  6129                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  6130  05D6  0020               	movlb	0	; select bank0
  6131  05D7  0849               	movf	I2C2_Setting@mode,w
  6132  05D8  00CB               	movwf	??_I2C2_Setting
  6133  05D9  084B               	movf	??_I2C2_Setting,w
  6134  05DA  0021               	movlb	1	; select bank1
  6135  05DB  00EE               	movwf	(_I2C2_Config^(0+128)+18)
  6136                           
  6137                           ;I2C2.c: 20: switch(mode)
  6138  05DC  2E05               	goto	l1976
  6139  05DD                     l431:	
  6140                           ;I2C2.c: 21: {
  6141                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  6142                           
  6143                           
  6144                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  6145  05DD  0024               	movlb	4	; select bank4
  6146  05DE  159D               	bsf	29,3	;volatile
  6147                           
  6148                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6149  05DF  0020               	movlb	0	; select bank0
  6150  05E0  084A               	movf	I2C2_Setting@Speed,w
  6151  05E1  1D03               	btfss	3,2
  6152  05E2  2DE7               	goto	l1954
  6153                           
  6154                           ;I2C2.c: 25: {
  6155                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  6156  05E3  0024               	movlb	4	; select bank4
  6157  05E4  179C               	bsf	28,7	;volatile
  6158                           
  6159                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  6160  05E5  304F               	movlw	79
  6161  05E6  2DF1               	goto	L1
  6162  05E7                     l1954:	
  6163                           ;I2C2.c: 28: }
  6164                           
  6165                           
  6166                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6167  05E7  0020               	movlb	0	; select bank0
  6168  05E8  034A               	decf	I2C2_Setting@Speed,w
  6169  05E9  1D03               	btfss	3,2
  6170  05EA  2DF2               	goto	l1960
  6171                           
  6172                           ;I2C2.c: 30: {
  6173                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  6174  05EB  307F               	movlw	127
  6175  05EC  00CB               	movwf	??_I2C2_Setting
  6176  05ED  084B               	movf	??_I2C2_Setting,w
  6177  05EE  0024               	movlb	4	; select bank4
  6178  05EF  059C               	andwf	28,f	;volatile
  6179                           
  6180                           ;I2C2.c: 32: SSP2ADD = 0x13;
  6181  05F0  3013               	movlw	19
  6182  05F1                     L1:	
  6183  05F1  009A               	movwf	26	;volatile
  6184  05F2                     l1960:	
  6185                           
  6186                           ;I2C2.c: 33: }
  6187                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  6188  05F2  0024               	movlb	4	; select bank4
  6189  05F3  2E03               	goto	l1972
  6190  05F4                     l1962:	
  6191                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  6192                           
  6193                           ;I2C2.c: 35: break;
  6194                           
  6195                           
  6196                           ;I2C2.c: 38: SSP2STAT = 0x00;
  6197  05F4  0024               	movlb	4	; select bank4
  6198  05F5  019C               	clrf	28	;volatile
  6199                           
  6200                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  6201  05F6  3006               	movlw	6
  6202  05F7  0020               	movlb	0	; select bank0
  6203  05F8  00CB               	movwf	??_I2C2_Setting
  6204  05F9  084B               	movf	??_I2C2_Setting,w
  6205  05FA  0024               	movlb	4	; select bank4
  6206  05FB  049D               	iorwf	29,f	;volatile
  6207                           
  6208                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  6209  05FC  141E               	bsf	30,0	;volatile
  6210                           
  6211                           ;I2C2.c: 41: SSP2ADD = address << 1;
  6212  05FD  0020               	movlb	0	; select bank0
  6213  05FE  354C               	lslf	I2C2_Setting@address,w
  6214  05FF  0024               	movlb	4	; select bank4
  6215  0600  009A               	movwf	26	;volatile
  6216                           
  6217                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  6218  0601  30FE               	movlw	254
  6219  0602  009B               	movwf	27	;volatile
  6220  0603                     l1972:	
  6221                           
  6222                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  6223  0603  169D               	bsf	29,5	;volatile
  6224                           
  6225                           ;I2C2.c: 45: }
  6226                           
  6227                           ;I2C2.c: 44: break;
  6228  0604  2E0E               	goto	l435
  6229  0605                     l1976:	
  6230  0605  0020               	movlb	0	; select bank0
  6231  0606  0849               	movf	I2C2_Setting@mode,w
  6232                           
  6233                           ; Switch size 1, requested type "space"
  6234                           ; Number of cases is 2, Range of values is 0 to 1
  6235                           ; switch strategies available:
  6236                           ; Name         Instructions Cycles
  6237                           ; simple_byte            7     4 (average)
  6238                           ; direct_byte           10     6 (fixed)
  6239                           ; jumptable            260     6 (fixed)
  6240                           ;	Chosen strategy is simple_byte
  6241  0607  3A00               	xorlw	0	; case 0
  6242  0608  1903               	skipnz
  6243  0609  2DDD               	goto	l431
  6244  060A  3A01               	xorlw	1	; case 1
  6245  060B  1903               	skipnz
  6246  060C  2DF4               	goto	l1962
  6247  060D  2E0E               	goto	l435
  6248  060E                     l435:	
  6249                           
  6250                           ;I2C2.c: 46: SSP2IE = 1;
  6251  060E  0021               	movlb	1	; select bank1
  6252  060F  1414               	bsf	20,0	;volatile
  6253                           
  6254                           ;I2C2.c: 47: BCL2IE = 1;
  6255  0610  1494               	bsf	20,1	;volatile
  6256                           
  6257                           ;I2C2.c: 48: SSP2IF = 0;
  6258  0611  0020               	movlb	0	; select bank0
  6259  0612  1014               	bcf	20,0	;volatile
  6260                           
  6261                           ;I2C2.c: 49: BCL2IF = 0;
  6262  0613  1094               	bcf	20,1	;volatile
  6263  0614  0008               	return
  6264  0615                     __end_of_I2C2_Setting:	
  6265                           
  6266                           	psect	text28
  6267  0EEC                     __ptext28:	
  6268 ;; *************** function _I2C2_PinInit *****************
  6269 ;; Defined at:
  6270 ;;		line 9 in file "I2C2.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;		None
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  1    wreg      void 
  6277 ;; Registers used:
  6278 ;;		wreg, status,2, status,0
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6284 ;;      Params:         0       0       0       0       0       0
  6285 ;;      Locals:         0       0       0       0       0       0
  6286 ;;      Temps:          0       1       0       0       0       0
  6287 ;;      Totals:         0       1       0       0       0       0
  6288 ;;Total ram usage:        1 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    3
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_I2C2_Setting
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           
  6299                           ;psect for function _I2C2_PinInit
  6300  0EEC                     _I2C2_PinInit:	
  6301                           
  6302                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  6303                           
  6304                           ;incstack = 0
  6305                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  6306  0EEC  3024               	movlw	36
  6307  0EED  0020               	movlb	0	; select bank0
  6308  0EEE  00C8               	movwf	??_I2C2_PinInit
  6309  0EEF  0848               	movf	??_I2C2_PinInit,w
  6310  0EF0  0021               	movlb	1	; select bank1
  6311  0EF1  048D               	iorwf	13,f	;volatile
  6312                           
  6313                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  6314  0EF2  30DB               	movlw	219
  6315  0EF3  0020               	movlb	0	; select bank0
  6316  0EF4  00C8               	movwf	??_I2C2_PinInit
  6317  0EF5  0848               	movf	??_I2C2_PinInit,w
  6318  0EF6  0023               	movlb	3	; select bank3
  6319  0EF7  058D               	andwf	13,f	;volatile
  6320  0EF8  0008               	return
  6321  0EF9                     __end_of_I2C2_PinInit:	
  6322                           
  6323                           	psect	text29
  6324  0747                     __ptext29:	
  6325 ;; *************** function _Buzzer_Init *****************
  6326 ;; Defined at:
  6327 ;;		line 11 in file "Buzzer.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;		None
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      void 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6341 ;;      Params:         0       0       0       0       0       0
  6342 ;;      Locals:         0       0       0       0       0       0
  6343 ;;      Temps:          0       1       0       0       0       0
  6344 ;;      Totals:         0       1       0       0       0       0
  6345 ;;Total ram usage:        1 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:    3
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		_main
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           
  6356                           ;psect for function _Buzzer_Init
  6357  0747                     _Buzzer_Init:	
  6358                           
  6359                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  6360                           
  6361                           ;incstack = 0
  6362                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  6363  0747  307F               	movlw	127
  6364  0748  0020               	movlb	0	; select bank0
  6365  0749  00C8               	movwf	??_Buzzer_Init
  6366  074A  0848               	movf	??_Buzzer_Init,w
  6367  074B  0021               	movlb	1	; select bank1
  6368  074C  058C               	andwf	12,f	;volatile
  6369                           
  6370                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  6371  074D  307F               	movlw	127
  6372  074E  0020               	movlb	0	; select bank0
  6373  074F  00C8               	movwf	??_Buzzer_Init
  6374  0750  0848               	movf	??_Buzzer_Init,w
  6375  0751  0023               	movlb	3	; select bank3
  6376  0752  058C               	andwf	12,f	;volatile
  6377                           
  6378                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  6379  0753  0022               	movlb	2	; select bank2
  6380  0754  159D               	bsf	29,3	;volatile
  6381                           
  6382                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  6383  0755  0020               	movlb	0	; select bank0
  6384  0756  081C               	movf	28,w	;volatile
  6385                           
  6386                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  6387  0757  149C               	bsf	28,1	;volatile
  6388                           
  6389                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  6390  0758  151C               	bsf	28,2	;volatile
  6391                           
  6392                           ;Buzzer.c: 21: TMR2 = 0x00;
  6393  0759  019A               	clrf	26	;volatile
  6394                           
  6395                           ;Buzzer.c: 22: PR2 = 0xFF;
  6396  075A  30FF               	movlw	255
  6397  075B  009B               	movwf	27	;volatile
  6398                           
  6399                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  6400  075C  303F               	movlw	63
  6401  075D  00C8               	movwf	??_Buzzer_Init
  6402  075E  0848               	movf	??_Buzzer_Init,w
  6403  075F  0025               	movlb	5	; select bank5
  6404  0760  059A               	andwf	26,f	;volatile
  6405                           
  6406                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  6407  0761  300C               	movlw	12
  6408  0762  0020               	movlb	0	; select bank0
  6409  0763  00C8               	movwf	??_Buzzer_Init
  6410  0764  0848               	movf	??_Buzzer_Init,w
  6411  0765  0025               	movlb	5	; select bank5
  6412  0766  049A               	iorwf	26,f	;volatile
  6413                           
  6414                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  6415  0767  30F3               	movlw	243
  6416  0768  0020               	movlb	0	; select bank0
  6417  0769  00C8               	movwf	??_Buzzer_Init
  6418  076A  0848               	movf	??_Buzzer_Init,w
  6419  076B  0025               	movlb	5	; select bank5
  6420  076C  059E               	andwf	30,f	;volatile
  6421                           
  6422                           ;Buzzer.c: 28: CCPR2L = 0x00;
  6423  076D  0198               	clrf	24	;volatile
  6424  076E  0008               	return
  6425  076F                     __end_of_Buzzer_Init:	
  6426                           
  6427                           	psect	text30
  6428  0F47                     __ptext30:	
  6429 ;; *************** function _Basic_Init *****************
  6430 ;; Defined at:
  6431 ;;		line 69 in file "main.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      char 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6445 ;;      Params:         0       0       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0       0
  6448 ;;      Totals:         0       0       0       0       0       0
  6449 ;;Total ram usage:        0 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    3
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_main
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           
  6460                           ;psect for function _Basic_Init
  6461  0F47                     _Basic_Init:	
  6462                           
  6463                           ;main.c: 71: OSCCON = 0xF0;
  6464                           
  6465                           ;incstack = 0
  6466                           ; Regs used in _Basic_Init: [wreg+status,2]
  6467  0F47  30F0               	movlw	240
  6468  0F48  0021               	movlb	1	; select bank1
  6469  0F49  0099               	movwf	25	;volatile
  6470                           
  6471                           ;main.c: 75: TRISA = 0x00;
  6472  0F4A  018C               	clrf	12	;volatile
  6473                           
  6474                           ;main.c: 76: ANSELA = 0x00;
  6475  0F4B  0023               	movlb	3	; select bank3
  6476  0F4C  018C               	clrf	12	;volatile
  6477                           
  6478                           ;main.c: 78: TRISB = 0x00;
  6479  0F4D  0021               	movlb	1	; select bank1
  6480  0F4E  018D               	clrf	13	;volatile
  6481                           
  6482                           ;main.c: 79: ANSELB = 0x00;
  6483  0F4F  0023               	movlb	3	; select bank3
  6484  0F50  018D               	clrf	13	;volatile
  6485                           
  6486                           ;main.c: 81: APFCON0 = 0x00;
  6487  0F51  0022               	movlb	2	; select bank2
  6488  0F52  019D               	clrf	29	;volatile
  6489                           
  6490                           ;main.c: 82: APFCON1 = 0x00;
  6491  0F53  019E               	clrf	30	;volatile
  6492                           
  6493                           ;main.c: 84: PORTA = 0x00;
  6494  0F54  0020               	movlb	0	; select bank0
  6495  0F55  018C               	clrf	12	;volatile
  6496                           
  6497                           ;main.c: 85: PORTB = 0x00;
  6498  0F56  018D               	clrf	13	;volatile
  6499  0F57  0008               	return
  6500  0F58                     __end_of_Basic_Init:	
  6501                           ;main.c: 87: return 0;
  6502                           ;	Return value of _Basic_Init is never used
  6503                           
  6504                           
  6505                           	psect	intentry
  6506  0004                     __pintentry:	
  6507 ;; *************** function _Handler *****************
  6508 ;; Defined at:
  6509 ;;		line 90 in file "main.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;		None
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  1    wreg      void 
  6516 ;; Registers used:
  6517 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6523 ;;      Params:         0       0       0       0       0       0
  6524 ;;      Locals:         0       0       0       0       0       0
  6525 ;;      Temps:          0       1       0       0       0       0
  6526 ;;      Totals:         0       1       0       0       0       0
  6527 ;;Total ram usage:        1 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; Hardware stack levels required when called:    2
  6530 ;; This function calls:
  6531 ;;		_Buzzer_Count1ms
  6532 ;;		_I2C_CommonInterrupt
  6533 ;;		_Timer1_Count200us
  6534 ;;		_Timer1_DetectAssignCount
  6535 ;;		_Timer4_CheckFlag
  6536 ;;		_Timer6_CheckFlag
  6537 ;;		_mTouch_IntervalDecrement
  6538 ;;		_mTouch_Read
  6539 ;; This function is called by:
  6540 ;;		Interrupt level 1
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544  0004                     _Handler:	
  6545                           
  6546                           ;incstack = 0
  6547  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6548                           
  6549                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6550  0005  3180               	pagesel	$
  6551  0006  0020               	movlb	0	; select bank0
  6552  0007  087F               	movf	127,w
  6553  0008  00C7               	movwf	??_Handler
  6554                           
  6555                           ;main.c: 92: if(Timer4_CheckFlag())
  6556  0009  318E  26D6  3180   	fcall	_Timer4_CheckFlag
  6557  000C  3A00               	xorlw	0
  6558  000D  1903               	skipnz
  6559  000E  2812               	goto	i1l2742
  6560                           
  6561                           ;main.c: 93: Timer1_Count200us();
  6562  000F  318E  26B8  3180   	fcall	_Timer1_Count200us
  6563  0012                     i1l2742:	
  6564                           
  6565                           ;main.c: 95: if(Timer1_DetectAssignCount())
  6566  0012  3184  2400  3180   	fcall	_Timer1_DetectAssignCount
  6567  0015  3A00               	xorlw	0
  6568  0016  1903               	skipnz
  6569  0017  281B               	goto	i1l2746
  6570                           
  6571                           ;main.c: 96: LATA6 = !LATA6;
  6572  0018  3040               	movlw	64
  6573  0019  0022               	movlb	2	; select bank2
  6574  001A  068C               	xorwf	12,f
  6575  001B                     i1l2746:	
  6576                           
  6577                           ;main.c: 98: if(Timer6_CheckFlag())
  6578  001B  318E  26E1  3180   	fcall	_Timer6_CheckFlag
  6579  001E  3A00               	xorlw	0
  6580  001F  1903               	skipnz
  6581  0020  282A               	goto	i1l372
  6582                           
  6583                           ;main.c: 99: {
  6584                           ;main.c: 100: mTouch_IntervalDecrement();
  6585  0021  318F  2736  3180   	fcall	_mTouch_IntervalDecrement
  6586                           
  6587                           ;main.c: 102: mTouch_Read();
  6588  0024  3187  276F  3180   	fcall	_mTouch_Read
  6589                           
  6590                           ;main.c: 103: Buzzer_Count1ms();
  6591  0027  318F  277E  3180   	fcall	_Buzzer_Count1ms
  6592  002A                     i1l372:	
  6593                           
  6594                           ;main.c: 104: }
  6595                           ;main.c: 105: I2C_CommonInterrupt();
  6596  002A  318E  2695         	fcall	_I2C_CommonInterrupt
  6597  002C  0020               	movlb	0	; select bank0
  6598  002D  0847               	movf	??_Handler,w
  6599  002E  00FF               	movwf	127
  6600  002F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6601  0030  0009               	retfie
  6602  0031                     __end_of_Handler:	
  6603                           
  6604                           	psect	text32
  6605  076F                     __ptext32:	
  6606 ;; *************** function _mTouch_Read *****************
  6607 ;; Defined at:
  6608 ;;		line 29 in file "mTouch.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;		None
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6622 ;;      Params:         0       0       0       0       0       0
  6623 ;;      Locals:         0       0       0       0       0       0
  6624 ;;      Temps:          1       0       0       0       0       0
  6625 ;;      Totals:         1       0       0       0       0       0
  6626 ;;Total ram usage:        1 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_Handler
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           
  6636                           ;psect for function _mTouch_Read
  6637  076F                     _mTouch_Read:	
  6638                           
  6639                           ;mTouch.c: 31: static uint8_t channel=0;
  6640                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  6641                           
  6642                           ;incstack = 0
  6643                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6644  076F  0020               	movlb	0	; select bank0
  6645  0770  0843               	movf	mTouch_Read@channel,w
  6646  0771  3E37               	addlw	(low (_CPS_Data| 0))& (0+255)
  6647  0772  0086               	movwf	6
  6648  0773  0187               	clrf	7
  6649  0774  0801               	movf	1,w
  6650  0775  00F0               	movwf	??_mTouch_Read
  6651  0776  0843               	movf	mTouch_Read@channel,w
  6652  0777  3E3A               	addlw	(low (_CPS_PreData| 0))& (0+255)
  6653  0778  0086               	movwf	6
  6654  0779  0187               	clrf	7
  6655  077A  0870               	movf	??_mTouch_Read,w
  6656  077B  0081               	movwf	1
  6657                           
  6658                           ;mTouch.c: 35: CPSCON0 &= ~(0x01<<7);;
  6659  077C  307F               	movlw	127
  6660  077D  00F0               	movwf	??_mTouch_Read
  6661  077E  0870               	movf	??_mTouch_Read,w
  6662  077F  059E               	andwf	30,f	;volatile
  6663                           
  6664                           ;mTouch.c: 36: CPS_Data[channel] = TMR0;
  6665  0780  0815               	movf	21,w	;volatile
  6666  0781  00F0               	movwf	??_mTouch_Read
  6667  0782  0843               	movf	mTouch_Read@channel,w
  6668  0783  3E37               	addlw	(low (_CPS_Data| 0))& (0+255)
  6669  0784  0086               	movwf	6
  6670  0785  0187               	clrf	7
  6671  0786  0870               	movf	??_mTouch_Read,w
  6672  0787  0081               	movwf	1
  6673                           
  6674                           ;mTouch.c: 37: TMR0 = 0x00;
  6675  0788  0195               	clrf	21	;volatile
  6676                           
  6677                           ;mTouch.c: 38: CPSCON0 |= (0x01<<7);;
  6678  0789  179E               	bsf	30,7	;volatile
  6679                           
  6680                           ;mTouch.c: 40: if(channel++>2)channel = 0;
  6681  078A  0843               	movf	mTouch_Read@channel,w
  6682  078B  0AC3               	incf	mTouch_Read@channel,f
  6683  078C  00F0               	movwf	??_mTouch_Read
  6684  078D  3003               	movlw	3
  6685  078E  0270               	subwf	??_mTouch_Read,w
  6686  078F  1803               	btfsc	3,0
  6687  0790  01C3               	clrf	mTouch_Read@channel
  6688                           
  6689                           ;mTouch.c: 41: CPSCON1 = (uint8_t)channel;
  6690  0791  0843               	movf	mTouch_Read@channel,w
  6691  0792  009F               	movwf	31	;volatile
  6692  0793  0008               	return
  6693  0794                     __end_of_mTouch_Read:	
  6694                           
  6695                           	psect	text33
  6696  0F36                     __ptext33:	
  6697 ;; *************** function _mTouch_IntervalDecrement *****************
  6698 ;; Defined at:
  6699 ;;		line 108 in file "main.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;		None
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  1    wreg      void 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6713 ;;      Params:         0       0       0       0       0       0
  6714 ;;      Locals:         0       0       0       0       0       0
  6715 ;;      Temps:          0       0       0       0       0       0
  6716 ;;      Totals:         0       0       0       0       0       0
  6717 ;;Total ram usage:        0 bytes
  6718 ;; Hardware stack levels used:    1
  6719 ;; This function calls:
  6720 ;;		Nothing
  6721 ;; This function is called by:
  6722 ;;		_Handler
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           
  6727                           ;psect for function _mTouch_IntervalDecrement
  6728  0F36                     _mTouch_IntervalDecrement:	
  6729                           
  6730                           ;main.c: 110: if(mTouch_Interval[0]>0)
  6731                           
  6732                           ;incstack = 0
  6733                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  6734  0F36  0020               	movlb	0	; select bank0
  6735  0F37  0834               	movf	_mTouch_Interval,w
  6736  0F38  1903               	btfsc	3,2
  6737  0F39  2F3C               	goto	i1l376
  6738                           
  6739                           ;main.c: 111: mTouch_Interval[0]--;
  6740  0F3A  3001               	movlw	1
  6741  0F3B  02B4               	subwf	_mTouch_Interval,f
  6742  0F3C                     i1l376:	
  6743                           
  6744                           ;main.c: 112: if(mTouch_Interval[1]>0)
  6745  0F3C  0835               	movf	_mTouch_Interval+1,w
  6746  0F3D  1903               	btfsc	3,2
  6747  0F3E  2F41               	goto	i1l377
  6748                           
  6749                           ;main.c: 113: mTouch_Interval[1]--;
  6750  0F3F  3001               	movlw	1
  6751  0F40  02B5               	subwf	_mTouch_Interval+1,f
  6752  0F41                     i1l377:	
  6753                           
  6754                           ;main.c: 114: if(mTouch_Interval[2]>0)
  6755  0F41  0836               	movf	_mTouch_Interval+2,w
  6756  0F42  1903               	btfsc	3,2
  6757  0F43  0008               	return
  6758                           
  6759                           ;main.c: 115: mTouch_Interval[2]--;
  6760  0F44  3001               	movlw	1
  6761  0F45  02B6               	subwf	_mTouch_Interval+2,f
  6762  0F46  0008               	return
  6763  0F47                     __end_of_mTouch_IntervalDecrement:	
  6764                           
  6765                           	psect	text34
  6766  0EE1                     __ptext34:	
  6767 ;; *************** function _Timer6_CheckFlag *****************
  6768 ;; Defined at:
  6769 ;;		line 17 in file "Timer6.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;		None
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;		None
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  1    wreg      unsigned char 
  6776 ;; Registers used:
  6777 ;;		wreg
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6783 ;;      Params:         0       0       0       0       0       0
  6784 ;;      Locals:         0       0       0       0       0       0
  6785 ;;      Temps:          0       0       0       0       0       0
  6786 ;;      Totals:         0       0       0       0       0       0
  6787 ;;Total ram usage:        0 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; This function calls:
  6790 ;;		Nothing
  6791 ;; This function is called by:
  6792 ;;		_Handler
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           
  6797                           ;psect for function _Timer6_CheckFlag
  6798  0EE1                     _Timer6_CheckFlag:	
  6799                           
  6800                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  6801                           
  6802                           ;incstack = 0
  6803                           ; Regs used in _Timer6_CheckFlag: [wreg]
  6804  0EE1  0021               	movlb	1	; select bank1
  6805  0EE2  1D93               	btfss	19,3	;volatile
  6806  0EE3  2EEA               	goto	i1l1620
  6807  0EE4  0020               	movlb	0	; select bank0
  6808  0EE5  1D93               	btfss	19,3	;volatile
  6809  0EE6  2EEA               	goto	i1l1620
  6810                           
  6811                           ;Timer6.c: 20: {
  6812                           ;Timer6.c: 21: TMR6IF = 0;
  6813  0EE7  1193               	bcf	19,3	;volatile
  6814                           
  6815                           ;Timer6.c: 22: return 1;
  6816  0EE8  3001               	movlw	1
  6817  0EE9  0008               	return
  6818  0EEA                     i1l1620:	
  6819                           
  6820                           ;Timer6.c: 23: }
  6821                           ;Timer6.c: 24: return 0;
  6822  0EEA  3000               	movlw	0
  6823  0EEB  0008               	return
  6824  0EEC                     __end_of_Timer6_CheckFlag:	
  6825                           
  6826                           	psect	text35
  6827  0ED6                     __ptext35:	
  6828 ;; *************** function _Timer4_CheckFlag *****************
  6829 ;; Defined at:
  6830 ;;		line 17 in file "Timer4.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;		None
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;		None
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  1    wreg      unsigned char 
  6837 ;; Registers used:
  6838 ;;		wreg
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6844 ;;      Params:         0       0       0       0       0       0
  6845 ;;      Locals:         0       0       0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0       0
  6847 ;;      Totals:         0       0       0       0       0       0
  6848 ;;Total ram usage:        0 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; This function calls:
  6851 ;;		Nothing
  6852 ;; This function is called by:
  6853 ;;		_Handler
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           
  6858                           ;psect for function _Timer4_CheckFlag
  6859  0ED6                     _Timer4_CheckFlag:	
  6860                           
  6861                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  6862                           
  6863                           ;incstack = 0
  6864                           ; Regs used in _Timer4_CheckFlag: [wreg]
  6865  0ED6  0021               	movlb	1	; select bank1
  6866  0ED7  1C93               	btfss	19,1	;volatile
  6867  0ED8  2EDF               	goto	i1l1588
  6868  0ED9  0020               	movlb	0	; select bank0
  6869  0EDA  1C93               	btfss	19,1	;volatile
  6870  0EDB  2EDF               	goto	i1l1588
  6871                           
  6872                           ;Timer4.c: 20: {
  6873                           ;Timer4.c: 21: TMR4IF = 0;
  6874  0EDC  1093               	bcf	19,1	;volatile
  6875                           
  6876                           ;Timer4.c: 22: return 1;
  6877  0EDD  3001               	movlw	1
  6878  0EDE  0008               	return
  6879  0EDF                     i1l1588:	
  6880                           
  6881                           ;Timer4.c: 23: }
  6882                           ;Timer4.c: 24: return 0;
  6883  0EDF  3000               	movlw	0
  6884  0EE0  0008               	return
  6885  0EE1                     __end_of_Timer4_CheckFlag:	
  6886                           
  6887                           	psect	text36
  6888  0400                     __ptext36:	
  6889 ;; *************** function _Timer1_DetectAssignCount *****************
  6890 ;; Defined at:
  6891 ;;		line 67 in file "Timer1.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;		None
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;		None
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  1    wreg      unsigned char 
  6898 ;; Registers used:
  6899 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6905 ;;      Params:         0       0       0       0       0       0
  6906 ;;      Locals:         0       0       0       0       0       0
  6907 ;;      Temps:          0       0       0       0       0       0
  6908 ;;      Totals:         0       0       0       0       0       0
  6909 ;;Total ram usage:        0 bytes
  6910 ;; Hardware stack levels used:    1
  6911 ;; Hardware stack levels required when called:    1
  6912 ;; This function calls:
  6913 ;;		___lldiv
  6914 ;; This function is called by:
  6915 ;;		_Handler
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           
  6920                           ;psect for function _Timer1_DetectAssignCount
  6921  0400                     _Timer1_DetectAssignCount:	
  6922                           
  6923                           ;Timer1.c: 69: static uint16_t PreviousTimer1;
  6924                           ;Timer1.c: 75: tcnt.RenewalCPM++;
  6925                           
  6926                           ;incstack = 0
  6927                           ; Regs used in _Timer1_DetectAssignCount: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  6928  0400  3001               	movlw	1
  6929  0401  0020               	movlb	0	; select bank0
  6930  0402  07B2               	addwf	_tcnt+4,f
  6931  0403  3000               	movlw	0
  6932  0404  3DB3               	addwfc	_tcnt+5,f
  6933                           
  6934                           ;Timer1.c: 76: if((tcnt.RenewalCPM>5000)&&cnts.Num_of_Detect)
  6935  0405  3013               	movlw	19
  6936  0406  0233               	subwf	_tcnt+5,w
  6937  0407  3089               	movlw	137
  6938  0408  1903               	skipnz
  6939  0409  0232               	subwf	_tcnt+4,w
  6940  040A  1C03               	skipc
  6941  040B  2C34               	goto	i1l2398
  6942  040C  082D               	movf	_cnts+13,w
  6943  040D  042C               	iorwf	_cnts+12,w
  6944  040E  042B               	iorwf	_cnts+11,w
  6945  040F  042A               	iorwf	_cnts+10,w
  6946  0410  1903               	skipnz
  6947  0411  2C34               	goto	i1l2398
  6948                           
  6949                           ;Timer1.c: 77: {
  6950                           ;Timer1.c: 78: tcnt.RenewalCPM = 0;
  6951  0412  01B2               	clrf	_tcnt+4
  6952  0413  01B3               	clrf	_tcnt+5
  6953                           
  6954                           ;Timer1.c: 79: cnts.AverageCPM = (uint16_t)(cnts.SigmaCPM/cnts.Num_of_Detect);
  6955  0414  300A               	movlw	10
  6956  0415  3E20               	addlw	(low (_cnts| 0))& (0+255)
  6957  0416  0086               	movwf	6
  6958  0417  0187               	clrf	7
  6959  0418  3F40               	moviw [0]fsr1
  6960  0419  00F0               	movwf	___lldiv@divisor
  6961  041A  3F41               	moviw [1]fsr1
  6962  041B  00F1               	movwf	___lldiv@divisor+1
  6963  041C  3F42               	moviw [2]fsr1
  6964  041D  00F2               	movwf	___lldiv@divisor+2
  6965  041E  3F43               	moviw [3]fsr1
  6966  041F  00F3               	movwf	___lldiv@divisor+3
  6967  0420  3004               	movlw	4
  6968  0421  3E20               	addlw	(low (_cnts| 0))& (0+255)
  6969  0422  0086               	movwf	6
  6970  0423  0187               	clrf	7
  6971  0424  3F40               	moviw [0]fsr1
  6972  0425  00F4               	movwf	___lldiv@dividend
  6973  0426  3F41               	moviw [1]fsr1
  6974  0427  00F5               	movwf	___lldiv@dividend+1
  6975  0428  3F42               	moviw [2]fsr1
  6976  0429  00F6               	movwf	___lldiv@dividend+2
  6977  042A  3F43               	moviw [3]fsr1
  6978  042B  00F7               	movwf	___lldiv@dividend+3
  6979  042C  3185  253B  3184   	fcall	___lldiv
  6980  042F  0871               	movf	?___lldiv+1,w
  6981  0430  0020               	movlb	0	; select bank0
  6982  0431  00A9               	movwf	_cnts+9
  6983  0432  0870               	movf	?___lldiv,w
  6984  0433  00A8               	movwf	_cnts+8
  6985  0434                     i1l2398:	
  6986                           
  6987                           ;Timer1.c: 80: }
  6988                           ;Timer1.c: 82: if(TMR1IF&&TMR1IE)
  6989  0434  1C11               	btfss	17,0	;volatile
  6990  0435  2C76               	goto	i1l2422
  6991  0436  0021               	movlb	1	; select bank1
  6992  0437  1C11               	btfss	17,0	;volatile
  6993  0438  2C76               	goto	i1l2422
  6994                           
  6995                           ;Timer1.c: 83: {
  6996                           ;Timer1.c: 84: cnts.SigmaDeltaCount+= 10UL;
  6997  0439  300A               	movlw	10
  6998  043A  0020               	movlb	0	; select bank0
  6999  043B  07A0               	addwf	_cnts,f
  7000  043C  3000               	movlw	0
  7001  043D  3DA1               	addwfc	_cnts+1,f
  7002  043E  3000               	movlw	0
  7003  043F  3DA2               	addwfc	_cnts+2,f
  7004  0440  3000               	movlw	0
  7005  0441  3DA3               	addwfc	_cnts+3,f
  7006                           
  7007                           ;Timer1.c: 86: cnts.SigmaCPM += (uint32_t)((10UL * 30000UL) / tcnt.Delta_t);
  7008  0442  0831               	movf	_tcnt+3,w
  7009  0443  00F3               	movwf	___lldiv@divisor+3
  7010  0444  0830               	movf	_tcnt+2,w
  7011  0445  00F2               	movwf	___lldiv@divisor+2
  7012  0446  082F               	movf	_tcnt+1,w
  7013  0447  00F1               	movwf	___lldiv@divisor+1
  7014  0448  082E               	movf	_tcnt,w
  7015  0449  00F0               	movwf	___lldiv@divisor
  7016  044A  3000               	movlw	0
  7017  044B  00F7               	movwf	___lldiv@dividend+3
  7018  044C  3004               	movlw	4
  7019  044D  00F6               	movwf	___lldiv@dividend+2
  7020  044E  3093               	movlw	147
  7021  044F  00F5               	movwf	___lldiv@dividend+1
  7022  0450  30E0               	movlw	224
  7023  0451  00F4               	movwf	___lldiv@dividend
  7024  0452  3185  253B         	fcall	___lldiv
  7025  0454  0870               	movf	?___lldiv,w
  7026  0455  0020               	movlb	0	; select bank0
  7027  0456  07A4               	addwf	_cnts+4,f
  7028  0457  0871               	movf	?___lldiv+1,w
  7029  0458  3DA5               	addwfc	_cnts+5,f
  7030  0459  0872               	movf	?___lldiv+2,w
  7031  045A  3DA6               	addwfc	_cnts+6,f
  7032  045B  0873               	movf	?___lldiv+3,w
  7033  045C  3DA7               	addwfc	_cnts+7,f
  7034                           
  7035                           ;Timer1.c: 87: cnts.Num_of_Detect++;
  7036  045D  3001               	movlw	1
  7037  045E  07AA               	addwf	_cnts+10,f
  7038  045F  3000               	movlw	0
  7039  0460  3DAB               	addwfc	_cnts+11,f
  7040  0461  3000               	movlw	0
  7041  0462  3DAC               	addwfc	_cnts+12,f
  7042  0463  3000               	movlw	0
  7043  0464  3DAD               	addwfc	_cnts+13,f
  7044                           
  7045                           ;Timer1.c: 89: tcnt.Delta_t = 0;
  7046  0465  3000               	movlw	0
  7047  0466  00B1               	movwf	_tcnt+3
  7048  0467  3000               	movlw	0
  7049  0468  00B0               	movwf	_tcnt+2
  7050  0469  3000               	movlw	0
  7051  046A  00AF               	movwf	_tcnt+1
  7052  046B  3000               	movlw	0
  7053  046C  00AE               	movwf	_tcnt
  7054                           
  7055                           ;Timer1.c: 90: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF-10UL; TMR1ON = 1; };
  7056  046D  1018               	bcf	24,0	;volatile
  7057  046E  30FF               	movlw	255
  7058  046F  0097               	movwf	23	;volatile
  7059  0470  30F5               	movlw	245
  7060  0471  0096               	movwf	22	;volatile
  7061  0472  1418               	bsf	24,0	;volatile
  7062                           
  7063                           ;Timer1.c: 91: TMR1IF = 0;
  7064  0473  1011               	bcf	17,0	;volatile
  7065                           
  7066                           ;Timer1.c: 92: return 1;
  7067  0474  3001               	movlw	1
  7068  0475  0008               	return
  7069  0476                     i1l2422:	
  7070                           
  7071                           ;Timer1.c: 93: }
  7072                           ;Timer1.c: 94: return 0;
  7073  0476  3000               	movlw	0
  7074  0477  0008               	return
  7075  0478                     __end_of_Timer1_DetectAssignCount:	
  7076                           
  7077                           	psect	text37
  7078  053B                     __ptext37:	
  7079 ;; *************** function ___lldiv *****************
  7080 ;; Defined at:
  7081 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;  divisor         4    0[COMMON] unsigned long 
  7084 ;;  dividend        4    4[COMMON] unsigned long 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;  quotient        4    9[COMMON] unsigned long 
  7087 ;;  counter         1   13[COMMON] unsigned char 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  4    0[COMMON] unsigned long 
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7097 ;;      Params:         8       0       0       0       0       0
  7098 ;;      Locals:         5       0       0       0       0       0
  7099 ;;      Temps:          1       0       0       0       0       0
  7100 ;;      Totals:        14       0       0       0       0       0
  7101 ;;Total ram usage:       14 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_Timer1_DetectAssignCount
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function ___lldiv
  7112  053B                     ___lldiv:	
  7113                           
  7114                           ;incstack = 0
  7115                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7116  053B  3000               	movlw	0
  7117  053C  00FC               	movwf	___lldiv@quotient+3
  7118  053D  3000               	movlw	0
  7119  053E  00FB               	movwf	___lldiv@quotient+2
  7120  053F  3000               	movlw	0
  7121  0540  00FA               	movwf	___lldiv@quotient+1
  7122  0541  3000               	movlw	0
  7123  0542  00F9               	movwf	___lldiv@quotient
  7124  0543  0873               	movf	___lldiv@divisor+3,w
  7125  0544  0472               	iorwf	___lldiv@divisor+2,w
  7126  0545  0471               	iorwf	___lldiv@divisor+1,w
  7127  0546  0470               	iorwf	___lldiv@divisor,w
  7128  0547  1903               	skipnz
  7129  0548  2D84               	goto	i1l2194
  7130  0549  01FD               	clrf	___lldiv@counter
  7131  054A  0AFD               	incf	___lldiv@counter,f
  7132  054B                     i1l2180:	
  7133  054B  1BF3               	btfsc	___lldiv@divisor+3,7
  7134  054C  2D59               	goto	i1l2182
  7135  054D  3001               	movlw	1
  7136  054E                     u146_25:	
  7137  054E  35F0               	lslf	___lldiv@divisor,f
  7138  054F  0DF1               	rlf	___lldiv@divisor+1,f
  7139  0550  0DF2               	rlf	___lldiv@divisor+2,f
  7140  0551  0DF3               	rlf	___lldiv@divisor+3,f
  7141  0552  0B89               	decfsz	9,f
  7142  0553  2D4E               	goto	u146_25
  7143  0554  3001               	movlw	1
  7144  0555  00F8               	movwf	??___lldiv
  7145  0556  0878               	movf	??___lldiv,w
  7146  0557  07FD               	addwf	___lldiv@counter,f
  7147  0558  2D4B               	goto	i1l2180
  7148  0559                     i1l2182:	
  7149  0559  3001               	movlw	1
  7150  055A                     u148_25:	
  7151  055A  35F9               	lslf	___lldiv@quotient,f
  7152  055B  0DFA               	rlf	___lldiv@quotient+1,f
  7153  055C  0DFB               	rlf	___lldiv@quotient+2,f
  7154  055D  0DFC               	rlf	___lldiv@quotient+3,f
  7155  055E  0B89               	decfsz	9,f
  7156  055F  2D5A               	goto	u148_25
  7157  0560  0873               	movf	___lldiv@divisor+3,w
  7158  0561  0277               	subwf	___lldiv@dividend+3,w
  7159  0562  1D03               	skipz
  7160  0563  2D6E               	goto	u149_25
  7161  0564  0872               	movf	___lldiv@divisor+2,w
  7162  0565  0276               	subwf	___lldiv@dividend+2,w
  7163  0566  1D03               	skipz
  7164  0567  2D6E               	goto	u149_25
  7165  0568  0871               	movf	___lldiv@divisor+1,w
  7166  0569  0275               	subwf	___lldiv@dividend+1,w
  7167  056A  1D03               	skipz
  7168  056B  2D6E               	goto	u149_25
  7169  056C  0870               	movf	___lldiv@divisor,w
  7170  056D  0274               	subwf	___lldiv@dividend,w
  7171  056E                     u149_25:	
  7172  056E  1C03               	skipc
  7173  056F  2D79               	goto	i1l2190
  7174  0570  0870               	movf	___lldiv@divisor,w
  7175  0571  02F4               	subwf	___lldiv@dividend,f
  7176  0572  0871               	movf	___lldiv@divisor+1,w
  7177  0573  3BF5               	subwfb	___lldiv@dividend+1,f
  7178  0574  0872               	movf	___lldiv@divisor+2,w
  7179  0575  3BF6               	subwfb	___lldiv@dividend+2,f
  7180  0576  0873               	movf	___lldiv@divisor+3,w
  7181  0577  3BF7               	subwfb	___lldiv@dividend+3,f
  7182  0578  1479               	bsf	___lldiv@quotient,0
  7183  0579                     i1l2190:	
  7184  0579  3001               	movlw	1
  7185  057A                     u150_25:	
  7186  057A  36F3               	lsrf	___lldiv@divisor+3,f
  7187  057B  0CF2               	rrf	___lldiv@divisor+2,f
  7188  057C  0CF1               	rrf	___lldiv@divisor+1,f
  7189  057D  0CF0               	rrf	___lldiv@divisor,f
  7190  057E  0B89               	decfsz	9,f
  7191  057F  2D7A               	goto	u150_25
  7192  0580  3001               	movlw	1
  7193  0581  02FD               	subwf	___lldiv@counter,f
  7194  0582  1D03               	btfss	3,2
  7195  0583  2D59               	goto	i1l2182
  7196  0584                     i1l2194:	
  7197  0584  087C               	movf	___lldiv@quotient+3,w
  7198  0585  00F3               	movwf	?___lldiv+3
  7199  0586  087B               	movf	___lldiv@quotient+2,w
  7200  0587  00F2               	movwf	?___lldiv+2
  7201  0588  087A               	movf	___lldiv@quotient+1,w
  7202  0589  00F1               	movwf	?___lldiv+1
  7203  058A  0879               	movf	___lldiv@quotient,w
  7204  058B  00F0               	movwf	?___lldiv
  7205  058C  0008               	return
  7206  058D                     __end_of___lldiv:	
  7207                           
  7208                           	psect	text38
  7209  0EB8                     __ptext38:	
  7210 ;; *************** function _Timer1_Count200us *****************
  7211 ;; Defined at:
  7212 ;;		line 62 in file "Timer1.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;		None
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;		None
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  1    wreg      void 
  7219 ;; Registers used:
  7220 ;;		wreg
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7226 ;;      Params:         0       0       0       0       0       0
  7227 ;;      Locals:         0       0       0       0       0       0
  7228 ;;      Temps:          0       0       0       0       0       0
  7229 ;;      Totals:         0       0       0       0       0       0
  7230 ;;Total ram usage:        0 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; This function calls:
  7233 ;;		Nothing
  7234 ;; This function is called by:
  7235 ;;		_Handler
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           
  7240                           ;psect for function _Timer1_Count200us
  7241  0EB8                     _Timer1_Count200us:	
  7242                           
  7243                           ;Timer1.c: 64: tcnt.Delta_t++;
  7244                           
  7245                           ;incstack = 0
  7246                           ; Regs used in _Timer1_Count200us: [wreg]
  7247  0EB8  3001               	movlw	1
  7248  0EB9  0020               	movlb	0	; select bank0
  7249  0EBA  07AE               	addwf	_tcnt,f
  7250  0EBB  3000               	movlw	0
  7251  0EBC  3DAF               	addwfc	_tcnt+1,f
  7252  0EBD  3000               	movlw	0
  7253  0EBE  3DB0               	addwfc	_tcnt+2,f
  7254  0EBF  3000               	movlw	0
  7255  0EC0  3DB1               	addwfc	_tcnt+3,f
  7256  0EC1  0008               	return
  7257  0EC2                     __end_of_Timer1_Count200us:	
  7258                           
  7259                           	psect	text39
  7260  0E95                     __ptext39:	
  7261 ;; *************** function _I2C_CommonInterrupt *****************
  7262 ;; Defined at:
  7263 ;;		line 58 in file "I2C_Common.c"
  7264 ;; Parameters:    Size  Location     Type
  7265 ;;		None
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;		None
  7268 ;; Return value:  Size  Location     Type
  7269 ;;                  1    wreg      void 
  7270 ;; Registers used:
  7271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7272 ;; Tracked objects:
  7273 ;;		On entry : 0/0
  7274 ;;		On exit  : 0/0
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7277 ;;      Params:         0       0       0       0       0       0
  7278 ;;      Locals:         0       0       0       0       0       0
  7279 ;;      Temps:          0       0       0       0       0       0
  7280 ;;      Totals:         0       0       0       0       0       0
  7281 ;;Total ram usage:        0 bytes
  7282 ;; Hardware stack levels used:    1
  7283 ;; Hardware stack levels required when called:    1
  7284 ;; This function calls:
  7285 ;;		_I2C2_Interrupt
  7286 ;; This function is called by:
  7287 ;;		_Handler
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           
  7292                           ;psect for function _I2C_CommonInterrupt
  7293  0E95                     _I2C_CommonInterrupt:	
  7294                           
  7295                           ;I2C_Common.c: 61: I2C2_Interrupt();
  7296                           
  7297                           ;incstack = 0
  7298                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7299  0E95  3184  24E7         	fcall	_I2C2_Interrupt
  7300  0E97  0008               	return
  7301  0E98                     __end_of_I2C_CommonInterrupt:	
  7302                           
  7303                           	psect	text40
  7304  04E7                     __ptext40:	
  7305 ;; *************** function _I2C2_Interrupt *****************
  7306 ;; Defined at:
  7307 ;;		line 152 in file "I2C2.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;		None
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  1    wreg      void 
  7314 ;; Registers used:
  7315 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7321 ;;      Params:         0       0       0       0       0       0
  7322 ;;      Locals:         0       0       0       0       0       0
  7323 ;;      Temps:          1       0       0       0       0       0
  7324 ;;      Totals:         1       0       0       0       0       0
  7325 ;;Total ram usage:        1 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; This function calls:
  7328 ;;		Nothing
  7329 ;; This function is called by:
  7330 ;;		_I2C_CommonInterrupt
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           
  7335                           ;psect for function _I2C2_Interrupt
  7336  04E7                     _I2C2_Interrupt:	
  7337                           
  7338                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  7339                           
  7340                           ;incstack = 0
  7341                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7342  04E7  0020               	movlb	0	; select bank0
  7343  04E8  1C14               	btfss	20,0	;volatile
  7344  04E9  2D33               	goto	i1l2126
  7345  04EA  0021               	movlb	1	; select bank1
  7346  04EB  1C14               	btfss	20,0	;volatile
  7347  04EC  2D33               	goto	i1l2126
  7348                           
  7349                           ;I2C2.c: 155: {
  7350                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  7351  04ED  0024               	movlb	4	; select bank4
  7352  04EE  1E9C               	btfss	28,5	;volatile
  7353  04EF  2D0A               	goto	i1l514
  7354                           
  7355                           ;I2C2.c: 157: {
  7356                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  7357  04F0  1D1C               	btfss	28,2	;volatile
  7358  04F1  2CFD               	goto	i1l2102
  7359                           
  7360                           ;I2C2.c: 159: {
  7361                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  7362  04F2  1B1E               	btfsc	30,6	;volatile
  7363  04F3  2D31               	goto	i1l2124
  7364  04F4                     i1l2094:	
  7365                           ;I2C2.c: 161: {
  7366                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7367                           
  7368  04F4  081C               	movf	28,w	;volatile
  7369  04F5  3901               	andlw	1
  7370  04F6  00F0               	movwf	??_I2C2_Interrupt
  7371  04F7  0E1D               	swapf	29,w	;volatile
  7372  04F8  3901               	andlw	1
  7373  04F9  0470               	iorwf	??_I2C2_Interrupt,w
  7374  04FA  1D03               	btfss	3,2
  7375  04FB  2CF4               	goto	i1l2094
  7376  04FC  2D1D               	goto	L2
  7377  04FD                     i1l2102:	
  7378                           ;I2C2.c: 166: }
  7379                           ;I2C2.c: 167: }
  7380                           
  7381                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  7382                           
  7383                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  7384                           
  7385                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  7386                           
  7387                           
  7388                           ;I2C2.c: 168: else
  7389                           ;I2C2.c: 169: {
  7390                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  7391  04FD  0819               	movf	25,w	;volatile
  7392  04FE  00F0               	movwf	??_I2C2_Interrupt
  7393  04FF  0021               	movlb	1	; select bank1
  7394  0500  086D               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  7395  0501  0086               	movwf	6
  7396  0502  0187               	clrf	7
  7397  0503  0870               	movf	??_I2C2_Interrupt,w
  7398  0504  0081               	movwf	1
  7399                           
  7400                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  7401  0505  3001               	movlw	1
  7402  0506  00F0               	movwf	??_I2C2_Interrupt
  7403  0507  0870               	movf	??_I2C2_Interrupt,w
  7404  0508  07ED               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  7405  0509  2D2F               	goto	i1l2122
  7406  050A                     i1l514:	
  7407                           ;I2C2.c: 173: }
  7408                           ;I2C2.c: 174: }
  7409                           
  7410                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  7411                           
  7412                           
  7413                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  7414  050A  1A9C               	btfsc	28,5	;volatile
  7415  050B  2D31               	goto	i1l2124
  7416                           
  7417                           ;I2C2.c: 176: {
  7418                           ;I2C2.c: 177: SSP2BUF;
  7419  050C  0819               	movf	25,w	;volatile
  7420                           
  7421                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  7422  050D  1D1C               	btfss	28,2	;volatile
  7423  050E  2D2A               	goto	i1l2120
  7424                           
  7425                           ;I2C2.c: 180: {
  7426                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  7427  050F  30DC               	movlw	(low (_I2C2_Config| 0))& (0+255)
  7428  0510  00F0               	movwf	??_I2C2_Interrupt
  7429  0511  0870               	movf	??_I2C2_Interrupt,w
  7430  0512  0021               	movlb	1	; select bank1
  7431  0513  00EC               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  7432  0514                     i1l2114:	
  7433                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7434                           
  7435  0514  0024               	movlb	4	; select bank4
  7436  0515  081C               	movf	28,w	;volatile
  7437  0516  3901               	andlw	1
  7438  0517  00F0               	movwf	??_I2C2_Interrupt
  7439  0518  0E1D               	swapf	29,w	;volatile
  7440  0519  3901               	andlw	1
  7441  051A  0470               	iorwf	??_I2C2_Interrupt,w
  7442  051B  1D03               	btfss	3,2
  7443  051C  2D14               	goto	i1l2114
  7444  051D                     L2:	
  7445                           
  7446                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  7447  051D  0021               	movlb	1	; select bank1
  7448  051E  086C               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  7449  051F  0086               	movwf	6
  7450  0520  0187               	clrf	7
  7451  0521  0801               	movf	1,w
  7452  0522  0024               	movlb	4	; select bank4
  7453  0523  0099               	movwf	25	;volatile
  7454                           
  7455                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  7456  0524  3001               	movlw	1
  7457  0525  00F0               	movwf	??_I2C2_Interrupt
  7458  0526  0870               	movf	??_I2C2_Interrupt,w
  7459  0527  0021               	movlb	1	; select bank1
  7460  0528  07EC               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  7461                           
  7462                           ;I2C2.c: 186: }
  7463  0529  2D2F               	goto	i1l2122
  7464  052A                     i1l2120:	
  7465                           
  7466                           ;I2C2.c: 187: else
  7467                           ;I2C2.c: 188: {
  7468                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  7469  052A  30E4               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  7470  052B  00F0               	movwf	??_I2C2_Interrupt
  7471  052C  0870               	movf	??_I2C2_Interrupt,w
  7472  052D  0021               	movlb	1	; select bank1
  7473  052E  00ED               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  7474  052F                     i1l2122:	
  7475                           
  7476                           ;I2C2.c: 190: }
  7477                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  7478  052F  0024               	movlb	4	; select bank4
  7479  0530  161D               	bsf	29,4	;volatile
  7480  0531                     i1l2124:	
  7481                           
  7482                           ;I2C2.c: 192: }
  7483                           ;I2C2.c: 193: SSP2IF = 0;
  7484  0531  0020               	movlb	0	; select bank0
  7485  0532  1014               	bcf	20,0	;volatile
  7486  0533                     i1l2126:	
  7487                           
  7488                           ;I2C2.c: 194: }
  7489                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  7490  0533  0021               	movlb	1	; select bank1
  7491  0534  1C94               	btfss	20,1	;volatile
  7492  0535  0008               	return
  7493  0536  0020               	movlb	0	; select bank0
  7494  0537  1C94               	btfss	20,1	;volatile
  7495  0538  0008               	return
  7496                           
  7497                           ;I2C2.c: 197: BCL2IF = 0;
  7498  0539  1094               	bcf	20,1	;volatile
  7499  053A  0008               	return
  7500  053B                     __end_of_I2C2_Interrupt:	
  7501                           
  7502                           	psect	text41
  7503  0F7E                     __ptext41:	
  7504 ;; *************** function _Buzzer_Count1ms *****************
  7505 ;; Defined at:
  7506 ;;		line 44 in file "Buzzer.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;		None
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  1    wreg      void 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0, pclath, cstack
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7520 ;;      Params:         0       0       0       0       0       0
  7521 ;;      Locals:         0       0       0       0       0       0
  7522 ;;      Temps:          0       0       0       0       0       0
  7523 ;;      Totals:         0       0       0       0       0       0
  7524 ;;Total ram usage:        0 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    1
  7527 ;; This function calls:
  7528 ;;		_Buzzer_SetDuty
  7529 ;; This function is called by:
  7530 ;;		_Handler
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           
  7535                           ;psect for function _Buzzer_Count1ms
  7536  0F7E                     _Buzzer_Count1ms:	
  7537                           
  7538                           ;Buzzer.c: 46: if(count>0)
  7539                           
  7540                           ;incstack = 0
  7541                           ; Regs used in _Buzzer_Count1ms: [wreg+status,2+status,0+pclath+cstack]
  7542  0F7E  0020               	movlb	0	; select bank0
  7543  0F7F  0841               	movf	_count,w
  7544  0F80  0442               	iorwf	_count+1,w
  7545  0F81  1903               	btfsc	3,2
  7546  0F82  2F8E               	goto	i1l2272
  7547                           
  7548                           ;Buzzer.c: 47: {
  7549                           ;Buzzer.c: 48: count--;
  7550  0F83  3001               	movlw	1
  7551  0F84  02C1               	subwf	_count,f
  7552  0F85  3000               	movlw	0
  7553  0F86  3BC2               	subwfb	_count+1,f
  7554                           
  7555                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  7556  0F87  30FF               	movlw	255
  7557  0F88  00F0               	movwf	Buzzer_SetDuty@duty
  7558  0F89  3001               	movlw	1
  7559  0F8A  00F1               	movwf	Buzzer_SetDuty@duty+1
  7560  0F8B  318F  27C8         	fcall	_Buzzer_SetDuty
  7561                           
  7562                           ;Buzzer.c: 50: }
  7563  0F8D  0008               	return
  7564  0F8E                     i1l2272:	
  7565                           
  7566                           ;Buzzer.c: 51: else
  7567                           ;Buzzer.c: 52: {
  7568                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  7569  0F8E  3000               	movlw	0
  7570  0F8F  00F0               	movwf	Buzzer_SetDuty@duty
  7571  0F90  00F1               	movwf	Buzzer_SetDuty@duty+1
  7572  0F91  318F  27C8         	fcall	_Buzzer_SetDuty
  7573  0F93  0008               	return
  7574  0F94                     __end_of_Buzzer_Count1ms:	
  7575                           
  7576                           	psect	text42
  7577  0FC8                     __ptext42:	
  7578 ;; *************** function _Buzzer_SetDuty *****************
  7579 ;; Defined at:
  7580 ;;		line 31 in file "Buzzer.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  duty            2    0[COMMON] unsigned int 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  7585 ;; Return value:  Size  Location     Type
  7586 ;;                  1    wreg      void 
  7587 ;; Registers used:
  7588 ;;		wreg, status,2, status,0
  7589 ;; Tracked objects:
  7590 ;;		On entry : 0/0
  7591 ;;		On exit  : 0/0
  7592 ;;		Unchanged: 0/0
  7593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7594 ;;      Params:         2       0       0       0       0       0
  7595 ;;      Locals:         1       0       0       0       0       0
  7596 ;;      Temps:          2       0       0       0       0       0
  7597 ;;      Totals:         5       0       0       0       0       0
  7598 ;;Total ram usage:        5 bytes
  7599 ;; Hardware stack levels used:    1
  7600 ;; This function calls:
  7601 ;;		Nothing
  7602 ;; This function is called by:
  7603 ;;		_Buzzer_Count1ms
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _Buzzer_SetDuty
  7609  0FC8                     _Buzzer_SetDuty:	
  7610                           
  7611                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  7612                           
  7613                           ;incstack = 0
  7614                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  7615  0FC8  0025               	movlb	5	; select bank5
  7616  0FC9  081A               	movf	26,w	;volatile
  7617  0FCA  39CF               	andlw	207
  7618  0FCB  00F2               	movwf	??_Buzzer_SetDuty
  7619  0FCC  0872               	movf	??_Buzzer_SetDuty,w
  7620  0FCD  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  7621                           
  7622                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  7623  0FCE  0871               	movf	Buzzer_SetDuty@duty+1,w
  7624  0FCF  00F3               	movwf	??_Buzzer_SetDuty+1
  7625  0FD0  0870               	movf	Buzzer_SetDuty@duty,w
  7626  0FD1  00F2               	movwf	??_Buzzer_SetDuty
  7627  0FD2  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  7628  0FD3  0CF2               	rrf	??_Buzzer_SetDuty,f
  7629  0FD4  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  7630  0FD5  0CF2               	rrf	??_Buzzer_SetDuty,f
  7631  0FD6  0872               	movf	??_Buzzer_SetDuty,w
  7632  0FD7  0098               	movwf	24	;volatile
  7633                           
  7634                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  7635  0FD8  0870               	movf	Buzzer_SetDuty@duty,w
  7636  0FD9  3903               	andlw	3
  7637  0FDA  00F2               	movwf	??_Buzzer_SetDuty
  7638  0FDB  3003               	movlw	3
  7639  0FDC                     u126_25:	
  7640  0FDC  35F2               	lslf	??_Buzzer_SetDuty,f
  7641  0FDD  3EFF               	addlw	-1
  7642  0FDE  1D03               	skipz
  7643  0FDF  2FDC               	goto	u126_25
  7644  0FE0  3572               	lslf	??_Buzzer_SetDuty,w
  7645  0FE1  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  7646  0FE2  009A               	movwf	26	;volatile
  7647  0FE3  0008               	return
  7648  0FE4                     __end_of_Buzzer_SetDuty:	
  7649  007E                     btemp	set	126	;btemp
  7650  007E                     int$flags	set	126
  7651  007E                     wtemp0	set	126


Data Sizes:
    Strings     312
    Constant    40
    Data        90
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      75
    BANK1            80      0      79
    BANK2            80      0      30
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_49(CODE[7]), STR_48(CODE[7]), STR_47(CODE[7]), STR_46(CODE[7]), 
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[7]), STR_42(CODE[6]), 
		 -> STR_41(CODE[6]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[5]), 
		 -> STR_37(CODE[5]), STR_36(CODE[5]), STR_35(CODE[5]), 

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_34(CODE[8]), STR_33(CODE[8]), STR_32(CODE[8]), STR_31(CODE[7]), 
		 -> STR_30(CODE[7]), STR_29(CODE[7]), STR_28(CODE[7]), STR_27(CODE[7]), 
		 -> STR_26(CODE[6]), STR_25(CODE[6]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 

    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[6]), 
		 -> STR_15(CODE[5]), STR_14(CODE[6]), STR_13(CODE[5]), STR_12(CODE[6]), 
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[5]), STR_8(CODE[6]), 
		 -> STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[5]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S40$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), 

    S40$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Timer1_DetectAssignCount->___lldiv
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Count1ms->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_LCD_WriteData
    ___lwmod->___lwdiv
    _mTouch_Init->_mTouch_PortInit
    _mTouch_Check->_Buzzer_MiliSecond
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _DAC_WriteVoltage->_I2C_Transmit
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4723
                                             35 BANK0      1     1      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                   _DAC_WriteVoltage
                     _LCD_CursorHome
                           _LCD_Init
                      _Timer1_GetCPM
                 _Timer1_GetCountSum
                        _Timer1_Init
                  _Timer1_StartCount
                        _Timer4_Init
                        _Timer6_Init
                       _mTouch_Check
                        _mTouch_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              28    20      8    1755
                                             15 BANK0     20    12      8
                      _Timer1_GetCPM (ARG)
                 _Timer1_GetCountSum (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     110
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              1 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              1 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              9 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              1 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              2 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _mTouch_Check                                         6     6      0     196
                                              3 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2      86
                                              1 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StartCount                                    0     0      0       0
                 _Timer1_ClearRecord
 ---------------------------------------------------------------------------------
 (2) _Timer1_ClearRecord                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                              1 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        2     0      2       0
                                              1 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              5 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0      88
                                              1 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_WriteVoltage                                     5     3      2    1049
                                             17 BANK0      5     3      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    1459
                                             17 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3     941
                                              9 BANK0      8     5      3
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     446
                                              1 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3     518
                                              6 BANK0      6     3      3
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     238
                                              2 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              1     1      0     613
                                              0 BANK0      1     1      0
                    _Buzzer_Count1ms
                _I2C_CommonInterrupt
                  _Timer1_Count200us
           _Timer1_DetectAssignCount
                   _Timer4_CheckFlag
                   _Timer6_CheckFlag
           _mTouch_IntervalDecrement
                        _mTouch_Read
 ---------------------------------------------------------------------------------
 (6) _mTouch_Read                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer6_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer4_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_DetectAssignCount                             0     0      0     418
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             14     6      8     418
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (6) _Timer1_Count200us                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Buzzer_Count1ms                                      0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (7) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C2_Transmit
   _DAC_WriteVoltage
     _I2C_Transmit
       _I2C2_Transmit
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
   _Timer1_GetCountSum
   _Timer1_Init
   _Timer1_StartCount
     _Timer1_ClearRecord
   _Timer4_Init
   _Timer6_Init
   _mTouch_Check
     _Buzzer_MiliSecond
   _mTouch_Init
     _mTouch_PortInit
   _printf
     _Timer1_GetCPM (ARG)
     _Timer1_GetCountSum (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Count1ms
     _Buzzer_SetDuty
   _I2C_CommonInterrupt
     _I2C2_Interrupt
   _Timer1_Count200us
   _Timer1_DetectAssignCount
     ___lldiv
   _Timer4_CheckFlag
   _Timer6_CheckFlag
   _mTouch_IntervalDecrement
   _mTouch_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     24      4B       6       93.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      1E      10       37.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C6      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Jun 15 11:55:14 2017

                        _LCD_CursorHome 0F16                             __CFG_CP$OFF 0000  
                                    l54 0FAA                          I2C2_Transmit@i 004D  
                 ??_I2C_CommonInterrupt 0071                     ___wmul@multiplicand 004A  
                                   l431 05DD                                     l435 060E  
                                   l448 02F5                                     l457 031E  
                                   l466 033B                                     l566 02D3  
                                   l691 0FED                                     _GIE 005F  
                                   _PR2 001B                                     _PR4 0416  
                       _Buzzer_Count1ms 0F7E                            __CFG_CPD$OFF 0000  
                                   _PR6 041D                            __CFG_BORV$LO 0000  
                                   wreg 0009                              _Basic_Init 0F47  
                          __CFG_LVP$OFF 0000              ??_Timer1_DetectAssignCount 007E  
                                  l2002 0301                                    l2020 035D  
                                  l2004 0305                                    l2006 032C  
                                  l2016 0341                                    l2024 0360  
                                  l2018 0358                                    l2026 0369  
                                  l2210 06A3                                    l2220 06BE  
                                  l2064 0F97                                    l2072 0FB0  
                                  l2216 06B5                                    l2208 0697  
                                  l2232 06F9                                    l2234 0705  
                                  l2242 071A                                    l2162 0FE7  
                                  l2068 0FA4                                    l2076 0FC1  
                                  l2156 0F14                                    l2078 0FC6  
                                  l2238 0711                                    l2600 01C3  
                                  l2522 0595                                    l2534 05CF  
                                  l2550 01F0                                    l2544 01DF  
                                  l2712 0396                                    l2562 0225  
                                  l2730 03DE                                    l2580 026A  
                                  l2564 023A                                    l2732 03E7  
                                  l2724 03B4                                    l2574 024B  
                                  l2558 021F                                    l2726 03B8  
                                  l2718 03A7                                    l1960 05F2  
                                  l2592 029A                                    l2584 0286  
                                  l2728 03D5                                    l2736 03F0  
                                  l1962 05F4                                    l1954 05E7  
                                  l2586 0289                                    l1972 0603  
                                  l1980 02D8                                    l2588 028D  
                                  l1982 02E6                                    l2598 029E  
                                  l1976 0605                                    l1992 0309  
                     ?_DAC_WriteVoltage 0058                                    STR_1 009B  
                                  STR_2 0086                                    STR_3 00BD  
                                  STR_4 0091                                    STR_5 01A5  
                                  STR_6 0155                                    STR_7 01AA  
                                  STR_8 015B                                    STR_9 01AF  
                                  u1255 061F                                    u2137 0481  
                                  u1425 0FEE                                    u2147 049A  
                                  u1435 0FF3                                    u2157 04AF  
                                  u1605 06FC                                    u2167 04C4  
                                  u1535 069A                                    u2177 0F30  
                                  u1625 070B                                    u2187 0F20  
                                  u1555 06A4                                    u1635 0712  
                                  u2197 0618                                    u1725 05B5  
                                  u1565 06AE                                    u1805 0279  
                                  u1575 06B6                                    u1785 0260  
                                  _PEIE 005E                   Buzzer_MiliSecond@time 0048  
                                  _TMR0 0015                                    _TMR1 0016  
                                  _TMR2 001A                                    _TMR4 0415  
                                  _TMR6 041C                                    _WPUB 020D  
                          __CFG_WRT$OFF 0000                      ??_DAC_WriteVoltage 005A  
                                  _cnts 0020                                    _main 036C  
                                  _mode 003D                        __end_of_I2C_Init 0FAD  
                                  _tcnt 002E                                    fsr0h 0005  
                                  fsr1h 0007                                    indf0 0000  
                                  fsr0l 0004                                    indf1 0001  
                                  fsr1l 0006                                    btemp 007E  
                         __CFG_BOREN$ON 0000                         ??_I2C2_Transmit 004A  
                                  start 0031                           __CFG_IESO$OFF 0000  
                       __end_of_Handler 0031                  __end_of_LCD_CursorHome 0F26  
                         _LCD_WriteData 0615                           __CFG_MCLRE$ON 0000  
                      ??_I2C2_Interrupt 0070                __end_of_LCD_DisplayClear 0F36  
                 __size_of_I2C_Transmit 001B                        __end_of_LCD_Init 04E7  
                         __CFG_PLLEN$ON 0000                                   ?_main 0070  
                                 STR_10 0161                                   STR_11 01B4  
                                 STR_12 0167                                   STR_20 0187  
                                 STR_13 01B9                                   STR_21 0182  
                                 STR_14 016D                                   STR_30 00C5  
                                 STR_22 0191                                   STR_15 0196  
                                 STR_31 010B                                   STR_23 0143  
                                 STR_40 0131                                   STR_16 0149  
                                 STR_32 00B5                                   STR_24 0119  
                                 STR_41 0137                                   STR_17 019B  
                                 STR_33 00AD                                   STR_25 0125  
                         __CFG_WDTE$OFF 0000                                   STR_42 011F  
                                 STR_18 014F                                   STR_34 00A5  
                                 STR_26 013D                                   STR_43 00DA  
                                 STR_35 0173                                   STR_19 01A0  
                                 STR_27 00F6                                   STR_44 0104  
                                 STR_36 0178                                   STR_28 00EF  
                                 STR_45 00E1                                   STR_37 018C  
                                 STR_29 00FD                                   STR_46 00E8  
                                 STR_38 017D                                   STR_47 0112  
                                 STR_39 012B                                   STR_48 00CC  
                                 STR_49 00D3                         __end_of___lldiv 058D  
                                 _T1CON 0018                                   _T2CON 001C  
                                 _LATA3 0863                                   _LATA4 0864  
                                 _LATA6 0866                                   _T4CON 0417  
                                 _T6CON 041E                         __end_of___lwdiv 06C3  
           __size_of_Timer1_ClearRecord 0028                         __end_of___lwmod 071F  
                                 i1l514 050A                                   i1l372 002A  
                                 i1l376 0F3C                                   i1l377 0F41  
                                 _PORTA 000C                                   _PORTB 000D  
                                 _TRISA 008C                                   _TRISB 008D  
                     I2C2_Transmit@size 0049                           __CFG_PWRTE$ON 0000  
                        __CFG_FCMEN$OFF 0000                         __end_of_dpowers 0086  
                                 _count 0041                         __end_of_isdigit 0F16  
                                 _putch 0EAF                           ??_Buzzer_Init 0048  
                 __end_of_Timer1_GetCPM 0EA3             __size_of_Timer1_GetCountSum 000A  
                                 status 0003                                   wtemp0 007E  
                     _Buzzer_MiliSecond 0ECC                            _I2C_Transmit 0FAD  
                        ?_LCD_WriteData 0070                      ?_Buzzer_MiliSecond 0048  
                      ??_DAC_Initialize 0058                         ?_LCD_CursorHome 0070  
                       __initialization 0033                            __end_of_main 0400  
               __end_of_Buzzer_Count1ms 0F94                     ??_Buzzer_MiliSecond 004A  
                                ??_main 006A                    __end_of_mTouch_Check 05D1  
                           ?_Basic_Init 0070                                  _BCL2IE 04A1  
                                _BCL2IF 00A1                    __size_of_mTouch_Init 0013  
                  __size_of_mTouch_Read 0025                                  _CCPR2L 0298  
                                _ANSELA 018C                                  ?_putch 0070  
                                _ANSELB 018D                                  _T1GCON 0019  
                                i1l2102 04FD                                  i1l2120 052A  
                                i1l2122 052F                                  i1l2114 0514  
                                i1l2124 0531                                  i1l2126 0533  
                                i1l2180 054B                                  i1l1620 0EEA  
                                i1l2094 04F4                                  i1l2190 0579  
                                i1l2182 0559                                  i1l2422 0476  
                                i1l2272 0F8E                                  i1l2194 0584  
                                i1l1588 0EDF                                  i1l2398 0434  
                                i1l2742 0012                                  i1l2746 001B  
                       _mTouch_Interval 0034                      I2C2_Transmit@i_558 004E  
                                u126_25 0FDC                                  u150_25 057A  
             __end_of_Buzzer_MiliSecond 0ED6                                  u146_25 054E  
                                u148_25 055A                                  u149_25 056E  
                                _OSCCON 0099                      I2C2_Transmit@pData 0048  
                                _TMR1IE 0488                                  _TMR1IF 0088  
                             ??_Handler 0047                                  _TMR4IE 0499  
                                _TMR4IF 0099                                  _TMR6IE 049B  
                                _TMR1ON 00C0                                  _TMR6IF 009B  
                                _SSP2IE 04A0                                  _SSP2IF 00A0  
              _mTouch_IntervalDecrement 0F36                         _mTouch_PortInit 07F3  
                         ??_Timer1_Init 0048                           ??_Timer4_Init 0048  
                   __end_of_Buzzer_Init 076F                           ??_Timer6_Init 0048  
                                ___wmul 0FE4                               ??___lldiv 0078  
                             ??___lwdiv 004C                               ??___lwmod 0054  
                                _printf 01BE                       ?_Timer4_CheckFlag 0070  
                      I2C_Transmit@I2Cx 0056                               ??_isdigit 0048  
                             ?_I2C_Init 004D                      ??_Timer4_CheckFlag 0070  
                                putch@c 004B                        I2C_Transmit@size 0052  
               __end_of__initialization 005A                               ?_LCD_Init 0070  
                       ??_LCD_WriteData 0048                       ?_Timer6_CheckFlag 0070  
                            _VoltageReg 0044                      ??_Timer6_CheckFlag 0070  
                    Buzzer_SetDuty@duty 0070                          __pcstackCOMMON 0070  
                   __size_of_Basic_Init 0011                            __pidataBANK1 0652  
                          __pidataBANK2 07D5                        ?_Buzzer_Count1ms 0070  
                         __end_of_putch 0EB8                     __end_of_Timer1_Init 07B5  
                   __end_of_Timer4_Init 0F07                     __end_of_Timer6_Init 0F6B  
             Buzzer_SetDuty@CCP2CON_Pre 0074                              ??_I2C_Init 0050  
                               ??_putch 004B                 __end_of_mTouch_PortInit 0800  
                            __pbssBANK0 0020                              __pbssBANK1 00DC  
            __size_of_Buzzer_MiliSecond 000A                             _Buzzer_Init 0747  
                            ??_LCD_Init 004C                 __size_of_Buzzer_SetDuty 001C  
                         _DAC_DataTable 005E                            I2C_Init@I2Cx 0052  
           __end_of_I2C_CommonInterrupt 0E98                            I2C_Init@mode 004E  
                            __pmaintext 036C                                 ?___wmul 0048  
             __size_of_DAC_WriteVoltage 002F                              __pintentry 0004  
                 __size_of_mTouch_Check 0044                                 _CCP2CON 029A  
                     ?_LCD_DisplayClear 0070                                 _APFCON0 011D  
                               _APFCON1 011E                                 _CCPTMRS 029E  
                               ?_printf 0056                      ??_LCD_DisplayClear 004B  
                               _CPSCON0 001E                                 _CPSCON1 001F  
                               _SSP2ADD 021A                                 _SSP2BUF 0219  
                               _SSP2MSK 021B                     I2C2_Transmit@result 004F  
                      ??_LCD_CursorHome 004B                                 _Handler 0004  
                    mTouch_Read@channel 0043                            _mTouch_Check 058D  
                     _Timer1_Count200us 0EB8                   __end_of_I2C2_Transmit 036C  
                           _Timer1_Init 0794                             _Timer4_Init 0EF9  
                           _Timer6_Init 0F58                      ?_Timer1_Count200us 0070  
     __size_of_Timer1_DetectAssignCount 0078               ?_Timer1_DetectAssignCount 0070  
                               ___lldiv 053B                         __size_of___wmul 001C  
                               ___lwdiv 068E                                 ___lwmod 06F2  
                       __CFG_STVREN$OFF 0000              __end_of_Timer1_ClearRecord 0747  
                               __ptext1 01BE                                 __ptext2 0EAF  
                               __ptext3 0F07                                 __ptext4 0FE4  
                               __ptext5 06F2                                 __ptext6 068E  
                               __ptext7 0F6B                                 __ptext8 07F3  
                               __ptext9 058D                     ??_Timer1_Count200us 0070  
                       __size_of_printf 0116                                 _dpowers 007C  
                               _isdigit 0F07                            ??_Basic_Init 0048  
            ??_mTouch_IntervalDecrement 0070                                 clrloop0 0EA4  
            __end_of_Timer1_GetCountSum 0ECC                    end_of_initialization 005A  
                      ?_mTouch_PortInit 0070                                 init_ram 0EA9  
                               initloop 0EAA               __end_of_Timer1_Count200us 0EC2  
                         ?_I2C2_PinInit 0070                             _I2C2_Config 00DC  
                       ___lldiv@divisor 0070                           ?_I2C2_Setting 0049  
                       ___lldiv@counter 007D                       I2C_Transmit@pData 0051  
                               printf@c 0069                                 printf@f 0056  
                    __end_of_Basic_Init 0F58                        _DAC_VoltageTable 00BE  
                          __pstringtext 005E                  __size_of_Timer1_GetCPM 0006  
                      __CFG_FOSC$INTOSC 0000                           ??_mTouch_Init 0049  
                         ??_mTouch_Read 0070                 __size_of_I2C2_Interrupt 0054  
                     __size_of_I2C_Init 0019               __size_of_Timer4_CheckFlag 000B  
                        ??_I2C2_PinInit 0048                          _Buzzer_SetDuty 0FC8  
                           printf@width 0067                          ??_I2C2_Setting 004B  
                         _H7826_01_Gain 0120                       __size_of_LCD_Init 006F  
                     _Timer1_StartCount 0E98                        _DAC_WriteVoltage 06C3  
                    ?_Timer1_StartCount 0070                          __end_of___wmul 1000  
                             _ConfigReg 0046               __size_of_Timer6_CheckFlag 000B  
                   ??_Timer1_StartCount 0048                 __size_of_DAC_Initialize 0020  
                        __end_of_printf 02D4                     start_initialization 0033  
                __end_of_Buzzer_SetDuty 0FE4                            ?_Buzzer_Init 0070  
                   __end_of_mTouch_Init 0F7E                     __end_of_mTouch_Read 0794  
                         _Timer1_GetCPM 0E9D                     I2C2_Setting@address 004C  
            __size_of_Timer1_Count200us 000A               __end_of_Timer1_StartCount 0E9D  
                 __end_of_LCD_WriteData 0652                                ??___wmul 004C  
                           __pdataBANK1 00A0                             __pdataBANK2 0120  
                              ??_printf 005E                __size_of_Buzzer_Count1ms 0016  
                             ___latbits 0001                           __pcstackBANK0 0047  
      __end_of_mTouch_IntervalDecrement 0F47               __size_of_LCD_DisplayClear 0010  
                       ?_Buzzer_SetDuty 0070                          ?_Timer1_GetCPM 0048  
      __end_of_Timer1_DetectAssignCount 0478                         I2C_Init@address 004D  
                              ?_Handler 0070                           ?_I2C_Transmit 0050  
                         I2C_Init@Speed 004F                            ?_Timer1_Init 0070  
                      ___lwdiv@dividend 004A                            ?_Timer4_Init 0070  
                 DAC_WriteVoltage@volue 0058                            ?_Timer6_Init 0070  
                              ?___lldiv 0070                                ?___lwdiv 0048  
                              ?___lwmod 0050            __size_of_I2C_CommonInterrupt 0003  
                  __end_of_I2C2_PinInit 0EF9  Timer1_DetectAssignCount@PreviousTimer1 003F  
                              ?_isdigit 0070                                _I2C_Init 0F94  
                  __end_of_I2C2_Setting 0615                          _I2C2_Interrupt 04E7  
                            _H7826_Gain 00A0                             _mTouch_Init 0F6B  
                           _mTouch_Read 076F                        ___lwdiv@quotient 004D  
                    _Timer1_ClearRecord 071F                          __size_of_putch 0009  
                      _Timer4_CheckFlag 0ED6                                _LCD_Init 0478  
                        ___wmul@product 004C                                _CPS_Data 0037  
                        ??_I2C_Transmit 0053                     ?_Timer1_ClearRecord 0070  
            __size_of_Timer1_StartCount 0005                               clear_ram0 0EA3  
                    _Timer1_GetCountSum 0EC2                    I2C2_Transmit@address 004C  
                              _SSP2CON1 021D                                _SSP2CON2 021E  
                              _SSP2STAT 021C                     ?_Timer1_GetCountSum 0048  
                      _Timer6_CheckFlag 0EE1                       ___wmul@multiplier 0048  
                      mTouch_Check@chan 004F                          _DAC_Initialize 07B5  
                  ??_Timer1_ClearRecord 0048                  __end_of_I2C2_Interrupt 053B  
                            printf@flag 0062                              printf@prec 0066  
                __size_of_I2C2_Transmit 0098                         ??_Timer1_GetCPM 004A  
              __end_of_DAC_WriteVoltage 06F2                             _CPS_PreData 003A  
                     ??_Buzzer_Count1ms 0075                    ??_Timer1_GetCountSum 004C  
                      __size_of_Handler 002D                    __size_of_Buzzer_Init 0028  
              _Timer1_DetectAssignCount 0400                __size_of_mTouch_PortInit 000D  
     __size_of_mTouch_IntervalDecrement 0011               ?_mTouch_IntervalDecrement 0070  
               __size_of_LCD_CursorHome 0010                  __end_of_DAC_Initialize 07D5  
                      __size_of___lldiv 0052                        __size_of___lwdiv 0035  
                      __size_of___lwmod 002D                      LCD_WriteData@point 004A  
                           _isdigit$803 0048                         ?_I2C2_Interrupt 0070  
                      __size_of_isdigit 000F                         ___lwdiv@divisor 0048  
                       ___lwdiv@counter 004F                                __ptext10 0ECC  
                              __ptext11 0F58                                __ptext20 0F16  
                              __ptext12 0EF9                                __ptext21 0615  
                              __ptext13 0E98                                __ptext30 0F47  
                              __ptext22 06C3                                __ptext14 071F  
                              __ptext23 07B5                                __ptext15 0794  
                              __ptext40 04E7                                __ptext32 076F  
                              __ptext24 0FAD                                __ptext16 0EC2  
                              __ptext41 0F7E                                __ptext33 0F36  
                              __ptext25 02D4                                __ptext17 0E9D  
                              __ptext42 0FC8                                __ptext34 0EE1  
                              __ptext26 0F94                                __ptext18 0478  
                              __ptext35 0ED6                                __ptext27 05D1  
                              __ptext19 0F26                                __ptext36 0400  
                              __ptext28 0EEC                                __ptext37 053B  
                              __ptext29 0747                                __ptext38 0EB8  
                              __ptext39 0E95                        _LCD_DisplayClear 0F26  
                          _SSP2CON1bits 021D                            _SSP2CON2bits 021E  
                 __end_of_DAC_DataTable 007C                           __size_of_main 0094  
                         _I2C2_Transmit 02D4                    __size_of_Timer1_Init 0021  
                              int$flags 007E                   __size_of_I2C2_PinInit 000D  
                  __size_of_Timer4_Init 000E                     I2C_Transmit@address 0050  
                  __size_of_Timer6_Init 0013                         ?_DAC_Initialize 0070  
                             printf@val 0064                   __size_of_I2C2_Setting 0044  
                          _SSP2STATbits 021C                    __end_of_I2C_Transmit 0FC8  
                     I2C2_Setting@Speed 004A                        ??_Buzzer_SetDuty 0072  
                              isdigit@c 0049                                intlevel1 0000  
                      ___lwmod@dividend 0052                     _I2C_CommonInterrupt 0E95  
                      ___lldiv@dividend 0074                       __CFG_CLKOUTEN$OFF 0000  
                          _I2C2_PinInit 0EEC                           ?_mTouch_Check 0070  
                        ?_I2C2_Transmit 0048                            _I2C2_Setting 05D1  
                              printf@ap 0063                      I2C_Transmit@result 0057  
                     ??_mTouch_PortInit 0048                        I2C2_Setting@mode 0049  
                  ?_I2C_CommonInterrupt 0070                __end_of_Timer4_CheckFlag 0EE1  
                            _OPTION_REG 0095                        ___lldiv@quotient 0079  
                       ___lwmod@divisor 0050                         ___lwmod@counter 0055  
                          ?_mTouch_Init 0070                            ?_mTouch_Read 0070  
                __size_of_LCD_WriteData 003D                __end_of_Timer6_CheckFlag 0EEC  
                        ??_mTouch_Check 004A  
