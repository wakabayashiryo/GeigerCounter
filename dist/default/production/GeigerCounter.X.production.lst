

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Jun 18 01:43:54 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     
    65                           ; Version 1.41
    66                           ; Generated 25/01/2017 GMT
    67                           ; 
    68                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F1827 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  0111                     	;# 
   148  0112                     	;# 
   149  0113                     	;# 
   150  0114                     	;# 
   151  0115                     	;# 
   152  0116                     	;# 
   153  0117                     	;# 
   154  0118                     	;# 
   155  0119                     	;# 
   156  011A                     	;# 
   157  011B                     	;# 
   158  011D                     	;# 
   159  011E                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0191                     	;# 
   163  0191                     	;# 
   164  0192                     	;# 
   165  0193                     	;# 
   166  0193                     	;# 
   167  0193                     	;# 
   168  0194                     	;# 
   169  0195                     	;# 
   170  0196                     	;# 
   171  0199                     	;# 
   172  019A                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  019C                     	;# 
   179  019D                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020D                     	;# 
   184  0211                     	;# 
   185  0211                     	;# 
   186  0212                     	;# 
   187  0212                     	;# 
   188  0213                     	;# 
   189  0213                     	;# 
   190  0214                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0216                     	;# 
   196  0216                     	;# 
   197  0217                     	;# 
   198  0217                     	;# 
   199  0219                     	;# 
   200  021A                     	;# 
   201  021B                     	;# 
   202  021C                     	;# 
   203  021D                     	;# 
   204  021E                     	;# 
   205  021F                     	;# 
   206  0291                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0293                     	;# 
   210  0294                     	;# 
   211  0295                     	;# 
   212  0295                     	;# 
   213  0296                     	;# 
   214  0298                     	;# 
   215  0298                     	;# 
   216  0299                     	;# 
   217  029A                     	;# 
   218  029B                     	;# 
   219  029C                     	;# 
   220  029C                     	;# 
   221  029D                     	;# 
   222  029E                     	;# 
   223  029E                     	;# 
   224  0311                     	;# 
   225  0311                     	;# 
   226  0312                     	;# 
   227  0313                     	;# 
   228  0318                     	;# 
   229  0318                     	;# 
   230  0319                     	;# 
   231  031A                     	;# 
   232  0394                     	;# 
   233  0395                     	;# 
   234  0396                     	;# 
   235  039A                     	;# 
   236  039C                     	;# 
   237  039D                     	;# 
   238  039E                     	;# 
   239  039F                     	;# 
   240  0415                     	;# 
   241  0416                     	;# 
   242  0417                     	;# 
   243  041C                     	;# 
   244  041D                     	;# 
   245  041E                     	;# 
   246  0FE4                     	;# 
   247  0FE5                     	;# 
   248  0FE6                     	;# 
   249  0FE7                     	;# 
   250  0FE8                     	;# 
   251  0FE9                     	;# 
   252  0FEA                     	;# 
   253  0FEB                     	;# 
   254  0FED                     	;# 
   255  0FEE                     	;# 
   256  0FEF                     	;# 
   257  0000                     	;# 
   258  0001                     	;# 
   259  0002                     	;# 
   260  0003                     	;# 
   261  0004                     	;# 
   262  0005                     	;# 
   263  0006                     	;# 
   264  0007                     	;# 
   265  0008                     	;# 
   266  0009                     	;# 
   267  000A                     	;# 
   268  000B                     	;# 
   269  000C                     	;# 
   270  000D                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001C                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  0111                     	;# 
   306  0112                     	;# 
   307  0113                     	;# 
   308  0114                     	;# 
   309  0115                     	;# 
   310  0116                     	;# 
   311  0117                     	;# 
   312  0118                     	;# 
   313  0119                     	;# 
   314  011A                     	;# 
   315  011B                     	;# 
   316  011D                     	;# 
   317  011E                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0191                     	;# 
   321  0191                     	;# 
   322  0192                     	;# 
   323  0193                     	;# 
   324  0193                     	;# 
   325  0193                     	;# 
   326  0194                     	;# 
   327  0195                     	;# 
   328  0196                     	;# 
   329  0199                     	;# 
   330  019A                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019B                     	;# 
   335  019C                     	;# 
   336  019C                     	;# 
   337  019D                     	;# 
   338  019E                     	;# 
   339  019F                     	;# 
   340  020C                     	;# 
   341  020D                     	;# 
   342  0211                     	;# 
   343  0211                     	;# 
   344  0212                     	;# 
   345  0212                     	;# 
   346  0213                     	;# 
   347  0213                     	;# 
   348  0214                     	;# 
   349  0214                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0215                     	;# 
   353  0216                     	;# 
   354  0216                     	;# 
   355  0217                     	;# 
   356  0217                     	;# 
   357  0219                     	;# 
   358  021A                     	;# 
   359  021B                     	;# 
   360  021C                     	;# 
   361  021D                     	;# 
   362  021E                     	;# 
   363  021F                     	;# 
   364  0291                     	;# 
   365  0291                     	;# 
   366  0292                     	;# 
   367  0293                     	;# 
   368  0294                     	;# 
   369  0295                     	;# 
   370  0295                     	;# 
   371  0296                     	;# 
   372  0298                     	;# 
   373  0298                     	;# 
   374  0299                     	;# 
   375  029A                     	;# 
   376  029B                     	;# 
   377  029C                     	;# 
   378  029C                     	;# 
   379  029D                     	;# 
   380  029E                     	;# 
   381  029E                     	;# 
   382  0311                     	;# 
   383  0311                     	;# 
   384  0312                     	;# 
   385  0313                     	;# 
   386  0318                     	;# 
   387  0318                     	;# 
   388  0319                     	;# 
   389  031A                     	;# 
   390  0394                     	;# 
   391  0395                     	;# 
   392  0396                     	;# 
   393  039A                     	;# 
   394  039C                     	;# 
   395  039D                     	;# 
   396  039E                     	;# 
   397  039F                     	;# 
   398  0415                     	;# 
   399  0416                     	;# 
   400  0417                     	;# 
   401  041C                     	;# 
   402  041D                     	;# 
   403  041E                     	;# 
   404  0FE4                     	;# 
   405  0FE5                     	;# 
   406  0FE6                     	;# 
   407  0FE7                     	;# 
   408  0FE8                     	;# 
   409  0FE9                     	;# 
   410  0FEA                     	;# 
   411  0FEB                     	;# 
   412  0FED                     	;# 
   413  0FEE                     	;# 
   414  0FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  000D                     	;# 
   429  0011                     	;# 
   430  0012                     	;# 
   431  0013                     	;# 
   432  0014                     	;# 
   433  0015                     	;# 
   434  0016                     	;# 
   435  0016                     	;# 
   436  0017                     	;# 
   437  0018                     	;# 
   438  0019                     	;# 
   439  001A                     	;# 
   440  001B                     	;# 
   441  001C                     	;# 
   442  001E                     	;# 
   443  001F                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  0091                     	;# 
   447  0092                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  0111                     	;# 
   464  0112                     	;# 
   465  0113                     	;# 
   466  0114                     	;# 
   467  0115                     	;# 
   468  0116                     	;# 
   469  0117                     	;# 
   470  0118                     	;# 
   471  0119                     	;# 
   472  011A                     	;# 
   473  011B                     	;# 
   474  011D                     	;# 
   475  011E                     	;# 
   476  018C                     	;# 
   477  018D                     	;# 
   478  0191                     	;# 
   479  0191                     	;# 
   480  0192                     	;# 
   481  0193                     	;# 
   482  0193                     	;# 
   483  0193                     	;# 
   484  0194                     	;# 
   485  0195                     	;# 
   486  0196                     	;# 
   487  0199                     	;# 
   488  019A                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019C                     	;# 
   494  019C                     	;# 
   495  019D                     	;# 
   496  019E                     	;# 
   497  019F                     	;# 
   498  020C                     	;# 
   499  020D                     	;# 
   500  0211                     	;# 
   501  0211                     	;# 
   502  0212                     	;# 
   503  0212                     	;# 
   504  0213                     	;# 
   505  0213                     	;# 
   506  0214                     	;# 
   507  0214                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0216                     	;# 
   512  0216                     	;# 
   513  0217                     	;# 
   514  0217                     	;# 
   515  0219                     	;# 
   516  021A                     	;# 
   517  021B                     	;# 
   518  021C                     	;# 
   519  021D                     	;# 
   520  021E                     	;# 
   521  021F                     	;# 
   522  0291                     	;# 
   523  0291                     	;# 
   524  0292                     	;# 
   525  0293                     	;# 
   526  0294                     	;# 
   527  0295                     	;# 
   528  0295                     	;# 
   529  0296                     	;# 
   530  0298                     	;# 
   531  0298                     	;# 
   532  0299                     	;# 
   533  029A                     	;# 
   534  029B                     	;# 
   535  029C                     	;# 
   536  029C                     	;# 
   537  029D                     	;# 
   538  029E                     	;# 
   539  029E                     	;# 
   540  0311                     	;# 
   541  0311                     	;# 
   542  0312                     	;# 
   543  0313                     	;# 
   544  0318                     	;# 
   545  0318                     	;# 
   546  0319                     	;# 
   547  031A                     	;# 
   548  0394                     	;# 
   549  0395                     	;# 
   550  0396                     	;# 
   551  039A                     	;# 
   552  039C                     	;# 
   553  039D                     	;# 
   554  039E                     	;# 
   555  039F                     	;# 
   556  0415                     	;# 
   557  0416                     	;# 
   558  0417                     	;# 
   559  041C                     	;# 
   560  041D                     	;# 
   561  041E                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  0011                     	;# 
   588  0012                     	;# 
   589  0013                     	;# 
   590  0014                     	;# 
   591  0015                     	;# 
   592  0016                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  0019                     	;# 
   597  001A                     	;# 
   598  001B                     	;# 
   599  001C                     	;# 
   600  001E                     	;# 
   601  001F                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0095                     	;# 
   609  0096                     	;# 
   610  0097                     	;# 
   611  0098                     	;# 
   612  0099                     	;# 
   613  009A                     	;# 
   614  009B                     	;# 
   615  009B                     	;# 
   616  009C                     	;# 
   617  009D                     	;# 
   618  009E                     	;# 
   619  010C                     	;# 
   620  010D                     	;# 
   621  0111                     	;# 
   622  0112                     	;# 
   623  0113                     	;# 
   624  0114                     	;# 
   625  0115                     	;# 
   626  0116                     	;# 
   627  0117                     	;# 
   628  0118                     	;# 
   629  0119                     	;# 
   630  011A                     	;# 
   631  011B                     	;# 
   632  011D                     	;# 
   633  011E                     	;# 
   634  018C                     	;# 
   635  018D                     	;# 
   636  0191                     	;# 
   637  0191                     	;# 
   638  0192                     	;# 
   639  0193                     	;# 
   640  0193                     	;# 
   641  0193                     	;# 
   642  0194                     	;# 
   643  0195                     	;# 
   644  0196                     	;# 
   645  0199                     	;# 
   646  019A                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019C                     	;# 
   652  019C                     	;# 
   653  019D                     	;# 
   654  019E                     	;# 
   655  019F                     	;# 
   656  020C                     	;# 
   657  020D                     	;# 
   658  0211                     	;# 
   659  0211                     	;# 
   660  0212                     	;# 
   661  0212                     	;# 
   662  0213                     	;# 
   663  0213                     	;# 
   664  0214                     	;# 
   665  0214                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0216                     	;# 
   670  0216                     	;# 
   671  0217                     	;# 
   672  0217                     	;# 
   673  0219                     	;# 
   674  021A                     	;# 
   675  021B                     	;# 
   676  021C                     	;# 
   677  021D                     	;# 
   678  021E                     	;# 
   679  021F                     	;# 
   680  0291                     	;# 
   681  0291                     	;# 
   682  0292                     	;# 
   683  0293                     	;# 
   684  0294                     	;# 
   685  0295                     	;# 
   686  0295                     	;# 
   687  0296                     	;# 
   688  0298                     	;# 
   689  0298                     	;# 
   690  0299                     	;# 
   691  029A                     	;# 
   692  029B                     	;# 
   693  029C                     	;# 
   694  029C                     	;# 
   695  029D                     	;# 
   696  029E                     	;# 
   697  029E                     	;# 
   698  0311                     	;# 
   699  0311                     	;# 
   700  0312                     	;# 
   701  0313                     	;# 
   702  0318                     	;# 
   703  0318                     	;# 
   704  0319                     	;# 
   705  031A                     	;# 
   706  0394                     	;# 
   707  0395                     	;# 
   708  0396                     	;# 
   709  039A                     	;# 
   710  039C                     	;# 
   711  039D                     	;# 
   712  039E                     	;# 
   713  039F                     	;# 
   714  0415                     	;# 
   715  0416                     	;# 
   716  0417                     	;# 
   717  041C                     	;# 
   718  041D                     	;# 
   719  041E                     	;# 
   720  0FE4                     	;# 
   721  0FE5                     	;# 
   722  0FE6                     	;# 
   723  0FE7                     	;# 
   724  0FE8                     	;# 
   725  0FE9                     	;# 
   726  0FEA                     	;# 
   727  0FEB                     	;# 
   728  0FED                     	;# 
   729  0FEE                     	;# 
   730  0FEF                     	;# 
   731  0000                     	;# 
   732  0001                     	;# 
   733  0002                     	;# 
   734  0003                     	;# 
   735  0004                     	;# 
   736  0005                     	;# 
   737  0006                     	;# 
   738  0007                     	;# 
   739  0008                     	;# 
   740  0009                     	;# 
   741  000A                     	;# 
   742  000B                     	;# 
   743  000C                     	;# 
   744  000D                     	;# 
   745  0011                     	;# 
   746  0012                     	;# 
   747  0013                     	;# 
   748  0014                     	;# 
   749  0015                     	;# 
   750  0016                     	;# 
   751  0016                     	;# 
   752  0017                     	;# 
   753  0018                     	;# 
   754  0019                     	;# 
   755  001A                     	;# 
   756  001B                     	;# 
   757  001C                     	;# 
   758  001E                     	;# 
   759  001F                     	;# 
   760  008C                     	;# 
   761  008D                     	;# 
   762  0091                     	;# 
   763  0092                     	;# 
   764  0093                     	;# 
   765  0094                     	;# 
   766  0095                     	;# 
   767  0096                     	;# 
   768  0097                     	;# 
   769  0098                     	;# 
   770  0099                     	;# 
   771  009A                     	;# 
   772  009B                     	;# 
   773  009B                     	;# 
   774  009C                     	;# 
   775  009D                     	;# 
   776  009E                     	;# 
   777  010C                     	;# 
   778  010D                     	;# 
   779  0111                     	;# 
   780  0112                     	;# 
   781  0113                     	;# 
   782  0114                     	;# 
   783  0115                     	;# 
   784  0116                     	;# 
   785  0117                     	;# 
   786  0118                     	;# 
   787  0119                     	;# 
   788  011A                     	;# 
   789  011B                     	;# 
   790  011D                     	;# 
   791  011E                     	;# 
   792  018C                     	;# 
   793  018D                     	;# 
   794  0191                     	;# 
   795  0191                     	;# 
   796  0192                     	;# 
   797  0193                     	;# 
   798  0193                     	;# 
   799  0193                     	;# 
   800  0194                     	;# 
   801  0195                     	;# 
   802  0196                     	;# 
   803  0199                     	;# 
   804  019A                     	;# 
   805  019B                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019B                     	;# 
   809  019C                     	;# 
   810  019C                     	;# 
   811  019D                     	;# 
   812  019E                     	;# 
   813  019F                     	;# 
   814  020C                     	;# 
   815  020D                     	;# 
   816  0211                     	;# 
   817  0211                     	;# 
   818  0212                     	;# 
   819  0212                     	;# 
   820  0213                     	;# 
   821  0213                     	;# 
   822  0214                     	;# 
   823  0214                     	;# 
   824  0215                     	;# 
   825  0215                     	;# 
   826  0215                     	;# 
   827  0216                     	;# 
   828  0216                     	;# 
   829  0217                     	;# 
   830  0217                     	;# 
   831  0219                     	;# 
   832  021A                     	;# 
   833  021B                     	;# 
   834  021C                     	;# 
   835  021D                     	;# 
   836  021E                     	;# 
   837  021F                     	;# 
   838  0291                     	;# 
   839  0291                     	;# 
   840  0292                     	;# 
   841  0293                     	;# 
   842  0294                     	;# 
   843  0295                     	;# 
   844  0295                     	;# 
   845  0296                     	;# 
   846  0298                     	;# 
   847  0298                     	;# 
   848  0299                     	;# 
   849  029A                     	;# 
   850  029B                     	;# 
   851  029C                     	;# 
   852  029C                     	;# 
   853  029D                     	;# 
   854  029E                     	;# 
   855  029E                     	;# 
   856  0311                     	;# 
   857  0311                     	;# 
   858  0312                     	;# 
   859  0313                     	;# 
   860  0318                     	;# 
   861  0318                     	;# 
   862  0319                     	;# 
   863  031A                     	;# 
   864  0394                     	;# 
   865  0395                     	;# 
   866  0396                     	;# 
   867  039A                     	;# 
   868  039C                     	;# 
   869  039D                     	;# 
   870  039E                     	;# 
   871  039F                     	;# 
   872  0415                     	;# 
   873  0416                     	;# 
   874  0417                     	;# 
   875  041C                     	;# 
   876  041D                     	;# 
   877  041E                     	;# 
   878  0FE4                     	;# 
   879  0FE5                     	;# 
   880  0FE6                     	;# 
   881  0FE7                     	;# 
   882  0FE8                     	;# 
   883  0FE9                     	;# 
   884  0FEA                     	;# 
   885  0FEB                     	;# 
   886  0FED                     	;# 
   887  0FEE                     	;# 
   888  0FEF                     	;# 
   889  0000                     	;# 
   890  0001                     	;# 
   891  0002                     	;# 
   892  0003                     	;# 
   893  0004                     	;# 
   894  0005                     	;# 
   895  0006                     	;# 
   896  0007                     	;# 
   897  0008                     	;# 
   898  0009                     	;# 
   899  000A                     	;# 
   900  000B                     	;# 
   901  000C                     	;# 
   902  000D                     	;# 
   903  0011                     	;# 
   904  0012                     	;# 
   905  0013                     	;# 
   906  0014                     	;# 
   907  0015                     	;# 
   908  0016                     	;# 
   909  0016                     	;# 
   910  0017                     	;# 
   911  0018                     	;# 
   912  0019                     	;# 
   913  001A                     	;# 
   914  001B                     	;# 
   915  001C                     	;# 
   916  001E                     	;# 
   917  001F                     	;# 
   918  008C                     	;# 
   919  008D                     	;# 
   920  0091                     	;# 
   921  0092                     	;# 
   922  0093                     	;# 
   923  0094                     	;# 
   924  0095                     	;# 
   925  0096                     	;# 
   926  0097                     	;# 
   927  0098                     	;# 
   928  0099                     	;# 
   929  009A                     	;# 
   930  009B                     	;# 
   931  009B                     	;# 
   932  009C                     	;# 
   933  009D                     	;# 
   934  009E                     	;# 
   935  010C                     	;# 
   936  010D                     	;# 
   937  0111                     	;# 
   938  0112                     	;# 
   939  0113                     	;# 
   940  0114                     	;# 
   941  0115                     	;# 
   942  0116                     	;# 
   943  0117                     	;# 
   944  0118                     	;# 
   945  0119                     	;# 
   946  011A                     	;# 
   947  011B                     	;# 
   948  011D                     	;# 
   949  011E                     	;# 
   950  018C                     	;# 
   951  018D                     	;# 
   952  0191                     	;# 
   953  0191                     	;# 
   954  0192                     	;# 
   955  0193                     	;# 
   956  0193                     	;# 
   957  0193                     	;# 
   958  0194                     	;# 
   959  0195                     	;# 
   960  0196                     	;# 
   961  0199                     	;# 
   962  019A                     	;# 
   963  019B                     	;# 
   964  019B                     	;# 
   965  019B                     	;# 
   966  019B                     	;# 
   967  019C                     	;# 
   968  019C                     	;# 
   969  019D                     	;# 
   970  019E                     	;# 
   971  019F                     	;# 
   972  020C                     	;# 
   973  020D                     	;# 
   974  0211                     	;# 
   975  0211                     	;# 
   976  0212                     	;# 
   977  0212                     	;# 
   978  0213                     	;# 
   979  0213                     	;# 
   980  0214                     	;# 
   981  0214                     	;# 
   982  0215                     	;# 
   983  0215                     	;# 
   984  0215                     	;# 
   985  0216                     	;# 
   986  0216                     	;# 
   987  0217                     	;# 
   988  0217                     	;# 
   989  0219                     	;# 
   990  021A                     	;# 
   991  021B                     	;# 
   992  021C                     	;# 
   993  021D                     	;# 
   994  021E                     	;# 
   995  021F                     	;# 
   996  0291                     	;# 
   997  0291                     	;# 
   998  0292                     	;# 
   999  0293                     	;# 
  1000  0294                     	;# 
  1001  0295                     	;# 
  1002  0295                     	;# 
  1003  0296                     	;# 
  1004  0298                     	;# 
  1005  0298                     	;# 
  1006  0299                     	;# 
  1007  029A                     	;# 
  1008  029B                     	;# 
  1009  029C                     	;# 
  1010  029C                     	;# 
  1011  029D                     	;# 
  1012  029E                     	;# 
  1013  029E                     	;# 
  1014  0311                     	;# 
  1015  0311                     	;# 
  1016  0312                     	;# 
  1017  0313                     	;# 
  1018  0318                     	;# 
  1019  0318                     	;# 
  1020  0319                     	;# 
  1021  031A                     	;# 
  1022  0394                     	;# 
  1023  0395                     	;# 
  1024  0396                     	;# 
  1025  039A                     	;# 
  1026  039C                     	;# 
  1027  039D                     	;# 
  1028  039E                     	;# 
  1029  039F                     	;# 
  1030  0415                     	;# 
  1031  0416                     	;# 
  1032  0417                     	;# 
  1033  041C                     	;# 
  1034  041D                     	;# 
  1035  041E                     	;# 
  1036  0FE4                     	;# 
  1037  0FE5                     	;# 
  1038  0FE6                     	;# 
  1039  0FE7                     	;# 
  1040  0FE8                     	;# 
  1041  0FE9                     	;# 
  1042  0FEA                     	;# 
  1043  0FEB                     	;# 
  1044  0FED                     	;# 
  1045  0FEE                     	;# 
  1046  0FEF                     	;# 
  1047  0000                     	;# 
  1048  0001                     	;# 
  1049  0002                     	;# 
  1050  0003                     	;# 
  1051  0004                     	;# 
  1052  0005                     	;# 
  1053  0006                     	;# 
  1054  0007                     	;# 
  1055  0008                     	;# 
  1056  0009                     	;# 
  1057  000A                     	;# 
  1058  000B                     	;# 
  1059  000C                     	;# 
  1060  000D                     	;# 
  1061  0011                     	;# 
  1062  0012                     	;# 
  1063  0013                     	;# 
  1064  0014                     	;# 
  1065  0015                     	;# 
  1066  0016                     	;# 
  1067  0016                     	;# 
  1068  0017                     	;# 
  1069  0018                     	;# 
  1070  0019                     	;# 
  1071  001A                     	;# 
  1072  001B                     	;# 
  1073  001C                     	;# 
  1074  001E                     	;# 
  1075  001F                     	;# 
  1076  008C                     	;# 
  1077  008D                     	;# 
  1078  0091                     	;# 
  1079  0092                     	;# 
  1080  0093                     	;# 
  1081  0094                     	;# 
  1082  0095                     	;# 
  1083  0096                     	;# 
  1084  0097                     	;# 
  1085  0098                     	;# 
  1086  0099                     	;# 
  1087  009A                     	;# 
  1088  009B                     	;# 
  1089  009B                     	;# 
  1090  009C                     	;# 
  1091  009D                     	;# 
  1092  009E                     	;# 
  1093  010C                     	;# 
  1094  010D                     	;# 
  1095  0111                     	;# 
  1096  0112                     	;# 
  1097  0113                     	;# 
  1098  0114                     	;# 
  1099  0115                     	;# 
  1100  0116                     	;# 
  1101  0117                     	;# 
  1102  0118                     	;# 
  1103  0119                     	;# 
  1104  011A                     	;# 
  1105  011B                     	;# 
  1106  011D                     	;# 
  1107  011E                     	;# 
  1108  018C                     	;# 
  1109  018D                     	;# 
  1110  0191                     	;# 
  1111  0191                     	;# 
  1112  0192                     	;# 
  1113  0193                     	;# 
  1114  0193                     	;# 
  1115  0193                     	;# 
  1116  0194                     	;# 
  1117  0195                     	;# 
  1118  0196                     	;# 
  1119  0199                     	;# 
  1120  019A                     	;# 
  1121  019B                     	;# 
  1122  019B                     	;# 
  1123  019B                     	;# 
  1124  019B                     	;# 
  1125  019C                     	;# 
  1126  019C                     	;# 
  1127  019D                     	;# 
  1128  019E                     	;# 
  1129  019F                     	;# 
  1130  020C                     	;# 
  1131  020D                     	;# 
  1132  0211                     	;# 
  1133  0211                     	;# 
  1134  0212                     	;# 
  1135  0212                     	;# 
  1136  0213                     	;# 
  1137  0213                     	;# 
  1138  0214                     	;# 
  1139  0214                     	;# 
  1140  0215                     	;# 
  1141  0215                     	;# 
  1142  0215                     	;# 
  1143  0216                     	;# 
  1144  0216                     	;# 
  1145  0217                     	;# 
  1146  0217                     	;# 
  1147  0219                     	;# 
  1148  021A                     	;# 
  1149  021B                     	;# 
  1150  021C                     	;# 
  1151  021D                     	;# 
  1152  021E                     	;# 
  1153  021F                     	;# 
  1154  0291                     	;# 
  1155  0291                     	;# 
  1156  0292                     	;# 
  1157  0293                     	;# 
  1158  0294                     	;# 
  1159  0295                     	;# 
  1160  0295                     	;# 
  1161  0296                     	;# 
  1162  0298                     	;# 
  1163  0298                     	;# 
  1164  0299                     	;# 
  1165  029A                     	;# 
  1166  029B                     	;# 
  1167  029C                     	;# 
  1168  029C                     	;# 
  1169  029D                     	;# 
  1170  029E                     	;# 
  1171  029E                     	;# 
  1172  0311                     	;# 
  1173  0311                     	;# 
  1174  0312                     	;# 
  1175  0313                     	;# 
  1176  0318                     	;# 
  1177  0318                     	;# 
  1178  0319                     	;# 
  1179  031A                     	;# 
  1180  0394                     	;# 
  1181  0395                     	;# 
  1182  0396                     	;# 
  1183  039A                     	;# 
  1184  039C                     	;# 
  1185  039D                     	;# 
  1186  039E                     	;# 
  1187  039F                     	;# 
  1188  0415                     	;# 
  1189  0416                     	;# 
  1190  0417                     	;# 
  1191  041C                     	;# 
  1192  041D                     	;# 
  1193  041E                     	;# 
  1194  0FE4                     	;# 
  1195  0FE5                     	;# 
  1196  0FE6                     	;# 
  1197  0FE7                     	;# 
  1198  0FE8                     	;# 
  1199  0FE9                     	;# 
  1200  0FEA                     	;# 
  1201  0FEB                     	;# 
  1202  0FED                     	;# 
  1203  0FEE                     	;# 
  1204  0FEF                     	;# 
  1205  0000                     	;# 
  1206  0001                     	;# 
  1207  0002                     	;# 
  1208  0003                     	;# 
  1209  0004                     	;# 
  1210  0005                     	;# 
  1211  0006                     	;# 
  1212  0007                     	;# 
  1213  0008                     	;# 
  1214  0009                     	;# 
  1215  000A                     	;# 
  1216  000B                     	;# 
  1217  000C                     	;# 
  1218  000D                     	;# 
  1219  0011                     	;# 
  1220  0012                     	;# 
  1221  0013                     	;# 
  1222  0014                     	;# 
  1223  0015                     	;# 
  1224  0016                     	;# 
  1225  0016                     	;# 
  1226  0017                     	;# 
  1227  0018                     	;# 
  1228  0019                     	;# 
  1229  001A                     	;# 
  1230  001B                     	;# 
  1231  001C                     	;# 
  1232  001E                     	;# 
  1233  001F                     	;# 
  1234  008C                     	;# 
  1235  008D                     	;# 
  1236  0091                     	;# 
  1237  0092                     	;# 
  1238  0093                     	;# 
  1239  0094                     	;# 
  1240  0095                     	;# 
  1241  0096                     	;# 
  1242  0097                     	;# 
  1243  0098                     	;# 
  1244  0099                     	;# 
  1245  009A                     	;# 
  1246  009B                     	;# 
  1247  009B                     	;# 
  1248  009C                     	;# 
  1249  009D                     	;# 
  1250  009E                     	;# 
  1251  010C                     	;# 
  1252  010D                     	;# 
  1253  0111                     	;# 
  1254  0112                     	;# 
  1255  0113                     	;# 
  1256  0114                     	;# 
  1257  0115                     	;# 
  1258  0116                     	;# 
  1259  0117                     	;# 
  1260  0118                     	;# 
  1261  0119                     	;# 
  1262  011A                     	;# 
  1263  011B                     	;# 
  1264  011D                     	;# 
  1265  011E                     	;# 
  1266  018C                     	;# 
  1267  018D                     	;# 
  1268  0191                     	;# 
  1269  0191                     	;# 
  1270  0192                     	;# 
  1271  0193                     	;# 
  1272  0193                     	;# 
  1273  0193                     	;# 
  1274  0194                     	;# 
  1275  0195                     	;# 
  1276  0196                     	;# 
  1277  0199                     	;# 
  1278  019A                     	;# 
  1279  019B                     	;# 
  1280  019B                     	;# 
  1281  019B                     	;# 
  1282  019B                     	;# 
  1283  019C                     	;# 
  1284  019C                     	;# 
  1285  019D                     	;# 
  1286  019E                     	;# 
  1287  019F                     	;# 
  1288  020C                     	;# 
  1289  020D                     	;# 
  1290  0211                     	;# 
  1291  0211                     	;# 
  1292  0212                     	;# 
  1293  0212                     	;# 
  1294  0213                     	;# 
  1295  0213                     	;# 
  1296  0214                     	;# 
  1297  0214                     	;# 
  1298  0215                     	;# 
  1299  0215                     	;# 
  1300  0215                     	;# 
  1301  0216                     	;# 
  1302  0216                     	;# 
  1303  0217                     	;# 
  1304  0217                     	;# 
  1305  0219                     	;# 
  1306  021A                     	;# 
  1307  021B                     	;# 
  1308  021C                     	;# 
  1309  021D                     	;# 
  1310  021E                     	;# 
  1311  021F                     	;# 
  1312  0291                     	;# 
  1313  0291                     	;# 
  1314  0292                     	;# 
  1315  0293                     	;# 
  1316  0294                     	;# 
  1317  0295                     	;# 
  1318  0295                     	;# 
  1319  0296                     	;# 
  1320  0298                     	;# 
  1321  0298                     	;# 
  1322  0299                     	;# 
  1323  029A                     	;# 
  1324  029B                     	;# 
  1325  029C                     	;# 
  1326  029C                     	;# 
  1327  029D                     	;# 
  1328  029E                     	;# 
  1329  029E                     	;# 
  1330  0311                     	;# 
  1331  0311                     	;# 
  1332  0312                     	;# 
  1333  0313                     	;# 
  1334  0318                     	;# 
  1335  0318                     	;# 
  1336  0319                     	;# 
  1337  031A                     	;# 
  1338  0394                     	;# 
  1339  0395                     	;# 
  1340  0396                     	;# 
  1341  039A                     	;# 
  1342  039C                     	;# 
  1343  039D                     	;# 
  1344  039E                     	;# 
  1345  039F                     	;# 
  1346  0415                     	;# 
  1347  0416                     	;# 
  1348  0417                     	;# 
  1349  041C                     	;# 
  1350  041D                     	;# 
  1351  041E                     	;# 
  1352  0FE4                     	;# 
  1353  0FE5                     	;# 
  1354  0FE6                     	;# 
  1355  0FE7                     	;# 
  1356  0FE8                     	;# 
  1357  0FE9                     	;# 
  1358  0FEA                     	;# 
  1359  0FEB                     	;# 
  1360  0FED                     	;# 
  1361  0FEE                     	;# 
  1362  0FEF                     	;# 
  1363  0000                     	;# 
  1364  0001                     	;# 
  1365  0002                     	;# 
  1366  0003                     	;# 
  1367  0004                     	;# 
  1368  0005                     	;# 
  1369  0006                     	;# 
  1370  0007                     	;# 
  1371  0008                     	;# 
  1372  0009                     	;# 
  1373  000A                     	;# 
  1374  000B                     	;# 
  1375  000C                     	;# 
  1376  000D                     	;# 
  1377  0011                     	;# 
  1378  0012                     	;# 
  1379  0013                     	;# 
  1380  0014                     	;# 
  1381  0015                     	;# 
  1382  0016                     	;# 
  1383  0016                     	;# 
  1384  0017                     	;# 
  1385  0018                     	;# 
  1386  0019                     	;# 
  1387  001A                     	;# 
  1388  001B                     	;# 
  1389  001C                     	;# 
  1390  001E                     	;# 
  1391  001F                     	;# 
  1392  008C                     	;# 
  1393  008D                     	;# 
  1394  0091                     	;# 
  1395  0092                     	;# 
  1396  0093                     	;# 
  1397  0094                     	;# 
  1398  0095                     	;# 
  1399  0096                     	;# 
  1400  0097                     	;# 
  1401  0098                     	;# 
  1402  0099                     	;# 
  1403  009A                     	;# 
  1404  009B                     	;# 
  1405  009B                     	;# 
  1406  009C                     	;# 
  1407  009D                     	;# 
  1408  009E                     	;# 
  1409  010C                     	;# 
  1410  010D                     	;# 
  1411  0111                     	;# 
  1412  0112                     	;# 
  1413  0113                     	;# 
  1414  0114                     	;# 
  1415  0115                     	;# 
  1416  0116                     	;# 
  1417  0117                     	;# 
  1418  0118                     	;# 
  1419  0119                     	;# 
  1420  011A                     	;# 
  1421  011B                     	;# 
  1422  011D                     	;# 
  1423  011E                     	;# 
  1424  018C                     	;# 
  1425  018D                     	;# 
  1426  0191                     	;# 
  1427  0191                     	;# 
  1428  0192                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0193                     	;# 
  1432  0194                     	;# 
  1433  0195                     	;# 
  1434  0196                     	;# 
  1435  0199                     	;# 
  1436  019A                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019C                     	;# 
  1442  019C                     	;# 
  1443  019D                     	;# 
  1444  019E                     	;# 
  1445  019F                     	;# 
  1446  020C                     	;# 
  1447  020D                     	;# 
  1448  0211                     	;# 
  1449  0211                     	;# 
  1450  0212                     	;# 
  1451  0212                     	;# 
  1452  0213                     	;# 
  1453  0213                     	;# 
  1454  0214                     	;# 
  1455  0214                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0216                     	;# 
  1460  0216                     	;# 
  1461  0217                     	;# 
  1462  0217                     	;# 
  1463  0219                     	;# 
  1464  021A                     	;# 
  1465  021B                     	;# 
  1466  021C                     	;# 
  1467  021D                     	;# 
  1468  021E                     	;# 
  1469  021F                     	;# 
  1470  0291                     	;# 
  1471  0291                     	;# 
  1472  0292                     	;# 
  1473  0293                     	;# 
  1474  0294                     	;# 
  1475  0295                     	;# 
  1476  0295                     	;# 
  1477  0296                     	;# 
  1478  0298                     	;# 
  1479  0298                     	;# 
  1480  0299                     	;# 
  1481  029A                     	;# 
  1482  029B                     	;# 
  1483  029C                     	;# 
  1484  029C                     	;# 
  1485  029D                     	;# 
  1486  029E                     	;# 
  1487  029E                     	;# 
  1488  0311                     	;# 
  1489  0311                     	;# 
  1490  0312                     	;# 
  1491  0313                     	;# 
  1492  0318                     	;# 
  1493  0318                     	;# 
  1494  0319                     	;# 
  1495  031A                     	;# 
  1496  0394                     	;# 
  1497  0395                     	;# 
  1498  0396                     	;# 
  1499  039A                     	;# 
  1500  039C                     	;# 
  1501  039D                     	;# 
  1502  039E                     	;# 
  1503  039F                     	;# 
  1504  0415                     	;# 
  1505  0416                     	;# 
  1506  0417                     	;# 
  1507  041C                     	;# 
  1508  041D                     	;# 
  1509  041E                     	;# 
  1510  0FE4                     	;# 
  1511  0FE5                     	;# 
  1512  0FE6                     	;# 
  1513  0FE7                     	;# 
  1514  0FE8                     	;# 
  1515  0FE9                     	;# 
  1516  0FEA                     	;# 
  1517  0FEB                     	;# 
  1518  0FED                     	;# 
  1519  0FEE                     	;# 
  1520  0FEF                     	;# 
  1521  0000                     	;# 
  1522  0001                     	;# 
  1523  0002                     	;# 
  1524  0003                     	;# 
  1525  0004                     	;# 
  1526  0005                     	;# 
  1527  0006                     	;# 
  1528  0007                     	;# 
  1529  0008                     	;# 
  1530  0009                     	;# 
  1531  000A                     	;# 
  1532  000B                     	;# 
  1533  000C                     	;# 
  1534  000D                     	;# 
  1535  0011                     	;# 
  1536  0012                     	;# 
  1537  0013                     	;# 
  1538  0014                     	;# 
  1539  0015                     	;# 
  1540  0016                     	;# 
  1541  0016                     	;# 
  1542  0017                     	;# 
  1543  0018                     	;# 
  1544  0019                     	;# 
  1545  001A                     	;# 
  1546  001B                     	;# 
  1547  001C                     	;# 
  1548  001E                     	;# 
  1549  001F                     	;# 
  1550  008C                     	;# 
  1551  008D                     	;# 
  1552  0091                     	;# 
  1553  0092                     	;# 
  1554  0093                     	;# 
  1555  0094                     	;# 
  1556  0095                     	;# 
  1557  0096                     	;# 
  1558  0097                     	;# 
  1559  0098                     	;# 
  1560  0099                     	;# 
  1561  009A                     	;# 
  1562  009B                     	;# 
  1563  009B                     	;# 
  1564  009C                     	;# 
  1565  009D                     	;# 
  1566  009E                     	;# 
  1567  010C                     	;# 
  1568  010D                     	;# 
  1569  0111                     	;# 
  1570  0112                     	;# 
  1571  0113                     	;# 
  1572  0114                     	;# 
  1573  0115                     	;# 
  1574  0116                     	;# 
  1575  0117                     	;# 
  1576  0118                     	;# 
  1577  0119                     	;# 
  1578  011A                     	;# 
  1579  011B                     	;# 
  1580  011D                     	;# 
  1581  011E                     	;# 
  1582  018C                     	;# 
  1583  018D                     	;# 
  1584  0191                     	;# 
  1585  0191                     	;# 
  1586  0192                     	;# 
  1587  0193                     	;# 
  1588  0193                     	;# 
  1589  0193                     	;# 
  1590  0194                     	;# 
  1591  0195                     	;# 
  1592  0196                     	;# 
  1593  0199                     	;# 
  1594  019A                     	;# 
  1595  019B                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019B                     	;# 
  1599  019C                     	;# 
  1600  019C                     	;# 
  1601  019D                     	;# 
  1602  019E                     	;# 
  1603  019F                     	;# 
  1604  020C                     	;# 
  1605  020D                     	;# 
  1606  0211                     	;# 
  1607  0211                     	;# 
  1608  0212                     	;# 
  1609  0212                     	;# 
  1610  0213                     	;# 
  1611  0213                     	;# 
  1612  0214                     	;# 
  1613  0214                     	;# 
  1614  0215                     	;# 
  1615  0215                     	;# 
  1616  0215                     	;# 
  1617  0216                     	;# 
  1618  0216                     	;# 
  1619  0217                     	;# 
  1620  0217                     	;# 
  1621  0219                     	;# 
  1622  021A                     	;# 
  1623  021B                     	;# 
  1624  021C                     	;# 
  1625  021D                     	;# 
  1626  021E                     	;# 
  1627  021F                     	;# 
  1628  0291                     	;# 
  1629  0291                     	;# 
  1630  0292                     	;# 
  1631  0293                     	;# 
  1632  0294                     	;# 
  1633  0295                     	;# 
  1634  0295                     	;# 
  1635  0296                     	;# 
  1636  0298                     	;# 
  1637  0298                     	;# 
  1638  0299                     	;# 
  1639  029A                     	;# 
  1640  029B                     	;# 
  1641  029C                     	;# 
  1642  029C                     	;# 
  1643  029D                     	;# 
  1644  029E                     	;# 
  1645  029E                     	;# 
  1646  0311                     	;# 
  1647  0311                     	;# 
  1648  0312                     	;# 
  1649  0313                     	;# 
  1650  0318                     	;# 
  1651  0318                     	;# 
  1652  0319                     	;# 
  1653  031A                     	;# 
  1654  0394                     	;# 
  1655  0395                     	;# 
  1656  0396                     	;# 
  1657  039A                     	;# 
  1658  039C                     	;# 
  1659  039D                     	;# 
  1660  039E                     	;# 
  1661  039F                     	;# 
  1662  0415                     	;# 
  1663  0416                     	;# 
  1664  0417                     	;# 
  1665  041C                     	;# 
  1666  041D                     	;# 
  1667  041E                     	;# 
  1668  0FE4                     	;# 
  1669  0FE5                     	;# 
  1670  0FE6                     	;# 
  1671  0FE7                     	;# 
  1672  0FE8                     	;# 
  1673  0FE9                     	;# 
  1674  0FEA                     	;# 
  1675  0FEB                     	;# 
  1676  0FED                     	;# 
  1677  0FEE                     	;# 
  1678  0FEF                     	;# 
  1679  0000                     	;# 
  1680  0001                     	;# 
  1681  0002                     	;# 
  1682  0003                     	;# 
  1683  0004                     	;# 
  1684  0005                     	;# 
  1685  0006                     	;# 
  1686  0007                     	;# 
  1687  0008                     	;# 
  1688  0009                     	;# 
  1689  000A                     	;# 
  1690  000B                     	;# 
  1691  000C                     	;# 
  1692  000D                     	;# 
  1693  0011                     	;# 
  1694  0012                     	;# 
  1695  0013                     	;# 
  1696  0014                     	;# 
  1697  0015                     	;# 
  1698  0016                     	;# 
  1699  0016                     	;# 
  1700  0017                     	;# 
  1701  0018                     	;# 
  1702  0019                     	;# 
  1703  001A                     	;# 
  1704  001B                     	;# 
  1705  001C                     	;# 
  1706  001E                     	;# 
  1707  001F                     	;# 
  1708  008C                     	;# 
  1709  008D                     	;# 
  1710  0091                     	;# 
  1711  0092                     	;# 
  1712  0093                     	;# 
  1713  0094                     	;# 
  1714  0095                     	;# 
  1715  0096                     	;# 
  1716  0097                     	;# 
  1717  0098                     	;# 
  1718  0099                     	;# 
  1719  009A                     	;# 
  1720  009B                     	;# 
  1721  009B                     	;# 
  1722  009C                     	;# 
  1723  009D                     	;# 
  1724  009E                     	;# 
  1725  010C                     	;# 
  1726  010D                     	;# 
  1727  0111                     	;# 
  1728  0112                     	;# 
  1729  0113                     	;# 
  1730  0114                     	;# 
  1731  0115                     	;# 
  1732  0116                     	;# 
  1733  0117                     	;# 
  1734  0118                     	;# 
  1735  0119                     	;# 
  1736  011A                     	;# 
  1737  011B                     	;# 
  1738  011D                     	;# 
  1739  011E                     	;# 
  1740  018C                     	;# 
  1741  018D                     	;# 
  1742  0191                     	;# 
  1743  0191                     	;# 
  1744  0192                     	;# 
  1745  0193                     	;# 
  1746  0193                     	;# 
  1747  0193                     	;# 
  1748  0194                     	;# 
  1749  0195                     	;# 
  1750  0196                     	;# 
  1751  0199                     	;# 
  1752  019A                     	;# 
  1753  019B                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019B                     	;# 
  1757  019C                     	;# 
  1758  019C                     	;# 
  1759  019D                     	;# 
  1760  019E                     	;# 
  1761  019F                     	;# 
  1762  020C                     	;# 
  1763  020D                     	;# 
  1764  0211                     	;# 
  1765  0211                     	;# 
  1766  0212                     	;# 
  1767  0212                     	;# 
  1768  0213                     	;# 
  1769  0213                     	;# 
  1770  0214                     	;# 
  1771  0214                     	;# 
  1772  0215                     	;# 
  1773  0215                     	;# 
  1774  0215                     	;# 
  1775  0216                     	;# 
  1776  0216                     	;# 
  1777  0217                     	;# 
  1778  0217                     	;# 
  1779  0219                     	;# 
  1780  021A                     	;# 
  1781  021B                     	;# 
  1782  021C                     	;# 
  1783  021D                     	;# 
  1784  021E                     	;# 
  1785  021F                     	;# 
  1786  0291                     	;# 
  1787  0291                     	;# 
  1788  0292                     	;# 
  1789  0293                     	;# 
  1790  0294                     	;# 
  1791  0295                     	;# 
  1792  0295                     	;# 
  1793  0296                     	;# 
  1794  0298                     	;# 
  1795  0298                     	;# 
  1796  0299                     	;# 
  1797  029A                     	;# 
  1798  029B                     	;# 
  1799  029C                     	;# 
  1800  029C                     	;# 
  1801  029D                     	;# 
  1802  029E                     	;# 
  1803  029E                     	;# 
  1804  0311                     	;# 
  1805  0311                     	;# 
  1806  0312                     	;# 
  1807  0313                     	;# 
  1808  0318                     	;# 
  1809  0318                     	;# 
  1810  0319                     	;# 
  1811  031A                     	;# 
  1812  0394                     	;# 
  1813  0395                     	;# 
  1814  0396                     	;# 
  1815  039A                     	;# 
  1816  039C                     	;# 
  1817  039D                     	;# 
  1818  039E                     	;# 
  1819  039F                     	;# 
  1820  0415                     	;# 
  1821  0416                     	;# 
  1822  0417                     	;# 
  1823  041C                     	;# 
  1824  041D                     	;# 
  1825  041E                     	;# 
  1826  0FE4                     	;# 
  1827  0FE5                     	;# 
  1828  0FE6                     	;# 
  1829  0FE7                     	;# 
  1830  0FE8                     	;# 
  1831  0FE9                     	;# 
  1832  0FEA                     	;# 
  1833  0FEB                     	;# 
  1834  0FED                     	;# 
  1835  0FEE                     	;# 
  1836  0FEF                     	;# 
  1837  0000                     	;# 
  1838  0001                     	;# 
  1839  0002                     	;# 
  1840  0003                     	;# 
  1841  0004                     	;# 
  1842  0005                     	;# 
  1843  0006                     	;# 
  1844  0007                     	;# 
  1845  0008                     	;# 
  1846  0009                     	;# 
  1847  000A                     	;# 
  1848  000B                     	;# 
  1849  000C                     	;# 
  1850  000D                     	;# 
  1851  0011                     	;# 
  1852  0012                     	;# 
  1853  0013                     	;# 
  1854  0014                     	;# 
  1855  0015                     	;# 
  1856  0016                     	;# 
  1857  0016                     	;# 
  1858  0017                     	;# 
  1859  0018                     	;# 
  1860  0019                     	;# 
  1861  001A                     	;# 
  1862  001B                     	;# 
  1863  001C                     	;# 
  1864  001E                     	;# 
  1865  001F                     	;# 
  1866  008C                     	;# 
  1867  008D                     	;# 
  1868  0091                     	;# 
  1869  0092                     	;# 
  1870  0093                     	;# 
  1871  0094                     	;# 
  1872  0095                     	;# 
  1873  0096                     	;# 
  1874  0097                     	;# 
  1875  0098                     	;# 
  1876  0099                     	;# 
  1877  009A                     	;# 
  1878  009B                     	;# 
  1879  009B                     	;# 
  1880  009C                     	;# 
  1881  009D                     	;# 
  1882  009E                     	;# 
  1883  010C                     	;# 
  1884  010D                     	;# 
  1885  0111                     	;# 
  1886  0112                     	;# 
  1887  0113                     	;# 
  1888  0114                     	;# 
  1889  0115                     	;# 
  1890  0116                     	;# 
  1891  0117                     	;# 
  1892  0118                     	;# 
  1893  0119                     	;# 
  1894  011A                     	;# 
  1895  011B                     	;# 
  1896  011D                     	;# 
  1897  011E                     	;# 
  1898  018C                     	;# 
  1899  018D                     	;# 
  1900  0191                     	;# 
  1901  0191                     	;# 
  1902  0192                     	;# 
  1903  0193                     	;# 
  1904  0193                     	;# 
  1905  0193                     	;# 
  1906  0194                     	;# 
  1907  0195                     	;# 
  1908  0196                     	;# 
  1909  0199                     	;# 
  1910  019A                     	;# 
  1911  019B                     	;# 
  1912  019B                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019C                     	;# 
  1916  019C                     	;# 
  1917  019D                     	;# 
  1918  019E                     	;# 
  1919  019F                     	;# 
  1920  020C                     	;# 
  1921  020D                     	;# 
  1922  0211                     	;# 
  1923  0211                     	;# 
  1924  0212                     	;# 
  1925  0212                     	;# 
  1926  0213                     	;# 
  1927  0213                     	;# 
  1928  0214                     	;# 
  1929  0214                     	;# 
  1930  0215                     	;# 
  1931  0215                     	;# 
  1932  0215                     	;# 
  1933  0216                     	;# 
  1934  0216                     	;# 
  1935  0217                     	;# 
  1936  0217                     	;# 
  1937  0219                     	;# 
  1938  021A                     	;# 
  1939  021B                     	;# 
  1940  021C                     	;# 
  1941  021D                     	;# 
  1942  021E                     	;# 
  1943  021F                     	;# 
  1944  0291                     	;# 
  1945  0291                     	;# 
  1946  0292                     	;# 
  1947  0293                     	;# 
  1948  0294                     	;# 
  1949  0295                     	;# 
  1950  0295                     	;# 
  1951  0296                     	;# 
  1952  0298                     	;# 
  1953  0298                     	;# 
  1954  0299                     	;# 
  1955  029A                     	;# 
  1956  029B                     	;# 
  1957  029C                     	;# 
  1958  029C                     	;# 
  1959  029D                     	;# 
  1960  029E                     	;# 
  1961  029E                     	;# 
  1962  0311                     	;# 
  1963  0311                     	;# 
  1964  0312                     	;# 
  1965  0313                     	;# 
  1966  0318                     	;# 
  1967  0318                     	;# 
  1968  0319                     	;# 
  1969  031A                     	;# 
  1970  0394                     	;# 
  1971  0395                     	;# 
  1972  0396                     	;# 
  1973  039A                     	;# 
  1974  039C                     	;# 
  1975  039D                     	;# 
  1976  039E                     	;# 
  1977  039F                     	;# 
  1978  0415                     	;# 
  1979  0416                     	;# 
  1980  0417                     	;# 
  1981  041C                     	;# 
  1982  041D                     	;# 
  1983  041E                     	;# 
  1984  0FE4                     	;# 
  1985  0FE5                     	;# 
  1986  0FE6                     	;# 
  1987  0FE7                     	;# 
  1988  0FE8                     	;# 
  1989  0FE9                     	;# 
  1990  0FEA                     	;# 
  1991  0FEB                     	;# 
  1992  0FED                     	;# 
  1993  0FEE                     	;# 
  1994  0FEF                     	;# 
  1995                           
  1996                           	psect	idataBANK1
  1997  0E2D                     __pidataBANK1:	
  1998                           
  1999                           ;initializer for _DAC_VoltageTable
  2000  0E2D  3469               	retlw	low (STR_7| (0+32768))
  2001  0E2E  3483               	retlw	high (STR_7| (0+32768))
  2002  0E2F  3419               	retlw	low (STR_8| (0+32768))
  2003  0E30  3483               	retlw	high (STR_8| (0+32768))
  2004  0E31  346E               	retlw	low (STR_9| (0+32768))
  2005  0E32  3483               	retlw	high (STR_9| (0+32768))
  2006  0E33  341F               	retlw	low (STR_10| (0+32768))
  2007  0E34  3483               	retlw	high (STR_10| (0+32768))
  2008  0E35  3473               	retlw	low (STR_11| (0+32768))
  2009  0E36  3483               	retlw	high (STR_11| (0+32768))
  2010  0E37  3425               	retlw	low (STR_12| (0+32768))
  2011  0E38  3483               	retlw	high (STR_12| (0+32768))
  2012  0E39  3478               	retlw	low (STR_13| (0+32768))
  2013  0E3A  3483               	retlw	high (STR_13| (0+32768))
  2014  0E3B  342B               	retlw	low (STR_14| (0+32768))
  2015  0E3C  3483               	retlw	high (STR_14| (0+32768))
  2016  0E3D  347D               	retlw	low (STR_15| (0+32768))
  2017  0E3E  3483               	retlw	high (STR_15| (0+32768))
  2018  0E3F  3431               	retlw	low (STR_16| (0+32768))
  2019  0E40  3483               	retlw	high (STR_16| (0+32768))
  2020  0E41  345A               	retlw	low (STR_17| (0+32768))
  2021  0E42  3483               	retlw	high (STR_17| (0+32768))
  2022  0E43  340D               	retlw	low (STR_18| (0+32768))
  2023  0E44  3483               	retlw	high (STR_18| (0+32768))
  2024  0E45  345F               	retlw	low (STR_19| (0+32768))
  2025  0E46  3483               	retlw	high (STR_19| (0+32768))
  2026  0E47  3413               	retlw	low (STR_20| (0+32768))
  2027  0E48  3483               	retlw	high (STR_20| (0+32768))
  2028  0E49  3464               	retlw	low (STR_21| (0+32768))
  2029  0E4A  3483               	retlw	high (STR_21| (0+32768))
  2030                           
  2031                           	psect	idataBANK2
  2032  0F44                     __pidataBANK2:	
  2033                           
  2034                           ;initializer for _H7826_01_Gain
  2035  0F44  3437               	retlw	low (STR_37| (0+32768))
  2036  0F45  3483               	retlw	high (STR_37| (0+32768))
  2037  0F46  343C               	retlw	low (STR_38| (0+32768))
  2038  0F47  3483               	retlw	high (STR_38| (0+32768))
  2039  0F48  3450               	retlw	low (STR_39| (0+32768))
  2040  0F49  3483               	retlw	high (STR_39| (0+32768))
  2041  0F4A  3441               	retlw	low (STR_40| (0+32768))
  2042  0F4B  3483               	retlw	high (STR_40| (0+32768))
  2043  0F4C  34EF               	retlw	low (STR_41| (0+32768))
  2044  0F4D  3482               	retlw	high (STR_41| (0+32768))
  2045  0F4E  34F5               	retlw	low (STR_42| (0+32768))
  2046  0F4F  3482               	retlw	high (STR_42| (0+32768))
  2047  0F50  34FB               	retlw	low (STR_43| (0+32768))
  2048  0F51  3482               	retlw	high (STR_43| (0+32768))
  2049  0F52  34E3               	retlw	low (STR_44| (0+32768))
  2050  0F53  3482               	retlw	high (STR_44| (0+32768))
  2051  0F54  349E               	retlw	low (STR_45| (0+32768))
  2052  0F55  3482               	retlw	high (STR_45| (0+32768))
  2053  0F56  34C8               	retlw	low (STR_46| (0+32768))
  2054  0F57  3482               	retlw	high (STR_46| (0+32768))
  2055  0F58  34A5               	retlw	low (STR_47| (0+32768))
  2056  0F59  3482               	retlw	high (STR_47| (0+32768))
  2057  0F5A  34AC               	retlw	low (STR_48| (0+32768))
  2058  0F5B  3482               	retlw	high (STR_48| (0+32768))
  2059  0F5C  34D6               	retlw	low (STR_49| (0+32768))
  2060  0F5D  3482               	retlw	high (STR_49| (0+32768))
  2061  0F5E  3490               	retlw	low (STR_50| (0+32768))
  2062  0F5F  3482               	retlw	high (STR_50| (0+32768))
  2063  0F60  3497               	retlw	low (STR_51| (0+32768))
  2064  0F61  3482               	retlw	high (STR_51| (0+32768))
  2065                           
  2066                           ;initializer for _H7826_Gain
  2067  0F62  344B               	retlw	low (STR_22| (0+32768))
  2068  0F63  3483               	retlw	high (STR_22| (0+32768))
  2069  0F64  3446               	retlw	low (STR_23| (0+32768))
  2070  0F65  3483               	retlw	high (STR_23| (0+32768))
  2071  0F66  3455               	retlw	low (STR_24| (0+32768))
  2072  0F67  3483               	retlw	high (STR_24| (0+32768))
  2073  0F68  3407               	retlw	low (STR_25| (0+32768))
  2074  0F69  3483               	retlw	high (STR_25| (0+32768))
  2075  0F6A  34DD               	retlw	low (STR_26| (0+32768))
  2076  0F6B  3482               	retlw	high (STR_26| (0+32768))
  2077  0F6C  34E9               	retlw	low (STR_27| (0+32768))
  2078  0F6D  3482               	retlw	high (STR_27| (0+32768))
  2079  0F6E  3401               	retlw	low (STR_28| (0+32768))
  2080  0F6F  3483               	retlw	high (STR_28| (0+32768))
  2081  0F70  34BA               	retlw	low (STR_29| (0+32768))
  2082  0F71  3482               	retlw	high (STR_29| (0+32768))
  2083  0F72  34B3               	retlw	low (STR_30| (0+32768))
  2084  0F73  3482               	retlw	high (STR_30| (0+32768))
  2085  0F74  34C1               	retlw	low (STR_31| (0+32768))
  2086  0F75  3482               	retlw	high (STR_31| (0+32768))
  2087  0F76  3489               	retlw	low (STR_32| (0+32768))
  2088  0F77  3482               	retlw	high (STR_32| (0+32768))
  2089  0F78  34CF               	retlw	low (STR_33| (0+32768))
  2090  0F79  3482               	retlw	high (STR_33| (0+32768))
  2091  0F7A  3479               	retlw	low (STR_34| (0+32768))
  2092  0F7B  3482               	retlw	high (STR_34| (0+32768))
  2093  0F7C  3471               	retlw	low (STR_35| (0+32768))
  2094  0F7D  3482               	retlw	high (STR_35| (0+32768))
  2095  0F7E  3469               	retlw	low (STR_36| (0+32768))
  2096  0F7F  3482               	retlw	high (STR_36| (0+32768))
  2097                           
  2098                           	psect	stringtext
  2099  01F8                     __pstringtext:	
  2100  01F8                     _dpowers:	
  2101  01F8  3401               	retlw	1
  2102  01F9  3400               	retlw	0
  2103  01FA  3400               	retlw	0
  2104  01FB  3400               	retlw	0
  2105  01FC  340A               	retlw	10
  2106  01FD  3400               	retlw	0
  2107  01FE  3400               	retlw	0
  2108  01FF  3400               	retlw	0
  2109  0200  3464               	retlw	100
  2110  0201  3400               	retlw	0
  2111  0202  3400               	retlw	0
  2112  0203  3400               	retlw	0
  2113  0204  34E8               	retlw	232
  2114  0205  3403               	retlw	3
  2115  0206  3400               	retlw	0
  2116  0207  3400               	retlw	0
  2117  0208  3410               	retlw	16
  2118  0209  3427               	retlw	39
  2119  020A  3400               	retlw	0
  2120  020B  3400               	retlw	0
  2121  020C  34A0               	retlw	160
  2122  020D  3486               	retlw	134
  2123  020E  3401               	retlw	1
  2124  020F  3400               	retlw	0
  2125  0210  3440               	retlw	64
  2126  0211  3442               	retlw	66
  2127  0212  340F               	retlw	15
  2128  0213  3400               	retlw	0
  2129  0214  3480               	retlw	128
  2130  0215  3496               	retlw	150
  2131  0216  3498               	retlw	152
  2132  0217  3400               	retlw	0
  2133  0218  3400               	retlw	0
  2134  0219  34E1               	retlw	225
  2135  021A  34F5               	retlw	245
  2136  021B  3405               	retlw	5
  2137  021C  3400               	retlw	0
  2138  021D  34CA               	retlw	202
  2139  021E  349A               	retlw	154
  2140  021F  343B               	retlw	59
  2141  0220                     __end_of_dpowers:	
  2142  0220                     _DAC_DataTable:	
  2143  0220  3499               	retlw	153
  2144  0221  3401               	retlw	1
  2145  0222  34C2               	retlw	194
  2146  0223  3401               	retlw	1
  2147  0224  34EB               	retlw	235
  2148  0225  3401               	retlw	1
  2149  0226  3414               	retlw	20
  2150  0227  3402               	retlw	2
  2151  0228  343D               	retlw	61
  2152  0229  3402               	retlw	2
  2153  022A  3466               	retlw	102
  2154  022B  3402               	retlw	2
  2155  022C  348F               	retlw	143
  2156  022D  3402               	retlw	2
  2157  022E  34B8               	retlw	184
  2158  022F  3402               	retlw	2
  2159  0230  34E1               	retlw	225
  2160  0231  3402               	retlw	2
  2161  0232  340A               	retlw	10
  2162  0233  3403               	retlw	3
  2163  0234  3433               	retlw	51
  2164  0235  3403               	retlw	3
  2165  0236  345B               	retlw	91
  2166  0237  3403               	retlw	3
  2167  0238  3484               	retlw	132
  2168  0239  3403               	retlw	3
  2169  023A  34AD               	retlw	173
  2170  023B  3403               	retlw	3
  2171  023C  34D6               	retlw	214
  2172  023D  3403               	retlw	3
  2173  023E                     __end_of_DAC_DataTable:	
  2174  0016                     _TMR1	set	22
  2175  000C                     _PORTA	set	12
  2176  001F                     _CPSCON1	set	31
  2177  001E                     _CPSCON0	set	30
  2178  0015                     _TMR0	set	21
  2179  0019                     _T1GCON	set	25
  2180  0018                     _T1CON	set	24
  2181  000D                     _PORTB	set	13
  2182  001B                     _PR2	set	27
  2183  001A                     _TMR2	set	26
  2184  001C                     _T2CON	set	28
  2185  00A1                     _BCL2IF	set	161
  2186  00A0                     _SSP2IF	set	160
  2187  009B                     _TMR6IF	set	155
  2188  0099                     _TMR4IF	set	153
  2189  0088                     _TMR1IF	set	136
  2190  00C0                     _TMR1ON	set	192
  2191  005F                     _GIE	set	95
  2192  005E                     _PEIE	set	94
  2193  0099                     _OSCCON	set	153
  2194  0095                     _OPTION_REG	set	149
  2195  008D                     _TRISB	set	141
  2196  008C                     _TRISA	set	140
  2197  04A1                     _BCL2IE	set	1185
  2198  04A0                     _SSP2IE	set	1184
  2199  049B                     _TMR6IE	set	1179
  2200  0499                     _TMR4IE	set	1177
  2201  0488                     _TMR1IE	set	1160
  2202  011E                     _APFCON1	set	286
  2203  011D                     _APFCON0	set	285
  2204  0866                     _LATA6	set	2150
  2205  0863                     _LATA3	set	2147
  2206  0864                     _LATA4	set	2148
  2207  018D                     _ANSELB	set	397
  2208  018C                     _ANSELA	set	396
  2209  021C                     _SSP2STATbits	set	540
  2210  0219                     _SSP2BUF	set	537
  2211  021E                     _SSP2CON2	set	542
  2212  021B                     _SSP2MSK	set	539
  2213  021E                     _SSP2CON2bits	set	542
  2214  021D                     _SSP2CON1bits	set	541
  2215  021A                     _SSP2ADD	set	538
  2216  021C                     _SSP2STAT	set	540
  2217  021D                     _SSP2CON1	set	541
  2218  020D                     _WPUB	set	525
  2219  0298                     _CCPR2L	set	664
  2220  029E                     _CCPTMRS	set	670
  2221  029A                     _CCP2CON	set	666
  2222  041E                     _T6CON	set	1054
  2223  041C                     _TMR6	set	1052
  2224  041D                     _PR6	set	1053
  2225  0417                     _T4CON	set	1047
  2226  0415                     _TMR4	set	1045
  2227  0416                     _PR4	set	1046
  2228  023E                     STR_3:	
  2229  023E  3420               	retlw	32	;' '
  2230  023F  3420               	retlw	32	;' '
  2231  0240  3420               	retlw	32	;' '
  2232  0241  3420               	retlw	32	;' '
  2233  0242  3425               	retlw	37	;'%'
  2234  0243  3432               	retlw	50	;'2'
  2235  0244  3464               	retlw	100	;'d'
  2236  0245  343A               	retlw	58	;':'
  2237  0246  3425               	retlw	37	;'%'
  2238  0247  3432               	retlw	50	;'2'
  2239  0248  3464               	retlw	100	;'d'
  2240  0249  3400               	retlw	0
  2241  024A                     STR_4:	
  2242  024A  3453               	retlw	83	;'S'
  2243  024B  3445               	retlw	69	;'E'
  2244  024C  344C               	retlw	76	;'L'
  2245  024D  3445               	retlw	69	;'E'
  2246  024E  3443               	retlw	67	;'C'
  2247  024F  3454               	retlw	84	;'T'
  2248  0250  3446               	retlw	70	;'F'
  2249  0251  3455               	retlw	85	;'U'
  2250  0252  344E               	retlw	78	;'N'
  2251  0253  3443               	retlw	67	;'C'
  2252  0254  3400               	retlw	0
  2253  0255                     STR_6:	
  2254  0255  3450               	retlw	80	;'P'
  2255  0256  344D               	retlw	77	;'M'
  2256  0257  3454               	retlw	84	;'T'
  2257  0258  3444               	retlw	68	;'D'
  2258  0259  3445               	retlw	69	;'E'
  2259  025A  3456               	retlw	86	;'V'
  2260  025B  3449               	retlw	73	;'I'
  2261  025C  3443               	retlw	67	;'C'
  2262  025D  3445               	retlw	69	;'E'
  2263  025E  3400               	retlw	0
  2264  025F                     STR_1:	
  2265  025F  3425               	retlw	37	;'%'
  2266  0260  3437               	retlw	55	;'7'
  2267  0261  346C               	retlw	108	;'l'
  2268  0262  3475               	retlw	117	;'u'
  2269  0263  3420               	retlw	32	;' '
  2270  0264  3425               	retlw	37	;'%'
  2271  0265  3437               	retlw	55	;'7'
  2272  0266  346C               	retlw	108	;'l'
  2273  0267  3475               	retlw	117	;'u'
  2274  0268  3400               	retlw	0
  2275  0269                     STR_36:	
  2276  0269  3432               	retlw	50	;'2'
  2277  026A  3437               	retlw	55	;'7'
  2278  026B  3437               	retlw	55	;'7'
  2279  026C  3434               	retlw	52	;'4'
  2280  026D  3435               	retlw	53	;'5'
  2281  026E  3436               	retlw	54	;'6'
  2282  026F  3432               	retlw	50	;'2'
  2283  0270  3400               	retlw	0
  2284  0271                     STR_35:	
  2285  0271  3431               	retlw	49	;'1'
  2286  0272  3439               	retlw	57	;'9'
  2287  0273  3434               	retlw	52	;'4'
  2288  0274  3430               	retlw	48	;'0'
  2289  0275  3436               	retlw	54	;'6'
  2290  0276  3437               	retlw	55	;'7'
  2291  0277  3433               	retlw	51	;'3'
  2292  0278  3400               	retlw	0
  2293  0279                     STR_34:	
  2294  0279  3431               	retlw	49	;'1'
  2295  027A  3433               	retlw	51	;'3'
  2296  027B  3433               	retlw	51	;'3'
  2297  027C  3436               	retlw	54	;'6'
  2298  027D  3430               	retlw	48	;'0'
  2299  027E  3430               	retlw	48	;'0'
  2300  027F  3436               	retlw	54	;'6'
  2301  0280  3400               	retlw	0
  2302  0281                     STR_5:	
  2303  0281  3441               	retlw	65	;'A'
  2304  0282  3444               	retlw	68	;'D'
  2305  0283  344A               	retlw	74	;'J'
  2306  0284  3447               	retlw	71	;'G'
  2307  0285  3441               	retlw	65	;'A'
  2308  0286  3449               	retlw	73	;'I'
  2309  0287  344E               	retlw	78	;'N'
  2310  0288  3400               	retlw	0
  2311  0289                     STR_32:	
  2312  0289  3436               	retlw	54	;'6'
  2313  028A  3430               	retlw	48	;'0'
  2314  028B  3430               	retlw	48	;'0'
  2315  028C  3430               	retlw	48	;'0'
  2316  028D  3430               	retlw	48	;'0'
  2317  028E  3430               	retlw	48	;'0'
  2318  028F  3400               	retlw	0
  2319  0290                     STR_50:	
  2320  0290  3437               	retlw	55	;'7'
  2321  0291  3430               	retlw	48	;'0'
  2322  0292  3430               	retlw	48	;'0'
  2323  0293  3438               	retlw	56	;'8'
  2324  0294  3439               	retlw	57	;'9'
  2325  0295  3430               	retlw	48	;'0'
  2326  0296  3400               	retlw	0
  2327  0297                     STR_51:	
  2328  0297  3439               	retlw	57	;'9'
  2329  0298  3436               	retlw	54	;'6'
  2330  0299  3438               	retlw	56	;'8'
  2331  029A  3434               	retlw	52	;'4'
  2332  029B  3437               	retlw	55	;'7'
  2333  029C  3432               	retlw	50	;'2'
  2334  029D  3400               	retlw	0
  2335  029E                     STR_45:	
  2336  029E  3431               	retlw	49	;'1'
  2337  029F  3430               	retlw	48	;'0'
  2338  02A0  3438               	retlw	56	;'8'
  2339  02A1  3438               	retlw	56	;'8'
  2340  02A2  3434               	retlw	52	;'4'
  2341  02A3  3433               	retlw	51	;'3'
  2342  02A4  3400               	retlw	0
  2343  02A5                     STR_47:	
  2344  02A5  3432               	retlw	50	;'2'
  2345  02A6  3434               	retlw	52	;'4'
  2346  02A7  3432               	retlw	50	;'2'
  2347  02A8  3433               	retlw	51	;'3'
  2348  02A9  3436               	retlw	54	;'6'
  2349  02AA  3434               	retlw	52	;'4'
  2350  02AB  3400               	retlw	0
  2351  02AC                     STR_48:	
  2352  02AC  3433               	retlw	51	;'3'
  2353  02AD  3435               	retlw	53	;'5'
  2354  02AE  3431               	retlw	49	;'1'
  2355  02AF  3431               	retlw	49	;'1'
  2356  02B0  3432               	retlw	50	;'2'
  2357  02B1  3437               	retlw	55	;'7'
  2358  02B2  3400               	retlw	0
  2359  02B3                     STR_30:	
  2360  02B3  3432               	retlw	50	;'2'
  2361  02B4  3434               	retlw	52	;'4'
  2362  02B5  3437               	retlw	55	;'7'
  2363  02B6  3436               	retlw	54	;'6'
  2364  02B7  3434               	retlw	52	;'4'
  2365  02B8  3437               	retlw	55	;'7'
  2366  02B9  3400               	retlw	0
  2367  02BA                     STR_29:	
  2368  02BA  3431               	retlw	49	;'1'
  2369  02BB  3435               	retlw	53	;'5'
  2370  02BC  3433               	retlw	51	;'3'
  2371  02BD  3432               	retlw	50	;'2'
  2372  02BE  3432               	retlw	50	;'2'
  2373  02BF  3438               	retlw	56	;'8'
  2374  02C0  3400               	retlw	0
  2375  02C1                     STR_31:	
  2376  02C1  3433               	retlw	51	;'3'
  2377  02C2  3438               	retlw	56	;'8'
  2378  02C3  3439               	retlw	57	;'9'
  2379  02C4  3439               	retlw	57	;'9'
  2380  02C5  3438               	retlw	56	;'8'
  2381  02C6  3438               	retlw	56	;'8'
  2382  02C7  3400               	retlw	0
  2383  02C8                     STR_46:	
  2384  02C8  3431               	retlw	49	;'1'
  2385  02C9  3436               	retlw	54	;'6'
  2386  02CA  3434               	retlw	52	;'4'
  2387  02CB  3431               	retlw	49	;'1'
  2388  02CC  3433               	retlw	51	;'3'
  2389  02CD  3439               	retlw	57	;'9'
  2390  02CE  3400               	retlw	0
  2391  02CF                     STR_33:	
  2392  02CF  3439               	retlw	57	;'9'
  2393  02D0  3430               	retlw	48	;'0'
  2394  02D1  3433               	retlw	51	;'3'
  2395  02D2  3438               	retlw	56	;'8'
  2396  02D3  3439               	retlw	57	;'9'
  2397  02D4  3439               	retlw	57	;'9'
  2398  02D5  3400               	retlw	0
  2399  02D6                     STR_49:	
  2400  02D6  3434               	retlw	52	;'4'
  2401  02D7  3439               	retlw	57	;'9'
  2402  02D8  3439               	retlw	57	;'9'
  2403  02D9  3439               	retlw	57	;'9'
  2404  02DA  3439               	retlw	57	;'9'
  2405  02DB  3439               	retlw	57	;'9'
  2406  02DC  3400               	retlw	0
  2407  02DD                     STR_26:	
  2408  02DD  3433               	retlw	51	;'3'
  2409  02DE  3430               	retlw	48	;'0'
  2410  02DF  3430               	retlw	48	;'0'
  2411  02E0  3430               	retlw	48	;'0'
  2412  02E1  3430               	retlw	48	;'0'
  2413  02E2  3400               	retlw	0
  2414  02E3                     STR_44:	
  2415  02E3  3437               	retlw	55	;'7'
  2416  02E4  3430               	retlw	48	;'0'
  2417  02E5  3435               	retlw	53	;'5'
  2418  02E6  3430               	retlw	48	;'0'
  2419  02E7  3430               	retlw	48	;'0'
  2420  02E8  3400               	retlw	0
  2421  02E9                     STR_27:	
  2422  02E9  3435               	retlw	53	;'5'
  2423  02EA  3433               	retlw	51	;'3'
  2424  02EB  3435               	retlw	53	;'5'
  2425  02EC  3435               	retlw	53	;'5'
  2426  02ED  3433               	retlw	51	;'3'
  2427  02EE  3400               	retlw	0
  2428  02EF                     STR_41:	
  2429  02EF  3431               	retlw	49	;'1'
  2430  02F0  3436               	retlw	54	;'6'
  2431  02F1  3431               	retlw	49	;'1'
  2432  02F2  3432               	retlw	50	;'2'
  2433  02F3  3435               	retlw	53	;'5'
  2434  02F4  3400               	retlw	0
  2435  02F5                     STR_42:	
  2436  02F5  3432               	retlw	50	;'2'
  2437  02F6  3437               	retlw	55	;'7'
  2438  02F7  3432               	retlw	50	;'2'
  2439  02F8  3433               	retlw	51	;'3'
  2440  02F9  3438               	retlw	56	;'8'
  2441  02FA  3400               	retlw	0
  2442  02FB                     STR_43:	
  2443  02FB  3434               	retlw	52	;'4'
  2444  02FC  3434               	retlw	52	;'4'
  2445  02FD  3434               	retlw	52	;'4'
  2446  02FE  3437               	retlw	55	;'7'
  2447  02FF  3438               	retlw	56	;'8'
  2448  0300  3400               	retlw	0
  2449  0301                     STR_28:	
  2450  0301  3439               	retlw	57	;'9'
  2451  0302  3432               	retlw	50	;'2'
  2452  0303  3430               	retlw	48	;'0'
  2453  0304  3438               	retlw	56	;'8'
  2454  0305  3438               	retlw	56	;'8'
  2455  0306  3400               	retlw	0
  2456  0307                     STR_25:	
  2457  0307  3431               	retlw	49	;'1'
  2458  0308  3436               	retlw	54	;'6'
  2459  0309  3430               	retlw	48	;'0'
  2460  030A  3439               	retlw	57	;'9'
  2461  030B  3439               	retlw	57	;'9'
  2462  030C  3400               	retlw	0
  2463  030D                     STR_18:	
  2464  030D  3431               	retlw	49	;'1'
  2465  030E  342E               	retlw	46	;'.'
  2466  030F  3430               	retlw	48	;'0'
  2467  0310  3435               	retlw	53	;'5'
  2468  0311  3456               	retlw	86	;'V'
  2469  0312  3400               	retlw	0
  2470  0313                     STR_20:	
  2471  0313  3431               	retlw	49	;'1'
  2472  0314  342E               	retlw	46	;'.'
  2473  0315  3431               	retlw	49	;'1'
  2474  0316  3435               	retlw	53	;'5'
  2475  0317  3456               	retlw	86	;'V'
  2476  0318  3400               	retlw	0
  2477  0319                     STR_8:	
  2478  0319  3430               	retlw	48	;'0'
  2479  031A  342E               	retlw	46	;'.'
  2480  031B  3435               	retlw	53	;'5'
  2481  031C  3435               	retlw	53	;'5'
  2482  031D  3456               	retlw	86	;'V'
  2483  031E  3400               	retlw	0
  2484  031F                     STR_10:	
  2485  031F  3430               	retlw	48	;'0'
  2486  0320  342E               	retlw	46	;'.'
  2487  0321  3436               	retlw	54	;'6'
  2488  0322  3435               	retlw	53	;'5'
  2489  0323  3456               	retlw	86	;'V'
  2490  0324  3400               	retlw	0
  2491  0325                     STR_12:	
  2492  0325  3430               	retlw	48	;'0'
  2493  0326  342E               	retlw	46	;'.'
  2494  0327  3437               	retlw	55	;'7'
  2495  0328  3435               	retlw	53	;'5'
  2496  0329  3456               	retlw	86	;'V'
  2497  032A  3400               	retlw	0
  2498  032B                     STR_14:	
  2499  032B  3430               	retlw	48	;'0'
  2500  032C  342E               	retlw	46	;'.'
  2501  032D  3438               	retlw	56	;'8'
  2502  032E  3435               	retlw	53	;'5'
  2503  032F  3456               	retlw	86	;'V'
  2504  0330  3400               	retlw	0
  2505  0331                     STR_16:	
  2506  0331  3430               	retlw	48	;'0'
  2507  0332  342E               	retlw	46	;'.'
  2508  0333  3439               	retlw	57	;'9'
  2509  0334  3435               	retlw	53	;'5'
  2510  0335  3456               	retlw	86	;'V'
  2511  0336  3400               	retlw	0
  2512  0337                     STR_37:	
  2513  0337  3431               	retlw	49	;'1'
  2514  0338  3432               	retlw	50	;'2'
  2515  0339  3435               	retlw	53	;'5'
  2516  033A  3430               	retlw	48	;'0'
  2517  033B  3400               	retlw	0
  2518  033C                     STR_38:	
  2519  033C  3432               	retlw	50	;'2'
  2520  033D  3435               	retlw	53	;'5'
  2521  033E  3438               	retlw	56	;'8'
  2522  033F  3430               	retlw	48	;'0'
  2523  0340  3400               	retlw	0
  2524  0341                     STR_40:	
  2525  0341  3439               	retlw	57	;'9'
  2526  0342  3431               	retlw	49	;'1'
  2527  0343  3438               	retlw	56	;'8'
  2528  0344  3432               	retlw	50	;'2'
  2529  0345  3400               	retlw	0
  2530  0346                     STR_23:	
  2531  0346  3433               	retlw	51	;'3'
  2532  0347  3439               	retlw	57	;'9'
  2533  0348  3435               	retlw	53	;'5'
  2534  0349  3437               	retlw	55	;'7'
  2535  034A  3400               	retlw	0
  2536  034B                     STR_22:	
  2537  034B  3431               	retlw	49	;'1'
  2538  034C  3437               	retlw	55	;'7'
  2539  034D  3437               	retlw	55	;'7'
  2540  034E  3437               	retlw	55	;'7'
  2541  034F  3400               	retlw	0
  2542  0350                     STR_39:	
  2543  0350  3434               	retlw	52	;'4'
  2544  0351  3439               	retlw	57	;'9'
  2545  0352  3439               	retlw	57	;'9'
  2546  0353  3438               	retlw	56	;'8'
  2547  0354  3400               	retlw	0
  2548  0355                     STR_24:	
  2549  0355  3438               	retlw	56	;'8'
  2550  0356  3432               	retlw	50	;'2'
  2551  0357  3431               	retlw	49	;'1'
  2552  0358  3439               	retlw	57	;'9'
  2553  0359  3400               	retlw	0
  2554  035A                     STR_17:	
  2555  035A  3431               	retlw	49	;'1'
  2556  035B  342E               	retlw	46	;'.'
  2557  035C  3430               	retlw	48	;'0'
  2558  035D  3456               	retlw	86	;'V'
  2559  035E  3400               	retlw	0
  2560  035F                     STR_19:	
  2561  035F  3431               	retlw	49	;'1'
  2562  0360  342E               	retlw	46	;'.'
  2563  0361  3431               	retlw	49	;'1'
  2564  0362  3456               	retlw	86	;'V'
  2565  0363  3400               	retlw	0
  2566  0364                     STR_21:	
  2567  0364  3431               	retlw	49	;'1'
  2568  0365  342E               	retlw	46	;'.'
  2569  0366  3432               	retlw	50	;'2'
  2570  0367  3456               	retlw	86	;'V'
  2571  0368  3400               	retlw	0
  2572  0369                     STR_7:	
  2573  0369  3430               	retlw	48	;'0'
  2574  036A  342E               	retlw	46	;'.'
  2575  036B  3435               	retlw	53	;'5'
  2576  036C  3456               	retlw	86	;'V'
  2577  036D  3400               	retlw	0
  2578  036E                     STR_9:	
  2579  036E  3430               	retlw	48	;'0'
  2580  036F  342E               	retlw	46	;'.'
  2581  0370  3436               	retlw	54	;'6'
  2582  0371  3456               	retlw	86	;'V'
  2583  0372  3400               	retlw	0
  2584  0373                     STR_11:	
  2585  0373  3430               	retlw	48	;'0'
  2586  0374  342E               	retlw	46	;'.'
  2587  0375  3437               	retlw	55	;'7'
  2588  0376  3456               	retlw	86	;'V'
  2589  0377  3400               	retlw	0
  2590  0378                     STR_13:	
  2591  0378  3430               	retlw	48	;'0'
  2592  0379  342E               	retlw	46	;'.'
  2593  037A  3438               	retlw	56	;'8'
  2594  037B  3456               	retlw	86	;'V'
  2595  037C  3400               	retlw	0
  2596  037D                     STR_15:	
  2597  037D  3430               	retlw	48	;'0'
  2598  037E  342E               	retlw	46	;'.'
  2599  037F  3439               	retlw	57	;'9'
  2600  0380  3456               	retlw	86	;'V'
  2601  0381  3400               	retlw	0
  2602  0382                     STR_2:	
  2603  0382  3425               	retlw	37	;'%'
  2604  0383  3436               	retlw	54	;'6'
  2605  0384  346C               	retlw	108	;'l'
  2606  0385  3475               	retlw	117	;'u'
  2607  0386  3400               	retlw	0
  2608                           
  2609                           ; #config settings
  2610  0000                     
  2611                           	psect	cinit
  2612  002D                     start_initialization:	
  2613  002D                     __initialization:	
  2614                           
  2615                           ; Initialize objects allocated to BANK1
  2616  002D  302D               	movlw	low __pidataBANK1
  2617  002E  0084               	movwf	4
  2618  002F  308E               	movlw	(high __pidataBANK1)| (0+128)
  2619  0030  0085               	movwf	5
  2620  0031  30CD               	movlw	low __pdataBANK1
  2621  0032  0086               	movwf	6
  2622  0033  3000               	movlw	high __pdataBANK1
  2623  0034  0087               	movwf	7
  2624  0035  301E               	movlw	30
  2625  0036  318C  24A8  3180   	fcall	init_ram
  2626                           
  2627                           ; Initialize objects allocated to BANK2
  2628  0039  3044               	movlw	low __pidataBANK2
  2629  003A  0084               	movwf	4
  2630  003B  308F               	movlw	(high __pidataBANK2)| (0+128)
  2631  003C  0085               	movwf	5
  2632  003D  3020               	movlw	low __pdataBANK2
  2633  003E  0086               	movwf	6
  2634  003F  3001               	movlw	high __pdataBANK2
  2635  0040  0087               	movwf	7
  2636  0041  303C               	movlw	60
  2637  0042  318C  24A8  3180   	fcall	init_ram
  2638                           
  2639                           ; Clear objects allocated to BANK0
  2640  0045  3059               	movlw	low __pbssBANK0
  2641  0046  0084               	movwf	4
  2642  0047  3000               	movlw	high __pbssBANK0
  2643  0048  0085               	movwf	5
  2644  0049  3015               	movlw	21
  2645  004A  318C  24A2  3180   	fcall	clear_ram0
  2646                           
  2647                           ; Clear objects allocated to BANK1
  2648  004D  30A0               	movlw	low __pbssBANK1
  2649  004E  0084               	movwf	4
  2650  004F  3000               	movlw	high __pbssBANK1
  2651  0050  0085               	movwf	5
  2652  0051  302D               	movlw	45
  2653  0052  318C  24A2         	fcall	clear_ram0
  2654  0054                     end_of_initialization:	
  2655                           ;End of C runtime variable initialization code
  2656                           
  2657  0054                     __end_of__initialization:	
  2658  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2659  0055  0020               	movlb	0
  2660  0056  3183  2B87         	ljmp	_main	;jump to C main() function
  2661                           
  2662                           	psect	bssBANK0
  2663  0059                     __pbssBANK0:	
  2664  0059                     _tcnt:	
  2665  0059                     	ds	8
  2666  0061                     _mTouch_Interval:	
  2667  0061                     	ds	3
  2668  0064                     _mode:	
  2669  0064                     	ds	2
  2670  0066                     Timer1_DetectAssignCount@PreviousTimer1:	
  2671  0066                     	ds	2
  2672  0068                     _count:	
  2673  0068                     	ds	2
  2674  006A                     mTouch_Read@channel:	
  2675  006A                     	ds	1
  2676  006B                     _VoltageReg:	
  2677  006B                     	ds	2
  2678  006D                     _ConfigReg:	
  2679  006D                     	ds	1
  2680                           
  2681                           	psect	bssBANK1
  2682  00A0                     __pbssBANK1:	
  2683  00A0                     _cnts:	
  2684  00A0                     	ds	20
  2685  00B4                     _CPS_Data:	
  2686  00B4                     	ds	3
  2687  00B7                     _CPS_PreData:	
  2688  00B7                     	ds	3
  2689  00BA                     _I2C2_Config:	
  2690  00BA                     	ds	19
  2691                           
  2692                           	psect	dataBANK1
  2693  00CD                     __pdataBANK1:	
  2694  00CD                     _DAC_VoltageTable:	
  2695  00CD                     	ds	30
  2696                           
  2697                           	psect	dataBANK2
  2698  0120                     __pdataBANK2:	
  2699  0120                     _H7826_01_Gain:	
  2700  0120                     	ds	30
  2701  013E                     _H7826_Gain:	
  2702  013E                     	ds	30
  2703                           
  2704                           	psect	inittext
  2705  0CA8                     init_ram:	
  2706  0CA8  00FE               	movwf	126
  2707  0CA9                     initloop:	
  2708  0CA9  0012               	moviw fsr0++
  2709  0CAA  001E               	movwi fsr1++
  2710  0CAB  0BFE               	decfsz	126,f
  2711  0CAC  2CA9               	goto	initloop
  2712  0CAD  3400               	retlw	0
  2713                           
  2714                           	psect	clrtext
  2715  0CA2                     clear_ram0:	
  2716                           ;	Called with FSR0 containing the base address, and
  2717                           ;	WREG with the size to clear
  2718                           
  2719  0CA2  0064               	clrwdt	;clear the watchdog before getting into this loop
  2720  0CA3                     clrloop0:	
  2721  0CA3  0180               	clrf	0	;clear RAM location pointed to by FSR
  2722  0CA4  3101               	addfsr 0,1
  2723  0CA5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2724  0CA6  2CA3               	goto	clrloop0	;have we reached the end yet?
  2725  0CA7  3400               	retlw	0	;all done for this memory range, return
  2726                           
  2727                           	psect	cstackCOMMON
  2728  0070                     __pcstackCOMMON:	
  2729  0070                     ?_isdigit:	
  2730  0070                     ?_I2C2_Interrupt:	
  2731                           ; 1 bit 
  2732                           
  2733  0070                     ??_I2C2_Interrupt:	
  2734                           ; 1 bytes @ 0x0
  2735                           
  2736  0070                     ?_LCD_DisplayClear:	
  2737                           ; 1 bytes @ 0x0
  2738                           
  2739  0070                     ?_Timer1_ClearRecord:	
  2740                           ; 1 bytes @ 0x0
  2741                           
  2742  0070                     ?_Basic_Init:	
  2743                           ; 1 bytes @ 0x0
  2744                           
  2745  0070                     ?_mTouch_Check:	
  2746                           ; 1 bytes @ 0x0
  2747                           
  2748  0070                     ?_mTouch_IntervalDecrement:	
  2749                           ; 1 bytes @ 0x0
  2750                           
  2751  0070                     ??_mTouch_IntervalDecrement:	
  2752                           ; 1 bytes @ 0x0
  2753                           
  2754  0070                     ?_Buzzer_Init:	
  2755                           ; 1 bytes @ 0x0
  2756                           
  2757  0070                     ?_Buzzer_SetDuty:	
  2758                           ; 1 bytes @ 0x0
  2759                           
  2760  0070                     ?_Buzzer_Count1ms:	
  2761                           ; 1 bytes @ 0x0
  2762                           
  2763  0070                     ?_I2C_CommonInterrupt:	
  2764                           ; 1 bytes @ 0x0
  2765                           
  2766  0070                     ?_LCD_WriteData:	
  2767                           ; 1 bytes @ 0x0
  2768                           
  2769  0070                     ?_LCD_Init:	
  2770                           ; 1 bytes @ 0x0
  2771                           
  2772  0070                     ?_putch:	
  2773                           ; 1 bytes @ 0x0
  2774                           
  2775  0070                     ?_LCD_CursorHome:	
  2776                           ; 1 bytes @ 0x0
  2777                           
  2778  0070                     ?_DAC_Initialize:	
  2779                           ; 1 bytes @ 0x0
  2780                           
  2781  0070                     ?_Timer1_Init:	
  2782                           ; 1 bytes @ 0x0
  2783                           
  2784  0070                     ?_Timer1_StartCount:	
  2785                           ; 1 bytes @ 0x0
  2786                           
  2787  0070                     ?_Timer1_GetSecond:	
  2788                           ; 1 bytes @ 0x0
  2789                           
  2790  0070                     ?_Timer1_GetMinute:	
  2791                           ; 1 bytes @ 0x0
  2792                           
  2793  0070                     ?_Timer1_Count1ms:	
  2794                           ; 1 bytes @ 0x0
  2795                           
  2796  0070                     ?_Timer1_DetectAssignCount:	
  2797                           ; 1 bytes @ 0x0
  2798                           
  2799  0070                     ?_Timer6_Init:	
  2800                           ; 1 bytes @ 0x0
  2801                           
  2802  0070                     ?_Timer6_CheckFlag:	
  2803                           ; 1 bytes @ 0x0
  2804                           
  2805  0070                     ??_Timer6_CheckFlag:	
  2806                           ; 1 bytes @ 0x0
  2807                           
  2808  0070                     ?_mTouch_PortInit:	
  2809                           ; 1 bytes @ 0x0
  2810                           
  2811  0070                     ?_mTouch_Init:	
  2812                           ; 1 bytes @ 0x0
  2813                           
  2814  0070                     ?_mTouch_Read:	
  2815                           ; 1 bytes @ 0x0
  2816                           
  2817  0070                     ??_mTouch_Read:	
  2818                           ; 1 bytes @ 0x0
  2819                           
  2820  0070                     ?_main:	
  2821                           ; 1 bytes @ 0x0
  2822                           
  2823  0070                     ?_Handler:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826  0070                     ?_I2C2_PinInit:	
  2827                           ; 1 bytes @ 0x0
  2828                           
  2829  0070                     ?i1_Buzzer_MiliSecond:	
  2830                           ; 1 bytes @ 0x0
  2831                           
  2832  0070                     ?___lmul:	
  2833                           ; 1 bytes @ 0x0
  2834                           
  2835  0070                     ?i1___lldiv:	
  2836                           ; 4 bytes @ 0x0
  2837                           
  2838  0070                     Buzzer_SetDuty@duty:	
  2839                           ; 4 bytes @ 0x0
  2840                           
  2841  0070                     i1Buzzer_MiliSecond@time:	
  2842                           ; 2 bytes @ 0x0
  2843                           
  2844  0070                     ___lmul@multiplier:	
  2845                           ; 2 bytes @ 0x0
  2846                           
  2847  0070                     i1___lldiv@divisor:	
  2848                           ; 4 bytes @ 0x0
  2849                           
  2850                           
  2851                           ; 4 bytes @ 0x0
  2852  0070                     	ds	1
  2853  0071                     ??_I2C_CommonInterrupt:	
  2854                           
  2855                           ; 1 bytes @ 0x1
  2856  0071                     	ds	1
  2857  0072                     ??_Buzzer_SetDuty:	
  2858  0072                     ??i1_Buzzer_MiliSecond:	
  2859                           ; 1 bytes @ 0x2
  2860                           
  2861                           
  2862                           ; 1 bytes @ 0x2
  2863  0072                     	ds	2
  2864  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
  2865  0074                     ___lmul@multiplicand:	
  2866                           ; 1 bytes @ 0x4
  2867                           
  2868  0074                     i1___lldiv@dividend:	
  2869                           ; 4 bytes @ 0x4
  2870                           
  2871                           
  2872                           ; 4 bytes @ 0x4
  2873  0074                     	ds	1
  2874  0075                     ??_Buzzer_Count1ms:	
  2875                           
  2876                           ; 1 bytes @ 0x5
  2877  0075                     	ds	3
  2878  0078                     ??___lmul:	
  2879  0078                     ??i1___lldiv:	
  2880                           ; 1 bytes @ 0x8
  2881                           
  2882  0078                     ___lmul@product:	
  2883                           ; 1 bytes @ 0x8
  2884                           
  2885                           
  2886                           ; 4 bytes @ 0x8
  2887  0078                     	ds	1
  2888  0079                     i1___lldiv@quotient:	
  2889                           
  2890                           ; 4 bytes @ 0x9
  2891  0079                     	ds	4
  2892  007D                     i1___lldiv@counter:	
  2893                           
  2894                           ; 1 bytes @ 0xD
  2895  007D                     	ds	1
  2896  007E                     ??_Timer1_DetectAssignCount:	
  2897                           
  2898                           	psect	cstackBANK0
  2899  0020                     __pcstackBANK0:	
  2900                           ; 1 bytes @ 0xE
  2901                           
  2902  0020                     ??_Timer1_Count1ms:	
  2903                           
  2904                           ; 1 bytes @ 0x0
  2905  0020                     	ds	1
  2906  0021                     ??_Handler:	
  2907                           
  2908                           ; 1 bytes @ 0x1
  2909  0021                     	ds	1
  2910  0022                     ?_I2C2_Transmit:	
  2911  0022                     ??_Timer1_ClearRecord:	
  2912                           ; 1 bytes @ 0x2
  2913                           
  2914  0022                     ??_Basic_Init:	
  2915                           ; 1 bytes @ 0x2
  2916                           
  2917  0022                     ??_isdigit:	
  2918                           ; 1 bytes @ 0x2
  2919                           
  2920  0022                     ??_Buzzer_Init:	
  2921                           ; 1 bytes @ 0x2
  2922                           
  2923  0022                     ?_Buzzer_MiliSecond:	
  2924                           ; 1 bytes @ 0x2
  2925                           
  2926  0022                     ??_LCD_WriteData:	
  2927                           ; 1 bytes @ 0x2
  2928                           
  2929  0022                     ??_Timer1_Init:	
  2930                           ; 1 bytes @ 0x2
  2931                           
  2932  0022                     ??_Timer1_StartCount:	
  2933                           ; 1 bytes @ 0x2
  2934                           
  2935  0022                     ??_Timer1_GetSecond:	
  2936                           ; 1 bytes @ 0x2
  2937                           
  2938  0022                     ??_Timer1_GetMinute:	
  2939                           ; 1 bytes @ 0x2
  2940                           
  2941  0022                     ??_Timer6_Init:	
  2942                           ; 1 bytes @ 0x2
  2943                           
  2944  0022                     ??_mTouch_PortInit:	
  2945                           ; 1 bytes @ 0x2
  2946                           
  2947  0022                     ??_I2C2_PinInit:	
  2948                           ; 1 bytes @ 0x2
  2949                           
  2950  0022                     ?___wmul:	
  2951                           ; 1 bytes @ 0x2
  2952                           
  2953  0022                     ?_Timer1_GetCountSum:	
  2954                           ; 2 bytes @ 0x2
  2955                           
  2956  0022                     ?_Timer1_GetCPM:	
  2957                           ; 4 bytes @ 0x2
  2958                           
  2959  0022                     ?_Timer1_GetCPS:	
  2960                           ; 4 bytes @ 0x2
  2961                           
  2962  0022                     ?___lldiv:	
  2963                           ; 4 bytes @ 0x2
  2964                           
  2965  0022                     I2C2_Transmit@pData:	
  2966                           ; 4 bytes @ 0x2
  2967                           
  2968  0022                     _isdigit$819:	
  2969                           ; 1 bytes @ 0x2
  2970                           
  2971  0022                     Buzzer_MiliSecond@time:	
  2972                           ; 1 bytes @ 0x2
  2973                           
  2974  0022                     ___wmul@multiplier:	
  2975                           ; 2 bytes @ 0x2
  2976                           
  2977  0022                     ___lldiv@divisor:	
  2978                           ; 2 bytes @ 0x2
  2979                           
  2980                           
  2981                           ; 4 bytes @ 0x2
  2982  0022                     	ds	1
  2983  0023                     ?_I2C2_Setting:	
  2984  0023                     ??_mTouch_Init:	
  2985                           ; 1 bytes @ 0x3
  2986                           
  2987  0023                     I2C2_Setting@mode:	
  2988                           ; 1 bytes @ 0x3
  2989                           
  2990  0023                     I2C2_Transmit@size:	
  2991                           ; 1 bytes @ 0x3
  2992                           
  2993  0023                     isdigit@c:	
  2994                           ; 1 bytes @ 0x3
  2995                           
  2996                           
  2997                           ; 1 bytes @ 0x3
  2998  0023                     	ds	1
  2999  0024                     ??_I2C2_Transmit:	
  3000  0024                     ??_mTouch_Check:	
  3001                           ; 1 bytes @ 0x4
  3002                           
  3003  0024                     ??_Buzzer_MiliSecond:	
  3004                           ; 1 bytes @ 0x4
  3005                           
  3006  0024                     LCD_WriteData@point:	
  3007                           ; 1 bytes @ 0x4
  3008                           
  3009  0024                     I2C2_Setting@Speed:	
  3010                           ; 1 bytes @ 0x4
  3011                           
  3012  0024                     ___wmul@multiplicand:	
  3013                           ; 1 bytes @ 0x4
  3014                           
  3015                           
  3016                           ; 2 bytes @ 0x4
  3017  0024                     	ds	1
  3018  0025                     ??_I2C2_Setting:	
  3019  0025                     ??_LCD_DisplayClear:	
  3020                           ; 1 bytes @ 0x5
  3021                           
  3022  0025                     ??_putch:	
  3023                           ; 1 bytes @ 0x5
  3024                           
  3025  0025                     ??_LCD_CursorHome:	
  3026                           ; 1 bytes @ 0x5
  3027                           
  3028  0025                     ?_LCD_CursorPosition:	
  3029                           ; 1 bytes @ 0x5
  3030                           
  3031  0025                     putch@c:	
  3032                           ; 1 bytes @ 0x5
  3033                           
  3034  0025                     LCD_CursorPosition@ty:	
  3035                           ; 1 bytes @ 0x5
  3036                           
  3037                           
  3038                           ; 1 bytes @ 0x5
  3039  0025                     	ds	1
  3040  0026                     ??_LCD_Init:	
  3041  0026                     ??_LCD_CursorPosition:	
  3042                           ; 1 bytes @ 0x6
  3043                           
  3044  0026                     ??_Timer1_GetCountSum:	
  3045                           ; 1 bytes @ 0x6
  3046                           
  3047  0026                     ??_Timer1_GetCPM:	
  3048                           ; 1 bytes @ 0x6
  3049                           
  3050  0026                     ??_Timer1_GetCPS:	
  3051                           ; 1 bytes @ 0x6
  3052                           
  3053  0026                     ??___wmul:	
  3054                           ; 1 bytes @ 0x6
  3055                           
  3056  0026                     I2C2_Setting@address:	
  3057                           ; 1 bytes @ 0x6
  3058                           
  3059  0026                     I2C2_Transmit@address:	
  3060                           ; 1 bytes @ 0x6
  3061                           
  3062  0026                     ___wmul@product:	
  3063                           ; 1 bytes @ 0x6
  3064                           
  3065  0026                     ___lldiv@dividend:	
  3066                           ; 2 bytes @ 0x6
  3067                           
  3068                           
  3069                           ; 4 bytes @ 0x6
  3070  0026                     	ds	1
  3071  0027                     ?_I2C_Init:	
  3072  0027                     I2C_Init@address:	
  3073                           ; 1 bytes @ 0x7
  3074                           
  3075  0027                     LCD_CursorPosition@tx:	
  3076                           ; 1 bytes @ 0x7
  3077                           
  3078  0027                     I2C2_Transmit@i:	
  3079                           ; 1 bytes @ 0x7
  3080                           
  3081                           
  3082                           ; 1 bytes @ 0x7
  3083  0027                     	ds	1
  3084  0028                     I2C_Init@mode:	
  3085  0028                     I2C2_Transmit@i_574:	
  3086                           ; 1 bytes @ 0x8
  3087                           
  3088                           
  3089                           ; 1 bytes @ 0x8
  3090  0028                     	ds	1
  3091  0029                     I2C_Init@Speed:	
  3092  0029                     mTouch_Check@chan:	
  3093                           ; 1 bytes @ 0x9
  3094                           
  3095  0029                     I2C2_Transmit@result:	
  3096                           ; 1 bytes @ 0x9
  3097                           
  3098                           
  3099                           ; 1 bytes @ 0x9
  3100  0029                     	ds	1
  3101  002A                     ??_I2C_Init:	
  3102  002A                     ?_I2C_Transmit:	
  3103                           ; 1 bytes @ 0xA
  3104                           
  3105  002A                     ??___lldiv:	
  3106                           ; 1 bytes @ 0xA
  3107                           
  3108  002A                     I2C_Transmit@address:	
  3109                           ; 1 bytes @ 0xA
  3110                           
  3111                           
  3112                           ; 1 bytes @ 0xA
  3113  002A                     	ds	1
  3114  002B                     I2C_Transmit@pData:	
  3115  002B                     ___lldiv@quotient:	
  3116                           ; 1 bytes @ 0xB
  3117                           
  3118                           
  3119                           ; 4 bytes @ 0xB
  3120  002B                     	ds	1
  3121  002C                     I2C_Init@I2Cx:	
  3122  002C                     I2C_Transmit@size:	
  3123                           ; 1 bytes @ 0xC
  3124                           
  3125                           
  3126                           ; 1 bytes @ 0xC
  3127  002C                     	ds	1
  3128  002D                     ??_I2C_Transmit:	
  3129                           
  3130                           ; 1 bytes @ 0xD
  3131  002D                     	ds	2
  3132  002F                     ___lldiv@counter:	
  3133                           
  3134                           ; 1 bytes @ 0xF
  3135  002F                     	ds	1
  3136  0030                     ?___llmod:	
  3137  0030                     I2C_Transmit@I2Cx:	
  3138                           ; 4 bytes @ 0x10
  3139                           
  3140  0030                     ___llmod@divisor:	
  3141                           ; 1 bytes @ 0x10
  3142                           
  3143                           
  3144                           ; 4 bytes @ 0x10
  3145  0030                     	ds	1
  3146  0031                     I2C_Transmit@result:	
  3147                           
  3148                           ; 1 bytes @ 0x11
  3149  0031                     	ds	1
  3150  0032                     ??_DAC_Initialize:	
  3151  0032                     ?_DAC_WriteVoltage:	
  3152                           ; 1 bytes @ 0x12
  3153                           
  3154  0032                     DAC_WriteVoltage@volue:	
  3155                           ; 1 bytes @ 0x12
  3156                           
  3157                           
  3158                           ; 2 bytes @ 0x12
  3159  0032                     	ds	2
  3160  0034                     ??_DAC_WriteVoltage:	
  3161  0034                     ___llmod@dividend:	
  3162                           ; 1 bytes @ 0x14
  3163                           
  3164                           
  3165                           ; 4 bytes @ 0x14
  3166  0034                     	ds	4
  3167  0038                     ??___llmod:	
  3168                           
  3169                           ; 1 bytes @ 0x18
  3170  0038                     	ds	1
  3171  0039                     ___llmod@counter:	
  3172                           
  3173                           ; 1 bytes @ 0x19
  3174  0039                     	ds	1
  3175  003A                     ?_printf:	
  3176  003A                     printf@f:	
  3177                           ; 2 bytes @ 0x1A
  3178                           
  3179                           
  3180                           ; 2 bytes @ 0x1A
  3181  003A                     	ds	10
  3182  0044                     ??_printf:	
  3183                           
  3184                           ; 1 bytes @ 0x24
  3185  0044                     	ds	6
  3186  004A                     printf@prec:	
  3187                           
  3188                           ; 2 bytes @ 0x2A
  3189  004A                     	ds	2
  3190  004C                     printf@val:	
  3191                           
  3192                           ; 4 bytes @ 0x2C
  3193  004C                     	ds	4
  3194  0050                     printf@ap:	
  3195                           
  3196                           ; 1 bytes @ 0x30
  3197  0050                     	ds	1
  3198  0051                     printf@flag:	
  3199                           
  3200                           ; 1 bytes @ 0x31
  3201  0051                     	ds	1
  3202  0052                     printf@width:	
  3203                           
  3204                           ; 2 bytes @ 0x32
  3205  0052                     	ds	2
  3206  0054                     printf@c:	
  3207                           
  3208                           ; 1 bytes @ 0x34
  3209  0054                     	ds	1
  3210  0055                     ??_main:	
  3211                           
  3212                           ; 1 bytes @ 0x35
  3213  0055                     	ds	4
  3214                           
  3215                           	psect	maintext
  3216  0387                     __pmaintext:	
  3217 ;;
  3218 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3219 ;;
  3220 ;; *************** function _main *****************
  3221 ;; Defined at:
  3222 ;;		line 19 in file "main.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      char 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : B1F/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3236 ;;      Params:         0       0       0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0       0
  3238 ;;      Temps:          0       4       0       0       0       0
  3239 ;;      Totals:         0       4       0       0       0       0
  3240 ;;Total ram usage:        4 bytes
  3241 ;; Hardware stack levels required when called:    7
  3242 ;; This function calls:
  3243 ;;		_Basic_Init
  3244 ;;		_Buzzer_Init
  3245 ;;		_DAC_Initialize
  3246 ;;		_DAC_WriteVoltage
  3247 ;;		_LCD_CursorHome
  3248 ;;		_LCD_CursorPosition
  3249 ;;		_LCD_Init
  3250 ;;		_Timer1_GetCPM
  3251 ;;		_Timer1_GetCPS
  3252 ;;		_Timer1_GetCountSum
  3253 ;;		_Timer1_GetMinute
  3254 ;;		_Timer1_GetSecond
  3255 ;;		_Timer1_Init
  3256 ;;		_Timer1_StartCount
  3257 ;;		_Timer6_Init
  3258 ;;		_mTouch_Check
  3259 ;;		_mTouch_Init
  3260 ;;		_printf
  3261 ;; This function is called by:
  3262 ;;		Startup code after reset
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           
  3267                           ;psect for function _main
  3268  0387                     _main:	
  3269                           
  3270                           ;main.c: 21: Basic_Init();
  3271                           
  3272                           ;incstack = 0
  3273                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3274  0387  318D  254C  3183   	fcall	_Basic_Init
  3275                           
  3276                           ;main.c: 22: LATA6 = 1;
  3277  038A  0022               	movlb	2	; select bank2
  3278  038B  170C               	bsf	12,6	;volatile
  3279                           
  3280                           ;main.c: 23: Buzzer_Init();
  3281  038C  318E  26B1  3183   	fcall	_Buzzer_Init
  3282                           
  3283                           ;main.c: 24: LCD_Init();
  3284  038F  3185  2575  3183   	fcall	_LCD_Init
  3285                           
  3286                           ;main.c: 25: Timer1_Init();
  3287  0392  318E  266B  3183   	fcall	_Timer1_Init
  3288                           
  3289                           ;main.c: 26: mTouch_Init();
  3290  0395  318D  2581  3183   	fcall	_mTouch_Init
  3291                           
  3292                           ;main.c: 28: Timer6_Init();
  3293  0398  318D  256E  3183   	fcall	_Timer6_Init
  3294                           
  3295                           ;main.c: 29: DAC_Initialize();
  3296  039B  318E  264B  3183   	fcall	_DAC_Initialize
  3297                           
  3298                           ;main.c: 31: Timer1_StartCount();
  3299  039E  318C  249D  3183   	fcall	_Timer1_StartCount
  3300                           
  3301                           ;main.c: 33: mode.ModeNum = 0;
  3302  03A1  0020               	movlb	0	; select bank0
  3303  03A2  01E5               	clrf	_mode+1
  3304                           
  3305                           ;main.c: 35: DAC_WriteVoltage(DAC_DataTable[6]);
  3306  03A3  302C               	movlw	low ((_DAC_DataTable+12)| (0+32768))
  3307  03A4  0084               	movwf	4
  3308  03A5  3082               	movlw	high ((_DAC_DataTable+12)| (0+32768))
  3309  03A6  0085               	movwf	5
  3310  03A7  3F00               	moviw [0]fsr0
  3311  03A8  00B2               	movwf	DAC_WriteVoltage@volue
  3312  03A9  3F01               	moviw [1]fsr0
  3313  03AA  00B3               	movwf	DAC_WriteVoltage@volue+1
  3314  03AB  3187  27CF  3183   	fcall	_DAC_WriteVoltage
  3315  03AE                     l2884:	
  3316                           ;main.c: 37: while(1)
  3317                           
  3318                           
  3319                           ;main.c: 38: {
  3320                           ;main.c: 39: if(mTouch_Check(2)&&(mode.ModeNum<4-1))
  3321  03AE  3002               	movlw	2
  3322  03AF  3187  2747  3183   	fcall	_mTouch_Check
  3323  03B2  3A00               	xorlw	0
  3324  03B3  1903               	skipnz
  3325  03B4  2BBF               	goto	l2890
  3326  03B5  3003               	movlw	3
  3327  03B6  0020               	movlb	0	; select bank0
  3328  03B7  0265               	subwf	_mode+1,w
  3329  03B8  1803               	skipnc
  3330  03B9  2BBF               	goto	l2890
  3331                           
  3332                           ;main.c: 40: mode.ModeNum++;
  3333  03BA  3001               	movlw	1
  3334  03BB  00D5               	movwf	??_main
  3335  03BC  0855               	movf	??_main,w
  3336  03BD  07E5               	addwf	_mode+1,f
  3337  03BE  2BCC               	goto	l2896
  3338  03BF                     l2890:	
  3339                           
  3340                           ;main.c: 41: else if(mTouch_Check(1)&&(mode.ModeNum>0))
  3341  03BF  3001               	movlw	1
  3342  03C0  3187  2747  3183   	fcall	_mTouch_Check
  3343  03C3  3A00               	xorlw	0
  3344  03C4  1903               	skipnz
  3345  03C5  2BCC               	goto	l2896
  3346  03C6  0020               	movlb	0	; select bank0
  3347  03C7  0865               	movf	_mode+1,w
  3348  03C8  1903               	btfsc	3,2
  3349  03C9  2BCC               	goto	l2896
  3350                           
  3351                           ;main.c: 42: mode.ModeNum--;
  3352  03CA  3001               	movlw	1
  3353  03CB  02E5               	subwf	_mode+1,f
  3354  03CC                     l2896:	
  3355                           
  3356                           ;main.c: 44: LCD_CursorHome();
  3357  03CC  318D  251B  3183   	fcall	_LCD_CursorHome
  3358                           
  3359                           ;main.c: 45: switch(mode.ModeNum)
  3360  03CF  2C43               	goto	l2914
  3361  03D0                     l2898:	
  3362                           ;main.c: 46: {
  3363                           ;main.c: 47: case COUNT:
  3364                           
  3365                           
  3366                           ;main.c: 48: printf("%7lu %7lu", Timer1_GetCPM(),Timer1_GetCountSum());
  3367  03D0  305F               	movlw	low (STR_1| (0+32768))
  3368  03D1  0020               	movlb	0	; select bank0
  3369  03D2  00BA               	movwf	printf@f
  3370  03D3  3082               	movlw	high (STR_1| (0+32768))
  3371  03D4  00BB               	movwf	printf@f+1
  3372  03D5  318C  24F0  3183   	fcall	_Timer1_GetCPM
  3373  03D8  0020               	movlb	0	; select bank0
  3374  03D9  0825               	movf	?_Timer1_GetCPM+3,w
  3375  03DA  00BF               	movwf	?_printf+5
  3376  03DB  0824               	movf	?_Timer1_GetCPM+2,w
  3377  03DC  00BE               	movwf	?_printf+4
  3378  03DD  0823               	movf	?_Timer1_GetCPM+1,w
  3379  03DE  00BD               	movwf	?_printf+3
  3380  03DF  0822               	movf	?_Timer1_GetCPM,w
  3381  03E0  00BC               	movwf	?_printf+2
  3382  03E1  318D  255D  3183   	fcall	_Timer1_GetCountSum
  3383  03E4  0020               	movlb	0	; select bank0
  3384  03E5  0825               	movf	?_Timer1_GetCountSum+3,w
  3385  03E6  00C3               	movwf	?_printf+9
  3386  03E7  0824               	movf	?_Timer1_GetCountSum+2,w
  3387  03E8  00C2               	movwf	?_printf+8
  3388  03E9  0823               	movf	?_Timer1_GetCountSum+1,w
  3389  03EA  00C1               	movwf	?_printf+7
  3390  03EB  0822               	movf	?_Timer1_GetCountSum,w
  3391  03EC  00C0               	movwf	?_printf+6
  3392  03ED  3180  2058  3183   	fcall	_printf
  3393                           
  3394                           ;main.c: 49: LCD_CursorPosition(0,1);
  3395  03F0  0020               	movlb	0	; select bank0
  3396  03F1  01A5               	clrf	LCD_CursorPosition@ty
  3397  03F2  0AA5               	incf	LCD_CursorPosition@ty,f
  3398  03F3  3000               	movlw	0
  3399  03F4  318D  25AA  3183   	fcall	_LCD_CursorPosition
  3400                           
  3401                           ;main.c: 50: printf("%6lu",Timer1_GetCPS());
  3402  03F7  3082               	movlw	low (STR_2| (0+32768))
  3403  03F8  0020               	movlb	0	; select bank0
  3404  03F9  00BA               	movwf	printf@f
  3405  03FA  3083               	movlw	high (STR_2| (0+32768))
  3406  03FB  00BB               	movwf	printf@f+1
  3407  03FC  318C  24FE  3183   	fcall	_Timer1_GetCPS
  3408  03FF  0020               	movlb	0	; select bank0
  3409  0400  0825               	movf	?_Timer1_GetCPS+3,w
  3410  0401  00BF               	movwf	?_printf+5
  3411  0402  0824               	movf	?_Timer1_GetCPS+2,w
  3412  0403  00BE               	movwf	?_printf+4
  3413  0404  0823               	movf	?_Timer1_GetCPS+1,w
  3414  0405  00BD               	movwf	?_printf+3
  3415  0406  0822               	movf	?_Timer1_GetCPS,w
  3416  0407  00BC               	movwf	?_printf+2
  3417  0408  3180  2058  3183   	fcall	_printf
  3418                           
  3419                           ;main.c: 51: printf("    %2d:%2d",Timer1_GetMinute(),Timer1_GetSecond());
  3420  040B  303E               	movlw	low (STR_3| (0+32768))
  3421  040C  0020               	movlb	0	; select bank0
  3422  040D  00BA               	movwf	printf@f
  3423  040E  3082               	movlw	high (STR_3| (0+32768))
  3424  040F  00BB               	movwf	printf@f+1
  3425  0410  318C  2497  3183   	fcall	_Timer1_GetMinute
  3426  0413  0020               	movlb	0	; select bank0
  3427  0414  00D5               	movwf	??_main
  3428  0415  01D6               	clrf	??_main+1
  3429  0416  0855               	movf	??_main,w
  3430  0417  00BC               	movwf	?_printf+2
  3431  0418  0856               	movf	??_main+1,w
  3432  0419  00BD               	movwf	?_printf+3
  3433  041A  318C  249A  3183   	fcall	_Timer1_GetSecond
  3434  041D  0020               	movlb	0	; select bank0
  3435  041E  00D7               	movwf	??_main+2
  3436  041F  01D8               	clrf	??_main+3
  3437  0420  0857               	movf	??_main+2,w
  3438  0421  00BE               	movwf	?_printf+4
  3439  0422  0858               	movf	??_main+3,w
  3440  0423  00BF               	movwf	?_printf+5
  3441  0424  3180  2058  3183   	fcall	_printf
  3442                           
  3443                           ;main.c: 52: break;
  3444  0427  2BAE               	goto	l2884
  3445  0428                     l2906:	
  3446                           ;main.c: 53: case SELECTFUNC:
  3447                           
  3448                           
  3449                           ;main.c: 54: printf("SELECTFUNC");
  3450  0428  304A               	movlw	low (STR_4| (0+32768))
  3451  0429  0020               	movlb	0	; select bank0
  3452  042A  00BA               	movwf	printf@f
  3453  042B  3082               	movlw	high (STR_4| (0+32768))
  3454  042C  00BB               	movwf	printf@f+1
  3455  042D  3180  2058  3183   	fcall	_printf
  3456                           
  3457                           ;main.c: 55: break;
  3458  0430  2BAE               	goto	l2884
  3459  0431                     l2908:	
  3460                           ;main.c: 56: case ADJGAIN:
  3461                           
  3462                           
  3463                           ;main.c: 57: printf("ADJGAIN");
  3464  0431  3081               	movlw	low (STR_5| (0+32768))
  3465  0432  0020               	movlb	0	; select bank0
  3466  0433  00BA               	movwf	printf@f
  3467  0434  3082               	movlw	high (STR_5| (0+32768))
  3468  0435  00BB               	movwf	printf@f+1
  3469  0436  3180  2058  3183   	fcall	_printf
  3470                           
  3471                           ;main.c: 58: break;
  3472  0439  2BAE               	goto	l2884
  3473  043A                     l2910:	
  3474                           ;main.c: 59: case PMTDEVICE:
  3475                           
  3476                           
  3477                           ;main.c: 60: printf("PMTDEVICE");
  3478  043A  3055               	movlw	low (STR_6| (0+32768))
  3479  043B  0020               	movlb	0	; select bank0
  3480  043C  00BA               	movwf	printf@f
  3481  043D  3082               	movlw	high (STR_6| (0+32768))
  3482  043E  00BB               	movwf	printf@f+1
  3483  043F  3180  2058  3183   	fcall	_printf
  3484                           
  3485                           ;main.c: 62: }
  3486                           
  3487                           ;main.c: 61: break;
  3488  0442  2BAE               	goto	l2884
  3489  0443                     l2914:	
  3490  0443  0020               	movlb	0	; select bank0
  3491  0444  0865               	movf	_mode+1,w
  3492                           
  3493                           ; Switch size 1, requested type "space"
  3494                           ; Number of cases is 4, Range of values is 0 to 3
  3495                           ; switch strategies available:
  3496                           ; Name         Instructions Cycles
  3497                           ; simple_byte           13     7 (average)
  3498                           ; direct_byte           14     6 (fixed)
  3499                           ; jumptable            260     6 (fixed)
  3500                           ;	Chosen strategy is simple_byte
  3501  0445  3A00               	xorlw	0	; case 0
  3502  0446  1903               	skipnz
  3503  0447  2BD0               	goto	l2898
  3504  0448  3A01               	xorlw	1	; case 1
  3505  0449  1903               	skipnz
  3506  044A  2C28               	goto	l2906
  3507  044B  3A03               	xorlw	3	; case 2
  3508  044C  1903               	skipnz
  3509  044D  2C31               	goto	l2908
  3510  044E  3A01               	xorlw	1	; case 3
  3511  044F  1903               	skipnz
  3512  0450  2C3A               	goto	l2910
  3513  0451  2BAE               	goto	l2884
  3514  0452  2BAE               	goto	l2884
  3515  0453                     __end_of_main:	
  3516                           ;main.c: 63: }
  3517                           ;main.c: 65: return 0;
  3518                           ;	Return value of _main is never used
  3519                           
  3520                           
  3521                           	psect	text1
  3522  0058                     __ptext1:	
  3523 ;; *************** function _printf *****************
  3524 ;; Defined at:
  3525 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  f               2   26[BANK0 ] PTR const unsigned char 
  3528 ;;		 -> STR_6(10), STR_5(8), STR_4(11), STR_3(12), 
  3529 ;;		 -> STR_2(5), STR_1(10), 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  val             4   44[BANK0 ] unsigned long 
  3532 ;;  tmpval          4    0        struct .
  3533 ;;  width           2   50[BANK0 ] int 
  3534 ;;  prec            2   42[BANK0 ] int 
  3535 ;;  cp              2    0        PTR const unsigned char 
  3536 ;;  len             2    0        unsigned int 
  3537 ;;  c               1   52[BANK0 ] char 
  3538 ;;  flag            1   49[BANK0 ] unsigned char 
  3539 ;;  ap              1   48[BANK0 ] PTR void [1]
  3540 ;;		 -> ?_printf(2), 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  2   26[BANK0 ] int 
  3543 ;; Registers used:
  3544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3550 ;;      Params:         0      10       0       0       0       0
  3551 ;;      Locals:         0      11       0       0       0       0
  3552 ;;      Temps:          0       6       0       0       0       0
  3553 ;;      Totals:         0      27       0       0       0       0
  3554 ;;Total ram usage:       27 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:    5
  3557 ;; This function calls:
  3558 ;;		___lldiv
  3559 ;;		___llmod
  3560 ;;		___wmul
  3561 ;;		_isdigit
  3562 ;;		_putch
  3563 ;; This function is called by:
  3564 ;;		_main
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           
  3569                           ;psect for function _printf
  3570  0058                     _printf:	
  3571                           
  3572                           ;doprnt.c: 466: va_list ap;
  3573                           ;doprnt.c: 499: signed char c;
  3574                           ;doprnt.c: 501: int width;
  3575                           ;doprnt.c: 504: int prec;
  3576                           ;doprnt.c: 508: unsigned char flag;
  3577                           ;doprnt.c: 523: union {
  3578                           ;doprnt.c: 524: unsigned long vd;
  3579                           ;doprnt.c: 525: double integ;
  3580                           ;doprnt.c: 526: } tmpval;
  3581                           ;doprnt.c: 528: unsigned long val;
  3582                           ;doprnt.c: 529: unsigned len;
  3583                           ;doprnt.c: 530: const char * cp;
  3584                           ;doprnt.c: 533: *ap = __va_start();
  3585                           
  3586                           ;incstack = 0
  3587                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3588  0058  303C               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3589  0059  0020               	movlb	0	; select bank0
  3590  005A  00C4               	movwf	??_printf
  3591  005B  0844               	movf	??_printf,w
  3592  005C  00D0               	movwf	printf@ap
  3593  005D                     l2778:	
  3594                           ;doprnt.c: 536: while(c = *f++) {
  3595                           
  3596  005D  0020               	movlb	0	; select bank0
  3597  005E  083B               	movf	printf@f+1,w
  3598  005F  00C5               	movwf	??_printf+1
  3599  0060  083A               	movf	printf@f,w
  3600  0061  00C4               	movwf	??_printf
  3601  0062  0ABA               	incf	printf@f,f
  3602  0063  1903               	skipnz
  3603  0064  0ABB               	incf	printf@f+1,f
  3604  0065  0844               	movf	??_printf,w
  3605  0066  0084               	movwf	4
  3606  0067  0845               	movf	??_printf+1,w
  3607  0068  0085               	movwf	5
  3608  0069  0800               	movf	0,w	;code access
  3609  006A  00C6               	movwf	??_printf+2
  3610  006B  0846               	movf	??_printf+2,w
  3611  006C  00D4               	movwf	printf@c
  3612  006D  0854               	movf	printf@c,w
  3613  006E  1903               	btfsc	3,2
  3614  006F  0008               	return
  3615                           
  3616                           ;doprnt.c: 538: if(c != '%')
  3617  0070  3025               	movlw	37
  3618  0071  0654               	xorwf	printf@c,w
  3619  0072  1903               	btfsc	3,2
  3620  0073  2879               	goto	l2696
  3621                           
  3622                           ;doprnt.c: 540: {
  3623                           ;doprnt.c: 541: (putch(c) );
  3624  0074  0854               	movf	printf@c,w
  3625  0075  318C  24AE  3180   	fcall	_putch
  3626                           
  3627                           ;doprnt.c: 542: continue;
  3628  0078  285D               	goto	l2778
  3629  0079                     l2696:	
  3630                           
  3631                           ;doprnt.c: 543: }
  3632                           ;doprnt.c: 546: width = 0;
  3633  0079  0020               	movlb	0	; select bank0
  3634  007A  01D2               	clrf	printf@width
  3635  007B  01D3               	clrf	printf@width+1
  3636                           
  3637                           ;doprnt.c: 548: flag = 0;
  3638  007C  01D1               	clrf	printf@flag
  3639                           
  3640                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3641  007D  083A               	movf	printf@f,w
  3642  007E  0084               	movwf	4
  3643  007F  083B               	movf	printf@f+1,w
  3644  0080  0085               	movwf	5
  3645  0081  0800               	movf	0,w	;code access
  3646  0082  318D  250C  3180   	fcall	_isdigit
  3647  0085  1C03               	btfss	3,0
  3648  0086  28BD               	goto	l2712
  3649                           
  3650                           ;doprnt.c: 598: width = 0;
  3651  0087  0020               	movlb	0	; select bank0
  3652  0088  01D2               	clrf	printf@width
  3653  0089  01D3               	clrf	printf@width+1
  3654  008A                     l2702:	
  3655                           ;doprnt.c: 599: do {
  3656                           
  3657                           
  3658                           ;doprnt.c: 600: width *= 10;
  3659  008A  300A               	movlw	10
  3660  008B  0020               	movlb	0	; select bank0
  3661  008C  00A2               	movwf	___wmul@multiplier
  3662  008D  3000               	movlw	0
  3663  008E  00A3               	movwf	___wmul@multiplier+1
  3664  008F  0853               	movf	printf@width+1,w
  3665  0090  00A5               	movwf	___wmul@multiplicand+1
  3666  0091  0852               	movf	printf@width,w
  3667  0092  00A4               	movwf	___wmul@multiplicand
  3668  0093  318E  2611  3180   	fcall	___wmul
  3669  0096  0020               	movlb	0	; select bank0
  3670  0097  0823               	movf	?___wmul+1,w
  3671  0098  00D3               	movwf	printf@width+1
  3672  0099  0822               	movf	?___wmul,w
  3673  009A  00D2               	movwf	printf@width
  3674                           
  3675                           ;doprnt.c: 601: width += *f++ - '0';
  3676  009B  083A               	movf	printf@f,w
  3677  009C  0084               	movwf	4
  3678  009D  083B               	movf	printf@f+1,w
  3679  009E  0085               	movwf	5
  3680  009F  0800               	movf	0,w	;code access
  3681  00A0  3ED0               	addlw	208
  3682  00A1  00C4               	movwf	??_printf
  3683  00A2  30FF               	movlw	255
  3684  00A3  1803               	skipnc
  3685  00A4  3000               	movlw	0
  3686  00A5  00C5               	movwf	??_printf+1
  3687  00A6  0844               	movf	??_printf,w
  3688  00A7  07D2               	addwf	printf@width,f
  3689  00A8  0845               	movf	??_printf+1,w
  3690  00A9  3DD3               	addwfc	printf@width+1,f
  3691  00AA  3001               	movlw	1
  3692  00AB  07BA               	addwf	printf@f,f
  3693  00AC  3000               	movlw	0
  3694  00AD  3DBB               	addwfc	printf@f+1,f
  3695                           
  3696                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3697  00AE  083A               	movf	printf@f,w
  3698  00AF  0084               	movwf	4
  3699  00B0  083B               	movf	printf@f+1,w
  3700  00B1  0085               	movwf	5
  3701  00B2  0800               	movf	0,w	;code access
  3702  00B3  318D  250C  3180   	fcall	_isdigit
  3703  00B6  1C03               	btfss	3,0
  3704  00B7  28BD               	goto	l2712
  3705  00B8  288A               	goto	l2702
  3706  00B9                     l573:	
  3707                           ;doprnt.c: 641: case 'l':
  3708                           
  3709                           ;doprnt.c: 638: goto alldone;
  3710                           
  3711                           ;doprnt.c: 637: case 0:
  3712                           
  3713                           ;doprnt.c: 635: switch(c = *f++) {
  3714                           
  3715                           ;doprnt.c: 608: }
  3716                           ;doprnt.c: 633: loop:
  3717                           
  3718                           
  3719                           ;doprnt.c: 643: flag |= 0x10;
  3720  00B9  1651               	bsf	printf@flag,4
  3721                           
  3722                           ;doprnt.c: 644: goto loop;
  3723  00BA  28BD               	goto	l2712
  3724  00BB                     l578:	
  3725                           ;doprnt.c: 817: case 'u':
  3726                           
  3727                           ;doprnt.c: 813: continue;
  3728                           
  3729                           ;doprnt.c: 802: default:
  3730                           
  3731                           ;doprnt.c: 698: case 'i':
  3732                           ;doprnt.c: 699: break;
  3733                           
  3734                           ;doprnt.c: 697: case 'd':
  3735                           
  3736                           
  3737                           ;doprnt.c: 818: flag |= 0x40;
  3738  00BB  1751               	bsf	printf@flag,6
  3739                           
  3740                           ;doprnt.c: 822: }
  3741                           
  3742                           ;doprnt.c: 819: break;
  3743  00BC  28DB               	goto	l576
  3744  00BD                     l2712:	
  3745  00BD  0020               	movlb	0	; select bank0
  3746  00BE  083B               	movf	printf@f+1,w
  3747  00BF  00C5               	movwf	??_printf+1
  3748  00C0  083A               	movf	printf@f,w
  3749  00C1  00C4               	movwf	??_printf
  3750  00C2  0ABA               	incf	printf@f,f
  3751  00C3  1903               	skipnz
  3752  00C4  0ABB               	incf	printf@f+1,f
  3753  00C5  0844               	movf	??_printf,w
  3754  00C6  0084               	movwf	4
  3755  00C7  0845               	movf	??_printf+1,w
  3756  00C8  0085               	movwf	5
  3757  00C9  0800               	movf	0,w	;code access
  3758  00CA  00D4               	movwf	printf@c
  3759                           
  3760                           ; Switch size 1, requested type "space"
  3761                           ; Number of cases is 5, Range of values is 0 to 117
  3762                           ; switch strategies available:
  3763                           ; Name         Instructions Cycles
  3764                           ; simple_byte           16     9 (average)
  3765                           ; direct_byte          242     6 (fixed)
  3766                           ; jumptable            260     6 (fixed)
  3767                           ;	Chosen strategy is simple_byte
  3768  00CB  3A00               	xorlw	0	; case 0
  3769  00CC  1903               	skipnz
  3770  00CD  29F7               	goto	l600
  3771  00CE  3A64               	xorlw	100	; case 100
  3772  00CF  1903               	skipnz
  3773  00D0  28DB               	goto	l576
  3774  00D1  3A0D               	xorlw	13	; case 105
  3775  00D2  1903               	skipnz
  3776  00D3  28DB               	goto	l576
  3777  00D4  3A05               	xorlw	5	; case 108
  3778  00D5  1903               	skipnz
  3779  00D6  28B9               	goto	l573
  3780  00D7  3A19               	xorlw	25	; case 117
  3781  00D8  1903               	skipnz
  3782  00D9  28BB               	goto	l578
  3783  00DA  285D               	goto	l2778
  3784  00DB                     l576:	
  3785                           
  3786                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  3787  00DB  1B51               	btfsc	printf@flag,6
  3788  00DC  2912               	goto	l579
  3789                           
  3790                           ;doprnt.c: 1253: {
  3791                           ;doprnt.c: 1255: if(flag & 0x10)
  3792  00DD  1E51               	btfss	printf@flag,4
  3793  00DE  28EC               	goto	l2720
  3794                           
  3795                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  3796  00DF  0850               	movf	printf@ap,w
  3797  00E0  0086               	movwf	6
  3798  00E1  0187               	clrf	7
  3799  00E2  3F40               	moviw [0]fsr1
  3800  00E3  00CC               	movwf	printf@val
  3801  00E4  3F41               	moviw [1]fsr1
  3802  00E5  00CD               	movwf	printf@val+1
  3803  00E6  3F42               	moviw [2]fsr1
  3804  00E7  00CE               	movwf	printf@val+2
  3805  00E8  3F43               	moviw [3]fsr1
  3806  00E9  00CF               	movwf	printf@val+3
  3807  00EA  3004               	movlw	4
  3808  00EB  28FD               	goto	L1
  3809  00EC                     l2720:	
  3810                           
  3811                           ;doprnt.c: 1257: else
  3812                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3813  00EC  0850               	movf	printf@ap,w
  3814  00ED  0086               	movwf	6
  3815  00EE  0187               	clrf	7
  3816  00EF  3F40               	moviw [0]fsr1
  3817  00F0  00C4               	movwf	??_printf
  3818  00F1  3F41               	moviw [1]fsr1
  3819  00F2  00C5               	movwf	??_printf+1
  3820  00F3  0844               	movf	??_printf,w
  3821  00F4  00CC               	movwf	printf@val
  3822  00F5  0845               	movf	??_printf+1,w
  3823  00F6  00CD               	movwf	printf@val+1
  3824  00F7  0D89               	rlf	9,f
  3825  00F8  3B89               	subwfb	9,f
  3826  00F9  0989               	comf	9,f
  3827  00FA  00CE               	movwf	printf@val+2
  3828  00FB  00CF               	movwf	printf@val+3
  3829  00FC  3002               	movlw	2
  3830  00FD                     L1:	
  3831  00FD  00C4               	movwf	??_printf
  3832  00FE  0844               	movf	??_printf,w
  3833  00FF  07D0               	addwf	printf@ap,f
  3834                           
  3835                           ;doprnt.c: 1261: if((long)val < 0) {
  3836  0100  1FCF               	btfss	printf@val+3,7
  3837  0101  2932               	goto	l2738
  3838                           
  3839                           ;doprnt.c: 1262: flag |= 0x03;
  3840  0102  3003               	movlw	3
  3841  0103  00C4               	movwf	??_printf
  3842  0104  0844               	movf	??_printf,w
  3843  0105  04D1               	iorwf	printf@flag,f
  3844                           
  3845                           ;doprnt.c: 1263: val = -val;
  3846  0106  09CC               	comf	printf@val,f
  3847  0107  09CD               	comf	printf@val+1,f
  3848  0108  09CE               	comf	printf@val+2,f
  3849  0109  09CF               	comf	printf@val+3,f
  3850  010A  0ACC               	incf	printf@val,f
  3851  010B  1903               	skipnz
  3852  010C  0ACD               	incf	printf@val+1,f
  3853  010D  1903               	skipnz
  3854  010E  0ACE               	incf	printf@val+2,f
  3855  010F  1903               	skipnz
  3856  0110  0ACF               	incf	printf@val+3,f
  3857                           
  3858                           ;doprnt.c: 1264: }
  3859                           ;doprnt.c: 1266: }
  3860  0111  2932               	goto	l2738
  3861  0112                     l579:	
  3862                           
  3863                           ;doprnt.c: 1268: else
  3864                           ;doprnt.c: 1273: {
  3865                           ;doprnt.c: 1281: if(flag & 0x10)
  3866  0112  1E51               	btfss	printf@flag,4
  3867  0113  2921               	goto	l2734
  3868                           
  3869                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3870  0114  0850               	movf	printf@ap,w
  3871  0115  0086               	movwf	6
  3872  0116  0187               	clrf	7
  3873  0117  3F40               	moviw [0]fsr1
  3874  0118  00CC               	movwf	printf@val
  3875  0119  3F41               	moviw [1]fsr1
  3876  011A  00CD               	movwf	printf@val+1
  3877  011B  3F42               	moviw [2]fsr1
  3878  011C  00CE               	movwf	printf@val+2
  3879  011D  3F43               	moviw [3]fsr1
  3880  011E  00CF               	movwf	printf@val+3
  3881  011F  3004               	movlw	4
  3882  0120  292F               	goto	L2
  3883  0121                     l2734:	
  3884                           
  3885                           ;doprnt.c: 1283: else
  3886                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3887  0121  0850               	movf	printf@ap,w
  3888  0122  0086               	movwf	6
  3889  0123  0187               	clrf	7
  3890  0124  3F40               	moviw [0]fsr1
  3891  0125  00C4               	movwf	??_printf
  3892  0126  3F41               	moviw [1]fsr1
  3893  0127  00C5               	movwf	??_printf+1
  3894  0128  0844               	movf	??_printf,w
  3895  0129  00CC               	movwf	printf@val
  3896  012A  0845               	movf	??_printf+1,w
  3897  012B  00CD               	movwf	printf@val+1
  3898  012C  01CE               	clrf	printf@val+2
  3899  012D  01CF               	clrf	printf@val+3
  3900  012E  3002               	movlw	2
  3901  012F                     L2:	
  3902  012F  00C4               	movwf	??_printf
  3903  0130  0844               	movf	??_printf,w
  3904  0131  07D0               	addwf	printf@ap,f
  3905  0132                     l2738:	
  3906                           
  3907                           ;doprnt.c: 1287: }
  3908                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3909  0132  01D4               	clrf	printf@c
  3910  0133  0AD4               	incf	printf@c,f
  3911  0134  300A               	movlw	10
  3912  0135  0654               	xorwf	printf@c,w
  3913  0136  1903               	btfsc	3,2
  3914  0137  2965               	goto	l2750
  3915  0138                     l2744:	
  3916                           
  3917                           ;doprnt.c: 1306: if(val < dpowers[c])
  3918  0138  0854               	movf	printf@c,w
  3919  0139  00C4               	movwf	??_printf
  3920  013A  01C5               	clrf	??_printf+1
  3921  013B  35C4               	lslf	??_printf,f
  3922  013C  0DC5               	rlf	??_printf+1,f
  3923  013D  35C4               	lslf	??_printf,f
  3924  013E  0DC5               	rlf	??_printf+1,f
  3925  013F  30F8               	movlw	low (_dpowers| (0+32768))
  3926  0140  0744               	addwf	??_printf,w
  3927  0141  0084               	movwf	4
  3928  0142  3081               	movlw	high (_dpowers| (0+32768))
  3929  0143  3D45               	addwfc	??_printf+1,w
  3930  0144  0085               	movwf	5
  3931  0145  3F00               	moviw [0]fsr0
  3932  0146  00C6               	movwf	??_printf+2
  3933  0147  3F01               	moviw [1]fsr0
  3934  0148  00C7               	movwf	??_printf+3
  3935  0149  3F02               	moviw [2]fsr0
  3936  014A  00C8               	movwf	??_printf+4
  3937  014B  3F03               	moviw [3]fsr0
  3938  014C  00C9               	movwf	??_printf+5
  3939  014D  0849               	movf	??_printf+5,w
  3940  014E  024F               	subwf	printf@val+3,w
  3941  014F  1D03               	skipz
  3942  0150  295B               	goto	u2115
  3943  0151  0848               	movf	??_printf+4,w
  3944  0152  024E               	subwf	printf@val+2,w
  3945  0153  1D03               	skipz
  3946  0154  295B               	goto	u2115
  3947  0155  0847               	movf	??_printf+3,w
  3948  0156  024D               	subwf	printf@val+1,w
  3949  0157  1D03               	skipz
  3950  0158  295B               	goto	u2115
  3951  0159  0846               	movf	??_printf+2,w
  3952  015A  024C               	subwf	printf@val,w
  3953  015B                     u2115:	
  3954  015B  1C03               	btfss	3,0
  3955  015C  2965               	goto	l2750
  3956                           
  3957                           ;doprnt.c: 1307: break;
  3958  015D  3001               	movlw	1
  3959  015E  00C4               	movwf	??_printf
  3960  015F  0844               	movf	??_printf,w
  3961  0160  07D4               	addwf	printf@c,f
  3962  0161  300A               	movlw	10
  3963  0162  0654               	xorwf	printf@c,w
  3964  0163  1D03               	btfss	3,2
  3965  0164  2938               	goto	l2744
  3966  0165                     l2750:	
  3967                           
  3968                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3969  0165  0852               	movf	printf@width,w
  3970  0166  0453               	iorwf	printf@width+1,w
  3971  0167  1903               	btfsc	3,2
  3972  0168  2971               	goto	l589
  3973  0169  0851               	movf	printf@flag,w
  3974  016A  3903               	andlw	3
  3975  016B  1903               	btfsc	3,2
  3976  016C  2971               	goto	l589
  3977                           
  3978                           ;doprnt.c: 1346: width--;
  3979  016D  30FF               	movlw	255
  3980  016E  07D2               	addwf	printf@width,f
  3981  016F  30FF               	movlw	255
  3982  0170  3DD3               	addwfc	printf@width+1,f
  3983  0171                     l589:	
  3984                           
  3985                           ;doprnt.c: 1381: if(width > c)
  3986  0171  0854               	movf	printf@c,w
  3987  0172  00C4               	movwf	??_printf
  3988  0173  01C5               	clrf	??_printf+1
  3989  0174  1BC4               	btfsc	??_printf,7
  3990  0175  03C5               	decf	??_printf+1,f
  3991  0176  0845               	movf	??_printf+1,w
  3992  0177  3A80               	xorlw	128
  3993  0178  00C6               	movwf	??_printf+2
  3994  0179  0853               	movf	printf@width+1,w
  3995  017A  3A80               	xorlw	128
  3996  017B  0246               	subwf	??_printf+2,w
  3997  017C  1D03               	skipz
  3998  017D  2980               	goto	u2155
  3999  017E  0852               	movf	printf@width,w
  4000  017F  0244               	subwf	??_printf,w
  4001  0180                     u2155:	
  4002  0180  1803               	skipnc
  4003  0181  298D               	goto	l2758
  4004                           
  4005                           ;doprnt.c: 1382: width -= c;
  4006  0182  0020               	movlb	0	; select bank0
  4007  0183  0854               	movf	printf@c,w
  4008  0184  00C4               	movwf	??_printf
  4009  0185  01C5               	clrf	??_printf+1
  4010  0186  1BC4               	btfsc	??_printf,7
  4011  0187  03C5               	decf	??_printf+1,f
  4012  0188  0844               	movf	??_printf,w
  4013  0189  02D2               	subwf	printf@width,f
  4014  018A  0845               	movf	??_printf+1,w
  4015  018B  3BD3               	subwfb	printf@width+1,f
  4016  018C  2990               	goto	l2760
  4017  018D                     l2758:	
  4018                           
  4019                           ;doprnt.c: 1383: else
  4020                           ;doprnt.c: 1384: width = 0;
  4021  018D  0020               	movlb	0	; select bank0
  4022  018E  01D2               	clrf	printf@width
  4023  018F  01D3               	clrf	printf@width+1
  4024  0190                     l2760:	
  4025                           
  4026                           ;doprnt.c: 1422: {
  4027                           ;doprnt.c: 1424: if(width
  4028                           ;doprnt.c: 1428: )
  4029  0190  0852               	movf	printf@width,w
  4030  0191  0453               	iorwf	printf@width+1,w
  4031  0192  1903               	btfsc	3,2
  4032  0193  29A1               	goto	l2766
  4033  0194                     l2762:	
  4034                           ;doprnt.c: 1429: do
  4035                           
  4036                           
  4037                           ;doprnt.c: 1430: (putch(' ') );
  4038  0194  3020               	movlw	32
  4039  0195  318C  24AE  3180   	fcall	_putch
  4040                           
  4041                           ;doprnt.c: 1431: while(--width);
  4042  0198  30FF               	movlw	255
  4043  0199  0020               	movlb	0	; select bank0
  4044  019A  07D2               	addwf	printf@width,f
  4045  019B  30FF               	movlw	255
  4046  019C  3DD3               	addwfc	printf@width+1,f
  4047  019D  0852               	movf	printf@width,w
  4048  019E  0453               	iorwf	printf@width+1,w
  4049  019F  1D03               	btfss	3,2
  4050  01A0  2994               	goto	l2762
  4051  01A1                     l2766:	
  4052                           
  4053                           ;doprnt.c: 1438: if(flag & 0x03)
  4054  01A1  0851               	movf	printf@flag,w
  4055  01A2  3903               	andlw	3
  4056  01A3  1903               	btfsc	3,2
  4057  01A4  29A9               	goto	l2770
  4058                           
  4059                           ;doprnt.c: 1439: (putch('-') );
  4060  01A5  302D               	movlw	45
  4061  01A6  318C  24AE  3180   	fcall	_putch
  4062  01A9                     l2770:	
  4063                           
  4064                           ;doprnt.c: 1469: }
  4065                           ;doprnt.c: 1472: prec = c;
  4066  01A9  0020               	movlb	0	; select bank0
  4067  01AA  0854               	movf	printf@c,w
  4068  01AB  00CA               	movwf	printf@prec
  4069  01AC  01CB               	clrf	printf@prec+1
  4070  01AD  1BCA               	btfsc	printf@prec,7
  4071  01AE  03CB               	decf	printf@prec+1,f
  4072  01AF                     l2776:	
  4073                           ;doprnt.c: 1474: while(prec--) {
  4074                           
  4075  01AF  30FF               	movlw	255
  4076  01B0  0020               	movlb	0	; select bank0
  4077  01B1  07CA               	addwf	printf@prec,f
  4078  01B2  30FF               	movlw	255
  4079  01B3  3DCB               	addwfc	printf@prec+1,f
  4080  01B4  0A4A               	incf	printf@prec,w
  4081  01B5  1903               	btfsc	3,2
  4082  01B6  0A4B               	incf	printf@prec+1,w
  4083  01B7  1903               	btfsc	3,2
  4084  01B8  285D               	goto	l2778
  4085                           
  4086                           ;doprnt.c: 1478: {
  4087                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4088  01B9  3000               	movlw	0
  4089  01BA  00B3               	movwf	___llmod@divisor+3
  4090  01BB  3000               	movlw	0
  4091  01BC  00B2               	movwf	___llmod@divisor+2
  4092  01BD  3000               	movlw	0
  4093  01BE  00B1               	movwf	___llmod@divisor+1
  4094  01BF  300A               	movlw	10
  4095  01C0  00B0               	movwf	___llmod@divisor
  4096  01C1  084B               	movf	printf@prec+1,w
  4097  01C2  0085               	movwf	5
  4098  01C3  084A               	movf	printf@prec,w
  4099  01C4  0084               	movwf	4
  4100  01C5  3584               	lslf	4,f
  4101  01C6  0D85               	rlf	5,f
  4102  01C7  3584               	lslf	4,f
  4103  01C8  0D85               	rlf	5,f
  4104  01C9  30F8               	movlw	low (_dpowers| (0+32768))
  4105  01CA  0784               	addwf	4,f
  4106  01CB  3081               	movlw	high (_dpowers| (0+32768))
  4107  01CC  3D85               	addwfc	5,f
  4108  01CD  3F00               	moviw [0]fsr0
  4109  01CE  00A2               	movwf	___lldiv@divisor
  4110  01CF  3F01               	moviw [1]fsr0
  4111  01D0  00A3               	movwf	___lldiv@divisor+1
  4112  01D1  3F02               	moviw [2]fsr0
  4113  01D2  00A4               	movwf	___lldiv@divisor+2
  4114  01D3  3F03               	moviw [3]fsr0
  4115  01D4  00A5               	movwf	___lldiv@divisor+3
  4116  01D5  084F               	movf	printf@val+3,w
  4117  01D6  00A9               	movwf	___lldiv@dividend+3
  4118  01D7  084E               	movf	printf@val+2,w
  4119  01D8  00A8               	movwf	___lldiv@dividend+2
  4120  01D9  084D               	movf	printf@val+1,w
  4121  01DA  00A7               	movwf	___lldiv@dividend+1
  4122  01DB  084C               	movf	printf@val,w
  4123  01DC  00A6               	movwf	___lldiv@dividend
  4124  01DD  3186  26A2  3180   	fcall	___lldiv
  4125  01E0  0020               	movlb	0	; select bank0
  4126  01E1  0825               	movf	?___lldiv+3,w
  4127  01E2  00B7               	movwf	___llmod@dividend+3
  4128  01E3  0824               	movf	?___lldiv+2,w
  4129  01E4  00B6               	movwf	___llmod@dividend+2
  4130  01E5  0823               	movf	?___lldiv+1,w
  4131  01E6  00B5               	movwf	___llmod@dividend+1
  4132  01E7  0822               	movf	?___lldiv,w
  4133  01E8  00B4               	movwf	___llmod@dividend
  4134  01E9  318F  27BD  3180   	fcall	___llmod
  4135  01EC  0020               	movlb	0	; select bank0
  4136  01ED  0830               	movf	?___llmod,w
  4137  01EE  3E30               	addlw	48
  4138  01EF  00C4               	movwf	??_printf
  4139  01F0  0844               	movf	??_printf,w
  4140  01F1  00D4               	movwf	printf@c
  4141                           
  4142                           ;doprnt.c: 1523: }
  4143                           ;doprnt.c: 1524: (putch(c) );
  4144  01F2  0854               	movf	printf@c,w
  4145  01F3  318C  24AE  3180   	fcall	_putch
  4146  01F6  29AF               	goto	l2776
  4147  01F7                     l600:	
  4148                           ;doprnt.c: 1540: return 0;
  4149                           ;	Return value of _printf is never used
  4150                           
  4151                           ;doprnt.c: 1525: }
  4152                           ;doprnt.c: 1533: }
  4153                           ;doprnt.c: 1535: alldone:
  4154                           
  4155  01F7  0008               	return
  4156  01F8                     __end_of_printf:	
  4157                           
  4158                           	psect	text2
  4159  0CAE                     __ptext2:	
  4160 ;; *************** function _putch *****************
  4161 ;; Defined at:
  4162 ;;		line 64 in file "LCD.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  c               1    wreg     unsigned char 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  c               1    5[BANK0 ] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, status,2, status,0, pclath, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4176 ;;      Params:         0       0       0       0       0       0
  4177 ;;      Locals:         0       1       0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0
  4179 ;;      Totals:         0       1       0       0       0       0
  4180 ;;Total ram usage:        1 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    4
  4183 ;; This function calls:
  4184 ;;		_LCD_WriteData
  4185 ;; This function is called by:
  4186 ;;		_printf
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           
  4191                           ;psect for function _putch
  4192  0CAE                     _putch:	
  4193                           
  4194                           ;incstack = 0
  4195                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4196                           ;putch@c stored from wreg
  4197  0CAE  0020               	movlb	0	; select bank0
  4198  0CAF  00A5               	movwf	putch@c
  4199                           
  4200                           ;LCD.c: 66: LATA3 = 1;
  4201  0CB0  0022               	movlb	2	; select bank2
  4202  0CB1  158C               	bsf	12,3	;volatile
  4203                           
  4204                           ;LCD.c: 67: LCD_WriteData(c);
  4205  0CB2  0020               	movlb	0	; select bank0
  4206  0CB3  0825               	movf	putch@c,w
  4207  0CB4  318F  2780         	fcall	_LCD_WriteData
  4208  0CB6  0008               	return
  4209  0CB7                     __end_of_putch:	
  4210                           
  4211                           	psect	text3
  4212  0D0C                     __ptext3:	
  4213 ;; *************** function _isdigit *****************
  4214 ;; Defined at:
  4215 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/isdigit.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  c               1    wreg     unsigned char 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  c               1    3[BANK0 ] unsigned char 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;		None               void
  4222 ;; Registers used:
  4223 ;;		wreg, status,2, status,0
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4229 ;;      Params:         0       0       0       0       0       0
  4230 ;;      Locals:         0       2       0       0       0       0
  4231 ;;      Temps:          0       0       0       0       0       0
  4232 ;;      Totals:         0       2       0       0       0       0
  4233 ;;Total ram usage:        2 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    3
  4236 ;; This function calls:
  4237 ;;		Nothing
  4238 ;; This function is called by:
  4239 ;;		_printf
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           
  4244                           ;psect for function _isdigit
  4245  0D0C                     _isdigit:	
  4246                           
  4247                           ;incstack = 0
  4248                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4249                           ;isdigit@c stored from wreg
  4250  0D0C  0020               	movlb	0	; select bank0
  4251  0D0D  00A3               	movwf	isdigit@c
  4252  0D0E  01A2               	clrf	_isdigit$819
  4253  0D0F  303A               	movlw	58
  4254  0D10  0223               	subwf	isdigit@c,w
  4255  0D11  1803               	skipnc
  4256  0D12  2D19               	goto	l2270
  4257  0D13  3030               	movlw	48
  4258  0D14  0223               	subwf	isdigit@c,w
  4259  0D15  1C03               	skipc
  4260  0D16  2D19               	goto	l2270
  4261  0D17  01A2               	clrf	_isdigit$819
  4262  0D18  0AA2               	incf	_isdigit$819,f
  4263  0D19                     l2270:	
  4264  0D19  0C22               	rrf	_isdigit$819,w
  4265  0D1A  0008               	return
  4266  0D1B                     __end_of_isdigit:	
  4267                           
  4268                           	psect	text4
  4269  0E11                     __ptext4:	
  4270 ;; *************** function ___wmul *****************
  4271 ;; Defined at:
  4272 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  multiplier      2    2[BANK0 ] unsigned int 
  4275 ;;  multiplicand    2    4[BANK0 ] unsigned int 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  product         2    6[BANK0 ] unsigned int 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  2    2[BANK0 ] unsigned int 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4287 ;;      Params:         0       4       0       0       0       0
  4288 ;;      Locals:         0       2       0       0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0
  4290 ;;      Totals:         0       6       0       0       0       0
  4291 ;;Total ram usage:        6 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    3
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_printf
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           
  4302                           ;psect for function ___wmul
  4303  0E11                     ___wmul:	
  4304                           
  4305                           ;incstack = 0
  4306                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4307  0E11  0020               	movlb	0	; select bank0
  4308  0E12  01A6               	clrf	___wmul@product
  4309  0E13  01A7               	clrf	___wmul@product+1
  4310  0E14                     l2276:	
  4311  0E14  1C22               	btfss	___wmul@multiplier,0
  4312  0E15  2E1A               	goto	l725
  4313  0E16  0824               	movf	___wmul@multiplicand,w
  4314  0E17  07A6               	addwf	___wmul@product,f
  4315  0E18  0825               	movf	___wmul@multiplicand+1,w
  4316  0E19  3DA7               	addwfc	___wmul@product+1,f
  4317  0E1A                     l725:	
  4318  0E1A  3001               	movlw	1
  4319  0E1B                     u1595:	
  4320  0E1B  35A4               	lslf	___wmul@multiplicand,f
  4321  0E1C  0DA5               	rlf	___wmul@multiplicand+1,f
  4322  0E1D  0B89               	decfsz	9,f
  4323  0E1E  2E1B               	goto	u1595
  4324  0E1F  3001               	movlw	1
  4325  0E20                     u1605:	
  4326  0E20  36A3               	lsrf	___wmul@multiplier+1,f
  4327  0E21  0CA2               	rrf	___wmul@multiplier,f
  4328  0E22  0B89               	decfsz	9,f
  4329  0E23  2E20               	goto	u1605
  4330  0E24  0822               	movf	___wmul@multiplier,w
  4331  0E25  0423               	iorwf	___wmul@multiplier+1,w
  4332  0E26  1D03               	btfss	3,2
  4333  0E27  2E14               	goto	l2276
  4334  0E28  0827               	movf	___wmul@product+1,w
  4335  0E29  00A3               	movwf	?___wmul+1
  4336  0E2A  0826               	movf	___wmul@product,w
  4337  0E2B  00A2               	movwf	?___wmul
  4338  0E2C  0008               	return
  4339  0E2D                     __end_of___wmul:	
  4340                           
  4341                           	psect	text5
  4342  0FBD                     __ptext5:	
  4343 ;; *************** function ___llmod *****************
  4344 ;; Defined at:
  4345 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  divisor         4   16[BANK0 ] unsigned long 
  4348 ;;  dividend        4   20[BANK0 ] unsigned long 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  counter         1   25[BANK0 ] unsigned char 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  4   16[BANK0 ] unsigned long 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4360 ;;      Params:         0       8       0       0       0       0
  4361 ;;      Locals:         0       1       0       0       0       0
  4362 ;;      Temps:          0       1       0       0       0       0
  4363 ;;      Totals:         0      10       0       0       0       0
  4364 ;;Total ram usage:       10 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; Hardware stack levels required when called:    3
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_printf
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           
  4375                           ;psect for function ___llmod
  4376  0FBD                     ___llmod:	
  4377                           
  4378                           ;incstack = 0
  4379                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4380  0FBD  0020               	movlb	0	; select bank0
  4381  0FBE  0833               	movf	___llmod@divisor+3,w
  4382  0FBF  0432               	iorwf	___llmod@divisor+2,w
  4383  0FC0  0431               	iorwf	___llmod@divisor+1,w
  4384  0FC1  0430               	iorwf	___llmod@divisor,w
  4385  0FC2  1903               	skipnz
  4386  0FC3  2FF7               	goto	l2342
  4387  0FC4  01B9               	clrf	___llmod@counter
  4388  0FC5  0AB9               	incf	___llmod@counter,f
  4389  0FC6                     l2332:	
  4390  0FC6  1BB3               	btfsc	___llmod@divisor+3,7
  4391  0FC7  2FD4               	goto	l2334
  4392  0FC8  3001               	movlw	1
  4393  0FC9                     u1745:	
  4394  0FC9  35B0               	lslf	___llmod@divisor,f
  4395  0FCA  0DB1               	rlf	___llmod@divisor+1,f
  4396  0FCB  0DB2               	rlf	___llmod@divisor+2,f
  4397  0FCC  0DB3               	rlf	___llmod@divisor+3,f
  4398  0FCD  0B89               	decfsz	9,f
  4399  0FCE  2FC9               	goto	u1745
  4400  0FCF  3001               	movlw	1
  4401  0FD0  00B8               	movwf	??___llmod
  4402  0FD1  0838               	movf	??___llmod,w
  4403  0FD2  07B9               	addwf	___llmod@counter,f
  4404  0FD3  2FC6               	goto	l2332
  4405  0FD4                     l2334:	
  4406  0FD4  0833               	movf	___llmod@divisor+3,w
  4407  0FD5  0237               	subwf	___llmod@dividend+3,w
  4408  0FD6  1D03               	skipz
  4409  0FD7  2FE2               	goto	u1765
  4410  0FD8  0832               	movf	___llmod@divisor+2,w
  4411  0FD9  0236               	subwf	___llmod@dividend+2,w
  4412  0FDA  1D03               	skipz
  4413  0FDB  2FE2               	goto	u1765
  4414  0FDC  0831               	movf	___llmod@divisor+1,w
  4415  0FDD  0235               	subwf	___llmod@dividend+1,w
  4416  0FDE  1D03               	skipz
  4417  0FDF  2FE2               	goto	u1765
  4418  0FE0  0830               	movf	___llmod@divisor,w
  4419  0FE1  0234               	subwf	___llmod@dividend,w
  4420  0FE2                     u1765:	
  4421  0FE2  1C03               	skipc
  4422  0FE3  2FEC               	goto	l2338
  4423  0FE4  0830               	movf	___llmod@divisor,w
  4424  0FE5  02B4               	subwf	___llmod@dividend,f
  4425  0FE6  0831               	movf	___llmod@divisor+1,w
  4426  0FE7  3BB5               	subwfb	___llmod@dividend+1,f
  4427  0FE8  0832               	movf	___llmod@divisor+2,w
  4428  0FE9  3BB6               	subwfb	___llmod@dividend+2,f
  4429  0FEA  0833               	movf	___llmod@divisor+3,w
  4430  0FEB  3BB7               	subwfb	___llmod@dividend+3,f
  4431  0FEC                     l2338:	
  4432  0FEC  3001               	movlw	1
  4433  0FED                     u1775:	
  4434  0FED  36B3               	lsrf	___llmod@divisor+3,f
  4435  0FEE  0CB2               	rrf	___llmod@divisor+2,f
  4436  0FEF  0CB1               	rrf	___llmod@divisor+1,f
  4437  0FF0  0CB0               	rrf	___llmod@divisor,f
  4438  0FF1  0B89               	decfsz	9,f
  4439  0FF2  2FED               	goto	u1775
  4440  0FF3  3001               	movlw	1
  4441  0FF4  02B9               	subwf	___llmod@counter,f
  4442  0FF5  1D03               	btfss	3,2
  4443  0FF6  2FD4               	goto	l2334
  4444  0FF7                     l2342:	
  4445  0FF7  0837               	movf	___llmod@dividend+3,w
  4446  0FF8  00B3               	movwf	?___llmod+3
  4447  0FF9  0836               	movf	___llmod@dividend+2,w
  4448  0FFA  00B2               	movwf	?___llmod+2
  4449  0FFB  0835               	movf	___llmod@dividend+1,w
  4450  0FFC  00B1               	movwf	?___llmod+1
  4451  0FFD  0834               	movf	___llmod@dividend,w
  4452  0FFE  00B0               	movwf	?___llmod
  4453  0FFF  0008               	return
  4454  1000                     __end_of___llmod:	
  4455                           
  4456                           	psect	text6
  4457  06A2                     __ptext6:	
  4458 ;; *************** function ___lldiv *****************
  4459 ;; Defined at:
  4460 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  divisor         4    2[BANK0 ] unsigned long 
  4463 ;;  dividend        4    6[BANK0 ] unsigned long 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  quotient        4   11[BANK0 ] unsigned long 
  4466 ;;  counter         1   15[BANK0 ] unsigned char 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  4    2[BANK0 ] unsigned long 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4476 ;;      Params:         0       8       0       0       0       0
  4477 ;;      Locals:         0       5       0       0       0       0
  4478 ;;      Temps:          0       1       0       0       0       0
  4479 ;;      Totals:         0      14       0       0       0       0
  4480 ;;Total ram usage:       14 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    3
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_printf
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           
  4491                           ;psect for function ___lldiv
  4492  06A2                     ___lldiv:	
  4493                           
  4494                           ;incstack = 0
  4495                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4496  06A2  3000               	movlw	0
  4497  06A3  0020               	movlb	0	; select bank0
  4498  06A4  00AE               	movwf	___lldiv@quotient+3
  4499  06A5  3000               	movlw	0
  4500  06A6  00AD               	movwf	___lldiv@quotient+2
  4501  06A7  3000               	movlw	0
  4502  06A8  00AC               	movwf	___lldiv@quotient+1
  4503  06A9  3000               	movlw	0
  4504  06AA  00AB               	movwf	___lldiv@quotient
  4505  06AB  0825               	movf	___lldiv@divisor+3,w
  4506  06AC  0424               	iorwf	___lldiv@divisor+2,w
  4507  06AD  0423               	iorwf	___lldiv@divisor+1,w
  4508  06AE  0422               	iorwf	___lldiv@divisor,w
  4509  06AF  1903               	skipnz
  4510  06B0  2EEC               	goto	l2322
  4511  06B1  01AF               	clrf	___lldiv@counter
  4512  06B2  0AAF               	incf	___lldiv@counter,f
  4513  06B3                     l2308:	
  4514  06B3  1BA5               	btfsc	___lldiv@divisor+3,7
  4515  06B4  2EC1               	goto	l2310
  4516  06B5  3001               	movlw	1
  4517  06B6                     u1675:	
  4518  06B6  35A2               	lslf	___lldiv@divisor,f
  4519  06B7  0DA3               	rlf	___lldiv@divisor+1,f
  4520  06B8  0DA4               	rlf	___lldiv@divisor+2,f
  4521  06B9  0DA5               	rlf	___lldiv@divisor+3,f
  4522  06BA  0B89               	decfsz	9,f
  4523  06BB  2EB6               	goto	u1675
  4524  06BC  3001               	movlw	1
  4525  06BD  00AA               	movwf	??___lldiv
  4526  06BE  082A               	movf	??___lldiv,w
  4527  06BF  07AF               	addwf	___lldiv@counter,f
  4528  06C0  2EB3               	goto	l2308
  4529  06C1                     l2310:	
  4530  06C1  3001               	movlw	1
  4531  06C2                     u1695:	
  4532  06C2  35AB               	lslf	___lldiv@quotient,f
  4533  06C3  0DAC               	rlf	___lldiv@quotient+1,f
  4534  06C4  0DAD               	rlf	___lldiv@quotient+2,f
  4535  06C5  0DAE               	rlf	___lldiv@quotient+3,f
  4536  06C6  0B89               	decfsz	9,f
  4537  06C7  2EC2               	goto	u1695
  4538  06C8  0825               	movf	___lldiv@divisor+3,w
  4539  06C9  0229               	subwf	___lldiv@dividend+3,w
  4540  06CA  1D03               	skipz
  4541  06CB  2ED6               	goto	u1705
  4542  06CC  0824               	movf	___lldiv@divisor+2,w
  4543  06CD  0228               	subwf	___lldiv@dividend+2,w
  4544  06CE  1D03               	skipz
  4545  06CF  2ED6               	goto	u1705
  4546  06D0  0823               	movf	___lldiv@divisor+1,w
  4547  06D1  0227               	subwf	___lldiv@dividend+1,w
  4548  06D2  1D03               	skipz
  4549  06D3  2ED6               	goto	u1705
  4550  06D4  0822               	movf	___lldiv@divisor,w
  4551  06D5  0226               	subwf	___lldiv@dividend,w
  4552  06D6                     u1705:	
  4553  06D6  1C03               	skipc
  4554  06D7  2EE1               	goto	l2318
  4555  06D8  0822               	movf	___lldiv@divisor,w
  4556  06D9  02A6               	subwf	___lldiv@dividend,f
  4557  06DA  0823               	movf	___lldiv@divisor+1,w
  4558  06DB  3BA7               	subwfb	___lldiv@dividend+1,f
  4559  06DC  0824               	movf	___lldiv@divisor+2,w
  4560  06DD  3BA8               	subwfb	___lldiv@dividend+2,f
  4561  06DE  0825               	movf	___lldiv@divisor+3,w
  4562  06DF  3BA9               	subwfb	___lldiv@dividend+3,f
  4563  06E0  142B               	bsf	___lldiv@quotient,0
  4564  06E1                     l2318:	
  4565  06E1  3001               	movlw	1
  4566  06E2                     u1715:	
  4567  06E2  36A5               	lsrf	___lldiv@divisor+3,f
  4568  06E3  0CA4               	rrf	___lldiv@divisor+2,f
  4569  06E4  0CA3               	rrf	___lldiv@divisor+1,f
  4570  06E5  0CA2               	rrf	___lldiv@divisor,f
  4571  06E6  0B89               	decfsz	9,f
  4572  06E7  2EE2               	goto	u1715
  4573  06E8  3001               	movlw	1
  4574  06E9  02AF               	subwf	___lldiv@counter,f
  4575  06EA  1D03               	btfss	3,2
  4576  06EB  2EC1               	goto	l2310
  4577  06EC                     l2322:	
  4578  06EC  082E               	movf	___lldiv@quotient+3,w
  4579  06ED  00A5               	movwf	?___lldiv+3
  4580  06EE  082D               	movf	___lldiv@quotient+2,w
  4581  06EF  00A4               	movwf	?___lldiv+2
  4582  06F0  082C               	movf	___lldiv@quotient+1,w
  4583  06F1  00A3               	movwf	?___lldiv+1
  4584  06F2  082B               	movf	___lldiv@quotient,w
  4585  06F3  00A2               	movwf	?___lldiv
  4586  06F4  0008               	return
  4587  06F5                     __end_of___lldiv:	
  4588                           
  4589                           	psect	text7
  4590  0D81                     __ptext7:	
  4591 ;; *************** function _mTouch_Init *****************
  4592 ;; Defined at:
  4593 ;;		line 12 in file "mTouch.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;		None
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;		None
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      void 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0, pclath, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4607 ;;      Params:         0       0       0       0       0       0
  4608 ;;      Locals:         0       0       0       0       0       0
  4609 ;;      Temps:          0       1       0       0       0       0
  4610 ;;      Totals:         0       1       0       0       0       0
  4611 ;;Total ram usage:        1 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    4
  4614 ;; This function calls:
  4615 ;;		_mTouch_PortInit
  4616 ;; This function is called by:
  4617 ;;		_main
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           
  4622                           ;psect for function _mTouch_Init
  4623  0D81                     _mTouch_Init:	
  4624                           
  4625                           ;mTouch.c: 14: mTouch_PortInit();
  4626                           
  4627                           ;incstack = 0
  4628                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4629  0D81  318C  24E3         	fcall	_mTouch_PortInit
  4630                           
  4631                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4632  0D83  0021               	movlb	1	; select bank1
  4633  0D84  0815               	movf	21,w	;volatile
  4634                           
  4635                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4636  0D85  1595               	bsf	21,3	;volatile
  4637                           
  4638                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4639  0D86  1695               	bsf	21,5	;volatile
  4640                           
  4641                           ;mTouch.c: 20: TMR0 = 0x00;
  4642  0D87  0020               	movlb	0	; select bank0
  4643  0D88  0195               	clrf	21	;volatile
  4644                           
  4645                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4646  0D89  141E               	bsf	30,0	;volatile
  4647                           
  4648                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4649  0D8A  300C               	movlw	12
  4650  0D8B  00A3               	movwf	??_mTouch_Init
  4651  0D8C  0823               	movf	??_mTouch_Init,w
  4652  0D8D  049E               	iorwf	30,f	;volatile
  4653                           
  4654                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4655  0D8E  307F               	movlw	127
  4656  0D8F  00A3               	movwf	??_mTouch_Init
  4657  0D90  0823               	movf	??_mTouch_Init,w
  4658  0D91  059E               	andwf	30,f	;volatile
  4659                           
  4660                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4661  0D92  019F               	clrf	31	;volatile
  4662  0D93  0008               	return
  4663  0D94                     __end_of_mTouch_Init:	
  4664                           
  4665                           	psect	text8
  4666  0CE3                     __ptext8:	
  4667 ;; *************** function _mTouch_PortInit *****************
  4668 ;; Defined at:
  4669 ;;		line 6 in file "mTouch.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;		None
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4683 ;;      Params:         0       0       0       0       0       0
  4684 ;;      Locals:         0       0       0       0       0       0
  4685 ;;      Temps:          0       1       0       0       0       0
  4686 ;;      Totals:         0       1       0       0       0       0
  4687 ;;Total ram usage:        1 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    3
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_mTouch_Init
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           
  4698                           ;psect for function _mTouch_PortInit
  4699  0CE3                     _mTouch_PortInit:	
  4700                           
  4701                           ;mTouch.c: 8: TRISA |= (0x07);
  4702                           
  4703                           ;incstack = 0
  4704                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4705  0CE3  3007               	movlw	7
  4706  0CE4  0020               	movlb	0	; select bank0
  4707  0CE5  00A2               	movwf	??_mTouch_PortInit
  4708  0CE6  0822               	movf	??_mTouch_PortInit,w
  4709  0CE7  0021               	movlb	1	; select bank1
  4710  0CE8  048C               	iorwf	12,f	;volatile
  4711                           
  4712                           ;mTouch.c: 9: ANSELA |= (0x07);
  4713  0CE9  3007               	movlw	7
  4714  0CEA  0020               	movlb	0	; select bank0
  4715  0CEB  00A2               	movwf	??_mTouch_PortInit
  4716  0CEC  0822               	movf	??_mTouch_PortInit,w
  4717  0CED  0023               	movlb	3	; select bank3
  4718  0CEE  048C               	iorwf	12,f	;volatile
  4719  0CEF  0008               	return
  4720  0CF0                     __end_of_mTouch_PortInit:	
  4721                           
  4722                           	psect	text9
  4723  0747                     __ptext9:	
  4724 ;; *************** function _mTouch_Check *****************
  4725 ;; Defined at:
  4726 ;;		line 115 in file "main.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  chan            1    wreg     unsigned char 
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  chan            1    9[BANK0 ] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      unsigned char 
  4733 ;; Registers used:
  4734 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4740 ;;      Params:         0       0       0       0       0       0
  4741 ;;      Locals:         0       1       0       0       0       0
  4742 ;;      Temps:          0       5       0       0       0       0
  4743 ;;      Totals:         0       6       0       0       0       0
  4744 ;;Total ram usage:        6 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    4
  4747 ;; This function calls:
  4748 ;;		_Buzzer_MiliSecond
  4749 ;; This function is called by:
  4750 ;;		_main
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           
  4755                           ;psect for function _mTouch_Check
  4756  0747                     _mTouch_Check:	
  4757                           
  4758                           ;incstack = 0
  4759                           ; Regs used in _mTouch_Check: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4760                           ;mTouch_Check@chan stored from wreg
  4761  0747  0020               	movlb	0	; select bank0
  4762  0748  00A9               	movwf	mTouch_Check@chan
  4763                           
  4764                           ;main.c: 117: if(chan>2)return 0;
  4765  0749  3003               	movlw	3
  4766  074A  0229               	subwf	mTouch_Check@chan,w
  4767  074B  1C03               	skipc
  4768  074C  2F4F               	goto	l2674
  4769  074D  3000               	movlw	0
  4770  074E  0008               	return
  4771  074F                     l2674:	
  4772                           
  4773                           ;main.c: 119: if(((CPS_PreData[chan]-CPS_Data[chan])>200)&&!mTouch_Interval[chan])
  4774  074F  0829               	movf	mTouch_Check@chan,w
  4775  0750  3EB4               	addlw	(low (_CPS_Data| 0))& (0+255)
  4776  0751  0086               	movwf	6
  4777  0752  0187               	clrf	7
  4778  0753  0801               	movf	1,w
  4779  0754  00A4               	movwf	??_mTouch_Check
  4780  0755  01A5               	clrf	??_mTouch_Check+1
  4781  0756  09A4               	comf	??_mTouch_Check,f
  4782  0757  09A5               	comf	??_mTouch_Check+1,f
  4783  0758  0AA4               	incf	??_mTouch_Check,f
  4784  0759  1903               	skipnz
  4785  075A  0AA5               	incf	??_mTouch_Check+1,f
  4786  075B  0829               	movf	mTouch_Check@chan,w
  4787  075C  3EB7               	addlw	(low (_CPS_PreData| 0))& (0+255)
  4788  075D  0086               	movwf	6
  4789  075E  0187               	clrf	7
  4790  075F  0801               	movf	1,w
  4791  0760  0724               	addwf	??_mTouch_Check,w
  4792  0761  00A6               	movwf	??_mTouch_Check+2
  4793  0762  0825               	movf	??_mTouch_Check+1,w
  4794  0763  1803               	skipnc
  4795  0764  0A25               	incf	??_mTouch_Check+1,w
  4796  0765  00A7               	movwf	??_mTouch_Check+3
  4797  0766  0827               	movf	??_mTouch_Check+3,w
  4798  0767  3A80               	xorlw	128
  4799  0768  00A8               	movwf	??_mTouch_Check+4
  4800  0769  3080               	movlw	128
  4801  076A  0228               	subwf	??_mTouch_Check+4,w
  4802  076B  1D03               	skipz
  4803  076C  2F6F               	goto	u2015
  4804  076D  30C9               	movlw	201
  4805  076E  0226               	subwf	??_mTouch_Check+2,w
  4806  076F                     u2015:	
  4807  076F  1C03               	skipc
  4808  0770  2F89               	goto	l2686
  4809  0771  0020               	movlb	0	; select bank0
  4810  0772  0829               	movf	mTouch_Check@chan,w
  4811  0773  3E61               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4812  0774  0086               	movwf	6
  4813  0775  0187               	clrf	7
  4814  0776  0801               	movf	1,w
  4815  0777  1D03               	btfss	3,2
  4816  0778  2F89               	goto	l2686
  4817                           
  4818                           ;main.c: 120: {
  4819                           ;main.c: 121: mTouch_Interval[chan] = 100;
  4820  0779  3064               	movlw	100
  4821  077A  00A4               	movwf	??_mTouch_Check
  4822  077B  0829               	movf	mTouch_Check@chan,w
  4823  077C  3E61               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4824  077D  0086               	movwf	6
  4825  077E  0187               	clrf	7
  4826  077F  0824               	movf	??_mTouch_Check,w
  4827  0780  0081               	movwf	1
  4828                           
  4829                           ;main.c: 122: Buzzer_MiliSecond(100);
  4830  0781  3064               	movlw	100
  4831  0782  00A2               	movwf	Buzzer_MiliSecond@time
  4832  0783  3000               	movlw	0
  4833  0784  00A3               	movwf	Buzzer_MiliSecond@time+1
  4834  0785  318C  24C1         	fcall	_Buzzer_MiliSecond
  4835                           
  4836                           ;main.c: 123: return 1;
  4837  0787  3001               	movlw	1
  4838  0788  0008               	return
  4839  0789                     l2686:	
  4840                           
  4841                           ;main.c: 124: }
  4842                           ;main.c: 125: return 0;
  4843  0789  3000               	movlw	0
  4844  078A  0008               	return
  4845  078B                     __end_of_mTouch_Check:	
  4846                           
  4847                           	psect	text10
  4848  0CC1                     __ptext10:	
  4849 ;; *************** function _Buzzer_MiliSecond *****************
  4850 ;; Defined at:
  4851 ;;		line 38 in file "Buzzer.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  time            2    2[BANK0 ] unsigned int 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      void 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4865 ;;      Params:         0       2       0       0       0       0
  4866 ;;      Locals:         0       0       0       0       0       0
  4867 ;;      Temps:          0       0       0       0       0       0
  4868 ;;      Totals:         0       2       0       0       0       0
  4869 ;;Total ram usage:        2 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    3
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_mTouch_Check
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           
  4880                           ;psect for function _Buzzer_MiliSecond
  4881  0CC1                     _Buzzer_MiliSecond:	
  4882                           
  4883                           ;Buzzer.c: 40: if(count==0)
  4884                           
  4885                           ;incstack = 0
  4886                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  4887  0CC1  0020               	movlb	0	; select bank0
  4888  0CC2  0868               	movf	_count,w
  4889  0CC3  0469               	iorwf	_count+1,w
  4890  0CC4  1D03               	btfss	3,2
  4891  0CC5  0008               	return
  4892                           
  4893                           ;Buzzer.c: 41: count = time;
  4894  0CC6  0823               	movf	Buzzer_MiliSecond@time+1,w
  4895  0CC7  00E9               	movwf	_count+1
  4896  0CC8  0822               	movf	Buzzer_MiliSecond@time,w
  4897  0CC9  00E8               	movwf	_count
  4898  0CCA  0008               	return
  4899  0CCB                     __end_of_Buzzer_MiliSecond:	
  4900                           
  4901                           	psect	text11
  4902  0D6E                     __ptext11:	
  4903 ;; *************** function _Timer6_Init *****************
  4904 ;; Defined at:
  4905 ;;		line 3 in file "Timer6.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4919 ;;      Params:         0       0       0       0       0       0
  4920 ;;      Locals:         0       0       0       0       0       0
  4921 ;;      Temps:          0       1       0       0       0       0
  4922 ;;      Totals:         0       1       0       0       0       0
  4923 ;;Total ram usage:        1 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    3
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_main
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           
  4934                           ;psect for function _Timer6_Init
  4935  0D6E                     _Timer6_Init:	
  4936                           
  4937                           ;Timer6.c: 5: PR6 = 0x7D;
  4938                           
  4939                           ;incstack = 0
  4940                           ; Regs used in _Timer6_Init: [wreg+status,2+status,0]
  4941  0D6E  307D               	movlw	125
  4942  0D6F  0028               	movlb	8	; select bank8
  4943  0D70  009D               	movwf	29	;volatile
  4944                           
  4945                           ;Timer6.c: 6: TMR6 = 0x00;
  4946  0D71  019C               	clrf	28	;volatile
  4947                           
  4948                           ;Timer6.c: 7: T6CON |= (0x03<<0);
  4949  0D72  3003               	movlw	3
  4950  0D73  0020               	movlb	0	; select bank0
  4951  0D74  00A2               	movwf	??_Timer6_Init
  4952  0D75  0822               	movf	??_Timer6_Init,w
  4953  0D76  0028               	movlb	8	; select bank8
  4954  0D77  049E               	iorwf	30,f	;volatile
  4955                           
  4956                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  4957  0D78  081E               	movf	30,w	;volatile
  4958                           
  4959                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  4960  0D79  151E               	bsf	30,2	;volatile
  4961                           
  4962                           ;Timer6.c: 11: TMR6IF = 0;
  4963  0D7A  0020               	movlb	0	; select bank0
  4964  0D7B  1193               	bcf	19,3	;volatile
  4965                           
  4966                           ;Timer6.c: 12: TMR6IE = 1;
  4967  0D7C  0021               	movlb	1	; select bank1
  4968  0D7D  1593               	bsf	19,3	;volatile
  4969                           
  4970                           ;Timer6.c: 13: PEIE = 1;
  4971  0D7E  170B               	bsf	11,6	;volatile
  4972                           
  4973                           ;Timer6.c: 14: GIE = 1;
  4974  0D7F  178B               	bsf	11,7	;volatile
  4975  0D80  0008               	return
  4976  0D81                     __end_of_Timer6_Init:	
  4977                           
  4978                           	psect	text12
  4979  0C9D                     __ptext12:	
  4980 ;; *************** function _Timer1_StartCount *****************
  4981 ;; Defined at:
  4982 ;;		line 31 in file "Timer1.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;		None
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;		None
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  1    wreg      void 
  4989 ;; Registers used:
  4990 ;;		wreg, status,2, status,0, pclath, cstack
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4996 ;;      Params:         0       0       0       0       0       0
  4997 ;;      Locals:         0       0       0       0       0       0
  4998 ;;      Temps:          0       0       0       0       0       0
  4999 ;;      Totals:         0       0       0       0       0       0
  5000 ;;Total ram usage:        0 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:    4
  5003 ;; This function calls:
  5004 ;;		_Timer1_ClearRecord
  5005 ;; This function is called by:
  5006 ;;		_main
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           
  5011                           ;psect for function _Timer1_StartCount
  5012  0C9D                     _Timer1_StartCount:	
  5013                           
  5014                           ;Timer1.c: 33: Timer1_ClearRecord();
  5015                           
  5016                           ;incstack = 0
  5017                           ; Regs used in _Timer1_StartCount: [wreg+status,2+status,0+pclath+cstack]
  5018  0C9D  318F  2708         	fcall	_Timer1_ClearRecord
  5019                           
  5020                           ;Timer1.c: 34: TMR1ON = 1;
  5021  0C9F  0020               	movlb	0	; select bank0
  5022  0CA0  1418               	bsf	24,0	;volatile
  5023  0CA1  0008               	return
  5024  0CA2                     __end_of_Timer1_StartCount:	
  5025                           
  5026                           	psect	text13
  5027  0F08                     __ptext13:	
  5028 ;; *************** function _Timer1_ClearRecord *****************
  5029 ;; Defined at:
  5030 ;;		line 42 in file "Timer1.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5044 ;;      Params:         0       0       0       0       0       0
  5045 ;;      Locals:         0       0       0       0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0
  5047 ;;      Totals:         0       0       0       0       0       0
  5048 ;;Total ram usage:        0 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    3
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_Timer1_StartCount
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           
  5059                           ;psect for function _Timer1_ClearRecord
  5060  0F08                     _Timer1_ClearRecord:	
  5061                           
  5062                           ;Timer1.c: 44: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL+1; TMR1ON = 1; };
  5063                           
  5064                           ;incstack = 0
  5065                           ; Regs used in _Timer1_ClearRecord: [wreg+status,2]
  5066  0F08  0020               	movlb	0	; select bank0
  5067  0F09  1018               	bcf	24,0	;volatile
  5068  0F0A  30FF               	movlw	255
  5069  0F0B  0097               	movwf	23	;volatile
  5070  0F0C  30F6               	movlw	246
  5071  0F0D  0096               	movwf	22	;volatile
  5072  0F0E  1418               	bsf	24,0	;volatile
  5073                           
  5074                           ;Timer1.c: 45: cnts.SigmaDeltaCount= 0;
  5075  0F0F  3000               	movlw	0
  5076  0F10  0021               	movlb	1	; select bank1
  5077  0F11  00A3               	movwf	(_cnts+3)^(0+128)
  5078  0F12  3000               	movlw	0
  5079  0F13  00A2               	movwf	(_cnts+2)^(0+128)
  5080  0F14  3000               	movlw	0
  5081  0F15  00A1               	movwf	(_cnts+1)^(0+128)
  5082  0F16  3000               	movlw	0
  5083  0F17  00A0               	movwf	_cnts^(0+128)
  5084                           
  5085                           ;Timer1.c: 46: cnts.SigmaCPS = 0;
  5086  0F18  3000               	movlw	0
  5087  0F19  00A7               	movwf	((_cnts+3)^(0+128)+4)
  5088  0F1A  3000               	movlw	0
  5089  0F1B  00A6               	movwf	((_cnts+2)^(0+128)+4)
  5090  0F1C  3000               	movlw	0
  5091  0F1D  00A5               	movwf	((_cnts+1)^(0+128)+4)
  5092  0F1E  3000               	movlw	0
  5093  0F1F  00A4               	movwf	(_cnts^(0+128)+4)
  5094                           
  5095                           ;Timer1.c: 47: cnts.AverageCPS = 0;
  5096  0F20  3000               	movlw	0
  5097  0F21  00AB               	movwf	((_cnts+3)^(0+128)+8)
  5098  0F22  3000               	movlw	0
  5099  0F23  00AA               	movwf	((_cnts+2)^(0+128)+8)
  5100  0F24  3000               	movlw	0
  5101  0F25  00A9               	movwf	((_cnts+1)^(0+128)+8)
  5102  0F26  3000               	movlw	0
  5103  0F27  00A8               	movwf	(_cnts^(0+128)+8)
  5104                           
  5105                           ;Timer1.c: 48: cnts.AverageCPM = 0;
  5106  0F28  3000               	movlw	0
  5107  0F29  00AF               	movwf	((_cnts+3)^(0+128)+12)
  5108  0F2A  3000               	movlw	0
  5109  0F2B  00AE               	movwf	((_cnts+2)^(0+128)+12)
  5110  0F2C  3000               	movlw	0
  5111  0F2D  00AD               	movwf	((_cnts+1)^(0+128)+12)
  5112  0F2E  3000               	movlw	0
  5113  0F2F  00AC               	movwf	(_cnts^(0+128)+12)
  5114                           
  5115                           ;Timer1.c: 49: cnts.Num_of_Detect = 0;
  5116  0F30  3000               	movlw	0
  5117  0F31  00B3               	movwf	((_cnts+3)^(0+128)+16)
  5118  0F32  3000               	movlw	0
  5119  0F33  00B2               	movwf	((_cnts+2)^(0+128)+16)
  5120  0F34  3000               	movlw	0
  5121  0F35  00B1               	movwf	((_cnts+1)^(0+128)+16)
  5122  0F36  3000               	movlw	0
  5123  0F37  00B0               	movwf	(_cnts^(0+128)+16)
  5124                           
  5125                           ;Timer1.c: 50: tcnt.Delta_t = 0;
  5126  0F38  3000               	movlw	0
  5127  0F39  0020               	movlb	0	; select bank0
  5128  0F3A  00DE               	movwf	_tcnt+5
  5129  0F3B  3000               	movlw	0
  5130  0F3C  00DD               	movwf	_tcnt+4
  5131  0F3D  3000               	movlw	0
  5132  0F3E  00DC               	movwf	_tcnt+3
  5133  0F3F  3000               	movlw	0
  5134  0F40  00DB               	movwf	_tcnt+2
  5135                           
  5136                           ;Timer1.c: 51: tcnt.Second_t = 0;
  5137  0F41  01D9               	clrf	_tcnt
  5138                           
  5139                           ;Timer1.c: 52: tcnt.Minute_t = 0;
  5140  0F42  01DA               	clrf	_tcnt+1
  5141  0F43  0008               	return
  5142  0F44                     __end_of_Timer1_ClearRecord:	
  5143                           
  5144                           	psect	text14
  5145  0E6B                     __ptext14:	
  5146 ;; *************** function _Timer1_Init *****************
  5147 ;; Defined at:
  5148 ;;		line 6 in file "Timer1.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;		None
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5162 ;;      Params:         0       0       0       0       0       0
  5163 ;;      Locals:         0       0       0       0       0       0
  5164 ;;      Temps:          0       1       0       0       0       0
  5165 ;;      Totals:         0       1       0       0       0       0
  5166 ;;Total ram usage:        1 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:    3
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_main
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function _Timer1_Init
  5178  0E6B                     _Timer1_Init:	
  5179                           
  5180                           ;Timer1.c: 8: TRISB |= (1<<6);
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  5184  0E6B  0021               	movlb	1	; select bank1
  5185  0E6C  170D               	bsf	13,6	;volatile
  5186                           
  5187                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  5188  0E6D  30BF               	movlw	191
  5189  0E6E  0020               	movlb	0	; select bank0
  5190  0E6F  00A2               	movwf	??_Timer1_Init
  5191  0E70  0822               	movf	??_Timer1_Init,w
  5192  0E71  0023               	movlb	3	; select bank3
  5193  0E72  058D               	andwf	13,f	;volatile
  5194                           
  5195                           ;Timer1.c: 10: WPUB |= (1<<6);
  5196  0E73  0024               	movlb	4	; select bank4
  5197  0E74  170D               	bsf	13,6	;volatile
  5198                           
  5199                           ;Timer1.c: 12: T1CON |= (0x01<<2);
  5200  0E75  0020               	movlb	0	; select bank0
  5201  0E76  1518               	bsf	24,2	;volatile
  5202                           
  5203                           ;Timer1.c: 13: T1CON &= ~(0x01<<3);
  5204  0E77  30F7               	movlw	247
  5205  0E78  00A2               	movwf	??_Timer1_Init
  5206  0E79  0822               	movf	??_Timer1_Init,w
  5207  0E7A  0598               	andwf	24,f	;volatile
  5208                           
  5209                           ;Timer1.c: 14: T1CON |= (0x00<<4);
  5210  0E7B  0818               	movf	24,w	;volatile
  5211                           
  5212                           ;Timer1.c: 15: T1CON |= (0x02<<6);
  5213  0E7C  1798               	bsf	24,7	;volatile
  5214                           
  5215                           ;Timer1.c: 17: T1GCON = 0x00;
  5216  0E7D  0199               	clrf	25	;volatile
  5217                           
  5218                           ;Timer1.c: 19: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL+1; TMR1ON = 1; };
  5219  0E7E  1018               	bcf	24,0	;volatile
  5220  0E7F  30FF               	movlw	255
  5221  0E80  0097               	movwf	23	;volatile
  5222  0E81  30F6               	movlw	246
  5223  0E82  0096               	movwf	22	;volatile
  5224  0E83  1418               	bsf	24,0	;volatile
  5225                           
  5226                           ;Timer1.c: 21: TMR1IF = 0;
  5227  0E84  1011               	bcf	17,0	;volatile
  5228                           
  5229                           ;Timer1.c: 22: TMR1IE = 1;
  5230  0E85  0021               	movlb	1	; select bank1
  5231  0E86  1411               	bsf	17,0	;volatile
  5232                           
  5233                           ;Timer1.c: 23: PEIE = 1;
  5234  0E87  170B               	bsf	11,6	;volatile
  5235                           
  5236                           ;Timer1.c: 24: GIE = 1;
  5237  0E88  178B               	bsf	11,7	;volatile
  5238                           
  5239                           ;Timer1.c: 26: TMR1ON = 0;
  5240  0E89  0020               	movlb	0	; select bank0
  5241  0E8A  1018               	bcf	24,0	;volatile
  5242  0E8B  0008               	return
  5243  0E8C                     __end_of_Timer1_Init:	
  5244                           
  5245                           	psect	text15
  5246  0C9A                     __ptext15:	
  5247 ;; *************** function _Timer1_GetSecond *****************
  5248 ;; Defined at:
  5249 ;;		line 70 in file "Timer1.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      unsigned char 
  5256 ;; Registers used:
  5257 ;;		wreg
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5263 ;;      Params:         0       0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0
  5266 ;;      Totals:         0       0       0       0       0       0
  5267 ;;Total ram usage:        0 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; Hardware stack levels required when called:    3
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_main
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           
  5278                           ;psect for function _Timer1_GetSecond
  5279  0C9A                     _Timer1_GetSecond:	
  5280                           
  5281                           ;Timer1.c: 72: return tcnt.Second_t;
  5282                           
  5283                           ;incstack = 0
  5284                           ; Regs used in _Timer1_GetSecond: [wreg]
  5285  0C9A  0020               	movlb	0	; select bank0
  5286  0C9B  0859               	movf	_tcnt,w
  5287  0C9C  0008               	return
  5288  0C9D                     __end_of_Timer1_GetSecond:	
  5289                           
  5290                           	psect	text16
  5291  0C97                     __ptext16:	
  5292 ;; *************** function _Timer1_GetMinute *****************
  5293 ;; Defined at:
  5294 ;;		line 75 in file "Timer1.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      unsigned char 
  5301 ;; Registers used:
  5302 ;;		wreg
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5308 ;;      Params:         0       0       0       0       0       0
  5309 ;;      Locals:         0       0       0       0       0       0
  5310 ;;      Temps:          0       0       0       0       0       0
  5311 ;;      Totals:         0       0       0       0       0       0
  5312 ;;Total ram usage:        0 bytes
  5313 ;; Hardware stack levels used:    1
  5314 ;; Hardware stack levels required when called:    3
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_main
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           
  5323                           ;psect for function _Timer1_GetMinute
  5324  0C97                     _Timer1_GetMinute:	
  5325                           
  5326                           ;Timer1.c: 77: return tcnt.Minute_t;
  5327                           
  5328                           ;incstack = 0
  5329                           ; Regs used in _Timer1_GetMinute: [wreg]
  5330  0C97  0020               	movlb	0	; select bank0
  5331  0C98  085A               	movf	_tcnt+1,w
  5332  0C99  0008               	return
  5333  0C9A                     __end_of_Timer1_GetMinute:	
  5334                           
  5335                           	psect	text17
  5336  0D5D                     __ptext17:	
  5337 ;; *************** function _Timer1_GetCountSum *****************
  5338 ;; Defined at:
  5339 ;;		line 55 in file "Timer1.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  4    2[BANK0 ] unsigned long 
  5346 ;; Registers used:
  5347 ;;		wreg
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5353 ;;      Params:         0       4       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0
  5356 ;;      Totals:         0       4       0       0       0       0
  5357 ;;Total ram usage:        4 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    3
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_main
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           
  5368                           ;psect for function _Timer1_GetCountSum
  5369  0D5D                     _Timer1_GetCountSum:	
  5370                           
  5371                           ;Timer1.c: 57: return cnts.SigmaDeltaCount;
  5372                           
  5373                           ;incstack = 0
  5374                           ; Regs used in _Timer1_GetCountSum: [wreg]
  5375  0D5D  0021               	movlb	1	; select bank1
  5376  0D5E  0823               	movf	(_cnts+3)^(0+128),w
  5377  0D5F  0020               	movlb	0	; select bank0
  5378  0D60  00A5               	movwf	?_Timer1_GetCountSum+3
  5379  0D61  0021               	movlb	1	; select bank1
  5380  0D62  0822               	movf	(_cnts+2)^(0+128),w
  5381  0D63  0020               	movlb	0	; select bank0
  5382  0D64  00A4               	movwf	?_Timer1_GetCountSum+2
  5383  0D65  0021               	movlb	1	; select bank1
  5384  0D66  0821               	movf	(_cnts+1)^(0+128),w
  5385  0D67  0020               	movlb	0	; select bank0
  5386  0D68  00A3               	movwf	?_Timer1_GetCountSum+1
  5387  0D69  0021               	movlb	1	; select bank1
  5388  0D6A  0820               	movf	_cnts^(0+128),w
  5389  0D6B  0020               	movlb	0	; select bank0
  5390  0D6C  00A2               	movwf	?_Timer1_GetCountSum
  5391  0D6D  0008               	return
  5392  0D6E                     __end_of_Timer1_GetCountSum:	
  5393                           
  5394                           	psect	text18
  5395  0CFE                     __ptext18:	
  5396 ;; *************** function _Timer1_GetCPS *****************
  5397 ;; Defined at:
  5398 ;;		line 65 in file "Timer1.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;		None
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;		None
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  4    2[BANK0 ] unsigned long 
  5405 ;; Registers used:
  5406 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5412 ;;      Params:         0       4       0       0       0       0
  5413 ;;      Locals:         0       0       0       0       0       0
  5414 ;;      Temps:          0       0       0       0       0       0
  5415 ;;      Totals:         0       4       0       0       0       0
  5416 ;;Total ram usage:        4 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    3
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_main
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           
  5427                           ;psect for function _Timer1_GetCPS
  5428  0CFE                     _Timer1_GetCPS:	
  5429                           
  5430                           ;Timer1.c: 67: return cnts.AverageCPS;
  5431                           
  5432                           ;incstack = 0
  5433                           ; Regs used in _Timer1_GetCPS: [wreg+fsr1l+fsr1h+status,2+status,0]
  5434  0CFE  3008               	movlw	8
  5435  0CFF  3EA0               	addlw	(low (_cnts| 0))& (0+255)
  5436  0D00  0086               	movwf	6
  5437  0D01  0187               	clrf	7
  5438  0D02  3F40               	moviw [0]fsr1
  5439  0D03  0020               	movlb	0	; select bank0
  5440  0D04  00A2               	movwf	?_Timer1_GetCPS
  5441  0D05  3F41               	moviw [1]fsr1
  5442  0D06  00A3               	movwf	?_Timer1_GetCPS+1
  5443  0D07  3F42               	moviw [2]fsr1
  5444  0D08  00A4               	movwf	?_Timer1_GetCPS+2
  5445  0D09  3F43               	moviw [3]fsr1
  5446  0D0A  00A5               	movwf	?_Timer1_GetCPS+3
  5447  0D0B  0008               	return
  5448  0D0C                     __end_of_Timer1_GetCPS:	
  5449                           
  5450                           	psect	text19
  5451  0CF0                     __ptext19:	
  5452 ;; *************** function _Timer1_GetCPM *****************
  5453 ;; Defined at:
  5454 ;;		line 60 in file "Timer1.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;		None
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  4    2[BANK0 ] unsigned long 
  5461 ;; Registers used:
  5462 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5468 ;;      Params:         0       4       0       0       0       0
  5469 ;;      Locals:         0       0       0       0       0       0
  5470 ;;      Temps:          0       0       0       0       0       0
  5471 ;;      Totals:         0       4       0       0       0       0
  5472 ;;Total ram usage:        4 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    3
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		_main
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           
  5483                           ;psect for function _Timer1_GetCPM
  5484  0CF0                     _Timer1_GetCPM:	
  5485                           
  5486                           ;Timer1.c: 62: return cnts.AverageCPM;
  5487                           
  5488                           ;incstack = 0
  5489                           ; Regs used in _Timer1_GetCPM: [wreg+fsr1l+fsr1h+status,2+status,0]
  5490  0CF0  300C               	movlw	12
  5491  0CF1  3EA0               	addlw	(low (_cnts| 0))& (0+255)
  5492  0CF2  0086               	movwf	6
  5493  0CF3  0187               	clrf	7
  5494  0CF4  3F40               	moviw [0]fsr1
  5495  0CF5  0020               	movlb	0	; select bank0
  5496  0CF6  00A2               	movwf	?_Timer1_GetCPM
  5497  0CF7  3F41               	moviw [1]fsr1
  5498  0CF8  00A3               	movwf	?_Timer1_GetCPM+1
  5499  0CF9  3F42               	moviw [2]fsr1
  5500  0CFA  00A4               	movwf	?_Timer1_GetCPM+2
  5501  0CFB  3F43               	moviw [3]fsr1
  5502  0CFC  00A5               	movwf	?_Timer1_GetCPM+3
  5503  0CFD  0008               	return
  5504  0CFE                     __end_of_Timer1_GetCPM:	
  5505                           
  5506                           	psect	text20
  5507  0575                     __ptext20:	
  5508 ;; *************** function _LCD_Init *****************
  5509 ;; Defined at:
  5510 ;;		line 28 in file "LCD.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, pclath, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5524 ;;      Params:         0       0       0       0       0       0
  5525 ;;      Locals:         0       0       0       0       0       0
  5526 ;;      Temps:          0       2       0       0       0       0
  5527 ;;      Totals:         0       2       0       0       0       0
  5528 ;;Total ram usage:        2 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    5
  5531 ;; This function calls:
  5532 ;;		_LCD_DisplayClear
  5533 ;;		_LCD_WriteData
  5534 ;; This function is called by:
  5535 ;;		_main
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           
  5540                           ;psect for function _LCD_Init
  5541  0575                     _LCD_Init:	
  5542                           
  5543                           ;LCD.c: 30: LATA3 = 0;
  5544                           
  5545                           ;incstack = 0
  5546                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5547  0575  0022               	movlb	2	; select bank2
  5548  0576  118C               	bcf	12,3	;volatile
  5549                           
  5550                           ;LCD.c: 31: LATA4 = 0;
  5551  0577  120C               	bcf	12,4	;volatile
  5552                           
  5553                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  5554  0578  3002               	movlw	2
  5555  0579  0020               	movlb	0	; select bank0
  5556  057A  00A7               	movwf	??_LCD_Init+1
  5557  057B  3038               	movlw	56
  5558  057C  00A6               	movwf	??_LCD_Init
  5559  057D  30AD               	movlw	173
  5560  057E                     u2477:	
  5561  057E  0B89               	decfsz	9,f
  5562  057F  2D7E               	goto	u2477
  5563  0580  0BA6               	decfsz	??_LCD_Init,f
  5564  0581  2D7E               	goto	u2477
  5565  0582  0BA7               	decfsz	??_LCD_Init+1,f
  5566  0583  2D7E               	goto	u2477
  5567                           
  5568                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  5569  0584  3003               	movlw	3
  5570  0585  0020               	movlb	0	; select bank0
  5571  0586  008D               	movwf	13	;volatile
  5572                           
  5573                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5574  0587  0022               	movlb	2	; select bank2
  5575  0588  160C               	bsf	12,4	;volatile
  5576  0589  3200               	nop2	;2 cycle nop
  5577  058A  3200               	nop2	;2 cycle nop
  5578  058B  3200               	nop2	;2 cycle nop
  5579  058C  3200               	nop2	;2 cycle nop
  5580  058D  0022               	movlb	2	; select bank2
  5581  058E  120C               	bcf	12,4	;volatile
  5582  058F  3200               	nop2	;2 cycle nop
  5583  0590  3200               	nop2	;2 cycle nop
  5584  0591  3200               	nop2	;2 cycle nop
  5585  0592  3200               	nop2	;2 cycle nop
  5586                           
  5587                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  5588  0593  3034               	movlw	52
  5589  0594  0020               	movlb	0	; select bank0
  5590  0595  00A6               	movwf	??_LCD_Init
  5591  0596  30F1               	movlw	241
  5592  0597                     u2487:	
  5593  0597  0B89               	decfsz	9,f
  5594  0598  2D97               	goto	u2487
  5595  0599  0BA6               	decfsz	??_LCD_Init,f
  5596  059A  2D97               	goto	u2487
  5597  059B  3200               	nop2
  5598                           
  5599                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5600  059C  0022               	movlb	2	; select bank2
  5601  059D  160C               	bsf	12,4	;volatile
  5602  059E  3200               	nop2	;2 cycle nop
  5603  059F  3200               	nop2	;2 cycle nop
  5604  05A0  3200               	nop2	;2 cycle nop
  5605  05A1  3200               	nop2	;2 cycle nop
  5606  05A2  0022               	movlb	2	; select bank2
  5607  05A3  120C               	bcf	12,4	;volatile
  5608  05A4  3200               	nop2	;2 cycle nop
  5609  05A5  3200               	nop2	;2 cycle nop
  5610  05A6  3200               	nop2	;2 cycle nop
  5611  05A7  3200               	nop2	;2 cycle nop
  5612                           
  5613                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5614  05A8  3005               	movlw	5
  5615  05A9  0020               	movlb	0	; select bank0
  5616  05AA  00A6               	movwf	??_LCD_Init
  5617  05AB  3026               	movlw	38
  5618  05AC                     u2497:	
  5619  05AC  0B89               	decfsz	9,f
  5620  05AD  2DAC               	goto	u2497
  5621  05AE  0BA6               	decfsz	??_LCD_Init,f
  5622  05AF  2DAC               	goto	u2497
  5623  05B0  0000               	nop
  5624                           
  5625                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5626  05B1  0022               	movlb	2	; select bank2
  5627  05B2  160C               	bsf	12,4	;volatile
  5628  05B3  3200               	nop2	;2 cycle nop
  5629  05B4  3200               	nop2	;2 cycle nop
  5630  05B5  3200               	nop2	;2 cycle nop
  5631  05B6  3200               	nop2	;2 cycle nop
  5632  05B7  0022               	movlb	2	; select bank2
  5633  05B8  120C               	bcf	12,4	;volatile
  5634  05B9  3200               	nop2	;2 cycle nop
  5635  05BA  3200               	nop2	;2 cycle nop
  5636  05BB  3200               	nop2	;2 cycle nop
  5637  05BC  3200               	nop2	;2 cycle nop
  5638                           
  5639                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5640  05BD  3005               	movlw	5
  5641  05BE  0020               	movlb	0	; select bank0
  5642  05BF  00A6               	movwf	??_LCD_Init
  5643  05C0  3026               	movlw	38
  5644  05C1                     u2507:	
  5645  05C1  0B89               	decfsz	9,f
  5646  05C2  2DC1               	goto	u2507
  5647  05C3  0BA6               	decfsz	??_LCD_Init,f
  5648  05C4  2DC1               	goto	u2507
  5649  05C5  0000               	nop
  5650                           
  5651                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  5652  05C6  3002               	movlw	2
  5653  05C7  0020               	movlb	0	; select bank0
  5654  05C8  008D               	movwf	13	;volatile
  5655                           
  5656                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5657  05C9  0022               	movlb	2	; select bank2
  5658  05CA  160C               	bsf	12,4	;volatile
  5659  05CB  3200               	nop2	;2 cycle nop
  5660  05CC  3200               	nop2	;2 cycle nop
  5661  05CD  3200               	nop2	;2 cycle nop
  5662  05CE  3200               	nop2	;2 cycle nop
  5663  05CF  0022               	movlb	2	; select bank2
  5664  05D0  120C               	bcf	12,4	;volatile
  5665  05D1  3200               	nop2	;2 cycle nop
  5666  05D2  3200               	nop2	;2 cycle nop
  5667  05D3  3200               	nop2	;2 cycle nop
  5668  05D4  3200               	nop2	;2 cycle nop
  5669                           
  5670                           ;LCD.c: 44: LCD_WriteData(0x28);
  5671  05D5  3028               	movlw	40
  5672  05D6  318F  2780  3185   	fcall	_LCD_WriteData
  5673                           
  5674                           ;LCD.c: 45: LCD_WriteData(0x0c);
  5675  05D9  300C               	movlw	12
  5676  05DA  318F  2780  3185   	fcall	_LCD_WriteData
  5677                           
  5678                           ;LCD.c: 46: LCD_DisplayClear();
  5679  05DD  318D  252B  3185   	fcall	_LCD_DisplayClear
  5680                           
  5681                           ;LCD.c: 47: LCD_WriteData(0x06);
  5682  05E0  3006               	movlw	6
  5683  05E1  318F  2780         	fcall	_LCD_WriteData
  5684  05E3  0008               	return
  5685  05E4                     __end_of_LCD_Init:	
  5686                           
  5687                           	psect	text21
  5688  0D2B                     __ptext21:	
  5689 ;; *************** function _LCD_DisplayClear *****************
  5690 ;; Defined at:
  5691 ;;		line 73 in file "LCD.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;		None
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;		None
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  1    wreg      void 
  5698 ;; Registers used:
  5699 ;;		wreg, status,2, status,0, pclath, cstack
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5705 ;;      Params:         0       0       0       0       0       0
  5706 ;;      Locals:         0       0       0       0       0       0
  5707 ;;      Temps:          0       1       0       0       0       0
  5708 ;;      Totals:         0       1       0       0       0       0
  5709 ;;Total ram usage:        1 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    4
  5712 ;; This function calls:
  5713 ;;		_LCD_WriteData
  5714 ;; This function is called by:
  5715 ;;		_LCD_Init
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           
  5720                           ;psect for function _LCD_DisplayClear
  5721  0D2B                     _LCD_DisplayClear:	
  5722                           
  5723                           ;LCD.c: 75: LATA3 = 0;
  5724                           
  5725                           ;incstack = 0
  5726                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  5727  0D2B  0022               	movlb	2	; select bank2
  5728  0D2C  118C               	bcf	12,3	;volatile
  5729                           
  5730                           ;LCD.c: 76: LCD_WriteData(0x01);
  5731  0D2D  3001               	movlw	1
  5732  0D2E  318F  2780  318D   	fcall	_LCD_WriteData
  5733                           
  5734                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  5735  0D31  3015               	movlw	21
  5736  0D32  0020               	movlb	0	; select bank0
  5737  0D33  00A5               	movwf	??_LCD_DisplayClear
  5738  0D34  30C6               	movlw	198
  5739  0D35                     u2517:	
  5740  0D35  0B89               	decfsz	9,f
  5741  0D36  2D35               	goto	u2517
  5742  0D37  0BA5               	decfsz	??_LCD_DisplayClear,f
  5743  0D38  2D35               	goto	u2517
  5744  0D39  0000               	nop
  5745  0D3A  0008               	return
  5746  0D3B                     __end_of_LCD_DisplayClear:	
  5747                           
  5748                           	psect	text22
  5749  0DAA                     __ptext22:	
  5750 ;; *************** function _LCD_CursorPosition *****************
  5751 ;; Defined at:
  5752 ;;		line 95 in file "LCD.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  tx              1    wreg     unsigned char 
  5755 ;;  ty              1    5[BANK0 ] unsigned char 
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  tx              1    7[BANK0 ] unsigned char 
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  1    wreg      void 
  5760 ;; Registers used:
  5761 ;;		wreg, status,2, status,0, pclath, cstack
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5767 ;;      Params:         0       1       0       0       0       0
  5768 ;;      Locals:         0       1       0       0       0       0
  5769 ;;      Temps:          0       1       0       0       0       0
  5770 ;;      Totals:         0       3       0       0       0       0
  5771 ;;Total ram usage:        3 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    4
  5774 ;; This function calls:
  5775 ;;		_LCD_WriteData
  5776 ;; This function is called by:
  5777 ;;		_main
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function _LCD_CursorPosition
  5783  0DAA                     _LCD_CursorPosition:	
  5784                           
  5785                           ;incstack = 0
  5786                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  5787                           ;LCD_CursorPosition@tx stored from wreg
  5788  0DAA  0020               	movlb	0	; select bank0
  5789  0DAB  00A7               	movwf	LCD_CursorPosition@tx
  5790                           
  5791                           ;LCD.c: 97: LATA3 = 0;
  5792  0DAC  0022               	movlb	2	; select bank2
  5793  0DAD  118C               	bcf	12,3	;volatile
  5794                           
  5795                           ;LCD.c: 98: LCD_WriteData(0x80|tx|(0x40*ty));
  5796  0DAE  0020               	movlb	0	; select bank0
  5797  0DAF  0825               	movf	LCD_CursorPosition@ty,w
  5798  0DB0  00A6               	movwf	??_LCD_CursorPosition
  5799  0DB1  3005               	movlw	5
  5800  0DB2                     u1885:	
  5801  0DB2  35A6               	lslf	??_LCD_CursorPosition,f
  5802  0DB3  3EFF               	addlw	-1
  5803  0DB4  1D03               	skipz
  5804  0DB5  2DB2               	goto	u1885
  5805  0DB6  3526               	lslf	??_LCD_CursorPosition,w
  5806  0DB7  0427               	iorwf	LCD_CursorPosition@tx,w
  5807  0DB8  3880               	iorlw	-128
  5808  0DB9  318F  2780  318D   	fcall	_LCD_WriteData
  5809                           
  5810                           ;LCD.c: 99: _delay((unsigned long)((40)*(32000000/4000000.0)));
  5811  0DBC  306A               	movlw	106
  5812  0DBD                     u2527:	
  5813  0DBD  0B89               	decfsz	9,f
  5814  0DBE  2DBD               	goto	u2527
  5815  0DBF  3200               	nop2
  5816  0DC0  0008               	return
  5817  0DC1                     __end_of_LCD_CursorPosition:	
  5818                           
  5819                           	psect	text23
  5820  0D1B                     __ptext23:	
  5821 ;; *************** function _LCD_CursorHome *****************
  5822 ;; Defined at:
  5823 ;;		line 84 in file "LCD.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;		None
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;		None
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  1    wreg      void 
  5830 ;; Registers used:
  5831 ;;		wreg, status,2, status,0, pclath, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5837 ;;      Params:         0       0       0       0       0       0
  5838 ;;      Locals:         0       0       0       0       0       0
  5839 ;;      Temps:          0       1       0       0       0       0
  5840 ;;      Totals:         0       1       0       0       0       0
  5841 ;;Total ram usage:        1 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    4
  5844 ;; This function calls:
  5845 ;;		_LCD_WriteData
  5846 ;; This function is called by:
  5847 ;;		_main
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           
  5852                           ;psect for function _LCD_CursorHome
  5853  0D1B                     _LCD_CursorHome:	
  5854                           
  5855                           ;LCD.c: 86: LATA3 = 0;
  5856                           
  5857                           ;incstack = 0
  5858                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  5859  0D1B  0022               	movlb	2	; select bank2
  5860  0D1C  118C               	bcf	12,3	;volatile
  5861                           
  5862                           ;LCD.c: 87: LCD_WriteData(0x02);
  5863  0D1D  3002               	movlw	2
  5864  0D1E  318F  2780  318D   	fcall	_LCD_WriteData
  5865                           
  5866                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  5867  0D21  3015               	movlw	21
  5868  0D22  0020               	movlb	0	; select bank0
  5869  0D23  00A5               	movwf	??_LCD_CursorHome
  5870  0D24  30C6               	movlw	198
  5871  0D25                     u2537:	
  5872  0D25  0B89               	decfsz	9,f
  5873  0D26  2D25               	goto	u2537
  5874  0D27  0BA5               	decfsz	??_LCD_CursorHome,f
  5875  0D28  2D25               	goto	u2537
  5876  0D29  0000               	nop
  5877  0D2A  0008               	return
  5878  0D2B                     __end_of_LCD_CursorHome:	
  5879                           
  5880                           	psect	text24
  5881  0F80                     __ptext24:	
  5882 ;; *************** function _LCD_WriteData *****************
  5883 ;; Defined at:
  5884 ;;		line 15 in file "LCD.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  point           1    wreg     char 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  point           1    4[BANK0 ] char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      void 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5898 ;;      Params:         0       0       0       0       0       0
  5899 ;;      Locals:         0       1       0       0       0       0
  5900 ;;      Temps:          0       2       0       0       0       0
  5901 ;;      Totals:         0       3       0       0       0       0
  5902 ;;Total ram usage:        3 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    3
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_LCD_Init
  5909 ;;		_putch
  5910 ;;		_LCD_DisplayClear
  5911 ;;		_LCD_CursorHome
  5912 ;;		_LCD_CursorPosition
  5913 ;;		_LCD_Put
  5914 ;;		_LCD_CursorShift
  5915 ;;		_LCD_DispShift
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           
  5920                           ;psect for function _LCD_WriteData
  5921  0F80                     _LCD_WriteData:	
  5922                           
  5923                           ;incstack = 0
  5924                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  5925                           ;LCD_WriteData@point stored from wreg
  5926  0F80  0020               	movlb	0	; select bank0
  5927  0F81  00A4               	movwf	LCD_WriteData@point
  5928                           
  5929                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  5930  0F82  30D5               	movlw	213
  5931  0F83                     u2547:	
  5932  0F83  0B89               	decfsz	9,f
  5933  0F84  2F83               	goto	u2547
  5934  0F85  0000               	nop
  5935                           
  5936                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  5937  0F86  0020               	movlb	0	; select bank0
  5938  0F87  0824               	movf	LCD_WriteData@point,w
  5939  0F88  00A2               	movwf	??_LCD_WriteData
  5940  0F89  3004               	movlw	4
  5941  0F8A                     u1425:	
  5942  0F8A  1003               	clrc
  5943  0F8B  1BA2               	btfsc	??_LCD_WriteData,7
  5944  0F8C  1403               	setc
  5945  0F8D  0CA2               	rrf	??_LCD_WriteData,f
  5946  0F8E  0B89               	decfsz	9,f
  5947  0F8F  2F8A               	goto	u1425
  5948  0F90  3003               	movlw	3
  5949  0F91  0522               	andwf	??_LCD_WriteData,w
  5950  0F92  00A3               	movwf	??_LCD_WriteData+1
  5951  0F93  0E24               	swapf	LCD_WriteData@point,w
  5952  0F94  390F               	andlw	15
  5953  0F95  1989               	btfsc	9,3
  5954  0F96  38F0               	iorlw	240
  5955  0F97  390C               	andlw	12
  5956  0F98  0709               	addwf	9,w
  5957  0F99  0423               	iorwf	??_LCD_WriteData+1,w
  5958  0F9A  008D               	movwf	13	;volatile
  5959                           
  5960                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5961  0F9B  0022               	movlb	2	; select bank2
  5962  0F9C  160C               	bsf	12,4	;volatile
  5963  0F9D  3200               	nop2	;2 cycle nop
  5964  0F9E  3200               	nop2	;2 cycle nop
  5965  0F9F  3200               	nop2	;2 cycle nop
  5966  0FA0  3200               	nop2	;2 cycle nop
  5967  0FA1  0022               	movlb	2	; select bank2
  5968  0FA2  120C               	bcf	12,4	;volatile
  5969  0FA3  3200               	nop2	;2 cycle nop
  5970  0FA4  3200               	nop2	;2 cycle nop
  5971  0FA5  3200               	nop2	;2 cycle nop
  5972  0FA6  3200               	nop2	;2 cycle nop
  5973                           
  5974                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  5975  0FA7  3003               	movlw	3
  5976  0FA8  0020               	movlb	0	; select bank0
  5977  0FA9  0524               	andwf	LCD_WriteData@point,w
  5978  0FAA  00A2               	movwf	??_LCD_WriteData
  5979  0FAB  0824               	movf	LCD_WriteData@point,w
  5980  0FAC  390C               	andlw	12
  5981  0FAD  0709               	addwf	9,w
  5982  0FAE  0422               	iorwf	??_LCD_WriteData,w
  5983  0FAF  008D               	movwf	13	;volatile
  5984                           
  5985                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5986  0FB0  0022               	movlb	2	; select bank2
  5987  0FB1  160C               	bsf	12,4	;volatile
  5988  0FB2  3200               	nop2	;2 cycle nop
  5989  0FB3  3200               	nop2	;2 cycle nop
  5990  0FB4  3200               	nop2	;2 cycle nop
  5991  0FB5  3200               	nop2	;2 cycle nop
  5992  0FB6  0022               	movlb	2	; select bank2
  5993  0FB7  120C               	bcf	12,4	;volatile
  5994  0FB8  3200               	nop2	;2 cycle nop
  5995  0FB9  3200               	nop2	;2 cycle nop
  5996  0FBA  3200               	nop2	;2 cycle nop
  5997  0FBB  3200               	nop2	;2 cycle nop
  5998  0FBC  0008               	return
  5999  0FBD                     __end_of_LCD_WriteData:	
  6000                           
  6001                           	psect	text25
  6002  07CF                     __ptext25:	
  6003 ;; *************** function _DAC_WriteVoltage *****************
  6004 ;; Defined at:
  6005 ;;		line 27 in file "MCP4726.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  volue           2   18[BANK0 ] unsigned int 
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;		None
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      char 
  6012 ;; Registers used:
  6013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6019 ;;      Params:         0       2       0       0       0       0
  6020 ;;      Locals:         0       0       0       0       0       0
  6021 ;;      Temps:          0       3       0       0       0       0
  6022 ;;      Totals:         0       5       0       0       0       0
  6023 ;;Total ram usage:        5 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    5
  6026 ;; This function calls:
  6027 ;;		_I2C_Transmit
  6028 ;; This function is called by:
  6029 ;;		_main
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           
  6034                           ;psect for function _DAC_WriteVoltage
  6035  07CF                     _DAC_WriteVoltage:	
  6036                           
  6037                           ;MCP4726.c: 29: VoltageReg.Command = (uint8_t)(0x0);
  6038                           
  6039                           ;incstack = 0
  6040                           ; Regs used in _DAC_WriteVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6041  07CF  303F               	movlw	-193
  6042  07D0  0020               	movlb	0	; select bank0
  6043  07D1  05EB               	andwf	_VoltageReg,f
  6044                           
  6045                           ;MCP4726.c: 30: VoltageReg.PowerDown = ConfigReg.PowerDown;
  6046  07D2  0C6D               	rrf	_ConfigReg,w
  6047  07D3  3903               	andlw	3
  6048  07D4  00B4               	movwf	??_DAC_WriteVoltage
  6049  07D5  0EB4               	swapf	??_DAC_WriteVoltage,f
  6050  07D6  086B               	movf	_VoltageReg,w
  6051  07D7  0634               	xorwf	??_DAC_WriteVoltage,w
  6052  07D8  39CF               	andlw	-49
  6053  07D9  0634               	xorwf	??_DAC_WriteVoltage,w
  6054  07DA  00EB               	movwf	_VoltageReg
  6055                           
  6056                           ;MCP4726.c: 31: VoltageReg.Voltage4bits = (uint8_t)((volue&0x0F00)>>8);
  6057  07DB  0833               	movf	DAC_WriteVoltage@volue+1,w
  6058  07DC  00B5               	movwf	??_DAC_WriteVoltage+1
  6059  07DD  0832               	movf	DAC_WriteVoltage@volue,w
  6060  07DE  00B4               	movwf	??_DAC_WriteVoltage
  6061  07DF  0835               	movf	??_DAC_WriteVoltage+1,w
  6062  07E0  00B4               	movwf	??_DAC_WriteVoltage
  6063  07E1  01B5               	clrf	??_DAC_WriteVoltage+1
  6064  07E2  300F               	movlw	15
  6065  07E3  0534               	andwf	??_DAC_WriteVoltage,w
  6066  07E4  00B6               	movwf	??_DAC_WriteVoltage+2
  6067  07E5  086B               	movf	_VoltageReg,w
  6068  07E6  0636               	xorwf	??_DAC_WriteVoltage+2,w
  6069  07E7  39F0               	andlw	-16
  6070  07E8  0636               	xorwf	??_DAC_WriteVoltage+2,w
  6071  07E9  00EB               	movwf	_VoltageReg
  6072                           
  6073                           ;MCP4726.c: 32: VoltageReg.Voltage8bits = (uint8_t)(volue&0x00FF);
  6074  07EA  0832               	movf	DAC_WriteVoltage@volue,w
  6075  07EB  00B4               	movwf	??_DAC_WriteVoltage
  6076  07EC  0834               	movf	??_DAC_WriteVoltage,w
  6077  07ED  00EC               	movwf	_VoltageReg+1
  6078                           
  6079                           ;MCP4726.c: 34: return I2C_Transmit(I2C2_MODULE,0x60,VoltageReg.Voltage_Data,2);
  6080                           ;	Return value of _DAC_WriteVoltage is never used
  6081  07EE  3060               	movlw	96
  6082  07EF  00B4               	movwf	??_DAC_WriteVoltage
  6083  07F0  0834               	movf	??_DAC_WriteVoltage,w
  6084  07F1  00AA               	movwf	I2C_Transmit@address
  6085  07F2  306B               	movlw	(low (_VoltageReg| 0))& (0+255)
  6086  07F3  00B5               	movwf	??_DAC_WriteVoltage+1
  6087  07F4  0835               	movf	??_DAC_WriteVoltage+1,w
  6088  07F5  00AB               	movwf	I2C_Transmit@pData
  6089  07F6  3002               	movlw	2
  6090  07F7  00B6               	movwf	??_DAC_WriteVoltage+2
  6091  07F8  0836               	movf	??_DAC_WriteVoltage+2,w
  6092  07F9  00AC               	movwf	I2C_Transmit@size
  6093  07FA  3001               	movlw	1
  6094  07FB  318D  25DA         	fcall	_I2C_Transmit
  6095  07FD  0008               	return
  6096  07FE                     __end_of_DAC_WriteVoltage:	
  6097                           
  6098                           	psect	text26
  6099  0E4B                     __ptext26:	
  6100 ;; *************** function _DAC_Initialize *****************
  6101 ;; Defined at:
  6102 ;;		line 14 in file "MCP4726.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;		None
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;		None
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      void 
  6109 ;; Registers used:
  6110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6116 ;;      Params:         0       0       0       0       0       0
  6117 ;;      Locals:         0       0       0       0       0       0
  6118 ;;      Temps:          0       2       0       0       0       0
  6119 ;;      Totals:         0       2       0       0       0       0
  6120 ;;Total ram usage:        2 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    6
  6123 ;; This function calls:
  6124 ;;		_I2C_Init
  6125 ;;		_I2C_Transmit
  6126 ;; This function is called by:
  6127 ;;		_main
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           
  6132                           ;psect for function _DAC_Initialize
  6133  0E4B                     _DAC_Initialize:	
  6134                           
  6135                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  6136                           
  6137                           ;incstack = 0
  6138                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6139  0E4B  0020               	movlb	0	; select bank0
  6140  0E4C  01A7               	clrf	I2C_Init@address
  6141  0E4D  01A8               	clrf	I2C_Init@mode
  6142  0E4E  01A9               	clrf	I2C_Init@Speed
  6143  0E4F  3001               	movlw	1
  6144  0E50  318D  25C1  318E   	fcall	_I2C_Init
  6145                           
  6146                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  6147  0E53  0020               	movlb	0	; select bank0
  6148  0E54  086D               	movf	_ConfigReg,w
  6149  0E55  391F               	andlw	-225
  6150  0E56  3880               	iorlw	128
  6151  0E57  00ED               	movwf	_ConfigReg
  6152                           
  6153                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  6154  0E58  106D               	bcf	_ConfigReg,0
  6155                           
  6156                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  6157  0E59  30F9               	movlw	-7
  6158  0E5A  05ED               	andwf	_ConfigReg,f
  6159                           
  6160                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  6161  0E5B  30E7               	movlw	-25
  6162  0E5C  05ED               	andwf	_ConfigReg,f
  6163                           
  6164                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  6165  0E5D  3060               	movlw	96
  6166  0E5E  00B2               	movwf	??_DAC_Initialize
  6167  0E5F  0832               	movf	??_DAC_Initialize,w
  6168  0E60  00AA               	movwf	I2C_Transmit@address
  6169  0E61  306D               	movlw	(low (_ConfigReg| 0))& (0+255)
  6170  0E62  00B3               	movwf	??_DAC_Initialize+1
  6171  0E63  0833               	movf	??_DAC_Initialize+1,w
  6172  0E64  00AB               	movwf	I2C_Transmit@pData
  6173  0E65  01AC               	clrf	I2C_Transmit@size
  6174  0E66  0AAC               	incf	I2C_Transmit@size,f
  6175  0E67  3001               	movlw	1
  6176  0E68  318D  25DA         	fcall	_I2C_Transmit
  6177  0E6A  0008               	return
  6178  0E6B                     __end_of_DAC_Initialize:	
  6179                           
  6180                           	psect	text27
  6181  0DDA                     __ptext27:	
  6182 ;; *************** function _I2C_Transmit *****************
  6183 ;; Defined at:
  6184 ;;		line 23 in file "I2C_Common.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  I2Cx            1    wreg     enum E3275
  6187 ;;  address         1   10[BANK0 ] unsigned char 
  6188 ;;  pData           1   11[BANK0 ] PTR unsigned char 
  6189 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6190 ;;  size            1   12[BANK0 ] unsigned char 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  I2Cx            1   16[BANK0 ] enum E3275
  6193 ;;  result          1   17[BANK0 ] char 
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  1    wreg      char 
  6196 ;; Registers used:
  6197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6203 ;;      Params:         0       3       0       0       0       0
  6204 ;;      Locals:         0       2       0       0       0       0
  6205 ;;      Temps:          0       3       0       0       0       0
  6206 ;;      Totals:         0       8       0       0       0       0
  6207 ;;Total ram usage:        8 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    4
  6210 ;; This function calls:
  6211 ;;		_I2C2_Transmit
  6212 ;; This function is called by:
  6213 ;;		_DAC_Initialize
  6214 ;;		_DAC_WriteVoltage
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           
  6219                           ;psect for function _I2C_Transmit
  6220  0DDA                     _I2C_Transmit:	
  6221                           
  6222                           ;incstack = 0
  6223                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6224                           ;I2C_Transmit@I2Cx stored from wreg
  6225  0DDA  0020               	movlb	0	; select bank0
  6226  0DDB  00B0               	movwf	I2C_Transmit@I2Cx
  6227                           
  6228                           ;I2C_Common.c: 25: int8_t result;
  6229                           ;I2C_Common.c: 27: switch(I2Cx)
  6230  0DDC  2DEE               	goto	l2186
  6231  0DDD                     l2182:	
  6232                           ;I2C_Common.c: 28: {
  6233                           ;I2C_Common.c: 33: case I2C2_MODULE:
  6234                           
  6235                           
  6236                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  6237  0DDD  082B               	movf	I2C_Transmit@pData,w
  6238  0DDE  00AD               	movwf	??_I2C_Transmit
  6239  0DDF  082D               	movf	??_I2C_Transmit,w
  6240  0DE0  00A2               	movwf	I2C2_Transmit@pData
  6241  0DE1  082C               	movf	I2C_Transmit@size,w
  6242  0DE2  00AE               	movwf	??_I2C_Transmit+1
  6243  0DE3  082E               	movf	??_I2C_Transmit+1,w
  6244  0DE4  00A3               	movwf	I2C2_Transmit@size
  6245  0DE5  082A               	movf	I2C_Transmit@address,w
  6246  0DE6  3184  2453  318D   	fcall	_I2C2_Transmit
  6247  0DE9  0020               	movlb	0	; select bank0
  6248  0DEA  00AF               	movwf	??_I2C_Transmit+2
  6249  0DEB  082F               	movf	??_I2C_Transmit+2,w
  6250  0DEC  00B1               	movwf	I2C_Transmit@result
  6251                           
  6252                           ;I2C_Common.c: 36: }
  6253                           
  6254                           ;I2C_Common.c: 35: break;
  6255  0DED  2DF3               	goto	l2188
  6256  0DEE                     l2186:	
  6257  0DEE  0830               	movf	I2C_Transmit@I2Cx,w
  6258                           
  6259                           ; Switch size 1, requested type "space"
  6260                           ; Number of cases is 1, Range of values is 1 to 1
  6261                           ; switch strategies available:
  6262                           ; Name         Instructions Cycles
  6263                           ; simple_byte            4     3 (average)
  6264                           ; direct_byte           11     9 (fixed)
  6265                           ; jumptable            263     9 (fixed)
  6266                           ;	Chosen strategy is simple_byte
  6267  0DEF  3A01               	xorlw	1	; case 1
  6268  0DF0  1903               	skipnz
  6269  0DF1  2DDD               	goto	l2182
  6270  0DF2  2DF3               	goto	l2188
  6271  0DF3                     l2188:	
  6272                           
  6273                           ;I2C_Common.c: 37: return result;
  6274  0DF3  0831               	movf	I2C_Transmit@result,w
  6275  0DF4  0008               	return
  6276  0DF5                     __end_of_I2C_Transmit:	
  6277                           
  6278                           	psect	text28
  6279  0453                     __ptext28:	
  6280 ;; *************** function _I2C2_Transmit *****************
  6281 ;; Defined at:
  6282 ;;		line 52 in file "I2C2.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;  address         1    wreg     unsigned char 
  6285 ;;  pData           1    2[BANK0 ] PTR unsigned char 
  6286 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6287 ;;  size            1    3[BANK0 ] unsigned char 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;  address         1    6[BANK0 ] unsigned char 
  6290 ;;  i               1    8[BANK0 ] unsigned char 
  6291 ;;  i               1    7[BANK0 ] unsigned char 
  6292 ;;  result          1    9[BANK0 ] char 
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      char 
  6295 ;; Registers used:
  6296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6302 ;;      Params:         0       2       0       0       0       0
  6303 ;;      Locals:         0       4       0       0       0       0
  6304 ;;      Temps:          0       2       0       0       0       0
  6305 ;;      Totals:         0       8       0       0       0       0
  6306 ;;Total ram usage:        8 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    3
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_I2C_Transmit
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           
  6317                           ;psect for function _I2C2_Transmit
  6318  0453                     _I2C2_Transmit:	
  6319                           
  6320                           ;incstack = 0
  6321                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  6322                           ;I2C2_Transmit@address stored from wreg
  6323  0453  0020               	movlb	0	; select bank0
  6324  0454  00A6               	movwf	I2C2_Transmit@address
  6325                           
  6326                           ;I2C2.c: 54: int8_t result = 0;
  6327  0455  01A9               	clrf	I2C2_Transmit@result
  6328                           
  6329                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  6330  0456  2CDF               	goto	l2134
  6331  0457                     l2090:	
  6332                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6333                           
  6334                           ;I2C2.c: 57: {
  6335                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  6336                           
  6337  0457  3005               	movlw	5
  6338  0458  0024               	movlb	4	; select bank4
  6339  0459  051C               	andwf	28,w	;volatile
  6340  045A  0020               	movlb	0	; select bank0
  6341  045B  00A4               	movwf	??_I2C2_Transmit
  6342  045C  0024               	movlb	4	; select bank4
  6343  045D  081E               	movf	30,w	;volatile
  6344  045E  391F               	andlw	31
  6345  045F  0020               	movlb	0	; select bank0
  6346  0460  0424               	iorwf	??_I2C2_Transmit,w
  6347  0461  1D03               	btfss	3,2
  6348  0462  2C57               	goto	l2090
  6349                           
  6350                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  6351  0463  0024               	movlb	4	; select bank4
  6352  0464  141E               	bsf	30,0	;volatile
  6353  0465                     l2092:	
  6354                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6355                           
  6356  0465  3005               	movlw	5
  6357  0466  0024               	movlb	4	; select bank4
  6358  0467  051C               	andwf	28,w	;volatile
  6359  0468  0020               	movlb	0	; select bank0
  6360  0469  00A4               	movwf	??_I2C2_Transmit
  6361  046A  0024               	movlb	4	; select bank4
  6362  046B  081E               	movf	30,w	;volatile
  6363  046C  391F               	andlw	31
  6364  046D  0020               	movlb	0	; select bank0
  6365  046E  0424               	iorwf	??_I2C2_Transmit,w
  6366  046F  1D03               	btfss	3,2
  6367  0470  2C65               	goto	l2092
  6368                           
  6369                           ;I2C2.c: 63: SSP2BUF = address << 1;
  6370  0471  3526               	lslf	I2C2_Transmit@address,w
  6371  0472  0024               	movlb	4	; select bank4
  6372  0473  0099               	movwf	25	;volatile
  6373  0474                     l469:	
  6374                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  6375                           
  6376  0474  191C               	btfsc	28,2	;volatile
  6377  0475  2C74               	goto	l469
  6378                           
  6379                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  6380  0476  3000               	movlw	0
  6381  0477  1B1E               	btfsc	30,6	;volatile
  6382  0478  3001               	movlw	1
  6383  0479  0020               	movlb	0	; select bank0
  6384  047A  00A9               	movwf	I2C2_Transmit@result
  6385                           
  6386                           ;I2C2.c: 67: if (!result)
  6387  047B  0829               	movf	I2C2_Transmit@result,w
  6388  047C  1D03               	btfss	3,2
  6389  047D  2CAB               	goto	l2116
  6390                           
  6391                           ;I2C2.c: 68: {
  6392                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  6393  047E  01A7               	clrf	I2C2_Transmit@i
  6394  047F  2C84               	goto	l2114
  6395  0480                     l2112:	
  6396                           ;I2C2.c: 79: break;
  6397                           
  6398  0480  3001               	movlw	1
  6399  0481  00A4               	movwf	??_I2C2_Transmit
  6400  0482  0824               	movf	??_I2C2_Transmit,w
  6401  0483  07A7               	addwf	I2C2_Transmit@i,f
  6402  0484                     l2114:	
  6403  0484  0823               	movf	I2C2_Transmit@size,w
  6404  0485  0227               	subwf	I2C2_Transmit@i,w
  6405  0486  1803               	btfsc	3,0
  6406  0487  2CAB               	goto	l2116
  6407  0488                     l2102:	
  6408                           ;I2C2.c: 70: {
  6409                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6410                           
  6411  0488  3005               	movlw	5
  6412  0489  0024               	movlb	4	; select bank4
  6413  048A  051C               	andwf	28,w	;volatile
  6414  048B  0020               	movlb	0	; select bank0
  6415  048C  00A4               	movwf	??_I2C2_Transmit
  6416  048D  0024               	movlb	4	; select bank4
  6417  048E  081E               	movf	30,w	;volatile
  6418  048F  391F               	andlw	31
  6419  0490  0020               	movlb	0	; select bank0
  6420  0491  0424               	iorwf	??_I2C2_Transmit,w
  6421  0492  1D03               	btfss	3,2
  6422  0493  2C88               	goto	l2102
  6423                           
  6424                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  6425  0494  0827               	movf	I2C2_Transmit@i,w
  6426  0495  0722               	addwf	I2C2_Transmit@pData,w
  6427  0496  00A4               	movwf	??_I2C2_Transmit
  6428  0497  0824               	movf	??_I2C2_Transmit,w
  6429  0498  0086               	movwf	6
  6430  0499  0187               	clrf	7
  6431  049A  0801               	movf	1,w
  6432  049B  0024               	movlb	4	; select bank4
  6433  049C  0099               	movwf	25	;volatile
  6434  049D                     l478:	
  6435                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  6436                           
  6437  049D  191C               	btfsc	28,2	;volatile
  6438  049E  2C9D               	goto	l478
  6439                           
  6440                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  6441  049F  3000               	movlw	0
  6442  04A0  1B1E               	btfsc	30,6	;volatile
  6443  04A1  3001               	movlw	1
  6444  04A2  0020               	movlb	0	; select bank0
  6445  04A3  00A9               	movwf	I2C2_Transmit@result
  6446                           
  6447                           ;I2C2.c: 76: if (result)
  6448  04A4  0829               	movf	I2C2_Transmit@result,w
  6449  04A5  1903               	btfsc	3,2
  6450  04A6  2C80               	goto	l2112
  6451                           
  6452                           ;I2C2.c: 77: {
  6453                           ;I2C2.c: 78: result = 2;
  6454  04A7  3002               	movlw	2
  6455  04A8  00A4               	movwf	??_I2C2_Transmit
  6456  04A9  0824               	movf	??_I2C2_Transmit,w
  6457  04AA  00A9               	movwf	I2C2_Transmit@result
  6458  04AB                     l2116:	
  6459                           ;I2C2.c: 80: }
  6460                           ;I2C2.c: 81: }
  6461                           ;I2C2.c: 82: }
  6462                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6463                           
  6464  04AB  3005               	movlw	5
  6465  04AC  0024               	movlb	4	; select bank4
  6466  04AD  051C               	andwf	28,w	;volatile
  6467  04AE  0020               	movlb	0	; select bank0
  6468  04AF  00A4               	movwf	??_I2C2_Transmit
  6469  04B0  0024               	movlb	4	; select bank4
  6470  04B1  081E               	movf	30,w	;volatile
  6471  04B2  391F               	andlw	31
  6472  04B3  0020               	movlb	0	; select bank0
  6473  04B4  0424               	iorwf	??_I2C2_Transmit,w
  6474  04B5  1D03               	btfss	3,2
  6475  04B6  2CAB               	goto	l2116
  6476                           
  6477                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  6478  04B7  0024               	movlb	4	; select bank4
  6479  04B8  151E               	bsf	30,2	;volatile
  6480                           
  6481                           ;I2C2.c: 86: break;
  6482  04B9  2CE8               	goto	l2136
  6483  04BA                     l487:	
  6484                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  6485                           
  6486                           
  6487                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  6488  04BA  0024               	movlb	4	; select bank4
  6489  04BB  1D9C               	btfss	28,3	;volatile
  6490  04BC  1E1C               	btfss	28,4	;volatile
  6491  04BD  2CDC               	goto	l2130
  6492                           
  6493                           ;I2C2.c: 90: {
  6494                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  6495  04BE  0020               	movlb	0	; select bank0
  6496  04BF  01A8               	clrf	I2C2_Transmit@i_574
  6497  04C0                     l2126:	
  6498  04C0  0823               	movf	I2C2_Transmit@size,w
  6499  04C1  0228               	subwf	I2C2_Transmit@i_574,w
  6500  04C2  1803               	btfsc	3,0
  6501  04C3  2CD7               	goto	l2128
  6502                           
  6503                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  6504  04C4  0828               	movf	I2C2_Transmit@i_574,w
  6505  04C5  0722               	addwf	I2C2_Transmit@pData,w
  6506  04C6  00A4               	movwf	??_I2C2_Transmit
  6507  04C7  0824               	movf	??_I2C2_Transmit,w
  6508  04C8  0086               	movwf	6
  6509  04C9  0187               	clrf	7
  6510  04CA  0801               	movf	1,w
  6511  04CB  00A5               	movwf	??_I2C2_Transmit+1
  6512  04CC  0828               	movf	I2C2_Transmit@i_574,w
  6513  04CD  3EBA               	addlw	(low (_I2C2_Config| 0))& (0+255)
  6514  04CE  0086               	movwf	6
  6515  04CF  0187               	clrf	7
  6516  04D0  0825               	movf	??_I2C2_Transmit+1,w
  6517  04D1  0081               	movwf	1
  6518  04D2  3001               	movlw	1
  6519  04D3  00A4               	movwf	??_I2C2_Transmit
  6520  04D4  0824               	movf	??_I2C2_Transmit,w
  6521  04D5  07A8               	addwf	I2C2_Transmit@i_574,f
  6522  04D6  2CC0               	goto	l2126
  6523  04D7                     l2128:	
  6524                           
  6525                           ;I2C2.c: 93: result = size;
  6526  04D7  0823               	movf	I2C2_Transmit@size,w
  6527  04D8  00A4               	movwf	??_I2C2_Transmit
  6528  04D9  0824               	movf	??_I2C2_Transmit,w
  6529  04DA  00A9               	movwf	I2C2_Transmit@result
  6530                           
  6531                           ;I2C2.c: 94: }
  6532  04DB  2CE8               	goto	l2136
  6533  04DC                     l2130:	
  6534                           
  6535                           ;I2C2.c: 95: else
  6536                           ;I2C2.c: 96: result = 0;
  6537  04DC  0020               	movlb	0	; select bank0
  6538  04DD  01A9               	clrf	I2C2_Transmit@result
  6539                           
  6540                           ;I2C2.c: 98: }
  6541                           
  6542                           ;I2C2.c: 97: break;
  6543  04DE  2CE8               	goto	l2136
  6544  04DF                     l2134:	
  6545  04DF  0021               	movlb	1	; select bank1
  6546  04E0  084C               	movf	(_I2C2_Config^(0+128)+18),w
  6547                           
  6548                           ; Switch size 1, requested type "space"
  6549                           ; Number of cases is 2, Range of values is 0 to 1
  6550                           ; switch strategies available:
  6551                           ; Name         Instructions Cycles
  6552                           ; simple_byte            7     4 (average)
  6553                           ; direct_byte           10     6 (fixed)
  6554                           ; jumptable            260     6 (fixed)
  6555                           ;	Chosen strategy is simple_byte
  6556  04E1  3A00               	xorlw	0	; case 0
  6557  04E2  1903               	skipnz
  6558  04E3  2C57               	goto	l2090
  6559  04E4  3A01               	xorlw	1	; case 1
  6560  04E5  1903               	skipnz
  6561  04E6  2CBA               	goto	l487
  6562  04E7  2CE8               	goto	l2136
  6563  04E8                     l2136:	
  6564                           
  6565                           ;I2C2.c: 100: return result;
  6566  04E8  0020               	movlb	0	; select bank0
  6567  04E9  0829               	movf	I2C2_Transmit@result,w
  6568  04EA  0008               	return
  6569  04EB                     __end_of_I2C2_Transmit:	
  6570                           
  6571                           	psect	text29
  6572  0DC1                     __ptext29:	
  6573 ;; *************** function _I2C_Init *****************
  6574 ;; Defined at:
  6575 ;;		line 6 in file "I2C_Common.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  I2Cx            1    wreg     enum E3275
  6578 ;;  address         1    7[BANK0 ] unsigned char 
  6579 ;;  mode            1    8[BANK0 ] enum E3266
  6580 ;;  Speed           1    9[BANK0 ] enum E3270
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;  I2Cx            1   12[BANK0 ] enum E3275
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1    wreg      void 
  6585 ;; Registers used:
  6586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6592 ;;      Params:         0       3       0       0       0       0
  6593 ;;      Locals:         0       1       0       0       0       0
  6594 ;;      Temps:          0       2       0       0       0       0
  6595 ;;      Totals:         0       6       0       0       0       0
  6596 ;;Total ram usage:        6 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    5
  6599 ;; This function calls:
  6600 ;;		_I2C2_Setting
  6601 ;; This function is called by:
  6602 ;;		_DAC_Initialize
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           
  6607                           ;psect for function _I2C_Init
  6608  0DC1                     _I2C_Init:	
  6609                           
  6610                           ;incstack = 0
  6611                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6612                           ;I2C_Init@I2Cx stored from wreg
  6613  0DC1  0020               	movlb	0	; select bank0
  6614  0DC2  00AC               	movwf	I2C_Init@I2Cx
  6615                           
  6616                           ;I2C_Common.c: 8: switch(I2Cx)
  6617  0DC3  2DD1               	goto	l2178
  6618  0DC4                     l2174:	
  6619                           ;I2C_Common.c: 9: {
  6620                           ;I2C_Common.c: 14: case I2C2_MODULE:
  6621                           
  6622                           
  6623                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  6624  0DC4  0828               	movf	I2C_Init@mode,w
  6625  0DC5  00AA               	movwf	??_I2C_Init
  6626  0DC6  082A               	movf	??_I2C_Init,w
  6627  0DC7  00A3               	movwf	I2C2_Setting@mode
  6628  0DC8  0829               	movf	I2C_Init@Speed,w
  6629  0DC9  00AB               	movwf	??_I2C_Init+1
  6630  0DCA  082B               	movf	??_I2C_Init+1,w
  6631  0DCB  00A4               	movwf	I2C2_Setting@Speed
  6632  0DCC  0827               	movf	I2C_Init@address,w
  6633  0DCD  3187  278B  318D   	fcall	_I2C2_Setting
  6634                           
  6635                           ;I2C_Common.c: 17: }
  6636                           
  6637                           ;I2C_Common.c: 16: break;
  6638  0DD0  2DD7               	goto	l54
  6639  0DD1                     l2178:	
  6640  0DD1  0020               	movlb	0	; select bank0
  6641  0DD2  082C               	movf	I2C_Init@I2Cx,w
  6642                           
  6643                           ; Switch size 1, requested type "space"
  6644                           ; Number of cases is 1, Range of values is 1 to 1
  6645                           ; switch strategies available:
  6646                           ; Name         Instructions Cycles
  6647                           ; simple_byte            4     3 (average)
  6648                           ; direct_byte           11     9 (fixed)
  6649                           ; jumptable            263     9 (fixed)
  6650                           ;	Chosen strategy is simple_byte
  6651  0DD3  3A01               	xorlw	1	; case 1
  6652  0DD4  1903               	skipnz
  6653  0DD5  2DC4               	goto	l2174
  6654  0DD6  2DD7               	goto	l54
  6655  0DD7                     l54:	
  6656                           
  6657                           ;I2C_Common.c: 19: PEIE = 1;
  6658  0DD7  170B               	bsf	11,6	;volatile
  6659                           
  6660                           ;I2C_Common.c: 20: GIE = 1;
  6661  0DD8  178B               	bsf	11,7	;volatile
  6662  0DD9  0008               	return
  6663  0DDA                     __end_of_I2C_Init:	
  6664                           
  6665                           	psect	text30
  6666  078B                     __ptext30:	
  6667 ;; *************** function _I2C2_Setting *****************
  6668 ;; Defined at:
  6669 ;;		line 15 in file "I2C2.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  address         1    wreg     unsigned char 
  6672 ;;  mode            1    3[BANK0 ] enum E3266
  6673 ;;  Speed           1    4[BANK0 ] enum E3270
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  address         1    6[BANK0 ] unsigned char 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1    wreg      void 
  6678 ;; Registers used:
  6679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6685 ;;      Params:         0       2       0       0       0       0
  6686 ;;      Locals:         0       1       0       0       0       0
  6687 ;;      Temps:          0       1       0       0       0       0
  6688 ;;      Totals:         0       4       0       0       0       0
  6689 ;;Total ram usage:        4 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    4
  6692 ;; This function calls:
  6693 ;;		_I2C2_PinInit
  6694 ;; This function is called by:
  6695 ;;		_I2C_Init
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function _I2C2_Setting
  6701  078B                     _I2C2_Setting:	
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6705                           ;I2C2_Setting@address stored from wreg
  6706  078B  0020               	movlb	0	; select bank0
  6707  078C  00A6               	movwf	I2C2_Setting@address
  6708                           
  6709                           ;I2C2.c: 17: I2C2_PinInit();
  6710  078D  318C  24D6  3187   	fcall	_I2C2_PinInit
  6711                           
  6712                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  6713  0790  0020               	movlb	0	; select bank0
  6714  0791  0823               	movf	I2C2_Setting@mode,w
  6715  0792  00A5               	movwf	??_I2C2_Setting
  6716  0793  0825               	movf	??_I2C2_Setting,w
  6717  0794  0021               	movlb	1	; select bank1
  6718  0795  00CC               	movwf	(_I2C2_Config^(0+128)+18)
  6719                           
  6720                           ;I2C2.c: 20: switch(mode)
  6721  0796  2FBF               	goto	l2086
  6722  0797                     l452:	
  6723                           ;I2C2.c: 21: {
  6724                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  6725                           
  6726                           
  6727                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  6728  0797  0024               	movlb	4	; select bank4
  6729  0798  159D               	bsf	29,3	;volatile
  6730                           
  6731                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6732  0799  0020               	movlb	0	; select bank0
  6733  079A  0824               	movf	I2C2_Setting@Speed,w
  6734  079B  1D03               	btfss	3,2
  6735  079C  2FA1               	goto	l2064
  6736                           
  6737                           ;I2C2.c: 25: {
  6738                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  6739  079D  0024               	movlb	4	; select bank4
  6740  079E  179C               	bsf	28,7	;volatile
  6741                           
  6742                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  6743  079F  304F               	movlw	79
  6744  07A0  2FAB               	goto	L3
  6745  07A1                     l2064:	
  6746                           ;I2C2.c: 28: }
  6747                           
  6748                           
  6749                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6750  07A1  0020               	movlb	0	; select bank0
  6751  07A2  0324               	decf	I2C2_Setting@Speed,w
  6752  07A3  1D03               	btfss	3,2
  6753  07A4  2FAC               	goto	l2070
  6754                           
  6755                           ;I2C2.c: 30: {
  6756                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  6757  07A5  307F               	movlw	127
  6758  07A6  00A5               	movwf	??_I2C2_Setting
  6759  07A7  0825               	movf	??_I2C2_Setting,w
  6760  07A8  0024               	movlb	4	; select bank4
  6761  07A9  059C               	andwf	28,f	;volatile
  6762                           
  6763                           ;I2C2.c: 32: SSP2ADD = 0x13;
  6764  07AA  3013               	movlw	19
  6765  07AB                     L3:	
  6766  07AB  009A               	movwf	26	;volatile
  6767  07AC                     l2070:	
  6768                           
  6769                           ;I2C2.c: 33: }
  6770                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  6771  07AC  0024               	movlb	4	; select bank4
  6772  07AD  2FBD               	goto	l2082
  6773  07AE                     l2072:	
  6774                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  6775                           
  6776                           ;I2C2.c: 35: break;
  6777                           
  6778                           
  6779                           ;I2C2.c: 38: SSP2STAT = 0x00;
  6780  07AE  0024               	movlb	4	; select bank4
  6781  07AF  019C               	clrf	28	;volatile
  6782                           
  6783                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  6784  07B0  3006               	movlw	6
  6785  07B1  0020               	movlb	0	; select bank0
  6786  07B2  00A5               	movwf	??_I2C2_Setting
  6787  07B3  0825               	movf	??_I2C2_Setting,w
  6788  07B4  0024               	movlb	4	; select bank4
  6789  07B5  049D               	iorwf	29,f	;volatile
  6790                           
  6791                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  6792  07B6  141E               	bsf	30,0	;volatile
  6793                           
  6794                           ;I2C2.c: 41: SSP2ADD = address << 1;
  6795  07B7  0020               	movlb	0	; select bank0
  6796  07B8  3526               	lslf	I2C2_Setting@address,w
  6797  07B9  0024               	movlb	4	; select bank4
  6798  07BA  009A               	movwf	26	;volatile
  6799                           
  6800                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  6801  07BB  30FE               	movlw	254
  6802  07BC  009B               	movwf	27	;volatile
  6803  07BD                     l2082:	
  6804                           
  6805                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  6806  07BD  169D               	bsf	29,5	;volatile
  6807                           
  6808                           ;I2C2.c: 45: }
  6809                           
  6810                           ;I2C2.c: 44: break;
  6811  07BE  2FC8               	goto	l456
  6812  07BF                     l2086:	
  6813  07BF  0020               	movlb	0	; select bank0
  6814  07C0  0823               	movf	I2C2_Setting@mode,w
  6815                           
  6816                           ; Switch size 1, requested type "space"
  6817                           ; Number of cases is 2, Range of values is 0 to 1
  6818                           ; switch strategies available:
  6819                           ; Name         Instructions Cycles
  6820                           ; simple_byte            7     4 (average)
  6821                           ; direct_byte           10     6 (fixed)
  6822                           ; jumptable            260     6 (fixed)
  6823                           ;	Chosen strategy is simple_byte
  6824  07C1  3A00               	xorlw	0	; case 0
  6825  07C2  1903               	skipnz
  6826  07C3  2F97               	goto	l452
  6827  07C4  3A01               	xorlw	1	; case 1
  6828  07C5  1903               	skipnz
  6829  07C6  2FAE               	goto	l2072
  6830  07C7  2FC8               	goto	l456
  6831  07C8                     l456:	
  6832                           
  6833                           ;I2C2.c: 46: SSP2IE = 1;
  6834  07C8  0021               	movlb	1	; select bank1
  6835  07C9  1414               	bsf	20,0	;volatile
  6836                           
  6837                           ;I2C2.c: 47: BCL2IE = 1;
  6838  07CA  1494               	bsf	20,1	;volatile
  6839                           
  6840                           ;I2C2.c: 48: SSP2IF = 0;
  6841  07CB  0020               	movlb	0	; select bank0
  6842  07CC  1014               	bcf	20,0	;volatile
  6843                           
  6844                           ;I2C2.c: 49: BCL2IF = 0;
  6845  07CD  1094               	bcf	20,1	;volatile
  6846  07CE  0008               	return
  6847  07CF                     __end_of_I2C2_Setting:	
  6848                           
  6849                           	psect	text31
  6850  0CD6                     __ptext31:	
  6851 ;; *************** function _I2C2_PinInit *****************
  6852 ;; Defined at:
  6853 ;;		line 9 in file "I2C2.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;		None
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;		None
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		wreg, status,2, status,0
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6867 ;;      Params:         0       0       0       0       0       0
  6868 ;;      Locals:         0       0       0       0       0       0
  6869 ;;      Temps:          0       1       0       0       0       0
  6870 ;;      Totals:         0       1       0       0       0       0
  6871 ;;Total ram usage:        1 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    3
  6874 ;; This function calls:
  6875 ;;		Nothing
  6876 ;; This function is called by:
  6877 ;;		_I2C2_Setting
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           
  6882                           ;psect for function _I2C2_PinInit
  6883  0CD6                     _I2C2_PinInit:	
  6884                           
  6885                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  6886                           
  6887                           ;incstack = 0
  6888                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  6889  0CD6  3024               	movlw	36
  6890  0CD7  0020               	movlb	0	; select bank0
  6891  0CD8  00A2               	movwf	??_I2C2_PinInit
  6892  0CD9  0822               	movf	??_I2C2_PinInit,w
  6893  0CDA  0021               	movlb	1	; select bank1
  6894  0CDB  048D               	iorwf	13,f	;volatile
  6895                           
  6896                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  6897  0CDC  30DB               	movlw	219
  6898  0CDD  0020               	movlb	0	; select bank0
  6899  0CDE  00A2               	movwf	??_I2C2_PinInit
  6900  0CDF  0822               	movf	??_I2C2_PinInit,w
  6901  0CE0  0023               	movlb	3	; select bank3
  6902  0CE1  058D               	andwf	13,f	;volatile
  6903  0CE2  0008               	return
  6904  0CE3                     __end_of_I2C2_PinInit:	
  6905                           
  6906                           	psect	text32
  6907  0EB1                     __ptext32:	
  6908 ;; *************** function _Buzzer_Init *****************
  6909 ;; Defined at:
  6910 ;;		line 11 in file "Buzzer.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;		None
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;		None
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  1    wreg      void 
  6917 ;; Registers used:
  6918 ;;		wreg, status,2, status,0
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6924 ;;      Params:         0       0       0       0       0       0
  6925 ;;      Locals:         0       0       0       0       0       0
  6926 ;;      Temps:          0       1       0       0       0       0
  6927 ;;      Totals:         0       1       0       0       0       0
  6928 ;;Total ram usage:        1 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:    3
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_main
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           
  6939                           ;psect for function _Buzzer_Init
  6940  0EB1                     _Buzzer_Init:	
  6941                           
  6942                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  6943                           
  6944                           ;incstack = 0
  6945                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  6946  0EB1  307F               	movlw	127
  6947  0EB2  0020               	movlb	0	; select bank0
  6948  0EB3  00A2               	movwf	??_Buzzer_Init
  6949  0EB4  0822               	movf	??_Buzzer_Init,w
  6950  0EB5  0021               	movlb	1	; select bank1
  6951  0EB6  058C               	andwf	12,f	;volatile
  6952                           
  6953                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  6954  0EB7  307F               	movlw	127
  6955  0EB8  0020               	movlb	0	; select bank0
  6956  0EB9  00A2               	movwf	??_Buzzer_Init
  6957  0EBA  0822               	movf	??_Buzzer_Init,w
  6958  0EBB  0023               	movlb	3	; select bank3
  6959  0EBC  058C               	andwf	12,f	;volatile
  6960                           
  6961                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  6962  0EBD  0022               	movlb	2	; select bank2
  6963  0EBE  159D               	bsf	29,3	;volatile
  6964                           
  6965                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  6966  0EBF  0020               	movlb	0	; select bank0
  6967  0EC0  081C               	movf	28,w	;volatile
  6968                           
  6969                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  6970  0EC1  149C               	bsf	28,1	;volatile
  6971                           
  6972                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  6973  0EC2  151C               	bsf	28,2	;volatile
  6974                           
  6975                           ;Buzzer.c: 21: TMR2 = 0x00;
  6976  0EC3  019A               	clrf	26	;volatile
  6977                           
  6978                           ;Buzzer.c: 22: PR2 = 0xFF;
  6979  0EC4  30FF               	movlw	255
  6980  0EC5  009B               	movwf	27	;volatile
  6981                           
  6982                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  6983  0EC6  303F               	movlw	63
  6984  0EC7  00A2               	movwf	??_Buzzer_Init
  6985  0EC8  0822               	movf	??_Buzzer_Init,w
  6986  0EC9  0025               	movlb	5	; select bank5
  6987  0ECA  059A               	andwf	26,f	;volatile
  6988                           
  6989                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  6990  0ECB  300C               	movlw	12
  6991  0ECC  0020               	movlb	0	; select bank0
  6992  0ECD  00A2               	movwf	??_Buzzer_Init
  6993  0ECE  0822               	movf	??_Buzzer_Init,w
  6994  0ECF  0025               	movlb	5	; select bank5
  6995  0ED0  049A               	iorwf	26,f	;volatile
  6996                           
  6997                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  6998  0ED1  30F3               	movlw	243
  6999  0ED2  0020               	movlb	0	; select bank0
  7000  0ED3  00A2               	movwf	??_Buzzer_Init
  7001  0ED4  0822               	movf	??_Buzzer_Init,w
  7002  0ED5  0025               	movlb	5	; select bank5
  7003  0ED6  059E               	andwf	30,f	;volatile
  7004                           
  7005                           ;Buzzer.c: 28: CCPR2L = 0x00;
  7006  0ED7  0198               	clrf	24	;volatile
  7007  0ED8  0008               	return
  7008  0ED9                     __end_of_Buzzer_Init:	
  7009                           
  7010                           	psect	text33
  7011  0D4C                     __ptext33:	
  7012 ;; *************** function _Basic_Init *****************
  7013 ;; Defined at:
  7014 ;;		line 68 in file "main.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;		None
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;		None
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  1    wreg      char 
  7021 ;; Registers used:
  7022 ;;		wreg, status,2
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7028 ;;      Params:         0       0       0       0       0       0
  7029 ;;      Locals:         0       0       0       0       0       0
  7030 ;;      Temps:          0       0       0       0       0       0
  7031 ;;      Totals:         0       0       0       0       0       0
  7032 ;;Total ram usage:        0 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; Hardware stack levels required when called:    3
  7035 ;; This function calls:
  7036 ;;		Nothing
  7037 ;; This function is called by:
  7038 ;;		_main
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           
  7043                           ;psect for function _Basic_Init
  7044  0D4C                     _Basic_Init:	
  7045                           
  7046                           ;main.c: 70: OSCCON = 0xF0;
  7047                           
  7048                           ;incstack = 0
  7049                           ; Regs used in _Basic_Init: [wreg+status,2]
  7050  0D4C  30F0               	movlw	240
  7051  0D4D  0021               	movlb	1	; select bank1
  7052  0D4E  0099               	movwf	25	;volatile
  7053                           
  7054                           ;main.c: 74: TRISA = 0x00;
  7055  0D4F  018C               	clrf	12	;volatile
  7056                           
  7057                           ;main.c: 75: ANSELA = 0x00;
  7058  0D50  0023               	movlb	3	; select bank3
  7059  0D51  018C               	clrf	12	;volatile
  7060                           
  7061                           ;main.c: 77: TRISB = 0x00;
  7062  0D52  0021               	movlb	1	; select bank1
  7063  0D53  018D               	clrf	13	;volatile
  7064                           
  7065                           ;main.c: 78: ANSELB = 0x00;
  7066  0D54  0023               	movlb	3	; select bank3
  7067  0D55  018D               	clrf	13	;volatile
  7068                           
  7069                           ;main.c: 80: APFCON0 = 0x00;
  7070  0D56  0022               	movlb	2	; select bank2
  7071  0D57  019D               	clrf	29	;volatile
  7072                           
  7073                           ;main.c: 81: APFCON1 = 0x00;
  7074  0D58  019E               	clrf	30	;volatile
  7075                           
  7076                           ;main.c: 83: PORTA = 0x00;
  7077  0D59  0020               	movlb	0	; select bank0
  7078  0D5A  018C               	clrf	12	;volatile
  7079                           
  7080                           ;main.c: 84: PORTB = 0x00;
  7081  0D5B  018D               	clrf	13	;volatile
  7082  0D5C  0008               	return
  7083  0D5D                     __end_of_Basic_Init:	
  7084                           ;main.c: 86: return 0;
  7085                           ;	Return value of _Basic_Init is never used
  7086                           
  7087                           
  7088                           	psect	intentry
  7089  0004                     __pintentry:	
  7090 ;; *************** function _Handler *****************
  7091 ;; Defined at:
  7092 ;;		line 89 in file "main.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;		None
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;		None
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  1    wreg      void 
  7099 ;; Registers used:
  7100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7106 ;;      Params:         0       0       0       0       0       0
  7107 ;;      Locals:         0       0       0       0       0       0
  7108 ;;      Temps:          0       1       0       0       0       0
  7109 ;;      Totals:         0       1       0       0       0       0
  7110 ;;Total ram usage:        1 bytes
  7111 ;; Hardware stack levels used:    1
  7112 ;; Hardware stack levels required when called:    2
  7113 ;; This function calls:
  7114 ;;		_Buzzer_Count1ms
  7115 ;;		_I2C_CommonInterrupt
  7116 ;;		_Timer1_Count1ms
  7117 ;;		_Timer1_DetectAssignCount
  7118 ;;		_Timer6_CheckFlag
  7119 ;;		_mTouch_IntervalDecrement
  7120 ;;		_mTouch_Read
  7121 ;; This function is called by:
  7122 ;;		Interrupt level 1
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126  0004                     _Handler:	
  7127                           
  7128                           ;incstack = 0
  7129  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7130                           
  7131                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7132  0005  3180               	pagesel	$
  7133  0006  0020               	movlb	0	; select bank0
  7134  0007  087F               	movf	127,w
  7135  0008  00A1               	movwf	??_Handler
  7136                           
  7137                           ;main.c: 91: if(Timer1_DetectAssignCount())
  7138  0009  3185  25E4  3180   	fcall	_Timer1_DetectAssignCount
  7139  000C  3A00               	xorlw	0
  7140  000D  1903               	skipnz
  7141  000E  2812               	goto	i1l2920
  7142                           
  7143                           ;main.c: 92: LATA6 = !LATA6;
  7144  000F  3040               	movlw	64
  7145  0010  0022               	movlb	2	; select bank2
  7146  0011  068C               	xorwf	12,f
  7147  0012                     i1l2920:	
  7148                           
  7149                           ;main.c: 94: if(Timer6_CheckFlag())
  7150  0012  318C  24CB  3180   	fcall	_Timer6_CheckFlag
  7151  0015  3A00               	xorlw	0
  7152  0016  1903               	skipnz
  7153  0017  2824               	goto	i1l2928
  7154                           
  7155                           ;main.c: 95: {
  7156                           ;main.c: 96: mTouch_IntervalDecrement();
  7157  0018  318D  253B  3180   	fcall	_mTouch_IntervalDecrement
  7158                           
  7159                           ;main.c: 97: Timer1_Count1ms();
  7160  001B  3184  24EB  3180   	fcall	_Timer1_Count1ms
  7161                           
  7162                           ;main.c: 99: mTouch_Read();
  7163  001E  318E  268C  3180   	fcall	_mTouch_Read
  7164                           
  7165                           ;main.c: 100: Buzzer_Count1ms();
  7166  0021  318D  2594  3180   	fcall	_Buzzer_Count1ms
  7167  0024                     i1l2928:	
  7168                           
  7169                           ;main.c: 101: }
  7170                           ;main.c: 102: I2C_CommonInterrupt();
  7171  0024  318C  2494         	fcall	_I2C_CommonInterrupt
  7172  0026  0020               	movlb	0	; select bank0
  7173  0027  0821               	movf	??_Handler,w
  7174  0028  00FF               	movwf	127
  7175  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7176  002A  0009               	retfie
  7177  002B                     __end_of_Handler:	
  7178                           
  7179                           	psect	text35
  7180  0E8C                     __ptext35:	
  7181 ;; *************** function _mTouch_Read *****************
  7182 ;; Defined at:
  7183 ;;		line 29 in file "mTouch.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;		None
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;		None
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  1    wreg      void 
  7190 ;; Registers used:
  7191 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7197 ;;      Params:         0       0       0       0       0       0
  7198 ;;      Locals:         0       0       0       0       0       0
  7199 ;;      Temps:          1       0       0       0       0       0
  7200 ;;      Totals:         1       0       0       0       0       0
  7201 ;;Total ram usage:        1 bytes
  7202 ;; Hardware stack levels used:    1
  7203 ;; This function calls:
  7204 ;;		Nothing
  7205 ;; This function is called by:
  7206 ;;		_Handler
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           
  7211                           ;psect for function _mTouch_Read
  7212  0E8C                     _mTouch_Read:	
  7213                           
  7214                           ;mTouch.c: 31: static uint8_t channel=0;
  7215                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  7216                           
  7217                           ;incstack = 0
  7218                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7219  0E8C  0020               	movlb	0	; select bank0
  7220  0E8D  086A               	movf	mTouch_Read@channel,w
  7221  0E8E  3EB4               	addlw	(low (_CPS_Data| 0))& (0+255)
  7222  0E8F  0086               	movwf	6
  7223  0E90  0187               	clrf	7
  7224  0E91  0801               	movf	1,w
  7225  0E92  00F0               	movwf	??_mTouch_Read
  7226  0E93  086A               	movf	mTouch_Read@channel,w
  7227  0E94  3EB7               	addlw	(low (_CPS_PreData| 0))& (0+255)
  7228  0E95  0086               	movwf	6
  7229  0E96  0187               	clrf	7
  7230  0E97  0870               	movf	??_mTouch_Read,w
  7231  0E98  0081               	movwf	1
  7232                           
  7233                           ;mTouch.c: 35: CPSCON0 &= ~(0x01<<7);;
  7234  0E99  307F               	movlw	127
  7235  0E9A  00F0               	movwf	??_mTouch_Read
  7236  0E9B  0870               	movf	??_mTouch_Read,w
  7237  0E9C  059E               	andwf	30,f	;volatile
  7238                           
  7239                           ;mTouch.c: 36: CPS_Data[channel] = TMR0;
  7240  0E9D  0815               	movf	21,w	;volatile
  7241  0E9E  00F0               	movwf	??_mTouch_Read
  7242  0E9F  086A               	movf	mTouch_Read@channel,w
  7243  0EA0  3EB4               	addlw	(low (_CPS_Data| 0))& (0+255)
  7244  0EA1  0086               	movwf	6
  7245  0EA2  0187               	clrf	7
  7246  0EA3  0870               	movf	??_mTouch_Read,w
  7247  0EA4  0081               	movwf	1
  7248                           
  7249                           ;mTouch.c: 37: TMR0 = 0x00;
  7250  0EA5  0195               	clrf	21	;volatile
  7251                           
  7252                           ;mTouch.c: 38: CPSCON0 |= (0x01<<7);;
  7253  0EA6  179E               	bsf	30,7	;volatile
  7254                           
  7255                           ;mTouch.c: 40: if(channel++>2)channel = 0;
  7256  0EA7  086A               	movf	mTouch_Read@channel,w
  7257  0EA8  0AEA               	incf	mTouch_Read@channel,f
  7258  0EA9  00F0               	movwf	??_mTouch_Read
  7259  0EAA  3003               	movlw	3
  7260  0EAB  0270               	subwf	??_mTouch_Read,w
  7261  0EAC  1803               	btfsc	3,0
  7262  0EAD  01EA               	clrf	mTouch_Read@channel
  7263                           
  7264                           ;mTouch.c: 41: CPSCON1 = (uint8_t)channel;
  7265  0EAE  086A               	movf	mTouch_Read@channel,w
  7266  0EAF  009F               	movwf	31	;volatile
  7267  0EB0  0008               	return
  7268  0EB1                     __end_of_mTouch_Read:	
  7269                           
  7270                           	psect	text36
  7271  0D3B                     __ptext36:	
  7272 ;; *************** function _mTouch_IntervalDecrement *****************
  7273 ;; Defined at:
  7274 ;;		line 105 in file "main.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7288 ;;      Params:         0       0       0       0       0       0
  7289 ;;      Locals:         0       0       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0       0
  7291 ;;      Totals:         0       0       0       0       0       0
  7292 ;;Total ram usage:        0 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		_Handler
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           
  7302                           ;psect for function _mTouch_IntervalDecrement
  7303  0D3B                     _mTouch_IntervalDecrement:	
  7304                           
  7305                           ;main.c: 107: if(mTouch_Interval[0]>0)
  7306                           
  7307                           ;incstack = 0
  7308                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  7309  0D3B  0020               	movlb	0	; select bank0
  7310  0D3C  0861               	movf	_mTouch_Interval,w
  7311  0D3D  1903               	btfsc	3,2
  7312  0D3E  2D41               	goto	i1l397
  7313                           
  7314                           ;main.c: 108: mTouch_Interval[0]--;
  7315  0D3F  3001               	movlw	1
  7316  0D40  02E1               	subwf	_mTouch_Interval,f
  7317  0D41                     i1l397:	
  7318                           
  7319                           ;main.c: 109: if(mTouch_Interval[1]>0)
  7320  0D41  0862               	movf	_mTouch_Interval+1,w
  7321  0D42  1903               	btfsc	3,2
  7322  0D43  2D46               	goto	i1l398
  7323                           
  7324                           ;main.c: 110: mTouch_Interval[1]--;
  7325  0D44  3001               	movlw	1
  7326  0D45  02E2               	subwf	_mTouch_Interval+1,f
  7327  0D46                     i1l398:	
  7328                           
  7329                           ;main.c: 111: if(mTouch_Interval[2]>0)
  7330  0D46  0863               	movf	_mTouch_Interval+2,w
  7331  0D47  1903               	btfsc	3,2
  7332  0D48  0008               	return
  7333                           
  7334                           ;main.c: 112: mTouch_Interval[2]--;
  7335  0D49  3001               	movlw	1
  7336  0D4A  02E3               	subwf	_mTouch_Interval+2,f
  7337  0D4B  0008               	return
  7338  0D4C                     __end_of_mTouch_IntervalDecrement:	
  7339                           
  7340                           	psect	text37
  7341  0CCB                     __ptext37:	
  7342 ;; *************** function _Timer6_CheckFlag *****************
  7343 ;; Defined at:
  7344 ;;		line 17 in file "Timer6.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;		None
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      unsigned char 
  7351 ;; Registers used:
  7352 ;;		wreg
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7358 ;;      Params:         0       0       0       0       0       0
  7359 ;;      Locals:         0       0       0       0       0       0
  7360 ;;      Temps:          0       0       0       0       0       0
  7361 ;;      Totals:         0       0       0       0       0       0
  7362 ;;Total ram usage:        0 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_Handler
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           
  7372                           ;psect for function _Timer6_CheckFlag
  7373  0CCB                     _Timer6_CheckFlag:	
  7374                           
  7375                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  7376                           
  7377                           ;incstack = 0
  7378                           ; Regs used in _Timer6_CheckFlag: [wreg]
  7379  0CCB  0021               	movlb	1	; select bank1
  7380  0CCC  1D93               	btfss	19,3	;volatile
  7381  0CCD  2CD4               	goto	i1l1682
  7382  0CCE  0020               	movlb	0	; select bank0
  7383  0CCF  1D93               	btfss	19,3	;volatile
  7384  0CD0  2CD4               	goto	i1l1682
  7385                           
  7386                           ;Timer6.c: 20: {
  7387                           ;Timer6.c: 21: TMR6IF = 0;
  7388  0CD1  1193               	bcf	19,3	;volatile
  7389                           
  7390                           ;Timer6.c: 22: return 1;
  7391  0CD2  3001               	movlw	1
  7392  0CD3  0008               	return
  7393  0CD4                     i1l1682:	
  7394                           
  7395                           ;Timer6.c: 23: }
  7396                           ;Timer6.c: 24: return 0;
  7397  0CD4  3000               	movlw	0
  7398  0CD5  0008               	return
  7399  0CD6                     __end_of_Timer6_CheckFlag:	
  7400                           
  7401                           	psect	text38
  7402  05E4                     __ptext38:	
  7403 ;; *************** function _Timer1_DetectAssignCount *****************
  7404 ;; Defined at:
  7405 ;;		line 107 in file "Timer1.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;		None
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      unsigned char 
  7412 ;; Registers used:
  7413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7419 ;;      Params:         0       0       0       0       0       0
  7420 ;;      Locals:         0       0       0       0       0       0
  7421 ;;      Temps:          0       0       0       0       0       0
  7422 ;;      Totals:         0       0       0       0       0       0
  7423 ;;Total ram usage:        0 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    1
  7426 ;; This function calls:
  7427 ;;		i1___lldiv
  7428 ;; This function is called by:
  7429 ;;		_Handler
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           
  7434                           ;psect for function _Timer1_DetectAssignCount
  7435  05E4                     _Timer1_DetectAssignCount:	
  7436                           
  7437                           ;Timer1.c: 109: static uint16_t PreviousTimer1;
  7438                           ;Timer1.c: 111: if((tcnt.Delta_t>600000)&&((uint16_t)TMR1==PreviousTimer1))
  7439                           
  7440                           ;incstack = 0
  7441                           ; Regs used in _Timer1_DetectAssignCount: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  7442  05E4  0020               	movlb	0	; select bank0
  7443  05E5  085E               	movf	_tcnt+5,w
  7444  05E6  1D03               	btfss	3,2
  7445  05E7  2DF0               	goto	i1l2564
  7446  05E8  30C1               	movlw	193
  7447  05E9  025B               	subwf	_tcnt+2,w
  7448  05EA  3027               	movlw	39
  7449  05EB  3B5C               	subwfb	_tcnt+3,w
  7450  05EC  3009               	movlw	9
  7451  05ED  3B5D               	subwfb	_tcnt+4,w
  7452  05EE  1C03               	btfss	3,0
  7453  05EF  2E01               	goto	i1l199
  7454  05F0                     i1l2564:	
  7455  05F0  0867               	movf	Timer1_DetectAssignCount@PreviousTimer1+1,w
  7456  05F1  0617               	xorwf	23,w	;volatile
  7457  05F2  1D03               	skipz
  7458  05F3  2DF6               	goto	u196_25
  7459  05F4  0866               	movf	Timer1_DetectAssignCount@PreviousTimer1,w
  7460  05F5  0616               	xorwf	22,w	;volatile
  7461  05F6                     u196_25:	
  7462  05F6  1D03               	skipz
  7463  05F7  2E01               	goto	i1l199
  7464                           
  7465                           ;Timer1.c: 112: cnts.SigmaCPS = 0;
  7466  05F8  3000               	movlw	0
  7467  05F9  0021               	movlb	1	; select bank1
  7468  05FA  00A7               	movwf	((_cnts+3)^(0+128)+4)
  7469  05FB  3000               	movlw	0
  7470  05FC  00A6               	movwf	((_cnts+2)^(0+128)+4)
  7471  05FD  3000               	movlw	0
  7472  05FE  00A5               	movwf	((_cnts+1)^(0+128)+4)
  7473  05FF  3000               	movlw	0
  7474  0600  00A4               	movwf	(_cnts^(0+128)+4)
  7475  0601                     i1l199:	
  7476                           
  7477                           ;Timer1.c: 113: PreviousTimer1 = (uint16_t)TMR1;
  7478  0601  0020               	movlb	0	; select bank0
  7479  0602  0817               	movf	23,w	;volatile
  7480  0603  00E7               	movwf	Timer1_DetectAssignCount@PreviousTimer1+1
  7481  0604  0816               	movf	22,w	;volatile
  7482  0605  00E6               	movwf	Timer1_DetectAssignCount@PreviousTimer1
  7483                           
  7484                           ;Timer1.c: 115: if(TMR1IF&&TMR1IE)
  7485  0606  1C11               	btfss	17,0	;volatile
  7486  0607  2E4C               	goto	i1l2592
  7487  0608  0021               	movlb	1	; select bank1
  7488  0609  1C11               	btfss	17,0	;volatile
  7489  060A  2E4C               	goto	i1l2592
  7490                           
  7491                           ;Timer1.c: 116: {
  7492                           ;Timer1.c: 117: cnts.SigmaDeltaCount+= 10UL;
  7493  060B  300A               	movlw	10
  7494  060C  07A0               	addwf	_cnts^(0+128),f
  7495  060D  3000               	movlw	0
  7496  060E  3DA1               	addwfc	(_cnts+1)^(0+128),f
  7497  060F  3000               	movlw	0
  7498  0610  3DA2               	addwfc	(_cnts+2)^(0+128),f
  7499  0611  3000               	movlw	0
  7500  0612  3DA3               	addwfc	(_cnts+3)^(0+128),f
  7501                           
  7502                           ;Timer1.c: 119: cnts.SigmaCPS += (uint32_t)((10UL * 1000UL) / tcnt.Delta_t);
  7503  0613  3002               	movlw	2
  7504  0614  3E59               	addlw	(low (_tcnt| 0))& (0+255)
  7505  0615  0086               	movwf	6
  7506  0616  0187               	clrf	7
  7507  0617  3F40               	moviw [0]fsr1
  7508  0618  00F0               	movwf	i1___lldiv@divisor
  7509  0619  3F41               	moviw [1]fsr1
  7510  061A  00F1               	movwf	i1___lldiv@divisor+1
  7511  061B  3F42               	moviw [2]fsr1
  7512  061C  00F2               	movwf	i1___lldiv@divisor+2
  7513  061D  3F43               	moviw [3]fsr1
  7514  061E  00F3               	movwf	i1___lldiv@divisor+3
  7515  061F  3000               	movlw	0
  7516  0620  00F7               	movwf	i1___lldiv@dividend+3
  7517  0621  3000               	movlw	0
  7518  0622  00F6               	movwf	i1___lldiv@dividend+2
  7519  0623  3027               	movlw	39
  7520  0624  00F5               	movwf	i1___lldiv@dividend+1
  7521  0625  3010               	movlw	16
  7522  0626  00F4               	movwf	i1___lldiv@dividend
  7523  0627  3186  26F5         	fcall	i1___lldiv
  7524  0629  0870               	movf	?i1___lldiv,w
  7525  062A  0021               	movlb	1	; select bank1
  7526  062B  07A4               	addwf	(_cnts^(0+128)+4),f
  7527  062C  0871               	movf	?i1___lldiv+1,w
  7528  062D  3DA5               	addwfc	((_cnts+1)^(0+128)+4),f
  7529  062E  0872               	movf	?i1___lldiv+2,w
  7530  062F  3DA6               	addwfc	((_cnts+2)^(0+128)+4),f
  7531  0630  0873               	movf	?i1___lldiv+3,w
  7532  0631  3DA7               	addwfc	((_cnts+3)^(0+128)+4),f
  7533                           
  7534                           ;Timer1.c: 120: cnts.Num_of_Detect++;
  7535  0632  3001               	movlw	1
  7536  0633  07B0               	addwf	(_cnts^(0+128)+16),f
  7537  0634  3000               	movlw	0
  7538  0635  3DB1               	addwfc	((_cnts+1)^(0+128)+16),f
  7539  0636  3000               	movlw	0
  7540  0637  3DB2               	addwfc	((_cnts+2)^(0+128)+16),f
  7541  0638  3000               	movlw	0
  7542  0639  3DB3               	addwfc	((_cnts+3)^(0+128)+16),f
  7543                           
  7544                           ;Timer1.c: 122: tcnt.Delta_t = 0;
  7545  063A  3000               	movlw	0
  7546  063B  0020               	movlb	0	; select bank0
  7547  063C  00DE               	movwf	_tcnt+5
  7548  063D  3000               	movlw	0
  7549  063E  00DD               	movwf	_tcnt+4
  7550  063F  3000               	movlw	0
  7551  0640  00DC               	movwf	_tcnt+3
  7552  0641  3000               	movlw	0
  7553  0642  00DB               	movwf	_tcnt+2
  7554                           
  7555                           ;Timer1.c: 123: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF-10UL+1; TMR1ON = 1; };
  7556  0643  1018               	bcf	24,0	;volatile
  7557  0644  30FF               	movlw	255
  7558  0645  0097               	movwf	23	;volatile
  7559  0646  30F6               	movlw	246
  7560  0647  0096               	movwf	22	;volatile
  7561  0648  1418               	bsf	24,0	;volatile
  7562                           
  7563                           ;Timer1.c: 124: TMR1IF = 0;
  7564  0649  1011               	bcf	17,0	;volatile
  7565                           
  7566                           ;Timer1.c: 125: return 1;
  7567  064A  3001               	movlw	1
  7568  064B  0008               	return
  7569  064C                     i1l2592:	
  7570                           
  7571                           ;Timer1.c: 126: }
  7572                           ;Timer1.c: 127: return 0;
  7573  064C  3000               	movlw	0
  7574  064D  0008               	return
  7575  064E                     __end_of_Timer1_DetectAssignCount:	
  7576                           
  7577                           	psect	text39
  7578  04EB                     __ptext39:	
  7579 ;; *************** function _Timer1_Count1ms *****************
  7580 ;; Defined at:
  7581 ;;		line 81 in file "Timer1.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;		None
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;		None
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1    wreg      void 
  7588 ;; Registers used:
  7589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7595 ;;      Params:         0       0       0       0       0       0
  7596 ;;      Locals:         0       0       0       0       0       0
  7597 ;;      Temps:          0       1       0       0       0       0
  7598 ;;      Totals:         0       1       0       0       0       0
  7599 ;;Total ram usage:        1 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:    1
  7602 ;; This function calls:
  7603 ;;		___lmul
  7604 ;;		i1_Buzzer_MiliSecond
  7605 ;;		i1___lldiv
  7606 ;; This function is called by:
  7607 ;;		_Handler
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           
  7612                           ;psect for function _Timer1_Count1ms
  7613  04EB                     _Timer1_Count1ms:	
  7614                           
  7615                           ;Timer1.c: 83: tcnt.Delta_t++;
  7616                           
  7617                           ;incstack = 0
  7618                           ; Regs used in _Timer1_Count1ms: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7619  04EB  3001               	movlw	1
  7620  04EC  0020               	movlb	0	; select bank0
  7621  04ED  07DB               	addwf	_tcnt+2,f
  7622  04EE  3000               	movlw	0
  7623  04EF  3DDC               	addwfc	_tcnt+3,f
  7624  04F0  3000               	movlw	0
  7625  04F1  3DDD               	addwfc	_tcnt+4,f
  7626  04F2  3000               	movlw	0
  7627  04F3  3DDE               	addwfc	_tcnt+5,f
  7628                           
  7629                           ;Timer1.c: 84: tcnt.RenewalRersult++;
  7630  04F4  3001               	movlw	1
  7631  04F5  07DF               	addwf	_tcnt+6,f
  7632  04F6  3000               	movlw	0
  7633  04F7  3DE0               	addwfc	_tcnt+7,f
  7634                           
  7635                           ;Timer1.c: 85: if((tcnt.RenewalRersult>1000)&&cnts.Num_of_Detect)
  7636  04F8  3003               	movlw	3
  7637  04F9  0260               	subwf	_tcnt+7,w
  7638  04FA  30E9               	movlw	233
  7639  04FB  1903               	skipnz
  7640  04FC  025F               	subwf	_tcnt+6,w
  7641  04FD  1C03               	skipc
  7642  04FE  0008               	return
  7643  04FF  0021               	movlb	1	; select bank1
  7644  0500  0833               	movf	((_cnts+3)^(0+128)+16),w
  7645  0501  0432               	iorwf	((_cnts+2)^(0+128)+16),w
  7646  0502  0431               	iorwf	((_cnts+1)^(0+128)+16),w
  7647  0503  0430               	iorwf	(_cnts^(0+128)+16),w
  7648  0504  1903               	skipnz
  7649  0505  0008               	return
  7650                           
  7651                           ;Timer1.c: 86: {
  7652                           ;Timer1.c: 87: tcnt.RenewalRersult = 0;
  7653  0506  0020               	movlb	0	; select bank0
  7654  0507  01DF               	clrf	_tcnt+6
  7655  0508  01E0               	clrf	_tcnt+7
  7656                           
  7657                           ;Timer1.c: 88: cnts.AverageCPS = (uint32_t)(cnts.SigmaCPS/cnts.Num_of_Detect);
  7658  0509  3010               	movlw	16
  7659  050A  3EA0               	addlw	(low (_cnts| 0))& (0+255)
  7660  050B  0086               	movwf	6
  7661  050C  0187               	clrf	7
  7662  050D  3F40               	moviw [0]fsr1
  7663  050E  00F0               	movwf	i1___lldiv@divisor
  7664  050F  3F41               	moviw [1]fsr1
  7665  0510  00F1               	movwf	i1___lldiv@divisor+1
  7666  0511  3F42               	moviw [2]fsr1
  7667  0512  00F2               	movwf	i1___lldiv@divisor+2
  7668  0513  3F43               	moviw [3]fsr1
  7669  0514  00F3               	movwf	i1___lldiv@divisor+3
  7670  0515  3004               	movlw	4
  7671  0516  3EA0               	addlw	(low (_cnts| 0))& (0+255)
  7672  0517  0086               	movwf	6
  7673  0518  0187               	clrf	7
  7674  0519  3F40               	moviw [0]fsr1
  7675  051A  00F4               	movwf	i1___lldiv@dividend
  7676  051B  3F41               	moviw [1]fsr1
  7677  051C  00F5               	movwf	i1___lldiv@dividend+1
  7678  051D  3F42               	moviw [2]fsr1
  7679  051E  00F6               	movwf	i1___lldiv@dividend+2
  7680  051F  3F43               	moviw [3]fsr1
  7681  0520  00F7               	movwf	i1___lldiv@dividend+3
  7682  0521  3186  26F5  3184   	fcall	i1___lldiv
  7683  0524  0873               	movf	?i1___lldiv+3,w
  7684  0525  0021               	movlb	1	; select bank1
  7685  0526  00AB               	movwf	((_cnts+3)^(0+128)+8)
  7686  0527  0872               	movf	?i1___lldiv+2,w
  7687  0528  00AA               	movwf	((_cnts+2)^(0+128)+8)
  7688  0529  0871               	movf	?i1___lldiv+1,w
  7689  052A  00A9               	movwf	((_cnts+1)^(0+128)+8)
  7690  052B  0870               	movf	?i1___lldiv,w
  7691  052C  00A8               	movwf	(_cnts^(0+128)+8)
  7692                           
  7693                           ;Timer1.c: 89: cnts.AverageCPM = (uint32_t)(cnts.AverageCPS*60);
  7694  052D  3008               	movlw	8
  7695  052E  3EA0               	addlw	(low (_cnts| 0))& (0+255)
  7696  052F  0086               	movwf	6
  7697  0530  0187               	clrf	7
  7698  0531  3F40               	moviw [0]fsr1
  7699  0532  00F0               	movwf	___lmul@multiplier
  7700  0533  3F41               	moviw [1]fsr1
  7701  0534  00F1               	movwf	___lmul@multiplier+1
  7702  0535  3F42               	moviw [2]fsr1
  7703  0536  00F2               	movwf	___lmul@multiplier+2
  7704  0537  3F43               	moviw [3]fsr1
  7705  0538  00F3               	movwf	___lmul@multiplier+3
  7706  0539  3000               	movlw	0
  7707  053A  00F7               	movwf	___lmul@multiplicand+3
  7708  053B  3000               	movlw	0
  7709  053C  00F6               	movwf	___lmul@multiplicand+2
  7710  053D  3000               	movlw	0
  7711  053E  00F5               	movwf	___lmul@multiplicand+1
  7712  053F  303C               	movlw	60
  7713  0540  00F4               	movwf	___lmul@multiplicand
  7714  0541  318E  26D9  3184   	fcall	___lmul
  7715  0544  0873               	movf	?___lmul+3,w
  7716  0545  0021               	movlb	1	; select bank1
  7717  0546  00AF               	movwf	((_cnts+3)^(0+128)+12)
  7718  0547  0872               	movf	?___lmul+2,w
  7719  0548  00AE               	movwf	((_cnts+2)^(0+128)+12)
  7720  0549  0871               	movf	?___lmul+1,w
  7721  054A  00AD               	movwf	((_cnts+1)^(0+128)+12)
  7722  054B  0870               	movf	?___lmul,w
  7723  054C  00AC               	movwf	(_cnts^(0+128)+12)
  7724                           
  7725                           ;Timer1.c: 91: tcnt.Second_t++;
  7726  054D  3001               	movlw	1
  7727  054E  0020               	movlb	0	; select bank0
  7728  054F  00A0               	movwf	??_Timer1_Count1ms
  7729  0550  0820               	movf	??_Timer1_Count1ms,w
  7730  0551  07D9               	addwf	_tcnt,f
  7731                           
  7732                           ;Timer1.c: 93: if((58==tcnt.Second_t)||(tcnt.Second_t==59))
  7733  0552  303A               	movlw	58
  7734  0553  0659               	xorwf	_tcnt,w
  7735  0554  1903               	btfsc	3,2
  7736  0555  2D5A               	goto	i1l2550
  7737  0556  303B               	movlw	59
  7738  0557  0659               	xorwf	_tcnt,w
  7739  0558  1D03               	btfss	3,2
  7740  0559  2D5E               	goto	i1l2552
  7741  055A                     i1l2550:	
  7742                           
  7743                           ;Timer1.c: 94: Buzzer_MiliSecond(100);
  7744  055A  3064               	movlw	100
  7745  055B  00F0               	movwf	i1Buzzer_MiliSecond@time
  7746  055C  3000               	movlw	0
  7747  055D  2D66               	goto	L4
  7748  055E                     i1l2552:	
  7749                           
  7750                           ;Timer1.c: 95: else if(tcnt.Second_t==60)
  7751  055E  303C               	movlw	60
  7752  055F  0020               	movlb	0	; select bank0
  7753  0560  0659               	xorwf	_tcnt,w
  7754  0561  1D03               	btfss	3,2
  7755  0562  2D6A               	goto	i1l2556
  7756                           
  7757                           ;Timer1.c: 96: Buzzer_MiliSecond(500);
  7758  0563  30F4               	movlw	244
  7759  0564  00F0               	movwf	i1Buzzer_MiliSecond@time
  7760  0565  3001               	movlw	1
  7761  0566                     L4:	
  7762  0566  00F1               	movwf	i1Buzzer_MiliSecond@time+1
  7763  0567  318C  24B7  3184   	fcall	i1_Buzzer_MiliSecond
  7764  056A                     i1l2556:	
  7765                           
  7766                           ;Timer1.c: 98: if(tcnt.Second_t>59)
  7767  056A  303C               	movlw	60
  7768  056B  0020               	movlb	0	; select bank0
  7769  056C  0259               	subwf	_tcnt,w
  7770  056D  1C03               	skipc
  7771  056E  0008               	return
  7772                           
  7773                           ;Timer1.c: 99: {
  7774                           ;Timer1.c: 100: tcnt.Second_t = 0;
  7775  056F  01D9               	clrf	_tcnt
  7776                           
  7777                           ;Timer1.c: 101: tcnt.Minute_t++;
  7778  0570  3001               	movlw	1
  7779  0571  00A0               	movwf	??_Timer1_Count1ms
  7780  0572  0820               	movf	??_Timer1_Count1ms,w
  7781  0573  07DA               	addwf	_tcnt+1,f
  7782  0574  0008               	return
  7783  0575                     __end_of_Timer1_Count1ms:	
  7784                           
  7785                           	psect	text40
  7786  06F5                     __ptext40:	
  7787 ;; *************** function i1___lldiv *****************
  7788 ;; Defined at:
  7789 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  divisor         4    0[COMMON] unsigned long 
  7792 ;;  dividend        4    4[COMMON] unsigned long 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  __lldiv         4    9[COMMON] unsigned long 
  7795 ;;  __lldiv         1   13[COMMON] unsigned char 
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  4    0[COMMON] unsigned long 
  7798 ;; Registers used:
  7799 ;;		wreg, status,2, status,0
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7805 ;;      Params:         8       0       0       0       0       0
  7806 ;;      Locals:         5       0       0       0       0       0
  7807 ;;      Temps:          1       0       0       0       0       0
  7808 ;;      Totals:        14       0       0       0       0       0
  7809 ;;Total ram usage:       14 bytes
  7810 ;; Hardware stack levels used:    1
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_Timer1_Count1ms
  7815 ;;		_Timer1_DetectAssignCount
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           
  7820                           ;psect for function i1___lldiv
  7821  06F5                     i1___lldiv:	
  7822                           
  7823                           ;incstack = 0
  7824                           ; Regs used in i1___lldiv: [wreg+status,2+status,0]
  7825  06F5  3000               	movlw	0
  7826  06F6  00FC               	movwf	i1___lldiv@quotient+3
  7827  06F7  3000               	movlw	0
  7828  06F8  00FB               	movwf	i1___lldiv@quotient+2
  7829  06F9  3000               	movlw	0
  7830  06FA  00FA               	movwf	i1___lldiv@quotient+1
  7831  06FB  3000               	movlw	0
  7832  06FC  00F9               	movwf	i1___lldiv@quotient
  7833  06FD  0873               	movf	i1___lldiv@divisor+3,w
  7834  06FE  0472               	iorwf	i1___lldiv@divisor+2,w
  7835  06FF  0471               	iorwf	i1___lldiv@divisor+1,w
  7836  0700  0470               	iorwf	i1___lldiv@divisor,w
  7837  0701  1903               	skipnz
  7838  0702  2F3E               	goto	i1l2370
  7839  0703  01FD               	clrf	i1___lldiv@counter
  7840  0704  0AFD               	incf	i1___lldiv@counter,f
  7841  0705                     i1l2356:	
  7842  0705  1BF3               	btfsc	i1___lldiv@divisor+3,7
  7843  0706  2F13               	goto	i1l2358
  7844  0707  3001               	movlw	1
  7845  0708                     u181_25:	
  7846  0708  35F0               	lslf	i1___lldiv@divisor,f
  7847  0709  0DF1               	rlf	i1___lldiv@divisor+1,f
  7848  070A  0DF2               	rlf	i1___lldiv@divisor+2,f
  7849  070B  0DF3               	rlf	i1___lldiv@divisor+3,f
  7850  070C  0B89               	decfsz	9,f
  7851  070D  2F08               	goto	u181_25
  7852  070E  3001               	movlw	1
  7853  070F  00F8               	movwf	??i1___lldiv
  7854  0710  0878               	movf	??i1___lldiv,w
  7855  0711  07FD               	addwf	i1___lldiv@counter,f
  7856  0712  2F05               	goto	i1l2356
  7857  0713                     i1l2358:	
  7858  0713  3001               	movlw	1
  7859  0714                     u183_25:	
  7860  0714  35F9               	lslf	i1___lldiv@quotient,f
  7861  0715  0DFA               	rlf	i1___lldiv@quotient+1,f
  7862  0716  0DFB               	rlf	i1___lldiv@quotient+2,f
  7863  0717  0DFC               	rlf	i1___lldiv@quotient+3,f
  7864  0718  0B89               	decfsz	9,f
  7865  0719  2F14               	goto	u183_25
  7866  071A  0873               	movf	i1___lldiv@divisor+3,w
  7867  071B  0277               	subwf	i1___lldiv@dividend+3,w
  7868  071C  1D03               	skipz
  7869  071D  2F28               	goto	u184_25
  7870  071E  0872               	movf	i1___lldiv@divisor+2,w
  7871  071F  0276               	subwf	i1___lldiv@dividend+2,w
  7872  0720  1D03               	skipz
  7873  0721  2F28               	goto	u184_25
  7874  0722  0871               	movf	i1___lldiv@divisor+1,w
  7875  0723  0275               	subwf	i1___lldiv@dividend+1,w
  7876  0724  1D03               	skipz
  7877  0725  2F28               	goto	u184_25
  7878  0726  0870               	movf	i1___lldiv@divisor,w
  7879  0727  0274               	subwf	i1___lldiv@dividend,w
  7880  0728                     u184_25:	
  7881  0728  1C03               	skipc
  7882  0729  2F33               	goto	i1l2366
  7883  072A  0870               	movf	i1___lldiv@divisor,w
  7884  072B  02F4               	subwf	i1___lldiv@dividend,f
  7885  072C  0871               	movf	i1___lldiv@divisor+1,w
  7886  072D  3BF5               	subwfb	i1___lldiv@dividend+1,f
  7887  072E  0872               	movf	i1___lldiv@divisor+2,w
  7888  072F  3BF6               	subwfb	i1___lldiv@dividend+2,f
  7889  0730  0873               	movf	i1___lldiv@divisor+3,w
  7890  0731  3BF7               	subwfb	i1___lldiv@dividend+3,f
  7891  0732  1479               	bsf	i1___lldiv@quotient,0
  7892  0733                     i1l2366:	
  7893  0733  3001               	movlw	1
  7894  0734                     u185_25:	
  7895  0734  36F3               	lsrf	i1___lldiv@divisor+3,f
  7896  0735  0CF2               	rrf	i1___lldiv@divisor+2,f
  7897  0736  0CF1               	rrf	i1___lldiv@divisor+1,f
  7898  0737  0CF0               	rrf	i1___lldiv@divisor,f
  7899  0738  0B89               	decfsz	9,f
  7900  0739  2F34               	goto	u185_25
  7901  073A  3001               	movlw	1
  7902  073B  02FD               	subwf	i1___lldiv@counter,f
  7903  073C  1D03               	btfss	3,2
  7904  073D  2F13               	goto	i1l2358
  7905  073E                     i1l2370:	
  7906  073E  087C               	movf	i1___lldiv@quotient+3,w
  7907  073F  00F3               	movwf	?i1___lldiv+3
  7908  0740  087B               	movf	i1___lldiv@quotient+2,w
  7909  0741  00F2               	movwf	?i1___lldiv+2
  7910  0742  087A               	movf	i1___lldiv@quotient+1,w
  7911  0743  00F1               	movwf	?i1___lldiv+1
  7912  0744  0879               	movf	i1___lldiv@quotient,w
  7913  0745  00F0               	movwf	?i1___lldiv
  7914  0746  0008               	return
  7915  0747                     __end_ofi1___lldiv:	
  7916                           
  7917                           	psect	text41
  7918  0CB7                     __ptext41:	
  7919 ;; *************** function i1_Buzzer_MiliSecond *****************
  7920 ;; Defined at:
  7921 ;;		line 38 in file "Buzzer.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;  time            2    0[COMMON] unsigned int 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;		None
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  1    wreg      void 
  7928 ;; Registers used:
  7929 ;;		wreg, status,2, status,0
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7935 ;;      Params:         2       0       0       0       0       0
  7936 ;;      Locals:         0       0       0       0       0       0
  7937 ;;      Temps:          0       0       0       0       0       0
  7938 ;;      Totals:         2       0       0       0       0       0
  7939 ;;Total ram usage:        2 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; This function calls:
  7942 ;;		Nothing
  7943 ;; This function is called by:
  7944 ;;		_Timer1_Count1ms
  7945 ;; This function uses a non-reentrant model
  7946 ;;
  7947                           
  7948                           
  7949                           ;psect for function i1_Buzzer_MiliSecond
  7950  0CB7                     i1_Buzzer_MiliSecond:	
  7951                           
  7952                           ;Buzzer.c: 40: if(count==0)
  7953                           
  7954                           ;incstack = 0
  7955                           ; Regs used in i1_Buzzer_MiliSecond: [wreg+status,2+status,0]
  7956  0CB7  0020               	movlb	0	; select bank0
  7957  0CB8  0868               	movf	_count,w
  7958  0CB9  0469               	iorwf	_count+1,w
  7959  0CBA  1D03               	btfss	3,2
  7960  0CBB  0008               	return
  7961                           
  7962                           ;Buzzer.c: 41: count = time;
  7963  0CBC  0871               	movf	i1Buzzer_MiliSecond@time+1,w
  7964  0CBD  00E9               	movwf	_count+1
  7965  0CBE  0870               	movf	i1Buzzer_MiliSecond@time,w
  7966  0CBF  00E8               	movwf	_count
  7967  0CC0  0008               	return
  7968  0CC1                     __end_ofi1_Buzzer_MiliSecond:	
  7969                           
  7970                           	psect	text42
  7971  0ED9                     __ptext42:	
  7972 ;; *************** function ___lmul *****************
  7973 ;; Defined at:
  7974 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul32.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  multiplier      4    0[COMMON] unsigned long 
  7977 ;;  multiplicand    4    4[COMMON] unsigned long 
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;  product         4    8[COMMON] unsigned long 
  7980 ;; Return value:  Size  Location     Type
  7981 ;;                  4    0[COMMON] unsigned long 
  7982 ;; Registers used:
  7983 ;;		wreg, status,2, status,0
  7984 ;; Tracked objects:
  7985 ;;		On entry : 0/0
  7986 ;;		On exit  : 0/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7989 ;;      Params:         8       0       0       0       0       0
  7990 ;;      Locals:         4       0       0       0       0       0
  7991 ;;      Temps:          0       0       0       0       0       0
  7992 ;;      Totals:        12       0       0       0       0       0
  7993 ;;Total ram usage:       12 bytes
  7994 ;; Hardware stack levels used:    1
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		_Timer1_Count1ms
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           
  8003                           ;psect for function ___lmul
  8004  0ED9                     ___lmul:	
  8005                           
  8006                           ;incstack = 0
  8007                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8008  0ED9  3000               	movlw	0
  8009  0EDA  00FB               	movwf	___lmul@product+3
  8010  0EDB  3000               	movlw	0
  8011  0EDC  00FA               	movwf	___lmul@product+2
  8012  0EDD  3000               	movlw	0
  8013  0EDE  00F9               	movwf	___lmul@product+1
  8014  0EDF  3000               	movlw	0
  8015  0EE0  00F8               	movwf	___lmul@product
  8016  0EE1                     i1l2290:	
  8017  0EE1  1C70               	btfss	___lmul@multiplier,0
  8018  0EE2  2EEB               	goto	i1l2294
  8019  0EE3  0874               	movf	___lmul@multiplicand,w
  8020  0EE4  07F8               	addwf	___lmul@product,f
  8021  0EE5  0875               	movf	___lmul@multiplicand+1,w
  8022  0EE6  3DF9               	addwfc	___lmul@product+1,f
  8023  0EE7  0876               	movf	___lmul@multiplicand+2,w
  8024  0EE8  3DFA               	addwfc	___lmul@product+2,f
  8025  0EE9  0877               	movf	___lmul@multiplicand+3,w
  8026  0EEA  3DFB               	addwfc	___lmul@product+3,f
  8027  0EEB                     i1l2294:	
  8028  0EEB  3001               	movlw	1
  8029  0EEC                     u163_25:	
  8030  0EEC  35F4               	lslf	___lmul@multiplicand,f
  8031  0EED  0DF5               	rlf	___lmul@multiplicand+1,f
  8032  0EEE  0DF6               	rlf	___lmul@multiplicand+2,f
  8033  0EEF  0DF7               	rlf	___lmul@multiplicand+3,f
  8034  0EF0  0B89               	decfsz	9,f
  8035  0EF1  2EEC               	goto	u163_25
  8036  0EF2  3001               	movlw	1
  8037  0EF3                     u164_25:	
  8038  0EF3  36F3               	lsrf	___lmul@multiplier+3,f
  8039  0EF4  0CF2               	rrf	___lmul@multiplier+2,f
  8040  0EF5  0CF1               	rrf	___lmul@multiplier+1,f
  8041  0EF6  0CF0               	rrf	___lmul@multiplier,f
  8042  0EF7  0B89               	decfsz	9,f
  8043  0EF8  2EF3               	goto	u164_25
  8044  0EF9  0873               	movf	___lmul@multiplier+3,w
  8045  0EFA  0472               	iorwf	___lmul@multiplier+2,w
  8046  0EFB  0471               	iorwf	___lmul@multiplier+1,w
  8047  0EFC  0470               	iorwf	___lmul@multiplier,w
  8048  0EFD  1D03               	skipz
  8049  0EFE  2EE1               	goto	i1l2290
  8050  0EFF  087B               	movf	___lmul@product+3,w
  8051  0F00  00F3               	movwf	?___lmul+3
  8052  0F01  087A               	movf	___lmul@product+2,w
  8053  0F02  00F2               	movwf	?___lmul+2
  8054  0F03  0879               	movf	___lmul@product+1,w
  8055  0F04  00F1               	movwf	?___lmul+1
  8056  0F05  0878               	movf	___lmul@product,w
  8057  0F06  00F0               	movwf	?___lmul
  8058  0F07  0008               	return
  8059  0F08                     __end_of___lmul:	
  8060                           
  8061                           	psect	text43
  8062  0C94                     __ptext43:	
  8063 ;; *************** function _I2C_CommonInterrupt *****************
  8064 ;; Defined at:
  8065 ;;		line 58 in file "I2C_Common.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;		None
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;		None
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8079 ;;      Params:         0       0       0       0       0       0
  8080 ;;      Locals:         0       0       0       0       0       0
  8081 ;;      Temps:          0       0       0       0       0       0
  8082 ;;      Totals:         0       0       0       0       0       0
  8083 ;;Total ram usage:        0 bytes
  8084 ;; Hardware stack levels used:    1
  8085 ;; Hardware stack levels required when called:    1
  8086 ;; This function calls:
  8087 ;;		_I2C2_Interrupt
  8088 ;; This function is called by:
  8089 ;;		_Handler
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           
  8094                           ;psect for function _I2C_CommonInterrupt
  8095  0C94                     _I2C_CommonInterrupt:	
  8096                           
  8097                           ;I2C_Common.c: 61: I2C2_Interrupt();
  8098                           
  8099                           ;incstack = 0
  8100                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8101  0C94  3186  264E         	fcall	_I2C2_Interrupt
  8102  0C96  0008               	return
  8103  0C97                     __end_of_I2C_CommonInterrupt:	
  8104                           
  8105                           	psect	text44
  8106  064E                     __ptext44:	
  8107 ;; *************** function _I2C2_Interrupt *****************
  8108 ;; Defined at:
  8109 ;;		line 152 in file "I2C2.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;		None
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;		None
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      void 
  8116 ;; Registers used:
  8117 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8123 ;;      Params:         0       0       0       0       0       0
  8124 ;;      Locals:         0       0       0       0       0       0
  8125 ;;      Temps:          1       0       0       0       0       0
  8126 ;;      Totals:         1       0       0       0       0       0
  8127 ;;Total ram usage:        1 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		_I2C_CommonInterrupt
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           
  8137                           ;psect for function _I2C2_Interrupt
  8138  064E                     _I2C2_Interrupt:	
  8139                           
  8140                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  8141                           
  8142                           ;incstack = 0
  8143                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  8144  064E  0020               	movlb	0	; select bank0
  8145  064F  1C14               	btfss	20,0	;volatile
  8146  0650  2E9A               	goto	i1l2236
  8147  0651  0021               	movlb	1	; select bank1
  8148  0652  1C14               	btfss	20,0	;volatile
  8149  0653  2E9A               	goto	i1l2236
  8150                           
  8151                           ;I2C2.c: 155: {
  8152                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  8153  0654  0024               	movlb	4	; select bank4
  8154  0655  1E9C               	btfss	28,5	;volatile
  8155  0656  2E71               	goto	i1l535
  8156                           
  8157                           ;I2C2.c: 157: {
  8158                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  8159  0657  1D1C               	btfss	28,2	;volatile
  8160  0658  2E64               	goto	i1l2212
  8161                           
  8162                           ;I2C2.c: 159: {
  8163                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  8164  0659  1B1E               	btfsc	30,6	;volatile
  8165  065A  2E98               	goto	i1l2234
  8166  065B                     i1l2204:	
  8167                           ;I2C2.c: 161: {
  8168                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  8169                           
  8170  065B  081C               	movf	28,w	;volatile
  8171  065C  3901               	andlw	1
  8172  065D  00F0               	movwf	??_I2C2_Interrupt
  8173  065E  0E1D               	swapf	29,w	;volatile
  8174  065F  3901               	andlw	1
  8175  0660  0470               	iorwf	??_I2C2_Interrupt,w
  8176  0661  1D03               	btfss	3,2
  8177  0662  2E5B               	goto	i1l2204
  8178  0663  2E84               	goto	L5
  8179  0664                     i1l2212:	
  8180                           ;I2C2.c: 166: }
  8181                           ;I2C2.c: 167: }
  8182                           
  8183                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  8184                           
  8185                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  8186                           
  8187                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  8188                           
  8189                           
  8190                           ;I2C2.c: 168: else
  8191                           ;I2C2.c: 169: {
  8192                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  8193  0664  0819               	movf	25,w	;volatile
  8194  0665  00F0               	movwf	??_I2C2_Interrupt
  8195  0666  0021               	movlb	1	; select bank1
  8196  0667  084B               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  8197  0668  0086               	movwf	6
  8198  0669  0187               	clrf	7
  8199  066A  0870               	movf	??_I2C2_Interrupt,w
  8200  066B  0081               	movwf	1
  8201                           
  8202                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  8203  066C  3001               	movlw	1
  8204  066D  00F0               	movwf	??_I2C2_Interrupt
  8205  066E  0870               	movf	??_I2C2_Interrupt,w
  8206  066F  07CB               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  8207  0670  2E96               	goto	i1l2232
  8208  0671                     i1l535:	
  8209                           ;I2C2.c: 173: }
  8210                           ;I2C2.c: 174: }
  8211                           
  8212                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  8213                           
  8214                           
  8215                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  8216  0671  1A9C               	btfsc	28,5	;volatile
  8217  0672  2E98               	goto	i1l2234
  8218                           
  8219                           ;I2C2.c: 176: {
  8220                           ;I2C2.c: 177: SSP2BUF;
  8221  0673  0819               	movf	25,w	;volatile
  8222                           
  8223                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  8224  0674  1D1C               	btfss	28,2	;volatile
  8225  0675  2E91               	goto	i1l2230
  8226                           
  8227                           ;I2C2.c: 180: {
  8228                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  8229  0676  30BA               	movlw	(low (_I2C2_Config| 0))& (0+255)
  8230  0677  00F0               	movwf	??_I2C2_Interrupt
  8231  0678  0870               	movf	??_I2C2_Interrupt,w
  8232  0679  0021               	movlb	1	; select bank1
  8233  067A  00CA               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  8234  067B                     i1l2224:	
  8235                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  8236                           
  8237  067B  0024               	movlb	4	; select bank4
  8238  067C  081C               	movf	28,w	;volatile
  8239  067D  3901               	andlw	1
  8240  067E  00F0               	movwf	??_I2C2_Interrupt
  8241  067F  0E1D               	swapf	29,w	;volatile
  8242  0680  3901               	andlw	1
  8243  0681  0470               	iorwf	??_I2C2_Interrupt,w
  8244  0682  1D03               	btfss	3,2
  8245  0683  2E7B               	goto	i1l2224
  8246  0684                     L5:	
  8247                           
  8248                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  8249  0684  0021               	movlb	1	; select bank1
  8250  0685  084A               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  8251  0686  0086               	movwf	6
  8252  0687  0187               	clrf	7
  8253  0688  0801               	movf	1,w
  8254  0689  0024               	movlb	4	; select bank4
  8255  068A  0099               	movwf	25	;volatile
  8256                           
  8257                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  8258  068B  3001               	movlw	1
  8259  068C  00F0               	movwf	??_I2C2_Interrupt
  8260  068D  0870               	movf	??_I2C2_Interrupt,w
  8261  068E  0021               	movlb	1	; select bank1
  8262  068F  07CA               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  8263                           
  8264                           ;I2C2.c: 186: }
  8265  0690  2E96               	goto	i1l2232
  8266  0691                     i1l2230:	
  8267                           
  8268                           ;I2C2.c: 187: else
  8269                           ;I2C2.c: 188: {
  8270                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  8271  0691  30C2               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  8272  0692  00F0               	movwf	??_I2C2_Interrupt
  8273  0693  0870               	movf	??_I2C2_Interrupt,w
  8274  0694  0021               	movlb	1	; select bank1
  8275  0695  00CB               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  8276  0696                     i1l2232:	
  8277                           
  8278                           ;I2C2.c: 190: }
  8279                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  8280  0696  0024               	movlb	4	; select bank4
  8281  0697  161D               	bsf	29,4	;volatile
  8282  0698                     i1l2234:	
  8283                           
  8284                           ;I2C2.c: 192: }
  8285                           ;I2C2.c: 193: SSP2IF = 0;
  8286  0698  0020               	movlb	0	; select bank0
  8287  0699  1014               	bcf	20,0	;volatile
  8288  069A                     i1l2236:	
  8289                           
  8290                           ;I2C2.c: 194: }
  8291                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  8292  069A  0021               	movlb	1	; select bank1
  8293  069B  1C94               	btfss	20,1	;volatile
  8294  069C  0008               	return
  8295  069D  0020               	movlb	0	; select bank0
  8296  069E  1C94               	btfss	20,1	;volatile
  8297  069F  0008               	return
  8298                           
  8299                           ;I2C2.c: 197: BCL2IF = 0;
  8300  06A0  1094               	bcf	20,1	;volatile
  8301  06A1  0008               	return
  8302  06A2                     __end_of_I2C2_Interrupt:	
  8303                           
  8304                           	psect	text45
  8305  0D94                     __ptext45:	
  8306 ;; *************** function _Buzzer_Count1ms *****************
  8307 ;; Defined at:
  8308 ;;		line 44 in file "Buzzer.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;		None
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2, status,0, pclath, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8322 ;;      Params:         0       0       0       0       0       0
  8323 ;;      Locals:         0       0       0       0       0       0
  8324 ;;      Temps:          0       0       0       0       0       0
  8325 ;;      Totals:         0       0       0       0       0       0
  8326 ;;Total ram usage:        0 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    1
  8329 ;; This function calls:
  8330 ;;		_Buzzer_SetDuty
  8331 ;; This function is called by:
  8332 ;;		_Handler
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           
  8337                           ;psect for function _Buzzer_Count1ms
  8338  0D94                     _Buzzer_Count1ms:	
  8339                           
  8340                           ;Buzzer.c: 46: if(count>0)
  8341                           
  8342                           ;incstack = 0
  8343                           ; Regs used in _Buzzer_Count1ms: [wreg+status,2+status,0+pclath+cstack]
  8344  0D94  0020               	movlb	0	; select bank0
  8345  0D95  0868               	movf	_count,w
  8346  0D96  0469               	iorwf	_count+1,w
  8347  0D97  1903               	btfsc	3,2
  8348  0D98  2DA4               	goto	i1l2400
  8349                           
  8350                           ;Buzzer.c: 47: {
  8351                           ;Buzzer.c: 48: count--;
  8352  0D99  3001               	movlw	1
  8353  0D9A  02E8               	subwf	_count,f
  8354  0D9B  3000               	movlw	0
  8355  0D9C  3BE9               	subwfb	_count+1,f
  8356                           
  8357                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  8358  0D9D  30FF               	movlw	255
  8359  0D9E  00F0               	movwf	Buzzer_SetDuty@duty
  8360  0D9F  3001               	movlw	1
  8361  0DA0  00F1               	movwf	Buzzer_SetDuty@duty+1
  8362  0DA1  318D  25F5         	fcall	_Buzzer_SetDuty
  8363                           
  8364                           ;Buzzer.c: 50: }
  8365  0DA3  0008               	return
  8366  0DA4                     i1l2400:	
  8367                           
  8368                           ;Buzzer.c: 51: else
  8369                           ;Buzzer.c: 52: {
  8370                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  8371  0DA4  3000               	movlw	0
  8372  0DA5  00F0               	movwf	Buzzer_SetDuty@duty
  8373  0DA6  00F1               	movwf	Buzzer_SetDuty@duty+1
  8374  0DA7  318D  25F5         	fcall	_Buzzer_SetDuty
  8375  0DA9  0008               	return
  8376  0DAA                     __end_of_Buzzer_Count1ms:	
  8377                           
  8378                           	psect	text46
  8379  0DF5                     __ptext46:	
  8380 ;; *************** function _Buzzer_SetDuty *****************
  8381 ;; Defined at:
  8382 ;;		line 31 in file "Buzzer.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  duty            2    0[COMMON] unsigned int 
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  1    wreg      void 
  8389 ;; Registers used:
  8390 ;;		wreg, status,2, status,0
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8396 ;;      Params:         2       0       0       0       0       0
  8397 ;;      Locals:         1       0       0       0       0       0
  8398 ;;      Temps:          2       0       0       0       0       0
  8399 ;;      Totals:         5       0       0       0       0       0
  8400 ;;Total ram usage:        5 bytes
  8401 ;; Hardware stack levels used:    1
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		_Buzzer_Count1ms
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           
  8410                           ;psect for function _Buzzer_SetDuty
  8411  0DF5                     _Buzzer_SetDuty:	
  8412                           
  8413                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  8414                           
  8415                           ;incstack = 0
  8416                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  8417  0DF5  0025               	movlb	5	; select bank5
  8418  0DF6  081A               	movf	26,w	;volatile
  8419  0DF7  39CF               	andlw	207
  8420  0DF8  00F2               	movwf	??_Buzzer_SetDuty
  8421  0DF9  0872               	movf	??_Buzzer_SetDuty,w
  8422  0DFA  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  8423                           
  8424                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  8425  0DFB  0871               	movf	Buzzer_SetDuty@duty+1,w
  8426  0DFC  00F3               	movwf	??_Buzzer_SetDuty+1
  8427  0DFD  0870               	movf	Buzzer_SetDuty@duty,w
  8428  0DFE  00F2               	movwf	??_Buzzer_SetDuty
  8429  0DFF  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8430  0E00  0CF2               	rrf	??_Buzzer_SetDuty,f
  8431  0E01  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8432  0E02  0CF2               	rrf	??_Buzzer_SetDuty,f
  8433  0E03  0872               	movf	??_Buzzer_SetDuty,w
  8434  0E04  0098               	movwf	24	;volatile
  8435                           
  8436                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  8437  0E05  0870               	movf	Buzzer_SetDuty@duty,w
  8438  0E06  3903               	andlw	3
  8439  0E07  00F2               	movwf	??_Buzzer_SetDuty
  8440  0E08  3003               	movlw	3
  8441  0E09                     u143_25:	
  8442  0E09  35F2               	lslf	??_Buzzer_SetDuty,f
  8443  0E0A  3EFF               	addlw	-1
  8444  0E0B  1D03               	skipz
  8445  0E0C  2E09               	goto	u143_25
  8446  0E0D  3572               	lslf	??_Buzzer_SetDuty,w
  8447  0E0E  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  8448  0E0F  009A               	movwf	26	;volatile
  8449  0E10  0008               	return
  8450  0E11                     __end_of_Buzzer_SetDuty:	
  8451  007E                     btemp	set	126	;btemp
  8452  007E                     int$flags	set	126
  8453  007E                     wtemp0	set	126


Data Sizes:
    Strings     329
    Constant    70
    Data        90
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     57      78
    BANK1            80      0      75
    BANK2            80      0      60
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[10]), STR_5(CODE[8]), STR_4(CODE[11]), STR_3(CODE[12]), 
		 -> STR_2(CODE[5]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_51(CODE[7]), STR_50(CODE[7]), STR_49(CODE[7]), STR_48(CODE[7]), 
		 -> STR_47(CODE[7]), STR_46(CODE[7]), STR_45(CODE[7]), STR_44(CODE[6]), 
		 -> STR_43(CODE[6]), STR_42(CODE[6]), STR_41(CODE[6]), STR_40(CODE[5]), 
		 -> STR_39(CODE[5]), STR_38(CODE[5]), STR_37(CODE[5]), 

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_36(CODE[8]), STR_35(CODE[8]), STR_34(CODE[8]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[7]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[6]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), 

    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[5]), STR_18(CODE[6]), 
		 -> STR_17(CODE[5]), STR_16(CODE[6]), STR_15(CODE[5]), STR_14(CODE[6]), 
		 -> STR_13(CODE[5]), STR_12(CODE[6]), STR_11(CODE[5]), STR_10(CODE[6]), 
		 -> STR_9(CODE[5]), STR_8(CODE[6]), STR_7(CODE[5]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S40$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), 

    S40$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Timer1_DetectAssignCount->i1___lldiv
    _Timer1_Count1ms->i1___lldiv
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Count1ms->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___llmod
    _putch->_LCD_WriteData
    ___llmod->___lldiv
    _mTouch_Init->_mTouch_PortInit
    _mTouch_Check->_Buzzer_MiliSecond
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _DAC_WriteVoltage->_I2C_Transmit
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit

Critical Paths under _Handler in BANK0

    _Handler->_Timer1_Count1ms

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5527
                                             53 BANK0      4     4      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                   _DAC_WriteVoltage
                     _LCD_CursorHome
                 _LCD_CursorPosition
                           _LCD_Init
                      _Timer1_GetCPM
                      _Timer1_GetCPS
                 _Timer1_GetCountSum
                   _Timer1_GetMinute
                   _Timer1_GetSecond
                        _Timer1_Init
                  _Timer1_StartCount
                        _Timer6_Init
                       _mTouch_Check
                        _mTouch_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              35    25     10    2287
                                             26 BANK0     27    17     10
                      _Timer1_GetCPM (ARG)
                      _Timer1_GetCPS (ARG)
                 _Timer1_GetCountSum (ARG)
                   _Timer1_GetMinute (ARG)
                   _Timer1_GetSecond (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     110
                                              5 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              2 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     287
                                             16 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     442
                                              2 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              3 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _mTouch_Check                                         6     6      0     272
                                              4 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2     162
                                              2 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StartCount                                    0     0      0       0
                 _Timer1_ClearRecord
 ---------------------------------------------------------------------------------
 (2) _Timer1_ClearRecord                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetSecond                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetMinute                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                              2 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPS                                        4     0      4       0
                                              2 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        4     0      4       0
                                              2 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              6 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              5 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     196
                                              5 BANK0      3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0      88
                                              5 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0      88
                                              2 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_WriteVoltage                                     5     3      2    1049
                                             18 BANK0      5     3      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    1459
                                             18 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3     941
                                             10 BANK0      8     5      3
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     446
                                              2 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3     518
                                              7 BANK0      6     3      3
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     238
                                              3 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              1     1      0    1021
                                              1 BANK0      1     1      0
                    _Buzzer_Count1ms
                _I2C_CommonInterrupt
                    _Timer1_Count1ms
           _Timer1_DetectAssignCount
                   _Timer6_CheckFlag
           _mTouch_IntervalDecrement
                        _mTouch_Read
 ---------------------------------------------------------------------------------
 (6) _mTouch_Read                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer6_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_DetectAssignCount                             0     0      0     266
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (6) _Timer1_Count1ms                                      1     1      0     560
                                              0 BANK0      1     1      0
                             ___lmul
                i1_Buzzer_MiliSecond
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (7) i1___lldiv                                           14     6      8     266
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (7) i1_Buzzer_MiliSecond                                  2     0      2      74
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     220
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Buzzer_Count1ms                                      0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (7) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C2_Transmit
   _DAC_WriteVoltage
     _I2C_Transmit
       _I2C2_Transmit
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
   _Timer1_GetCPS
   _Timer1_GetCountSum
   _Timer1_GetMinute
   _Timer1_GetSecond
   _Timer1_Init
   _Timer1_StartCount
     _Timer1_ClearRecord
   _Timer6_Init
   _mTouch_Check
     _Buzzer_MiliSecond
   _mTouch_Init
     _mTouch_PortInit
   _printf
     _Timer1_GetCPM (ARG)
     _Timer1_GetCPS (ARG)
     _Timer1_GetCountSum (ARG)
     _Timer1_GetMinute (ARG)
     _Timer1_GetSecond (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Count1ms
     _Buzzer_SetDuty
   _I2C_CommonInterrupt
     _I2C2_Interrupt
   _Timer1_Count1ms
     ___lmul
     i1_Buzzer_MiliSecond
     i1___lldiv
   _Timer1_DetectAssignCount
     i1___lldiv
   _Timer6_CheckFlag
   _mTouch_IntervalDecrement
   _mTouch_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     39      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4B       8       93.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      E3      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Jun 18 01:43:54 2017

                        _LCD_CursorHome 0D1B                             __CFG_CP$OFF 0000  
                                    l54 0DD7                          I2C2_Transmit@i 0027  
                 ??_I2C_CommonInterrupt 0071                     ___wmul@multiplicand 0024  
                                   l600 01F7                                     l452 0797  
                                   l456 07C8                                     l469 0474  
                                   l725 0E1A                                     l573 00B9  
                                   l478 049D                                     l487 04BA  
                                   l576 00DB                                     l578 00BB  
                                   l579 0112                                     l589 0171  
                                   _GIE 005F                                     _PR2 001B  
                                   _PR4 0416                         _Buzzer_Count1ms 0D94  
                          __CFG_CPD$OFF 0000                                     _PR6 041D  
                          __CFG_BORV$LO 0000                                     wreg 0009  
                            _Basic_Init 0D4C                            __CFG_LVP$OFF 0000  
            ??_Timer1_DetectAssignCount 007E                                    l2102 0488  
                                  l2112 0480                                    l2130 04DC  
                                  l2114 0484                                    l2116 04AB  
                                  l2070 07AC                                    l2126 04C0  
                                  l2134 04DF                                    l2310 06C1  
                                  l2072 07AE                                    l2064 07A1  
                                  l2128 04D7                                    l2136 04E8  
                                  l2082 07BD                                    l2090 0457  
                                  l2322 06EC                                    l2092 0465  
                                  l2308 06B3                                    l2332 0FC6  
                                  l2086 07BF                                    l2174 0DC4  
                                  l2182 0DDD                                    l2318 06E1  
                                  l2334 0FD4                                    l2342 0FF7  
                                  l2270 0D19                                    l2178 0DD1  
                                  l2186 0DEE                                    l2338 0FEC  
                                  l2188 0DF3                                    l2276 0E14  
                                  l2702 008A                                    l2720 00EC  
                                  l2712 00BD                                    l2750 0165  
                                  l2734 0121                                    l2910 043A  
                                  l2760 0190                                    l2744 0138  
                                  l2674 074F                                    l2770 01A9  
                                  l2762 0194                                    l2738 0132  
                                  l2906 0428                                    l2914 0443  
                                  l2908 0431                                    l2686 0789  
                                  l2766 01A1                                    l2758 018D  
                                  l2776 01AF                                    l2696 0079  
                                  l2778 005D                                    l2890 03BF  
                                  l2884 03AE                                    l2896 03CC  
                                  l2898 03D0                       ?_DAC_WriteVoltage 0032  
                                  STR_1 025F                                    STR_2 0382  
                                  STR_3 023E                                    STR_4 024A  
                                  STR_5 0281                                    STR_6 0255  
                                  STR_7 0369                                    STR_8 0319  
                                  STR_9 036E                                    u2015 076F  
                                  u2115 015B                                    u1425 0F8A  
                                  u2155 0180                                    u1605 0E20  
                                  u1705 06D6                                    u2507 05C1  
                                  u1715 06E2                                    u2517 0D35  
                                  u2527 0DBD                                    u2537 0D25  
                                  u1745 0FC9                                    u2547 0F83  
                                  u1675 06B6                                    u1595 0E1B  
                                  u2477 057E                                    u1765 0FE2  
                                  u2487 0597                                    u1695 06C2  
                                  u1775 0FED                                    u2497 05AC  
                                  _PEIE 005E                                    u1885 0DB2  
                 Buzzer_MiliSecond@time 0022                                    _TMR0 0015  
                                  _TMR1 0016                                    _TMR2 001A  
                                  _TMR4 0415                                    _TMR6 041C  
                                  _WPUB 020D                            __CFG_WRT$OFF 0000  
                    ??_DAC_WriteVoltage 0034                       i1___lldiv@divisor 0070  
                                  _cnts 00A0                                    _main 0387  
                                  _mode 0064                        __end_of_I2C_Init 0DDA  
                                  _tcnt 0059                                    fsr0h 0005  
                                  fsr1h 0007                                    indf0 0000  
                                  fsr0l 0004                                    indf1 0001  
                                  fsr1l 0006                                    btemp 007E  
                     i1___lldiv@counter 007D                           __CFG_BOREN$ON 0000  
                       ??_I2C2_Transmit 0024                                    start 002B  
                         __CFG_IESO$OFF 0000                         __end_of_Handler 002B  
                __end_of_LCD_CursorHome 0D2B                           _LCD_WriteData 0F80  
                         __CFG_MCLRE$ON 0000                        ??_I2C2_Interrupt 0070  
              __end_of_LCD_DisplayClear 0D3B                   __size_of_I2C_Transmit 001B  
                      __end_of_LCD_Init 05E4                           __CFG_PLLEN$ON 0000  
                                 ?_main 0070                                   STR_10 031F  
                                 STR_11 0373                                   STR_20 0313  
                                 STR_12 0325                                   STR_21 0364  
                                 STR_13 0378                                   STR_30 02B3  
                                 STR_22 034B                                   STR_14 032B  
                                 STR_31 02C1                                   STR_23 0346  
                                 STR_15 037D                                   STR_32 0289  
                                 STR_24 0355                                   STR_40 0341  
                                 STR_16 0331                                   STR_33 02CF  
                                 STR_25 0307                                   STR_41 02EF  
                                 STR_17 035A                           __CFG_WDTE$OFF 0000  
                                 STR_34 0279                                   STR_26 02DD  
                                 STR_50 0290                                   STR_42 02F5  
                                 STR_18 030D                                   STR_35 0271  
                                 STR_27 02E9                                   STR_51 0297  
                                 STR_43 02FB                                   STR_19 035F  
                                 STR_36 0269                                   STR_28 0301  
                                 STR_44 02E3                                   STR_29 02BA  
                                 STR_45 029E                                   STR_37 0337  
                                 STR_46 02C8                                   STR_38 033C  
                                 STR_47 02A5                                   STR_39 0350  
                                 STR_48 02AC                                   STR_49 02D6  
                       __end_of___lldiv 06F5                                   _T1CON 0018  
                       __end_of___llmod 1000                                   _T2CON 001C  
                                 _LATA3 0863                                   _LATA4 0864  
                                 _LATA6 0866                                   _T4CON 0417  
                                 _T6CON 041E             __size_of_Timer1_ClearRecord 003C  
                                 i1l535 0671                                   i1l199 0601  
                                 i1l397 0D41                                   i1l398 0D46  
                                 _PORTA 000C                                   _PORTB 000D  
                                 _TRISA 008C                                   _TRISB 008D  
                     I2C2_Transmit@size 0023                     ___lmul@multiplicand 0074  
                         __CFG_PWRTE$ON 0000                          __CFG_FCMEN$OFF 0000  
                    i1___lldiv@dividend 0074                         __end_of_dpowers 0220  
                                 _count 0068                         __end_of_isdigit 0D1B  
                     ??_Timer1_Count1ms 0020                                   _putch 0CAE  
                         ??_Buzzer_Init 0022                   __end_of_Timer1_GetCPM 0CFE  
                 __end_of_Timer1_GetCPS 0D0C             __size_of_Timer1_GetCountSum 0011  
                                 status 0003                                   wtemp0 007E  
                     _Buzzer_MiliSecond 0CC1                      __size_ofi1___lldiv 0052  
                          _I2C_Transmit 0DDA                      _LCD_CursorPosition 0DAA  
                        ?_LCD_WriteData 0070                      ?_Buzzer_MiliSecond 0022  
                      ??_DAC_Initialize 0032                         ?_LCD_CursorHome 0070  
                       __initialization 002D                            __end_of_main 0453  
               __end_of_Buzzer_Count1ms 0DAA                      i1___lldiv@quotient 0079  
                   ?_LCD_CursorPosition 0025                     ??_Buzzer_MiliSecond 0024  
                                ??_main 0055                    __end_of_mTouch_Check 078B  
                           ?_Basic_Init 0070                                  _BCL2IE 04A1  
                                _BCL2IF 00A1                        ___llmod@dividend 0034  
                  __size_of_mTouch_Init 0013                    __size_of_mTouch_Read 0025  
                                _CCPR2L 0298                    ??_LCD_CursorPosition 0026  
                                _ANSELA 018C                                  ?_putch 0070  
                                _ANSELB 018D                                  _T1GCON 0019  
                                i1l2204 065B                                  i1l2212 0664  
                                i1l2230 0691                                  i1l2400 0DA4  
                                i1l2232 0696                                  i1l2224 067B  
                                i1l2234 0698                                  i1l2236 069A  
                                i1l2290 0EE1                                  i1l2370 073E  
                                i1l2356 0705                                  i1l2294 0EEB  
                                i1l2366 0733                                  i1l2358 0713  
                                i1l2550 055A                                  i1l2552 055E  
                                i1l1682 0CD4                                  i1l2556 056A  
                                i1l2564 05F0                                  i1l2592 064C  
                                i1l2920 0012                                  i1l2928 0024  
                       _mTouch_Interval 0061                      I2C2_Transmit@i_574 0028  
                                u143_25 0E09               __end_of_Buzzer_MiliSecond 0CCB  
                                u163_25 0EEC                                  u164_25 0EF3  
                                u181_25 0708                                  u183_25 0714  
                                u184_25 0728                                  u185_25 0734  
                                u196_25 05F6                                  _OSCCON 0099  
                    I2C2_Transmit@pData 0022                                  _TMR1IE 0488  
                                _TMR1IF 0088                               ??_Handler 0021  
                                _TMR4IE 0499                                  _TMR4IF 0099  
                                _TMR6IE 049B                                  _TMR1ON 00C0  
                                _TMR6IF 009B                                  _SSP2IE 04A0  
                                _SSP2IF 00A0                _mTouch_IntervalDecrement 0D3B  
                     ?_Timer1_GetMinute 0070                       ?_Timer1_GetSecond 0070  
                       _mTouch_PortInit 0CE3                           ??_Timer1_Init 0022  
                   __end_of_Buzzer_Init 0ED9                           ??_Timer6_Init 0022  
                    ??_Timer1_GetMinute 0022                      ??_Timer1_GetSecond 0022  
                                ___lmul 0ED9                                  ___wmul 0E11  
                             ??___lldiv 002A                               ??___llmod 0038  
                                _printf 0058                       __end_ofi1___lldiv 0747  
                      I2C_Transmit@I2Cx 0030                               ??_isdigit 0022  
                             ?_I2C_Init 0027                                  putch@c 0025  
                      I2C_Transmit@size 002C                 __end_of__initialization 0054  
                             ?_LCD_Init 0070                         ??_LCD_WriteData 0022  
                     ?_Timer6_CheckFlag 0070            __size_ofi1_Buzzer_MiliSecond 000A  
                            _VoltageReg 006B                      ??_Timer6_CheckFlag 0070  
                    Buzzer_SetDuty@duty 0070                          __pcstackCOMMON 0070  
                   __size_of_Basic_Init 0011                            __pidataBANK1 0E2D  
                          __pidataBANK2 0F44                        ?_Buzzer_Count1ms 0070  
                         __end_of_putch 0CB7                     __end_of_Timer1_Init 0E8C  
                   __end_of_Timer6_Init 0D81               Buzzer_SetDuty@CCP2CON_Pre 0074  
                            ??_I2C_Init 002A                                 ??_putch 0025  
               __end_of_mTouch_PortInit 0CF0                              __pbssBANK0 0059  
                            __pbssBANK1 00A0              __size_of_Buzzer_MiliSecond 000A  
                           _Buzzer_Init 0EB1                              ??_LCD_Init 0026  
               __size_of_Buzzer_SetDuty 001C                           _DAC_DataTable 0220  
                          I2C_Init@I2Cx 002C             __end_of_I2C_CommonInterrupt 0C97  
                          I2C_Init@mode 0028                              __pmaintext 0387  
                               ?___lmul 0070                                 ?___wmul 0022  
             __size_of_DAC_WriteVoltage 002F                              __pintentry 0004  
                 __size_of_mTouch_Check 0044                                 _CCP2CON 029A  
                     ?_LCD_DisplayClear 0070                          ___lmul@product 0078  
                               _APFCON0 011D                                 _APFCON1 011E  
                               _CCPTMRS 029E                                 ?_printf 003A  
                       _Timer1_Count1ms 04EB                      ??_LCD_DisplayClear 0025  
                               _CPSCON0 001E                                 _CPSCON1 001F  
                               _SSP2ADD 021A                                 _SSP2BUF 0219  
                               _SSP2MSK 021B                     I2C2_Transmit@result 0029  
                      ??_LCD_CursorHome 0025                                 _Handler 0004  
                    mTouch_Read@channel 006A                            _mTouch_Check 0747  
                 __end_of_I2C2_Transmit 04EB                             _Timer1_Init 0E6B  
                           _Timer6_Init 0D6E       __size_of_Timer1_DetectAssignCount 006A  
                       __size_of___lmul 002F               ?_Timer1_DetectAssignCount 0070  
                               ___lldiv 06A2                         __size_of___wmul 001C  
                               ___llmod 0FBD                         __CFG_STVREN$OFF 0000  
            __end_of_Timer1_ClearRecord 0F44                                 __ptext1 0058  
                               __ptext2 0CAE                                 __ptext3 0D0C  
                               __ptext4 0E11                                 __ptext5 0FBD  
                               __ptext6 06A2                                 __ptext7 0D81  
                               __ptext8 0CE3                                 __ptext9 0747  
                       __size_of_printf 01A0                                 _dpowers 01F8  
                               _isdigit 0D0C                            ??_Basic_Init 0022  
            ??_mTouch_IntervalDecrement 0070                                 clrloop0 0CA3  
            __end_of_Timer1_GetCountSum 0D6E                    end_of_initialization 0054  
                      ?_mTouch_PortInit 0070                                 init_ram 0CA8  
                               initloop 0CA9                           ?_I2C2_PinInit 0070  
                           _I2C2_Config 00BA                         ___lldiv@divisor 0022  
                         ?_I2C2_Setting 0023                         ___lldiv@counter 002F  
                     I2C_Transmit@pData 002B                 __end_of_Timer1_Count1ms 0575  
                               printf@c 0054                                 printf@f 003A  
                    __end_of_Basic_Init 0D5D                        _DAC_VoltageTable 00CD  
                          __pstringtext 01F8                  __size_of_Timer1_GetCPM 000E  
                __size_of_Timer1_GetCPS 000E               __size_of_Timer1_GetMinute 0003  
             __size_of_Timer1_GetSecond 0003                     i1_Buzzer_MiliSecond 0CB7  
                      __CFG_FOSC$INTOSC 0000                           ??_mTouch_Init 0023  
                         ??_mTouch_Read 0070                 __size_of_I2C2_Interrupt 0054  
                     __size_of_I2C_Init 0019                               i1___lldiv 06F5  
           __size_of_LCD_CursorPosition 0017                          ??_I2C2_PinInit 0022  
                        _Buzzer_SetDuty 0DF5                    ?i1_Buzzer_MiliSecond 0070  
                           printf@width 0052                          ??_I2C2_Setting 0025  
                         _H7826_01_Gain 0120                       __size_of_LCD_Init 006F  
                     _Timer1_StartCount 0C9D                        _DAC_WriteVoltage 07CF  
                    ?_Timer1_StartCount 0070                          __end_of___lmul 0F08  
                        __end_of___wmul 0E2D                               _ConfigReg 006D  
             __size_of_Timer6_CheckFlag 000B                     ??_Timer1_StartCount 0022  
               __size_of_DAC_Initialize 0020                          __end_of_printf 01F8  
                   start_initialization 002D                              ?i1___lldiv 0070  
                __end_of_Buzzer_SetDuty 0E11                            ?_Buzzer_Init 0070  
                   __end_of_mTouch_Init 0D94                     __end_of_mTouch_Read 0EB1  
                         _Timer1_GetCPM 0CF0                           _Timer1_GetCPS 0CFE  
                 ??i1_Buzzer_MiliSecond 0072                     I2C2_Setting@address 0026  
                       ___llmod@divisor 0030               __end_of_Timer1_StartCount 0CA2  
                       ___llmod@counter 0039                    LCD_CursorPosition@tx 0027  
                  LCD_CursorPosition@ty 0025                   __end_of_LCD_WriteData 0FBD  
                      ?_Timer1_Count1ms 0070                                ??___lmul 0078  
                              ??___wmul 0026                             __pdataBANK1 00CD  
                           __pdataBANK2 0120                                ??_printf 0044  
              __size_of_Buzzer_Count1ms 0016                               ___latbits 0001  
                         __pcstackBANK0 0020        __end_of_mTouch_IntervalDecrement 0D4C  
             __size_of_LCD_DisplayClear 0010                         ?_Buzzer_SetDuty 0070  
                        ?_Timer1_GetCPM 0022                          ?_Timer1_GetCPS 0022  
      __end_of_Timer1_DetectAssignCount 064E                         I2C_Init@address 0027  
                              ?_Handler 0070                           ?_I2C_Transmit 002A  
                         I2C_Init@Speed 0029                            ?_Timer1_Init 0070  
                 DAC_WriteVoltage@volue 0032                            ?_Timer6_Init 0070  
                              ?___lldiv 0022                                ?___llmod 0030  
          __size_of_I2C_CommonInterrupt 0003                        _Timer1_GetMinute 0C97  
                      _Timer1_GetSecond 0C9A                    __end_of_I2C2_PinInit 0CE3  
Timer1_DetectAssignCount@PreviousTimer1 0066                                ?_isdigit 0070  
                              _I2C_Init 0DC1                    __end_of_I2C2_Setting 07CF  
                        _I2C2_Interrupt 064E                              _H7826_Gain 013E  
                           _mTouch_Init 0D81                             _mTouch_Read 0E8C  
                           ??i1___lldiv 0078                      _Timer1_ClearRecord 0F08  
                        __size_of_putch 0009                                _LCD_Init 0575  
                        ___wmul@product 0026                                _CPS_Data 00B4  
                        ??_I2C_Transmit 002D                     ?_Timer1_ClearRecord 0070  
            __size_of_Timer1_StartCount 0005                               clear_ram0 0CA2  
                    _Timer1_GetCountSum 0D5D                    I2C2_Transmit@address 0026  
                              _SSP2CON1 021D                                _SSP2CON2 021E  
                              _SSP2STAT 021C                     ?_Timer1_GetCountSum 0022  
                      _Timer6_CheckFlag 0CCB                       ___wmul@multiplier 0022  
                      mTouch_Check@chan 0029                          _DAC_Initialize 0E4B  
                  ??_Timer1_ClearRecord 0022                  __end_of_I2C2_Interrupt 06A2  
                            printf@flag 0051                              printf@prec 004A  
                __size_of_I2C2_Transmit 0098                         ??_Timer1_GetCPM 0026  
                       ??_Timer1_GetCPS 0026                __end_of_DAC_WriteVoltage 07FE  
                           _CPS_PreData 00B7                       ___lmul@multiplier 0070  
                     ??_Buzzer_Count1ms 0075                    ??_Timer1_GetCountSum 0026  
                      __size_of_Handler 0027                    __size_of_Buzzer_Init 0028  
              _Timer1_DetectAssignCount 05E4                __size_of_mTouch_PortInit 000D  
     __size_of_mTouch_IntervalDecrement 0011               ?_mTouch_IntervalDecrement 0070  
               __size_of_LCD_CursorHome 0010                  __end_of_DAC_Initialize 0E6B  
                      __size_of___lldiv 0053                        __size_of___llmod 0043  
                    LCD_WriteData@point 0024                             _isdigit$819 0022  
                       ?_I2C2_Interrupt 0070                        __size_of_isdigit 000F  
            __end_of_LCD_CursorPosition 0DC1                                __ptext10 0CC1  
                              __ptext11 0D6E                                __ptext20 0575  
                              __ptext12 0C9D                                __ptext21 0D2B  
                              __ptext13 0F08                                __ptext30 078B  
                              __ptext22 0DAA                                __ptext14 0E6B  
                              __ptext31 0CD6                                __ptext23 0D1B  
                              __ptext15 0C9A                                __ptext40 06F5  
                              __ptext32 0EB1                                __ptext24 0F80  
                              __ptext16 0C97                                __ptext41 0CB7  
                              __ptext33 0D4C                                __ptext25 07CF  
                              __ptext17 0D5D                                __ptext42 0ED9  
                              __ptext26 0E4B                                __ptext18 0CFE  
                              __ptext43 0C94                                __ptext35 0E8C  
                              __ptext27 0DDA                                __ptext19 0CF0  
                              __ptext44 064E                                __ptext36 0D3B  
                              __ptext28 0453                                __ptext45 0D94  
                              __ptext37 0CCB                                __ptext29 0DC1  
                              __ptext46 0DF5                                __ptext38 05E4  
                              __ptext39 04EB                        _LCD_DisplayClear 0D2B  
                          _SSP2CON1bits 021D                            _SSP2CON2bits 021E  
                 __end_of_DAC_DataTable 023E                           __size_of_main 00CC  
                         _I2C2_Transmit 0453                    __size_of_Timer1_Init 0021  
                              int$flags 007E                   __size_of_I2C2_PinInit 000D  
                   I2C_Transmit@address 002A                    __size_of_Timer6_Init 0013  
                       ?_DAC_Initialize 0070                               printf@val 004C  
                 __size_of_I2C2_Setting 0044                            _SSP2STATbits 021C  
                  __end_of_I2C_Transmit 0DF5                       I2C2_Setting@Speed 0024  
                      ??_Buzzer_SetDuty 0072             __end_ofi1_Buzzer_MiliSecond 0CC1  
                              isdigit@c 0023                 i1Buzzer_MiliSecond@time 0070  
                              intlevel1 0000                     _I2C_CommonInterrupt 0C94  
                      ___lldiv@dividend 0026                __end_of_Timer1_GetMinute 0C9A  
              __end_of_Timer1_GetSecond 0C9D                       __CFG_CLKOUTEN$OFF 0000  
                          _I2C2_PinInit 0CD6                           ?_mTouch_Check 0070  
                        ?_I2C2_Transmit 0022                            _I2C2_Setting 078B  
                              printf@ap 0050                      I2C_Transmit@result 0031  
                     ??_mTouch_PortInit 0022                        I2C2_Setting@mode 0023  
                  ?_I2C_CommonInterrupt 0070                              _OPTION_REG 0095  
              __size_of_Timer1_Count1ms 008A                        ___lldiv@quotient 002B  
                          ?_mTouch_Init 0070                            ?_mTouch_Read 0070  
                __size_of_LCD_WriteData 003D                __end_of_Timer6_CheckFlag 0CD6  
                        ??_mTouch_Check 0024  
