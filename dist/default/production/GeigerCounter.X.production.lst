

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May 23 12:34:30 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	psect	text44,local,class=CODE,merge=1,delta=2
    56                           	psect	text45,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 1.41
    60                           ; Generated 25/01/2017 GMT
    61                           ; 
    62                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F1827 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  0111                     	;# 
   142  0112                     	;# 
   143  0113                     	;# 
   144  0114                     	;# 
   145  0115                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0118                     	;# 
   149  0119                     	;# 
   150  011A                     	;# 
   151  011B                     	;# 
   152  011D                     	;# 
   153  011E                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0191                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0194                     	;# 
   163  0195                     	;# 
   164  0196                     	;# 
   165  0199                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019D                     	;# 
   174  019E                     	;# 
   175  019F                     	;# 
   176  020C                     	;# 
   177  020D                     	;# 
   178  0211                     	;# 
   179  0211                     	;# 
   180  0212                     	;# 
   181  0212                     	;# 
   182  0213                     	;# 
   183  0213                     	;# 
   184  0214                     	;# 
   185  0214                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0216                     	;# 
   190  0216                     	;# 
   191  0217                     	;# 
   192  0217                     	;# 
   193  0219                     	;# 
   194  021A                     	;# 
   195  021B                     	;# 
   196  021C                     	;# 
   197  021D                     	;# 
   198  021E                     	;# 
   199  021F                     	;# 
   200  0291                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0293                     	;# 
   204  0294                     	;# 
   205  0295                     	;# 
   206  0295                     	;# 
   207  0296                     	;# 
   208  0298                     	;# 
   209  0298                     	;# 
   210  0299                     	;# 
   211  029A                     	;# 
   212  029B                     	;# 
   213  029C                     	;# 
   214  029C                     	;# 
   215  029D                     	;# 
   216  029E                     	;# 
   217  029E                     	;# 
   218  0311                     	;# 
   219  0311                     	;# 
   220  0312                     	;# 
   221  0313                     	;# 
   222  0318                     	;# 
   223  0318                     	;# 
   224  0319                     	;# 
   225  031A                     	;# 
   226  0394                     	;# 
   227  0395                     	;# 
   228  0396                     	;# 
   229  039A                     	;# 
   230  039C                     	;# 
   231  039D                     	;# 
   232  039E                     	;# 
   233  039F                     	;# 
   234  0415                     	;# 
   235  0416                     	;# 
   236  0417                     	;# 
   237  041C                     	;# 
   238  041D                     	;# 
   239  041E                     	;# 
   240  0FE4                     	;# 
   241  0FE5                     	;# 
   242  0FE6                     	;# 
   243  0FE7                     	;# 
   244  0FE8                     	;# 
   245  0FE9                     	;# 
   246  0FEA                     	;# 
   247  0FEB                     	;# 
   248  0FED                     	;# 
   249  0FEE                     	;# 
   250  0FEF                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  0111                     	;# 
   300  0112                     	;# 
   301  0113                     	;# 
   302  0114                     	;# 
   303  0115                     	;# 
   304  0116                     	;# 
   305  0117                     	;# 
   306  0118                     	;# 
   307  0119                     	;# 
   308  011A                     	;# 
   309  011B                     	;# 
   310  011D                     	;# 
   311  011E                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0191                     	;# 
   315  0191                     	;# 
   316  0192                     	;# 
   317  0193                     	;# 
   318  0193                     	;# 
   319  0193                     	;# 
   320  0194                     	;# 
   321  0195                     	;# 
   322  0196                     	;# 
   323  0199                     	;# 
   324  019A                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019C                     	;# 
   330  019C                     	;# 
   331  019D                     	;# 
   332  019E                     	;# 
   333  019F                     	;# 
   334  020C                     	;# 
   335  020D                     	;# 
   336  0211                     	;# 
   337  0211                     	;# 
   338  0212                     	;# 
   339  0212                     	;# 
   340  0213                     	;# 
   341  0213                     	;# 
   342  0214                     	;# 
   343  0214                     	;# 
   344  0215                     	;# 
   345  0215                     	;# 
   346  0215                     	;# 
   347  0216                     	;# 
   348  0216                     	;# 
   349  0217                     	;# 
   350  0217                     	;# 
   351  0219                     	;# 
   352  021A                     	;# 
   353  021B                     	;# 
   354  021C                     	;# 
   355  021D                     	;# 
   356  021E                     	;# 
   357  021F                     	;# 
   358  0291                     	;# 
   359  0291                     	;# 
   360  0292                     	;# 
   361  0293                     	;# 
   362  0294                     	;# 
   363  0295                     	;# 
   364  0295                     	;# 
   365  0296                     	;# 
   366  0298                     	;# 
   367  0298                     	;# 
   368  0299                     	;# 
   369  029A                     	;# 
   370  029B                     	;# 
   371  029C                     	;# 
   372  029C                     	;# 
   373  029D                     	;# 
   374  029E                     	;# 
   375  029E                     	;# 
   376  0311                     	;# 
   377  0311                     	;# 
   378  0312                     	;# 
   379  0313                     	;# 
   380  0318                     	;# 
   381  0318                     	;# 
   382  0319                     	;# 
   383  031A                     	;# 
   384  0394                     	;# 
   385  0395                     	;# 
   386  0396                     	;# 
   387  039A                     	;# 
   388  039C                     	;# 
   389  039D                     	;# 
   390  039E                     	;# 
   391  039F                     	;# 
   392  0415                     	;# 
   393  0416                     	;# 
   394  0417                     	;# 
   395  041C                     	;# 
   396  041D                     	;# 
   397  041E                     	;# 
   398  0FE4                     	;# 
   399  0FE5                     	;# 
   400  0FE6                     	;# 
   401  0FE7                     	;# 
   402  0FE8                     	;# 
   403  0FE9                     	;# 
   404  0FEA                     	;# 
   405  0FEB                     	;# 
   406  0FED                     	;# 
   407  0FEE                     	;# 
   408  0FEF                     	;# 
   409  0000                     	;# 
   410  0001                     	;# 
   411  0002                     	;# 
   412  0003                     	;# 
   413  0004                     	;# 
   414  0005                     	;# 
   415  0006                     	;# 
   416  0007                     	;# 
   417  0008                     	;# 
   418  0009                     	;# 
   419  000A                     	;# 
   420  000B                     	;# 
   421  000C                     	;# 
   422  000D                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001E                     	;# 
   437  001F                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  0091                     	;# 
   441  0092                     	;# 
   442  0093                     	;# 
   443  0094                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  010C                     	;# 
   456  010D                     	;# 
   457  0111                     	;# 
   458  0112                     	;# 
   459  0113                     	;# 
   460  0114                     	;# 
   461  0115                     	;# 
   462  0116                     	;# 
   463  0117                     	;# 
   464  0118                     	;# 
   465  0119                     	;# 
   466  011A                     	;# 
   467  011B                     	;# 
   468  011D                     	;# 
   469  011E                     	;# 
   470  018C                     	;# 
   471  018D                     	;# 
   472  0191                     	;# 
   473  0191                     	;# 
   474  0192                     	;# 
   475  0193                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0194                     	;# 
   479  0195                     	;# 
   480  0196                     	;# 
   481  0199                     	;# 
   482  019A                     	;# 
   483  019B                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019C                     	;# 
   488  019C                     	;# 
   489  019D                     	;# 
   490  019E                     	;# 
   491  019F                     	;# 
   492  020C                     	;# 
   493  020D                     	;# 
   494  0211                     	;# 
   495  0211                     	;# 
   496  0212                     	;# 
   497  0212                     	;# 
   498  0213                     	;# 
   499  0213                     	;# 
   500  0214                     	;# 
   501  0214                     	;# 
   502  0215                     	;# 
   503  0215                     	;# 
   504  0215                     	;# 
   505  0216                     	;# 
   506  0216                     	;# 
   507  0217                     	;# 
   508  0217                     	;# 
   509  0219                     	;# 
   510  021A                     	;# 
   511  021B                     	;# 
   512  021C                     	;# 
   513  021D                     	;# 
   514  021E                     	;# 
   515  021F                     	;# 
   516  0291                     	;# 
   517  0291                     	;# 
   518  0292                     	;# 
   519  0293                     	;# 
   520  0294                     	;# 
   521  0295                     	;# 
   522  0295                     	;# 
   523  0296                     	;# 
   524  0298                     	;# 
   525  0298                     	;# 
   526  0299                     	;# 
   527  029A                     	;# 
   528  029B                     	;# 
   529  029C                     	;# 
   530  029C                     	;# 
   531  029D                     	;# 
   532  029E                     	;# 
   533  029E                     	;# 
   534  0311                     	;# 
   535  0311                     	;# 
   536  0312                     	;# 
   537  0313                     	;# 
   538  0318                     	;# 
   539  0318                     	;# 
   540  0319                     	;# 
   541  031A                     	;# 
   542  0394                     	;# 
   543  0395                     	;# 
   544  0396                     	;# 
   545  039A                     	;# 
   546  039C                     	;# 
   547  039D                     	;# 
   548  039E                     	;# 
   549  039F                     	;# 
   550  0415                     	;# 
   551  0416                     	;# 
   552  0417                     	;# 
   553  041C                     	;# 
   554  041D                     	;# 
   555  041E                     	;# 
   556  0FE4                     	;# 
   557  0FE5                     	;# 
   558  0FE6                     	;# 
   559  0FE7                     	;# 
   560  0FE8                     	;# 
   561  0FE9                     	;# 
   562  0FEA                     	;# 
   563  0FEB                     	;# 
   564  0FED                     	;# 
   565  0FEE                     	;# 
   566  0FEF                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0008                     	;# 
   576  0009                     	;# 
   577  000A                     	;# 
   578  000B                     	;# 
   579  000C                     	;# 
   580  000D                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0016                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001C                     	;# 
   594  001E                     	;# 
   595  001F                     	;# 
   596  008C                     	;# 
   597  008D                     	;# 
   598  0091                     	;# 
   599  0092                     	;# 
   600  0093                     	;# 
   601  0094                     	;# 
   602  0095                     	;# 
   603  0096                     	;# 
   604  0097                     	;# 
   605  0098                     	;# 
   606  0099                     	;# 
   607  009A                     	;# 
   608  009B                     	;# 
   609  009B                     	;# 
   610  009C                     	;# 
   611  009D                     	;# 
   612  009E                     	;# 
   613  010C                     	;# 
   614  010D                     	;# 
   615  0111                     	;# 
   616  0112                     	;# 
   617  0113                     	;# 
   618  0114                     	;# 
   619  0115                     	;# 
   620  0116                     	;# 
   621  0117                     	;# 
   622  0118                     	;# 
   623  0119                     	;# 
   624  011A                     	;# 
   625  011B                     	;# 
   626  011D                     	;# 
   627  011E                     	;# 
   628  018C                     	;# 
   629  018D                     	;# 
   630  0191                     	;# 
   631  0191                     	;# 
   632  0192                     	;# 
   633  0193                     	;# 
   634  0193                     	;# 
   635  0193                     	;# 
   636  0194                     	;# 
   637  0195                     	;# 
   638  0196                     	;# 
   639  0199                     	;# 
   640  019A                     	;# 
   641  019B                     	;# 
   642  019B                     	;# 
   643  019B                     	;# 
   644  019B                     	;# 
   645  019C                     	;# 
   646  019C                     	;# 
   647  019D                     	;# 
   648  019E                     	;# 
   649  019F                     	;# 
   650  020C                     	;# 
   651  020D                     	;# 
   652  0211                     	;# 
   653  0211                     	;# 
   654  0212                     	;# 
   655  0212                     	;# 
   656  0213                     	;# 
   657  0213                     	;# 
   658  0214                     	;# 
   659  0214                     	;# 
   660  0215                     	;# 
   661  0215                     	;# 
   662  0215                     	;# 
   663  0216                     	;# 
   664  0216                     	;# 
   665  0217                     	;# 
   666  0217                     	;# 
   667  0219                     	;# 
   668  021A                     	;# 
   669  021B                     	;# 
   670  021C                     	;# 
   671  021D                     	;# 
   672  021E                     	;# 
   673  021F                     	;# 
   674  0291                     	;# 
   675  0291                     	;# 
   676  0292                     	;# 
   677  0293                     	;# 
   678  0294                     	;# 
   679  0295                     	;# 
   680  0295                     	;# 
   681  0296                     	;# 
   682  0298                     	;# 
   683  0298                     	;# 
   684  0299                     	;# 
   685  029A                     	;# 
   686  029B                     	;# 
   687  029C                     	;# 
   688  029C                     	;# 
   689  029D                     	;# 
   690  029E                     	;# 
   691  029E                     	;# 
   692  0311                     	;# 
   693  0311                     	;# 
   694  0312                     	;# 
   695  0313                     	;# 
   696  0318                     	;# 
   697  0318                     	;# 
   698  0319                     	;# 
   699  031A                     	;# 
   700  0394                     	;# 
   701  0395                     	;# 
   702  0396                     	;# 
   703  039A                     	;# 
   704  039C                     	;# 
   705  039D                     	;# 
   706  039E                     	;# 
   707  039F                     	;# 
   708  0415                     	;# 
   709  0416                     	;# 
   710  0417                     	;# 
   711  041C                     	;# 
   712  041D                     	;# 
   713  041E                     	;# 
   714  0FE4                     	;# 
   715  0FE5                     	;# 
   716  0FE6                     	;# 
   717  0FE7                     	;# 
   718  0FE8                     	;# 
   719  0FE9                     	;# 
   720  0FEA                     	;# 
   721  0FEB                     	;# 
   722  0FED                     	;# 
   723  0FEE                     	;# 
   724  0FEF                     	;# 
   725  0000                     	;# 
   726  0001                     	;# 
   727  0002                     	;# 
   728  0003                     	;# 
   729  0004                     	;# 
   730  0005                     	;# 
   731  0006                     	;# 
   732  0007                     	;# 
   733  0008                     	;# 
   734  0009                     	;# 
   735  000A                     	;# 
   736  000B                     	;# 
   737  000C                     	;# 
   738  000D                     	;# 
   739  0011                     	;# 
   740  0012                     	;# 
   741  0013                     	;# 
   742  0014                     	;# 
   743  0015                     	;# 
   744  0016                     	;# 
   745  0016                     	;# 
   746  0017                     	;# 
   747  0018                     	;# 
   748  0019                     	;# 
   749  001A                     	;# 
   750  001B                     	;# 
   751  001C                     	;# 
   752  001E                     	;# 
   753  001F                     	;# 
   754  008C                     	;# 
   755  008D                     	;# 
   756  0091                     	;# 
   757  0092                     	;# 
   758  0093                     	;# 
   759  0094                     	;# 
   760  0095                     	;# 
   761  0096                     	;# 
   762  0097                     	;# 
   763  0098                     	;# 
   764  0099                     	;# 
   765  009A                     	;# 
   766  009B                     	;# 
   767  009B                     	;# 
   768  009C                     	;# 
   769  009D                     	;# 
   770  009E                     	;# 
   771  010C                     	;# 
   772  010D                     	;# 
   773  0111                     	;# 
   774  0112                     	;# 
   775  0113                     	;# 
   776  0114                     	;# 
   777  0115                     	;# 
   778  0116                     	;# 
   779  0117                     	;# 
   780  0118                     	;# 
   781  0119                     	;# 
   782  011A                     	;# 
   783  011B                     	;# 
   784  011D                     	;# 
   785  011E                     	;# 
   786  018C                     	;# 
   787  018D                     	;# 
   788  0191                     	;# 
   789  0191                     	;# 
   790  0192                     	;# 
   791  0193                     	;# 
   792  0193                     	;# 
   793  0193                     	;# 
   794  0194                     	;# 
   795  0195                     	;# 
   796  0196                     	;# 
   797  0199                     	;# 
   798  019A                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019C                     	;# 
   805  019D                     	;# 
   806  019E                     	;# 
   807  019F                     	;# 
   808  020C                     	;# 
   809  020D                     	;# 
   810  0211                     	;# 
   811  0211                     	;# 
   812  0212                     	;# 
   813  0212                     	;# 
   814  0213                     	;# 
   815  0213                     	;# 
   816  0214                     	;# 
   817  0214                     	;# 
   818  0215                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0216                     	;# 
   822  0216                     	;# 
   823  0217                     	;# 
   824  0217                     	;# 
   825  0219                     	;# 
   826  021A                     	;# 
   827  021B                     	;# 
   828  021C                     	;# 
   829  021D                     	;# 
   830  021E                     	;# 
   831  021F                     	;# 
   832  0291                     	;# 
   833  0291                     	;# 
   834  0292                     	;# 
   835  0293                     	;# 
   836  0294                     	;# 
   837  0295                     	;# 
   838  0295                     	;# 
   839  0296                     	;# 
   840  0298                     	;# 
   841  0298                     	;# 
   842  0299                     	;# 
   843  029A                     	;# 
   844  029B                     	;# 
   845  029C                     	;# 
   846  029C                     	;# 
   847  029D                     	;# 
   848  029E                     	;# 
   849  029E                     	;# 
   850  0311                     	;# 
   851  0311                     	;# 
   852  0312                     	;# 
   853  0313                     	;# 
   854  0318                     	;# 
   855  0318                     	;# 
   856  0319                     	;# 
   857  031A                     	;# 
   858  0394                     	;# 
   859  0395                     	;# 
   860  0396                     	;# 
   861  039A                     	;# 
   862  039C                     	;# 
   863  039D                     	;# 
   864  039E                     	;# 
   865  039F                     	;# 
   866  0415                     	;# 
   867  0416                     	;# 
   868  0417                     	;# 
   869  041C                     	;# 
   870  041D                     	;# 
   871  041E                     	;# 
   872  0FE4                     	;# 
   873  0FE5                     	;# 
   874  0FE6                     	;# 
   875  0FE7                     	;# 
   876  0FE8                     	;# 
   877  0FE9                     	;# 
   878  0FEA                     	;# 
   879  0FEB                     	;# 
   880  0FED                     	;# 
   881  0FEE                     	;# 
   882  0FEF                     	;# 
   883  0000                     	;# 
   884  0001                     	;# 
   885  0002                     	;# 
   886  0003                     	;# 
   887  0004                     	;# 
   888  0005                     	;# 
   889  0006                     	;# 
   890  0007                     	;# 
   891  0008                     	;# 
   892  0009                     	;# 
   893  000A                     	;# 
   894  000B                     	;# 
   895  000C                     	;# 
   896  000D                     	;# 
   897  0011                     	;# 
   898  0012                     	;# 
   899  0013                     	;# 
   900  0014                     	;# 
   901  0015                     	;# 
   902  0016                     	;# 
   903  0016                     	;# 
   904  0017                     	;# 
   905  0018                     	;# 
   906  0019                     	;# 
   907  001A                     	;# 
   908  001B                     	;# 
   909  001C                     	;# 
   910  001E                     	;# 
   911  001F                     	;# 
   912  008C                     	;# 
   913  008D                     	;# 
   914  0091                     	;# 
   915  0092                     	;# 
   916  0093                     	;# 
   917  0094                     	;# 
   918  0095                     	;# 
   919  0096                     	;# 
   920  0097                     	;# 
   921  0098                     	;# 
   922  0099                     	;# 
   923  009A                     	;# 
   924  009B                     	;# 
   925  009B                     	;# 
   926  009C                     	;# 
   927  009D                     	;# 
   928  009E                     	;# 
   929  010C                     	;# 
   930  010D                     	;# 
   931  0111                     	;# 
   932  0112                     	;# 
   933  0113                     	;# 
   934  0114                     	;# 
   935  0115                     	;# 
   936  0116                     	;# 
   937  0117                     	;# 
   938  0118                     	;# 
   939  0119                     	;# 
   940  011A                     	;# 
   941  011B                     	;# 
   942  011D                     	;# 
   943  011E                     	;# 
   944  018C                     	;# 
   945  018D                     	;# 
   946  0191                     	;# 
   947  0191                     	;# 
   948  0192                     	;# 
   949  0193                     	;# 
   950  0193                     	;# 
   951  0193                     	;# 
   952  0194                     	;# 
   953  0195                     	;# 
   954  0196                     	;# 
   955  0199                     	;# 
   956  019A                     	;# 
   957  019B                     	;# 
   958  019B                     	;# 
   959  019B                     	;# 
   960  019B                     	;# 
   961  019C                     	;# 
   962  019C                     	;# 
   963  019D                     	;# 
   964  019E                     	;# 
   965  019F                     	;# 
   966  020C                     	;# 
   967  020D                     	;# 
   968  0211                     	;# 
   969  0211                     	;# 
   970  0212                     	;# 
   971  0212                     	;# 
   972  0213                     	;# 
   973  0213                     	;# 
   974  0214                     	;# 
   975  0214                     	;# 
   976  0215                     	;# 
   977  0215                     	;# 
   978  0215                     	;# 
   979  0216                     	;# 
   980  0216                     	;# 
   981  0217                     	;# 
   982  0217                     	;# 
   983  0219                     	;# 
   984  021A                     	;# 
   985  021B                     	;# 
   986  021C                     	;# 
   987  021D                     	;# 
   988  021E                     	;# 
   989  021F                     	;# 
   990  0291                     	;# 
   991  0291                     	;# 
   992  0292                     	;# 
   993  0293                     	;# 
   994  0294                     	;# 
   995  0295                     	;# 
   996  0295                     	;# 
   997  0296                     	;# 
   998  0298                     	;# 
   999  0298                     	;# 
  1000  0299                     	;# 
  1001  029A                     	;# 
  1002  029B                     	;# 
  1003  029C                     	;# 
  1004  029C                     	;# 
  1005  029D                     	;# 
  1006  029E                     	;# 
  1007  029E                     	;# 
  1008  0311                     	;# 
  1009  0311                     	;# 
  1010  0312                     	;# 
  1011  0313                     	;# 
  1012  0318                     	;# 
  1013  0318                     	;# 
  1014  0319                     	;# 
  1015  031A                     	;# 
  1016  0394                     	;# 
  1017  0395                     	;# 
  1018  0396                     	;# 
  1019  039A                     	;# 
  1020  039C                     	;# 
  1021  039D                     	;# 
  1022  039E                     	;# 
  1023  039F                     	;# 
  1024  0415                     	;# 
  1025  0416                     	;# 
  1026  0417                     	;# 
  1027  041C                     	;# 
  1028  041D                     	;# 
  1029  041E                     	;# 
  1030  0FE4                     	;# 
  1031  0FE5                     	;# 
  1032  0FE6                     	;# 
  1033  0FE7                     	;# 
  1034  0FE8                     	;# 
  1035  0FE9                     	;# 
  1036  0FEA                     	;# 
  1037  0FEB                     	;# 
  1038  0FED                     	;# 
  1039  0FEE                     	;# 
  1040  0FEF                     	;# 
  1041  0000                     	;# 
  1042  0001                     	;# 
  1043  0002                     	;# 
  1044  0003                     	;# 
  1045  0004                     	;# 
  1046  0005                     	;# 
  1047  0006                     	;# 
  1048  0007                     	;# 
  1049  0008                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  0011                     	;# 
  1056  0012                     	;# 
  1057  0013                     	;# 
  1058  0014                     	;# 
  1059  0015                     	;# 
  1060  0016                     	;# 
  1061  0016                     	;# 
  1062  0017                     	;# 
  1063  0018                     	;# 
  1064  0019                     	;# 
  1065  001A                     	;# 
  1066  001B                     	;# 
  1067  001C                     	;# 
  1068  001E                     	;# 
  1069  001F                     	;# 
  1070  008C                     	;# 
  1071  008D                     	;# 
  1072  0091                     	;# 
  1073  0092                     	;# 
  1074  0093                     	;# 
  1075  0094                     	;# 
  1076  0095                     	;# 
  1077  0096                     	;# 
  1078  0097                     	;# 
  1079  0098                     	;# 
  1080  0099                     	;# 
  1081  009A                     	;# 
  1082  009B                     	;# 
  1083  009B                     	;# 
  1084  009C                     	;# 
  1085  009D                     	;# 
  1086  009E                     	;# 
  1087  010C                     	;# 
  1088  010D                     	;# 
  1089  0111                     	;# 
  1090  0112                     	;# 
  1091  0113                     	;# 
  1092  0114                     	;# 
  1093  0115                     	;# 
  1094  0116                     	;# 
  1095  0117                     	;# 
  1096  0118                     	;# 
  1097  0119                     	;# 
  1098  011A                     	;# 
  1099  011B                     	;# 
  1100  011D                     	;# 
  1101  011E                     	;# 
  1102  018C                     	;# 
  1103  018D                     	;# 
  1104  0191                     	;# 
  1105  0191                     	;# 
  1106  0192                     	;# 
  1107  0193                     	;# 
  1108  0193                     	;# 
  1109  0193                     	;# 
  1110  0194                     	;# 
  1111  0195                     	;# 
  1112  0196                     	;# 
  1113  0199                     	;# 
  1114  019A                     	;# 
  1115  019B                     	;# 
  1116  019B                     	;# 
  1117  019B                     	;# 
  1118  019B                     	;# 
  1119  019C                     	;# 
  1120  019C                     	;# 
  1121  019D                     	;# 
  1122  019E                     	;# 
  1123  019F                     	;# 
  1124  020C                     	;# 
  1125  020D                     	;# 
  1126  0211                     	;# 
  1127  0211                     	;# 
  1128  0212                     	;# 
  1129  0212                     	;# 
  1130  0213                     	;# 
  1131  0213                     	;# 
  1132  0214                     	;# 
  1133  0214                     	;# 
  1134  0215                     	;# 
  1135  0215                     	;# 
  1136  0215                     	;# 
  1137  0216                     	;# 
  1138  0216                     	;# 
  1139  0217                     	;# 
  1140  0217                     	;# 
  1141  0219                     	;# 
  1142  021A                     	;# 
  1143  021B                     	;# 
  1144  021C                     	;# 
  1145  021D                     	;# 
  1146  021E                     	;# 
  1147  021F                     	;# 
  1148  0291                     	;# 
  1149  0291                     	;# 
  1150  0292                     	;# 
  1151  0293                     	;# 
  1152  0294                     	;# 
  1153  0295                     	;# 
  1154  0295                     	;# 
  1155  0296                     	;# 
  1156  0298                     	;# 
  1157  0298                     	;# 
  1158  0299                     	;# 
  1159  029A                     	;# 
  1160  029B                     	;# 
  1161  029C                     	;# 
  1162  029C                     	;# 
  1163  029D                     	;# 
  1164  029E                     	;# 
  1165  029E                     	;# 
  1166  0311                     	;# 
  1167  0311                     	;# 
  1168  0312                     	;# 
  1169  0313                     	;# 
  1170  0318                     	;# 
  1171  0318                     	;# 
  1172  0319                     	;# 
  1173  031A                     	;# 
  1174  0394                     	;# 
  1175  0395                     	;# 
  1176  0396                     	;# 
  1177  039A                     	;# 
  1178  039C                     	;# 
  1179  039D                     	;# 
  1180  039E                     	;# 
  1181  039F                     	;# 
  1182  0415                     	;# 
  1183  0416                     	;# 
  1184  0417                     	;# 
  1185  041C                     	;# 
  1186  041D                     	;# 
  1187  041E                     	;# 
  1188  0FE4                     	;# 
  1189  0FE5                     	;# 
  1190  0FE6                     	;# 
  1191  0FE7                     	;# 
  1192  0FE8                     	;# 
  1193  0FE9                     	;# 
  1194  0FEA                     	;# 
  1195  0FEB                     	;# 
  1196  0FED                     	;# 
  1197  0FEE                     	;# 
  1198  0FEF                     	;# 
  1199  0000                     	;# 
  1200  0001                     	;# 
  1201  0002                     	;# 
  1202  0003                     	;# 
  1203  0004                     	;# 
  1204  0005                     	;# 
  1205  0006                     	;# 
  1206  0007                     	;# 
  1207  0008                     	;# 
  1208  0009                     	;# 
  1209  000A                     	;# 
  1210  000B                     	;# 
  1211  000C                     	;# 
  1212  000D                     	;# 
  1213  0011                     	;# 
  1214  0012                     	;# 
  1215  0013                     	;# 
  1216  0014                     	;# 
  1217  0015                     	;# 
  1218  0016                     	;# 
  1219  0016                     	;# 
  1220  0017                     	;# 
  1221  0018                     	;# 
  1222  0019                     	;# 
  1223  001A                     	;# 
  1224  001B                     	;# 
  1225  001C                     	;# 
  1226  001E                     	;# 
  1227  001F                     	;# 
  1228  008C                     	;# 
  1229  008D                     	;# 
  1230  0091                     	;# 
  1231  0092                     	;# 
  1232  0093                     	;# 
  1233  0094                     	;# 
  1234  0095                     	;# 
  1235  0096                     	;# 
  1236  0097                     	;# 
  1237  0098                     	;# 
  1238  0099                     	;# 
  1239  009A                     	;# 
  1240  009B                     	;# 
  1241  009B                     	;# 
  1242  009C                     	;# 
  1243  009D                     	;# 
  1244  009E                     	;# 
  1245  010C                     	;# 
  1246  010D                     	;# 
  1247  0111                     	;# 
  1248  0112                     	;# 
  1249  0113                     	;# 
  1250  0114                     	;# 
  1251  0115                     	;# 
  1252  0116                     	;# 
  1253  0117                     	;# 
  1254  0118                     	;# 
  1255  0119                     	;# 
  1256  011A                     	;# 
  1257  011B                     	;# 
  1258  011D                     	;# 
  1259  011E                     	;# 
  1260  018C                     	;# 
  1261  018D                     	;# 
  1262  0191                     	;# 
  1263  0191                     	;# 
  1264  0192                     	;# 
  1265  0193                     	;# 
  1266  0193                     	;# 
  1267  0193                     	;# 
  1268  0194                     	;# 
  1269  0195                     	;# 
  1270  0196                     	;# 
  1271  0199                     	;# 
  1272  019A                     	;# 
  1273  019B                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019C                     	;# 
  1278  019C                     	;# 
  1279  019D                     	;# 
  1280  019E                     	;# 
  1281  019F                     	;# 
  1282  020C                     	;# 
  1283  020D                     	;# 
  1284  0211                     	;# 
  1285  0211                     	;# 
  1286  0212                     	;# 
  1287  0212                     	;# 
  1288  0213                     	;# 
  1289  0213                     	;# 
  1290  0214                     	;# 
  1291  0214                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0216                     	;# 
  1296  0216                     	;# 
  1297  0217                     	;# 
  1298  0217                     	;# 
  1299  0219                     	;# 
  1300  021A                     	;# 
  1301  021B                     	;# 
  1302  021C                     	;# 
  1303  021D                     	;# 
  1304  021E                     	;# 
  1305  021F                     	;# 
  1306  0291                     	;# 
  1307  0291                     	;# 
  1308  0292                     	;# 
  1309  0293                     	;# 
  1310  0294                     	;# 
  1311  0295                     	;# 
  1312  0295                     	;# 
  1313  0296                     	;# 
  1314  0298                     	;# 
  1315  0298                     	;# 
  1316  0299                     	;# 
  1317  029A                     	;# 
  1318  029B                     	;# 
  1319  029C                     	;# 
  1320  029C                     	;# 
  1321  029D                     	;# 
  1322  029E                     	;# 
  1323  029E                     	;# 
  1324  0311                     	;# 
  1325  0311                     	;# 
  1326  0312                     	;# 
  1327  0313                     	;# 
  1328  0318                     	;# 
  1329  0318                     	;# 
  1330  0319                     	;# 
  1331  031A                     	;# 
  1332  0394                     	;# 
  1333  0395                     	;# 
  1334  0396                     	;# 
  1335  039A                     	;# 
  1336  039C                     	;# 
  1337  039D                     	;# 
  1338  039E                     	;# 
  1339  039F                     	;# 
  1340  0415                     	;# 
  1341  0416                     	;# 
  1342  0417                     	;# 
  1343  041C                     	;# 
  1344  041D                     	;# 
  1345  041E                     	;# 
  1346  0FE4                     	;# 
  1347  0FE5                     	;# 
  1348  0FE6                     	;# 
  1349  0FE7                     	;# 
  1350  0FE8                     	;# 
  1351  0FE9                     	;# 
  1352  0FEA                     	;# 
  1353  0FEB                     	;# 
  1354  0FED                     	;# 
  1355  0FEE                     	;# 
  1356  0FEF                     	;# 
  1357  0000                     	;# 
  1358  0001                     	;# 
  1359  0002                     	;# 
  1360  0003                     	;# 
  1361  0004                     	;# 
  1362  0005                     	;# 
  1363  0006                     	;# 
  1364  0007                     	;# 
  1365  0008                     	;# 
  1366  0009                     	;# 
  1367  000A                     	;# 
  1368  000B                     	;# 
  1369  000C                     	;# 
  1370  000D                     	;# 
  1371  0011                     	;# 
  1372  0012                     	;# 
  1373  0013                     	;# 
  1374  0014                     	;# 
  1375  0015                     	;# 
  1376  0016                     	;# 
  1377  0016                     	;# 
  1378  0017                     	;# 
  1379  0018                     	;# 
  1380  0019                     	;# 
  1381  001A                     	;# 
  1382  001B                     	;# 
  1383  001C                     	;# 
  1384  001E                     	;# 
  1385  001F                     	;# 
  1386  008C                     	;# 
  1387  008D                     	;# 
  1388  0091                     	;# 
  1389  0092                     	;# 
  1390  0093                     	;# 
  1391  0094                     	;# 
  1392  0095                     	;# 
  1393  0096                     	;# 
  1394  0097                     	;# 
  1395  0098                     	;# 
  1396  0099                     	;# 
  1397  009A                     	;# 
  1398  009B                     	;# 
  1399  009B                     	;# 
  1400  009C                     	;# 
  1401  009D                     	;# 
  1402  009E                     	;# 
  1403  010C                     	;# 
  1404  010D                     	;# 
  1405  0111                     	;# 
  1406  0112                     	;# 
  1407  0113                     	;# 
  1408  0114                     	;# 
  1409  0115                     	;# 
  1410  0116                     	;# 
  1411  0117                     	;# 
  1412  0118                     	;# 
  1413  0119                     	;# 
  1414  011A                     	;# 
  1415  011B                     	;# 
  1416  011D                     	;# 
  1417  011E                     	;# 
  1418  018C                     	;# 
  1419  018D                     	;# 
  1420  0191                     	;# 
  1421  0191                     	;# 
  1422  0192                     	;# 
  1423  0193                     	;# 
  1424  0193                     	;# 
  1425  0193                     	;# 
  1426  0194                     	;# 
  1427  0195                     	;# 
  1428  0196                     	;# 
  1429  0199                     	;# 
  1430  019A                     	;# 
  1431  019B                     	;# 
  1432  019B                     	;# 
  1433  019B                     	;# 
  1434  019B                     	;# 
  1435  019C                     	;# 
  1436  019C                     	;# 
  1437  019D                     	;# 
  1438  019E                     	;# 
  1439  019F                     	;# 
  1440  020C                     	;# 
  1441  020D                     	;# 
  1442  0211                     	;# 
  1443  0211                     	;# 
  1444  0212                     	;# 
  1445  0212                     	;# 
  1446  0213                     	;# 
  1447  0213                     	;# 
  1448  0214                     	;# 
  1449  0214                     	;# 
  1450  0215                     	;# 
  1451  0215                     	;# 
  1452  0215                     	;# 
  1453  0216                     	;# 
  1454  0216                     	;# 
  1455  0217                     	;# 
  1456  0217                     	;# 
  1457  0219                     	;# 
  1458  021A                     	;# 
  1459  021B                     	;# 
  1460  021C                     	;# 
  1461  021D                     	;# 
  1462  021E                     	;# 
  1463  021F                     	;# 
  1464  0291                     	;# 
  1465  0291                     	;# 
  1466  0292                     	;# 
  1467  0293                     	;# 
  1468  0294                     	;# 
  1469  0295                     	;# 
  1470  0295                     	;# 
  1471  0296                     	;# 
  1472  0298                     	;# 
  1473  0298                     	;# 
  1474  0299                     	;# 
  1475  029A                     	;# 
  1476  029B                     	;# 
  1477  029C                     	;# 
  1478  029C                     	;# 
  1479  029D                     	;# 
  1480  029E                     	;# 
  1481  029E                     	;# 
  1482  0311                     	;# 
  1483  0311                     	;# 
  1484  0312                     	;# 
  1485  0313                     	;# 
  1486  0318                     	;# 
  1487  0318                     	;# 
  1488  0319                     	;# 
  1489  031A                     	;# 
  1490  0394                     	;# 
  1491  0395                     	;# 
  1492  0396                     	;# 
  1493  039A                     	;# 
  1494  039C                     	;# 
  1495  039D                     	;# 
  1496  039E                     	;# 
  1497  039F                     	;# 
  1498  0415                     	;# 
  1499  0416                     	;# 
  1500  0417                     	;# 
  1501  041C                     	;# 
  1502  041D                     	;# 
  1503  041E                     	;# 
  1504  0FE4                     	;# 
  1505  0FE5                     	;# 
  1506  0FE6                     	;# 
  1507  0FE7                     	;# 
  1508  0FE8                     	;# 
  1509  0FE9                     	;# 
  1510  0FEA                     	;# 
  1511  0FEB                     	;# 
  1512  0FED                     	;# 
  1513  0FEE                     	;# 
  1514  0FEF                     	;# 
  1515  0000                     	;# 
  1516  0001                     	;# 
  1517  0002                     	;# 
  1518  0003                     	;# 
  1519  0004                     	;# 
  1520  0005                     	;# 
  1521  0006                     	;# 
  1522  0007                     	;# 
  1523  0008                     	;# 
  1524  0009                     	;# 
  1525  000A                     	;# 
  1526  000B                     	;# 
  1527  000C                     	;# 
  1528  000D                     	;# 
  1529  0011                     	;# 
  1530  0012                     	;# 
  1531  0013                     	;# 
  1532  0014                     	;# 
  1533  0015                     	;# 
  1534  0016                     	;# 
  1535  0016                     	;# 
  1536  0017                     	;# 
  1537  0018                     	;# 
  1538  0019                     	;# 
  1539  001A                     	;# 
  1540  001B                     	;# 
  1541  001C                     	;# 
  1542  001E                     	;# 
  1543  001F                     	;# 
  1544  008C                     	;# 
  1545  008D                     	;# 
  1546  0091                     	;# 
  1547  0092                     	;# 
  1548  0093                     	;# 
  1549  0094                     	;# 
  1550  0095                     	;# 
  1551  0096                     	;# 
  1552  0097                     	;# 
  1553  0098                     	;# 
  1554  0099                     	;# 
  1555  009A                     	;# 
  1556  009B                     	;# 
  1557  009B                     	;# 
  1558  009C                     	;# 
  1559  009D                     	;# 
  1560  009E                     	;# 
  1561  010C                     	;# 
  1562  010D                     	;# 
  1563  0111                     	;# 
  1564  0112                     	;# 
  1565  0113                     	;# 
  1566  0114                     	;# 
  1567  0115                     	;# 
  1568  0116                     	;# 
  1569  0117                     	;# 
  1570  0118                     	;# 
  1571  0119                     	;# 
  1572  011A                     	;# 
  1573  011B                     	;# 
  1574  011D                     	;# 
  1575  011E                     	;# 
  1576  018C                     	;# 
  1577  018D                     	;# 
  1578  0191                     	;# 
  1579  0191                     	;# 
  1580  0192                     	;# 
  1581  0193                     	;# 
  1582  0193                     	;# 
  1583  0193                     	;# 
  1584  0194                     	;# 
  1585  0195                     	;# 
  1586  0196                     	;# 
  1587  0199                     	;# 
  1588  019A                     	;# 
  1589  019B                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019C                     	;# 
  1594  019C                     	;# 
  1595  019D                     	;# 
  1596  019E                     	;# 
  1597  019F                     	;# 
  1598  020C                     	;# 
  1599  020D                     	;# 
  1600  0211                     	;# 
  1601  0211                     	;# 
  1602  0212                     	;# 
  1603  0212                     	;# 
  1604  0213                     	;# 
  1605  0213                     	;# 
  1606  0214                     	;# 
  1607  0214                     	;# 
  1608  0215                     	;# 
  1609  0215                     	;# 
  1610  0215                     	;# 
  1611  0216                     	;# 
  1612  0216                     	;# 
  1613  0217                     	;# 
  1614  0217                     	;# 
  1615  0219                     	;# 
  1616  021A                     	;# 
  1617  021B                     	;# 
  1618  021C                     	;# 
  1619  021D                     	;# 
  1620  021E                     	;# 
  1621  021F                     	;# 
  1622  0291                     	;# 
  1623  0291                     	;# 
  1624  0292                     	;# 
  1625  0293                     	;# 
  1626  0294                     	;# 
  1627  0295                     	;# 
  1628  0295                     	;# 
  1629  0296                     	;# 
  1630  0298                     	;# 
  1631  0298                     	;# 
  1632  0299                     	;# 
  1633  029A                     	;# 
  1634  029B                     	;# 
  1635  029C                     	;# 
  1636  029C                     	;# 
  1637  029D                     	;# 
  1638  029E                     	;# 
  1639  029E                     	;# 
  1640  0311                     	;# 
  1641  0311                     	;# 
  1642  0312                     	;# 
  1643  0313                     	;# 
  1644  0318                     	;# 
  1645  0318                     	;# 
  1646  0319                     	;# 
  1647  031A                     	;# 
  1648  0394                     	;# 
  1649  0395                     	;# 
  1650  0396                     	;# 
  1651  039A                     	;# 
  1652  039C                     	;# 
  1653  039D                     	;# 
  1654  039E                     	;# 
  1655  039F                     	;# 
  1656  0415                     	;# 
  1657  0416                     	;# 
  1658  0417                     	;# 
  1659  041C                     	;# 
  1660  041D                     	;# 
  1661  041E                     	;# 
  1662  0FE4                     	;# 
  1663  0FE5                     	;# 
  1664  0FE6                     	;# 
  1665  0FE7                     	;# 
  1666  0FE8                     	;# 
  1667  0FE9                     	;# 
  1668  0FEA                     	;# 
  1669  0FEB                     	;# 
  1670  0FED                     	;# 
  1671  0FEE                     	;# 
  1672  0FEF                     	;# 
  1673  0000                     	;# 
  1674  0001                     	;# 
  1675  0002                     	;# 
  1676  0003                     	;# 
  1677  0004                     	;# 
  1678  0005                     	;# 
  1679  0006                     	;# 
  1680  0007                     	;# 
  1681  0008                     	;# 
  1682  0009                     	;# 
  1683  000A                     	;# 
  1684  000B                     	;# 
  1685  000C                     	;# 
  1686  000D                     	;# 
  1687  0011                     	;# 
  1688  0012                     	;# 
  1689  0013                     	;# 
  1690  0014                     	;# 
  1691  0015                     	;# 
  1692  0016                     	;# 
  1693  0016                     	;# 
  1694  0017                     	;# 
  1695  0018                     	;# 
  1696  0019                     	;# 
  1697  001A                     	;# 
  1698  001B                     	;# 
  1699  001C                     	;# 
  1700  001E                     	;# 
  1701  001F                     	;# 
  1702  008C                     	;# 
  1703  008D                     	;# 
  1704  0091                     	;# 
  1705  0092                     	;# 
  1706  0093                     	;# 
  1707  0094                     	;# 
  1708  0095                     	;# 
  1709  0096                     	;# 
  1710  0097                     	;# 
  1711  0098                     	;# 
  1712  0099                     	;# 
  1713  009A                     	;# 
  1714  009B                     	;# 
  1715  009B                     	;# 
  1716  009C                     	;# 
  1717  009D                     	;# 
  1718  009E                     	;# 
  1719  010C                     	;# 
  1720  010D                     	;# 
  1721  0111                     	;# 
  1722  0112                     	;# 
  1723  0113                     	;# 
  1724  0114                     	;# 
  1725  0115                     	;# 
  1726  0116                     	;# 
  1727  0117                     	;# 
  1728  0118                     	;# 
  1729  0119                     	;# 
  1730  011A                     	;# 
  1731  011B                     	;# 
  1732  011D                     	;# 
  1733  011E                     	;# 
  1734  018C                     	;# 
  1735  018D                     	;# 
  1736  0191                     	;# 
  1737  0191                     	;# 
  1738  0192                     	;# 
  1739  0193                     	;# 
  1740  0193                     	;# 
  1741  0193                     	;# 
  1742  0194                     	;# 
  1743  0195                     	;# 
  1744  0196                     	;# 
  1745  0199                     	;# 
  1746  019A                     	;# 
  1747  019B                     	;# 
  1748  019B                     	;# 
  1749  019B                     	;# 
  1750  019B                     	;# 
  1751  019C                     	;# 
  1752  019C                     	;# 
  1753  019D                     	;# 
  1754  019E                     	;# 
  1755  019F                     	;# 
  1756  020C                     	;# 
  1757  020D                     	;# 
  1758  0211                     	;# 
  1759  0211                     	;# 
  1760  0212                     	;# 
  1761  0212                     	;# 
  1762  0213                     	;# 
  1763  0213                     	;# 
  1764  0214                     	;# 
  1765  0214                     	;# 
  1766  0215                     	;# 
  1767  0215                     	;# 
  1768  0215                     	;# 
  1769  0216                     	;# 
  1770  0216                     	;# 
  1771  0217                     	;# 
  1772  0217                     	;# 
  1773  0219                     	;# 
  1774  021A                     	;# 
  1775  021B                     	;# 
  1776  021C                     	;# 
  1777  021D                     	;# 
  1778  021E                     	;# 
  1779  021F                     	;# 
  1780  0291                     	;# 
  1781  0291                     	;# 
  1782  0292                     	;# 
  1783  0293                     	;# 
  1784  0294                     	;# 
  1785  0295                     	;# 
  1786  0295                     	;# 
  1787  0296                     	;# 
  1788  0298                     	;# 
  1789  0298                     	;# 
  1790  0299                     	;# 
  1791  029A                     	;# 
  1792  029B                     	;# 
  1793  029C                     	;# 
  1794  029C                     	;# 
  1795  029D                     	;# 
  1796  029E                     	;# 
  1797  029E                     	;# 
  1798  0311                     	;# 
  1799  0311                     	;# 
  1800  0312                     	;# 
  1801  0313                     	;# 
  1802  0318                     	;# 
  1803  0318                     	;# 
  1804  0319                     	;# 
  1805  031A                     	;# 
  1806  0394                     	;# 
  1807  0395                     	;# 
  1808  0396                     	;# 
  1809  039A                     	;# 
  1810  039C                     	;# 
  1811  039D                     	;# 
  1812  039E                     	;# 
  1813  039F                     	;# 
  1814  0415                     	;# 
  1815  0416                     	;# 
  1816  0417                     	;# 
  1817  041C                     	;# 
  1818  041D                     	;# 
  1819  041E                     	;# 
  1820  0FE4                     	;# 
  1821  0FE5                     	;# 
  1822  0FE6                     	;# 
  1823  0FE7                     	;# 
  1824  0FE8                     	;# 
  1825  0FE9                     	;# 
  1826  0FEA                     	;# 
  1827  0FEB                     	;# 
  1828  0FED                     	;# 
  1829  0FEE                     	;# 
  1830  0FEF                     	;# 
  1831  0000                     	;# 
  1832  0001                     	;# 
  1833  0002                     	;# 
  1834  0003                     	;# 
  1835  0004                     	;# 
  1836  0005                     	;# 
  1837  0006                     	;# 
  1838  0007                     	;# 
  1839  0008                     	;# 
  1840  0009                     	;# 
  1841  000A                     	;# 
  1842  000B                     	;# 
  1843  000C                     	;# 
  1844  000D                     	;# 
  1845  0011                     	;# 
  1846  0012                     	;# 
  1847  0013                     	;# 
  1848  0014                     	;# 
  1849  0015                     	;# 
  1850  0016                     	;# 
  1851  0016                     	;# 
  1852  0017                     	;# 
  1853  0018                     	;# 
  1854  0019                     	;# 
  1855  001A                     	;# 
  1856  001B                     	;# 
  1857  001C                     	;# 
  1858  001E                     	;# 
  1859  001F                     	;# 
  1860  008C                     	;# 
  1861  008D                     	;# 
  1862  0091                     	;# 
  1863  0092                     	;# 
  1864  0093                     	;# 
  1865  0094                     	;# 
  1866  0095                     	;# 
  1867  0096                     	;# 
  1868  0097                     	;# 
  1869  0098                     	;# 
  1870  0099                     	;# 
  1871  009A                     	;# 
  1872  009B                     	;# 
  1873  009B                     	;# 
  1874  009C                     	;# 
  1875  009D                     	;# 
  1876  009E                     	;# 
  1877  010C                     	;# 
  1878  010D                     	;# 
  1879  0111                     	;# 
  1880  0112                     	;# 
  1881  0113                     	;# 
  1882  0114                     	;# 
  1883  0115                     	;# 
  1884  0116                     	;# 
  1885  0117                     	;# 
  1886  0118                     	;# 
  1887  0119                     	;# 
  1888  011A                     	;# 
  1889  011B                     	;# 
  1890  011D                     	;# 
  1891  011E                     	;# 
  1892  018C                     	;# 
  1893  018D                     	;# 
  1894  0191                     	;# 
  1895  0191                     	;# 
  1896  0192                     	;# 
  1897  0193                     	;# 
  1898  0193                     	;# 
  1899  0193                     	;# 
  1900  0194                     	;# 
  1901  0195                     	;# 
  1902  0196                     	;# 
  1903  0199                     	;# 
  1904  019A                     	;# 
  1905  019B                     	;# 
  1906  019B                     	;# 
  1907  019B                     	;# 
  1908  019B                     	;# 
  1909  019C                     	;# 
  1910  019C                     	;# 
  1911  019D                     	;# 
  1912  019E                     	;# 
  1913  019F                     	;# 
  1914  020C                     	;# 
  1915  020D                     	;# 
  1916  0211                     	;# 
  1917  0211                     	;# 
  1918  0212                     	;# 
  1919  0212                     	;# 
  1920  0213                     	;# 
  1921  0213                     	;# 
  1922  0214                     	;# 
  1923  0214                     	;# 
  1924  0215                     	;# 
  1925  0215                     	;# 
  1926  0215                     	;# 
  1927  0216                     	;# 
  1928  0216                     	;# 
  1929  0217                     	;# 
  1930  0217                     	;# 
  1931  0219                     	;# 
  1932  021A                     	;# 
  1933  021B                     	;# 
  1934  021C                     	;# 
  1935  021D                     	;# 
  1936  021E                     	;# 
  1937  021F                     	;# 
  1938  0291                     	;# 
  1939  0291                     	;# 
  1940  0292                     	;# 
  1941  0293                     	;# 
  1942  0294                     	;# 
  1943  0295                     	;# 
  1944  0295                     	;# 
  1945  0296                     	;# 
  1946  0298                     	;# 
  1947  0298                     	;# 
  1948  0299                     	;# 
  1949  029A                     	;# 
  1950  029B                     	;# 
  1951  029C                     	;# 
  1952  029C                     	;# 
  1953  029D                     	;# 
  1954  029E                     	;# 
  1955  029E                     	;# 
  1956  0311                     	;# 
  1957  0311                     	;# 
  1958  0312                     	;# 
  1959  0313                     	;# 
  1960  0318                     	;# 
  1961  0318                     	;# 
  1962  0319                     	;# 
  1963  031A                     	;# 
  1964  0394                     	;# 
  1965  0395                     	;# 
  1966  0396                     	;# 
  1967  039A                     	;# 
  1968  039C                     	;# 
  1969  039D                     	;# 
  1970  039E                     	;# 
  1971  039F                     	;# 
  1972  0415                     	;# 
  1973  0416                     	;# 
  1974  0417                     	;# 
  1975  041C                     	;# 
  1976  041D                     	;# 
  1977  041E                     	;# 
  1978  0FE4                     	;# 
  1979  0FE5                     	;# 
  1980  0FE6                     	;# 
  1981  0FE7                     	;# 
  1982  0FE8                     	;# 
  1983  0FE9                     	;# 
  1984  0FEA                     	;# 
  1985  0FEB                     	;# 
  1986  0FED                     	;# 
  1987  0FEE                     	;# 
  1988  0FEF                     	;# 
  1989                           
  1990                           	psect	stringtext
  1991  0653                     __pstringtext:	
  1992  0653                     _dpowers:	
  1993  0653  3401               	retlw	1
  1994  0654  3400               	retlw	0
  1995  0655  340A               	retlw	10
  1996  0656  3400               	retlw	0
  1997  0657  3464               	retlw	100
  1998  0658  3400               	retlw	0
  1999  0659  34E8               	retlw	232
  2000  065A  3403               	retlw	3
  2001  065B  3410               	retlw	16
  2002  065C  3427               	retlw	39
  2003  065D                     __end_of_dpowers:	
  2004  0016                     _TMR1	set	22
  2005  000C                     _PORTA	set	12
  2006  001F                     _CPSCON1	set	31
  2007  001E                     _CPSCON0	set	30
  2008  0015                     _TMR0	set	21
  2009  0019                     _T1GCON	set	25
  2010  0018                     _T1CON	set	24
  2011  000D                     _PORTB	set	13
  2012  001B                     _PR2	set	27
  2013  001A                     _TMR2	set	26
  2014  001C                     _T2CON	set	28
  2015  009B                     _TMR6IF	set	155
  2016  0099                     _TMR4IF	set	153
  2017  0088                     _TMR1IF	set	136
  2018  00C0                     _TMR1ON	set	192
  2019  005F                     _GIE	set	95
  2020  005E                     _PEIE	set	94
  2021  00A1                     _BCL2IF	set	161
  2022  00A0                     _SSP2IF	set	160
  2023  0093                     _BCL1IF	set	147
  2024  008B                     _SSP1IF	set	139
  2025  0099                     _OSCCON	set	153
  2026  0095                     _OPTION_REG	set	149
  2027  008D                     _TRISB	set	141
  2028  008C                     _TRISA	set	140
  2029  049B                     _TMR6IE	set	1179
  2030  0499                     _TMR4IE	set	1177
  2031  0488                     _TMR1IE	set	1160
  2032  04A1                     _BCL2IE	set	1185
  2033  04A0                     _SSP2IE	set	1184
  2034  0493                     _BCL1IE	set	1171
  2035  048B                     _SSP1IE	set	1163
  2036  011E                     _APFCON1	set	286
  2037  011D                     _APFCON0	set	285
  2038  0866                     _LATA6	set	2150
  2039  0863                     _LATA3	set	2147
  2040  0864                     _LATA4	set	2148
  2041  018D                     _ANSELB	set	397
  2042  018C                     _ANSELA	set	396
  2043  020D                     _WPUB	set	525
  2044  021C                     _SSP2STATbits	set	540
  2045  0219                     _SSP2BUF	set	537
  2046  021E                     _SSP2CON2	set	542
  2047  021B                     _SSP2MSK	set	539
  2048  021E                     _SSP2CON2bits	set	542
  2049  021D                     _SSP2CON1bits	set	541
  2050  021A                     _SSP2ADD	set	538
  2051  021C                     _SSP2STAT	set	540
  2052  021D                     _SSP2CON1	set	541
  2053  0214                     _SSP1STATbits	set	532
  2054  0211                     _SSP1BUF	set	529
  2055  0216                     _SSP1CON2	set	534
  2056  0213                     _SSP1MSK	set	531
  2057  0216                     _SSP1CON2bits	set	534
  2058  0215                     _SSP1CON1bits	set	533
  2059  0212                     _SSP1ADD	set	530
  2060  0214                     _SSP1STAT	set	532
  2061  0215                     _SSP1CON1	set	533
  2062  0298                     _CCPR2L	set	664
  2063  029E                     _CCPTMRS	set	670
  2064  029A                     _CCP2CON	set	666
  2065  041E                     _T6CON	set	1054
  2066  041C                     _TMR6	set	1052
  2067  041D                     _PR6	set	1053
  2068  0417                     _T4CON	set	1047
  2069  0415                     _TMR4	set	1045
  2070  0416                     _PR4	set	1046
  2071  065D                     STR_2:	
  2072  065D  3453               	retlw	83	;'S'
  2073  065E  3445               	retlw	69	;'E'
  2074  065F  344C               	retlw	76	;'L'
  2075  0660  3445               	retlw	69	;'E'
  2076  0661  3443               	retlw	67	;'C'
  2077  0662  3454               	retlw	84	;'T'
  2078  0663  3446               	retlw	70	;'F'
  2079  0664  3455               	retlw	85	;'U'
  2080  0665  344E               	retlw	78	;'N'
  2081  0666  3443               	retlw	67	;'C'
  2082  0667  3400               	retlw	0
  2083  0668                     STR_4:	
  2084  0668  3450               	retlw	80	;'P'
  2085  0669  344D               	retlw	77	;'M'
  2086  066A  3454               	retlw	84	;'T'
  2087  066B  3444               	retlw	68	;'D'
  2088  066C  3445               	retlw	69	;'E'
  2089  066D  3456               	retlw	86	;'V'
  2090  066E  3449               	retlw	73	;'I'
  2091  066F  3443               	retlw	67	;'C'
  2092  0670  3445               	retlw	69	;'E'
  2093  0671  3400               	retlw	0
  2094  0672                     STR_1:	
  2095  0672  3425               	retlw	37	;'%'
  2096  0673  3435               	retlw	53	;'5'
  2097  0674  3475               	retlw	117	;'u'
  2098  0675  346C               	retlw	108	;'l'
  2099  0676  3420               	retlw	32	;' '
  2100  0677  3425               	retlw	37	;'%'
  2101  0678  3437               	retlw	55	;'7'
  2102  0679  3475               	retlw	117	;'u'
  2103  067A  346C               	retlw	108	;'l'
  2104  067B  3400               	retlw	0
  2105  067C                     STR_3:	
  2106  067C  3441               	retlw	65	;'A'
  2107  067D  3444               	retlw	68	;'D'
  2108  067E  344A               	retlw	74	;'J'
  2109  067F  3447               	retlw	71	;'G'
  2110  0680  3441               	retlw	65	;'A'
  2111  0681  3449               	retlw	73	;'I'
  2112  0682  344E               	retlw	78	;'N'
  2113  0683  3400               	retlw	0
  2114                           
  2115                           ; #config settings
  2116  0000                     
  2117                           	psect	cinit
  2118  0033                     start_initialization:	
  2119  0033                     __initialization:	
  2120                           
  2121                           ; Clear objects allocated to BANK0
  2122  0033  3020               	movlw	low __pbssBANK0
  2123  0034  0084               	movwf	4
  2124  0035  3000               	movlw	high __pbssBANK0
  2125  0036  0085               	movwf	5
  2126  0037  3027               	movlw	39
  2127  0038  318F  2706  3180   	fcall	clear_ram0
  2128                           
  2129                           ; Clear objects allocated to BANK1
  2130  003B  30A0               	movlw	low __pbssBANK1
  2131  003C  0084               	movwf	4
  2132  003D  3000               	movlw	high __pbssBANK1
  2133  003E  0085               	movwf	5
  2134  003F  3026               	movlw	38
  2135  0040  318F  2706         	fcall	clear_ram0
  2136  0042                     end_of_initialization:	
  2137                           ;End of C runtime variable initialization code
  2138                           
  2139  0042                     __end_of__initialization:	
  2140  0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2141  0043  0020               	movlb	0
  2142  0044  3183  2B23         	ljmp	_main	;jump to C main() function
  2143                           
  2144                           	psect	bssBANK0
  2145  0020                     __pbssBANK0:	
  2146  0020                     _cnts:	
  2147  0020                     	ds	14
  2148  002E                     _tcnt:	
  2149  002E                     	ds	6
  2150  0034                     _mTouch_Interval:	
  2151  0034                     	ds	3
  2152  0037                     _CPS_Data:	
  2153  0037                     	ds	3
  2154  003A                     _CPS_PreData:	
  2155  003A                     	ds	3
  2156  003D                     _mode:	
  2157  003D                     	ds	2
  2158  003F                     Timer1_DetectAssignCount@PreviousTimer1:	
  2159  003F                     	ds	2
  2160  0041                     _count:	
  2161  0041                     	ds	2
  2162  0043                     mTouch_Read@channel:	
  2163  0043                     	ds	1
  2164  0044                     _VoltageReg:	
  2165  0044                     	ds	2
  2166  0046                     _ConfigReg:	
  2167  0046                     	ds	1
  2168                           
  2169                           	psect	bssBANK1
  2170  00A0                     __pbssBANK1:	
  2171  00A0                     _I2C2_Config:	
  2172  00A0                     	ds	19
  2173  00B3                     _I2C1_Config:	
  2174  00B3                     	ds	19
  2175                           
  2176                           	psect	clrtext
  2177  0F06                     clear_ram0:	
  2178                           ;	Called with FSR0 containing the base address, and
  2179                           ;	WREG with the size to clear
  2180                           
  2181  0F06  0064               	clrwdt	;clear the watchdog before getting into this loop
  2182  0F07                     clrloop0:	
  2183  0F07  0180               	clrf	0	;clear RAM location pointed to by FSR
  2184  0F08  3101               	addfsr 0,1
  2185  0F09  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2186  0F0A  2F07               	goto	clrloop0	;have we reached the end yet?
  2187  0F0B  3400               	retlw	0	;all done for this memory range, return
  2188                           
  2189                           	psect	cstackCOMMON
  2190  0070                     __pcstackCOMMON:	
  2191  0070                     ?_isdigit:	
  2192  0070                     ?_LCD_DisplayClear:	
  2193                           ; 1 bit 
  2194                           
  2195  0070                     ?_Timer1_ClearRecord:	
  2196                           ; 1 bytes @ 0x0
  2197                           
  2198  0070                     ?_Basic_Init:	
  2199                           ; 1 bytes @ 0x0
  2200                           
  2201  0070                     ?_Timer6_Init:	
  2202                           ; 1 bytes @ 0x0
  2203                           
  2204  0070                     ?_mTouch_Check:	
  2205                           ; 1 bytes @ 0x0
  2206                           
  2207  0070                     ?_Timer6_CheckFlag:	
  2208                           ; 1 bytes @ 0x0
  2209                           
  2210  0070                     ??_Timer6_CheckFlag:	
  2211                           ; 1 bytes @ 0x0
  2212                           
  2213  0070                     ?_mTouch_IntervalDecrement:	
  2214                           ; 1 bytes @ 0x0
  2215                           
  2216  0070                     ??_mTouch_IntervalDecrement:	
  2217                           ; 1 bytes @ 0x0
  2218                           
  2219  0070                     ?_Buzzer_Init:	
  2220                           ; 1 bytes @ 0x0
  2221                           
  2222  0070                     ?_Buzzer_SetDuty:	
  2223                           ; 1 bytes @ 0x0
  2224                           
  2225  0070                     ?_Buzzer_Count1ms:	
  2226                           ; 1 bytes @ 0x0
  2227                           
  2228  0070                     ?_I2C1_PinInit:	
  2229                           ; 1 bytes @ 0x0
  2230                           
  2231  0070                     ?_I2C1_Interrupt:	
  2232                           ; 1 bytes @ 0x0
  2233                           
  2234  0070                     ??_I2C1_Interrupt:	
  2235                           ; 1 bytes @ 0x0
  2236                           
  2237  0070                     ?_I2C2_PinInit:	
  2238                           ; 1 bytes @ 0x0
  2239                           
  2240  0070                     ?_I2C2_Interrupt:	
  2241                           ; 1 bytes @ 0x0
  2242                           
  2243  0070                     ??_I2C2_Interrupt:	
  2244                           ; 1 bytes @ 0x0
  2245                           
  2246  0070                     ?_I2C_CommonInterrupt:	
  2247                           ; 1 bytes @ 0x0
  2248                           
  2249  0070                     ?_LCD_WriteData:	
  2250                           ; 1 bytes @ 0x0
  2251                           
  2252  0070                     ?_LCD_Init:	
  2253                           ; 1 bytes @ 0x0
  2254                           
  2255  0070                     ?_putch:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0070                     ?_LCD_CursorHome:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0070                     ?_DAC_Initialize:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0070                     ?_Timer1_Init:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0070                     ?_Timer1_StartCount:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0070                     ?_Timer1_Count200us:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0070                     ??_Timer1_Count200us:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0070                     ?_Timer1_DetectAssignCount:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0070                     ?_Timer4_Init:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0070                     ?_Timer4_CheckFlag:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0070                     ??_Timer4_CheckFlag:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0070                     ?_mTouch_PortInit:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0070                     ?_mTouch_Init:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0070                     ?_mTouch_Read:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0070                     ??_mTouch_Read:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0070                     ?_main:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0070                     ?_Handler:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0070                     ?___lldiv:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0070                     Buzzer_SetDuty@duty:	
  2310                           ; 4 bytes @ 0x0
  2311                           
  2312  0070                     ___lldiv@divisor:	
  2313                           ; 2 bytes @ 0x0
  2314                           
  2315                           
  2316                           ; 4 bytes @ 0x0
  2317  0070                     	ds	1
  2318  0071                     ??_I2C_CommonInterrupt:	
  2319                           
  2320                           ; 1 bytes @ 0x1
  2321  0071                     	ds	1
  2322  0072                     ??_Buzzer_SetDuty:	
  2323                           
  2324                           ; 1 bytes @ 0x2
  2325  0072                     	ds	2
  2326  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
  2327  0074                     ___lldiv@dividend:	
  2328                           ; 1 bytes @ 0x4
  2329                           
  2330                           
  2331                           ; 4 bytes @ 0x4
  2332  0074                     	ds	1
  2333  0075                     ??_Buzzer_Count1ms:	
  2334                           
  2335                           ; 1 bytes @ 0x5
  2336  0075                     	ds	3
  2337  0078                     ??___lldiv:	
  2338                           
  2339                           ; 1 bytes @ 0x8
  2340  0078                     	ds	1
  2341  0079                     ___lldiv@quotient:	
  2342                           
  2343                           ; 4 bytes @ 0x9
  2344  0079                     	ds	4
  2345  007D                     ___lldiv@counter:	
  2346                           
  2347                           ; 1 bytes @ 0xD
  2348  007D                     	ds	1
  2349  007E                     ??_Timer1_DetectAssignCount:	
  2350                           
  2351                           	psect	cstackBANK0
  2352  0047                     __pcstackBANK0:	
  2353                           ; 1 bytes @ 0xE
  2354                           
  2355  0047                     ??_Handler:	
  2356                           
  2357                           ; 1 bytes @ 0x0
  2358  0047                     	ds	1
  2359  0048                     ??_Timer1_ClearRecord:	
  2360  0048                     ??_Basic_Init:	
  2361                           ; 1 bytes @ 0x1
  2362                           
  2363  0048                     ??_Timer6_Init:	
  2364                           ; 1 bytes @ 0x1
  2365                           
  2366  0048                     ??_isdigit:	
  2367                           ; 1 bytes @ 0x1
  2368                           
  2369  0048                     ??_Buzzer_Init:	
  2370                           ; 1 bytes @ 0x1
  2371                           
  2372  0048                     ?_Buzzer_MiliSecond:	
  2373                           ; 1 bytes @ 0x1
  2374                           
  2375  0048                     ??_I2C1_PinInit:	
  2376                           ; 1 bytes @ 0x1
  2377                           
  2378  0048                     ?_I2C1_Transmit:	
  2379                           ; 1 bytes @ 0x1
  2380                           
  2381  0048                     ??_I2C2_PinInit:	
  2382                           ; 1 bytes @ 0x1
  2383                           
  2384  0048                     ?_I2C2_Transmit:	
  2385                           ; 1 bytes @ 0x1
  2386                           
  2387  0048                     ??_LCD_WriteData:	
  2388                           ; 1 bytes @ 0x1
  2389                           
  2390  0048                     ??_Timer1_Init:	
  2391                           ; 1 bytes @ 0x1
  2392                           
  2393  0048                     ??_Timer1_StartCount:	
  2394                           ; 1 bytes @ 0x1
  2395                           
  2396  0048                     ??_Timer4_Init:	
  2397                           ; 1 bytes @ 0x1
  2398                           
  2399  0048                     ??_mTouch_PortInit:	
  2400                           ; 1 bytes @ 0x1
  2401                           
  2402  0048                     ?_Timer1_GetCPM:	
  2403                           ; 1 bytes @ 0x1
  2404                           
  2405  0048                     ?___wmul:	
  2406                           ; 2 bytes @ 0x1
  2407                           
  2408  0048                     ?___lwdiv:	
  2409                           ; 2 bytes @ 0x1
  2410                           
  2411  0048                     ?_Timer1_GetCountSum:	
  2412                           ; 2 bytes @ 0x1
  2413                           
  2414  0048                     I2C1_Transmit@pData:	
  2415                           ; 4 bytes @ 0x1
  2416                           
  2417  0048                     I2C2_Transmit@pData:	
  2418                           ; 1 bytes @ 0x1
  2419                           
  2420  0048                     _isdigit$891:	
  2421                           ; 1 bytes @ 0x1
  2422                           
  2423  0048                     Buzzer_MiliSecond@time:	
  2424                           ; 1 bytes @ 0x1
  2425                           
  2426  0048                     ___wmul@multiplier:	
  2427                           ; 2 bytes @ 0x1
  2428                           
  2429  0048                     ___lwdiv@divisor:	
  2430                           ; 2 bytes @ 0x1
  2431                           
  2432                           
  2433                           ; 2 bytes @ 0x1
  2434  0048                     	ds	1
  2435  0049                     ?_I2C1_Setting:	
  2436  0049                     ?_I2C2_Setting:	
  2437                           ; 1 bytes @ 0x2
  2438                           
  2439  0049                     ??_mTouch_Init:	
  2440                           ; 1 bytes @ 0x2
  2441                           
  2442  0049                     I2C1_Setting@mode:	
  2443                           ; 1 bytes @ 0x2
  2444                           
  2445  0049                     I2C1_Transmit@size:	
  2446                           ; 1 bytes @ 0x2
  2447                           
  2448  0049                     I2C2_Setting@mode:	
  2449                           ; 1 bytes @ 0x2
  2450                           
  2451  0049                     I2C2_Transmit@size:	
  2452                           ; 1 bytes @ 0x2
  2453                           
  2454  0049                     isdigit@c:	
  2455                           ; 1 bytes @ 0x2
  2456                           
  2457                           
  2458                           ; 1 bytes @ 0x2
  2459  0049                     	ds	1
  2460  004A                     ??_mTouch_Check:	
  2461  004A                     ??_Buzzer_MiliSecond:	
  2462                           ; 1 bytes @ 0x3
  2463                           
  2464  004A                     ??_I2C1_Transmit:	
  2465                           ; 1 bytes @ 0x3
  2466                           
  2467  004A                     ??_I2C2_Transmit:	
  2468                           ; 1 bytes @ 0x3
  2469                           
  2470  004A                     ??_Timer1_GetCPM:	
  2471                           ; 1 bytes @ 0x3
  2472                           
  2473  004A                     I2C1_Setting@Speed:	
  2474                           ; 1 bytes @ 0x3
  2475                           
  2476  004A                     I2C2_Setting@Speed:	
  2477                           ; 1 bytes @ 0x3
  2478                           
  2479  004A                     LCD_WriteData@point:	
  2480                           ; 1 bytes @ 0x3
  2481                           
  2482  004A                     ___wmul@multiplicand:	
  2483                           ; 1 bytes @ 0x3
  2484                           
  2485  004A                     ___lwdiv@dividend:	
  2486                           ; 2 bytes @ 0x3
  2487                           
  2488                           
  2489                           ; 2 bytes @ 0x3
  2490  004A                     	ds	1
  2491  004B                     ??_LCD_DisplayClear:	
  2492  004B                     ??_I2C1_Setting:	
  2493                           ; 1 bytes @ 0x4
  2494                           
  2495  004B                     ??_I2C2_Setting:	
  2496                           ; 1 bytes @ 0x4
  2497                           
  2498  004B                     ??_putch:	
  2499                           ; 1 bytes @ 0x4
  2500                           
  2501  004B                     ??_LCD_CursorHome:	
  2502                           ; 1 bytes @ 0x4
  2503                           
  2504  004B                     putch@c:	
  2505                           ; 1 bytes @ 0x4
  2506                           
  2507                           
  2508                           ; 1 bytes @ 0x4
  2509  004B                     	ds	1
  2510  004C                     ??_LCD_Init:	
  2511  004C                     ??_Timer1_GetCountSum:	
  2512                           ; 1 bytes @ 0x5
  2513                           
  2514  004C                     ??___wmul:	
  2515                           ; 1 bytes @ 0x5
  2516                           
  2517  004C                     ??___lwdiv:	
  2518                           ; 1 bytes @ 0x5
  2519                           
  2520  004C                     I2C1_Setting@address:	
  2521                           ; 1 bytes @ 0x5
  2522                           
  2523  004C                     I2C1_Transmit@address:	
  2524                           ; 1 bytes @ 0x5
  2525                           
  2526  004C                     I2C2_Setting@address:	
  2527                           ; 1 bytes @ 0x5
  2528                           
  2529  004C                     I2C2_Transmit@address:	
  2530                           ; 1 bytes @ 0x5
  2531                           
  2532  004C                     ___wmul@product:	
  2533                           ; 1 bytes @ 0x5
  2534                           
  2535                           
  2536                           ; 2 bytes @ 0x5
  2537  004C                     	ds	1
  2538  004D                     ?_I2C_Init:	
  2539  004D                     I2C1_Transmit@i:	
  2540                           ; 1 bytes @ 0x6
  2541                           
  2542  004D                     I2C2_Transmit@i:	
  2543                           ; 1 bytes @ 0x6
  2544                           
  2545  004D                     I2C_Init@address:	
  2546                           ; 1 bytes @ 0x6
  2547                           
  2548  004D                     ___lwdiv@quotient:	
  2549                           ; 1 bytes @ 0x6
  2550                           
  2551                           
  2552                           ; 2 bytes @ 0x6
  2553  004D                     	ds	1
  2554  004E                     I2C1_Transmit@i_172:	
  2555  004E                     I2C2_Transmit@i_316:	
  2556                           ; 1 bytes @ 0x7
  2557                           
  2558  004E                     I2C_Init@mode:	
  2559                           ; 1 bytes @ 0x7
  2560                           
  2561                           
  2562                           ; 1 bytes @ 0x7
  2563  004E                     	ds	1
  2564  004F                     I2C1_Transmit@result:	
  2565  004F                     I2C2_Transmit@result:	
  2566                           ; 1 bytes @ 0x8
  2567                           
  2568  004F                     I2C_Init@Speed:	
  2569                           ; 1 bytes @ 0x8
  2570                           
  2571  004F                     mTouch_Check@chan:	
  2572                           ; 1 bytes @ 0x8
  2573                           
  2574  004F                     ___lwdiv@counter:	
  2575                           ; 1 bytes @ 0x8
  2576                           
  2577                           
  2578                           ; 1 bytes @ 0x8
  2579  004F                     	ds	1
  2580  0050                     ??_I2C_Init:	
  2581  0050                     ?_I2C_Transmit:	
  2582                           ; 1 bytes @ 0x9
  2583                           
  2584  0050                     ?___lwmod:	
  2585                           ; 1 bytes @ 0x9
  2586                           
  2587  0050                     I2C_Transmit@address:	
  2588                           ; 2 bytes @ 0x9
  2589                           
  2590  0050                     ___lwmod@divisor:	
  2591                           ; 1 bytes @ 0x9
  2592                           
  2593                           
  2594                           ; 2 bytes @ 0x9
  2595  0050                     	ds	1
  2596  0051                     I2C_Transmit@pData:	
  2597                           
  2598                           ; 1 bytes @ 0xA
  2599  0051                     	ds	1
  2600  0052                     I2C_Init@I2Cx:	
  2601  0052                     I2C_Transmit@size:	
  2602                           ; 1 bytes @ 0xB
  2603                           
  2604  0052                     ___lwmod@dividend:	
  2605                           ; 1 bytes @ 0xB
  2606                           
  2607                           
  2608                           ; 2 bytes @ 0xB
  2609  0052                     	ds	1
  2610  0053                     ??_I2C_Transmit:	
  2611                           
  2612                           ; 1 bytes @ 0xC
  2613  0053                     	ds	1
  2614  0054                     ??___lwmod:	
  2615                           
  2616                           ; 1 bytes @ 0xD
  2617  0054                     	ds	1
  2618  0055                     ___lwmod@counter:	
  2619                           
  2620                           ; 1 bytes @ 0xE
  2621  0055                     	ds	1
  2622  0056                     ?_printf:	
  2623  0056                     I2C_Transmit@I2Cx:	
  2624                           ; 2 bytes @ 0xF
  2625                           
  2626  0056                     printf@f:	
  2627                           ; 1 bytes @ 0xF
  2628                           
  2629                           
  2630                           ; 2 bytes @ 0xF
  2631  0056                     	ds	1
  2632  0057                     I2C_Transmit@result:	
  2633                           
  2634                           ; 1 bytes @ 0x10
  2635  0057                     	ds	1
  2636  0058                     ??_DAC_Initialize:	
  2637                           
  2638                           ; 1 bytes @ 0x11
  2639  0058                     	ds	6
  2640  005E                     ??_printf:	
  2641                           
  2642                           ; 1 bytes @ 0x17
  2643  005E                     	ds	4
  2644  0062                     printf@flag:	
  2645                           
  2646                           ; 1 bytes @ 0x1B
  2647  0062                     	ds	1
  2648  0063                     printf@ap:	
  2649                           
  2650                           ; 1 bytes @ 0x1C
  2651  0063                     	ds	1
  2652  0064                     printf@val:	
  2653                           
  2654                           ; 2 bytes @ 0x1D
  2655  0064                     	ds	2
  2656  0066                     printf@prec:	
  2657                           
  2658                           ; 1 bytes @ 0x1F
  2659  0066                     	ds	1
  2660  0067                     printf@width:	
  2661                           
  2662                           ; 2 bytes @ 0x20
  2663  0067                     	ds	2
  2664  0069                     printf@c:	
  2665                           
  2666                           ; 1 bytes @ 0x22
  2667  0069                     	ds	1
  2668  006A                     ??_main:	
  2669                           
  2670                           ; 1 bytes @ 0x23
  2671  006A                     	ds	1
  2672                           
  2673                           	psect	maintext
  2674  0323                     __pmaintext:	
  2675 ;;
  2676 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2677 ;;
  2678 ;; *************** function _main *****************
  2679 ;; Defined at:
  2680 ;;		line 18 in file "main.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      char 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : B1F/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2694 ;;      Params:         0       0       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0       0
  2696 ;;      Temps:          0       1       0       0       0       0
  2697 ;;      Totals:         0       1       0       0       0       0
  2698 ;;Total ram usage:        1 bytes
  2699 ;; Hardware stack levels required when called:    7
  2700 ;; This function calls:
  2701 ;;		_Basic_Init
  2702 ;;		_Buzzer_Init
  2703 ;;		_DAC_Initialize
  2704 ;;		_LCD_CursorHome
  2705 ;;		_LCD_Init
  2706 ;;		_Timer1_GetCPM
  2707 ;;		_Timer1_GetCountSum
  2708 ;;		_Timer1_Init
  2709 ;;		_Timer1_StartCount
  2710 ;;		_Timer4_Init
  2711 ;;		_Timer6_Init
  2712 ;;		_mTouch_Check
  2713 ;;		_mTouch_Init
  2714 ;;		_printf
  2715 ;; This function is called by:
  2716 ;;		Startup code after reset
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           
  2721                           ;psect for function _main
  2722  0323                     _main:	
  2723                           
  2724                           ;main.c: 20: Basic_Init();
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2728  0323  318F  27B3  3183   	fcall	_Basic_Init
  2729                           
  2730                           ;main.c: 21: LATA6 = 1;
  2731  0326  0022               	movlb	2	; select bank2
  2732  0327  170C               	bsf	12,6	;volatile
  2733                           
  2734                           ;main.c: 22: Buzzer_Init();
  2735  0328  3187  272E  3183   	fcall	_Buzzer_Init
  2736                           
  2737                           ;main.c: 23: LCD_Init();
  2738  032B  3183  23AC  3183   	fcall	_LCD_Init
  2739                           
  2740                           ;main.c: 24: Timer1_Init();
  2741  032E  3187  277B  3183   	fcall	_Timer1_Init
  2742                           
  2743                           ;main.c: 25: mTouch_Init();
  2744  0331  318F  27D7  3183   	fcall	_mTouch_Init
  2745                           
  2746                           ;main.c: 26: Timer4_Init();
  2747  0334  318F  2765  3183   	fcall	_Timer4_Init
  2748                           
  2749                           ;main.c: 27: Timer6_Init();
  2750  0337  318F  27C4  3183   	fcall	_Timer6_Init
  2751                           
  2752                           ;main.c: 28: DAC_Initialize();
  2753  033A  3187  279C  3183   	fcall	_DAC_Initialize
  2754                           
  2755                           ;main.c: 30: Timer1_StartCount();
  2756  033D  318E  26F5  3183   	fcall	_Timer1_StartCount
  2757                           
  2758                           ;main.c: 32: mode.ModeNum = 0;
  2759  0340  0020               	movlb	0	; select bank0
  2760  0341  01BE               	clrf	_mode+1
  2761  0342                     l3239:	
  2762                           ;main.c: 34: while(1)
  2763                           
  2764                           
  2765                           ;main.c: 35: {
  2766                           ;main.c: 36: if(mTouch_Check(2)&&(mode.ModeNum<4-1))
  2767  0342  3002               	movlw	2
  2768  0343  3185  2515  3183   	fcall	_mTouch_Check
  2769  0346  3A00               	xorlw	0
  2770  0347  1903               	skipnz
  2771  0348  2B53               	goto	l3245
  2772  0349  3003               	movlw	3
  2773  034A  0020               	movlb	0	; select bank0
  2774  034B  023E               	subwf	_mode+1,w
  2775  034C  1803               	skipnc
  2776  034D  2B53               	goto	l3245
  2777                           
  2778                           ;main.c: 37: mode.ModeNum++;
  2779  034E  3001               	movlw	1
  2780  034F  00EA               	movwf	??_main
  2781  0350  086A               	movf	??_main,w
  2782  0351  07BE               	addwf	_mode+1,f
  2783  0352  2B60               	goto	l3251
  2784  0353                     l3245:	
  2785                           
  2786                           ;main.c: 38: else if(mTouch_Check(1)&&(mode.ModeNum>0))
  2787  0353  3001               	movlw	1
  2788  0354  3185  2515  3183   	fcall	_mTouch_Check
  2789  0357  3A00               	xorlw	0
  2790  0358  1903               	skipnz
  2791  0359  2B60               	goto	l3251
  2792  035A  0020               	movlb	0	; select bank0
  2793  035B  083E               	movf	_mode+1,w
  2794  035C  1903               	btfsc	3,2
  2795  035D  2B60               	goto	l3251
  2796                           
  2797                           ;main.c: 39: mode.ModeNum--;
  2798  035E  3001               	movlw	1
  2799  035F  02BE               	subwf	_mode+1,f
  2800  0360                     l3251:	
  2801                           
  2802                           ;main.c: 41: LCD_CursorHome();
  2803  0360  318F  2782  3183   	fcall	_LCD_CursorHome
  2804                           
  2805                           ;main.c: 42: switch(mode.ModeNum)
  2806  0363  2B9C               	goto	l3263
  2807  0364                     l3253:	
  2808                           ;main.c: 43: {
  2809                           ;main.c: 44: case COUNT:
  2810                           
  2811                           
  2812                           ;main.c: 45: printf("%5ul %7ul", Timer1_GetCPM(),Timer1_GetCountSum());
  2813  0364  3072               	movlw	low (STR_1| (0+32768))
  2814  0365  0020               	movlb	0	; select bank0
  2815  0366  00D6               	movwf	printf@f
  2816  0367  3086               	movlw	high (STR_1| (0+32768))
  2817  0368  00D7               	movwf	printf@f+1
  2818  0369  318F  2700  3183   	fcall	_Timer1_GetCPM
  2819  036C  0020               	movlb	0	; select bank0
  2820  036D  0849               	movf	?_Timer1_GetCPM+1,w
  2821  036E  00D9               	movwf	?_printf+3
  2822  036F  0848               	movf	?_Timer1_GetCPM,w
  2823  0370  00D8               	movwf	?_printf+2
  2824  0371  318F  271F  3183   	fcall	_Timer1_GetCountSum
  2825  0374  0020               	movlb	0	; select bank0
  2826  0375  084B               	movf	?_Timer1_GetCountSum+3,w
  2827  0376  00DD               	movwf	?_printf+7
  2828  0377  084A               	movf	?_Timer1_GetCountSum+2,w
  2829  0378  00DC               	movwf	?_printf+6
  2830  0379  0849               	movf	?_Timer1_GetCountSum+1,w
  2831  037A  00DB               	movwf	?_printf+5
  2832  037B  0848               	movf	?_Timer1_GetCountSum,w
  2833  037C  00DA               	movwf	?_printf+4
  2834  037D  3180  2046  3183   	fcall	_printf
  2835                           
  2836                           ;main.c: 46: break;
  2837  0380  2B42               	goto	l3239
  2838  0381                     l3255:	
  2839                           ;main.c: 47: case SELECTFUNC:
  2840                           
  2841                           
  2842                           ;main.c: 48: printf("SELECTFUNC");
  2843  0381  305D               	movlw	low (STR_2| (0+32768))
  2844  0382  0020               	movlb	0	; select bank0
  2845  0383  00D6               	movwf	printf@f
  2846  0384  3086               	movlw	high (STR_2| (0+32768))
  2847  0385  00D7               	movwf	printf@f+1
  2848  0386  3180  2046  3183   	fcall	_printf
  2849                           
  2850                           ;main.c: 49: break;
  2851  0389  2B42               	goto	l3239
  2852  038A                     l3257:	
  2853                           ;main.c: 50: case ADJGAIN:
  2854                           
  2855                           
  2856                           ;main.c: 51: printf("ADJGAIN");
  2857  038A  307C               	movlw	low (STR_3| (0+32768))
  2858  038B  0020               	movlb	0	; select bank0
  2859  038C  00D6               	movwf	printf@f
  2860  038D  3086               	movlw	high (STR_3| (0+32768))
  2861  038E  00D7               	movwf	printf@f+1
  2862  038F  3180  2046  3183   	fcall	_printf
  2863                           
  2864                           ;main.c: 52: break;
  2865  0392  2B42               	goto	l3239
  2866  0393                     l3259:	
  2867                           ;main.c: 53: case PMTDEVICE:
  2868                           
  2869                           
  2870                           ;main.c: 54: printf("PMTDEVICE");
  2871  0393  3068               	movlw	low (STR_4| (0+32768))
  2872  0394  0020               	movlb	0	; select bank0
  2873  0395  00D6               	movwf	printf@f
  2874  0396  3086               	movlw	high (STR_4| (0+32768))
  2875  0397  00D7               	movwf	printf@f+1
  2876  0398  3180  2046  3183   	fcall	_printf
  2877                           
  2878                           ;main.c: 56: }
  2879                           
  2880                           ;main.c: 55: break;
  2881  039B  2B42               	goto	l3239
  2882  039C                     l3263:	
  2883  039C  0020               	movlb	0	; select bank0
  2884  039D  083E               	movf	_mode+1,w
  2885                           
  2886                           ; Switch size 1, requested type "space"
  2887                           ; Number of cases is 4, Range of values is 0 to 3
  2888                           ; switch strategies available:
  2889                           ; Name         Instructions Cycles
  2890                           ; simple_byte           13     7 (average)
  2891                           ; direct_byte           14     6 (fixed)
  2892                           ; jumptable            260     6 (fixed)
  2893                           ;	Chosen strategy is simple_byte
  2894  039E  3A00               	xorlw	0	; case 0
  2895  039F  1903               	skipnz
  2896  03A0  2B64               	goto	l3253
  2897  03A1  3A01               	xorlw	1	; case 1
  2898  03A2  1903               	skipnz
  2899  03A3  2B81               	goto	l3255
  2900  03A4  3A03               	xorlw	3	; case 2
  2901  03A5  1903               	skipnz
  2902  03A6  2B8A               	goto	l3257
  2903  03A7  3A01               	xorlw	1	; case 3
  2904  03A8  1903               	skipnz
  2905  03A9  2B93               	goto	l3259
  2906  03AA  2B42               	goto	l3239
  2907  03AB  2B42               	goto	l3239
  2908  03AC                     __end_of_main:	
  2909                           ;main.c: 57: }
  2910                           ;main.c: 59: return 0;
  2911                           ;	Return value of _main is never used
  2912                           
  2913                           
  2914                           	psect	text1
  2915  0046                     __ptext1:	
  2916 ;; *************** function _printf *****************
  2917 ;; Defined at:
  2918 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  2921 ;;		 -> STR_4(10), STR_3(8), STR_2(11), STR_1(10), 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  tmpval          4    0        struct .
  2924 ;;  width           2   32[BANK0 ] int 
  2925 ;;  val             2   29[BANK0 ] unsigned int 
  2926 ;;  cp              2    0        PTR const unsigned char 
  2927 ;;  len             2    0        unsigned int 
  2928 ;;  c               1   34[BANK0 ] char 
  2929 ;;  prec            1   31[BANK0 ] char 
  2930 ;;  ap              1   28[BANK0 ] PTR void [1]
  2931 ;;		 -> ?_printf(2), 
  2932 ;;  flag            1   27[BANK0 ] unsigned char 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  2   15[BANK0 ] int 
  2935 ;; Registers used:
  2936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2942 ;;      Params:         0       8       0       0       0       0
  2943 ;;      Locals:         0       8       0       0       0       0
  2944 ;;      Temps:          0       4       0       0       0       0
  2945 ;;      Totals:         0      20       0       0       0       0
  2946 ;;Total ram usage:       20 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    5
  2949 ;; This function calls:
  2950 ;;		___lwdiv
  2951 ;;		___lwmod
  2952 ;;		___wmul
  2953 ;;		_isdigit
  2954 ;;		_putch
  2955 ;; This function is called by:
  2956 ;;		_main
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function _printf
  2962  0046                     _printf:	
  2963                           
  2964                           ;doprnt.c: 466: va_list ap;
  2965                           ;doprnt.c: 499: signed char c;
  2966                           ;doprnt.c: 501: int width;
  2967                           ;doprnt.c: 506: signed char prec;
  2968                           ;doprnt.c: 508: unsigned char flag;
  2969                           ;doprnt.c: 523: union {
  2970                           ;doprnt.c: 524: unsigned long vd;
  2971                           ;doprnt.c: 525: double integ;
  2972                           ;doprnt.c: 526: } tmpval;
  2973                           ;doprnt.c: 528: unsigned int val;
  2974                           ;doprnt.c: 529: unsigned len;
  2975                           ;doprnt.c: 530: const char * cp;
  2976                           ;doprnt.c: 533: *ap = __va_start();
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2980  0046  3058               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2981  0047  0020               	movlb	0	; select bank0
  2982  0048  00DE               	movwf	??_printf
  2983  0049  085E               	movf	??_printf,w
  2984  004A  00E3               	movwf	printf@ap
  2985  004B                     l3167:	
  2986                           ;doprnt.c: 536: while(c = *f++) {
  2987                           
  2988  004B  0020               	movlb	0	; select bank0
  2989  004C  0857               	movf	printf@f+1,w
  2990  004D  00DF               	movwf	??_printf+1
  2991  004E  0856               	movf	printf@f,w
  2992  004F  00DE               	movwf	??_printf
  2993  0050  0AD6               	incf	printf@f,f
  2994  0051  1903               	skipnz
  2995  0052  0AD7               	incf	printf@f+1,f
  2996  0053  085E               	movf	??_printf,w
  2997  0054  0084               	movwf	4
  2998  0055  085F               	movf	??_printf+1,w
  2999  0056  0085               	movwf	5
  3000  0057  0800               	movf	0,w	;code access
  3001  0058  00E0               	movwf	??_printf+2
  3002  0059  0860               	movf	??_printf+2,w
  3003  005A  00E9               	movwf	printf@c
  3004  005B  0869               	movf	printf@c,w
  3005  005C  1903               	btfsc	3,2
  3006  005D  0008               	return
  3007                           
  3008                           ;doprnt.c: 538: if(c != '%')
  3009  005E  3025               	movlw	37
  3010  005F  0669               	xorwf	printf@c,w
  3011  0060  1903               	btfsc	3,2
  3012  0061  2867               	goto	l3111
  3013                           
  3014                           ;doprnt.c: 540: {
  3015                           ;doprnt.c: 541: (putch(c) );
  3016  0062  0869               	movf	printf@c,w
  3017  0063  318F  270C  3180   	fcall	_putch
  3018                           
  3019                           ;doprnt.c: 542: continue;
  3020  0066  284B               	goto	l3167
  3021  0067                     l3111:	
  3022                           
  3023                           ;doprnt.c: 543: }
  3024                           ;doprnt.c: 546: width = 0;
  3025  0067  0020               	movlb	0	; select bank0
  3026  0068  01E7               	clrf	printf@width
  3027  0069  01E8               	clrf	printf@width+1
  3028                           
  3029                           ;doprnt.c: 548: flag = 0;
  3030  006A  01E2               	clrf	printf@flag
  3031                           
  3032                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3033  006B  0856               	movf	printf@f,w
  3034  006C  0084               	movwf	4
  3035  006D  0857               	movf	printf@f+1,w
  3036  006E  0085               	movwf	5
  3037  006F  0800               	movf	0,w	;code access
  3038  0070  318F  2773  3180   	fcall	_isdigit
  3039  0073  1C03               	btfss	3,0
  3040  0074  28AD               	goto	l3129
  3041                           
  3042                           ;doprnt.c: 598: width = 0;
  3043  0075  0020               	movlb	0	; select bank0
  3044  0076  01E7               	clrf	printf@width
  3045  0077  01E8               	clrf	printf@width+1
  3046  0078                     l3117:	
  3047                           ;doprnt.c: 599: do {
  3048                           
  3049                           
  3050                           ;doprnt.c: 600: width *= 10;
  3051  0078  300A               	movlw	10
  3052  0079  0020               	movlb	0	; select bank0
  3053  007A  00C8               	movwf	___wmul@multiplier
  3054  007B  3000               	movlw	0
  3055  007C  00C9               	movwf	___wmul@multiplier+1
  3056  007D  0868               	movf	printf@width+1,w
  3057  007E  00CB               	movwf	___wmul@multiplicand+1
  3058  007F  0867               	movf	printf@width,w
  3059  0080  00CA               	movwf	___wmul@multiplicand
  3060  0081  3187  27BC  3180   	fcall	___wmul
  3061  0084  0020               	movlb	0	; select bank0
  3062  0085  0849               	movf	?___wmul+1,w
  3063  0086  00E8               	movwf	printf@width+1
  3064  0087  0848               	movf	?___wmul,w
  3065  0088  00E7               	movwf	printf@width
  3066                           
  3067                           ;doprnt.c: 601: width += *f++ - '0';
  3068  0089  0856               	movf	printf@f,w
  3069  008A  0084               	movwf	4
  3070  008B  0857               	movf	printf@f+1,w
  3071  008C  0085               	movwf	5
  3072  008D  0800               	movf	0,w	;code access
  3073  008E  3ED0               	addlw	208
  3074  008F  00DE               	movwf	??_printf
  3075  0090  30FF               	movlw	255
  3076  0091  1803               	skipnc
  3077  0092  3000               	movlw	0
  3078  0093  00DF               	movwf	??_printf+1
  3079  0094  085E               	movf	??_printf,w
  3080  0095  07E7               	addwf	printf@width,f
  3081  0096  085F               	movf	??_printf+1,w
  3082  0097  3DE8               	addwfc	printf@width+1,f
  3083  0098  3001               	movlw	1
  3084  0099  07D6               	addwf	printf@f,f
  3085  009A  3000               	movlw	0
  3086  009B  3DD7               	addwfc	printf@f+1,f
  3087                           
  3088                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3089  009C  0856               	movf	printf@f,w
  3090  009D  0084               	movwf	4
  3091  009E  0857               	movf	printf@f+1,w
  3092  009F  0085               	movwf	5
  3093  00A0  0800               	movf	0,w	;code access
  3094  00A1  318F  2773  3180   	fcall	_isdigit
  3095  00A4  1C03               	btfss	3,0
  3096  00A5  28AD               	goto	l3129
  3097  00A6  2878               	goto	l3117
  3098  00A7                     l3125:	
  3099                           ;doprnt.c: 817: case 'u':
  3100                           
  3101                           ;doprnt.c: 813: continue;
  3102                           
  3103                           ;doprnt.c: 802: default:
  3104                           
  3105                           ;doprnt.c: 638: goto alldone;
  3106                           
  3107                           ;doprnt.c: 637: case 0:
  3108                           
  3109                           ;doprnt.c: 608: }
  3110                           ;doprnt.c: 635: switch(c = *f++) {
  3111                           
  3112                           
  3113                           ;doprnt.c: 818: flag |= 0xC0;
  3114  00A7  30C0               	movlw	192
  3115  00A8  0020               	movlb	0	; select bank0
  3116  00A9  00DE               	movwf	??_printf
  3117  00AA  085E               	movf	??_printf,w
  3118  00AB  04E2               	iorwf	printf@flag,f
  3119                           
  3120                           ;doprnt.c: 822: }
  3121                           
  3122                           ;doprnt.c: 819: break;
  3123  00AC  28C2               	goto	l3131
  3124  00AD                     l3129:	
  3125  00AD  0020               	movlb	0	; select bank0
  3126  00AE  0857               	movf	printf@f+1,w
  3127  00AF  00DF               	movwf	??_printf+1
  3128  00B0  0856               	movf	printf@f,w
  3129  00B1  00DE               	movwf	??_printf
  3130  00B2  0AD6               	incf	printf@f,f
  3131  00B3  1903               	skipnz
  3132  00B4  0AD7               	incf	printf@f+1,f
  3133  00B5  085E               	movf	??_printf,w
  3134  00B6  0084               	movwf	4
  3135  00B7  085F               	movf	??_printf+1,w
  3136  00B8  0085               	movwf	5
  3137  00B9  0800               	movf	0,w	;code access
  3138  00BA  00E9               	movwf	printf@c
  3139                           
  3140                           ; Switch size 1, requested type "space"
  3141                           ; Number of cases is 2, Range of values is 0 to 117
  3142                           ; switch strategies available:
  3143                           ; Name         Instructions Cycles
  3144                           ; simple_byte            7     4 (average)
  3145                           ; direct_byte          242     6 (fixed)
  3146                           ; jumptable            260     6 (fixed)
  3147                           ;	Chosen strategy is simple_byte
  3148  00BB  3A00               	xorlw	0	; case 0
  3149  00BC  1903               	skipnz
  3150  00BD  295B               	goto	l705
  3151  00BE  3A75               	xorlw	117	; case 117
  3152  00BF  1903               	skipnz
  3153  00C0  28A7               	goto	l3125
  3154  00C1  284B               	goto	l3167
  3155  00C2                     l3131:	
  3156                           
  3157                           ;doprnt.c: 1273: {
  3158                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3159  00C2  0863               	movf	printf@ap,w
  3160  00C3  0086               	movwf	6
  3161  00C4  0187               	clrf	7
  3162  00C5  3F40               	moviw [0]fsr1
  3163  00C6  00E4               	movwf	printf@val
  3164  00C7  3F41               	moviw [1]fsr1
  3165  00C8  00E5               	movwf	printf@val+1
  3166  00C9  3002               	movlw	2
  3167  00CA  00DE               	movwf	??_printf
  3168  00CB  085E               	movf	??_printf,w
  3169  00CC  07E3               	addwf	printf@ap,f
  3170                           
  3171                           ;doprnt.c: 1287: }
  3172                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3173  00CD  01E9               	clrf	printf@c
  3174  00CE  0AE9               	incf	printf@c,f
  3175  00CF  3005               	movlw	5
  3176  00D0  0669               	xorwf	printf@c,w
  3177  00D1  1903               	btfsc	3,2
  3178  00D2  28F2               	goto	l3147
  3179  00D3                     l3141:	
  3180                           
  3181                           ;doprnt.c: 1306: if(val < dpowers[c])
  3182  00D3  0869               	movf	printf@c,w
  3183  00D4  00DE               	movwf	??_printf
  3184  00D5  01DF               	clrf	??_printf+1
  3185  00D6  35DE               	lslf	??_printf,f
  3186  00D7  0DDF               	rlf	??_printf+1,f
  3187  00D8  3053               	movlw	low (_dpowers| (0+32768))
  3188  00D9  075E               	addwf	??_printf,w
  3189  00DA  0084               	movwf	4
  3190  00DB  3086               	movlw	high (_dpowers| (0+32768))
  3191  00DC  3D5F               	addwfc	??_printf+1,w
  3192  00DD  0085               	movwf	5
  3193  00DE  3F00               	moviw [0]fsr0
  3194  00DF  00E0               	movwf	??_printf+2
  3195  00E0  3F01               	moviw [1]fsr0
  3196  00E1  00E1               	movwf	??_printf+3
  3197  00E2  0861               	movf	??_printf+3,w
  3198  00E3  0265               	subwf	printf@val+1,w
  3199  00E4  1D03               	skipz
  3200  00E5  28E8               	goto	u2715
  3201  00E6  0860               	movf	??_printf+2,w
  3202  00E7  0264               	subwf	printf@val,w
  3203  00E8                     u2715:	
  3204  00E8  1C03               	btfss	3,0
  3205  00E9  28F2               	goto	l3147
  3206                           
  3207                           ;doprnt.c: 1307: break;
  3208  00EA  3001               	movlw	1
  3209  00EB  00DE               	movwf	??_printf
  3210  00EC  085E               	movf	??_printf,w
  3211  00ED  07E9               	addwf	printf@c,f
  3212  00EE  3005               	movlw	5
  3213  00EF  0669               	xorwf	printf@c,w
  3214  00F0  1D03               	btfss	3,2
  3215  00F1  28D3               	goto	l3141
  3216  00F2                     l3147:	
  3217                           
  3218                           ;doprnt.c: 1381: if(width > c)
  3219  00F2  0869               	movf	printf@c,w
  3220  00F3  00DE               	movwf	??_printf
  3221  00F4  01DF               	clrf	??_printf+1
  3222  00F5  1BDE               	btfsc	??_printf,7
  3223  00F6  03DF               	decf	??_printf+1,f
  3224  00F7  085F               	movf	??_printf+1,w
  3225  00F8  3A80               	xorlw	128
  3226  00F9  00E0               	movwf	??_printf+2
  3227  00FA  0868               	movf	printf@width+1,w
  3228  00FB  3A80               	xorlw	128
  3229  00FC  0260               	subwf	??_printf+2,w
  3230  00FD  1D03               	skipz
  3231  00FE  2901               	goto	u2735
  3232  00FF  0867               	movf	printf@width,w
  3233  0100  025E               	subwf	??_printf,w
  3234  0101                     u2735:	
  3235  0101  1803               	skipnc
  3236  0102  290E               	goto	l3151
  3237                           
  3238                           ;doprnt.c: 1382: width -= c;
  3239  0103  0020               	movlb	0	; select bank0
  3240  0104  0869               	movf	printf@c,w
  3241  0105  00DE               	movwf	??_printf
  3242  0106  01DF               	clrf	??_printf+1
  3243  0107  1BDE               	btfsc	??_printf,7
  3244  0108  03DF               	decf	??_printf+1,f
  3245  0109  085E               	movf	??_printf,w
  3246  010A  02E7               	subwf	printf@width,f
  3247  010B  085F               	movf	??_printf+1,w
  3248  010C  3BE8               	subwfb	printf@width+1,f
  3249  010D  2911               	goto	l3153
  3250  010E                     l3151:	
  3251                           
  3252                           ;doprnt.c: 1383: else
  3253                           ;doprnt.c: 1384: width = 0;
  3254  010E  0020               	movlb	0	; select bank0
  3255  010F  01E7               	clrf	printf@width
  3256  0110  01E8               	clrf	printf@width+1
  3257  0111                     l3153:	
  3258                           
  3259                           ;doprnt.c: 1422: {
  3260                           ;doprnt.c: 1424: if(width
  3261                           ;doprnt.c: 1428: )
  3262  0111  0867               	movf	printf@width,w
  3263  0112  0468               	iorwf	printf@width+1,w
  3264  0113  1903               	btfsc	3,2
  3265  0114  2922               	goto	l3159
  3266  0115                     l3155:	
  3267                           ;doprnt.c: 1429: do
  3268                           
  3269                           
  3270                           ;doprnt.c: 1430: (putch(' ') );
  3271  0115  3020               	movlw	32
  3272  0116  318F  270C  3180   	fcall	_putch
  3273                           
  3274                           ;doprnt.c: 1431: while(--width);
  3275  0119  30FF               	movlw	255
  3276  011A  0020               	movlb	0	; select bank0
  3277  011B  07E7               	addwf	printf@width,f
  3278  011C  30FF               	movlw	255
  3279  011D  3DE8               	addwfc	printf@width+1,f
  3280  011E  0867               	movf	printf@width,w
  3281  011F  0468               	iorwf	printf@width+1,w
  3282  0120  1D03               	btfss	3,2
  3283  0121  2915               	goto	l3155
  3284  0122                     l3159:	
  3285                           
  3286                           ;doprnt.c: 1469: }
  3287                           ;doprnt.c: 1472: prec = c;
  3288  0122  0869               	movf	printf@c,w
  3289  0123  00DE               	movwf	??_printf
  3290  0124  085E               	movf	??_printf,w
  3291  0125  00E6               	movwf	printf@prec
  3292  0126                     l3165:	
  3293                           ;doprnt.c: 1474: while(prec--) {
  3294                           
  3295  0126  30FF               	movlw	255
  3296  0127  0020               	movlb	0	; select bank0
  3297  0128  00DE               	movwf	??_printf
  3298  0129  085E               	movf	??_printf,w
  3299  012A  07E6               	addwf	printf@prec,f
  3300  012B  0A66               	incf	printf@prec,w
  3301  012C  1903               	btfsc	3,2
  3302  012D  284B               	goto	l3167
  3303                           
  3304                           ;doprnt.c: 1478: {
  3305                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3306  012E  300A               	movlw	10
  3307  012F  00D0               	movwf	___lwmod@divisor
  3308  0130  3000               	movlw	0
  3309  0131  00D1               	movwf	___lwmod@divisor+1
  3310  0132  0866               	movf	printf@prec,w
  3311  0133  00DE               	movwf	??_printf
  3312  0134  01DF               	clrf	??_printf+1
  3313  0135  35DE               	lslf	??_printf,f
  3314  0136  0DDF               	rlf	??_printf+1,f
  3315  0137  3053               	movlw	low (_dpowers| (0+32768))
  3316  0138  075E               	addwf	??_printf,w
  3317  0139  0084               	movwf	4
  3318  013A  3086               	movlw	high (_dpowers| (0+32768))
  3319  013B  3D5F               	addwfc	??_printf+1,w
  3320  013C  0085               	movwf	5
  3321  013D  3F00               	moviw [0]fsr0
  3322  013E  00C8               	movwf	___lwdiv@divisor
  3323  013F  3F01               	moviw [1]fsr0
  3324  0140  00C9               	movwf	___lwdiv@divisor+1
  3325  0141  0865               	movf	printf@val+1,w
  3326  0142  00CB               	movwf	___lwdiv@dividend+1
  3327  0143  0864               	movf	printf@val,w
  3328  0144  00CA               	movwf	___lwdiv@dividend
  3329  0145  3186  261E  3180   	fcall	___lwdiv
  3330  0148  0020               	movlb	0	; select bank0
  3331  0149  0849               	movf	?___lwdiv+1,w
  3332  014A  00D3               	movwf	___lwmod@dividend+1
  3333  014B  0848               	movf	?___lwdiv,w
  3334  014C  00D2               	movwf	___lwmod@dividend
  3335  014D  3186  2684  3180   	fcall	___lwmod
  3336  0150  0020               	movlb	0	; select bank0
  3337  0151  0850               	movf	?___lwmod,w
  3338  0152  3E30               	addlw	48
  3339  0153  00E0               	movwf	??_printf+2
  3340  0154  0860               	movf	??_printf+2,w
  3341  0155  00E9               	movwf	printf@c
  3342                           
  3343                           ;doprnt.c: 1523: }
  3344                           ;doprnt.c: 1524: (putch(c) );
  3345  0156  0869               	movf	printf@c,w
  3346  0157  318F  270C  3180   	fcall	_putch
  3347  015A  2926               	goto	l3165
  3348  015B                     l705:	
  3349                           ;doprnt.c: 1540: return 0;
  3350                           ;	Return value of _printf is never used
  3351                           
  3352                           ;doprnt.c: 1525: }
  3353                           ;doprnt.c: 1533: }
  3354                           ;doprnt.c: 1535: alldone:
  3355                           
  3356  015B  0008               	return
  3357  015C                     __end_of_printf:	
  3358                           
  3359                           	psect	text2
  3360  0F0C                     __ptext2:	
  3361 ;; *************** function _putch *****************
  3362 ;; Defined at:
  3363 ;;		line 64 in file "LCD.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  c               1    wreg     unsigned char 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  c               1    4[BANK0 ] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0, pclath, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3377 ;;      Params:         0       0       0       0       0       0
  3378 ;;      Locals:         0       1       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0
  3380 ;;      Totals:         0       1       0       0       0       0
  3381 ;;Total ram usage:        1 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    4
  3384 ;; This function calls:
  3385 ;;		_LCD_WriteData
  3386 ;; This function is called by:
  3387 ;;		_printf
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           
  3392                           ;psect for function _putch
  3393  0F0C                     _putch:	
  3394                           
  3395                           ;incstack = 0
  3396                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3397                           ;putch@c stored from wreg
  3398  0F0C  0020               	movlb	0	; select bank0
  3399  0F0D  00CB               	movwf	putch@c
  3400                           
  3401                           ;LCD.c: 66: LATA3 = 1;
  3402  0F0E  0022               	movlb	2	; select bank2
  3403  0F0F  158C               	bsf	12,3	;volatile
  3404                           
  3405                           ;LCD.c: 67: LCD_WriteData(c);
  3406  0F10  0020               	movlb	0	; select bank0
  3407  0F11  084B               	movf	putch@c,w
  3408  0F12  3185  25E1         	fcall	_LCD_WriteData
  3409  0F14  0008               	return
  3410  0F15                     __end_of_putch:	
  3411                           
  3412                           	psect	text3
  3413  0F73                     __ptext3:	
  3414 ;; *************** function _isdigit *****************
  3415 ;; Defined at:
  3416 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/isdigit.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  c               1    wreg     unsigned char 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  c               1    2[BANK0 ] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;		None               void
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3430 ;;      Params:         0       0       0       0       0       0
  3431 ;;      Locals:         0       2       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0       0
  3433 ;;      Totals:         0       2       0       0       0       0
  3434 ;;Total ram usage:        2 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    3
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_printf
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           
  3445                           ;psect for function _isdigit
  3446  0F73                     _isdigit:	
  3447                           
  3448                           ;incstack = 0
  3449                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3450                           ;isdigit@c stored from wreg
  3451  0F73  0020               	movlb	0	; select bank0
  3452  0F74  00C9               	movwf	isdigit@c
  3453  0F75  01C8               	clrf	_isdigit$891
  3454  0F76  303A               	movlw	58
  3455  0F77  0249               	subwf	isdigit@c,w
  3456  0F78  1803               	skipnc
  3457  0F79  2F80               	goto	l2631
  3458  0F7A  3030               	movlw	48
  3459  0F7B  0249               	subwf	isdigit@c,w
  3460  0F7C  1C03               	skipc
  3461  0F7D  2F80               	goto	l2631
  3462  0F7E  01C8               	clrf	_isdigit$891
  3463  0F7F  0AC8               	incf	_isdigit$891,f
  3464  0F80                     l2631:	
  3465  0F80  0C48               	rrf	_isdigit$891,w
  3466  0F81  0008               	return
  3467  0F82                     __end_of_isdigit:	
  3468                           
  3469                           	psect	text4
  3470  07BC                     __ptext4:	
  3471 ;; *************** function ___wmul *****************
  3472 ;; Defined at:
  3473 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  multiplier      2    1[BANK0 ] unsigned int 
  3476 ;;  multiplicand    2    3[BANK0 ] unsigned int 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  product         2    5[BANK0 ] unsigned int 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  2    1[BANK0 ] unsigned int 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3488 ;;      Params:         0       4       0       0       0       0
  3489 ;;      Locals:         0       2       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0
  3491 ;;      Totals:         0       6       0       0       0       0
  3492 ;;Total ram usage:        6 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    3
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_printf
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           
  3503                           ;psect for function ___wmul
  3504  07BC                     ___wmul:	
  3505                           
  3506                           ;incstack = 0
  3507                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3508  07BC  0020               	movlb	0	; select bank0
  3509  07BD  01CC               	clrf	___wmul@product
  3510  07BE  01CD               	clrf	___wmul@product+1
  3511  07BF                     l2637:	
  3512  07BF  1C48               	btfss	___wmul@multiplier,0
  3513  07C0  2FC5               	goto	l830
  3514  07C1  084A               	movf	___wmul@multiplicand,w
  3515  07C2  07CC               	addwf	___wmul@product,f
  3516  07C3  084B               	movf	___wmul@multiplicand+1,w
  3517  07C4  3DCD               	addwfc	___wmul@product+1,f
  3518  07C5                     l830:	
  3519  07C5  3001               	movlw	1
  3520  07C6                     u2075:	
  3521  07C6  35CA               	lslf	___wmul@multiplicand,f
  3522  07C7  0DCB               	rlf	___wmul@multiplicand+1,f
  3523  07C8  0B89               	decfsz	9,f
  3524  07C9  2FC6               	goto	u2075
  3525  07CA  3001               	movlw	1
  3526  07CB                     u2085:	
  3527  07CB  36C9               	lsrf	___wmul@multiplier+1,f
  3528  07CC  0CC8               	rrf	___wmul@multiplier,f
  3529  07CD  0B89               	decfsz	9,f
  3530  07CE  2FCB               	goto	u2085
  3531  07CF  0848               	movf	___wmul@multiplier,w
  3532  07D0  0449               	iorwf	___wmul@multiplier+1,w
  3533  07D1  1D03               	btfss	3,2
  3534  07D2  2FBF               	goto	l2637
  3535  07D3  084D               	movf	___wmul@product+1,w
  3536  07D4  00C9               	movwf	?___wmul+1
  3537  07D5  084C               	movf	___wmul@product,w
  3538  07D6  00C8               	movwf	?___wmul
  3539  07D7  0008               	return
  3540  07D8                     __end_of___wmul:	
  3541                           
  3542                           	psect	text5
  3543  0684                     __ptext5:	
  3544 ;; *************** function ___lwmod *****************
  3545 ;; Defined at:
  3546 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  divisor         2    9[BANK0 ] unsigned int 
  3549 ;;  dividend        2   11[BANK0 ] unsigned int 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  counter         1   14[BANK0 ] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  2    9[BANK0 ] unsigned int 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3561 ;;      Params:         0       4       0       0       0       0
  3562 ;;      Locals:         0       1       0       0       0       0
  3563 ;;      Temps:          0       1       0       0       0       0
  3564 ;;      Totals:         0       6       0       0       0       0
  3565 ;;Total ram usage:        6 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    3
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_printf
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function ___lwmod
  3577  0684                     ___lwmod:	
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3581  0684  0020               	movlb	0	; select bank0
  3582  0685  0850               	movf	___lwmod@divisor,w
  3583  0686  0451               	iorwf	___lwmod@divisor+1,w
  3584  0687  1903               	btfsc	3,2
  3585  0688  2EAC               	goto	l2717
  3586  0689  01D5               	clrf	___lwmod@counter
  3587  068A  0AD5               	incf	___lwmod@counter,f
  3588  068B                     l2707:	
  3589  068B  1BD1               	btfsc	___lwmod@divisor+1,7
  3590  068C  2E97               	goto	l2709
  3591  068D  3001               	movlw	1
  3592  068E                     u2255:	
  3593  068E  35D0               	lslf	___lwmod@divisor,f
  3594  068F  0DD1               	rlf	___lwmod@divisor+1,f
  3595  0690  0B89               	decfsz	9,f
  3596  0691  2E8E               	goto	u2255
  3597  0692  3001               	movlw	1
  3598  0693  00D4               	movwf	??___lwmod
  3599  0694  0854               	movf	??___lwmod,w
  3600  0695  07D5               	addwf	___lwmod@counter,f
  3601  0696  2E8B               	goto	l2707
  3602  0697                     l2709:	
  3603  0697  0851               	movf	___lwmod@divisor+1,w
  3604  0698  0253               	subwf	___lwmod@dividend+1,w
  3605  0699  1D03               	skipz
  3606  069A  2E9D               	goto	u2275
  3607  069B  0850               	movf	___lwmod@divisor,w
  3608  069C  0252               	subwf	___lwmod@dividend,w
  3609  069D                     u2275:	
  3610  069D  1C03               	skipc
  3611  069E  2EA3               	goto	l2713
  3612  069F  0850               	movf	___lwmod@divisor,w
  3613  06A0  02D2               	subwf	___lwmod@dividend,f
  3614  06A1  0851               	movf	___lwmod@divisor+1,w
  3615  06A2  3BD3               	subwfb	___lwmod@dividend+1,f
  3616  06A3                     l2713:	
  3617  06A3  3001               	movlw	1
  3618  06A4                     u2285:	
  3619  06A4  36D1               	lsrf	___lwmod@divisor+1,f
  3620  06A5  0CD0               	rrf	___lwmod@divisor,f
  3621  06A6  0B89               	decfsz	9,f
  3622  06A7  2EA4               	goto	u2285
  3623  06A8  3001               	movlw	1
  3624  06A9  02D5               	subwf	___lwmod@counter,f
  3625  06AA  1D03               	btfss	3,2
  3626  06AB  2E97               	goto	l2709
  3627  06AC                     l2717:	
  3628  06AC  0853               	movf	___lwmod@dividend+1,w
  3629  06AD  00D1               	movwf	?___lwmod+1
  3630  06AE  0852               	movf	___lwmod@dividend,w
  3631  06AF  00D0               	movwf	?___lwmod
  3632  06B0  0008               	return
  3633  06B1                     __end_of___lwmod:	
  3634                           
  3635                           	psect	text6
  3636  061E                     __ptext6:	
  3637 ;; *************** function ___lwdiv *****************
  3638 ;; Defined at:
  3639 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  divisor         2    1[BANK0 ] unsigned int 
  3642 ;;  dividend        2    3[BANK0 ] unsigned int 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  quotient        2    6[BANK0 ] unsigned int 
  3645 ;;  counter         1    8[BANK0 ] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  2    1[BANK0 ] unsigned int 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3655 ;;      Params:         0       4       0       0       0       0
  3656 ;;      Locals:         0       3       0       0       0       0
  3657 ;;      Temps:          0       1       0       0       0       0
  3658 ;;      Totals:         0       8       0       0       0       0
  3659 ;;Total ram usage:        8 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    3
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_printf
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           
  3670                           ;psect for function ___lwdiv
  3671  061E                     ___lwdiv:	
  3672                           
  3673                           ;incstack = 0
  3674                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3675  061E  0020               	movlb	0	; select bank0
  3676  061F  01CD               	clrf	___lwdiv@quotient
  3677  0620  01CE               	clrf	___lwdiv@quotient+1
  3678  0621  0848               	movf	___lwdiv@divisor,w
  3679  0622  0449               	iorwf	___lwdiv@divisor+1,w
  3680  0623  1903               	btfsc	3,2
  3681  0624  2E4E               	goto	l2695
  3682  0625  01CF               	clrf	___lwdiv@counter
  3683  0626  0ACF               	incf	___lwdiv@counter,f
  3684  0627                     l2683:	
  3685  0627  1BC9               	btfsc	___lwdiv@divisor+1,7
  3686  0628  2E33               	goto	l2685
  3687  0629  3001               	movlw	1
  3688  062A                     u2185:	
  3689  062A  35C8               	lslf	___lwdiv@divisor,f
  3690  062B  0DC9               	rlf	___lwdiv@divisor+1,f
  3691  062C  0B89               	decfsz	9,f
  3692  062D  2E2A               	goto	u2185
  3693  062E  3001               	movlw	1
  3694  062F  00CC               	movwf	??___lwdiv
  3695  0630  084C               	movf	??___lwdiv,w
  3696  0631  07CF               	addwf	___lwdiv@counter,f
  3697  0632  2E27               	goto	l2683
  3698  0633                     l2685:	
  3699  0633  3001               	movlw	1
  3700  0634                     u2205:	
  3701  0634  35CD               	lslf	___lwdiv@quotient,f
  3702  0635  0DCE               	rlf	___lwdiv@quotient+1,f
  3703  0636  0B89               	decfsz	9,f
  3704  0637  2E34               	goto	u2205
  3705  0638  0849               	movf	___lwdiv@divisor+1,w
  3706  0639  024B               	subwf	___lwdiv@dividend+1,w
  3707  063A  1D03               	skipz
  3708  063B  2E3E               	goto	u2215
  3709  063C  0848               	movf	___lwdiv@divisor,w
  3710  063D  024A               	subwf	___lwdiv@dividend,w
  3711  063E                     u2215:	
  3712  063E  1C03               	skipc
  3713  063F  2E45               	goto	l2691
  3714  0640  0848               	movf	___lwdiv@divisor,w
  3715  0641  02CA               	subwf	___lwdiv@dividend,f
  3716  0642  0849               	movf	___lwdiv@divisor+1,w
  3717  0643  3BCB               	subwfb	___lwdiv@dividend+1,f
  3718  0644  144D               	bsf	___lwdiv@quotient,0
  3719  0645                     l2691:	
  3720  0645  3001               	movlw	1
  3721  0646                     u2225:	
  3722  0646  36C9               	lsrf	___lwdiv@divisor+1,f
  3723  0647  0CC8               	rrf	___lwdiv@divisor,f
  3724  0648  0B89               	decfsz	9,f
  3725  0649  2E46               	goto	u2225
  3726  064A  3001               	movlw	1
  3727  064B  02CF               	subwf	___lwdiv@counter,f
  3728  064C  1D03               	btfss	3,2
  3729  064D  2E33               	goto	l2685
  3730  064E                     l2695:	
  3731  064E  084E               	movf	___lwdiv@quotient+1,w
  3732  064F  00C9               	movwf	?___lwdiv+1
  3733  0650  084D               	movf	___lwdiv@quotient,w
  3734  0651  00C8               	movwf	?___lwdiv
  3735  0652  0008               	return
  3736  0653                     __end_of___lwdiv:	
  3737                           
  3738                           	psect	text7
  3739  0FD7                     __ptext7:	
  3740 ;; *************** function _mTouch_Init *****************
  3741 ;; Defined at:
  3742 ;;		line 12 in file "mTouch.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0, pclath, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3756 ;;      Params:         0       0       0       0       0       0
  3757 ;;      Locals:         0       0       0       0       0       0
  3758 ;;      Temps:          0       1       0       0       0       0
  3759 ;;      Totals:         0       1       0       0       0       0
  3760 ;;Total ram usage:        1 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    4
  3763 ;; This function calls:
  3764 ;;		_mTouch_PortInit
  3765 ;; This function is called by:
  3766 ;;		_main
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           
  3771                           ;psect for function _mTouch_Init
  3772  0FD7                     _mTouch_Init:	
  3773                           
  3774                           ;mTouch.c: 14: mTouch_PortInit();
  3775                           
  3776                           ;incstack = 0
  3777                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  3778  0FD7  318F  2758         	fcall	_mTouch_PortInit
  3779                           
  3780                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  3781  0FD9  0021               	movlb	1	; select bank1
  3782  0FDA  0815               	movf	21,w	;volatile
  3783                           
  3784                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  3785  0FDB  1595               	bsf	21,3	;volatile
  3786                           
  3787                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  3788  0FDC  1695               	bsf	21,5	;volatile
  3789                           
  3790                           ;mTouch.c: 20: TMR0 = 0x00;
  3791  0FDD  0020               	movlb	0	; select bank0
  3792  0FDE  0195               	clrf	21	;volatile
  3793                           
  3794                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  3795  0FDF  141E               	bsf	30,0	;volatile
  3796                           
  3797                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  3798  0FE0  300C               	movlw	12
  3799  0FE1  00C9               	movwf	??_mTouch_Init
  3800  0FE2  0849               	movf	??_mTouch_Init,w
  3801  0FE3  049E               	iorwf	30,f	;volatile
  3802                           
  3803                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  3804  0FE4  307F               	movlw	127
  3805  0FE5  00C9               	movwf	??_mTouch_Init
  3806  0FE6  0849               	movf	??_mTouch_Init,w
  3807  0FE7  059E               	andwf	30,f	;volatile
  3808                           
  3809                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  3810  0FE8  019F               	clrf	31	;volatile
  3811  0FE9  0008               	return
  3812  0FEA                     __end_of_mTouch_Init:	
  3813                           
  3814                           	psect	text8
  3815  0F58                     __ptext8:	
  3816 ;; *************** function _mTouch_PortInit *****************
  3817 ;; Defined at:
  3818 ;;		line 6 in file "mTouch.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;		None
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3832 ;;      Params:         0       0       0       0       0       0
  3833 ;;      Locals:         0       0       0       0       0       0
  3834 ;;      Temps:          0       1       0       0       0       0
  3835 ;;      Totals:         0       1       0       0       0       0
  3836 ;;Total ram usage:        1 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    3
  3839 ;; This function calls:
  3840 ;;		Nothing
  3841 ;; This function is called by:
  3842 ;;		_mTouch_Init
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           
  3847                           ;psect for function _mTouch_PortInit
  3848  0F58                     _mTouch_PortInit:	
  3849                           
  3850                           ;mTouch.c: 8: TRISA |= (0x07);
  3851                           
  3852                           ;incstack = 0
  3853                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  3854  0F58  3007               	movlw	7
  3855  0F59  0020               	movlb	0	; select bank0
  3856  0F5A  00C8               	movwf	??_mTouch_PortInit
  3857  0F5B  0848               	movf	??_mTouch_PortInit,w
  3858  0F5C  0021               	movlb	1	; select bank1
  3859  0F5D  048C               	iorwf	12,f	;volatile
  3860                           
  3861                           ;mTouch.c: 9: ANSELA |= (0x07);
  3862  0F5E  3007               	movlw	7
  3863  0F5F  0020               	movlb	0	; select bank0
  3864  0F60  00C8               	movwf	??_mTouch_PortInit
  3865  0F61  0848               	movf	??_mTouch_PortInit,w
  3866  0F62  0023               	movlb	3	; select bank3
  3867  0F63  048C               	iorwf	12,f	;volatile
  3868  0F64  0008               	return
  3869  0F65                     __end_of_mTouch_PortInit:	
  3870                           
  3871                           	psect	text9
  3872  0515                     __ptext9:	
  3873 ;; *************** function _mTouch_Check *****************
  3874 ;; Defined at:
  3875 ;;		line 111 in file "main.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  chan            1    wreg     unsigned char 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  chan            1    8[BANK0 ] unsigned char 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      unsigned char 
  3882 ;; Registers used:
  3883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3889 ;;      Params:         0       0       0       0       0       0
  3890 ;;      Locals:         0       1       0       0       0       0
  3891 ;;      Temps:          0       5       0       0       0       0
  3892 ;;      Totals:         0       6       0       0       0       0
  3893 ;;Total ram usage:        6 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    4
  3896 ;; This function calls:
  3897 ;;		_Buzzer_MiliSecond
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           
  3904                           ;psect for function _mTouch_Check
  3905  0515                     _mTouch_Check:	
  3906                           
  3907                           ;incstack = 0
  3908                           ; Regs used in _mTouch_Check: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3909                           ;mTouch_Check@chan stored from wreg
  3910  0515  0020               	movlb	0	; select bank0
  3911  0516  00CF               	movwf	mTouch_Check@chan
  3912                           
  3913                           ;main.c: 113: if(chan>2)return 0;
  3914  0517  3003               	movlw	3
  3915  0518  024F               	subwf	mTouch_Check@chan,w
  3916  0519  1C03               	skipc
  3917  051A  2D1D               	goto	l3089
  3918  051B  3000               	movlw	0
  3919  051C  0008               	return
  3920  051D                     l3089:	
  3921                           
  3922                           ;main.c: 115: if(((CPS_PreData[chan]-CPS_Data[chan])>200)&&!mTouch_Interval[chan])
  3923  051D  084F               	movf	mTouch_Check@chan,w
  3924  051E  3E37               	addlw	(low (_CPS_Data| 0))& (0+255)
  3925  051F  0086               	movwf	6
  3926  0520  0187               	clrf	7
  3927  0521  0801               	movf	1,w
  3928  0522  00CA               	movwf	??_mTouch_Check
  3929  0523  01CB               	clrf	??_mTouch_Check+1
  3930  0524  09CA               	comf	??_mTouch_Check,f
  3931  0525  09CB               	comf	??_mTouch_Check+1,f
  3932  0526  0ACA               	incf	??_mTouch_Check,f
  3933  0527  1903               	skipnz
  3934  0528  0ACB               	incf	??_mTouch_Check+1,f
  3935  0529  084F               	movf	mTouch_Check@chan,w
  3936  052A  3E3A               	addlw	(low (_CPS_PreData| 0))& (0+255)
  3937  052B  0086               	movwf	6
  3938  052C  0187               	clrf	7
  3939  052D  0801               	movf	1,w
  3940  052E  074A               	addwf	??_mTouch_Check,w
  3941  052F  00CC               	movwf	??_mTouch_Check+2
  3942  0530  084B               	movf	??_mTouch_Check+1,w
  3943  0531  1803               	skipnc
  3944  0532  0A4B               	incf	??_mTouch_Check+1,w
  3945  0533  00CD               	movwf	??_mTouch_Check+3
  3946  0534  084D               	movf	??_mTouch_Check+3,w
  3947  0535  3A80               	xorlw	128
  3948  0536  00CE               	movwf	??_mTouch_Check+4
  3949  0537  3080               	movlw	128
  3950  0538  024E               	subwf	??_mTouch_Check+4,w
  3951  0539  1D03               	skipz
  3952  053A  2D3D               	goto	u2655
  3953  053B  30C9               	movlw	201
  3954  053C  024C               	subwf	??_mTouch_Check+2,w
  3955  053D                     u2655:	
  3956  053D  1C03               	skipc
  3957  053E  2D57               	goto	l3101
  3958  053F  0020               	movlb	0	; select bank0
  3959  0540  084F               	movf	mTouch_Check@chan,w
  3960  0541  3E34               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  3961  0542  0086               	movwf	6
  3962  0543  0187               	clrf	7
  3963  0544  0801               	movf	1,w
  3964  0545  1D03               	btfss	3,2
  3965  0546  2D57               	goto	l3101
  3966                           
  3967                           ;main.c: 116: {
  3968                           ;main.c: 117: mTouch_Interval[chan] = 100;
  3969  0547  3064               	movlw	100
  3970  0548  00CA               	movwf	??_mTouch_Check
  3971  0549  084F               	movf	mTouch_Check@chan,w
  3972  054A  3E34               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  3973  054B  0086               	movwf	6
  3974  054C  0187               	clrf	7
  3975  054D  084A               	movf	??_mTouch_Check,w
  3976  054E  0081               	movwf	1
  3977                           
  3978                           ;main.c: 118: Buzzer_MiliSecond(100);
  3979  054F  3064               	movlw	100
  3980  0550  00C8               	movwf	Buzzer_MiliSecond@time
  3981  0551  3000               	movlw	0
  3982  0552  00C9               	movwf	Buzzer_MiliSecond@time+1
  3983  0553  318F  2729         	fcall	_Buzzer_MiliSecond
  3984                           
  3985                           ;main.c: 119: return 1;
  3986  0555  3001               	movlw	1
  3987  0556  0008               	return
  3988  0557                     l3101:	
  3989                           
  3990                           ;main.c: 120: }
  3991                           ;main.c: 121: return 0;
  3992  0557  3000               	movlw	0
  3993  0558  0008               	return
  3994  0559                     __end_of_mTouch_Check:	
  3995                           
  3996                           	psect	text10
  3997  0F29                     __ptext10:	
  3998 ;; *************** function _Buzzer_MiliSecond *****************
  3999 ;; Defined at:
  4000 ;;		line 38 in file "Buzzer.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  time            2    1[BANK0 ] unsigned int 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4014 ;;      Params:         0       2       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0       0
  4016 ;;      Temps:          0       0       0       0       0       0
  4017 ;;      Totals:         0       2       0       0       0       0
  4018 ;;Total ram usage:        2 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    3
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_mTouch_Check
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           
  4029                           ;psect for function _Buzzer_MiliSecond
  4030  0F29                     _Buzzer_MiliSecond:	
  4031                           
  4032                           ;Buzzer.c: 40: if(count==0)
  4033                           
  4034                           ;incstack = 0
  4035                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  4036  0F29  0020               	movlb	0	; select bank0
  4037  0F2A  0841               	movf	_count,w
  4038  0F2B  0442               	iorwf	_count+1,w
  4039  0F2C  1D03               	btfss	3,2
  4040  0F2D  0008               	return
  4041                           
  4042                           ;Buzzer.c: 41: count = time;
  4043  0F2E  0849               	movf	Buzzer_MiliSecond@time+1,w
  4044  0F2F  00C2               	movwf	_count+1
  4045  0F30  0848               	movf	Buzzer_MiliSecond@time,w
  4046  0F31  00C1               	movwf	_count
  4047  0F32  0008               	return
  4048  0F33                     __end_of_Buzzer_MiliSecond:	
  4049                           
  4050                           	psect	text11
  4051  0FC4                     __ptext11:	
  4052 ;; *************** function _Timer6_Init *****************
  4053 ;; Defined at:
  4054 ;;		line 3 in file "Timer6.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;		None
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      void 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4068 ;;      Params:         0       0       0       0       0       0
  4069 ;;      Locals:         0       0       0       0       0       0
  4070 ;;      Temps:          0       1       0       0       0       0
  4071 ;;      Totals:         0       1       0       0       0       0
  4072 ;;Total ram usage:        1 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    3
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_main
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           
  4083                           ;psect for function _Timer6_Init
  4084  0FC4                     _Timer6_Init:	
  4085                           
  4086                           ;Timer6.c: 5: PR6 = 0x7D;
  4087                           
  4088                           ;incstack = 0
  4089                           ; Regs used in _Timer6_Init: [wreg+status,2+status,0]
  4090  0FC4  307D               	movlw	125
  4091  0FC5  0028               	movlb	8	; select bank8
  4092  0FC6  009D               	movwf	29	;volatile
  4093                           
  4094                           ;Timer6.c: 6: TMR6 = 0x00;
  4095  0FC7  019C               	clrf	28	;volatile
  4096                           
  4097                           ;Timer6.c: 7: T6CON |= (0x03<<0);
  4098  0FC8  3003               	movlw	3
  4099  0FC9  0020               	movlb	0	; select bank0
  4100  0FCA  00C8               	movwf	??_Timer6_Init
  4101  0FCB  0848               	movf	??_Timer6_Init,w
  4102  0FCC  0028               	movlb	8	; select bank8
  4103  0FCD  049E               	iorwf	30,f	;volatile
  4104                           
  4105                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  4106  0FCE  081E               	movf	30,w	;volatile
  4107                           
  4108                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  4109  0FCF  151E               	bsf	30,2	;volatile
  4110                           
  4111                           ;Timer6.c: 11: TMR6IF = 0;
  4112  0FD0  0020               	movlb	0	; select bank0
  4113  0FD1  1193               	bcf	19,3	;volatile
  4114                           
  4115                           ;Timer6.c: 12: TMR6IE = 1;
  4116  0FD2  0021               	movlb	1	; select bank1
  4117  0FD3  1593               	bsf	19,3	;volatile
  4118                           
  4119                           ;Timer6.c: 13: PEIE = 1;
  4120  0FD4  170B               	bsf	11,6	;volatile
  4121                           
  4122                           ;Timer6.c: 14: GIE = 1;
  4123  0FD5  178B               	bsf	11,7	;volatile
  4124  0FD6  0008               	return
  4125  0FD7                     __end_of_Timer6_Init:	
  4126                           
  4127                           	psect	text12
  4128  0F65                     __ptext12:	
  4129 ;; *************** function _Timer4_Init *****************
  4130 ;; Defined at:
  4131 ;;		line 3 in file "Timer4.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4145 ;;      Params:         0       0       0       0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0
  4147 ;;      Temps:          0       0       0       0       0       0
  4148 ;;      Totals:         0       0       0       0       0       0
  4149 ;;Total ram usage:        0 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    3
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_main
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           
  4160                           ;psect for function _Timer4_Init
  4161  0F65                     _Timer4_Init:	
  4162                           
  4163                           ;Timer4.c: 5: PR4 = 0x64;
  4164                           
  4165                           ;incstack = 0
  4166                           ; Regs used in _Timer4_Init: [wreg+status,2]
  4167  0F65  3064               	movlw	100
  4168  0F66  0028               	movlb	8	; select bank8
  4169  0F67  0096               	movwf	22	;volatile
  4170                           
  4171                           ;Timer4.c: 6: TMR4 = 0x00;
  4172  0F68  0195               	clrf	21	;volatile
  4173                           
  4174                           ;Timer4.c: 7: T4CON |= (0x02<<0);
  4175  0F69  1497               	bsf	23,1	;volatile
  4176                           
  4177                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  4178  0F6A  0817               	movf	23,w	;volatile
  4179                           
  4180                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  4181  0F6B  1517               	bsf	23,2	;volatile
  4182                           
  4183                           ;Timer4.c: 11: TMR4IF = 0;
  4184  0F6C  0020               	movlb	0	; select bank0
  4185  0F6D  1093               	bcf	19,1	;volatile
  4186                           
  4187                           ;Timer4.c: 12: TMR4IE = 1;
  4188  0F6E  0021               	movlb	1	; select bank1
  4189  0F6F  1493               	bsf	19,1	;volatile
  4190                           
  4191                           ;Timer4.c: 13: PEIE = 1;
  4192  0F70  170B               	bsf	11,6	;volatile
  4193                           
  4194                           ;Timer4.c: 14: GIE = 1;
  4195  0F71  178B               	bsf	11,7	;volatile
  4196  0F72  0008               	return
  4197  0F73                     __end_of_Timer4_Init:	
  4198                           
  4199                           	psect	text13
  4200  0EF5                     __ptext13:	
  4201 ;; *************** function _Timer1_StartCount *****************
  4202 ;; Defined at:
  4203 ;;		line 31 in file "Timer1.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  1    wreg      void 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2, status,0, pclath, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4217 ;;      Params:         0       0       0       0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0
  4220 ;;      Totals:         0       0       0       0       0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    4
  4224 ;; This function calls:
  4225 ;;		_Timer1_ClearRecord
  4226 ;; This function is called by:
  4227 ;;		_main
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           
  4232                           ;psect for function _Timer1_StartCount
  4233  0EF5                     _Timer1_StartCount:	
  4234                           
  4235                           ;Timer1.c: 33: Timer1_ClearRecord();
  4236                           
  4237                           ;incstack = 0
  4238                           ; Regs used in _Timer1_StartCount: [wreg+status,2+status,0+pclath+cstack]
  4239  0EF5  3187  2706         	fcall	_Timer1_ClearRecord
  4240                           
  4241                           ;Timer1.c: 34: TMR1ON = 1;
  4242  0EF7  0020               	movlb	0	; select bank0
  4243  0EF8  1418               	bsf	24,0	;volatile
  4244  0EF9  0008               	return
  4245  0EFA                     __end_of_Timer1_StartCount:	
  4246                           
  4247                           	psect	text14
  4248  0706                     __ptext14:	
  4249 ;; *************** function _Timer1_ClearRecord *****************
  4250 ;; Defined at:
  4251 ;;		line 42 in file "Timer1.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4265 ;;      Params:         0       0       0       0       0       0
  4266 ;;      Locals:         0       0       0       0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0
  4268 ;;      Totals:         0       0       0       0       0       0
  4269 ;;Total ram usage:        0 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    3
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_Timer1_StartCount
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           
  4280                           ;psect for function _Timer1_ClearRecord
  4281  0706                     _Timer1_ClearRecord:	
  4282                           
  4283                           ;Timer1.c: 44: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL; TMR1ON = 1; };
  4284                           
  4285                           ;incstack = 0
  4286                           ; Regs used in _Timer1_ClearRecord: [wreg]
  4287  0706  0020               	movlb	0	; select bank0
  4288  0707  1018               	bcf	24,0	;volatile
  4289  0708  30FF               	movlw	255
  4290  0709  0097               	movwf	23	;volatile
  4291  070A  30F5               	movlw	245
  4292  070B  0096               	movwf	22	;volatile
  4293  070C  1418               	bsf	24,0	;volatile
  4294                           
  4295                           ;Timer1.c: 45: cnts.SigmaDeltaCount= 0;
  4296  070D  3000               	movlw	0
  4297  070E  00A3               	movwf	_cnts+3
  4298  070F  3000               	movlw	0
  4299  0710  00A2               	movwf	_cnts+2
  4300  0711  3000               	movlw	0
  4301  0712  00A1               	movwf	_cnts+1
  4302  0713  3000               	movlw	0
  4303  0714  00A0               	movwf	_cnts
  4304                           
  4305                           ;Timer1.c: 46: cnts.SigmaCPM = 0;
  4306  0715  3000               	movlw	0
  4307  0716  00A7               	movwf	_cnts+7
  4308  0717  3000               	movlw	0
  4309  0718  00A6               	movwf	_cnts+6
  4310  0719  3000               	movlw	0
  4311  071A  00A5               	movwf	_cnts+5
  4312  071B  3000               	movlw	0
  4313  071C  00A4               	movwf	_cnts+4
  4314                           
  4315                           ;Timer1.c: 47: cnts.Num_of_Detect = 0;
  4316  071D  3000               	movlw	0
  4317  071E  00AD               	movwf	_cnts+13
  4318  071F  3000               	movlw	0
  4319  0720  00AC               	movwf	_cnts+12
  4320  0721  3000               	movlw	0
  4321  0722  00AB               	movwf	_cnts+11
  4322  0723  3000               	movlw	0
  4323  0724  00AA               	movwf	_cnts+10
  4324                           
  4325                           ;Timer1.c: 48: tcnt.Delta_t = 0;
  4326  0725  3000               	movlw	0
  4327  0726  00B1               	movwf	_tcnt+3
  4328  0727  3000               	movlw	0
  4329  0728  00B0               	movwf	_tcnt+2
  4330  0729  3000               	movlw	0
  4331  072A  00AF               	movwf	_tcnt+1
  4332  072B  3000               	movlw	0
  4333  072C  00AE               	movwf	_tcnt
  4334  072D  0008               	return
  4335  072E                     __end_of_Timer1_ClearRecord:	
  4336                           
  4337                           	psect	text15
  4338  077B                     __ptext15:	
  4339 ;; *************** function _Timer1_Init *****************
  4340 ;; Defined at:
  4341 ;;		line 6 in file "Timer1.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4355 ;;      Params:         0       0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0
  4357 ;;      Temps:          0       1       0       0       0       0
  4358 ;;      Totals:         0       1       0       0       0       0
  4359 ;;Total ram usage:        1 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    3
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_main
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           
  4370                           ;psect for function _Timer1_Init
  4371  077B                     _Timer1_Init:	
  4372                           
  4373                           ;Timer1.c: 8: TRISB |= (1<<6);
  4374                           
  4375                           ;incstack = 0
  4376                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4377  077B  0021               	movlb	1	; select bank1
  4378  077C  170D               	bsf	13,6	;volatile
  4379                           
  4380                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  4381  077D  30BF               	movlw	191
  4382  077E  0020               	movlb	0	; select bank0
  4383  077F  00C8               	movwf	??_Timer1_Init
  4384  0780  0848               	movf	??_Timer1_Init,w
  4385  0781  0023               	movlb	3	; select bank3
  4386  0782  058D               	andwf	13,f	;volatile
  4387                           
  4388                           ;Timer1.c: 10: WPUB |= (1<<6);
  4389  0783  0024               	movlb	4	; select bank4
  4390  0784  170D               	bsf	13,6	;volatile
  4391                           
  4392                           ;Timer1.c: 12: T1CON |= (0x01<<2);
  4393  0785  0020               	movlb	0	; select bank0
  4394  0786  1518               	bsf	24,2	;volatile
  4395                           
  4396                           ;Timer1.c: 13: T1CON &= ~(0x01<<3);
  4397  0787  30F7               	movlw	247
  4398  0788  00C8               	movwf	??_Timer1_Init
  4399  0789  0848               	movf	??_Timer1_Init,w
  4400  078A  0598               	andwf	24,f	;volatile
  4401                           
  4402                           ;Timer1.c: 14: T1CON |= (0x00<<4);
  4403  078B  0818               	movf	24,w	;volatile
  4404                           
  4405                           ;Timer1.c: 15: T1CON |= (0x02<<6);
  4406  078C  1798               	bsf	24,7	;volatile
  4407                           
  4408                           ;Timer1.c: 17: T1GCON = 0x00;
  4409  078D  0199               	clrf	25	;volatile
  4410                           
  4411                           ;Timer1.c: 19: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL; TMR1ON = 1; };
  4412  078E  1018               	bcf	24,0	;volatile
  4413  078F  30FF               	movlw	255
  4414  0790  0097               	movwf	23	;volatile
  4415  0791  30F5               	movlw	245
  4416  0792  0096               	movwf	22	;volatile
  4417  0793  1418               	bsf	24,0	;volatile
  4418                           
  4419                           ;Timer1.c: 21: TMR1IF = 0;
  4420  0794  1011               	bcf	17,0	;volatile
  4421                           
  4422                           ;Timer1.c: 22: TMR1IE = 1;
  4423  0795  0021               	movlb	1	; select bank1
  4424  0796  1411               	bsf	17,0	;volatile
  4425                           
  4426                           ;Timer1.c: 23: PEIE = 1;
  4427  0797  170B               	bsf	11,6	;volatile
  4428                           
  4429                           ;Timer1.c: 24: GIE = 1;
  4430  0798  178B               	bsf	11,7	;volatile
  4431                           
  4432                           ;Timer1.c: 26: TMR1ON = 0;
  4433  0799  0020               	movlb	0	; select bank0
  4434  079A  1018               	bcf	24,0	;volatile
  4435  079B  0008               	return
  4436  079C                     __end_of_Timer1_Init:	
  4437                           
  4438                           	psect	text16
  4439  0F1F                     __ptext16:	
  4440 ;; *************** function _Timer1_GetCountSum *****************
  4441 ;; Defined at:
  4442 ;;		line 51 in file "Timer1.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;		None
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;		None
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  4    1[BANK0 ] unsigned long 
  4449 ;; Registers used:
  4450 ;;		wreg
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4456 ;;      Params:         0       4       0       0       0       0
  4457 ;;      Locals:         0       0       0       0       0       0
  4458 ;;      Temps:          0       0       0       0       0       0
  4459 ;;      Totals:         0       4       0       0       0       0
  4460 ;;Total ram usage:        4 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    3
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_main
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           
  4471                           ;psect for function _Timer1_GetCountSum
  4472  0F1F                     _Timer1_GetCountSum:	
  4473                           
  4474                           ;Timer1.c: 53: return cnts.SigmaDeltaCount;
  4475                           
  4476                           ;incstack = 0
  4477                           ; Regs used in _Timer1_GetCountSum: [wreg]
  4478  0F1F  0020               	movlb	0	; select bank0
  4479  0F20  0823               	movf	_cnts+3,w
  4480  0F21  00CB               	movwf	?_Timer1_GetCountSum+3
  4481  0F22  0822               	movf	_cnts+2,w
  4482  0F23  00CA               	movwf	?_Timer1_GetCountSum+2
  4483  0F24  0821               	movf	_cnts+1,w
  4484  0F25  00C9               	movwf	?_Timer1_GetCountSum+1
  4485  0F26  0820               	movf	_cnts,w
  4486  0F27  00C8               	movwf	?_Timer1_GetCountSum
  4487  0F28  0008               	return
  4488  0F29                     __end_of_Timer1_GetCountSum:	
  4489                           
  4490                           	psect	text17
  4491  0F00                     __ptext17:	
  4492 ;; *************** function _Timer1_GetCPM *****************
  4493 ;; Defined at:
  4494 ;;		line 56 in file "Timer1.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;		None
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  2    1[BANK0 ] unsigned int 
  4501 ;; Registers used:
  4502 ;;		wreg
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4508 ;;      Params:         0       2       0       0       0       0
  4509 ;;      Locals:         0       0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0
  4511 ;;      Totals:         0       2       0       0       0       0
  4512 ;;Total ram usage:        2 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    3
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_main
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           
  4523                           ;psect for function _Timer1_GetCPM
  4524  0F00                     _Timer1_GetCPM:	
  4525                           
  4526                           ;Timer1.c: 58: return cnts.AverageCPM;
  4527                           
  4528                           ;incstack = 0
  4529                           ; Regs used in _Timer1_GetCPM: [wreg]
  4530  0F00  0020               	movlb	0	; select bank0
  4531  0F01  0829               	movf	_cnts+9,w
  4532  0F02  00C9               	movwf	?_Timer1_GetCPM+1
  4533  0F03  0828               	movf	_cnts+8,w
  4534  0F04  00C8               	movwf	?_Timer1_GetCPM
  4535  0F05  0008               	return
  4536  0F06                     __end_of_Timer1_GetCPM:	
  4537                           
  4538                           	psect	text18
  4539  03AC                     __ptext18:	
  4540 ;; *************** function _LCD_Init *****************
  4541 ;; Defined at:
  4542 ;;		line 28 in file "LCD.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0, pclath, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4556 ;;      Params:         0       0       0       0       0       0
  4557 ;;      Locals:         0       0       0       0       0       0
  4558 ;;      Temps:          0       2       0       0       0       0
  4559 ;;      Totals:         0       2       0       0       0       0
  4560 ;;Total ram usage:        2 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    5
  4563 ;; This function calls:
  4564 ;;		_LCD_DisplayClear
  4565 ;;		_LCD_WriteData
  4566 ;; This function is called by:
  4567 ;;		_main
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           
  4572                           ;psect for function _LCD_Init
  4573  03AC                     _LCD_Init:	
  4574                           
  4575                           ;LCD.c: 30: LATA3 = 0;
  4576                           
  4577                           ;incstack = 0
  4578                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4579  03AC  0022               	movlb	2	; select bank2
  4580  03AD  118C               	bcf	12,3	;volatile
  4581                           
  4582                           ;LCD.c: 31: LATA4 = 0;
  4583  03AE  120C               	bcf	12,4	;volatile
  4584                           
  4585                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  4586  03AF  3002               	movlw	2
  4587  03B0  0020               	movlb	0	; select bank0
  4588  03B1  00CD               	movwf	??_LCD_Init+1
  4589  03B2  3038               	movlw	56
  4590  03B3  00CC               	movwf	??_LCD_Init
  4591  03B4  30AD               	movlw	173
  4592  03B5                     u2937:	
  4593  03B5  0B89               	decfsz	9,f
  4594  03B6  2BB5               	goto	u2937
  4595  03B7  0BCC               	decfsz	??_LCD_Init,f
  4596  03B8  2BB5               	goto	u2937
  4597  03B9  0BCD               	decfsz	??_LCD_Init+1,f
  4598  03BA  2BB5               	goto	u2937
  4599                           
  4600                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  4601  03BB  3003               	movlw	3
  4602  03BC  0020               	movlb	0	; select bank0
  4603  03BD  008D               	movwf	13	;volatile
  4604                           
  4605                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4606  03BE  0022               	movlb	2	; select bank2
  4607  03BF  160C               	bsf	12,4	;volatile
  4608  03C0  3200               	nop2	;2 cycle nop
  4609  03C1  3200               	nop2	;2 cycle nop
  4610  03C2  3200               	nop2	;2 cycle nop
  4611  03C3  3200               	nop2	;2 cycle nop
  4612  03C4  0022               	movlb	2	; select bank2
  4613  03C5  120C               	bcf	12,4	;volatile
  4614  03C6  3200               	nop2	;2 cycle nop
  4615  03C7  3200               	nop2	;2 cycle nop
  4616  03C8  3200               	nop2	;2 cycle nop
  4617  03C9  3200               	nop2	;2 cycle nop
  4618                           
  4619                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  4620  03CA  3034               	movlw	52
  4621  03CB  0020               	movlb	0	; select bank0
  4622  03CC  00CC               	movwf	??_LCD_Init
  4623  03CD  30F1               	movlw	241
  4624  03CE                     u2947:	
  4625  03CE  0B89               	decfsz	9,f
  4626  03CF  2BCE               	goto	u2947
  4627  03D0  0BCC               	decfsz	??_LCD_Init,f
  4628  03D1  2BCE               	goto	u2947
  4629  03D2  3200               	nop2
  4630                           
  4631                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4632  03D3  0022               	movlb	2	; select bank2
  4633  03D4  160C               	bsf	12,4	;volatile
  4634  03D5  3200               	nop2	;2 cycle nop
  4635  03D6  3200               	nop2	;2 cycle nop
  4636  03D7  3200               	nop2	;2 cycle nop
  4637  03D8  3200               	nop2	;2 cycle nop
  4638  03D9  0022               	movlb	2	; select bank2
  4639  03DA  120C               	bcf	12,4	;volatile
  4640  03DB  3200               	nop2	;2 cycle nop
  4641  03DC  3200               	nop2	;2 cycle nop
  4642  03DD  3200               	nop2	;2 cycle nop
  4643  03DE  3200               	nop2	;2 cycle nop
  4644                           
  4645                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  4646  03DF  3005               	movlw	5
  4647  03E0  0020               	movlb	0	; select bank0
  4648  03E1  00CC               	movwf	??_LCD_Init
  4649  03E2  3026               	movlw	38
  4650  03E3                     u2957:	
  4651  03E3  0B89               	decfsz	9,f
  4652  03E4  2BE3               	goto	u2957
  4653  03E5  0BCC               	decfsz	??_LCD_Init,f
  4654  03E6  2BE3               	goto	u2957
  4655  03E7  0000               	nop
  4656                           
  4657                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4658  03E8  0022               	movlb	2	; select bank2
  4659  03E9  160C               	bsf	12,4	;volatile
  4660  03EA  3200               	nop2	;2 cycle nop
  4661  03EB  3200               	nop2	;2 cycle nop
  4662  03EC  3200               	nop2	;2 cycle nop
  4663  03ED  3200               	nop2	;2 cycle nop
  4664  03EE  0022               	movlb	2	; select bank2
  4665  03EF  120C               	bcf	12,4	;volatile
  4666  03F0  3200               	nop2	;2 cycle nop
  4667  03F1  3200               	nop2	;2 cycle nop
  4668  03F2  3200               	nop2	;2 cycle nop
  4669  03F3  3200               	nop2	;2 cycle nop
  4670                           
  4671                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  4672  03F4  3005               	movlw	5
  4673  03F5  0020               	movlb	0	; select bank0
  4674  03F6  00CC               	movwf	??_LCD_Init
  4675  03F7  3026               	movlw	38
  4676  03F8                     u2967:	
  4677  03F8  0B89               	decfsz	9,f
  4678  03F9  2BF8               	goto	u2967
  4679  03FA  0BCC               	decfsz	??_LCD_Init,f
  4680  03FB  2BF8               	goto	u2967
  4681  03FC  0000               	nop
  4682                           
  4683                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  4684  03FD  3002               	movlw	2
  4685  03FE  0020               	movlb	0	; select bank0
  4686  03FF  008D               	movwf	13	;volatile
  4687                           
  4688                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4689  0400  0022               	movlb	2	; select bank2
  4690  0401  160C               	bsf	12,4	;volatile
  4691  0402  3200               	nop2	;2 cycle nop
  4692  0403  3200               	nop2	;2 cycle nop
  4693  0404  3200               	nop2	;2 cycle nop
  4694  0405  3200               	nop2	;2 cycle nop
  4695  0406  0022               	movlb	2	; select bank2
  4696  0407  120C               	bcf	12,4	;volatile
  4697  0408  3200               	nop2	;2 cycle nop
  4698  0409  3200               	nop2	;2 cycle nop
  4699  040A  3200               	nop2	;2 cycle nop
  4700  040B  3200               	nop2	;2 cycle nop
  4701                           
  4702                           ;LCD.c: 44: LCD_WriteData(0x28);
  4703  040C  3028               	movlw	40
  4704  040D  3185  25E1  3183   	fcall	_LCD_WriteData
  4705                           
  4706                           ;LCD.c: 45: LCD_WriteData(0x0c);
  4707  0410  300C               	movlw	12
  4708  0411  3185  25E1  3183   	fcall	_LCD_WriteData
  4709                           
  4710                           ;LCD.c: 46: LCD_DisplayClear();
  4711  0414  318F  2792  3183   	fcall	_LCD_DisplayClear
  4712                           
  4713                           ;LCD.c: 47: LCD_WriteData(0x06);
  4714  0417  3006               	movlw	6
  4715  0418  3185  25E1         	fcall	_LCD_WriteData
  4716  041A  0008               	return
  4717  041B                     __end_of_LCD_Init:	
  4718                           
  4719                           	psect	text19
  4720  0F92                     __ptext19:	
  4721 ;; *************** function _LCD_DisplayClear *****************
  4722 ;; Defined at:
  4723 ;;		line 73 in file "LCD.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, status,2, status,0, pclath, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4737 ;;      Params:         0       0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0       0
  4739 ;;      Temps:          0       1       0       0       0       0
  4740 ;;      Totals:         0       1       0       0       0       0
  4741 ;;Total ram usage:        1 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; Hardware stack levels required when called:    4
  4744 ;; This function calls:
  4745 ;;		_LCD_WriteData
  4746 ;; This function is called by:
  4747 ;;		_LCD_Init
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           
  4752                           ;psect for function _LCD_DisplayClear
  4753  0F92                     _LCD_DisplayClear:	
  4754                           
  4755                           ;LCD.c: 75: LATA3 = 0;
  4756                           
  4757                           ;incstack = 0
  4758                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  4759  0F92  0022               	movlb	2	; select bank2
  4760  0F93  118C               	bcf	12,3	;volatile
  4761                           
  4762                           ;LCD.c: 76: LCD_WriteData(0x01);
  4763  0F94  3001               	movlw	1
  4764  0F95  3185  25E1  318F   	fcall	_LCD_WriteData
  4765                           
  4766                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  4767  0F98  3015               	movlw	21
  4768  0F99  0020               	movlb	0	; select bank0
  4769  0F9A  00CB               	movwf	??_LCD_DisplayClear
  4770  0F9B  30C6               	movlw	198
  4771  0F9C                     u2977:	
  4772  0F9C  0B89               	decfsz	9,f
  4773  0F9D  2F9C               	goto	u2977
  4774  0F9E  0BCB               	decfsz	??_LCD_DisplayClear,f
  4775  0F9F  2F9C               	goto	u2977
  4776  0FA0  0000               	nop
  4777  0FA1  0008               	return
  4778  0FA2                     __end_of_LCD_DisplayClear:	
  4779                           
  4780                           	psect	text20
  4781  0F82                     __ptext20:	
  4782 ;; *************** function _LCD_CursorHome *****************
  4783 ;; Defined at:
  4784 ;;		line 84 in file "LCD.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;		None
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;		None
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0, pclath, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4798 ;;      Params:         0       0       0       0       0       0
  4799 ;;      Locals:         0       0       0       0       0       0
  4800 ;;      Temps:          0       1       0       0       0       0
  4801 ;;      Totals:         0       1       0       0       0       0
  4802 ;;Total ram usage:        1 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    4
  4805 ;; This function calls:
  4806 ;;		_LCD_WriteData
  4807 ;; This function is called by:
  4808 ;;		_main
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           
  4813                           ;psect for function _LCD_CursorHome
  4814  0F82                     _LCD_CursorHome:	
  4815                           
  4816                           ;LCD.c: 86: LATA3 = 0;
  4817                           
  4818                           ;incstack = 0
  4819                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  4820  0F82  0022               	movlb	2	; select bank2
  4821  0F83  118C               	bcf	12,3	;volatile
  4822                           
  4823                           ;LCD.c: 87: LCD_WriteData(0x02);
  4824  0F84  3002               	movlw	2
  4825  0F85  3185  25E1  318F   	fcall	_LCD_WriteData
  4826                           
  4827                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  4828  0F88  3015               	movlw	21
  4829  0F89  0020               	movlb	0	; select bank0
  4830  0F8A  00CB               	movwf	??_LCD_CursorHome
  4831  0F8B  30C6               	movlw	198
  4832  0F8C                     u2987:	
  4833  0F8C  0B89               	decfsz	9,f
  4834  0F8D  2F8C               	goto	u2987
  4835  0F8E  0BCB               	decfsz	??_LCD_CursorHome,f
  4836  0F8F  2F8C               	goto	u2987
  4837  0F90  0000               	nop
  4838  0F91  0008               	return
  4839  0F92                     __end_of_LCD_CursorHome:	
  4840                           
  4841                           	psect	text21
  4842  05E1                     __ptext21:	
  4843 ;; *************** function _LCD_WriteData *****************
  4844 ;; Defined at:
  4845 ;;		line 15 in file "LCD.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  point           1    wreg     char 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  point           1    3[BANK0 ] char 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, status,0
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4859 ;;      Params:         0       0       0       0       0       0
  4860 ;;      Locals:         0       1       0       0       0       0
  4861 ;;      Temps:          0       2       0       0       0       0
  4862 ;;      Totals:         0       3       0       0       0       0
  4863 ;;Total ram usage:        3 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:    3
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_LCD_Init
  4870 ;;		_putch
  4871 ;;		_LCD_DisplayClear
  4872 ;;		_LCD_CursorHome
  4873 ;;		_LCD_Put
  4874 ;;		_LCD_CursorPosition
  4875 ;;		_LCD_CursorShift
  4876 ;;		_LCD_DispShift
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           
  4881                           ;psect for function _LCD_WriteData
  4882  05E1                     _LCD_WriteData:	
  4883                           
  4884                           ;incstack = 0
  4885                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  4886                           ;LCD_WriteData@point stored from wreg
  4887  05E1  0020               	movlb	0	; select bank0
  4888  05E2  00CA               	movwf	LCD_WriteData@point
  4889                           
  4890                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  4891  05E3  30D5               	movlw	213
  4892  05E4                     u2997:	
  4893  05E4  0B89               	decfsz	9,f
  4894  05E5  2DE4               	goto	u2997
  4895  05E6  0000               	nop
  4896                           
  4897                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  4898  05E7  0020               	movlb	0	; select bank0
  4899  05E8  084A               	movf	LCD_WriteData@point,w
  4900  05E9  00C8               	movwf	??_LCD_WriteData
  4901  05EA  3004               	movlw	4
  4902  05EB                     u1795:	
  4903  05EB  1003               	clrc
  4904  05EC  1BC8               	btfsc	??_LCD_WriteData,7
  4905  05ED  1403               	setc
  4906  05EE  0CC8               	rrf	??_LCD_WriteData,f
  4907  05EF  0B89               	decfsz	9,f
  4908  05F0  2DEB               	goto	u1795
  4909  05F1  3003               	movlw	3
  4910  05F2  0548               	andwf	??_LCD_WriteData,w
  4911  05F3  00C9               	movwf	??_LCD_WriteData+1
  4912  05F4  0E4A               	swapf	LCD_WriteData@point,w
  4913  05F5  390F               	andlw	15
  4914  05F6  1989               	btfsc	9,3
  4915  05F7  38F0               	iorlw	240
  4916  05F8  390C               	andlw	12
  4917  05F9  0709               	addwf	9,w
  4918  05FA  0449               	iorwf	??_LCD_WriteData+1,w
  4919  05FB  008D               	movwf	13	;volatile
  4920                           
  4921                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4922  05FC  0022               	movlb	2	; select bank2
  4923  05FD  160C               	bsf	12,4	;volatile
  4924  05FE  3200               	nop2	;2 cycle nop
  4925  05FF  3200               	nop2	;2 cycle nop
  4926  0600  3200               	nop2	;2 cycle nop
  4927  0601  3200               	nop2	;2 cycle nop
  4928  0602  0022               	movlb	2	; select bank2
  4929  0603  120C               	bcf	12,4	;volatile
  4930  0604  3200               	nop2	;2 cycle nop
  4931  0605  3200               	nop2	;2 cycle nop
  4932  0606  3200               	nop2	;2 cycle nop
  4933  0607  3200               	nop2	;2 cycle nop
  4934                           
  4935                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  4936  0608  3003               	movlw	3
  4937  0609  0020               	movlb	0	; select bank0
  4938  060A  054A               	andwf	LCD_WriteData@point,w
  4939  060B  00C8               	movwf	??_LCD_WriteData
  4940  060C  084A               	movf	LCD_WriteData@point,w
  4941  060D  390C               	andlw	12
  4942  060E  0709               	addwf	9,w
  4943  060F  0448               	iorwf	??_LCD_WriteData,w
  4944  0610  008D               	movwf	13	;volatile
  4945                           
  4946                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4947  0611  0022               	movlb	2	; select bank2
  4948  0612  160C               	bsf	12,4	;volatile
  4949  0613  3200               	nop2	;2 cycle nop
  4950  0614  3200               	nop2	;2 cycle nop
  4951  0615  3200               	nop2	;2 cycle nop
  4952  0616  3200               	nop2	;2 cycle nop
  4953  0617  0022               	movlb	2	; select bank2
  4954  0618  120C               	bcf	12,4	;volatile
  4955  0619  3200               	nop2	;2 cycle nop
  4956  061A  3200               	nop2	;2 cycle nop
  4957  061B  3200               	nop2	;2 cycle nop
  4958  061C  3200               	nop2	;2 cycle nop
  4959  061D  0008               	return
  4960  061E                     __end_of_LCD_WriteData:	
  4961                           
  4962                           	psect	text22
  4963  079C                     __ptext22:	
  4964 ;; *************** function _DAC_Initialize *****************
  4965 ;; Defined at:
  4966 ;;		line 14 in file "MCP4726.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;		None
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;		None
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      void 
  4973 ;; Registers used:
  4974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4980 ;;      Params:         0       0       0       0       0       0
  4981 ;;      Locals:         0       0       0       0       0       0
  4982 ;;      Temps:          0       2       0       0       0       0
  4983 ;;      Totals:         0       2       0       0       0       0
  4984 ;;Total ram usage:        2 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    6
  4987 ;; This function calls:
  4988 ;;		_I2C_Init
  4989 ;;		_I2C_Transmit
  4990 ;; This function is called by:
  4991 ;;		_main
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           
  4996                           ;psect for function _DAC_Initialize
  4997  079C                     _DAC_Initialize:	
  4998                           
  4999                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  5000                           
  5001                           ;incstack = 0
  5002                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5003  079C  0020               	movlb	0	; select bank0
  5004  079D  01CD               	clrf	I2C_Init@address
  5005  079E  01CE               	clrf	I2C_Init@mode
  5006  079F  01CF               	clrf	I2C_Init@Speed
  5007  07A0  3001               	movlw	1
  5008  07A1  3186  26DC  3187   	fcall	_I2C_Init
  5009                           
  5010                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  5011  07A4  0020               	movlb	0	; select bank0
  5012  07A5  0846               	movf	_ConfigReg,w
  5013  07A6  391F               	andlw	-225
  5014  07A7  3880               	iorlw	128
  5015  07A8  00C6               	movwf	_ConfigReg
  5016                           
  5017                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  5018  07A9  1046               	bcf	_ConfigReg,0
  5019                           
  5020                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  5021  07AA  30F9               	movlw	-7
  5022  07AB  05C6               	andwf	_ConfigReg,f
  5023                           
  5024                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  5025  07AC  30E7               	movlw	-25
  5026  07AD  05C6               	andwf	_ConfigReg,f
  5027                           
  5028                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  5029  07AE  3060               	movlw	96
  5030  07AF  00D8               	movwf	??_DAC_Initialize
  5031  07B0  0858               	movf	??_DAC_Initialize,w
  5032  07B1  00D0               	movwf	I2C_Transmit@address
  5033  07B2  3046               	movlw	(low (_ConfigReg| 0))& (0+255)
  5034  07B3  00D9               	movwf	??_DAC_Initialize+1
  5035  07B4  0859               	movf	??_DAC_Initialize+1,w
  5036  07B5  00D1               	movwf	I2C_Transmit@pData
  5037  07B6  01D2               	clrf	I2C_Transmit@size
  5038  07B7  0AD2               	incf	I2C_Transmit@size,f
  5039  07B8  3001               	movlw	1
  5040  07B9  3186  26B1         	fcall	_I2C_Transmit
  5041  07BB  0008               	return
  5042  07BC                     __end_of_DAC_Initialize:	
  5043                           
  5044                           	psect	text23
  5045  06B1                     __ptext23:	
  5046 ;; *************** function _I2C_Transmit *****************
  5047 ;; Defined at:
  5048 ;;		line 23 in file "I2C_Common.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  I2Cx            1    wreg     enum E3178
  5051 ;;  address         1    9[BANK0 ] unsigned char 
  5052 ;;  pData           1   10[BANK0 ] PTR unsigned char 
  5053 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5054 ;;  size            1   11[BANK0 ] unsigned char 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  I2Cx            1   15[BANK0 ] enum E3178
  5057 ;;  result          1   16[BANK0 ] char 
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      char 
  5060 ;; Registers used:
  5061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5067 ;;      Params:         0       3       0       0       0       0
  5068 ;;      Locals:         0       2       0       0       0       0
  5069 ;;      Temps:          0       3       0       0       0       0
  5070 ;;      Totals:         0       8       0       0       0       0
  5071 ;;Total ram usage:        8 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:    4
  5074 ;; This function calls:
  5075 ;;		_I2C1_Transmit
  5076 ;;		_I2C2_Transmit
  5077 ;; This function is called by:
  5078 ;;		_DAC_Initialize
  5079 ;;		_DAC_WriteVoltage
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           
  5084                           ;psect for function _I2C_Transmit
  5085  06B1                     _I2C_Transmit:	
  5086                           
  5087                           ;incstack = 0
  5088                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5089                           ;I2C_Transmit@I2Cx stored from wreg
  5090  06B1  0020               	movlb	0	; select bank0
  5091  06B2  00D6               	movwf	I2C_Transmit@I2Cx
  5092                           
  5093                           ;I2C_Common.c: 25: int8_t result;
  5094                           ;I2C_Common.c: 27: switch(I2Cx)
  5095  06B3  2ED2               	goto	l2601
  5096  06B4                     l2595:	
  5097                           ;I2C_Common.c: 28: {
  5098                           ;I2C_Common.c: 29: case I2C1_MODULE:
  5099                           
  5100                           
  5101                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  5102  06B4  0851               	movf	I2C_Transmit@pData,w
  5103  06B5  00D3               	movwf	??_I2C_Transmit
  5104  06B6  0853               	movf	??_I2C_Transmit,w
  5105  06B7  00C8               	movwf	I2C1_Transmit@pData
  5106  06B8  0852               	movf	I2C_Transmit@size,w
  5107  06B9  00D4               	movwf	??_I2C_Transmit+1
  5108  06BA  0854               	movf	??_I2C_Transmit+1,w
  5109  06BB  00C9               	movwf	I2C1_Transmit@size
  5110  06BC  0850               	movf	I2C_Transmit@address,w
  5111  06BD  3182  228C  3186   	fcall	_I2C1_Transmit
  5112  06C0  2ECD               	goto	L1
  5113  06C1                     l2597:	
  5114                           ;I2C_Common.c: 33: case I2C2_MODULE:
  5115                           
  5116                           ;I2C_Common.c: 31: break;
  5117                           
  5118                           
  5119                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  5120  06C1  0851               	movf	I2C_Transmit@pData,w
  5121  06C2  00D3               	movwf	??_I2C_Transmit
  5122  06C3  0853               	movf	??_I2C_Transmit,w
  5123  06C4  00C8               	movwf	I2C2_Transmit@pData
  5124  06C5  0852               	movf	I2C_Transmit@size,w
  5125  06C6  00D4               	movwf	??_I2C_Transmit+1
  5126  06C7  0854               	movf	??_I2C_Transmit+1,w
  5127  06C8  00C9               	movwf	I2C2_Transmit@size
  5128  06C9  0850               	movf	I2C_Transmit@address,w
  5129  06CA  3181  215C  3186   	fcall	_I2C2_Transmit
  5130  06CD                     L1:	
  5131  06CD  0020               	movlb	0	; select bank0
  5132  06CE  00D5               	movwf	??_I2C_Transmit+2
  5133  06CF  0855               	movf	??_I2C_Transmit+2,w
  5134  06D0  00D7               	movwf	I2C_Transmit@result
  5135                           
  5136                           ;I2C_Common.c: 36: }
  5137                           
  5138                           ;I2C_Common.c: 35: break;
  5139  06D1  2EDA               	goto	l2603
  5140  06D2                     l2601:	
  5141  06D2  0856               	movf	I2C_Transmit@I2Cx,w
  5142                           
  5143                           ; Switch size 1, requested type "space"
  5144                           ; Number of cases is 2, Range of values is 0 to 1
  5145                           ; switch strategies available:
  5146                           ; Name         Instructions Cycles
  5147                           ; simple_byte            7     4 (average)
  5148                           ; direct_byte           10     6 (fixed)
  5149                           ; jumptable            260     6 (fixed)
  5150                           ;	Chosen strategy is simple_byte
  5151  06D3  3A00               	xorlw	0	; case 0
  5152  06D4  1903               	skipnz
  5153  06D5  2EB4               	goto	l2595
  5154  06D6  3A01               	xorlw	1	; case 1
  5155  06D7  1903               	skipnz
  5156  06D8  2EC1               	goto	l2597
  5157  06D9  2EDA               	goto	l2603
  5158  06DA                     l2603:	
  5159                           
  5160                           ;I2C_Common.c: 37: return result;
  5161  06DA  0857               	movf	I2C_Transmit@result,w
  5162  06DB  0008               	return
  5163  06DC                     __end_of_I2C_Transmit:	
  5164                           
  5165                           	psect	text24
  5166  015C                     __ptext24:	
  5167 ;; *************** function _I2C2_Transmit *****************
  5168 ;; Defined at:
  5169 ;;		line 52 in file "I2C2.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;  address         1    wreg     unsigned char 
  5172 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  5173 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5174 ;;  size            1    2[BANK0 ] unsigned char 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  address         1    5[BANK0 ] unsigned char 
  5177 ;;  i               1    7[BANK0 ] unsigned char 
  5178 ;;  i               1    6[BANK0 ] unsigned char 
  5179 ;;  result          1    8[BANK0 ] char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      char 
  5182 ;; Registers used:
  5183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5189 ;;      Params:         0       2       0       0       0       0
  5190 ;;      Locals:         0       4       0       0       0       0
  5191 ;;      Temps:          0       2       0       0       0       0
  5192 ;;      Totals:         0       8       0       0       0       0
  5193 ;;Total ram usage:        8 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    3
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_I2C_Transmit
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           
  5204                           ;psect for function _I2C2_Transmit
  5205  015C                     _I2C2_Transmit:	
  5206                           
  5207                           ;incstack = 0
  5208                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  5209                           ;I2C2_Transmit@address stored from wreg
  5210  015C  0020               	movlb	0	; select bank0
  5211  015D  00CC               	movwf	I2C2_Transmit@address
  5212                           
  5213                           ;I2C2.c: 54: int8_t result = 0;
  5214  015E  01CF               	clrf	I2C2_Transmit@result
  5215                           
  5216                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  5217  015F  29E8               	goto	l2445
  5218  0160                     l2401:	
  5219                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5220                           
  5221                           ;I2C2.c: 57: {
  5222                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  5223                           
  5224  0160  3005               	movlw	5
  5225  0161  0024               	movlb	4	; select bank4
  5226  0162  051C               	andwf	28,w	;volatile
  5227  0163  0020               	movlb	0	; select bank0
  5228  0164  00CA               	movwf	??_I2C2_Transmit
  5229  0165  0024               	movlb	4	; select bank4
  5230  0166  081E               	movf	30,w	;volatile
  5231  0167  391F               	andlw	31
  5232  0168  0020               	movlb	0	; select bank0
  5233  0169  044A               	iorwf	??_I2C2_Transmit,w
  5234  016A  1D03               	btfss	3,2
  5235  016B  2960               	goto	l2401
  5236                           
  5237                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  5238  016C  0024               	movlb	4	; select bank4
  5239  016D  141E               	bsf	30,0	;volatile
  5240  016E                     l2403:	
  5241                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5242                           
  5243  016E  3005               	movlw	5
  5244  016F  0024               	movlb	4	; select bank4
  5245  0170  051C               	andwf	28,w	;volatile
  5246  0171  0020               	movlb	0	; select bank0
  5247  0172  00CA               	movwf	??_I2C2_Transmit
  5248  0173  0024               	movlb	4	; select bank4
  5249  0174  081E               	movf	30,w	;volatile
  5250  0175  391F               	andlw	31
  5251  0176  0020               	movlb	0	; select bank0
  5252  0177  044A               	iorwf	??_I2C2_Transmit,w
  5253  0178  1D03               	btfss	3,2
  5254  0179  296E               	goto	l2403
  5255                           
  5256                           ;I2C2.c: 63: SSP2BUF = address << 1;
  5257  017A  354C               	lslf	I2C2_Transmit@address,w
  5258  017B  0024               	movlb	4	; select bank4
  5259  017C  0099               	movwf	25	;volatile
  5260  017D                     l228:	
  5261                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  5262                           
  5263  017D  191C               	btfsc	28,2	;volatile
  5264  017E  297D               	goto	l228
  5265                           
  5266                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  5267  017F  3000               	movlw	0
  5268  0180  1B1E               	btfsc	30,6	;volatile
  5269  0181  3001               	movlw	1
  5270  0182  0020               	movlb	0	; select bank0
  5271  0183  00CF               	movwf	I2C2_Transmit@result
  5272                           
  5273                           ;I2C2.c: 67: if (!result)
  5274  0184  084F               	movf	I2C2_Transmit@result,w
  5275  0185  1D03               	btfss	3,2
  5276  0186  29B4               	goto	l2427
  5277                           
  5278                           ;I2C2.c: 68: {
  5279                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  5280  0187  01CD               	clrf	I2C2_Transmit@i
  5281  0188  298D               	goto	l2425
  5282  0189                     l2423:	
  5283                           ;I2C2.c: 79: break;
  5284                           
  5285  0189  3001               	movlw	1
  5286  018A  00CA               	movwf	??_I2C2_Transmit
  5287  018B  084A               	movf	??_I2C2_Transmit,w
  5288  018C  07CD               	addwf	I2C2_Transmit@i,f
  5289  018D                     l2425:	
  5290  018D  0849               	movf	I2C2_Transmit@size,w
  5291  018E  024D               	subwf	I2C2_Transmit@i,w
  5292  018F  1803               	btfsc	3,0
  5293  0190  29B4               	goto	l2427
  5294  0191                     l2413:	
  5295                           ;I2C2.c: 70: {
  5296                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5297                           
  5298  0191  3005               	movlw	5
  5299  0192  0024               	movlb	4	; select bank4
  5300  0193  051C               	andwf	28,w	;volatile
  5301  0194  0020               	movlb	0	; select bank0
  5302  0195  00CA               	movwf	??_I2C2_Transmit
  5303  0196  0024               	movlb	4	; select bank4
  5304  0197  081E               	movf	30,w	;volatile
  5305  0198  391F               	andlw	31
  5306  0199  0020               	movlb	0	; select bank0
  5307  019A  044A               	iorwf	??_I2C2_Transmit,w
  5308  019B  1D03               	btfss	3,2
  5309  019C  2991               	goto	l2413
  5310                           
  5311                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  5312  019D  084D               	movf	I2C2_Transmit@i,w
  5313  019E  0748               	addwf	I2C2_Transmit@pData,w
  5314  019F  00CA               	movwf	??_I2C2_Transmit
  5315  01A0  084A               	movf	??_I2C2_Transmit,w
  5316  01A1  0086               	movwf	6
  5317  01A2  0187               	clrf	7
  5318  01A3  0801               	movf	1,w
  5319  01A4  0024               	movlb	4	; select bank4
  5320  01A5  0099               	movwf	25	;volatile
  5321  01A6                     l237:	
  5322                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  5323                           
  5324  01A6  191C               	btfsc	28,2	;volatile
  5325  01A7  29A6               	goto	l237
  5326                           
  5327                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  5328  01A8  3000               	movlw	0
  5329  01A9  1B1E               	btfsc	30,6	;volatile
  5330  01AA  3001               	movlw	1
  5331  01AB  0020               	movlb	0	; select bank0
  5332  01AC  00CF               	movwf	I2C2_Transmit@result
  5333                           
  5334                           ;I2C2.c: 76: if (result)
  5335  01AD  084F               	movf	I2C2_Transmit@result,w
  5336  01AE  1903               	btfsc	3,2
  5337  01AF  2989               	goto	l2423
  5338                           
  5339                           ;I2C2.c: 77: {
  5340                           ;I2C2.c: 78: result = 2;
  5341  01B0  3002               	movlw	2
  5342  01B1  00CA               	movwf	??_I2C2_Transmit
  5343  01B2  084A               	movf	??_I2C2_Transmit,w
  5344  01B3  00CF               	movwf	I2C2_Transmit@result
  5345  01B4                     l2427:	
  5346                           ;I2C2.c: 80: }
  5347                           ;I2C2.c: 81: }
  5348                           ;I2C2.c: 82: }
  5349                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5350                           
  5351  01B4  3005               	movlw	5
  5352  01B5  0024               	movlb	4	; select bank4
  5353  01B6  051C               	andwf	28,w	;volatile
  5354  01B7  0020               	movlb	0	; select bank0
  5355  01B8  00CA               	movwf	??_I2C2_Transmit
  5356  01B9  0024               	movlb	4	; select bank4
  5357  01BA  081E               	movf	30,w	;volatile
  5358  01BB  391F               	andlw	31
  5359  01BC  0020               	movlb	0	; select bank0
  5360  01BD  044A               	iorwf	??_I2C2_Transmit,w
  5361  01BE  1D03               	btfss	3,2
  5362  01BF  29B4               	goto	l2427
  5363                           
  5364                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  5365  01C0  0024               	movlb	4	; select bank4
  5366  01C1  151E               	bsf	30,2	;volatile
  5367                           
  5368                           ;I2C2.c: 86: break;
  5369  01C2  29F1               	goto	l2447
  5370  01C3                     l246:	
  5371                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  5372                           
  5373                           
  5374                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  5375  01C3  0024               	movlb	4	; select bank4
  5376  01C4  1D9C               	btfss	28,3	;volatile
  5377  01C5  1E1C               	btfss	28,4	;volatile
  5378  01C6  29E5               	goto	l2441
  5379                           
  5380                           ;I2C2.c: 90: {
  5381                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  5382  01C7  0020               	movlb	0	; select bank0
  5383  01C8  01CE               	clrf	I2C2_Transmit@i_316
  5384  01C9                     l2437:	
  5385  01C9  0849               	movf	I2C2_Transmit@size,w
  5386  01CA  024E               	subwf	I2C2_Transmit@i_316,w
  5387  01CB  1803               	btfsc	3,0
  5388  01CC  29E0               	goto	l2439
  5389                           
  5390                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  5391  01CD  084E               	movf	I2C2_Transmit@i_316,w
  5392  01CE  0748               	addwf	I2C2_Transmit@pData,w
  5393  01CF  00CA               	movwf	??_I2C2_Transmit
  5394  01D0  084A               	movf	??_I2C2_Transmit,w
  5395  01D1  0086               	movwf	6
  5396  01D2  0187               	clrf	7
  5397  01D3  0801               	movf	1,w
  5398  01D4  00CB               	movwf	??_I2C2_Transmit+1
  5399  01D5  084E               	movf	I2C2_Transmit@i_316,w
  5400  01D6  3EA0               	addlw	(low (_I2C2_Config| 0))& (0+255)
  5401  01D7  0086               	movwf	6
  5402  01D8  0187               	clrf	7
  5403  01D9  084B               	movf	??_I2C2_Transmit+1,w
  5404  01DA  0081               	movwf	1
  5405  01DB  3001               	movlw	1
  5406  01DC  00CA               	movwf	??_I2C2_Transmit
  5407  01DD  084A               	movf	??_I2C2_Transmit,w
  5408  01DE  07CE               	addwf	I2C2_Transmit@i_316,f
  5409  01DF  29C9               	goto	l2437
  5410  01E0                     l2439:	
  5411                           
  5412                           ;I2C2.c: 93: result = size;
  5413  01E0  0849               	movf	I2C2_Transmit@size,w
  5414  01E1  00CA               	movwf	??_I2C2_Transmit
  5415  01E2  084A               	movf	??_I2C2_Transmit,w
  5416  01E3  00CF               	movwf	I2C2_Transmit@result
  5417                           
  5418                           ;I2C2.c: 94: }
  5419  01E4  29F1               	goto	l2447
  5420  01E5                     l2441:	
  5421                           
  5422                           ;I2C2.c: 95: else
  5423                           ;I2C2.c: 96: result = 0;
  5424  01E5  0020               	movlb	0	; select bank0
  5425  01E6  01CF               	clrf	I2C2_Transmit@result
  5426                           
  5427                           ;I2C2.c: 98: }
  5428                           
  5429                           ;I2C2.c: 97: break;
  5430  01E7  29F1               	goto	l2447
  5431  01E8                     l2445:	
  5432  01E8  0021               	movlb	1	; select bank1
  5433  01E9  0832               	movf	(_I2C2_Config^(0+128)+18),w
  5434                           
  5435                           ; Switch size 1, requested type "space"
  5436                           ; Number of cases is 2, Range of values is 0 to 1
  5437                           ; switch strategies available:
  5438                           ; Name         Instructions Cycles
  5439                           ; simple_byte            7     4 (average)
  5440                           ; direct_byte           10     6 (fixed)
  5441                           ; jumptable            260     6 (fixed)
  5442                           ;	Chosen strategy is simple_byte
  5443  01EA  3A00               	xorlw	0	; case 0
  5444  01EB  1903               	skipnz
  5445  01EC  2960               	goto	l2401
  5446  01ED  3A01               	xorlw	1	; case 1
  5447  01EE  1903               	skipnz
  5448  01EF  29C3               	goto	l246
  5449  01F0  29F1               	goto	l2447
  5450  01F1                     l2447:	
  5451                           
  5452                           ;I2C2.c: 100: return result;
  5453  01F1  0020               	movlb	0	; select bank0
  5454  01F2  084F               	movf	I2C2_Transmit@result,w
  5455  01F3  0008               	return
  5456  01F4                     __end_of_I2C2_Transmit:	
  5457                           
  5458                           	psect	text25
  5459  028C                     __ptext25:	
  5460 ;; *************** function _I2C1_Transmit *****************
  5461 ;; Defined at:
  5462 ;;		line 52 in file "I2C1.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;  address         1    wreg     unsigned char 
  5465 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  5466 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5467 ;;  size            1    2[BANK0 ] unsigned char 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  address         1    5[BANK0 ] unsigned char 
  5470 ;;  i               1    7[BANK0 ] unsigned char 
  5471 ;;  i               1    6[BANK0 ] unsigned char 
  5472 ;;  result          1    8[BANK0 ] char 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      char 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5482 ;;      Params:         0       2       0       0       0       0
  5483 ;;      Locals:         0       4       0       0       0       0
  5484 ;;      Temps:          0       2       0       0       0       0
  5485 ;;      Totals:         0       8       0       0       0       0
  5486 ;;Total ram usage:        8 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    3
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		_I2C_Transmit
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           
  5497                           ;psect for function _I2C1_Transmit
  5498  028C                     _I2C1_Transmit:	
  5499                           
  5500                           ;incstack = 0
  5501                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  5502                           ;I2C1_Transmit@address stored from wreg
  5503  028C  0020               	movlb	0	; select bank0
  5504  028D  00CC               	movwf	I2C1_Transmit@address
  5505                           
  5506                           ;I2C1.c: 54: int8_t result;
  5507                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  5508  028E  2B17               	goto	l2359
  5509  028F                     l2315:	
  5510                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5511                           
  5512                           ;I2C1.c: 57: {
  5513                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  5514                           
  5515  028F  3005               	movlw	5
  5516  0290  0024               	movlb	4	; select bank4
  5517  0291  0514               	andwf	20,w	;volatile
  5518  0292  0020               	movlb	0	; select bank0
  5519  0293  00CA               	movwf	??_I2C1_Transmit
  5520  0294  0024               	movlb	4	; select bank4
  5521  0295  0816               	movf	22,w	;volatile
  5522  0296  391F               	andlw	31
  5523  0297  0020               	movlb	0	; select bank0
  5524  0298  044A               	iorwf	??_I2C1_Transmit,w
  5525  0299  1D03               	btfss	3,2
  5526  029A  2A8F               	goto	l2315
  5527                           
  5528                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  5529  029B  0024               	movlb	4	; select bank4
  5530  029C  1416               	bsf	22,0	;volatile
  5531  029D                     l2317:	
  5532                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5533                           
  5534  029D  3005               	movlw	5
  5535  029E  0024               	movlb	4	; select bank4
  5536  029F  0514               	andwf	20,w	;volatile
  5537  02A0  0020               	movlb	0	; select bank0
  5538  02A1  00CA               	movwf	??_I2C1_Transmit
  5539  02A2  0024               	movlb	4	; select bank4
  5540  02A3  0816               	movf	22,w	;volatile
  5541  02A4  391F               	andlw	31
  5542  02A5  0020               	movlb	0	; select bank0
  5543  02A6  044A               	iorwf	??_I2C1_Transmit,w
  5544  02A7  1D03               	btfss	3,2
  5545  02A8  2A9D               	goto	l2317
  5546                           
  5547                           ;I2C1.c: 63: SSP1BUF = address << 1;
  5548  02A9  354C               	lslf	I2C1_Transmit@address,w
  5549  02AA  0024               	movlb	4	; select bank4
  5550  02AB  0091               	movwf	17	;volatile
  5551  02AC                     l91:	
  5552                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  5553                           
  5554  02AC  1914               	btfsc	20,2	;volatile
  5555  02AD  2AAC               	goto	l91
  5556                           
  5557                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  5558  02AE  3000               	movlw	0
  5559  02AF  1B16               	btfsc	22,6	;volatile
  5560  02B0  3001               	movlw	1
  5561  02B1  0020               	movlb	0	; select bank0
  5562  02B2  00CF               	movwf	I2C1_Transmit@result
  5563                           
  5564                           ;I2C1.c: 67: if (!result)
  5565  02B3  084F               	movf	I2C1_Transmit@result,w
  5566  02B4  1D03               	btfss	3,2
  5567  02B5  2AE3               	goto	l2341
  5568                           
  5569                           ;I2C1.c: 68: {
  5570                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  5571  02B6  01CD               	clrf	I2C1_Transmit@i
  5572  02B7  2ABC               	goto	l2339
  5573  02B8                     l2337:	
  5574                           ;I2C1.c: 79: break;
  5575                           
  5576  02B8  3001               	movlw	1
  5577  02B9  00CA               	movwf	??_I2C1_Transmit
  5578  02BA  084A               	movf	??_I2C1_Transmit,w
  5579  02BB  07CD               	addwf	I2C1_Transmit@i,f
  5580  02BC                     l2339:	
  5581  02BC  0849               	movf	I2C1_Transmit@size,w
  5582  02BD  024D               	subwf	I2C1_Transmit@i,w
  5583  02BE  1803               	btfsc	3,0
  5584  02BF  2AE3               	goto	l2341
  5585  02C0                     l2327:	
  5586                           ;I2C1.c: 70: {
  5587                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5588                           
  5589  02C0  3005               	movlw	5
  5590  02C1  0024               	movlb	4	; select bank4
  5591  02C2  0514               	andwf	20,w	;volatile
  5592  02C3  0020               	movlb	0	; select bank0
  5593  02C4  00CA               	movwf	??_I2C1_Transmit
  5594  02C5  0024               	movlb	4	; select bank4
  5595  02C6  0816               	movf	22,w	;volatile
  5596  02C7  391F               	andlw	31
  5597  02C8  0020               	movlb	0	; select bank0
  5598  02C9  044A               	iorwf	??_I2C1_Transmit,w
  5599  02CA  1D03               	btfss	3,2
  5600  02CB  2AC0               	goto	l2327
  5601                           
  5602                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  5603  02CC  084D               	movf	I2C1_Transmit@i,w
  5604  02CD  0748               	addwf	I2C1_Transmit@pData,w
  5605  02CE  00CA               	movwf	??_I2C1_Transmit
  5606  02CF  084A               	movf	??_I2C1_Transmit,w
  5607  02D0  0086               	movwf	6
  5608  02D1  0187               	clrf	7
  5609  02D2  0801               	movf	1,w
  5610  02D3  0024               	movlb	4	; select bank4
  5611  02D4  0091               	movwf	17	;volatile
  5612  02D5                     l100:	
  5613                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  5614                           
  5615  02D5  1914               	btfsc	20,2	;volatile
  5616  02D6  2AD5               	goto	l100
  5617                           
  5618                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  5619  02D7  3000               	movlw	0
  5620  02D8  1B16               	btfsc	22,6	;volatile
  5621  02D9  3001               	movlw	1
  5622  02DA  0020               	movlb	0	; select bank0
  5623  02DB  00CF               	movwf	I2C1_Transmit@result
  5624                           
  5625                           ;I2C1.c: 76: if (result)
  5626  02DC  084F               	movf	I2C1_Transmit@result,w
  5627  02DD  1903               	btfsc	3,2
  5628  02DE  2AB8               	goto	l2337
  5629                           
  5630                           ;I2C1.c: 77: {
  5631                           ;I2C1.c: 78: result = 2;
  5632  02DF  3002               	movlw	2
  5633  02E0  00CA               	movwf	??_I2C1_Transmit
  5634  02E1  084A               	movf	??_I2C1_Transmit,w
  5635  02E2  00CF               	movwf	I2C1_Transmit@result
  5636  02E3                     l2341:	
  5637                           ;I2C1.c: 80: }
  5638                           ;I2C1.c: 81: }
  5639                           ;I2C1.c: 82: }
  5640                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5641                           
  5642  02E3  3005               	movlw	5
  5643  02E4  0024               	movlb	4	; select bank4
  5644  02E5  0514               	andwf	20,w	;volatile
  5645  02E6  0020               	movlb	0	; select bank0
  5646  02E7  00CA               	movwf	??_I2C1_Transmit
  5647  02E8  0024               	movlb	4	; select bank4
  5648  02E9  0816               	movf	22,w	;volatile
  5649  02EA  391F               	andlw	31
  5650  02EB  0020               	movlb	0	; select bank0
  5651  02EC  044A               	iorwf	??_I2C1_Transmit,w
  5652  02ED  1D03               	btfss	3,2
  5653  02EE  2AE3               	goto	l2341
  5654                           
  5655                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  5656  02EF  0024               	movlb	4	; select bank4
  5657  02F0  1516               	bsf	22,2	;volatile
  5658                           
  5659                           ;I2C1.c: 86: break;
  5660  02F1  2B20               	goto	l2361
  5661  02F2                     l109:	
  5662                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  5663                           
  5664                           
  5665                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  5666  02F2  0024               	movlb	4	; select bank4
  5667  02F3  1D94               	btfss	20,3	;volatile
  5668  02F4  1E14               	btfss	20,4	;volatile
  5669  02F5  2B14               	goto	l2355
  5670                           
  5671                           ;I2C1.c: 90: {
  5672                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  5673  02F6  0020               	movlb	0	; select bank0
  5674  02F7  01CE               	clrf	I2C1_Transmit@i_172
  5675  02F8                     l2351:	
  5676  02F8  0849               	movf	I2C1_Transmit@size,w
  5677  02F9  024E               	subwf	I2C1_Transmit@i_172,w
  5678  02FA  1803               	btfsc	3,0
  5679  02FB  2B0F               	goto	l2353
  5680                           
  5681                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  5682  02FC  084E               	movf	I2C1_Transmit@i_172,w
  5683  02FD  0748               	addwf	I2C1_Transmit@pData,w
  5684  02FE  00CA               	movwf	??_I2C1_Transmit
  5685  02FF  084A               	movf	??_I2C1_Transmit,w
  5686  0300  0086               	movwf	6
  5687  0301  0187               	clrf	7
  5688  0302  0801               	movf	1,w
  5689  0303  00CB               	movwf	??_I2C1_Transmit+1
  5690  0304  084E               	movf	I2C1_Transmit@i_172,w
  5691  0305  3EB3               	addlw	(low (_I2C1_Config| 0))& (0+255)
  5692  0306  0086               	movwf	6
  5693  0307  0187               	clrf	7
  5694  0308  084B               	movf	??_I2C1_Transmit+1,w
  5695  0309  0081               	movwf	1
  5696  030A  3001               	movlw	1
  5697  030B  00CA               	movwf	??_I2C1_Transmit
  5698  030C  084A               	movf	??_I2C1_Transmit,w
  5699  030D  07CE               	addwf	I2C1_Transmit@i_172,f
  5700  030E  2AF8               	goto	l2351
  5701  030F                     l2353:	
  5702                           
  5703                           ;I2C1.c: 93: result = size;
  5704  030F  0849               	movf	I2C1_Transmit@size,w
  5705  0310  00CA               	movwf	??_I2C1_Transmit
  5706  0311  084A               	movf	??_I2C1_Transmit,w
  5707  0312  00CF               	movwf	I2C1_Transmit@result
  5708                           
  5709                           ;I2C1.c: 94: }
  5710  0313  2B20               	goto	l2361
  5711  0314                     l2355:	
  5712                           
  5713                           ;I2C1.c: 95: else
  5714                           ;I2C1.c: 96: result = 0;
  5715  0314  0020               	movlb	0	; select bank0
  5716  0315  01CF               	clrf	I2C1_Transmit@result
  5717                           
  5718                           ;I2C1.c: 98: }
  5719                           
  5720                           ;I2C1.c: 97: break;
  5721  0316  2B20               	goto	l2361
  5722  0317                     l2359:	
  5723  0317  0021               	movlb	1	; select bank1
  5724  0318  0845               	movf	(_I2C1_Config^(0+128)+18),w
  5725                           
  5726                           ; Switch size 1, requested type "space"
  5727                           ; Number of cases is 2, Range of values is 0 to 1
  5728                           ; switch strategies available:
  5729                           ; Name         Instructions Cycles
  5730                           ; simple_byte            7     4 (average)
  5731                           ; direct_byte           10     6 (fixed)
  5732                           ; jumptable            260     6 (fixed)
  5733                           ;	Chosen strategy is simple_byte
  5734  0319  3A00               	xorlw	0	; case 0
  5735  031A  1903               	skipnz
  5736  031B  2A8F               	goto	l2315
  5737  031C  3A01               	xorlw	1	; case 1
  5738  031D  1903               	skipnz
  5739  031E  2AF2               	goto	l109
  5740  031F  2B20               	goto	l2361
  5741  0320                     l2361:	
  5742                           
  5743                           ;I2C1.c: 100: return result;
  5744  0320  0020               	movlb	0	; select bank0
  5745  0321  084F               	movf	I2C1_Transmit@result,w
  5746  0322  0008               	return
  5747  0323                     __end_of_I2C1_Transmit:	
  5748                           
  5749                           	psect	text26
  5750  06DC                     __ptext26:	
  5751 ;; *************** function _I2C_Init *****************
  5752 ;; Defined at:
  5753 ;;		line 6 in file "I2C_Common.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  I2Cx            1    wreg     enum E3178
  5756 ;;  address         1    6[BANK0 ] unsigned char 
  5757 ;;  mode            1    7[BANK0 ] enum E3169
  5758 ;;  Speed           1    8[BANK0 ] enum E3173
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  I2Cx            1   11[BANK0 ] enum E3178
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5770 ;;      Params:         0       3       0       0       0       0
  5771 ;;      Locals:         0       1       0       0       0       0
  5772 ;;      Temps:          0       2       0       0       0       0
  5773 ;;      Totals:         0       6       0       0       0       0
  5774 ;;Total ram usage:        6 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    5
  5777 ;; This function calls:
  5778 ;;		_I2C1_Setting
  5779 ;;		_I2C2_Setting
  5780 ;; This function is called by:
  5781 ;;		_DAC_Initialize
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           
  5786                           ;psect for function _I2C_Init
  5787  06DC                     _I2C_Init:	
  5788                           
  5789                           ;incstack = 0
  5790                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5791                           ;I2C_Init@I2Cx stored from wreg
  5792  06DC  0020               	movlb	0	; select bank0
  5793  06DD  00D2               	movwf	I2C_Init@I2Cx
  5794                           
  5795                           ;I2C_Common.c: 8: switch(I2Cx)
  5796  06DE  2EFA               	goto	l2591
  5797  06DF                     l2585:	
  5798                           ;I2C_Common.c: 9: {
  5799                           ;I2C_Common.c: 10: case I2C1_MODULE:
  5800                           
  5801                           
  5802                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  5803  06DF  084E               	movf	I2C_Init@mode,w
  5804  06E0  00D0               	movwf	??_I2C_Init
  5805  06E1  0850               	movf	??_I2C_Init,w
  5806  06E2  00C9               	movwf	I2C1_Setting@mode
  5807  06E3  084F               	movf	I2C_Init@Speed,w
  5808  06E4  00D1               	movwf	??_I2C_Init+1
  5809  06E5  0851               	movf	??_I2C_Init+1,w
  5810  06E6  00CA               	movwf	I2C1_Setting@Speed
  5811  06E7  084D               	movf	I2C_Init@address,w
  5812  06E8  3185  259D  3186   	fcall	_I2C1_Setting
  5813                           
  5814                           ;I2C_Common.c: 12: break;
  5815  06EB  2F03               	goto	l338
  5816  06EC                     l2587:	
  5817                           ;I2C_Common.c: 14: case I2C2_MODULE:
  5818                           
  5819                           
  5820                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  5821  06EC  0020               	movlb	0	; select bank0
  5822  06ED  084E               	movf	I2C_Init@mode,w
  5823  06EE  00D0               	movwf	??_I2C_Init
  5824  06EF  0850               	movf	??_I2C_Init,w
  5825  06F0  00C9               	movwf	I2C2_Setting@mode
  5826  06F1  084F               	movf	I2C_Init@Speed,w
  5827  06F2  00D1               	movwf	??_I2C_Init+1
  5828  06F3  0851               	movf	??_I2C_Init+1,w
  5829  06F4  00CA               	movwf	I2C2_Setting@Speed
  5830  06F5  084D               	movf	I2C_Init@address,w
  5831  06F6  3185  2559  3186   	fcall	_I2C2_Setting
  5832                           
  5833                           ;I2C_Common.c: 17: }
  5834                           
  5835                           ;I2C_Common.c: 16: break;
  5836  06F9  2F03               	goto	l338
  5837  06FA                     l2591:	
  5838  06FA  0020               	movlb	0	; select bank0
  5839  06FB  0852               	movf	I2C_Init@I2Cx,w
  5840                           
  5841                           ; Switch size 1, requested type "space"
  5842                           ; Number of cases is 2, Range of values is 0 to 1
  5843                           ; switch strategies available:
  5844                           ; Name         Instructions Cycles
  5845                           ; simple_byte            7     4 (average)
  5846                           ; direct_byte           10     6 (fixed)
  5847                           ; jumptable            260     6 (fixed)
  5848                           ;	Chosen strategy is simple_byte
  5849  06FC  3A00               	xorlw	0	; case 0
  5850  06FD  1903               	skipnz
  5851  06FE  2EDF               	goto	l2585
  5852  06FF  3A01               	xorlw	1	; case 1
  5853  0700  1903               	skipnz
  5854  0701  2EEC               	goto	l2587
  5855  0702  2F03               	goto	l338
  5856  0703                     l338:	
  5857                           
  5858                           ;I2C_Common.c: 19: PEIE = 1;
  5859  0703  170B               	bsf	11,6	;volatile
  5860                           
  5861                           ;I2C_Common.c: 20: GIE = 1;
  5862  0704  178B               	bsf	11,7	;volatile
  5863  0705  0008               	return
  5864  0706                     __end_of_I2C_Init:	
  5865                           
  5866                           	psect	text27
  5867  0559                     __ptext27:	
  5868 ;; *************** function _I2C2_Setting *****************
  5869 ;; Defined at:
  5870 ;;		line 15 in file "I2C2.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  address         1    wreg     unsigned char 
  5873 ;;  mode            1    2[BANK0 ] enum E3169
  5874 ;;  Speed           1    3[BANK0 ] enum E3173
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  address         1    5[BANK0 ] unsigned char 
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  1    wreg      void 
  5879 ;; Registers used:
  5880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5886 ;;      Params:         0       2       0       0       0       0
  5887 ;;      Locals:         0       1       0       0       0       0
  5888 ;;      Temps:          0       1       0       0       0       0
  5889 ;;      Totals:         0       4       0       0       0       0
  5890 ;;Total ram usage:        4 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; Hardware stack levels required when called:    4
  5893 ;; This function calls:
  5894 ;;		_I2C2_PinInit
  5895 ;; This function is called by:
  5896 ;;		_I2C_Init
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           
  5901                           ;psect for function _I2C2_Setting
  5902  0559                     _I2C2_Setting:	
  5903                           
  5904                           ;incstack = 0
  5905                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5906                           ;I2C2_Setting@address stored from wreg
  5907  0559  0020               	movlb	0	; select bank0
  5908  055A  00CC               	movwf	I2C2_Setting@address
  5909                           
  5910                           ;I2C2.c: 17: I2C2_PinInit();
  5911  055B  318F  274B  3185   	fcall	_I2C2_PinInit
  5912                           
  5913                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  5914  055E  0020               	movlb	0	; select bank0
  5915  055F  0849               	movf	I2C2_Setting@mode,w
  5916  0560  00CB               	movwf	??_I2C2_Setting
  5917  0561  084B               	movf	??_I2C2_Setting,w
  5918  0562  0021               	movlb	1	; select bank1
  5919  0563  00B2               	movwf	(_I2C2_Config^(0+128)+18)
  5920                           
  5921                           ;I2C2.c: 20: switch(mode)
  5922  0564  2D8D               	goto	l2397
  5923  0565                     l211:	
  5924                           ;I2C2.c: 21: {
  5925                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  5926                           
  5927                           
  5928                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  5929  0565  0024               	movlb	4	; select bank4
  5930  0566  159D               	bsf	29,3	;volatile
  5931                           
  5932                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5933  0567  0020               	movlb	0	; select bank0
  5934  0568  084A               	movf	I2C2_Setting@Speed,w
  5935  0569  1D03               	btfss	3,2
  5936  056A  2D6F               	goto	l2375
  5937                           
  5938                           ;I2C2.c: 25: {
  5939                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  5940  056B  0024               	movlb	4	; select bank4
  5941  056C  179C               	bsf	28,7	;volatile
  5942                           
  5943                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  5944  056D  304F               	movlw	79
  5945  056E  2D79               	goto	L2
  5946  056F                     l2375:	
  5947                           ;I2C2.c: 28: }
  5948                           
  5949                           
  5950                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5951  056F  0020               	movlb	0	; select bank0
  5952  0570  034A               	decf	I2C2_Setting@Speed,w
  5953  0571  1D03               	btfss	3,2
  5954  0572  2D7A               	goto	l2381
  5955                           
  5956                           ;I2C2.c: 30: {
  5957                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  5958  0573  307F               	movlw	127
  5959  0574  00CB               	movwf	??_I2C2_Setting
  5960  0575  084B               	movf	??_I2C2_Setting,w
  5961  0576  0024               	movlb	4	; select bank4
  5962  0577  059C               	andwf	28,f	;volatile
  5963                           
  5964                           ;I2C2.c: 32: SSP2ADD = 0x13;
  5965  0578  3013               	movlw	19
  5966  0579                     L2:	
  5967  0579  009A               	movwf	26	;volatile
  5968  057A                     l2381:	
  5969                           
  5970                           ;I2C2.c: 33: }
  5971                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  5972  057A  0024               	movlb	4	; select bank4
  5973  057B  2D8B               	goto	l2393
  5974  057C                     l2383:	
  5975                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  5976                           
  5977                           ;I2C2.c: 35: break;
  5978                           
  5979                           
  5980                           ;I2C2.c: 38: SSP2STAT = 0x00;
  5981  057C  0024               	movlb	4	; select bank4
  5982  057D  019C               	clrf	28	;volatile
  5983                           
  5984                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  5985  057E  3006               	movlw	6
  5986  057F  0020               	movlb	0	; select bank0
  5987  0580  00CB               	movwf	??_I2C2_Setting
  5988  0581  084B               	movf	??_I2C2_Setting,w
  5989  0582  0024               	movlb	4	; select bank4
  5990  0583  049D               	iorwf	29,f	;volatile
  5991                           
  5992                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  5993  0584  141E               	bsf	30,0	;volatile
  5994                           
  5995                           ;I2C2.c: 41: SSP2ADD = address << 1;
  5996  0585  0020               	movlb	0	; select bank0
  5997  0586  354C               	lslf	I2C2_Setting@address,w
  5998  0587  0024               	movlb	4	; select bank4
  5999  0588  009A               	movwf	26	;volatile
  6000                           
  6001                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  6002  0589  30FE               	movlw	254
  6003  058A  009B               	movwf	27	;volatile
  6004  058B                     l2393:	
  6005                           
  6006                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  6007  058B  169D               	bsf	29,5	;volatile
  6008                           
  6009                           ;I2C2.c: 45: }
  6010                           
  6011                           ;I2C2.c: 44: break;
  6012  058C  2D96               	goto	l215
  6013  058D                     l2397:	
  6014  058D  0020               	movlb	0	; select bank0
  6015  058E  0849               	movf	I2C2_Setting@mode,w
  6016                           
  6017                           ; Switch size 1, requested type "space"
  6018                           ; Number of cases is 2, Range of values is 0 to 1
  6019                           ; switch strategies available:
  6020                           ; Name         Instructions Cycles
  6021                           ; simple_byte            7     4 (average)
  6022                           ; direct_byte           10     6 (fixed)
  6023                           ; jumptable            260     6 (fixed)
  6024                           ;	Chosen strategy is simple_byte
  6025  058F  3A00               	xorlw	0	; case 0
  6026  0590  1903               	skipnz
  6027  0591  2D65               	goto	l211
  6028  0592  3A01               	xorlw	1	; case 1
  6029  0593  1903               	skipnz
  6030  0594  2D7C               	goto	l2383
  6031  0595  2D96               	goto	l215
  6032  0596                     l215:	
  6033                           
  6034                           ;I2C2.c: 46: SSP2IE = 1;
  6035  0596  0021               	movlb	1	; select bank1
  6036  0597  1414               	bsf	20,0	;volatile
  6037                           
  6038                           ;I2C2.c: 47: BCL2IE = 1;
  6039  0598  1494               	bsf	20,1	;volatile
  6040                           
  6041                           ;I2C2.c: 48: SSP2IF = 0;
  6042  0599  0020               	movlb	0	; select bank0
  6043  059A  1014               	bcf	20,0	;volatile
  6044                           
  6045                           ;I2C2.c: 49: BCL2IF = 0;
  6046  059B  1094               	bcf	20,1	;volatile
  6047  059C  0008               	return
  6048  059D                     __end_of_I2C2_Setting:	
  6049                           
  6050                           	psect	text28
  6051  0F4B                     __ptext28:	
  6052 ;; *************** function _I2C2_PinInit *****************
  6053 ;; Defined at:
  6054 ;;		line 9 in file "I2C2.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;		None
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;		None
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      void 
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6068 ;;      Params:         0       0       0       0       0       0
  6069 ;;      Locals:         0       0       0       0       0       0
  6070 ;;      Temps:          0       1       0       0       0       0
  6071 ;;      Totals:         0       1       0       0       0       0
  6072 ;;Total ram usage:        1 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    3
  6075 ;; This function calls:
  6076 ;;		Nothing
  6077 ;; This function is called by:
  6078 ;;		_I2C2_Setting
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           
  6083                           ;psect for function _I2C2_PinInit
  6084  0F4B                     _I2C2_PinInit:	
  6085                           
  6086                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  6087                           
  6088                           ;incstack = 0
  6089                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  6090  0F4B  3024               	movlw	36
  6091  0F4C  0020               	movlb	0	; select bank0
  6092  0F4D  00C8               	movwf	??_I2C2_PinInit
  6093  0F4E  0848               	movf	??_I2C2_PinInit,w
  6094  0F4F  0021               	movlb	1	; select bank1
  6095  0F50  048D               	iorwf	13,f	;volatile
  6096                           
  6097                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  6098  0F51  30DB               	movlw	219
  6099  0F52  0020               	movlb	0	; select bank0
  6100  0F53  00C8               	movwf	??_I2C2_PinInit
  6101  0F54  0848               	movf	??_I2C2_PinInit,w
  6102  0F55  0023               	movlb	3	; select bank3
  6103  0F56  058D               	andwf	13,f	;volatile
  6104  0F57  0008               	return
  6105  0F58                     __end_of_I2C2_PinInit:	
  6106                           
  6107                           	psect	text29
  6108  059D                     __ptext29:	
  6109 ;; *************** function _I2C1_Setting *****************
  6110 ;; Defined at:
  6111 ;;		line 15 in file "I2C1.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  address         1    wreg     unsigned char 
  6114 ;;  mode            1    2[BANK0 ] enum E3169
  6115 ;;  Speed           1    3[BANK0 ] enum E3173
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;  address         1    5[BANK0 ] unsigned char 
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1    wreg      void 
  6120 ;; Registers used:
  6121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6127 ;;      Params:         0       2       0       0       0       0
  6128 ;;      Locals:         0       1       0       0       0       0
  6129 ;;      Temps:          0       1       0       0       0       0
  6130 ;;      Totals:         0       4       0       0       0       0
  6131 ;;Total ram usage:        4 bytes
  6132 ;; Hardware stack levels used:    1
  6133 ;; Hardware stack levels required when called:    4
  6134 ;; This function calls:
  6135 ;;		_I2C1_PinInit
  6136 ;; This function is called by:
  6137 ;;		_I2C_Init
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           
  6142                           ;psect for function _I2C1_Setting
  6143  059D                     _I2C1_Setting:	
  6144                           
  6145                           ;incstack = 0
  6146                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6147                           ;I2C1_Setting@address stored from wreg
  6148  059D  0020               	movlb	0	; select bank0
  6149  059E  00CC               	movwf	I2C1_Setting@address
  6150                           
  6151                           ;I2C1.c: 17: I2C1_PinInit();
  6152  059F  318F  273E  3185   	fcall	_I2C1_PinInit
  6153                           
  6154                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  6155  05A2  0020               	movlb	0	; select bank0
  6156  05A3  0849               	movf	I2C1_Setting@mode,w
  6157  05A4  00CB               	movwf	??_I2C1_Setting
  6158  05A5  084B               	movf	??_I2C1_Setting,w
  6159  05A6  0021               	movlb	1	; select bank1
  6160  05A7  00C5               	movwf	(_I2C1_Config^(0+128)+18)
  6161                           
  6162                           ;I2C1.c: 20: switch(mode)
  6163  05A8  2DD1               	goto	l2311
  6164  05A9                     l74:	
  6165                           ;I2C1.c: 21: {
  6166                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  6167                           
  6168                           
  6169                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  6170  05A9  0024               	movlb	4	; select bank4
  6171  05AA  1595               	bsf	21,3	;volatile
  6172                           
  6173                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6174  05AB  0020               	movlb	0	; select bank0
  6175  05AC  084A               	movf	I2C1_Setting@Speed,w
  6176  05AD  1D03               	btfss	3,2
  6177  05AE  2DB3               	goto	l2289
  6178                           
  6179                           ;I2C1.c: 25: {
  6180                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  6181  05AF  0024               	movlb	4	; select bank4
  6182  05B0  1794               	bsf	20,7	;volatile
  6183                           
  6184                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  6185  05B1  304F               	movlw	79
  6186  05B2  2DBD               	goto	L3
  6187  05B3                     l2289:	
  6188                           ;I2C1.c: 28: }
  6189                           
  6190                           
  6191                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6192  05B3  0020               	movlb	0	; select bank0
  6193  05B4  034A               	decf	I2C1_Setting@Speed,w
  6194  05B5  1D03               	btfss	3,2
  6195  05B6  2DBE               	goto	l2295
  6196                           
  6197                           ;I2C1.c: 30: {
  6198                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  6199  05B7  307F               	movlw	127
  6200  05B8  00CB               	movwf	??_I2C1_Setting
  6201  05B9  084B               	movf	??_I2C1_Setting,w
  6202  05BA  0024               	movlb	4	; select bank4
  6203  05BB  0594               	andwf	20,f	;volatile
  6204                           
  6205                           ;I2C1.c: 32: SSP1ADD = 0x13;
  6206  05BC  3013               	movlw	19
  6207  05BD                     L3:	
  6208  05BD  0092               	movwf	18	;volatile
  6209  05BE                     l2295:	
  6210                           
  6211                           ;I2C1.c: 33: }
  6212                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  6213  05BE  0024               	movlb	4	; select bank4
  6214  05BF  2DCF               	goto	l2307
  6215  05C0                     l2297:	
  6216                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  6217                           
  6218                           ;I2C1.c: 35: break;
  6219                           
  6220                           
  6221                           ;I2C1.c: 38: SSP1STAT = 0x00;
  6222  05C0  0024               	movlb	4	; select bank4
  6223  05C1  0194               	clrf	20	;volatile
  6224                           
  6225                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  6226  05C2  3006               	movlw	6
  6227  05C3  0020               	movlb	0	; select bank0
  6228  05C4  00CB               	movwf	??_I2C1_Setting
  6229  05C5  084B               	movf	??_I2C1_Setting,w
  6230  05C6  0024               	movlb	4	; select bank4
  6231  05C7  0495               	iorwf	21,f	;volatile
  6232                           
  6233                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  6234  05C8  1416               	bsf	22,0	;volatile
  6235                           
  6236                           ;I2C1.c: 41: SSP1ADD = address << 1;
  6237  05C9  0020               	movlb	0	; select bank0
  6238  05CA  354C               	lslf	I2C1_Setting@address,w
  6239  05CB  0024               	movlb	4	; select bank4
  6240  05CC  0092               	movwf	18	;volatile
  6241                           
  6242                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  6243  05CD  30FE               	movlw	254
  6244  05CE  0093               	movwf	19	;volatile
  6245  05CF                     l2307:	
  6246                           
  6247                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  6248  05CF  1695               	bsf	21,5	;volatile
  6249                           
  6250                           ;I2C1.c: 45: }
  6251                           
  6252                           ;I2C1.c: 44: break;
  6253  05D0  2DDA               	goto	l78
  6254  05D1                     l2311:	
  6255  05D1  0020               	movlb	0	; select bank0
  6256  05D2  0849               	movf	I2C1_Setting@mode,w
  6257                           
  6258                           ; Switch size 1, requested type "space"
  6259                           ; Number of cases is 2, Range of values is 0 to 1
  6260                           ; switch strategies available:
  6261                           ; Name         Instructions Cycles
  6262                           ; simple_byte            7     4 (average)
  6263                           ; direct_byte           10     6 (fixed)
  6264                           ; jumptable            260     6 (fixed)
  6265                           ;	Chosen strategy is simple_byte
  6266  05D3  3A00               	xorlw	0	; case 0
  6267  05D4  1903               	skipnz
  6268  05D5  2DA9               	goto	l74
  6269  05D6  3A01               	xorlw	1	; case 1
  6270  05D7  1903               	skipnz
  6271  05D8  2DC0               	goto	l2297
  6272  05D9  2DDA               	goto	l78
  6273  05DA                     l78:	
  6274                           
  6275                           ;I2C1.c: 46: SSP1IE = 1;
  6276  05DA  0021               	movlb	1	; select bank1
  6277  05DB  1591               	bsf	17,3	;volatile
  6278                           
  6279                           ;I2C1.c: 47: BCL1IE = 1;
  6280  05DC  1592               	bsf	18,3	;volatile
  6281                           
  6282                           ;I2C1.c: 48: SSP1IF = 0;
  6283  05DD  0020               	movlb	0	; select bank0
  6284  05DE  1191               	bcf	17,3	;volatile
  6285                           
  6286                           ;I2C1.c: 49: BCL1IF = 0;
  6287  05DF  1192               	bcf	18,3	;volatile
  6288  05E0  0008               	return
  6289  05E1                     __end_of_I2C1_Setting:	
  6290                           
  6291                           	psect	text30
  6292  0F3E                     __ptext30:	
  6293 ;; *************** function _I2C1_PinInit *****************
  6294 ;; Defined at:
  6295 ;;		line 9 in file "I2C1.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;		None
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		wreg, status,2, status,0
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6309 ;;      Params:         0       0       0       0       0       0
  6310 ;;      Locals:         0       0       0       0       0       0
  6311 ;;      Temps:          0       1       0       0       0       0
  6312 ;;      Totals:         0       1       0       0       0       0
  6313 ;;Total ram usage:        1 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    3
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_I2C1_Setting
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           
  6324                           ;psect for function _I2C1_PinInit
  6325  0F3E                     _I2C1_PinInit:	
  6326                           
  6327                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  6328                           
  6329                           ;incstack = 0
  6330                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  6331  0F3E  3012               	movlw	18
  6332  0F3F  0020               	movlb	0	; select bank0
  6333  0F40  00C8               	movwf	??_I2C1_PinInit
  6334  0F41  0848               	movf	??_I2C1_PinInit,w
  6335  0F42  0021               	movlb	1	; select bank1
  6336  0F43  048D               	iorwf	13,f	;volatile
  6337                           
  6338                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  6339  0F44  30ED               	movlw	237
  6340  0F45  0020               	movlb	0	; select bank0
  6341  0F46  00C8               	movwf	??_I2C1_PinInit
  6342  0F47  0848               	movf	??_I2C1_PinInit,w
  6343  0F48  0023               	movlb	3	; select bank3
  6344  0F49  058D               	andwf	13,f	;volatile
  6345  0F4A  0008               	return
  6346  0F4B                     __end_of_I2C1_PinInit:	
  6347                           
  6348                           	psect	text31
  6349  072E                     __ptext31:	
  6350 ;; *************** function _Buzzer_Init *****************
  6351 ;; Defined at:
  6352 ;;		line 11 in file "Buzzer.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;		None
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2, status,0
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6366 ;;      Params:         0       0       0       0       0       0
  6367 ;;      Locals:         0       0       0       0       0       0
  6368 ;;      Temps:          0       1       0       0       0       0
  6369 ;;      Totals:         0       1       0       0       0       0
  6370 ;;Total ram usage:        1 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; Hardware stack levels required when called:    3
  6373 ;; This function calls:
  6374 ;;		Nothing
  6375 ;; This function is called by:
  6376 ;;		_main
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           
  6381                           ;psect for function _Buzzer_Init
  6382  072E                     _Buzzer_Init:	
  6383                           
  6384                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  6385                           
  6386                           ;incstack = 0
  6387                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  6388  072E  307F               	movlw	127
  6389  072F  0020               	movlb	0	; select bank0
  6390  0730  00C8               	movwf	??_Buzzer_Init
  6391  0731  0848               	movf	??_Buzzer_Init,w
  6392  0732  0021               	movlb	1	; select bank1
  6393  0733  058C               	andwf	12,f	;volatile
  6394                           
  6395                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  6396  0734  307F               	movlw	127
  6397  0735  0020               	movlb	0	; select bank0
  6398  0736  00C8               	movwf	??_Buzzer_Init
  6399  0737  0848               	movf	??_Buzzer_Init,w
  6400  0738  0023               	movlb	3	; select bank3
  6401  0739  058C               	andwf	12,f	;volatile
  6402                           
  6403                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  6404  073A  0022               	movlb	2	; select bank2
  6405  073B  159D               	bsf	29,3	;volatile
  6406                           
  6407                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  6408  073C  0020               	movlb	0	; select bank0
  6409  073D  081C               	movf	28,w	;volatile
  6410                           
  6411                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  6412  073E  149C               	bsf	28,1	;volatile
  6413                           
  6414                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  6415  073F  151C               	bsf	28,2	;volatile
  6416                           
  6417                           ;Buzzer.c: 21: TMR2 = 0x00;
  6418  0740  019A               	clrf	26	;volatile
  6419                           
  6420                           ;Buzzer.c: 22: PR2 = 0xFF;
  6421  0741  30FF               	movlw	255
  6422  0742  009B               	movwf	27	;volatile
  6423                           
  6424                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  6425  0743  303F               	movlw	63
  6426  0744  00C8               	movwf	??_Buzzer_Init
  6427  0745  0848               	movf	??_Buzzer_Init,w
  6428  0746  0025               	movlb	5	; select bank5
  6429  0747  059A               	andwf	26,f	;volatile
  6430                           
  6431                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  6432  0748  300C               	movlw	12
  6433  0749  0020               	movlb	0	; select bank0
  6434  074A  00C8               	movwf	??_Buzzer_Init
  6435  074B  0848               	movf	??_Buzzer_Init,w
  6436  074C  0025               	movlb	5	; select bank5
  6437  074D  049A               	iorwf	26,f	;volatile
  6438                           
  6439                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  6440  074E  30F3               	movlw	243
  6441  074F  0020               	movlb	0	; select bank0
  6442  0750  00C8               	movwf	??_Buzzer_Init
  6443  0751  0848               	movf	??_Buzzer_Init,w
  6444  0752  0025               	movlb	5	; select bank5
  6445  0753  059E               	andwf	30,f	;volatile
  6446                           
  6447                           ;Buzzer.c: 28: CCPR2L = 0x00;
  6448  0754  0198               	clrf	24	;volatile
  6449  0755  0008               	return
  6450  0756                     __end_of_Buzzer_Init:	
  6451                           
  6452                           	psect	text32
  6453  0FB3                     __ptext32:	
  6454 ;; *************** function _Basic_Init *****************
  6455 ;; Defined at:
  6456 ;;		line 62 in file "main.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;		None
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;		None
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      char 
  6463 ;; Registers used:
  6464 ;;		wreg, status,2
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6470 ;;      Params:         0       0       0       0       0       0
  6471 ;;      Locals:         0       0       0       0       0       0
  6472 ;;      Temps:          0       0       0       0       0       0
  6473 ;;      Totals:         0       0       0       0       0       0
  6474 ;;Total ram usage:        0 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    3
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_main
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           
  6485                           ;psect for function _Basic_Init
  6486  0FB3                     _Basic_Init:	
  6487                           
  6488                           ;main.c: 64: OSCCON = 0xF0;
  6489                           
  6490                           ;incstack = 0
  6491                           ; Regs used in _Basic_Init: [wreg+status,2]
  6492  0FB3  30F0               	movlw	240
  6493  0FB4  0021               	movlb	1	; select bank1
  6494  0FB5  0099               	movwf	25	;volatile
  6495                           
  6496                           ;main.c: 68: TRISA = 0x00;
  6497  0FB6  018C               	clrf	12	;volatile
  6498                           
  6499                           ;main.c: 69: ANSELA = 0x00;
  6500  0FB7  0023               	movlb	3	; select bank3
  6501  0FB8  018C               	clrf	12	;volatile
  6502                           
  6503                           ;main.c: 71: TRISB = 0x00;
  6504  0FB9  0021               	movlb	1	; select bank1
  6505  0FBA  018D               	clrf	13	;volatile
  6506                           
  6507                           ;main.c: 72: ANSELB = 0x00;
  6508  0FBB  0023               	movlb	3	; select bank3
  6509  0FBC  018D               	clrf	13	;volatile
  6510                           
  6511                           ;main.c: 74: APFCON0 = 0x00;
  6512  0FBD  0022               	movlb	2	; select bank2
  6513  0FBE  019D               	clrf	29	;volatile
  6514                           
  6515                           ;main.c: 75: APFCON1 = 0x00;
  6516  0FBF  019E               	clrf	30	;volatile
  6517                           
  6518                           ;main.c: 77: PORTA = 0x00;
  6519  0FC0  0020               	movlb	0	; select bank0
  6520  0FC1  018C               	clrf	12	;volatile
  6521                           
  6522                           ;main.c: 78: PORTB = 0x00;
  6523  0FC2  018D               	clrf	13	;volatile
  6524  0FC3  0008               	return
  6525  0FC4                     __end_of_Basic_Init:	
  6526                           ;main.c: 80: return 0;
  6527                           ;	Return value of _Basic_Init is never used
  6528                           
  6529                           
  6530                           	psect	intentry
  6531  0004                     __pintentry:	
  6532 ;; *************** function _Handler *****************
  6533 ;; Defined at:
  6534 ;;		line 83 in file "main.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;		None
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1    wreg      void 
  6541 ;; Registers used:
  6542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6548 ;;      Params:         0       0       0       0       0       0
  6549 ;;      Locals:         0       0       0       0       0       0
  6550 ;;      Temps:          0       1       0       0       0       0
  6551 ;;      Totals:         0       1       0       0       0       0
  6552 ;;Total ram usage:        1 bytes
  6553 ;; Hardware stack levels used:    1
  6554 ;; Hardware stack levels required when called:    2
  6555 ;; This function calls:
  6556 ;;		_Buzzer_Count1ms
  6557 ;;		_I2C_CommonInterrupt
  6558 ;;		_Timer1_Count200us
  6559 ;;		_Timer1_DetectAssignCount
  6560 ;;		_Timer4_CheckFlag
  6561 ;;		_Timer6_CheckFlag
  6562 ;;		_mTouch_IntervalDecrement
  6563 ;;		_mTouch_Read
  6564 ;; This function is called by:
  6565 ;;		Interrupt level 1
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569  0004                     _Handler:	
  6570                           
  6571                           ;incstack = 0
  6572  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6573                           
  6574                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6575  0005  3180               	pagesel	$
  6576  0006  0020               	movlb	0	; select bank0
  6577  0007  087F               	movf	127,w
  6578  0008  00C7               	movwf	??_Handler
  6579                           
  6580                           ;main.c: 85: if(Timer4_CheckFlag())
  6581  0009  318F  2733  3180   	fcall	_Timer4_CheckFlag
  6582  000C  3A00               	xorlw	0
  6583  000D  1903               	skipnz
  6584  000E  2812               	goto	i1l3269
  6585                           
  6586                           ;main.c: 86: Timer1_Count200us();
  6587  000F  318F  2715  3180   	fcall	_Timer1_Count200us
  6588  0012                     i1l3269:	
  6589                           
  6590                           ;main.c: 88: if(Timer1_DetectAssignCount())
  6591  0012  3181  21F4  3180   	fcall	_Timer1_DetectAssignCount
  6592  0015  3A00               	xorlw	0
  6593  0016  1903               	skipnz
  6594  0017  281B               	goto	i1l3273
  6595                           
  6596                           ;main.c: 89: LATA6 = !LATA6;
  6597  0018  3040               	movlw	64
  6598  0019  0022               	movlb	2	; select bank2
  6599  001A  068C               	xorwf	12,f
  6600  001B                     i1l3273:	
  6601                           
  6602                           ;main.c: 91: if(Timer6_CheckFlag())
  6603  001B  3187  27F4  3180   	fcall	_Timer6_CheckFlag
  6604  001E  3A00               	xorlw	0
  6605  001F  1903               	skipnz
  6606  0020  282A               	goto	i1l635
  6607                           
  6608                           ;main.c: 92: {
  6609                           ;main.c: 93: mTouch_IntervalDecrement();
  6610  0021  318F  27A2  3180   	fcall	_mTouch_IntervalDecrement
  6611                           
  6612                           ;main.c: 95: mTouch_Read();
  6613  0024  3187  2756  3180   	fcall	_mTouch_Read
  6614                           
  6615                           ;main.c: 96: Buzzer_Count1ms();
  6616  0027  318F  27EA  3180   	fcall	_Buzzer_Count1ms
  6617  002A                     i1l635:	
  6618                           
  6619                           ;main.c: 97: }
  6620                           ;main.c: 98: I2C_CommonInterrupt();
  6621  002A  318E  26FA         	fcall	_I2C_CommonInterrupt
  6622  002C  0020               	movlb	0	; select bank0
  6623  002D  0847               	movf	??_Handler,w
  6624  002E  00FF               	movwf	127
  6625  002F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6626  0030  0009               	retfie
  6627  0031                     __end_of_Handler:	
  6628                           
  6629                           	psect	text34
  6630  0756                     __ptext34:	
  6631 ;; *************** function _mTouch_Read *****************
  6632 ;; Defined at:
  6633 ;;		line 29 in file "mTouch.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6647 ;;      Params:         0       0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0
  6649 ;;      Temps:          1       0       0       0       0       0
  6650 ;;      Totals:         1       0       0       0       0       0
  6651 ;;Total ram usage:        1 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_Handler
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           
  6661                           ;psect for function _mTouch_Read
  6662  0756                     _mTouch_Read:	
  6663                           
  6664                           ;mTouch.c: 31: static uint8_t channel=0;
  6665                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  6666                           
  6667                           ;incstack = 0
  6668                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6669  0756  0020               	movlb	0	; select bank0
  6670  0757  0843               	movf	mTouch_Read@channel,w
  6671  0758  3E37               	addlw	(low (_CPS_Data| 0))& (0+255)
  6672  0759  0086               	movwf	6
  6673  075A  0187               	clrf	7
  6674  075B  0801               	movf	1,w
  6675  075C  00F0               	movwf	??_mTouch_Read
  6676  075D  0843               	movf	mTouch_Read@channel,w
  6677  075E  3E3A               	addlw	(low (_CPS_PreData| 0))& (0+255)
  6678  075F  0086               	movwf	6
  6679  0760  0187               	clrf	7
  6680  0761  0870               	movf	??_mTouch_Read,w
  6681  0762  0081               	movwf	1
  6682                           
  6683                           ;mTouch.c: 35: CPSCON0 &= ~(0x01<<7);;
  6684  0763  307F               	movlw	127
  6685  0764  00F0               	movwf	??_mTouch_Read
  6686  0765  0870               	movf	??_mTouch_Read,w
  6687  0766  059E               	andwf	30,f	;volatile
  6688                           
  6689                           ;mTouch.c: 36: CPS_Data[channel] = TMR0;
  6690  0767  0815               	movf	21,w	;volatile
  6691  0768  00F0               	movwf	??_mTouch_Read
  6692  0769  0843               	movf	mTouch_Read@channel,w
  6693  076A  3E37               	addlw	(low (_CPS_Data| 0))& (0+255)
  6694  076B  0086               	movwf	6
  6695  076C  0187               	clrf	7
  6696  076D  0870               	movf	??_mTouch_Read,w
  6697  076E  0081               	movwf	1
  6698                           
  6699                           ;mTouch.c: 37: TMR0 = 0x00;
  6700  076F  0195               	clrf	21	;volatile
  6701                           
  6702                           ;mTouch.c: 38: CPSCON0 |= (0x01<<7);;
  6703  0770  179E               	bsf	30,7	;volatile
  6704                           
  6705                           ;mTouch.c: 40: if(channel++>2)channel = 0;
  6706  0771  0843               	movf	mTouch_Read@channel,w
  6707  0772  0AC3               	incf	mTouch_Read@channel,f
  6708  0773  00F0               	movwf	??_mTouch_Read
  6709  0774  3003               	movlw	3
  6710  0775  0270               	subwf	??_mTouch_Read,w
  6711  0776  1803               	btfsc	3,0
  6712  0777  01C3               	clrf	mTouch_Read@channel
  6713                           
  6714                           ;mTouch.c: 41: CPSCON1 = (uint8_t)channel;
  6715  0778  0843               	movf	mTouch_Read@channel,w
  6716  0779  009F               	movwf	31	;volatile
  6717  077A  0008               	return
  6718  077B                     __end_of_mTouch_Read:	
  6719                           
  6720                           	psect	text35
  6721  0FA2                     __ptext35:	
  6722 ;; *************** function _mTouch_IntervalDecrement *****************
  6723 ;; Defined at:
  6724 ;;		line 101 in file "main.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;		None
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;		None
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  1    wreg      void 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6738 ;;      Params:         0       0       0       0       0       0
  6739 ;;      Locals:         0       0       0       0       0       0
  6740 ;;      Temps:          0       0       0       0       0       0
  6741 ;;      Totals:         0       0       0       0       0       0
  6742 ;;Total ram usage:        0 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; This function calls:
  6745 ;;		Nothing
  6746 ;; This function is called by:
  6747 ;;		_Handler
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           
  6752                           ;psect for function _mTouch_IntervalDecrement
  6753  0FA2                     _mTouch_IntervalDecrement:	
  6754                           
  6755                           ;main.c: 103: if(mTouch_Interval[0]>0)
  6756                           
  6757                           ;incstack = 0
  6758                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  6759  0FA2  0020               	movlb	0	; select bank0
  6760  0FA3  0834               	movf	_mTouch_Interval,w
  6761  0FA4  1903               	btfsc	3,2
  6762  0FA5  2FA8               	goto	i1l639
  6763                           
  6764                           ;main.c: 104: mTouch_Interval[0]--;
  6765  0FA6  3001               	movlw	1
  6766  0FA7  02B4               	subwf	_mTouch_Interval,f
  6767  0FA8                     i1l639:	
  6768                           
  6769                           ;main.c: 105: if(mTouch_Interval[1]>0)
  6770  0FA8  0835               	movf	_mTouch_Interval+1,w
  6771  0FA9  1903               	btfsc	3,2
  6772  0FAA  2FAD               	goto	i1l640
  6773                           
  6774                           ;main.c: 106: mTouch_Interval[1]--;
  6775  0FAB  3001               	movlw	1
  6776  0FAC  02B5               	subwf	_mTouch_Interval+1,f
  6777  0FAD                     i1l640:	
  6778                           
  6779                           ;main.c: 107: if(mTouch_Interval[2]>0)
  6780  0FAD  0836               	movf	_mTouch_Interval+2,w
  6781  0FAE  1903               	btfsc	3,2
  6782  0FAF  0008               	return
  6783                           
  6784                           ;main.c: 108: mTouch_Interval[2]--;
  6785  0FB0  3001               	movlw	1
  6786  0FB1  02B6               	subwf	_mTouch_Interval+2,f
  6787  0FB2  0008               	return
  6788  0FB3                     __end_of_mTouch_IntervalDecrement:	
  6789                           
  6790                           	psect	text36
  6791  07F4                     __ptext36:	
  6792 ;; *************** function _Timer6_CheckFlag *****************
  6793 ;; Defined at:
  6794 ;;		line 17 in file "Timer6.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;		None
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;		None
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  1    wreg      unsigned char 
  6801 ;; Registers used:
  6802 ;;		wreg
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6808 ;;      Params:         0       0       0       0       0       0
  6809 ;;      Locals:         0       0       0       0       0       0
  6810 ;;      Temps:          0       0       0       0       0       0
  6811 ;;      Totals:         0       0       0       0       0       0
  6812 ;;Total ram usage:        0 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; This function calls:
  6815 ;;		Nothing
  6816 ;; This function is called by:
  6817 ;;		_Handler
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           
  6822                           ;psect for function _Timer6_CheckFlag
  6823  07F4                     _Timer6_CheckFlag:	
  6824                           
  6825                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  6826                           
  6827                           ;incstack = 0
  6828                           ; Regs used in _Timer6_CheckFlag: [wreg]
  6829  07F4  0021               	movlb	1	; select bank1
  6830  07F5  1D93               	btfss	19,3	;volatile
  6831  07F6  2FFD               	goto	i1l2133
  6832  07F7  0020               	movlb	0	; select bank0
  6833  07F8  1D93               	btfss	19,3	;volatile
  6834  07F9  2FFD               	goto	i1l2133
  6835                           
  6836                           ;Timer6.c: 20: {
  6837                           ;Timer6.c: 21: TMR6IF = 0;
  6838  07FA  1193               	bcf	19,3	;volatile
  6839                           
  6840                           ;Timer6.c: 22: return 1;
  6841  07FB  3001               	movlw	1
  6842  07FC  0008               	return
  6843  07FD                     i1l2133:	
  6844                           
  6845                           ;Timer6.c: 23: }
  6846                           ;Timer6.c: 24: return 0;
  6847  07FD  3000               	movlw	0
  6848  07FE  0008               	return
  6849  07FF                     __end_of_Timer6_CheckFlag:	
  6850                           
  6851                           	psect	text37
  6852  0F33                     __ptext37:	
  6853 ;; *************** function _Timer4_CheckFlag *****************
  6854 ;; Defined at:
  6855 ;;		line 17 in file "Timer4.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;		None
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;		None
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      unsigned char 
  6862 ;; Registers used:
  6863 ;;		wreg
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6869 ;;      Params:         0       0       0       0       0       0
  6870 ;;      Locals:         0       0       0       0       0       0
  6871 ;;      Temps:          0       0       0       0       0       0
  6872 ;;      Totals:         0       0       0       0       0       0
  6873 ;;Total ram usage:        0 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_Handler
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           
  6883                           ;psect for function _Timer4_CheckFlag
  6884  0F33                     _Timer4_CheckFlag:	
  6885                           
  6886                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  6887                           
  6888                           ;incstack = 0
  6889                           ; Regs used in _Timer4_CheckFlag: [wreg]
  6890  0F33  0021               	movlb	1	; select bank1
  6891  0F34  1C93               	btfss	19,1	;volatile
  6892  0F35  2F3C               	goto	i1l1961
  6893  0F36  0020               	movlb	0	; select bank0
  6894  0F37  1C93               	btfss	19,1	;volatile
  6895  0F38  2F3C               	goto	i1l1961
  6896                           
  6897                           ;Timer4.c: 20: {
  6898                           ;Timer4.c: 21: TMR4IF = 0;
  6899  0F39  1093               	bcf	19,1	;volatile
  6900                           
  6901                           ;Timer4.c: 22: return 1;
  6902  0F3A  3001               	movlw	1
  6903  0F3B  0008               	return
  6904  0F3C                     i1l1961:	
  6905                           
  6906                           ;Timer4.c: 23: }
  6907                           ;Timer4.c: 24: return 0;
  6908  0F3C  3000               	movlw	0
  6909  0F3D  0008               	return
  6910  0F3E                     __end_of_Timer4_CheckFlag:	
  6911                           
  6912                           	psect	text38
  6913  01F4                     __ptext38:	
  6914 ;; *************** function _Timer1_DetectAssignCount *****************
  6915 ;; Defined at:
  6916 ;;		line 67 in file "Timer1.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;		None
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;		None
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  1    wreg      unsigned char 
  6923 ;; Registers used:
  6924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6930 ;;      Params:         0       0       0       0       0       0
  6931 ;;      Locals:         0       0       0       0       0       0
  6932 ;;      Temps:          0       0       0       0       0       0
  6933 ;;      Totals:         0       0       0       0       0       0
  6934 ;;Total ram usage:        0 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; Hardware stack levels required when called:    1
  6937 ;; This function calls:
  6938 ;;		___lldiv
  6939 ;; This function is called by:
  6940 ;;		_Handler
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           
  6945                           ;psect for function _Timer1_DetectAssignCount
  6946  01F4                     _Timer1_DetectAssignCount:	
  6947                           
  6948                           ;Timer1.c: 69: static uint16_t PreviousTimer1;
  6949                           ;Timer1.c: 71: if((tcnt.Delta_t>50000)&&((uint16_t)TMR1==PreviousTimer1))
  6950                           
  6951                           ;incstack = 0
  6952                           ; Regs used in _Timer1_DetectAssignCount: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  6953  01F4  0020               	movlb	0	; select bank0
  6954  01F5  0831               	movf	_tcnt+3,w
  6955  01F6  1D03               	btfss	3,2
  6956  01F7  2A01               	goto	i1l2955
  6957  01F8  0830               	movf	_tcnt+2,w
  6958  01F9  1D03               	btfss	3,2
  6959  01FA  2A01               	goto	i1l2955
  6960  01FB  3051               	movlw	81
  6961  01FC  022E               	subwf	_tcnt,w
  6962  01FD  30C3               	movlw	195
  6963  01FE  3B2F               	subwfb	_tcnt+1,w
  6964  01FF  1C03               	btfss	3,0
  6965  0200  2A11               	goto	i1l468
  6966  0201                     i1l2955:	
  6967  0201  0840               	movf	Timer1_DetectAssignCount@PreviousTimer1+1,w
  6968  0202  0617               	xorwf	23,w	;volatile
  6969  0203  1D03               	skipz
  6970  0204  2A07               	goto	u258_25
  6971  0205  083F               	movf	Timer1_DetectAssignCount@PreviousTimer1,w
  6972  0206  0616               	xorwf	22,w	;volatile
  6973  0207                     u258_25:	
  6974  0207  1D03               	skipz
  6975  0208  2A11               	goto	i1l468
  6976                           
  6977                           ;Timer1.c: 72: cnts.SigmaCPM = 0;
  6978  0209  3000               	movlw	0
  6979  020A  00A7               	movwf	_cnts+7
  6980  020B  3000               	movlw	0
  6981  020C  00A6               	movwf	_cnts+6
  6982  020D  3000               	movlw	0
  6983  020E  00A5               	movwf	_cnts+5
  6984  020F  3000               	movlw	0
  6985  0210  00A4               	movwf	_cnts+4
  6986  0211                     i1l468:	
  6987                           
  6988                           ;Timer1.c: 73: PreviousTimer1 = (uint16_t)TMR1;
  6989  0211  0817               	movf	23,w	;volatile
  6990  0212  00C0               	movwf	Timer1_DetectAssignCount@PreviousTimer1+1
  6991  0213  0816               	movf	22,w	;volatile
  6992  0214  00BF               	movwf	Timer1_DetectAssignCount@PreviousTimer1
  6993                           
  6994                           ;Timer1.c: 75: tcnt.RenewalCPM++;
  6995  0215  3001               	movlw	1
  6996  0216  07B2               	addwf	_tcnt+4,f
  6997  0217  3000               	movlw	0
  6998  0218  3DB3               	addwfc	_tcnt+5,f
  6999                           
  7000                           ;Timer1.c: 76: if((tcnt.RenewalCPM>5000)&&cnts.Num_of_Detect)
  7001  0219  3013               	movlw	19
  7002  021A  0233               	subwf	_tcnt+5,w
  7003  021B  3089               	movlw	137
  7004  021C  1903               	skipnz
  7005  021D  0232               	subwf	_tcnt+4,w
  7006  021E  1C03               	skipc
  7007  021F  2A48               	goto	i1l2965
  7008  0220  082D               	movf	_cnts+13,w
  7009  0221  042C               	iorwf	_cnts+12,w
  7010  0222  042B               	iorwf	_cnts+11,w
  7011  0223  042A               	iorwf	_cnts+10,w
  7012  0224  1903               	skipnz
  7013  0225  2A48               	goto	i1l2965
  7014                           
  7015                           ;Timer1.c: 77: {
  7016                           ;Timer1.c: 78: tcnt.RenewalCPM = 0;
  7017  0226  01B2               	clrf	_tcnt+4
  7018  0227  01B3               	clrf	_tcnt+5
  7019                           
  7020                           ;Timer1.c: 79: cnts.AverageCPM = cnts.SigmaCPM/cnts.Num_of_Detect;
  7021  0228  300A               	movlw	10
  7022  0229  3E20               	addlw	(low (_cnts| 0))& (0+255)
  7023  022A  0086               	movwf	6
  7024  022B  0187               	clrf	7
  7025  022C  3F40               	moviw [0]fsr1
  7026  022D  00F0               	movwf	___lldiv@divisor
  7027  022E  3F41               	moviw [1]fsr1
  7028  022F  00F1               	movwf	___lldiv@divisor+1
  7029  0230  3F42               	moviw [2]fsr1
  7030  0231  00F2               	movwf	___lldiv@divisor+2
  7031  0232  3F43               	moviw [3]fsr1
  7032  0233  00F3               	movwf	___lldiv@divisor+3
  7033  0234  3004               	movlw	4
  7034  0235  3E20               	addlw	(low (_cnts| 0))& (0+255)
  7035  0236  0086               	movwf	6
  7036  0237  0187               	clrf	7
  7037  0238  3F40               	moviw [0]fsr1
  7038  0239  00F4               	movwf	___lldiv@dividend
  7039  023A  3F41               	moviw [1]fsr1
  7040  023B  00F5               	movwf	___lldiv@dividend+1
  7041  023C  3F42               	moviw [2]fsr1
  7042  023D  00F6               	movwf	___lldiv@dividend+2
  7043  023E  3F43               	moviw [3]fsr1
  7044  023F  00F7               	movwf	___lldiv@dividend+3
  7045  0240  3184  24C3  3181   	fcall	___lldiv
  7046  0243  0871               	movf	?___lldiv+1,w
  7047  0244  0020               	movlb	0	; select bank0
  7048  0245  00A9               	movwf	_cnts+9
  7049  0246  0870               	movf	?___lldiv,w
  7050  0247  00A8               	movwf	_cnts+8
  7051  0248                     i1l2965:	
  7052                           
  7053                           ;Timer1.c: 80: }
  7054                           ;Timer1.c: 82: if(TMR1IF&&TMR1IE)
  7055  0248  1C11               	btfss	17,0	;volatile
  7056  0249  2A8A               	goto	i1l2989
  7057  024A  0021               	movlb	1	; select bank1
  7058  024B  1C11               	btfss	17,0	;volatile
  7059  024C  2A8A               	goto	i1l2989
  7060                           
  7061                           ;Timer1.c: 83: {
  7062                           ;Timer1.c: 84: cnts.SigmaDeltaCount+= 10UL;
  7063  024D  300A               	movlw	10
  7064  024E  0020               	movlb	0	; select bank0
  7065  024F  07A0               	addwf	_cnts,f
  7066  0250  3000               	movlw	0
  7067  0251  3DA1               	addwfc	_cnts+1,f
  7068  0252  3000               	movlw	0
  7069  0253  3DA2               	addwfc	_cnts+2,f
  7070  0254  3000               	movlw	0
  7071  0255  3DA3               	addwfc	_cnts+3,f
  7072                           
  7073                           ;Timer1.c: 86: cnts.SigmaCPM += (uint32_t)((10UL * 12000UL) / tcnt.Delta_t);
  7074  0256  0831               	movf	_tcnt+3,w
  7075  0257  00F3               	movwf	___lldiv@divisor+3
  7076  0258  0830               	movf	_tcnt+2,w
  7077  0259  00F2               	movwf	___lldiv@divisor+2
  7078  025A  082F               	movf	_tcnt+1,w
  7079  025B  00F1               	movwf	___lldiv@divisor+1
  7080  025C  082E               	movf	_tcnt,w
  7081  025D  00F0               	movwf	___lldiv@divisor
  7082  025E  3000               	movlw	0
  7083  025F  00F7               	movwf	___lldiv@dividend+3
  7084  0260  3001               	movlw	1
  7085  0261  00F6               	movwf	___lldiv@dividend+2
  7086  0262  30D4               	movlw	212
  7087  0263  00F5               	movwf	___lldiv@dividend+1
  7088  0264  30C0               	movlw	192
  7089  0265  00F4               	movwf	___lldiv@dividend
  7090  0266  3184  24C3         	fcall	___lldiv
  7091  0268  0870               	movf	?___lldiv,w
  7092  0269  0020               	movlb	0	; select bank0
  7093  026A  07A4               	addwf	_cnts+4,f
  7094  026B  0871               	movf	?___lldiv+1,w
  7095  026C  3DA5               	addwfc	_cnts+5,f
  7096  026D  0872               	movf	?___lldiv+2,w
  7097  026E  3DA6               	addwfc	_cnts+6,f
  7098  026F  0873               	movf	?___lldiv+3,w
  7099  0270  3DA7               	addwfc	_cnts+7,f
  7100                           
  7101                           ;Timer1.c: 87: cnts.Num_of_Detect++;
  7102  0271  3001               	movlw	1
  7103  0272  07AA               	addwf	_cnts+10,f
  7104  0273  3000               	movlw	0
  7105  0274  3DAB               	addwfc	_cnts+11,f
  7106  0275  3000               	movlw	0
  7107  0276  3DAC               	addwfc	_cnts+12,f
  7108  0277  3000               	movlw	0
  7109  0278  3DAD               	addwfc	_cnts+13,f
  7110                           
  7111                           ;Timer1.c: 89: tcnt.Delta_t = 0;
  7112  0279  3000               	movlw	0
  7113  027A  00B1               	movwf	_tcnt+3
  7114  027B  3000               	movlw	0
  7115  027C  00B0               	movwf	_tcnt+2
  7116  027D  3000               	movlw	0
  7117  027E  00AF               	movwf	_tcnt+1
  7118  027F  3000               	movlw	0
  7119  0280  00AE               	movwf	_tcnt
  7120                           
  7121                           ;Timer1.c: 90: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF-10UL; TMR1ON = 1; };
  7122  0281  1018               	bcf	24,0	;volatile
  7123  0282  30FF               	movlw	255
  7124  0283  0097               	movwf	23	;volatile
  7125  0284  30F5               	movlw	245
  7126  0285  0096               	movwf	22	;volatile
  7127  0286  1418               	bsf	24,0	;volatile
  7128                           
  7129                           ;Timer1.c: 91: TMR1IF = 0;
  7130  0287  1011               	bcf	17,0	;volatile
  7131                           
  7132                           ;Timer1.c: 92: return 1;
  7133  0288  3001               	movlw	1
  7134  0289  0008               	return
  7135  028A                     i1l2989:	
  7136                           
  7137                           ;Timer1.c: 93: }
  7138                           ;Timer1.c: 94: return 0;
  7139  028A  3000               	movlw	0
  7140  028B  0008               	return
  7141  028C                     __end_of_Timer1_DetectAssignCount:	
  7142                           
  7143                           	psect	text39
  7144  04C3                     __ptext39:	
  7145 ;; *************** function ___lldiv *****************
  7146 ;; Defined at:
  7147 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  divisor         4    0[COMMON] unsigned long 
  7150 ;;  dividend        4    4[COMMON] unsigned long 
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  quotient        4    9[COMMON] unsigned long 
  7153 ;;  counter         1   13[COMMON] unsigned char 
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  4    0[COMMON] unsigned long 
  7156 ;; Registers used:
  7157 ;;		wreg, status,2, status,0
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7163 ;;      Params:         8       0       0       0       0       0
  7164 ;;      Locals:         5       0       0       0       0       0
  7165 ;;      Temps:          1       0       0       0       0       0
  7166 ;;      Totals:        14       0       0       0       0       0
  7167 ;;Total ram usage:       14 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; This function calls:
  7170 ;;		Nothing
  7171 ;; This function is called by:
  7172 ;;		_Timer1_DetectAssignCount
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           
  7177                           ;psect for function ___lldiv
  7178  04C3                     ___lldiv:	
  7179                           
  7180                           ;incstack = 0
  7181                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7182  04C3  3000               	movlw	0
  7183  04C4  00FC               	movwf	___lldiv@quotient+3
  7184  04C5  3000               	movlw	0
  7185  04C6  00FB               	movwf	___lldiv@quotient+2
  7186  04C7  3000               	movlw	0
  7187  04C8  00FA               	movwf	___lldiv@quotient+1
  7188  04C9  3000               	movlw	0
  7189  04CA  00F9               	movwf	___lldiv@quotient
  7190  04CB  0873               	movf	___lldiv@divisor+3,w
  7191  04CC  0472               	iorwf	___lldiv@divisor+2,w
  7192  04CD  0471               	iorwf	___lldiv@divisor+1,w
  7193  04CE  0470               	iorwf	___lldiv@divisor,w
  7194  04CF  1903               	skipnz
  7195  04D0  2D0C               	goto	i1l2669
  7196  04D1  01FD               	clrf	___lldiv@counter
  7197  04D2  0AFD               	incf	___lldiv@counter,f
  7198  04D3                     i1l2655:	
  7199  04D3  1BF3               	btfsc	___lldiv@divisor+3,7
  7200  04D4  2CE1               	goto	i1l2657
  7201  04D5  3001               	movlw	1
  7202  04D6                     u211_25:	
  7203  04D6  35F0               	lslf	___lldiv@divisor,f
  7204  04D7  0DF1               	rlf	___lldiv@divisor+1,f
  7205  04D8  0DF2               	rlf	___lldiv@divisor+2,f
  7206  04D9  0DF3               	rlf	___lldiv@divisor+3,f
  7207  04DA  0B89               	decfsz	9,f
  7208  04DB  2CD6               	goto	u211_25
  7209  04DC  3001               	movlw	1
  7210  04DD  00F8               	movwf	??___lldiv
  7211  04DE  0878               	movf	??___lldiv,w
  7212  04DF  07FD               	addwf	___lldiv@counter,f
  7213  04E0  2CD3               	goto	i1l2655
  7214  04E1                     i1l2657:	
  7215  04E1  3001               	movlw	1
  7216  04E2                     u213_25:	
  7217  04E2  35F9               	lslf	___lldiv@quotient,f
  7218  04E3  0DFA               	rlf	___lldiv@quotient+1,f
  7219  04E4  0DFB               	rlf	___lldiv@quotient+2,f
  7220  04E5  0DFC               	rlf	___lldiv@quotient+3,f
  7221  04E6  0B89               	decfsz	9,f
  7222  04E7  2CE2               	goto	u213_25
  7223  04E8  0873               	movf	___lldiv@divisor+3,w
  7224  04E9  0277               	subwf	___lldiv@dividend+3,w
  7225  04EA  1D03               	skipz
  7226  04EB  2CF6               	goto	u214_25
  7227  04EC  0872               	movf	___lldiv@divisor+2,w
  7228  04ED  0276               	subwf	___lldiv@dividend+2,w
  7229  04EE  1D03               	skipz
  7230  04EF  2CF6               	goto	u214_25
  7231  04F0  0871               	movf	___lldiv@divisor+1,w
  7232  04F1  0275               	subwf	___lldiv@dividend+1,w
  7233  04F2  1D03               	skipz
  7234  04F3  2CF6               	goto	u214_25
  7235  04F4  0870               	movf	___lldiv@divisor,w
  7236  04F5  0274               	subwf	___lldiv@dividend,w
  7237  04F6                     u214_25:	
  7238  04F6  1C03               	skipc
  7239  04F7  2D01               	goto	i1l2665
  7240  04F8  0870               	movf	___lldiv@divisor,w
  7241  04F9  02F4               	subwf	___lldiv@dividend,f
  7242  04FA  0871               	movf	___lldiv@divisor+1,w
  7243  04FB  3BF5               	subwfb	___lldiv@dividend+1,f
  7244  04FC  0872               	movf	___lldiv@divisor+2,w
  7245  04FD  3BF6               	subwfb	___lldiv@dividend+2,f
  7246  04FE  0873               	movf	___lldiv@divisor+3,w
  7247  04FF  3BF7               	subwfb	___lldiv@dividend+3,f
  7248  0500  1479               	bsf	___lldiv@quotient,0
  7249  0501                     i1l2665:	
  7250  0501  3001               	movlw	1
  7251  0502                     u215_25:	
  7252  0502  36F3               	lsrf	___lldiv@divisor+3,f
  7253  0503  0CF2               	rrf	___lldiv@divisor+2,f
  7254  0504  0CF1               	rrf	___lldiv@divisor+1,f
  7255  0505  0CF0               	rrf	___lldiv@divisor,f
  7256  0506  0B89               	decfsz	9,f
  7257  0507  2D02               	goto	u215_25
  7258  0508  3001               	movlw	1
  7259  0509  02FD               	subwf	___lldiv@counter,f
  7260  050A  1D03               	btfss	3,2
  7261  050B  2CE1               	goto	i1l2657
  7262  050C                     i1l2669:	
  7263  050C  087C               	movf	___lldiv@quotient+3,w
  7264  050D  00F3               	movwf	?___lldiv+3
  7265  050E  087B               	movf	___lldiv@quotient+2,w
  7266  050F  00F2               	movwf	?___lldiv+2
  7267  0510  087A               	movf	___lldiv@quotient+1,w
  7268  0511  00F1               	movwf	?___lldiv+1
  7269  0512  0879               	movf	___lldiv@quotient,w
  7270  0513  00F0               	movwf	?___lldiv
  7271  0514  0008               	return
  7272  0515                     __end_of___lldiv:	
  7273                           
  7274                           	psect	text40
  7275  0F15                     __ptext40:	
  7276 ;; *************** function _Timer1_Count200us *****************
  7277 ;; Defined at:
  7278 ;;		line 62 in file "Timer1.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;		None
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;		None
  7283 ;; Return value:  Size  Location     Type
  7284 ;;                  1    wreg      void 
  7285 ;; Registers used:
  7286 ;;		wreg
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7292 ;;      Params:         0       0       0       0       0       0
  7293 ;;      Locals:         0       0       0       0       0       0
  7294 ;;      Temps:          0       0       0       0       0       0
  7295 ;;      Totals:         0       0       0       0       0       0
  7296 ;;Total ram usage:        0 bytes
  7297 ;; Hardware stack levels used:    1
  7298 ;; This function calls:
  7299 ;;		Nothing
  7300 ;; This function is called by:
  7301 ;;		_Handler
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           
  7306                           ;psect for function _Timer1_Count200us
  7307  0F15                     _Timer1_Count200us:	
  7308                           
  7309                           ;Timer1.c: 64: tcnt.Delta_t++;
  7310                           
  7311                           ;incstack = 0
  7312                           ; Regs used in _Timer1_Count200us: [wreg]
  7313  0F15  3001               	movlw	1
  7314  0F16  0020               	movlb	0	; select bank0
  7315  0F17  07AE               	addwf	_tcnt,f
  7316  0F18  3000               	movlw	0
  7317  0F19  3DAF               	addwfc	_tcnt+1,f
  7318  0F1A  3000               	movlw	0
  7319  0F1B  3DB0               	addwfc	_tcnt+2,f
  7320  0F1C  3000               	movlw	0
  7321  0F1D  3DB1               	addwfc	_tcnt+3,f
  7322  0F1E  0008               	return
  7323  0F1F                     __end_of_Timer1_Count200us:	
  7324                           
  7325                           	psect	text41
  7326  0EFA                     __ptext41:	
  7327 ;; *************** function _I2C_CommonInterrupt *****************
  7328 ;; Defined at:
  7329 ;;		line 58 in file "I2C_Common.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;		None
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7343 ;;      Params:         0       0       0       0       0       0
  7344 ;;      Locals:         0       0       0       0       0       0
  7345 ;;      Temps:          0       0       0       0       0       0
  7346 ;;      Totals:         0       0       0       0       0       0
  7347 ;;Total ram usage:        0 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:    1
  7350 ;; This function calls:
  7351 ;;		_I2C1_Interrupt
  7352 ;;		_I2C2_Interrupt
  7353 ;; This function is called by:
  7354 ;;		_Handler
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           
  7359                           ;psect for function _I2C_CommonInterrupt
  7360  0EFA                     _I2C_CommonInterrupt:	
  7361                           
  7362                           ;I2C_Common.c: 60: I2C1_Interrupt();
  7363                           
  7364                           ;incstack = 0
  7365                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7366  0EFA  3184  246F  318E   	fcall	_I2C1_Interrupt
  7367                           
  7368                           ;I2C_Common.c: 61: I2C2_Interrupt();
  7369  0EFD  3184  241B         	fcall	_I2C2_Interrupt
  7370  0EFF  0008               	return
  7371  0F00                     __end_of_I2C_CommonInterrupt:	
  7372                           
  7373                           	psect	text42
  7374  041B                     __ptext42:	
  7375 ;; *************** function _I2C2_Interrupt *****************
  7376 ;; Defined at:
  7377 ;;		line 152 in file "I2C2.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;		None
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;		None
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      void 
  7384 ;; Registers used:
  7385 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7391 ;;      Params:         0       0       0       0       0       0
  7392 ;;      Locals:         0       0       0       0       0       0
  7393 ;;      Temps:          1       0       0       0       0       0
  7394 ;;      Totals:         1       0       0       0       0       0
  7395 ;;Total ram usage:        1 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; This function calls:
  7398 ;;		Nothing
  7399 ;; This function is called by:
  7400 ;;		_I2C_CommonInterrupt
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           
  7405                           ;psect for function _I2C2_Interrupt
  7406  041B                     _I2C2_Interrupt:	
  7407                           
  7408                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  7409                           
  7410                           ;incstack = 0
  7411                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7412  041B  0020               	movlb	0	; select bank0
  7413  041C  1C14               	btfss	20,0	;volatile
  7414  041D  2C67               	goto	i1l2577
  7415  041E  0021               	movlb	1	; select bank1
  7416  041F  1C14               	btfss	20,0	;volatile
  7417  0420  2C67               	goto	i1l2577
  7418                           
  7419                           ;I2C2.c: 155: {
  7420                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  7421  0421  0024               	movlb	4	; select bank4
  7422  0422  1E9C               	btfss	28,5	;volatile
  7423  0423  2C3E               	goto	i1l294
  7424                           
  7425                           ;I2C2.c: 157: {
  7426                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  7427  0424  1D1C               	btfss	28,2	;volatile
  7428  0425  2C31               	goto	i1l2553
  7429                           
  7430                           ;I2C2.c: 159: {
  7431                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  7432  0426  1B1E               	btfsc	30,6	;volatile
  7433  0427  2C65               	goto	i1l2575
  7434  0428                     i1l2545:	
  7435                           ;I2C2.c: 161: {
  7436                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7437                           
  7438  0428  081C               	movf	28,w	;volatile
  7439  0429  3901               	andlw	1
  7440  042A  00F0               	movwf	??_I2C2_Interrupt
  7441  042B  0E1D               	swapf	29,w	;volatile
  7442  042C  3901               	andlw	1
  7443  042D  0470               	iorwf	??_I2C2_Interrupt,w
  7444  042E  1D03               	btfss	3,2
  7445  042F  2C28               	goto	i1l2545
  7446  0430  2C51               	goto	L4
  7447  0431                     i1l2553:	
  7448                           ;I2C2.c: 166: }
  7449                           ;I2C2.c: 167: }
  7450                           
  7451                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  7452                           
  7453                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  7454                           
  7455                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  7456                           
  7457                           
  7458                           ;I2C2.c: 168: else
  7459                           ;I2C2.c: 169: {
  7460                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  7461  0431  0819               	movf	25,w	;volatile
  7462  0432  00F0               	movwf	??_I2C2_Interrupt
  7463  0433  0021               	movlb	1	; select bank1
  7464  0434  0831               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  7465  0435  0086               	movwf	6
  7466  0436  0187               	clrf	7
  7467  0437  0870               	movf	??_I2C2_Interrupt,w
  7468  0438  0081               	movwf	1
  7469                           
  7470                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  7471  0439  3001               	movlw	1
  7472  043A  00F0               	movwf	??_I2C2_Interrupt
  7473  043B  0870               	movf	??_I2C2_Interrupt,w
  7474  043C  07B1               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  7475  043D  2C63               	goto	i1l2573
  7476  043E                     i1l294:	
  7477                           ;I2C2.c: 173: }
  7478                           ;I2C2.c: 174: }
  7479                           
  7480                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  7481                           
  7482                           
  7483                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  7484  043E  1A9C               	btfsc	28,5	;volatile
  7485  043F  2C65               	goto	i1l2575
  7486                           
  7487                           ;I2C2.c: 176: {
  7488                           ;I2C2.c: 177: SSP2BUF;
  7489  0440  0819               	movf	25,w	;volatile
  7490                           
  7491                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  7492  0441  1D1C               	btfss	28,2	;volatile
  7493  0442  2C5E               	goto	i1l2571
  7494                           
  7495                           ;I2C2.c: 180: {
  7496                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  7497  0443  30A0               	movlw	(low (_I2C2_Config| 0))& (0+255)
  7498  0444  00F0               	movwf	??_I2C2_Interrupt
  7499  0445  0870               	movf	??_I2C2_Interrupt,w
  7500  0446  0021               	movlb	1	; select bank1
  7501  0447  00B0               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  7502  0448                     i1l2565:	
  7503                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7504                           
  7505  0448  0024               	movlb	4	; select bank4
  7506  0449  081C               	movf	28,w	;volatile
  7507  044A  3901               	andlw	1
  7508  044B  00F0               	movwf	??_I2C2_Interrupt
  7509  044C  0E1D               	swapf	29,w	;volatile
  7510  044D  3901               	andlw	1
  7511  044E  0470               	iorwf	??_I2C2_Interrupt,w
  7512  044F  1D03               	btfss	3,2
  7513  0450  2C48               	goto	i1l2565
  7514  0451                     L4:	
  7515                           
  7516                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  7517  0451  0021               	movlb	1	; select bank1
  7518  0452  0830               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  7519  0453  0086               	movwf	6
  7520  0454  0187               	clrf	7
  7521  0455  0801               	movf	1,w
  7522  0456  0024               	movlb	4	; select bank4
  7523  0457  0099               	movwf	25	;volatile
  7524                           
  7525                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  7526  0458  3001               	movlw	1
  7527  0459  00F0               	movwf	??_I2C2_Interrupt
  7528  045A  0870               	movf	??_I2C2_Interrupt,w
  7529  045B  0021               	movlb	1	; select bank1
  7530  045C  07B0               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  7531                           
  7532                           ;I2C2.c: 186: }
  7533  045D  2C63               	goto	i1l2573
  7534  045E                     i1l2571:	
  7535                           
  7536                           ;I2C2.c: 187: else
  7537                           ;I2C2.c: 188: {
  7538                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  7539  045E  30A8               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  7540  045F  00F0               	movwf	??_I2C2_Interrupt
  7541  0460  0870               	movf	??_I2C2_Interrupt,w
  7542  0461  0021               	movlb	1	; select bank1
  7543  0462  00B1               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  7544  0463                     i1l2573:	
  7545                           
  7546                           ;I2C2.c: 190: }
  7547                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  7548  0463  0024               	movlb	4	; select bank4
  7549  0464  161D               	bsf	29,4	;volatile
  7550  0465                     i1l2575:	
  7551                           
  7552                           ;I2C2.c: 192: }
  7553                           ;I2C2.c: 193: SSP2IF = 0;
  7554  0465  0020               	movlb	0	; select bank0
  7555  0466  1014               	bcf	20,0	;volatile
  7556  0467                     i1l2577:	
  7557                           
  7558                           ;I2C2.c: 194: }
  7559                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  7560  0467  0021               	movlb	1	; select bank1
  7561  0468  1C94               	btfss	20,1	;volatile
  7562  0469  0008               	return
  7563  046A  0020               	movlb	0	; select bank0
  7564  046B  1C94               	btfss	20,1	;volatile
  7565  046C  0008               	return
  7566                           
  7567                           ;I2C2.c: 197: BCL2IF = 0;
  7568  046D  1094               	bcf	20,1	;volatile
  7569  046E  0008               	return
  7570  046F                     __end_of_I2C2_Interrupt:	
  7571                           
  7572                           	psect	text43
  7573  046F                     __ptext43:	
  7574 ;; *************** function _I2C1_Interrupt *****************
  7575 ;; Defined at:
  7576 ;;		line 152 in file "I2C1.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;		None
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;		None
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  1    wreg      void 
  7583 ;; Registers used:
  7584 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7590 ;;      Params:         0       0       0       0       0       0
  7591 ;;      Locals:         0       0       0       0       0       0
  7592 ;;      Temps:          1       0       0       0       0       0
  7593 ;;      Totals:         1       0       0       0       0       0
  7594 ;;Total ram usage:        1 bytes
  7595 ;; Hardware stack levels used:    1
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_I2C_CommonInterrupt
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           
  7604                           ;psect for function _I2C1_Interrupt
  7605  046F                     _I2C1_Interrupt:	
  7606                           
  7607                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  7608                           
  7609                           ;incstack = 0
  7610                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7611  046F  0020               	movlb	0	; select bank0
  7612  0470  1D91               	btfss	17,3	;volatile
  7613  0471  2CBB               	goto	i1l2527
  7614  0472  0021               	movlb	1	; select bank1
  7615  0473  1D91               	btfss	17,3	;volatile
  7616  0474  2CBB               	goto	i1l2527
  7617                           
  7618                           ;I2C1.c: 155: {
  7619                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  7620  0475  0024               	movlb	4	; select bank4
  7621  0476  1E94               	btfss	20,5	;volatile
  7622  0477  2C92               	goto	i1l157
  7623                           
  7624                           ;I2C1.c: 157: {
  7625                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  7626  0478  1D14               	btfss	20,2	;volatile
  7627  0479  2C85               	goto	i1l2503
  7628                           
  7629                           ;I2C1.c: 159: {
  7630                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  7631  047A  1B16               	btfsc	22,6	;volatile
  7632  047B  2CB9               	goto	i1l2525
  7633  047C                     i1l2495:	
  7634                           ;I2C1.c: 161: {
  7635                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  7636                           
  7637  047C  0814               	movf	20,w	;volatile
  7638  047D  3901               	andlw	1
  7639  047E  00F0               	movwf	??_I2C1_Interrupt
  7640  047F  0E15               	swapf	21,w	;volatile
  7641  0480  3901               	andlw	1
  7642  0481  0470               	iorwf	??_I2C1_Interrupt,w
  7643  0482  1D03               	btfss	3,2
  7644  0483  2C7C               	goto	i1l2495
  7645  0484  2CA5               	goto	L5
  7646  0485                     i1l2503:	
  7647                           ;I2C1.c: 166: }
  7648                           ;I2C1.c: 167: }
  7649                           
  7650                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  7651                           
  7652                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  7653                           
  7654                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  7655                           
  7656                           
  7657                           ;I2C1.c: 168: else
  7658                           ;I2C1.c: 169: {
  7659                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  7660  0485  0811               	movf	17,w	;volatile
  7661  0486  00F0               	movwf	??_I2C1_Interrupt
  7662  0487  0021               	movlb	1	; select bank1
  7663  0488  0844               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  7664  0489  0086               	movwf	6
  7665  048A  0187               	clrf	7
  7666  048B  0870               	movf	??_I2C1_Interrupt,w
  7667  048C  0081               	movwf	1
  7668                           
  7669                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  7670  048D  3001               	movlw	1
  7671  048E  00F0               	movwf	??_I2C1_Interrupt
  7672  048F  0870               	movf	??_I2C1_Interrupt,w
  7673  0490  07C4               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  7674  0491  2CB7               	goto	i1l2523
  7675  0492                     i1l157:	
  7676                           ;I2C1.c: 173: }
  7677                           ;I2C1.c: 174: }
  7678                           
  7679                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  7680                           
  7681                           
  7682                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  7683  0492  1A94               	btfsc	20,5	;volatile
  7684  0493  2CB9               	goto	i1l2525
  7685                           
  7686                           ;I2C1.c: 176: {
  7687                           ;I2C1.c: 177: SSP1BUF;
  7688  0494  0811               	movf	17,w	;volatile
  7689                           
  7690                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  7691  0495  1D14               	btfss	20,2	;volatile
  7692  0496  2CB2               	goto	i1l2521
  7693                           
  7694                           ;I2C1.c: 180: {
  7695                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  7696  0497  30B3               	movlw	(low (_I2C1_Config| 0))& (0+255)
  7697  0498  00F0               	movwf	??_I2C1_Interrupt
  7698  0499  0870               	movf	??_I2C1_Interrupt,w
  7699  049A  0021               	movlb	1	; select bank1
  7700  049B  00C3               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  7701  049C                     i1l2515:	
  7702                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  7703                           
  7704  049C  0024               	movlb	4	; select bank4
  7705  049D  0814               	movf	20,w	;volatile
  7706  049E  3901               	andlw	1
  7707  049F  00F0               	movwf	??_I2C1_Interrupt
  7708  04A0  0E15               	swapf	21,w	;volatile
  7709  04A1  3901               	andlw	1
  7710  04A2  0470               	iorwf	??_I2C1_Interrupt,w
  7711  04A3  1D03               	btfss	3,2
  7712  04A4  2C9C               	goto	i1l2515
  7713  04A5                     L5:	
  7714                           
  7715                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  7716  04A5  0021               	movlb	1	; select bank1
  7717  04A6  0843               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  7718  04A7  0086               	movwf	6
  7719  04A8  0187               	clrf	7
  7720  04A9  0801               	movf	1,w
  7721  04AA  0024               	movlb	4	; select bank4
  7722  04AB  0091               	movwf	17	;volatile
  7723                           
  7724                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  7725  04AC  3001               	movlw	1
  7726  04AD  00F0               	movwf	??_I2C1_Interrupt
  7727  04AE  0870               	movf	??_I2C1_Interrupt,w
  7728  04AF  0021               	movlb	1	; select bank1
  7729  04B0  07C3               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  7730                           
  7731                           ;I2C1.c: 186: }
  7732  04B1  2CB7               	goto	i1l2523
  7733  04B2                     i1l2521:	
  7734                           
  7735                           ;I2C1.c: 187: else
  7736                           ;I2C1.c: 188: {
  7737                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  7738  04B2  30BB               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  7739  04B3  00F0               	movwf	??_I2C1_Interrupt
  7740  04B4  0870               	movf	??_I2C1_Interrupt,w
  7741  04B5  0021               	movlb	1	; select bank1
  7742  04B6  00C4               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  7743  04B7                     i1l2523:	
  7744                           
  7745                           ;I2C1.c: 190: }
  7746                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  7747  04B7  0024               	movlb	4	; select bank4
  7748  04B8  1615               	bsf	21,4	;volatile
  7749  04B9                     i1l2525:	
  7750                           
  7751                           ;I2C1.c: 192: }
  7752                           ;I2C1.c: 193: SSP1IF = 0;
  7753  04B9  0020               	movlb	0	; select bank0
  7754  04BA  1191               	bcf	17,3	;volatile
  7755  04BB                     i1l2527:	
  7756                           
  7757                           ;I2C1.c: 194: }
  7758                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  7759  04BB  0021               	movlb	1	; select bank1
  7760  04BC  1D92               	btfss	18,3	;volatile
  7761  04BD  0008               	return
  7762  04BE  0020               	movlb	0	; select bank0
  7763  04BF  1D92               	btfss	18,3	;volatile
  7764  04C0  0008               	return
  7765                           
  7766                           ;I2C1.c: 197: BCL1IF = 0;
  7767  04C1  1192               	bcf	18,3	;volatile
  7768  04C2  0008               	return
  7769  04C3                     __end_of_I2C1_Interrupt:	
  7770                           
  7771                           	psect	text44
  7772  0FEA                     __ptext44:	
  7773 ;; *************** function _Buzzer_Count1ms *****************
  7774 ;; Defined at:
  7775 ;;		line 44 in file "Buzzer.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;		None
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;		None
  7780 ;; Return value:  Size  Location     Type
  7781 ;;                  1    wreg      void 
  7782 ;; Registers used:
  7783 ;;		wreg, status,2, status,0, pclath, cstack
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7789 ;;      Params:         0       0       0       0       0       0
  7790 ;;      Locals:         0       0       0       0       0       0
  7791 ;;      Temps:          0       0       0       0       0       0
  7792 ;;      Totals:         0       0       0       0       0       0
  7793 ;;Total ram usage:        0 bytes
  7794 ;; Hardware stack levels used:    1
  7795 ;; Hardware stack levels required when called:    1
  7796 ;; This function calls:
  7797 ;;		_Buzzer_SetDuty
  7798 ;; This function is called by:
  7799 ;;		_Handler
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           
  7804                           ;psect for function _Buzzer_Count1ms
  7805  0FEA                     _Buzzer_Count1ms:	
  7806                           
  7807                           ;Buzzer.c: 46: if(count>0)
  7808                           
  7809                           ;incstack = 0
  7810                           ; Regs used in _Buzzer_Count1ms: [wreg+status,2+status,0+pclath+cstack]
  7811  0FEA  0020               	movlb	0	; select bank0
  7812  0FEB  0841               	movf	_count,w
  7813  0FEC  0442               	iorwf	_count+1,w
  7814  0FED  1903               	btfsc	3,2
  7815  0FEE  2FFA               	goto	i1l2747
  7816                           
  7817                           ;Buzzer.c: 47: {
  7818                           ;Buzzer.c: 48: count--;
  7819  0FEF  3001               	movlw	1
  7820  0FF0  02C1               	subwf	_count,f
  7821  0FF1  3000               	movlw	0
  7822  0FF2  3BC2               	subwfb	_count+1,f
  7823                           
  7824                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  7825  0FF3  30FF               	movlw	255
  7826  0FF4  00F0               	movwf	Buzzer_SetDuty@duty
  7827  0FF5  3001               	movlw	1
  7828  0FF6  00F1               	movwf	Buzzer_SetDuty@duty+1
  7829  0FF7  3187  27D8         	fcall	_Buzzer_SetDuty
  7830                           
  7831                           ;Buzzer.c: 50: }
  7832  0FF9  0008               	return
  7833  0FFA                     i1l2747:	
  7834                           
  7835                           ;Buzzer.c: 51: else
  7836                           ;Buzzer.c: 52: {
  7837                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  7838  0FFA  3000               	movlw	0
  7839  0FFB  00F0               	movwf	Buzzer_SetDuty@duty
  7840  0FFC  00F1               	movwf	Buzzer_SetDuty@duty+1
  7841  0FFD  3187  27D8         	fcall	_Buzzer_SetDuty
  7842  0FFF  0008               	return
  7843  1000                     __end_of_Buzzer_Count1ms:	
  7844                           
  7845                           	psect	text45
  7846  07D8                     __ptext45:	
  7847 ;; *************** function _Buzzer_SetDuty *****************
  7848 ;; Defined at:
  7849 ;;		line 31 in file "Buzzer.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  duty            2    0[COMMON] unsigned int 
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  1    wreg      void 
  7856 ;; Registers used:
  7857 ;;		wreg, status,2, status,0
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7863 ;;      Params:         2       0       0       0       0       0
  7864 ;;      Locals:         1       0       0       0       0       0
  7865 ;;      Temps:          2       0       0       0       0       0
  7866 ;;      Totals:         5       0       0       0       0       0
  7867 ;;Total ram usage:        5 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; This function calls:
  7870 ;;		Nothing
  7871 ;; This function is called by:
  7872 ;;		_Buzzer_Count1ms
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           
  7877                           ;psect for function _Buzzer_SetDuty
  7878  07D8                     _Buzzer_SetDuty:	
  7879                           
  7880                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  7881                           
  7882                           ;incstack = 0
  7883                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  7884  07D8  0025               	movlb	5	; select bank5
  7885  07D9  081A               	movf	26,w	;volatile
  7886  07DA  39CF               	andlw	207
  7887  07DB  00F2               	movwf	??_Buzzer_SetDuty
  7888  07DC  0872               	movf	??_Buzzer_SetDuty,w
  7889  07DD  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  7890                           
  7891                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  7892  07DE  0871               	movf	Buzzer_SetDuty@duty+1,w
  7893  07DF  00F3               	movwf	??_Buzzer_SetDuty+1
  7894  07E0  0870               	movf	Buzzer_SetDuty@duty,w
  7895  07E1  00F2               	movwf	??_Buzzer_SetDuty
  7896  07E2  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  7897  07E3  0CF2               	rrf	??_Buzzer_SetDuty,f
  7898  07E4  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  7899  07E5  0CF2               	rrf	??_Buzzer_SetDuty,f
  7900  07E6  0872               	movf	??_Buzzer_SetDuty,w
  7901  07E7  0098               	movwf	24	;volatile
  7902                           
  7903                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  7904  07E8  0870               	movf	Buzzer_SetDuty@duty,w
  7905  07E9  3903               	andlw	3
  7906  07EA  00F2               	movwf	??_Buzzer_SetDuty
  7907  07EB  3003               	movlw	3
  7908  07EC                     u180_25:	
  7909  07EC  35F2               	lslf	??_Buzzer_SetDuty,f
  7910  07ED  3EFF               	addlw	-1
  7911  07EE  1D03               	skipz
  7912  07EF  2FEC               	goto	u180_25
  7913  07F0  3572               	lslf	??_Buzzer_SetDuty,w
  7914  07F1  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  7915  07F2  009A               	movwf	26	;volatile
  7916  07F3  0008               	return
  7917  07F4                     __end_of_Buzzer_SetDuty:	
  7918  007E                     btemp	set	126	;btemp
  7919  007E                     int$flags	set	126
  7920  007E                     wtemp0	set	126


Data Sizes:
    Strings     39
    Constant    10
    Data        0
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      75
    BANK1            80      0      38
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S46$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S46$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Timer1_DetectAssignCount->___lldiv
    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Count1ms->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_LCD_WriteData
    ___lwmod->___lwdiv
    _mTouch_Init->_mTouch_PortInit
    _mTouch_Check->_Buzzer_MiliSecond
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4490
                                             35 BANK0      1     1      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                     _LCD_CursorHome
                           _LCD_Init
                      _Timer1_GetCPM
                 _Timer1_GetCountSum
                        _Timer1_Init
                  _Timer1_StartCount
                        _Timer4_Init
                        _Timer6_Init
                       _mTouch_Check
                        _mTouch_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              28    20      8    1755
                                             15 BANK0     20    12      8
                      _Timer1_GetCPM (ARG)
                 _Timer1_GetCountSum (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     110
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              1 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              1 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              9 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              1 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              2 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _mTouch_Check                                         6     6      0     196
                                              3 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2      86
                                              1 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StartCount                                    0     0      0       0
                 _Timer1_ClearRecord
 ---------------------------------------------------------------------------------
 (2) _Timer1_ClearRecord                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                              1 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        2     0      2       0
                                              1 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              5 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0      88
                                              1 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    2275
                                             17 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1453
                                              9 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     446
                                              1 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     445
                                              1 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3     822
                                              6 BANK0      6     3      3
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     238
                                              2 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     238
                                              2 BANK0      4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              1     1      0     613
                                              0 BANK0      1     1      0
                    _Buzzer_Count1ms
                _I2C_CommonInterrupt
                  _Timer1_Count200us
           _Timer1_DetectAssignCount
                   _Timer4_CheckFlag
                   _Timer6_CheckFlag
           _mTouch_IntervalDecrement
                        _mTouch_Read
 ---------------------------------------------------------------------------------
 (6) _mTouch_Read                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer6_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer4_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_DetectAssignCount                             0     0      0     418
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             14     6      8     418
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (6) _Timer1_Count200us                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Buzzer_Count1ms                                      0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (7) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
   _Timer1_GetCountSum
   _Timer1_Init
   _Timer1_StartCount
     _Timer1_ClearRecord
   _Timer4_Init
   _Timer6_Init
   _mTouch_Check
     _Buzzer_MiliSecond
   _mTouch_Init
     _mTouch_PortInit
   _printf
     _Timer1_GetCPM (ARG)
     _Timer1_GetCountSum (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Count1ms
     _Buzzer_SetDuty
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Count200us
   _Timer1_DetectAssignCount
     ___lldiv
   _Timer4_CheckFlag
   _Timer6_CheckFlag
   _mTouch_IntervalDecrement
   _mTouch_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      7F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     24      4B       6       93.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      26       8       47.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      7F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May 23 12:34:30 2017

                        _LCD_CursorHome 0F82                             __CFG_CP$OFF 0000  
                                    l74 05A9                                      l91 02AC  
                                    l78 05DA                          I2C2_Transmit@i 004D  
                 ??_I2C_CommonInterrupt 0071                     ___wmul@multiplicand 004A  
                                   l100 02D5                                     l211 0565  
                                   l109 02F2                                     l215 0596  
                                   l228 017D                                     l237 01A6  
                                   l246 01C3                                     l338 0703  
                                   l705 015B                                     l830 07C5  
                                   _GIE 005F                                     _PR2 001B  
                                   _PR4 0416                         _Buzzer_Count1ms 0FEA  
                          __CFG_CPD$OFF 0000                                     _PR6 041D  
                          __CFG_BORV$LO 0000                                     wreg 0009  
                            _Basic_Init 0FB3                            __CFG_LVP$OFF 0000  
            ??_Timer1_DetectAssignCount 007E                                    l3101 0557  
                                  l2311 05D1                                    l3111 0067  
                                  l2401 0160                                    l2307 05CF  
                                  l2315 028F                                    l2403 016E  
                                  l3131 00C2                                    l2341 02E3  
                                  l2317 029D                                    l2413 0191  
                                  l3141 00D3                                    l3125 00A7  
                                  l3117 0078                                    l2351 02F8  
                                  l2327 02C0                                    l2423 0189  
                                  l3151 010E                                    l2353 030F  
                                  l2361 0320                                    l2337 02B8  
                                  l2441 01E5                                    l2425 018D  
                                  l2601 06D2                                    l3153 0111  
                                  l3129 00AD                                    l2355 0314  
                                  l2339 02BC                                    l2427 01B4  
                                  l2603 06DA                                    l3155 0115  
                                  l3147 00F2                                    l3251 0360  
                                  l2381 057A                                    l2437 01C9  
                                  l2445 01E8                                    l3165 0126  
                                  l3253 0364                                    l3245 0353  
                                  l2295 05BE                                    l2383 057C  
                                  l2375 056F                                    l2359 0317  
                                  l2439 01E0                                    l2447 01F1  
                                  l2631 0F80                                    l3159 0122  
                                  l3167 004B                                    l3255 0381  
                                  l3263 039C                                    l3239 0342  
                                  l2297 05C0                                    l2289 05B3  
                                  l2393 058B                                    l3089 051D  
                                  l2713 06A3                                    l3257 038A  
                                  l2707 068B                                    l3259 0393  
                                  l2397 058D                                    l2709 0697  
                                  l2717 06AC                                    l2637 07BF  
                                  l2591 06FA                                    l2585 06DF  
                                  l2587 06EC                                    l2595 06B4  
                                  l2691 0645                                    l2683 0627  
                                  l2597 06C1                                    l2685 0633  
                                  l2695 064E                                    STR_1 0672  
                                  STR_2 065D                                    STR_3 067C  
                                  STR_4 0668                                    u2205 0634  
                                  u2215 063E                                    u2225 0646  
                                  u2075 07C6                                    u2085 07CB  
                                  u2255 068E                                    u2185 062A  
                                  u2275 069D                                    u2285 06A4  
                                  u2715 00E8                                    u2655 053D  
                                  u2735 0101                                    u1795 05EB  
                                  _PEIE 005E                                    u2937 03B5  
                                  u2947 03CE                                    u2957 03E3  
                                  u2967 03F8                                    u2977 0F9C  
                                  u2987 0F8C                                    u2997 05E4  
                 Buzzer_MiliSecond@time 0048                                    _TMR0 0015  
                                  _TMR1 0016                                    _TMR2 001A  
                                  _TMR4 0415                                    _TMR6 041C  
                                  _WPUB 020D                         ??_I2C1_Transmit 004A  
                          __CFG_WRT$OFF 0000                                    _cnts 0020  
                                  _main 0323                                    _mode 003D  
                      __end_of_I2C_Init 0706                                    _tcnt 002E  
                                  fsr0h 0005                                    fsr1h 0007  
                                  indf0 0000                                    fsr0l 0004  
                                  indf1 0001                                    fsr1l 0006  
                                  btemp 007E                           __CFG_BOREN$ON 0000  
                       ??_I2C2_Transmit 004A                        ??_I2C1_Interrupt 0070  
                                  start 0031                           __CFG_IESO$OFF 0000  
                       __end_of_Handler 0031                  __end_of_LCD_CursorHome 0F92  
                         _LCD_WriteData 05E1                           __CFG_MCLRE$ON 0000  
                      ??_I2C2_Interrupt 0070                __end_of_LCD_DisplayClear 0FA2  
                 __size_of_I2C_Transmit 002B                        __end_of_LCD_Init 041B  
                         __CFG_PLLEN$ON 0000                                   ?_main 0070  
                         __CFG_WDTE$OFF 0000                         __end_of___lldiv 0515  
                                 _T1CON 0018                                   _T2CON 001C  
                                 _LATA3 0863                                   _LATA4 0864  
                                 _LATA6 0866                                   _T4CON 0417  
                                 _T6CON 041E                         __end_of___lwdiv 0653  
           __size_of_Timer1_ClearRecord 0028                                   i1l157 0492  
                       __end_of___lwmod 06B1                                   i1l294 043E  
                                 i1l640 0FAD                                   i1l635 002A  
                                 i1l468 0211                                   i1l639 0FA8  
                                 _PORTA 000C                                   _PORTB 000D  
                                 _TRISA 008C                                   _TRISB 008D  
                     I2C2_Transmit@size 0049                           __CFG_PWRTE$ON 0000  
                        __CFG_FCMEN$OFF 0000                         __end_of_dpowers 065D  
                                 _count 0041                         __end_of_isdigit 0F82  
                                 _putch 0F0C                           ??_Buzzer_Init 0048  
                 __end_of_Timer1_GetCPM 0F06             __size_of_Timer1_GetCountSum 000A  
                                 status 0003                                   wtemp0 007E  
                     _Buzzer_MiliSecond 0F29                            _I2C_Transmit 06B1  
                        ?_LCD_WriteData 0070                      ?_Buzzer_MiliSecond 0048  
                      ??_DAC_Initialize 0058                         ?_LCD_CursorHome 0070  
                       __initialization 0033                            __end_of_main 03AC  
               __end_of_Buzzer_Count1ms 1000                     ??_Buzzer_MiliSecond 004A  
                                ??_main 006A                    __end_of_mTouch_Check 0559  
                           ?_Basic_Init 0070                                  _BCL1IE 0493  
                                _BCL1IF 0093                                  _BCL2IE 04A1  
                                _BCL2IF 00A1                    __size_of_mTouch_Init 0013  
                  __size_of_mTouch_Read 0025                                  _CCPR2L 0298  
                                _ANSELA 018C                                  ?_putch 0070  
                                _ANSELB 018D                                  _T1GCON 0019  
                                i1l2133 07FD                                  i1l2503 0485  
                                i1l2521 04B2                                  i1l2523 04B7  
                                i1l2515 049C                                  i1l2525 04B9  
                                i1l2527 04BB                                  i1l2545 0428  
                                i1l2553 0431                                  i1l3273 001B  
                                i1l2571 045E                                  i1l2573 0463  
                                i1l2565 0448                                  i1l3269 0012  
                                i1l2495 047C                                  i1l2575 0465  
                                i1l2655 04D3                                  i1l2577 0467  
                                i1l2665 0501                                  i1l2657 04E1  
                                i1l1961 0F3C                                  i1l2747 0FFA  
                    I2C2_Transmit@i_316 004E                                  u211_25 04D6  
                                i1l2669 050C                                  i1l2955 0201  
                                i1l2965 0248                         _mTouch_Interval 0034  
                                u213_25 04E2                                  i1l2989 028A  
                                u214_25 04F6                                  u215_25 0502  
             __end_of_Buzzer_MiliSecond 0F33                                  u180_25 07EC  
                                u258_25 0207                                  _OSCCON 0099  
                    I2C2_Transmit@pData 0048                                  _TMR1IE 0488  
                                _TMR1IF 0088                               ??_Handler 0047  
                                _TMR4IE 0499                                  _TMR4IF 0099  
                                _TMR6IE 049B                                  _TMR1ON 00C0  
                                _TMR6IF 009B                                  _SSP1IE 048B  
                                _SSP1IF 008B                                  _SSP2IE 04A0  
                                _SSP2IF 00A0                _mTouch_IntervalDecrement 0FA2  
                       _mTouch_PortInit 0F58                           ??_Timer1_Init 0048  
                         ??_Timer4_Init 0048                     __end_of_Buzzer_Init 0756  
                         ??_Timer6_Init 0048                                  ___wmul 07BC  
                             ??___lldiv 0078                               ??___lwdiv 004C  
                             ??___lwmod 0054                                  _printf 0046  
                     ?_Timer4_CheckFlag 0070                        I2C_Transmit@I2Cx 0056  
                             ??_isdigit 0048                               ?_I2C_Init 004D  
                    ??_Timer4_CheckFlag 0070                                  putch@c 004B  
                      I2C_Transmit@size 0052                 __end_of__initialization 0042  
                             ?_LCD_Init 0070                         ??_LCD_WriteData 0048  
                     ?_Timer6_CheckFlag 0070                              _VoltageReg 0044  
                    ??_Timer6_CheckFlag 0070                      Buzzer_SetDuty@duty 0070  
                        __pcstackCOMMON 0070                     __size_of_Basic_Init 0011  
                      ?_Buzzer_Count1ms 0070                           __end_of_putch 0F15  
                   __end_of_Timer1_Init 079C                     __end_of_Timer4_Init 0F73  
                   __end_of_Timer6_Init 0FD7               Buzzer_SetDuty@CCP2CON_Pre 0074  
                            ??_I2C_Init 0050                     I2C1_Transmit@result 004F  
                               ??_putch 004B                 __end_of_mTouch_PortInit 0F65  
                            __pbssBANK0 0020                              __pbssBANK1 00A0  
            __size_of_Buzzer_MiliSecond 000A                             _Buzzer_Init 072E  
                            ??_LCD_Init 004C                 __size_of_Buzzer_SetDuty 001C  
                          I2C_Init@I2Cx 0052             __end_of_I2C_CommonInterrupt 0F00  
                          I2C_Init@mode 004E                              __pmaintext 0323  
                               ?___wmul 0048                              __pintentry 0004  
                 __size_of_mTouch_Check 0044                                 _CCP2CON 029A  
                     ?_LCD_DisplayClear 0070                                 _APFCON0 011D  
                               _APFCON1 011E                                 _CCPTMRS 029E  
                               ?_printf 0056                      ??_LCD_DisplayClear 004B  
                               _CPSCON0 001E                                 _CPSCON1 001F  
                               _SSP1ADD 0212                                 _SSP2ADD 021A  
                               _SSP1BUF 0211                                 _SSP2BUF 0219  
                               _SSP1MSK 0213                                 _SSP2MSK 021B  
                   I2C2_Transmit@result 004F                        ??_LCD_CursorHome 004B  
                               _Handler 0004                   __end_of_I2C1_Transmit 0323  
                    mTouch_Read@channel 0043                            _mTouch_Check 0515  
                     _Timer1_Count200us 0F15                   __end_of_I2C2_Transmit 01F4  
                           _Timer1_Init 077B                             _Timer4_Init 0F65  
                           _Timer6_Init 0FC4                      ?_Timer1_Count200us 0070  
     __size_of_Timer1_DetectAssignCount 0098               ?_Timer1_DetectAssignCount 0070  
                               ___lldiv 04C3                         __size_of___wmul 001C  
                               ___lwdiv 061E                                 ___lwmod 0684  
                       __CFG_STVREN$OFF 0000              __end_of_Timer1_ClearRecord 072E  
                               __ptext1 0046                                 __ptext2 0F0C  
                               __ptext3 0F73                                 __ptext4 07BC  
                               __ptext5 0684                                 __ptext6 061E  
                               __ptext7 0FD7                                 __ptext8 0F58  
                               __ptext9 0515                     ??_Timer1_Count200us 0070  
                       __size_of_printf 0116                                 _dpowers 0653  
                               _isdigit 0F73                            ??_Basic_Init 0048  
            ??_mTouch_IntervalDecrement 0070                                 clrloop0 0F07  
            __end_of_Timer1_GetCountSum 0F29                    end_of_initialization 0042  
                      ?_mTouch_PortInit 0070                           ?_I2C1_PinInit 0070  
             __end_of_Timer1_Count200us 0F1F                           ?_I2C2_PinInit 0070  
                           _I2C1_Config 00B3                             _I2C2_Config 00A0  
                         ?_I2C1_Setting 0049                         ___lldiv@divisor 0070  
                         ?_I2C2_Setting 0049                         ___lldiv@counter 007D  
                     I2C_Transmit@pData 0051                                 printf@c 0069  
                               printf@f 0056                      __end_of_Basic_Init 0FC4  
                          __pstringtext 0653                 __size_of_I2C1_Interrupt 0054  
                __size_of_Timer1_GetCPM 0006                        __CFG_FOSC$INTOSC 0000  
                         ??_mTouch_Init 0049                           ??_mTouch_Read 0070  
               __size_of_I2C2_Interrupt 0054                       __size_of_I2C_Init 002A  
                   I2C1_Setting@address 004C                          ??_I2C1_PinInit 0048  
             __size_of_Timer4_CheckFlag 000B                          ??_I2C2_PinInit 0048  
                        _Buzzer_SetDuty 07D8                          ??_I2C1_Setting 004B  
                           printf@width 0067                          ??_I2C2_Setting 004B  
                     __size_of_LCD_Init 006F                       _Timer1_StartCount 0EF5  
                    ?_Timer1_StartCount 0070                          __end_of___wmul 07D8  
                             _ConfigReg 0046               __size_of_Timer6_CheckFlag 000B  
                   ??_Timer1_StartCount 0048                 __size_of_DAC_Initialize 0020  
                        __end_of_printf 015C                     start_initialization 0033  
                  I2C1_Transmit@address 004C                  __end_of_Buzzer_SetDuty 07F4  
                          ?_Buzzer_Init 0070                     __end_of_mTouch_Init 0FEA  
                   __end_of_mTouch_Read 077B                           _Timer1_GetCPM 0F00  
                   I2C2_Setting@address 004C              __size_of_Timer1_Count200us 000A  
             __end_of_Timer1_StartCount 0EFA                   __end_of_LCD_WriteData 061E  
                              ??___wmul 004C                                ??_printf 005E  
                     I2C1_Setting@Speed 004A                __size_of_Buzzer_Count1ms 0016  
                             ___latbits 0001                           __pcstackBANK0 0047  
      __end_of_mTouch_IntervalDecrement 0FB3                      I2C1_Transmit@i_172 004E  
                    I2C1_Transmit@pData 0048               __size_of_LCD_DisplayClear 0010  
                       ?_Buzzer_SetDuty 0070                          ?_Timer1_GetCPM 0048  
      __end_of_Timer1_DetectAssignCount 028C                         I2C_Init@address 004D  
                              ?_Handler 0070                           ?_I2C_Transmit 0050  
                         I2C_Init@Speed 004F                            ?_Timer1_Init 0070  
                      ___lwdiv@dividend 004A                            ?_Timer4_Init 0070  
                          ?_Timer6_Init 0070                                ?___lldiv 0070  
                              ?___lwdiv 0048                                ?___lwmod 0050  
                        _I2C1_Interrupt 046F                    __end_of_I2C1_PinInit 0F4B  
          __size_of_I2C_CommonInterrupt 0006                    __end_of_I2C2_PinInit 0F58  
                  __end_of_I2C1_Setting 05E1  Timer1_DetectAssignCount@PreviousTimer1 003F  
                              ?_isdigit 0070                                _I2C_Init 06DC  
                  __end_of_I2C2_Setting 059D                          _I2C2_Interrupt 041B  
                           _mTouch_Init 0FD7                             _mTouch_Read 0756  
                      ___lwdiv@quotient 004D                      _Timer1_ClearRecord 0706  
                        __size_of_putch 0009                        _Timer4_CheckFlag 0F33  
                              _LCD_Init 03AC                          ___wmul@product 004C  
                              _CPS_Data 0037                          ??_I2C_Transmit 0053  
                   ?_Timer1_ClearRecord 0070              __size_of_Timer1_StartCount 0005  
                             clear_ram0 0F06                      _Timer1_GetCountSum 0F1F  
                __end_of_I2C1_Interrupt 04C3                                _SSP1CON1 0215  
                              _SSP1CON2 0216                    I2C2_Transmit@address 004C  
                              _SSP2CON1 021D                                _SSP2CON2 021E  
                              _SSP1STAT 0214                                _SSP2STAT 021C  
                   ?_Timer1_GetCountSum 0048                        _Timer6_CheckFlag 07F4  
                     ___wmul@multiplier 0048                        mTouch_Check@chan 004F  
                        _DAC_Initialize 079C                    ??_Timer1_ClearRecord 0048  
                __end_of_I2C2_Interrupt 046F                              printf@flag 0062  
                            printf@prec 0066                  __size_of_I2C1_Transmit 0097  
                __size_of_I2C2_Transmit 0098                         ??_Timer1_GetCPM 004A  
                           _CPS_PreData 003A                       ??_Buzzer_Count1ms 0075  
                  ??_Timer1_GetCountSum 004C                        __size_of_Handler 002D  
                  __size_of_Buzzer_Init 0028                _Timer1_DetectAssignCount 01F4  
              __size_of_mTouch_PortInit 000D       __size_of_mTouch_IntervalDecrement 0011  
             ?_mTouch_IntervalDecrement 0070                         ?_I2C1_Interrupt 0070  
               __size_of_LCD_CursorHome 0010                  __end_of_DAC_Initialize 07BC  
                      __size_of___lldiv 0052                        __size_of___lwdiv 0035  
                      I2C1_Setting@mode 0049                        __size_of___lwmod 002D  
                    LCD_WriteData@point 004A                             _isdigit$891 0048  
                       ?_I2C2_Interrupt 0070                       I2C1_Transmit@size 0049  
                      __size_of_isdigit 000F                         ___lwdiv@divisor 0048  
                       ___lwdiv@counter 004F                                __ptext10 0F29  
                              __ptext11 0FC4                                __ptext20 0F82  
                              __ptext12 0F65                                __ptext21 05E1  
                              __ptext13 0EF5                                __ptext30 0F3E  
                              __ptext22 079C                                __ptext14 0706  
                              __ptext31 072E                                __ptext23 06B1  
                              __ptext15 077B                                __ptext40 0F15  
                              __ptext32 0FB3                                __ptext24 015C  
                              __ptext16 0F1F                                __ptext41 0EFA  
                              __ptext25 028C                                __ptext17 0F00  
                              __ptext42 041B                                __ptext34 0756  
                              __ptext26 06DC                                __ptext18 03AC  
                              __ptext43 046F                                __ptext35 0FA2  
                              __ptext27 0559                                __ptext19 0F92  
                              __ptext44 0FEA                                __ptext36 07F4  
                              __ptext28 0F4B                                __ptext45 07D8  
                              __ptext37 0F33                                __ptext29 059D  
                              __ptext38 01F4                                __ptext39 04C3  
                          _SSP1CON1bits 0215                            _SSP1CON2bits 0216  
                      _LCD_DisplayClear 0F92                            _SSP2CON1bits 021D  
                          _SSP2CON2bits 021E                           __size_of_main 0089  
                         _I2C1_Transmit 028C                           _I2C2_Transmit 015C  
                 __size_of_I2C1_PinInit 000D                    __size_of_Timer1_Init 0021  
                              int$flags 007E                   __size_of_I2C2_PinInit 000D  
                  __size_of_Timer4_Init 000E                     I2C_Transmit@address 0050  
                  __size_of_Timer6_Init 0013                   __size_of_I2C1_Setting 0044  
                       ?_DAC_Initialize 0070                               printf@val 0064  
                          _SSP1STATbits 0214                   __size_of_I2C2_Setting 0044  
                          _SSP2STATbits 021C                    __end_of_I2C_Transmit 06DC  
                     I2C2_Setting@Speed 004A                        ??_Buzzer_SetDuty 0072  
                              isdigit@c 0049                                intlevel1 0000  
                      ___lwmod@dividend 0052                     _I2C_CommonInterrupt 0EFA  
                          _I2C1_PinInit 0F3E                        ___lldiv@dividend 0074  
                        ?_I2C1_Transmit 0048                       __CFG_CLKOUTEN$OFF 0000  
                          _I2C2_PinInit 0F4B                           ?_mTouch_Check 0070  
                          _I2C1_Setting 059D                          ?_I2C2_Transmit 0048  
                          _I2C2_Setting 0559                                printf@ap 0063  
                    I2C_Transmit@result 0057                       ??_mTouch_PortInit 0048  
                      I2C2_Setting@mode 0049                    ?_I2C_CommonInterrupt 0070  
              __end_of_Timer4_CheckFlag 0F3E                              _OPTION_REG 0095  
                      ___lldiv@quotient 0079                         ___lwmod@divisor 0050  
                       ___lwmod@counter 0055                            ?_mTouch_Init 0070  
                          ?_mTouch_Read 0070                  __size_of_LCD_WriteData 003D  
                        I2C1_Transmit@i 004D                __end_of_Timer6_CheckFlag 07FF  
                        ??_mTouch_Check 004A  
