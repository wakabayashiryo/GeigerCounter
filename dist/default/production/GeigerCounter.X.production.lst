

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Mar 25 02:36:26 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.41
    45                           ; Generated 25/01/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F1827 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0113                     	;# 
   129  0114                     	;# 
   130  0115                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0118                     	;# 
   134  0119                     	;# 
   135  011A                     	;# 
   136  011B                     	;# 
   137  011D                     	;# 
   138  011E                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019C                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019F                     	;# 
   161  020C                     	;# 
   162  020D                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  0219                     	;# 
   179  021A                     	;# 
   180  021B                     	;# 
   181  021C                     	;# 
   182  021D                     	;# 
   183  021E                     	;# 
   184  021F                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0294                     	;# 
   190  0295                     	;# 
   191  0295                     	;# 
   192  0296                     	;# 
   193  0298                     	;# 
   194  0298                     	;# 
   195  0299                     	;# 
   196  029A                     	;# 
   197  029B                     	;# 
   198  029C                     	;# 
   199  029C                     	;# 
   200  029D                     	;# 
   201  029E                     	;# 
   202  029E                     	;# 
   203  0311                     	;# 
   204  0311                     	;# 
   205  0312                     	;# 
   206  0313                     	;# 
   207  0318                     	;# 
   208  0318                     	;# 
   209  0319                     	;# 
   210  031A                     	;# 
   211  0394                     	;# 
   212  0395                     	;# 
   213  0396                     	;# 
   214  039A                     	;# 
   215  039C                     	;# 
   216  039D                     	;# 
   217  039E                     	;# 
   218  039F                     	;# 
   219  0415                     	;# 
   220  0416                     	;# 
   221  0417                     	;# 
   222  041C                     	;# 
   223  041D                     	;# 
   224  041E                     	;# 
   225  0FE4                     	;# 
   226  0FE5                     	;# 
   227  0FE6                     	;# 
   228  0FE7                     	;# 
   229  0FE8                     	;# 
   230  0FE9                     	;# 
   231  0FEA                     	;# 
   232  0FEB                     	;# 
   233  0FED                     	;# 
   234  0FEE                     	;# 
   235  0FEF                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  0111                     	;# 
   285  0112                     	;# 
   286  0113                     	;# 
   287  0114                     	;# 
   288  0115                     	;# 
   289  0116                     	;# 
   290  0117                     	;# 
   291  0118                     	;# 
   292  0119                     	;# 
   293  011A                     	;# 
   294  011B                     	;# 
   295  011D                     	;# 
   296  011E                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0191                     	;# 
   300  0191                     	;# 
   301  0192                     	;# 
   302  0193                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0194                     	;# 
   306  0195                     	;# 
   307  0196                     	;# 
   308  0199                     	;# 
   309  019A                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019C                     	;# 
   315  019C                     	;# 
   316  019D                     	;# 
   317  019E                     	;# 
   318  019F                     	;# 
   319  020C                     	;# 
   320  020D                     	;# 
   321  0211                     	;# 
   322  0211                     	;# 
   323  0212                     	;# 
   324  0212                     	;# 
   325  0213                     	;# 
   326  0213                     	;# 
   327  0214                     	;# 
   328  0214                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0216                     	;# 
   333  0216                     	;# 
   334  0217                     	;# 
   335  0217                     	;# 
   336  0219                     	;# 
   337  021A                     	;# 
   338  021B                     	;# 
   339  021C                     	;# 
   340  021D                     	;# 
   341  021E                     	;# 
   342  021F                     	;# 
   343  0291                     	;# 
   344  0291                     	;# 
   345  0292                     	;# 
   346  0293                     	;# 
   347  0294                     	;# 
   348  0295                     	;# 
   349  0295                     	;# 
   350  0296                     	;# 
   351  0298                     	;# 
   352  0298                     	;# 
   353  0299                     	;# 
   354  029A                     	;# 
   355  029B                     	;# 
   356  029C                     	;# 
   357  029C                     	;# 
   358  029D                     	;# 
   359  029E                     	;# 
   360  029E                     	;# 
   361  0311                     	;# 
   362  0311                     	;# 
   363  0312                     	;# 
   364  0313                     	;# 
   365  0318                     	;# 
   366  0318                     	;# 
   367  0319                     	;# 
   368  031A                     	;# 
   369  0394                     	;# 
   370  0395                     	;# 
   371  0396                     	;# 
   372  039A                     	;# 
   373  039C                     	;# 
   374  039D                     	;# 
   375  039E                     	;# 
   376  039F                     	;# 
   377  0415                     	;# 
   378  0416                     	;# 
   379  0417                     	;# 
   380  041C                     	;# 
   381  041D                     	;# 
   382  041E                     	;# 
   383  0FE4                     	;# 
   384  0FE5                     	;# 
   385  0FE6                     	;# 
   386  0FE7                     	;# 
   387  0FE8                     	;# 
   388  0FE9                     	;# 
   389  0FEA                     	;# 
   390  0FEB                     	;# 
   391  0FED                     	;# 
   392  0FEE                     	;# 
   393  0FEF                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0014                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  0111                     	;# 
   443  0112                     	;# 
   444  0113                     	;# 
   445  0114                     	;# 
   446  0115                     	;# 
   447  0116                     	;# 
   448  0117                     	;# 
   449  0118                     	;# 
   450  0119                     	;# 
   451  011A                     	;# 
   452  011B                     	;# 
   453  011D                     	;# 
   454  011E                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0191                     	;# 
   458  0191                     	;# 
   459  0192                     	;# 
   460  0193                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0194                     	;# 
   464  0195                     	;# 
   465  0196                     	;# 
   466  0199                     	;# 
   467  019A                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019C                     	;# 
   473  019C                     	;# 
   474  019D                     	;# 
   475  019E                     	;# 
   476  019F                     	;# 
   477  020C                     	;# 
   478  020D                     	;# 
   479  0211                     	;# 
   480  0211                     	;# 
   481  0212                     	;# 
   482  0212                     	;# 
   483  0213                     	;# 
   484  0213                     	;# 
   485  0214                     	;# 
   486  0214                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0216                     	;# 
   491  0216                     	;# 
   492  0217                     	;# 
   493  0217                     	;# 
   494  0219                     	;# 
   495  021A                     	;# 
   496  021B                     	;# 
   497  021C                     	;# 
   498  021D                     	;# 
   499  021E                     	;# 
   500  021F                     	;# 
   501  0291                     	;# 
   502  0291                     	;# 
   503  0292                     	;# 
   504  0293                     	;# 
   505  0294                     	;# 
   506  0295                     	;# 
   507  0295                     	;# 
   508  0296                     	;# 
   509  0298                     	;# 
   510  0298                     	;# 
   511  0299                     	;# 
   512  029A                     	;# 
   513  029B                     	;# 
   514  029C                     	;# 
   515  029C                     	;# 
   516  029D                     	;# 
   517  029E                     	;# 
   518  029E                     	;# 
   519  0311                     	;# 
   520  0311                     	;# 
   521  0312                     	;# 
   522  0313                     	;# 
   523  0318                     	;# 
   524  0318                     	;# 
   525  0319                     	;# 
   526  031A                     	;# 
   527  0394                     	;# 
   528  0395                     	;# 
   529  0396                     	;# 
   530  039A                     	;# 
   531  039C                     	;# 
   532  039D                     	;# 
   533  039E                     	;# 
   534  039F                     	;# 
   535  0415                     	;# 
   536  0416                     	;# 
   537  0417                     	;# 
   538  041C                     	;# 
   539  041D                     	;# 
   540  041E                     	;# 
   541  0FE4                     	;# 
   542  0FE5                     	;# 
   543  0FE6                     	;# 
   544  0FE7                     	;# 
   545  0FE8                     	;# 
   546  0FE9                     	;# 
   547  0FEA                     	;# 
   548  0FEB                     	;# 
   549  0FED                     	;# 
   550  0FEE                     	;# 
   551  0FEF                     	;# 
   552  0000                     	;# 
   553  0001                     	;# 
   554  0002                     	;# 
   555  0003                     	;# 
   556  0004                     	;# 
   557  0005                     	;# 
   558  0006                     	;# 
   559  0007                     	;# 
   560  0008                     	;# 
   561  0009                     	;# 
   562  000A                     	;# 
   563  000B                     	;# 
   564  000C                     	;# 
   565  000D                     	;# 
   566  0011                     	;# 
   567  0012                     	;# 
   568  0013                     	;# 
   569  0014                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0016                     	;# 
   573  0017                     	;# 
   574  0018                     	;# 
   575  0019                     	;# 
   576  001A                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001E                     	;# 
   580  001F                     	;# 
   581  008C                     	;# 
   582  008D                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0095                     	;# 
   588  0096                     	;# 
   589  0097                     	;# 
   590  0098                     	;# 
   591  0099                     	;# 
   592  009A                     	;# 
   593  009B                     	;# 
   594  009B                     	;# 
   595  009C                     	;# 
   596  009D                     	;# 
   597  009E                     	;# 
   598  010C                     	;# 
   599  010D                     	;# 
   600  0111                     	;# 
   601  0112                     	;# 
   602  0113                     	;# 
   603  0114                     	;# 
   604  0115                     	;# 
   605  0116                     	;# 
   606  0117                     	;# 
   607  0118                     	;# 
   608  0119                     	;# 
   609  011A                     	;# 
   610  011B                     	;# 
   611  011D                     	;# 
   612  011E                     	;# 
   613  018C                     	;# 
   614  018D                     	;# 
   615  0191                     	;# 
   616  0191                     	;# 
   617  0192                     	;# 
   618  0193                     	;# 
   619  0193                     	;# 
   620  0193                     	;# 
   621  0194                     	;# 
   622  0195                     	;# 
   623  0196                     	;# 
   624  0199                     	;# 
   625  019A                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019C                     	;# 
   631  019C                     	;# 
   632  019D                     	;# 
   633  019E                     	;# 
   634  019F                     	;# 
   635  020C                     	;# 
   636  020D                     	;# 
   637  0211                     	;# 
   638  0211                     	;# 
   639  0212                     	;# 
   640  0212                     	;# 
   641  0213                     	;# 
   642  0213                     	;# 
   643  0214                     	;# 
   644  0214                     	;# 
   645  0215                     	;# 
   646  0215                     	;# 
   647  0215                     	;# 
   648  0216                     	;# 
   649  0216                     	;# 
   650  0217                     	;# 
   651  0217                     	;# 
   652  0219                     	;# 
   653  021A                     	;# 
   654  021B                     	;# 
   655  021C                     	;# 
   656  021D                     	;# 
   657  021E                     	;# 
   658  021F                     	;# 
   659  0291                     	;# 
   660  0291                     	;# 
   661  0292                     	;# 
   662  0293                     	;# 
   663  0294                     	;# 
   664  0295                     	;# 
   665  0295                     	;# 
   666  0296                     	;# 
   667  0298                     	;# 
   668  0298                     	;# 
   669  0299                     	;# 
   670  029A                     	;# 
   671  029B                     	;# 
   672  029C                     	;# 
   673  029C                     	;# 
   674  029D                     	;# 
   675  029E                     	;# 
   676  029E                     	;# 
   677  0311                     	;# 
   678  0311                     	;# 
   679  0312                     	;# 
   680  0313                     	;# 
   681  0318                     	;# 
   682  0318                     	;# 
   683  0319                     	;# 
   684  031A                     	;# 
   685  0394                     	;# 
   686  0395                     	;# 
   687  0396                     	;# 
   688  039A                     	;# 
   689  039C                     	;# 
   690  039D                     	;# 
   691  039E                     	;# 
   692  039F                     	;# 
   693  0415                     	;# 
   694  0416                     	;# 
   695  0417                     	;# 
   696  041C                     	;# 
   697  041D                     	;# 
   698  041E                     	;# 
   699  0FE4                     	;# 
   700  0FE5                     	;# 
   701  0FE6                     	;# 
   702  0FE7                     	;# 
   703  0FE8                     	;# 
   704  0FE9                     	;# 
   705  0FEA                     	;# 
   706  0FEB                     	;# 
   707  0FED                     	;# 
   708  0FEE                     	;# 
   709  0FEF                     	;# 
   710  0000                     	;# 
   711  0001                     	;# 
   712  0002                     	;# 
   713  0003                     	;# 
   714  0004                     	;# 
   715  0005                     	;# 
   716  0006                     	;# 
   717  0007                     	;# 
   718  0008                     	;# 
   719  0009                     	;# 
   720  000A                     	;# 
   721  000B                     	;# 
   722  000C                     	;# 
   723  000D                     	;# 
   724  0011                     	;# 
   725  0012                     	;# 
   726  0013                     	;# 
   727  0014                     	;# 
   728  0015                     	;# 
   729  0016                     	;# 
   730  0016                     	;# 
   731  0017                     	;# 
   732  0018                     	;# 
   733  0019                     	;# 
   734  001A                     	;# 
   735  001B                     	;# 
   736  001C                     	;# 
   737  001E                     	;# 
   738  001F                     	;# 
   739  008C                     	;# 
   740  008D                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0093                     	;# 
   744  0094                     	;# 
   745  0095                     	;# 
   746  0096                     	;# 
   747  0097                     	;# 
   748  0098                     	;# 
   749  0099                     	;# 
   750  009A                     	;# 
   751  009B                     	;# 
   752  009B                     	;# 
   753  009C                     	;# 
   754  009D                     	;# 
   755  009E                     	;# 
   756  010C                     	;# 
   757  010D                     	;# 
   758  0111                     	;# 
   759  0112                     	;# 
   760  0113                     	;# 
   761  0114                     	;# 
   762  0115                     	;# 
   763  0116                     	;# 
   764  0117                     	;# 
   765  0118                     	;# 
   766  0119                     	;# 
   767  011A                     	;# 
   768  011B                     	;# 
   769  011D                     	;# 
   770  011E                     	;# 
   771  018C                     	;# 
   772  018D                     	;# 
   773  0191                     	;# 
   774  0191                     	;# 
   775  0192                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0193                     	;# 
   779  0194                     	;# 
   780  0195                     	;# 
   781  0196                     	;# 
   782  0199                     	;# 
   783  019A                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019C                     	;# 
   789  019C                     	;# 
   790  019D                     	;# 
   791  019E                     	;# 
   792  019F                     	;# 
   793  020C                     	;# 
   794  020D                     	;# 
   795  0211                     	;# 
   796  0211                     	;# 
   797  0212                     	;# 
   798  0212                     	;# 
   799  0213                     	;# 
   800  0213                     	;# 
   801  0214                     	;# 
   802  0214                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0215                     	;# 
   806  0216                     	;# 
   807  0216                     	;# 
   808  0217                     	;# 
   809  0217                     	;# 
   810  0219                     	;# 
   811  021A                     	;# 
   812  021B                     	;# 
   813  021C                     	;# 
   814  021D                     	;# 
   815  021E                     	;# 
   816  021F                     	;# 
   817  0291                     	;# 
   818  0291                     	;# 
   819  0292                     	;# 
   820  0293                     	;# 
   821  0294                     	;# 
   822  0295                     	;# 
   823  0295                     	;# 
   824  0296                     	;# 
   825  0298                     	;# 
   826  0298                     	;# 
   827  0299                     	;# 
   828  029A                     	;# 
   829  029B                     	;# 
   830  029C                     	;# 
   831  029C                     	;# 
   832  029D                     	;# 
   833  029E                     	;# 
   834  029E                     	;# 
   835  0311                     	;# 
   836  0311                     	;# 
   837  0312                     	;# 
   838  0313                     	;# 
   839  0318                     	;# 
   840  0318                     	;# 
   841  0319                     	;# 
   842  031A                     	;# 
   843  0394                     	;# 
   844  0395                     	;# 
   845  0396                     	;# 
   846  039A                     	;# 
   847  039C                     	;# 
   848  039D                     	;# 
   849  039E                     	;# 
   850  039F                     	;# 
   851  0415                     	;# 
   852  0416                     	;# 
   853  0417                     	;# 
   854  041C                     	;# 
   855  041D                     	;# 
   856  041E                     	;# 
   857  0FE4                     	;# 
   858  0FE5                     	;# 
   859  0FE6                     	;# 
   860  0FE7                     	;# 
   861  0FE8                     	;# 
   862  0FE9                     	;# 
   863  0FEA                     	;# 
   864  0FEB                     	;# 
   865  0FED                     	;# 
   866  0FEE                     	;# 
   867  0FEF                     	;# 
   868  0000                     	;# 
   869  0001                     	;# 
   870  0002                     	;# 
   871  0003                     	;# 
   872  0004                     	;# 
   873  0005                     	;# 
   874  0006                     	;# 
   875  0007                     	;# 
   876  0008                     	;# 
   877  0009                     	;# 
   878  000A                     	;# 
   879  000B                     	;# 
   880  000C                     	;# 
   881  000D                     	;# 
   882  0011                     	;# 
   883  0012                     	;# 
   884  0013                     	;# 
   885  0014                     	;# 
   886  0015                     	;# 
   887  0016                     	;# 
   888  0016                     	;# 
   889  0017                     	;# 
   890  0018                     	;# 
   891  0019                     	;# 
   892  001A                     	;# 
   893  001B                     	;# 
   894  001C                     	;# 
   895  001E                     	;# 
   896  001F                     	;# 
   897  008C                     	;# 
   898  008D                     	;# 
   899  0091                     	;# 
   900  0092                     	;# 
   901  0093                     	;# 
   902  0094                     	;# 
   903  0095                     	;# 
   904  0096                     	;# 
   905  0097                     	;# 
   906  0098                     	;# 
   907  0099                     	;# 
   908  009A                     	;# 
   909  009B                     	;# 
   910  009B                     	;# 
   911  009C                     	;# 
   912  009D                     	;# 
   913  009E                     	;# 
   914  010C                     	;# 
   915  010D                     	;# 
   916  0111                     	;# 
   917  0112                     	;# 
   918  0113                     	;# 
   919  0114                     	;# 
   920  0115                     	;# 
   921  0116                     	;# 
   922  0117                     	;# 
   923  0118                     	;# 
   924  0119                     	;# 
   925  011A                     	;# 
   926  011B                     	;# 
   927  011D                     	;# 
   928  011E                     	;# 
   929  018C                     	;# 
   930  018D                     	;# 
   931  0191                     	;# 
   932  0191                     	;# 
   933  0192                     	;# 
   934  0193                     	;# 
   935  0193                     	;# 
   936  0193                     	;# 
   937  0194                     	;# 
   938  0195                     	;# 
   939  0196                     	;# 
   940  0199                     	;# 
   941  019A                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019C                     	;# 
   947  019C                     	;# 
   948  019D                     	;# 
   949  019E                     	;# 
   950  019F                     	;# 
   951  020C                     	;# 
   952  020D                     	;# 
   953  0211                     	;# 
   954  0211                     	;# 
   955  0212                     	;# 
   956  0212                     	;# 
   957  0213                     	;# 
   958  0213                     	;# 
   959  0214                     	;# 
   960  0214                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0215                     	;# 
   964  0216                     	;# 
   965  0216                     	;# 
   966  0217                     	;# 
   967  0217                     	;# 
   968  0219                     	;# 
   969  021A                     	;# 
   970  021B                     	;# 
   971  021C                     	;# 
   972  021D                     	;# 
   973  021E                     	;# 
   974  021F                     	;# 
   975  0291                     	;# 
   976  0291                     	;# 
   977  0292                     	;# 
   978  0293                     	;# 
   979  0294                     	;# 
   980  0295                     	;# 
   981  0295                     	;# 
   982  0296                     	;# 
   983  0298                     	;# 
   984  0298                     	;# 
   985  0299                     	;# 
   986  029A                     	;# 
   987  029B                     	;# 
   988  029C                     	;# 
   989  029C                     	;# 
   990  029D                     	;# 
   991  029E                     	;# 
   992  029E                     	;# 
   993  0311                     	;# 
   994  0311                     	;# 
   995  0312                     	;# 
   996  0313                     	;# 
   997  0318                     	;# 
   998  0318                     	;# 
   999  0319                     	;# 
  1000  031A                     	;# 
  1001  0394                     	;# 
  1002  0395                     	;# 
  1003  0396                     	;# 
  1004  039A                     	;# 
  1005  039C                     	;# 
  1006  039D                     	;# 
  1007  039E                     	;# 
  1008  039F                     	;# 
  1009  0415                     	;# 
  1010  0416                     	;# 
  1011  0417                     	;# 
  1012  041C                     	;# 
  1013  041D                     	;# 
  1014  041E                     	;# 
  1015  0FE4                     	;# 
  1016  0FE5                     	;# 
  1017  0FE6                     	;# 
  1018  0FE7                     	;# 
  1019  0FE8                     	;# 
  1020  0FE9                     	;# 
  1021  0FEA                     	;# 
  1022  0FEB                     	;# 
  1023  0FED                     	;# 
  1024  0FEE                     	;# 
  1025  0FEF                     	;# 
  1026  0000                     	;# 
  1027  0001                     	;# 
  1028  0002                     	;# 
  1029  0003                     	;# 
  1030  0004                     	;# 
  1031  0005                     	;# 
  1032  0006                     	;# 
  1033  0007                     	;# 
  1034  0008                     	;# 
  1035  0009                     	;# 
  1036  000A                     	;# 
  1037  000B                     	;# 
  1038  000C                     	;# 
  1039  000D                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0013                     	;# 
  1043  0014                     	;# 
  1044  0015                     	;# 
  1045  0016                     	;# 
  1046  0016                     	;# 
  1047  0017                     	;# 
  1048  0018                     	;# 
  1049  0019                     	;# 
  1050  001A                     	;# 
  1051  001B                     	;# 
  1052  001C                     	;# 
  1053  001E                     	;# 
  1054  001F                     	;# 
  1055  008C                     	;# 
  1056  008D                     	;# 
  1057  0091                     	;# 
  1058  0092                     	;# 
  1059  0093                     	;# 
  1060  0094                     	;# 
  1061  0095                     	;# 
  1062  0096                     	;# 
  1063  0097                     	;# 
  1064  0098                     	;# 
  1065  0099                     	;# 
  1066  009A                     	;# 
  1067  009B                     	;# 
  1068  009B                     	;# 
  1069  009C                     	;# 
  1070  009D                     	;# 
  1071  009E                     	;# 
  1072  010C                     	;# 
  1073  010D                     	;# 
  1074  0111                     	;# 
  1075  0112                     	;# 
  1076  0113                     	;# 
  1077  0114                     	;# 
  1078  0115                     	;# 
  1079  0116                     	;# 
  1080  0117                     	;# 
  1081  0118                     	;# 
  1082  0119                     	;# 
  1083  011A                     	;# 
  1084  011B                     	;# 
  1085  011D                     	;# 
  1086  011E                     	;# 
  1087  018C                     	;# 
  1088  018D                     	;# 
  1089  0191                     	;# 
  1090  0191                     	;# 
  1091  0192                     	;# 
  1092  0193                     	;# 
  1093  0193                     	;# 
  1094  0193                     	;# 
  1095  0194                     	;# 
  1096  0195                     	;# 
  1097  0196                     	;# 
  1098  0199                     	;# 
  1099  019A                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019B                     	;# 
  1103  019B                     	;# 
  1104  019C                     	;# 
  1105  019C                     	;# 
  1106  019D                     	;# 
  1107  019E                     	;# 
  1108  019F                     	;# 
  1109  020C                     	;# 
  1110  020D                     	;# 
  1111  0211                     	;# 
  1112  0211                     	;# 
  1113  0212                     	;# 
  1114  0212                     	;# 
  1115  0213                     	;# 
  1116  0213                     	;# 
  1117  0214                     	;# 
  1118  0214                     	;# 
  1119  0215                     	;# 
  1120  0215                     	;# 
  1121  0215                     	;# 
  1122  0216                     	;# 
  1123  0216                     	;# 
  1124  0217                     	;# 
  1125  0217                     	;# 
  1126  0219                     	;# 
  1127  021A                     	;# 
  1128  021B                     	;# 
  1129  021C                     	;# 
  1130  021D                     	;# 
  1131  021E                     	;# 
  1132  021F                     	;# 
  1133  0291                     	;# 
  1134  0291                     	;# 
  1135  0292                     	;# 
  1136  0293                     	;# 
  1137  0294                     	;# 
  1138  0295                     	;# 
  1139  0295                     	;# 
  1140  0296                     	;# 
  1141  0298                     	;# 
  1142  0298                     	;# 
  1143  0299                     	;# 
  1144  029A                     	;# 
  1145  029B                     	;# 
  1146  029C                     	;# 
  1147  029C                     	;# 
  1148  029D                     	;# 
  1149  029E                     	;# 
  1150  029E                     	;# 
  1151  0311                     	;# 
  1152  0311                     	;# 
  1153  0312                     	;# 
  1154  0313                     	;# 
  1155  0318                     	;# 
  1156  0318                     	;# 
  1157  0319                     	;# 
  1158  031A                     	;# 
  1159  0394                     	;# 
  1160  0395                     	;# 
  1161  0396                     	;# 
  1162  039A                     	;# 
  1163  039C                     	;# 
  1164  039D                     	;# 
  1165  039E                     	;# 
  1166  039F                     	;# 
  1167  0415                     	;# 
  1168  0416                     	;# 
  1169  0417                     	;# 
  1170  041C                     	;# 
  1171  041D                     	;# 
  1172  041E                     	;# 
  1173  0FE4                     	;# 
  1174  0FE5                     	;# 
  1175  0FE6                     	;# 
  1176  0FE7                     	;# 
  1177  0FE8                     	;# 
  1178  0FE9                     	;# 
  1179  0FEA                     	;# 
  1180  0FEB                     	;# 
  1181  0FED                     	;# 
  1182  0FEE                     	;# 
  1183  0FEF                     	;# 
  1184  0000                     	;# 
  1185  0001                     	;# 
  1186  0002                     	;# 
  1187  0003                     	;# 
  1188  0004                     	;# 
  1189  0005                     	;# 
  1190  0006                     	;# 
  1191  0007                     	;# 
  1192  0008                     	;# 
  1193  0009                     	;# 
  1194  000A                     	;# 
  1195  000B                     	;# 
  1196  000C                     	;# 
  1197  000D                     	;# 
  1198  0011                     	;# 
  1199  0012                     	;# 
  1200  0013                     	;# 
  1201  0014                     	;# 
  1202  0015                     	;# 
  1203  0016                     	;# 
  1204  0016                     	;# 
  1205  0017                     	;# 
  1206  0018                     	;# 
  1207  0019                     	;# 
  1208  001A                     	;# 
  1209  001B                     	;# 
  1210  001C                     	;# 
  1211  001E                     	;# 
  1212  001F                     	;# 
  1213  008C                     	;# 
  1214  008D                     	;# 
  1215  0091                     	;# 
  1216  0092                     	;# 
  1217  0093                     	;# 
  1218  0094                     	;# 
  1219  0095                     	;# 
  1220  0096                     	;# 
  1221  0097                     	;# 
  1222  0098                     	;# 
  1223  0099                     	;# 
  1224  009A                     	;# 
  1225  009B                     	;# 
  1226  009B                     	;# 
  1227  009C                     	;# 
  1228  009D                     	;# 
  1229  009E                     	;# 
  1230  010C                     	;# 
  1231  010D                     	;# 
  1232  0111                     	;# 
  1233  0112                     	;# 
  1234  0113                     	;# 
  1235  0114                     	;# 
  1236  0115                     	;# 
  1237  0116                     	;# 
  1238  0117                     	;# 
  1239  0118                     	;# 
  1240  0119                     	;# 
  1241  011A                     	;# 
  1242  011B                     	;# 
  1243  011D                     	;# 
  1244  011E                     	;# 
  1245  018C                     	;# 
  1246  018D                     	;# 
  1247  0191                     	;# 
  1248  0191                     	;# 
  1249  0192                     	;# 
  1250  0193                     	;# 
  1251  0193                     	;# 
  1252  0193                     	;# 
  1253  0194                     	;# 
  1254  0195                     	;# 
  1255  0196                     	;# 
  1256  0199                     	;# 
  1257  019A                     	;# 
  1258  019B                     	;# 
  1259  019B                     	;# 
  1260  019B                     	;# 
  1261  019B                     	;# 
  1262  019C                     	;# 
  1263  019C                     	;# 
  1264  019D                     	;# 
  1265  019E                     	;# 
  1266  019F                     	;# 
  1267  020C                     	;# 
  1268  020D                     	;# 
  1269  0211                     	;# 
  1270  0211                     	;# 
  1271  0212                     	;# 
  1272  0212                     	;# 
  1273  0213                     	;# 
  1274  0213                     	;# 
  1275  0214                     	;# 
  1276  0214                     	;# 
  1277  0215                     	;# 
  1278  0215                     	;# 
  1279  0215                     	;# 
  1280  0216                     	;# 
  1281  0216                     	;# 
  1282  0217                     	;# 
  1283  0217                     	;# 
  1284  0219                     	;# 
  1285  021A                     	;# 
  1286  021B                     	;# 
  1287  021C                     	;# 
  1288  021D                     	;# 
  1289  021E                     	;# 
  1290  021F                     	;# 
  1291  0291                     	;# 
  1292  0291                     	;# 
  1293  0292                     	;# 
  1294  0293                     	;# 
  1295  0294                     	;# 
  1296  0295                     	;# 
  1297  0295                     	;# 
  1298  0296                     	;# 
  1299  0298                     	;# 
  1300  0298                     	;# 
  1301  0299                     	;# 
  1302  029A                     	;# 
  1303  029B                     	;# 
  1304  029C                     	;# 
  1305  029C                     	;# 
  1306  029D                     	;# 
  1307  029E                     	;# 
  1308  029E                     	;# 
  1309  0311                     	;# 
  1310  0311                     	;# 
  1311  0312                     	;# 
  1312  0313                     	;# 
  1313  0318                     	;# 
  1314  0318                     	;# 
  1315  0319                     	;# 
  1316  031A                     	;# 
  1317  0394                     	;# 
  1318  0395                     	;# 
  1319  0396                     	;# 
  1320  039A                     	;# 
  1321  039C                     	;# 
  1322  039D                     	;# 
  1323  039E                     	;# 
  1324  039F                     	;# 
  1325  0415                     	;# 
  1326  0416                     	;# 
  1327  0417                     	;# 
  1328  041C                     	;# 
  1329  041D                     	;# 
  1330  041E                     	;# 
  1331  0FE4                     	;# 
  1332  0FE5                     	;# 
  1333  0FE6                     	;# 
  1334  0FE7                     	;# 
  1335  0FE8                     	;# 
  1336  0FE9                     	;# 
  1337  0FEA                     	;# 
  1338  0FEB                     	;# 
  1339  0FED                     	;# 
  1340  0FEE                     	;# 
  1341  0FEF                     	;# 
  1342  0000                     	;# 
  1343  0001                     	;# 
  1344  0002                     	;# 
  1345  0003                     	;# 
  1346  0004                     	;# 
  1347  0005                     	;# 
  1348  0006                     	;# 
  1349  0007                     	;# 
  1350  0008                     	;# 
  1351  0009                     	;# 
  1352  000A                     	;# 
  1353  000B                     	;# 
  1354  000C                     	;# 
  1355  000D                     	;# 
  1356  0011                     	;# 
  1357  0012                     	;# 
  1358  0013                     	;# 
  1359  0014                     	;# 
  1360  0015                     	;# 
  1361  0016                     	;# 
  1362  0016                     	;# 
  1363  0017                     	;# 
  1364  0018                     	;# 
  1365  0019                     	;# 
  1366  001A                     	;# 
  1367  001B                     	;# 
  1368  001C                     	;# 
  1369  001E                     	;# 
  1370  001F                     	;# 
  1371  008C                     	;# 
  1372  008D                     	;# 
  1373  0091                     	;# 
  1374  0092                     	;# 
  1375  0093                     	;# 
  1376  0094                     	;# 
  1377  0095                     	;# 
  1378  0096                     	;# 
  1379  0097                     	;# 
  1380  0098                     	;# 
  1381  0099                     	;# 
  1382  009A                     	;# 
  1383  009B                     	;# 
  1384  009B                     	;# 
  1385  009C                     	;# 
  1386  009D                     	;# 
  1387  009E                     	;# 
  1388  010C                     	;# 
  1389  010D                     	;# 
  1390  0111                     	;# 
  1391  0112                     	;# 
  1392  0113                     	;# 
  1393  0114                     	;# 
  1394  0115                     	;# 
  1395  0116                     	;# 
  1396  0117                     	;# 
  1397  0118                     	;# 
  1398  0119                     	;# 
  1399  011A                     	;# 
  1400  011B                     	;# 
  1401  011D                     	;# 
  1402  011E                     	;# 
  1403  018C                     	;# 
  1404  018D                     	;# 
  1405  0191                     	;# 
  1406  0191                     	;# 
  1407  0192                     	;# 
  1408  0193                     	;# 
  1409  0193                     	;# 
  1410  0193                     	;# 
  1411  0194                     	;# 
  1412  0195                     	;# 
  1413  0196                     	;# 
  1414  0199                     	;# 
  1415  019A                     	;# 
  1416  019B                     	;# 
  1417  019B                     	;# 
  1418  019B                     	;# 
  1419  019B                     	;# 
  1420  019C                     	;# 
  1421  019C                     	;# 
  1422  019D                     	;# 
  1423  019E                     	;# 
  1424  019F                     	;# 
  1425  020C                     	;# 
  1426  020D                     	;# 
  1427  0211                     	;# 
  1428  0211                     	;# 
  1429  0212                     	;# 
  1430  0212                     	;# 
  1431  0213                     	;# 
  1432  0213                     	;# 
  1433  0214                     	;# 
  1434  0214                     	;# 
  1435  0215                     	;# 
  1436  0215                     	;# 
  1437  0215                     	;# 
  1438  0216                     	;# 
  1439  0216                     	;# 
  1440  0217                     	;# 
  1441  0217                     	;# 
  1442  0219                     	;# 
  1443  021A                     	;# 
  1444  021B                     	;# 
  1445  021C                     	;# 
  1446  021D                     	;# 
  1447  021E                     	;# 
  1448  021F                     	;# 
  1449  0291                     	;# 
  1450  0291                     	;# 
  1451  0292                     	;# 
  1452  0293                     	;# 
  1453  0294                     	;# 
  1454  0295                     	;# 
  1455  0295                     	;# 
  1456  0296                     	;# 
  1457  0298                     	;# 
  1458  0298                     	;# 
  1459  0299                     	;# 
  1460  029A                     	;# 
  1461  029B                     	;# 
  1462  029C                     	;# 
  1463  029C                     	;# 
  1464  029D                     	;# 
  1465  029E                     	;# 
  1466  029E                     	;# 
  1467  0311                     	;# 
  1468  0311                     	;# 
  1469  0312                     	;# 
  1470  0313                     	;# 
  1471  0318                     	;# 
  1472  0318                     	;# 
  1473  0319                     	;# 
  1474  031A                     	;# 
  1475  0394                     	;# 
  1476  0395                     	;# 
  1477  0396                     	;# 
  1478  039A                     	;# 
  1479  039C                     	;# 
  1480  039D                     	;# 
  1481  039E                     	;# 
  1482  039F                     	;# 
  1483  0415                     	;# 
  1484  0416                     	;# 
  1485  0417                     	;# 
  1486  041C                     	;# 
  1487  041D                     	;# 
  1488  041E                     	;# 
  1489  0FE4                     	;# 
  1490  0FE5                     	;# 
  1491  0FE6                     	;# 
  1492  0FE7                     	;# 
  1493  0FE8                     	;# 
  1494  0FE9                     	;# 
  1495  0FEA                     	;# 
  1496  0FEB                     	;# 
  1497  0FED                     	;# 
  1498  0FEE                     	;# 
  1499  0FEF                     	;# 
  1500  0016                     _TMR1	set	22
  1501  001B                     _PR2	set	27
  1502  001A                     _TMR2	set	26
  1503  001C                     _T2CON	set	28
  1504  0019                     _T1GCON	set	25
  1505  0018                     _T1CON	set	24
  1506  000D                     _PORTB	set	13
  1507  000C                     _PORTA	set	12
  1508  00A1                     _BCL2IF	set	161
  1509  00A0                     _SSP2IF	set	160
  1510  0093                     _BCL1IF	set	147
  1511  008B                     _SSP1IF	set	139
  1512  005F                     _GIE	set	95
  1513  005E                     _PEIE	set	94
  1514  0088                     _TMR1IF	set	136
  1515  0064                     _RA4	set	100
  1516  0063                     _RA3	set	99
  1517  00C0                     _TMR1ON	set	192
  1518  008D                     _TRISB	set	141
  1519  008C                     _TRISA	set	140
  1520  0099                     _OSCCON	set	153
  1521  04A1                     _BCL2IE	set	1185
  1522  04A0                     _SSP2IE	set	1184
  1523  0493                     _BCL1IE	set	1171
  1524  048B                     _SSP1IE	set	1163
  1525  0488                     _TMR1IE	set	1160
  1526  011E                     _APFCON1	set	286
  1527  011D                     _APFCON0	set	285
  1528  018D                     _ANSELB	set	397
  1529  018C                     _ANSELA	set	396
  1530  021C                     _SSP2STATbits	set	540
  1531  0219                     _SSP2BUF	set	537
  1532  021E                     _SSP2CON2	set	542
  1533  021B                     _SSP2MSK	set	539
  1534  021E                     _SSP2CON2bits	set	542
  1535  021D                     _SSP2CON1bits	set	541
  1536  021A                     _SSP2ADD	set	538
  1537  021C                     _SSP2STAT	set	540
  1538  021D                     _SSP2CON1	set	541
  1539  0214                     _SSP1STATbits	set	532
  1540  0211                     _SSP1BUF	set	529
  1541  0216                     _SSP1CON2	set	534
  1542  0213                     _SSP1MSK	set	531
  1543  0216                     _SSP1CON2bits	set	534
  1544  0215                     _SSP1CON1bits	set	533
  1545  0212                     _SSP1ADD	set	530
  1546  0214                     _SSP1STAT	set	532
  1547  0215                     _SSP1CON1	set	533
  1548  0298                     _CCPR2L	set	664
  1549  029E                     _CCPTMRS	set	670
  1550  029A                     _CCP2CON	set	666
  1551                           
  1552                           	psect	stringtext
  1553  05F9                     __pstringtext:	
  1554  05F9                     STR_1:	
  1555  05F9  3448               	retlw	72	;'H'
  1556  05FA  3465               	retlw	101	;'e'
  1557  05FB  346C               	retlw	108	;'l'
  1558  05FC  346C               	retlw	108	;'l'
  1559  05FD  346F               	retlw	111	;'o'
  1560  05FE  3477               	retlw	119	;'w'
  1561  05FF  3420               	retlw	32	;' '
  1562  0600  3457               	retlw	87	;'W'
  1563  0601  346F               	retlw	111	;'o'
  1564  0602  3472               	retlw	114	;'r'
  1565  0603  346C               	retlw	108	;'l'
  1566  0604  3464               	retlw	100	;'d'
  1567  0605  3400               	retlw	0
  1568  0606                     STR_3:	
  1569  0606  3425               	retlw	37	;'%'
  1570  0607  3430               	retlw	48	;'0'
  1571  0608  3438               	retlw	56	;'8'
  1572  0609  346C               	retlw	108	;'l'
  1573  060A  3458               	retlw	88	;'X'
  1574  060B  3420               	retlw	32	;' '
  1575  060C  3400               	retlw	0
  1576  060D                     STR_6:	
  1577  060D  3420               	retlw	32	;' '
  1578  060E  3425               	retlw	37	;'%'
  1579  060F  3430               	retlw	48	;'0'
  1580  0610  3438               	retlw	56	;'8'
  1581  0611  344C               	retlw	76	;'L'
  1582  0612  3458               	retlw	88	;'X'
  1583  0613  3400               	retlw	0
  1584  0614                     STR_4:	
  1585  0614  3420               	retlw	32	;' '
  1586  0615  3425               	retlw	37	;'%'
  1587  0616  3430               	retlw	48	;'0'
  1588  0617  3432               	retlw	50	;'2'
  1589  0618  3458               	retlw	88	;'X'
  1590  0619  3400               	retlw	0
  1591  061A                     STR_5:	
  1592  061A  3420               	retlw	32	;' '
  1593  061B  3425               	retlw	37	;'%'
  1594  061C  3430               	retlw	48	;'0'
  1595  061D  3434               	retlw	52	;'4'
  1596  061E  3458               	retlw	88	;'X'
  1597  061F  3400               	retlw	0
  1598  0620                     STR_2:	
  1599  0620  340D               	retlw	13
  1600  0621  3400               	retlw	0
  1601                           
  1602                           ; #config settings
  1603  0000                     
  1604                           	psect	cinit
  1605  0015                     start_initialization:	
  1606  0015                     __initialization:	
  1607                           
  1608                           ; Clear objects allocated to COMMON
  1609  0015  01FB               	clrf	__pbssCOMMON& (0+127)
  1610                           
  1611                           ; Clear objects allocated to BANK0
  1612  0016  305D               	movlw	low __pbssBANK0
  1613  0017  0084               	movwf	4
  1614  0018  3000               	movlw	high __pbssBANK0
  1615  0019  0085               	movwf	5
  1616  001A  300A               	movlw	10
  1617  001B  3187  275F  3180   	fcall	clear_ram0
  1618                           
  1619                           ; Clear objects allocated to BANK1
  1620  001E  30A0               	movlw	low __pbssBANK1
  1621  001F  0084               	movwf	4
  1622  0020  3000               	movlw	high __pbssBANK1
  1623  0021  0085               	movwf	5
  1624  0022  3026               	movlw	38
  1625  0023  3187  275F         	fcall	clear_ram0
  1626  0025                     end_of_initialization:	
  1627                           ;End of C runtime variable initialization code
  1628                           
  1629  0025                     __end_of__initialization:	
  1630  0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1631  0026  0020               	movlb	0
  1632  0027  3186  2E4B         	ljmp	_main	;jump to C main() function
  1633                           
  1634                           	psect	bssCOMMON
  1635  007B                     __pbssCOMMON:	
  1636  007B                     _outptr:	
  1637  007B                     	ds	1
  1638                           
  1639                           	psect	bssBANK0
  1640  005D                     __pbssBANK0:	
  1641  005D                     _MemoryReg:	
  1642  005D                     	ds	3
  1643  0060                     _xfunc_in:	
  1644  0060                     	ds	2
  1645  0062                     _xfunc_out:	
  1646  0062                     	ds	2
  1647  0064                     _VoltageReg:	
  1648  0064                     	ds	2
  1649  0066                     _ConfigReg:	
  1650  0066                     	ds	1
  1651                           
  1652                           	psect	bssBANK1
  1653  00A0                     __pbssBANK1:	
  1654  00A0                     _I2C2_Config:	
  1655  00A0                     	ds	19
  1656  00B3                     _I2C1_Config:	
  1657  00B3                     	ds	19
  1658                           
  1659                           	psect	clrtext
  1660  075F                     clear_ram0:	
  1661                           ;	Called with FSR0 containing the base address, and
  1662                           ;	WREG with the size to clear
  1663                           
  1664  075F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1665  0760                     clrloop0:	
  1666  0760  0180               	clrf	0	;clear RAM location pointed to by FSR
  1667  0761  3101               	addfsr 0,1
  1668  0762  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1669  0763  2F60               	goto	clrloop0	;have we reached the end yet?
  1670  0764  3400               	retlw	0	;all done for this memory range, return
  1671                           
  1672                           	psect	cstackCOMMON
  1673  0070                     __pcstackCOMMON:	
  1674  0070                     ?_Basic_Init:	
  1675  0070                     ?_LCD_Init:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0070                     ?_Timer1_Init:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0070                     ?_Buzer_Init:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0070                     ?_DAC_Initialize:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0070                     ?_Timer1_Handler:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0070                     ??_Timer1_Handler:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0070                     ?_I2C_CommonInterrupt:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0070                     ?_LCD_DisplayClear:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0070                     ?_main:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0070                     ?_Handler:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0070                     ?_LCD_WriteData:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0070                     ?_xputc:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0070                     ?_xputs:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0070                     ?_I2C1_PinInit:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0070                     ?_I2C1_Interrupt:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0070                     ??_I2C1_Interrupt:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0070                     ?_I2C2_PinInit:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0070                     ?_I2C2_Interrupt:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0070                     ??_I2C2_Interrupt:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732                           
  1733                           ; 1 bytes @ 0x0
  1734  0070                     	ds	1
  1735  0071                     ??_I2C_CommonInterrupt:	
  1736  0071                     ??_Handler:	
  1737                           ; 1 bytes @ 0x1
  1738                           
  1739                           
  1740                           ; 1 bytes @ 0x1
  1741  0071                     	ds	1
  1742  0072                     ??_Basic_Init:	
  1743  0072                     ??_Timer1_Init:	
  1744                           ; 1 bytes @ 0x2
  1745                           
  1746  0072                     ??_Buzer_Init:	
  1747                           ; 1 bytes @ 0x2
  1748                           
  1749  0072                     ??_LCD_WriteData:	
  1750                           ; 1 bytes @ 0x2
  1751                           
  1752  0072                     ??_I2C1_PinInit:	
  1753                           ; 1 bytes @ 0x2
  1754                           
  1755  0072                     ?_I2C1_Transmit:	
  1756                           ; 1 bytes @ 0x2
  1757                           
  1758  0072                     ??_I2C2_PinInit:	
  1759                           ; 1 bytes @ 0x2
  1760                           
  1761  0072                     ?_I2C2_Transmit:	
  1762                           ; 1 bytes @ 0x2
  1763                           
  1764  0072                     ?___wmul:	
  1765                           ; 1 bytes @ 0x2
  1766                           
  1767  0072                     ?___lldiv:	
  1768                           ; 2 bytes @ 0x2
  1769                           
  1770  0072                     ?___llmod:	
  1771                           ; 4 bytes @ 0x2
  1772                           
  1773  0072                     I2C1_Transmit@pData:	
  1774                           ; 4 bytes @ 0x2
  1775                           
  1776  0072                     I2C2_Transmit@pData:	
  1777                           ; 1 bytes @ 0x2
  1778                           
  1779  0072                     ___wmul@multiplier:	
  1780                           ; 1 bytes @ 0x2
  1781                           
  1782  0072                     ___lldiv@divisor:	
  1783                           ; 2 bytes @ 0x2
  1784                           
  1785  0072                     ___llmod@divisor:	
  1786                           ; 4 bytes @ 0x2
  1787                           
  1788                           
  1789                           ; 4 bytes @ 0x2
  1790  0072                     	ds	1
  1791  0073                     ?_I2C1_Setting:	
  1792  0073                     ?_I2C2_Setting:	
  1793                           ; 1 bytes @ 0x3
  1794                           
  1795  0073                     I2C1_Setting@mode:	
  1796                           ; 1 bytes @ 0x3
  1797                           
  1798  0073                     I2C1_Transmit@size:	
  1799                           ; 1 bytes @ 0x3
  1800                           
  1801  0073                     I2C2_Setting@mode:	
  1802                           ; 1 bytes @ 0x3
  1803                           
  1804  0073                     I2C2_Transmit@size:	
  1805                           ; 1 bytes @ 0x3
  1806                           
  1807                           
  1808                           ; 1 bytes @ 0x3
  1809  0073                     	ds	1
  1810  0074                     ??_I2C1_Transmit:	
  1811  0074                     ??_I2C2_Transmit:	
  1812                           ; 1 bytes @ 0x4
  1813                           
  1814  0074                     LCD_WriteData@point:	
  1815                           ; 1 bytes @ 0x4
  1816                           
  1817  0074                     I2C1_Setting@Speed:	
  1818                           ; 1 bytes @ 0x4
  1819                           
  1820  0074                     I2C2_Setting@Speed:	
  1821                           ; 1 bytes @ 0x4
  1822                           
  1823  0074                     ___wmul@multiplicand:	
  1824                           ; 1 bytes @ 0x4
  1825                           
  1826                           
  1827                           ; 2 bytes @ 0x4
  1828  0074                     	ds	1
  1829  0075                     ?_LCD_Put:	
  1830  0075                     ?_LCD_CursorPosition:	
  1831                           ; 1 bytes @ 0x5
  1832                           
  1833  0075                     ??_LCD_DisplayClear:	
  1834                           ; 1 bytes @ 0x5
  1835                           
  1836  0075                     ??_I2C1_Setting:	
  1837                           ; 1 bytes @ 0x5
  1838                           
  1839  0075                     ??_I2C2_Setting:	
  1840                           ; 1 bytes @ 0x5
  1841                           
  1842  0075                     LCD_Put@word:	
  1843                           ; 1 bytes @ 0x5
  1844                           
  1845  0075                     LCD_CursorPosition@ty:	
  1846                           ; 1 bytes @ 0x5
  1847                           
  1848                           
  1849                           ; 1 bytes @ 0x5
  1850  0075                     	ds	1
  1851  0076                     ??_LCD_Init:	
  1852  0076                     ??_LCD_Put:	
  1853                           ; 1 bytes @ 0x6
  1854                           
  1855  0076                     ??_LCD_CursorPosition:	
  1856                           ; 1 bytes @ 0x6
  1857                           
  1858  0076                     ??_xputc:	
  1859                           ; 1 bytes @ 0x6
  1860                           
  1861  0076                     ??___wmul:	
  1862                           ; 1 bytes @ 0x6
  1863                           
  1864  0076                     I2C1_Setting@address:	
  1865                           ; 1 bytes @ 0x6
  1866                           
  1867  0076                     I2C1_Transmit@address:	
  1868                           ; 1 bytes @ 0x6
  1869                           
  1870  0076                     I2C2_Setting@address:	
  1871                           ; 1 bytes @ 0x6
  1872                           
  1873  0076                     I2C2_Transmit@address:	
  1874                           ; 1 bytes @ 0x6
  1875                           
  1876  0076                     ___wmul@product:	
  1877                           ; 1 bytes @ 0x6
  1878                           
  1879  0076                     ___lldiv@dividend:	
  1880                           ; 2 bytes @ 0x6
  1881                           
  1882  0076                     ___llmod@dividend:	
  1883                           ; 4 bytes @ 0x6
  1884                           
  1885                           
  1886                           ; 4 bytes @ 0x6
  1887  0076                     	ds	1
  1888  0077                     ?_I2C_Init:	
  1889  0077                     LCD_CursorPosition@tx:	
  1890                           ; 1 bytes @ 0x7
  1891                           
  1892  0077                     xputc@c:	
  1893                           ; 1 bytes @ 0x7
  1894                           
  1895  0077                     I2C1_Transmit@i:	
  1896                           ; 1 bytes @ 0x7
  1897                           
  1898  0077                     I2C2_Transmit@i:	
  1899                           ; 1 bytes @ 0x7
  1900                           
  1901  0077                     I2C_Init@address:	
  1902                           ; 1 bytes @ 0x7
  1903                           
  1904                           
  1905                           ; 1 bytes @ 0x7
  1906  0077                     	ds	1
  1907  0078                     ??_xputs:	
  1908  0078                     I2C1_Transmit@i_408:	
  1909                           ; 1 bytes @ 0x8
  1910                           
  1911  0078                     I2C2_Transmit@i_552:	
  1912                           ; 1 bytes @ 0x8
  1913                           
  1914  0078                     I2C_Init@mode:	
  1915                           ; 1 bytes @ 0x8
  1916                           
  1917                           
  1918                           ; 1 bytes @ 0x8
  1919  0078                     	ds	1
  1920  0079                     xputs@str:	
  1921  0079                     I2C1_Transmit@result:	
  1922                           ; 1 bytes @ 0x9
  1923                           
  1924  0079                     I2C2_Transmit@result:	
  1925                           ; 1 bytes @ 0x9
  1926                           
  1927  0079                     I2C_Init@Speed:	
  1928                           ; 1 bytes @ 0x9
  1929                           
  1930                           
  1931                           ; 1 bytes @ 0x9
  1932  0079                     	ds	1
  1933  007A                     ??___lldiv:	
  1934  007A                     ??___llmod:	
  1935                           ; 1 bytes @ 0xA
  1936                           
  1937  007A                     I2C_Init@I2Cx:	
  1938                           ; 1 bytes @ 0xA
  1939                           
  1940                           
  1941                           ; 1 bytes @ 0xA
  1942  007A                     	ds	1
  1943  007B                     ??_main:	
  1944                           
  1945                           	psect	cstackBANK0
  1946  0020                     __pcstackBANK0:	
  1947                           ; 1 bytes @ 0xB
  1948                           
  1949  0020                     ??_I2C_Init:	
  1950  0020                     ?_I2C_Transmit:	
  1951                           ; 1 bytes @ 0x0
  1952                           
  1953  0020                     I2C_Transmit@address:	
  1954                           ; 1 bytes @ 0x0
  1955                           
  1956  0020                     ___llmod@counter:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959  0020                     ___lldiv@quotient:	
  1960                           ; 1 bytes @ 0x0
  1961                           
  1962                           
  1963                           ; 4 bytes @ 0x0
  1964  0020                     	ds	1
  1965  0021                     I2C_Transmit@pData:	
  1966                           
  1967                           ; 1 bytes @ 0x1
  1968  0021                     	ds	1
  1969  0022                     I2C_Transmit@size:	
  1970                           
  1971                           ; 1 bytes @ 0x2
  1972  0022                     	ds	1
  1973  0023                     ??_I2C_Transmit:	
  1974                           
  1975                           ; 1 bytes @ 0x3
  1976  0023                     	ds	1
  1977  0024                     ___lldiv@counter:	
  1978                           
  1979                           ; 1 bytes @ 0x4
  1980  0024                     	ds	1
  1981  0025                     ?_xvprintf:	
  1982  0025                     xvprintf@fmt:	
  1983                           ; 1 bytes @ 0x5
  1984                           
  1985                           
  1986                           ; 2 bytes @ 0x5
  1987  0025                     	ds	1
  1988  0026                     I2C_Transmit@I2Cx:	
  1989                           
  1990                           ; 1 bytes @ 0x6
  1991  0026                     	ds	1
  1992  0027                     xvprintf@arp:	
  1993  0027                     I2C_Transmit@result:	
  1994                           ; 1 bytes @ 0x7
  1995                           
  1996                           
  1997                           ; 1 bytes @ 0x7
  1998  0027                     	ds	1
  1999  0028                     ??_DAC_Initialize:	
  2000  0028                     ??_xvprintf:	
  2001                           ; 1 bytes @ 0x8
  2002                           
  2003                           
  2004                           ; 1 bytes @ 0x8
  2005  0028                     	ds	4
  2006  002C                     xvprintf@s:	
  2007                           
  2008                           ; 16 bytes @ 0xC
  2009  002C                     	ds	16
  2010  003C                     _xvprintf$177:	
  2011                           
  2012                           ; 4 bytes @ 0x1C
  2013  003C                     	ds	4
  2014  0040                     _xvprintf$178:	
  2015                           
  2016                           ; 2 bytes @ 0x20
  2017  0040                     	ds	2
  2018  0042                     _xvprintf$179:	
  2019                           
  2020                           ; 2 bytes @ 0x22
  2021  0042                     	ds	2
  2022  0044                     xvprintf@p:	
  2023                           
  2024                           ; 1 bytes @ 0x24
  2025  0044                     	ds	1
  2026  0045                     xvprintf@r:	
  2027                           
  2028                           ; 2 bytes @ 0x25
  2029  0045                     	ds	2
  2030  0047                     xvprintf@w:	
  2031                           
  2032                           ; 2 bytes @ 0x27
  2033  0047                     	ds	2
  2034  0049                     xvprintf@j:	
  2035                           
  2036                           ; 2 bytes @ 0x29
  2037  0049                     	ds	2
  2038  004B                     xvprintf@v:	
  2039                           
  2040                           ; 4 bytes @ 0x2B
  2041  004B                     	ds	4
  2042  004F                     xvprintf@f:	
  2043                           
  2044                           ; 2 bytes @ 0x2F
  2045  004F                     	ds	2
  2046  0051                     xvprintf@i:	
  2047                           
  2048                           ; 2 bytes @ 0x31
  2049  0051                     	ds	2
  2050  0053                     xvprintf@d:	
  2051                           
  2052                           ; 1 bytes @ 0x33
  2053  0053                     	ds	1
  2054  0054                     xvprintf@c:	
  2055                           
  2056                           ; 1 bytes @ 0x34
  2057  0054                     	ds	1
  2058  0055                     ?_xprintf:	
  2059  0055                     xprintf@fmt:	
  2060                           ; 1 bytes @ 0x35
  2061                           
  2062                           
  2063                           ; 2 bytes @ 0x35
  2064  0055                     	ds	6
  2065  005B                     ??_xprintf:	
  2066                           
  2067                           ; 1 bytes @ 0x3B
  2068  005B                     	ds	1
  2069  005C                     xprintf@arp:	
  2070                           
  2071                           ; 1 bytes @ 0x3C
  2072  005C                     	ds	1
  2073                           
  2074                           	psect	maintext
  2075  064B                     __pmaintext:	
  2076 ;;
  2077 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2078 ;;
  2079 ;; *************** function _main *****************
  2080 ;; Defined at:
  2081 ;;		line 10 in file "main.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      char 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : B1F/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2095 ;;      Params:         0       0       0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0       0
  2098 ;;      Totals:         0       0       0       0       0       0
  2099 ;;Total ram usage:        0 bytes
  2100 ;; Hardware stack levels required when called:    9
  2101 ;; This function calls:
  2102 ;;		_Basic_Init
  2103 ;;		_Buzer_Init
  2104 ;;		_DAC_Initialize
  2105 ;;		_LCD_CursorPosition
  2106 ;;		_LCD_Init
  2107 ;;		_Timer1_Init
  2108 ;;		_xprintf
  2109 ;; This function is called by:
  2110 ;;		Startup code after reset
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           
  2115                           ;psect for function _main
  2116  064B                     _main:	
  2117                           
  2118                           ;main.c: 12: Basic_Init();
  2119                           
  2120                           ;incstack = 0
  2121                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2122  064B  3186  26F9  3186   	fcall	_Basic_Init
  2123                           
  2124                           ;main.c: 13: LCD_Init();
  2125  064E  3183  2350  3186   	fcall	_LCD_Init
  2126                           
  2127                           ;main.c: 14: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  2128  0651  3065               	movlw	low _LCD_Put
  2129  0652  0020               	movlb	0	; select bank0
  2130  0653  00E2               	movwf	_xfunc_out
  2131  0654  3007               	movlw	high _LCD_Put
  2132  0655  00E3               	movwf	_xfunc_out+1
  2133                           
  2134                           ;main.c: 15: Timer1_Init();
  2135  0656  3186  26CB  3186   	fcall	_Timer1_Init
  2136                           
  2137                           ;main.c: 16: TMR1ON = 1;;
  2138  0659  0020               	movlb	0	; select bank0
  2139  065A  1418               	bsf	24,0	;volatile
  2140                           
  2141                           ;main.c: 17: Buzer_Init();
  2142  065B  3186  266F  3186   	fcall	_Buzer_Init
  2143                           
  2144                           ;main.c: 18: DAC_Initialize();
  2145  065E  3186  2691  3186   	fcall	_DAC_Initialize
  2146  0661                     l3691:	
  2147                           ;main.c: 20: while(1)
  2148                           
  2149                           
  2150                           ;main.c: 21: {
  2151                           ;main.c: 22: LCD_CursorPosition(0,0);
  2152  0661  01F5               	clrf	LCD_CursorPosition@ty
  2153  0662  3000               	movlw	0
  2154  0663  3186  26E4  3186   	fcall	_LCD_CursorPosition
  2155                           
  2156                           ;main.c: 23: xprintf("Hellow World");
  2157  0666  30F9               	movlw	low (STR_1| (0+32768))
  2158  0667  0020               	movlb	0	; select bank0
  2159  0668  00D5               	movwf	xprintf@fmt
  2160  0669  3085               	movlw	high (STR_1| (0+32768))
  2161  066A  00D6               	movwf	xprintf@fmt+1
  2162  066B  3187  2721  3186   	fcall	_xprintf
  2163  066E  2E61               	goto	l3691
  2164  066F                     __end_of_main:	
  2165                           ;main.c: 24: }
  2166                           ;main.c: 26: return 0;
  2167                           ;	Return value of _main is never used
  2168                           
  2169                           
  2170                           	psect	text1
  2171  0721                     __ptext1:	
  2172 ;; *************** function _xprintf *****************
  2173 ;; Defined at:
  2174 ;;		line 165 in file "xprintf.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  2177 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  2178 ;;		 -> STR_1(13), 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  arp             1   60[BANK0 ] PTR void [1]
  2181 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2191 ;;      Params:         0       6       0       0       0       0
  2192 ;;      Locals:         0       1       0       0       0       0
  2193 ;;      Temps:          0       1       0       0       0       0
  2194 ;;      Totals:         0       8       0       0       0       0
  2195 ;;Total ram usage:        8 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    8
  2198 ;; This function calls:
  2199 ;;		_xvprintf
  2200 ;; This function is called by:
  2201 ;;		_main
  2202 ;;		_put_dump
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _xprintf
  2208  0721                     _xprintf:	
  2209                           
  2210                           ;xprintf.c: 170: va_list arp;
  2211                           ;xprintf.c: 173: *arp = __va_start();
  2212                           
  2213                           ;incstack = 0
  2214                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2215  0721  3057               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  2216  0722  0020               	movlb	0	; select bank0
  2217  0723  00DB               	movwf	??_xprintf
  2218  0724  085B               	movf	??_xprintf,w
  2219  0725  00DC               	movwf	xprintf@arp
  2220                           
  2221                           ;xprintf.c: 174: xvprintf(fmt, arp);
  2222  0726  0856               	movf	xprintf@fmt+1,w
  2223  0727  00A6               	movwf	xvprintf@fmt+1
  2224  0728  0855               	movf	xprintf@fmt,w
  2225  0729  00A5               	movwf	xvprintf@fmt
  2226  072A  305C               	movlw	(low (xprintf@arp| 0))& (0+255)
  2227  072B  00DB               	movwf	??_xprintf
  2228  072C  085B               	movf	??_xprintf,w
  2229  072D  00A7               	movwf	xvprintf@arp
  2230  072E  3180  2029         	fcall	_xvprintf
  2231  0730  0008               	return
  2232  0731                     __end_of_xprintf:	
  2233                           
  2234                           	psect	text2
  2235  0029                     __ptext2:	
  2236 ;; *************** function _xvprintf *****************
  2237 ;; Defined at:
  2238 ;;		line 88 in file "xprintf.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  fmt             2    5[BANK0 ] PTR const unsigned char 
  2241 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  2242 ;;		 -> STR_1(13), 
  2243 ;;  arp             1    7[BANK0 ] PTR PTR void 
  2244 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  s              16   12[BANK0 ] unsigned char [16]
  2247 ;;  v               4   43[BANK0 ] unsigned long 
  2248 ;;  i               2   49[BANK0 ] unsigned int 
  2249 ;;  f               2   47[BANK0 ] unsigned int 
  2250 ;;  j               2   41[BANK0 ] unsigned int 
  2251 ;;  w               2   39[BANK0 ] unsigned int 
  2252 ;;  r               2   37[BANK0 ] unsigned int 
  2253 ;;  c               1   52[BANK0 ] unsigned char 
  2254 ;;  d               1   51[BANK0 ] unsigned char 
  2255 ;;  p               1   36[BANK0 ] PTR unsigned char 
  2256 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2266 ;;      Params:         0       3       0       0       0       0
  2267 ;;      Locals:         0      41       0       0       0       0
  2268 ;;      Temps:          0       4       0       0       0       0
  2269 ;;      Totals:         0      48       0       0       0       0
  2270 ;;Total ram usage:       48 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    7
  2273 ;; This function calls:
  2274 ;;		___lldiv
  2275 ;;		___llmod
  2276 ;;		___wmul
  2277 ;;		_xputc
  2278 ;;		_xputs
  2279 ;; This function is called by:
  2280 ;;		_xprintf
  2281 ;;		_xsprintf
  2282 ;;		_xfprintf
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _xvprintf
  2288  0029                     _xvprintf:	
  2289  0029                     l123:	
  2290                           ;incstack = 0
  2291                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2292                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  2293                           ;xprintf.c: 94: unsigned long v;
  2294                           ;xprintf.c: 95: char s[16], c, d, *p;
  2295                           ;xprintf.c: 98: for (;;) {
  2296                           
  2297                           
  2298                           ;xprintf.c: 99: c = *fmt++;
  2299  0029  0020               	movlb	0	; select bank0
  2300  002A  0825               	movf	xvprintf@fmt,w
  2301  002B  0084               	movwf	4
  2302  002C  0826               	movf	xvprintf@fmt+1,w
  2303  002D  0085               	movwf	5
  2304  002E  0800               	movf	0,w	;code access
  2305  002F  00A8               	movwf	??_xvprintf
  2306  0030  0828               	movf	??_xvprintf,w
  2307  0031  00D4               	movwf	xvprintf@c
  2308  0032  3001               	movlw	1
  2309  0033  07A5               	addwf	xvprintf@fmt,f
  2310  0034  3000               	movlw	0
  2311  0035  3DA6               	addwfc	xvprintf@fmt+1,f
  2312                           
  2313                           ;xprintf.c: 100: if (!c) break;
  2314  0036  0854               	movf	xvprintf@c,w
  2315  0037  1903               	btfsc	3,2
  2316  0038  0008               	return
  2317                           
  2318                           ;xprintf.c: 101: if (c != '%') {
  2319  0039  3025               	movlw	37
  2320  003A  0654               	xorwf	xvprintf@c,w
  2321  003B  1903               	btfsc	3,2
  2322  003C  2842               	goto	l3487
  2323                           
  2324                           ;xprintf.c: 102: xputc(c); continue;
  2325  003D  0854               	movf	xvprintf@c,w
  2326  003E  3185  25A1  3180   	fcall	_xputc
  2327  0041  2829               	goto	l123
  2328  0042                     l3487:	
  2329                           
  2330                           ;xprintf.c: 103: }
  2331                           ;xprintf.c: 104: f = 0;
  2332  0042  0020               	movlb	0	; select bank0
  2333  0043  01CF               	clrf	xvprintf@f
  2334  0044  01D0               	clrf	xvprintf@f+1
  2335                           
  2336                           ;xprintf.c: 105: c = *fmt++;
  2337  0045  0825               	movf	xvprintf@fmt,w
  2338  0046  0084               	movwf	4
  2339  0047  0826               	movf	xvprintf@fmt+1,w
  2340  0048  0085               	movwf	5
  2341  0049  0800               	movf	0,w	;code access
  2342  004A  00A8               	movwf	??_xvprintf
  2343  004B  0828               	movf	??_xvprintf,w
  2344  004C  00D4               	movwf	xvprintf@c
  2345  004D  3001               	movlw	1
  2346  004E  07A5               	addwf	xvprintf@fmt,f
  2347  004F  3000               	movlw	0
  2348  0050  3DA6               	addwfc	xvprintf@fmt+1,f
  2349                           
  2350                           ;xprintf.c: 106: if (c == '0') {
  2351  0051  3030               	movlw	48
  2352  0052  0654               	xorwf	xvprintf@c,w
  2353  0053  1D03               	btfss	3,2
  2354  0054  2857               	goto	l3501
  2355                           
  2356                           ;xprintf.c: 107: f = 1; c = *fmt++;
  2357  0055  3001               	movlw	1
  2358  0056  285C               	goto	L6
  2359  0057                     l3501:	
  2360                           ;xprintf.c: 108: } else {
  2361                           
  2362                           
  2363                           ;xprintf.c: 109: if (c == '-') {
  2364  0057  302D               	movlw	45
  2365  0058  0654               	xorwf	xvprintf@c,w
  2366  0059  1D03               	btfss	3,2
  2367  005A  286B               	goto	l3509
  2368                           
  2369                           ;xprintf.c: 110: f = 2; c = *fmt++;
  2370  005B  3002               	movlw	2
  2371  005C                     L6:	
  2372  005C  00CF               	movwf	xvprintf@f
  2373  005D  3000               	movlw	0
  2374  005E  00D0               	movwf	xvprintf@f+1
  2375  005F  0825               	movf	xvprintf@fmt,w
  2376  0060  0084               	movwf	4
  2377  0061  0826               	movf	xvprintf@fmt+1,w
  2378  0062  0085               	movwf	5
  2379  0063  0800               	movf	0,w	;code access
  2380  0064  00A8               	movwf	??_xvprintf
  2381  0065  0828               	movf	??_xvprintf,w
  2382  0066  00D4               	movwf	xvprintf@c
  2383  0067  3001               	movlw	1
  2384  0068  07A5               	addwf	xvprintf@fmt,f
  2385  0069  3000               	movlw	0
  2386  006A  3DA6               	addwfc	xvprintf@fmt+1,f
  2387  006B                     l3509:	
  2388                           
  2389                           ;xprintf.c: 111: }
  2390                           ;xprintf.c: 112: }
  2391                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  2392  006B  01C7               	clrf	xvprintf@w
  2393  006C  01C8               	clrf	xvprintf@w+1
  2394  006D  2895               	goto	l3517
  2395  006E                     l3511:	
  2396                           
  2397                           ;xprintf.c: 114: w = w * 10 + c - '0';
  2398  006E  0854               	movf	xvprintf@c,w
  2399  006F  00A8               	movwf	??_xvprintf
  2400  0070  01A9               	clrf	??_xvprintf+1
  2401  0071  0848               	movf	xvprintf@w+1,w
  2402  0072  00F3               	movwf	___wmul@multiplier+1
  2403  0073  0847               	movf	xvprintf@w,w
  2404  0074  00F2               	movwf	___wmul@multiplier
  2405  0075  300A               	movlw	10
  2406  0076  00F4               	movwf	___wmul@multiplicand
  2407  0077  3000               	movlw	0
  2408  0078  00F5               	movwf	___wmul@multiplicand+1
  2409  0079  3186  26B0  3180   	fcall	___wmul
  2410  007C  0020               	movlb	0	; select bank0
  2411  007D  0828               	movf	??_xvprintf,w
  2412  007E  0772               	addwf	?___wmul,w
  2413  007F  00AA               	movwf	??_xvprintf+2
  2414  0080  0829               	movf	??_xvprintf+1,w
  2415  0081  3D73               	addwfc	?___wmul+1,w
  2416  0082  00AB               	movwf	??_xvprintf+3
  2417  0083  082A               	movf	??_xvprintf+2,w
  2418  0084  3ED0               	addlw	208
  2419  0085  00C7               	movwf	xvprintf@w
  2420  0086  30FF               	movlw	255
  2421  0087  3D2B               	addwfc	??_xvprintf+3,w
  2422  0088  00C8               	movwf	xvprintf@w+1
  2423  0089  0825               	movf	xvprintf@fmt,w
  2424  008A  0084               	movwf	4
  2425  008B  0826               	movf	xvprintf@fmt+1,w
  2426  008C  0085               	movwf	5
  2427  008D  0800               	movf	0,w	;code access
  2428  008E  00A8               	movwf	??_xvprintf
  2429  008F  0828               	movf	??_xvprintf,w
  2430  0090  00D4               	movwf	xvprintf@c
  2431  0091  3001               	movlw	1
  2432  0092  07A5               	addwf	xvprintf@fmt,f
  2433  0093  3000               	movlw	0
  2434  0094  3DA6               	addwfc	xvprintf@fmt+1,f
  2435  0095                     l3517:	
  2436  0095  3030               	movlw	48
  2437  0096  0254               	subwf	xvprintf@c,w
  2438  0097  1C03               	skipc
  2439  0098  289D               	goto	l3521
  2440  0099  303A               	movlw	58
  2441  009A  0254               	subwf	xvprintf@c,w
  2442  009B  1C03               	skipc
  2443  009C  286E               	goto	l3511
  2444  009D                     l3521:	
  2445                           
  2446                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  2447  009D  306C               	movlw	108
  2448  009E  0654               	xorwf	xvprintf@c,w
  2449  009F  1903               	btfsc	3,2
  2450  00A0  28A5               	goto	l138
  2451  00A1  304C               	movlw	76
  2452  00A2  0654               	xorwf	xvprintf@c,w
  2453  00A3  1D03               	btfss	3,2
  2454  00A4  28B2               	goto	l3529
  2455  00A5                     l138:	
  2456                           
  2457                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  2458  00A5  154F               	bsf	xvprintf@f,2
  2459  00A6  0825               	movf	xvprintf@fmt,w
  2460  00A7  0084               	movwf	4
  2461  00A8  0826               	movf	xvprintf@fmt+1,w
  2462  00A9  0085               	movwf	5
  2463  00AA  0800               	movf	0,w	;code access
  2464  00AB  00A8               	movwf	??_xvprintf
  2465  00AC  0828               	movf	??_xvprintf,w
  2466  00AD  00D4               	movwf	xvprintf@c
  2467  00AE  3001               	movlw	1
  2468  00AF  07A5               	addwf	xvprintf@fmt,f
  2469  00B0  3000               	movlw	0
  2470  00B1  3DA6               	addwfc	xvprintf@fmt+1,f
  2471  00B2                     l3529:	
  2472                           
  2473                           ;xprintf.c: 117: }
  2474                           ;xprintf.c: 118: if (!c) break;
  2475  00B2  0854               	movf	xvprintf@c,w
  2476  00B3  1903               	btfsc	3,2
  2477  00B4  0008               	return
  2478                           
  2479                           ;xprintf.c: 119: d = c;
  2480  00B5  0854               	movf	xvprintf@c,w
  2481  00B6  00A8               	movwf	??_xvprintf
  2482  00B7  0828               	movf	??_xvprintf,w
  2483  00B8  00D3               	movwf	xvprintf@d
  2484                           
  2485                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  2486  00B9  3061               	movlw	97
  2487  00BA  0253               	subwf	xvprintf@d,w
  2488  00BB  1C03               	skipc
  2489  00BC  2928               	goto	l3571
  2490  00BD  3020               	movlw	32
  2491  00BE  02D3               	subwf	xvprintf@d,f
  2492                           
  2493                           ;xprintf.c: 121: switch (d) {
  2494  00BF  2928               	goto	l3571
  2495  00C0                     l3537:	
  2496                           ;xprintf.c: 122: case 'S' :
  2497                           
  2498                           
  2499                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  2500  00C0  0827               	movf	xvprintf@arp,w
  2501  00C1  0086               	movwf	6
  2502  00C2  0187               	clrf	7
  2503  00C3  3F40               	moviw [0]fsr1
  2504  00C4  0084               	movwf	4
  2505  00C5  0185               	clrf	5
  2506  00C6  0A81               	incf	1,f
  2507  00C7  0800               	movf	0,w
  2508  00C8  00A8               	movwf	??_xvprintf
  2509  00C9  0828               	movf	??_xvprintf,w
  2510  00CA  00C4               	movwf	xvprintf@p
  2511                           
  2512                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  2513  00CB  01C9               	clrf	xvprintf@j
  2514  00CC  01CA               	clrf	xvprintf@j+1
  2515  00CD                     l3543:	
  2516  00CD  0849               	movf	xvprintf@j,w
  2517  00CE  0744               	addwf	xvprintf@p,w
  2518  00CF  00A8               	movwf	??_xvprintf
  2519  00D0  0828               	movf	??_xvprintf,w
  2520  00D1  0086               	movwf	6
  2521  00D2  0187               	clrf	7
  2522  00D3  0801               	movf	1,w
  2523  00D4  1903               	btfsc	3,2
  2524  00D5  28DF               	goto	l3547
  2525  00D6  3001               	movlw	1
  2526  00D7  07C9               	addwf	xvprintf@j,f
  2527  00D8  3000               	movlw	0
  2528  00D9  3DCA               	addwfc	xvprintf@j+1,f
  2529  00DA  28CD               	goto	l3543
  2530  00DB                     l3545:	
  2531                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  2532                           
  2533  00DB  3020               	movlw	32
  2534  00DC  3185  25A1  3180   	fcall	_xputc
  2535  00DF                     l3547:	
  2536  00DF  0020               	movlb	0	; select bank0
  2537  00E0  18CF               	btfsc	xvprintf@f,1
  2538  00E1  28F1               	goto	l3551
  2539  00E2  084A               	movf	xvprintf@j+1,w
  2540  00E3  00A9               	movwf	??_xvprintf+1
  2541  00E4  0849               	movf	xvprintf@j,w
  2542  00E5  00A8               	movwf	??_xvprintf
  2543  00E6  0AC9               	incf	xvprintf@j,f
  2544  00E7  1903               	skipnz
  2545  00E8  0ACA               	incf	xvprintf@j+1,f
  2546  00E9  0848               	movf	xvprintf@w+1,w
  2547  00EA  0229               	subwf	??_xvprintf+1,w
  2548  00EB  1D03               	skipz
  2549  00EC  28EF               	goto	u3585
  2550  00ED  0847               	movf	xvprintf@w,w
  2551  00EE  0228               	subwf	??_xvprintf,w
  2552  00EF                     u3585:	
  2553  00EF  1C03               	skipc
  2554  00F0  28DB               	goto	l3545
  2555  00F1                     l3551:	
  2556                           
  2557                           ;xprintf.c: 126: xputs(p);
  2558  00F1  0844               	movf	xvprintf@p,w
  2559  00F2  3187  270E  3180   	fcall	_xputs
  2560  00F5                     l3555:	
  2561                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  2562                           
  2563  00F5  0020               	movlb	0	; select bank0
  2564  00F6  084A               	movf	xvprintf@j+1,w
  2565  00F7  00A9               	movwf	??_xvprintf+1
  2566  00F8  0849               	movf	xvprintf@j,w
  2567  00F9  00A8               	movwf	??_xvprintf
  2568  00FA  0AC9               	incf	xvprintf@j,f
  2569  00FB  1903               	skipnz
  2570  00FC  0ACA               	incf	xvprintf@j+1,f
  2571  00FD  0848               	movf	xvprintf@w+1,w
  2572  00FE  0229               	subwf	??_xvprintf+1,w
  2573  00FF  1D03               	skipz
  2574  0100  2903               	goto	u3595
  2575  0101  0847               	movf	xvprintf@w,w
  2576  0102  0228               	subwf	??_xvprintf,w
  2577  0103                     u3595:	
  2578  0103  1803               	btfsc	3,0
  2579  0104  2829               	goto	l123
  2580  0105  3020               	movlw	32
  2581  0106  3185  25A1  3180   	fcall	_xputc
  2582  0109  28F5               	goto	l3555
  2583  010A                     l3557:	
  2584                           ;xprintf.c: 129: case 'C' :
  2585                           
  2586                           ;xprintf.c: 128: continue;
  2587                           
  2588                           
  2589                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  2590  010A  0827               	movf	xvprintf@arp,w
  2591  010B  0086               	movwf	6
  2592  010C  0187               	clrf	7
  2593  010D  0801               	movf	1,w
  2594  010E  0084               	movwf	4
  2595  010F  0185               	clrf	5
  2596  0110  3002               	movlw	2
  2597  0111  0781               	addwf	1,f
  2598  0112  0800               	movf	0,w
  2599  0113  3185  25A1  3180   	fcall	_xputc
  2600  0116  2829               	goto	l123
  2601  0117                     l3559:	
  2602                           ;xprintf.c: 131: case 'B' :
  2603                           
  2604                           
  2605                           ;xprintf.c: 132: r = 2; break;
  2606  0117  3002               	movlw	2
  2607  0118  0020               	movlb	0	; select bank0
  2608  0119  291F               	goto	L3
  2609  011A                     l3561:	
  2610                           ;xprintf.c: 133: case 'O' :
  2611                           
  2612                           
  2613                           ;xprintf.c: 134: r = 8; break;
  2614  011A  3008               	movlw	8
  2615  011B  291F               	goto	L3
  2616  011C                     l3563:	
  2617                           ;xprintf.c: 135: case 'D' :
  2618                           
  2619                           
  2620                           ;xprintf.c: 136: case 'U' :
  2621                           ;xprintf.c: 137: r = 10; break;
  2622  011C  300A               	movlw	10
  2623  011D  291F               	goto	L3
  2624  011E                     l3565:	
  2625                           ;xprintf.c: 138: case 'X' :
  2626                           
  2627                           
  2628                           ;xprintf.c: 139: r = 16; break;
  2629  011E  3010               	movlw	16
  2630  011F                     L3:	
  2631  011F  00C5               	movwf	xvprintf@r
  2632  0120  3000               	movlw	0
  2633  0121  00C6               	movwf	xvprintf@r+1
  2634  0122  2940               	goto	l156
  2635  0123                     l3567:	
  2636                           ;xprintf.c: 140: default:
  2637                           
  2638                           
  2639                           ;xprintf.c: 141: xputc(c); continue;
  2640  0123  0854               	movf	xvprintf@c,w
  2641  0124  3185  25A1  3180   	fcall	_xputc
  2642  0127  2829               	goto	l123
  2643  0128                     l3571:	
  2644                           ;xprintf.c: 142: }
  2645                           
  2646  0128  0020               	movlb	0	; select bank0
  2647  0129  0853               	movf	xvprintf@d,w
  2648                           
  2649                           ; Switch size 1, requested type "space"
  2650                           ; Number of cases is 7, Range of values is 66 to 88
  2651                           ; switch strategies available:
  2652                           ; Name         Instructions Cycles
  2653                           ; simple_byte           22    12 (average)
  2654                           ; direct_byte           55     9 (fixed)
  2655                           ; jumptable            263     9 (fixed)
  2656                           ;	Chosen strategy is simple_byte
  2657  012A  3A42               	xorlw	66	; case 66
  2658  012B  1903               	skipnz
  2659  012C  2917               	goto	l3559
  2660  012D  3A01               	xorlw	1	; case 67
  2661  012E  1903               	skipnz
  2662  012F  290A               	goto	l3557
  2663  0130  3A07               	xorlw	7	; case 68
  2664  0131  1903               	skipnz
  2665  0132  291C               	goto	l3563
  2666  0133  3A0B               	xorlw	11	; case 79
  2667  0134  1903               	skipnz
  2668  0135  291A               	goto	l3561
  2669  0136  3A1C               	xorlw	28	; case 83
  2670  0137  1903               	skipnz
  2671  0138  28C0               	goto	l3537
  2672  0139  3A06               	xorlw	6	; case 85
  2673  013A  1903               	skipnz
  2674  013B  291C               	goto	l3563
  2675  013C  3A0D               	xorlw	13	; case 88
  2676  013D  1903               	skipnz
  2677  013E  291E               	goto	l3565
  2678  013F  2923               	goto	l3567
  2679  0140                     l156:	
  2680                           
  2681                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  2682  0140  0020               	movlb	0	; select bank0
  2683  0141  194F               	btfsc	xvprintf@f,2
  2684  0142  2978               	goto	l3581
  2685  0143  3044               	movlw	68
  2686  0144  0653               	xorwf	xvprintf@d,w
  2687  0145  1903               	btfsc	3,2
  2688  0146  295A               	goto	l3577
  2689  0147  0827               	movf	xvprintf@arp,w
  2690  0148  0086               	movwf	6
  2691  0149  0187               	clrf	7
  2692  014A  0801               	movf	1,w
  2693  014B  0084               	movwf	4
  2694  014C  0185               	clrf	5
  2695  014D  3002               	movlw	2
  2696  014E  0781               	addwf	1,f
  2697  014F  3F00               	moviw [0]fsr0
  2698  0150  00A8               	movwf	??_xvprintf
  2699  0151  3F01               	moviw [1]fsr0
  2700  0152  00A9               	movwf	??_xvprintf+1
  2701  0153  0828               	movf	??_xvprintf,w
  2702  0154  00BC               	movwf	_xvprintf$177
  2703  0155  0829               	movf	??_xvprintf+1,w
  2704  0156  00BD               	movwf	_xvprintf$177+1
  2705  0157  01BE               	clrf	_xvprintf$177+2
  2706  0158  01BF               	clrf	_xvprintf$177+3
  2707  0159  296F               	goto	l3579
  2708  015A                     l3577:	
  2709  015A  0827               	movf	xvprintf@arp,w
  2710  015B  0086               	movwf	6
  2711  015C  0187               	clrf	7
  2712  015D  0801               	movf	1,w
  2713  015E  0084               	movwf	4
  2714  015F  0185               	clrf	5
  2715  0160  3002               	movlw	2
  2716  0161  0781               	addwf	1,f
  2717  0162  3F00               	moviw [0]fsr0
  2718  0163  00A8               	movwf	??_xvprintf
  2719  0164  3F01               	moviw [1]fsr0
  2720  0165  00A9               	movwf	??_xvprintf+1
  2721  0166  0828               	movf	??_xvprintf,w
  2722  0167  00BC               	movwf	_xvprintf$177
  2723  0168  0829               	movf	??_xvprintf+1,w
  2724  0169  00BD               	movwf	_xvprintf$177+1
  2725  016A  0D89               	rlf	9,f
  2726  016B  3B89               	subwfb	9,f
  2727  016C  0989               	comf	9,f
  2728  016D  00BE               	movwf	_xvprintf$177+2
  2729  016E  00BF               	movwf	_xvprintf$177+3
  2730  016F                     l3579:	
  2731  016F  083F               	movf	_xvprintf$177+3,w
  2732  0170  00CE               	movwf	xvprintf@v+3
  2733  0171  083E               	movf	_xvprintf$177+2,w
  2734  0172  00CD               	movwf	xvprintf@v+2
  2735  0173  083D               	movf	_xvprintf$177+1,w
  2736  0174  00CC               	movwf	xvprintf@v+1
  2737  0175  083C               	movf	_xvprintf$177,w
  2738  0176  00CB               	movwf	xvprintf@v
  2739  0177  2988               	goto	l3583
  2740  0178                     l3581:	
  2741  0178  0827               	movf	xvprintf@arp,w
  2742  0179  0086               	movwf	6
  2743  017A  0187               	clrf	7
  2744  017B  0801               	movf	1,w
  2745  017C  0084               	movwf	4
  2746  017D  0185               	clrf	5
  2747  017E  3004               	movlw	4
  2748  017F  0781               	addwf	1,f
  2749  0180  3F00               	moviw [0]fsr0
  2750  0181  00CB               	movwf	xvprintf@v
  2751  0182  3F01               	moviw [1]fsr0
  2752  0183  00CC               	movwf	xvprintf@v+1
  2753  0184  3F02               	moviw [2]fsr0
  2754  0185  00CD               	movwf	xvprintf@v+2
  2755  0186  3F03               	moviw [3]fsr0
  2756  0187  00CE               	movwf	xvprintf@v+3
  2757  0188                     l3583:	
  2758                           
  2759                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  2760  0188  3044               	movlw	68
  2761  0189  0653               	xorwf	xvprintf@d,w
  2762  018A  1903               	btfsc	3,2
  2763  018B  1FCE               	btfss	xvprintf@v+3,7
  2764  018C  2999               	goto	l3589
  2765                           
  2766                           ;xprintf.c: 147: v = 0 - v;
  2767  018D  09CB               	comf	xvprintf@v,f
  2768  018E  09CC               	comf	xvprintf@v+1,f
  2769  018F  09CD               	comf	xvprintf@v+2,f
  2770  0190  09CE               	comf	xvprintf@v+3,f
  2771  0191  0ACB               	incf	xvprintf@v,f
  2772  0192  1903               	skipnz
  2773  0193  0ACC               	incf	xvprintf@v+1,f
  2774  0194  1903               	skipnz
  2775  0195  0ACD               	incf	xvprintf@v+2,f
  2776  0196  1903               	skipnz
  2777  0197  0ACE               	incf	xvprintf@v+3,f
  2778                           
  2779                           ;xprintf.c: 148: f |= 8;
  2780  0198  15CF               	bsf	xvprintf@f,3
  2781  0199                     l3589:	
  2782                           
  2783                           ;xprintf.c: 149: }
  2784                           ;xprintf.c: 150: i = 0;
  2785  0199  01D1               	clrf	xvprintf@i
  2786  019A  01D2               	clrf	xvprintf@i+1
  2787  019B                     l3591:	
  2788                           ;xprintf.c: 151: do {
  2789                           
  2790                           
  2791                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  2792  019B  0845               	movf	xvprintf@r,w
  2793  019C  00F2               	movwf	___llmod@divisor
  2794  019D  0846               	movf	xvprintf@r+1,w
  2795  019E  00F3               	movwf	___llmod@divisor+1
  2796  019F  01F4               	clrf	___llmod@divisor+2
  2797  01A0  01F5               	clrf	___llmod@divisor+3
  2798  01A1  084E               	movf	xvprintf@v+3,w
  2799  01A2  00F9               	movwf	___llmod@dividend+3
  2800  01A3  084D               	movf	xvprintf@v+2,w
  2801  01A4  00F8               	movwf	___llmod@dividend+2
  2802  01A5  084C               	movf	xvprintf@v+1,w
  2803  01A6  00F7               	movwf	___llmod@dividend+1
  2804  01A7  084B               	movf	xvprintf@v,w
  2805  01A8  00F6               	movwf	___llmod@dividend
  2806  01A9  3184  24B4  3180   	fcall	___llmod
  2807  01AC  0872               	movf	?___llmod,w
  2808  01AD  0020               	movlb	0	; select bank0
  2809  01AE  00A8               	movwf	??_xvprintf
  2810  01AF  0828               	movf	??_xvprintf,w
  2811  01B0  00D3               	movwf	xvprintf@d
  2812  01B1  0845               	movf	xvprintf@r,w
  2813  01B2  00F2               	movwf	___lldiv@divisor
  2814  01B3  0846               	movf	xvprintf@r+1,w
  2815  01B4  00F3               	movwf	___lldiv@divisor+1
  2816  01B5  01F4               	clrf	___lldiv@divisor+2
  2817  01B6  01F5               	clrf	___lldiv@divisor+3
  2818  01B7  084E               	movf	xvprintf@v+3,w
  2819  01B8  00F9               	movwf	___lldiv@dividend+3
  2820  01B9  084D               	movf	xvprintf@v+2,w
  2821  01BA  00F8               	movwf	___lldiv@dividend+2
  2822  01BB  084C               	movf	xvprintf@v+1,w
  2823  01BC  00F7               	movwf	___lldiv@dividend+1
  2824  01BD  084B               	movf	xvprintf@v,w
  2825  01BE  00F6               	movwf	___lldiv@dividend
  2826  01BF  3184  2461  3180   	fcall	___lldiv
  2827  01C2  0875               	movf	?___lldiv+3,w
  2828  01C3  0020               	movlb	0	; select bank0
  2829  01C4  00CE               	movwf	xvprintf@v+3
  2830  01C5  0874               	movf	?___lldiv+2,w
  2831  01C6  00CD               	movwf	xvprintf@v+2
  2832  01C7  0873               	movf	?___lldiv+1,w
  2833  01C8  00CC               	movwf	xvprintf@v+1
  2834  01C9  0872               	movf	?___lldiv,w
  2835  01CA  00CB               	movwf	xvprintf@v
  2836                           
  2837                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  2838  01CB  300A               	movlw	10
  2839  01CC  0253               	subwf	xvprintf@d,w
  2840  01CD  1C03               	skipc
  2841  01CE  29DD               	goto	l3605
  2842  01CF  3078               	movlw	120
  2843  01D0  0654               	xorwf	xvprintf@c,w
  2844  01D1  1903               	btfsc	3,2
  2845  01D2  29D5               	goto	l3601
  2846  01D3  3007               	movlw	7
  2847  01D4  29D6               	goto	L4
  2848  01D5                     l3601:	
  2849  01D5  3027               	movlw	39
  2850  01D6                     L4:	
  2851  01D6  00C0               	movwf	_xvprintf$178
  2852  01D7  3000               	movlw	0
  2853  01D8  00C1               	movwf	_xvprintf$178+1
  2854  01D9  0840               	movf	_xvprintf$178,w
  2855  01DA  00A8               	movwf	??_xvprintf
  2856  01DB  0828               	movf	??_xvprintf,w
  2857  01DC  07D3               	addwf	xvprintf@d,f
  2858  01DD                     l3605:	
  2859                           
  2860                           ;xprintf.c: 154: s[i++] = d + '0';
  2861  01DD  0853               	movf	xvprintf@d,w
  2862  01DE  3E30               	addlw	48
  2863  01DF  00A8               	movwf	??_xvprintf
  2864  01E0  0851               	movf	xvprintf@i,w
  2865  01E1  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  2866  01E2  0086               	movwf	6
  2867  01E3  0187               	clrf	7
  2868  01E4  0828               	movf	??_xvprintf,w
  2869  01E5  0081               	movwf	1
  2870  01E6  3001               	movlw	1
  2871  01E7  07D1               	addwf	xvprintf@i,f
  2872  01E8  3000               	movlw	0
  2873  01E9  3DD2               	addwfc	xvprintf@i+1,f
  2874                           
  2875                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  2876  01EA  084E               	movf	xvprintf@v+3,w
  2877  01EB  044D               	iorwf	xvprintf@v+2,w
  2878  01EC  044C               	iorwf	xvprintf@v+1,w
  2879  01ED  044B               	iorwf	xvprintf@v,w
  2880  01EE  1903               	skipnz
  2881  01EF  29F7               	goto	l179
  2882  01F0  3000               	movlw	0
  2883  01F1  0252               	subwf	xvprintf@i+1,w
  2884  01F2  3010               	movlw	16
  2885  01F3  1903               	skipnz
  2886  01F4  0251               	subwf	xvprintf@i,w
  2887  01F5  1C03               	skipc
  2888  01F6  299B               	goto	l3591
  2889  01F7                     l179:	
  2890                           
  2891                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  2892  01F7  1DCF               	btfss	xvprintf@f,3
  2893  01F8  2A05               	goto	l3617
  2894  01F9  302D               	movlw	45
  2895  01FA  00A8               	movwf	??_xvprintf
  2896  01FB  0851               	movf	xvprintf@i,w
  2897  01FC  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  2898  01FD  0086               	movwf	6
  2899  01FE  0187               	clrf	7
  2900  01FF  0828               	movf	??_xvprintf,w
  2901  0200  0081               	movwf	1
  2902  0201  3001               	movlw	1
  2903  0202  07D1               	addwf	xvprintf@i,f
  2904  0203  3000               	movlw	0
  2905  0204  3DD2               	addwfc	xvprintf@i+1,f
  2906  0205                     l3617:	
  2907                           
  2908                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  2909  0205  0852               	movf	xvprintf@i+1,w
  2910  0206  00CA               	movwf	xvprintf@j+1
  2911  0207  0851               	movf	xvprintf@i,w
  2912  0208  00C9               	movwf	xvprintf@j
  2913  0209  184F               	btfsc	xvprintf@f,0
  2914  020A  2A0D               	goto	l3623
  2915  020B  3020               	movlw	32
  2916  020C  2A0E               	goto	L5
  2917  020D                     l3623:	
  2918  020D  3030               	movlw	48
  2919  020E                     L5:	
  2920  020E  00C2               	movwf	_xvprintf$179
  2921  020F  3000               	movlw	0
  2922  0210  00C3               	movwf	_xvprintf$179+1
  2923  0211  0842               	movf	_xvprintf$179,w
  2924  0212  00A8               	movwf	??_xvprintf
  2925  0213  0828               	movf	??_xvprintf,w
  2926  0214  00D3               	movwf	xvprintf@d
  2927                           
  2928                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  2929  0215  2A1A               	goto	l3627
  2930  0216                     l3625:	
  2931  0216  0853               	movf	xvprintf@d,w
  2932  0217  3185  25A1  3180   	fcall	_xputc
  2933  021A                     l3627:	
  2934  021A  0020               	movlb	0	; select bank0
  2935  021B  18CF               	btfsc	xvprintf@f,1
  2936  021C  2A2C               	goto	l3631
  2937  021D  084A               	movf	xvprintf@j+1,w
  2938  021E  00A9               	movwf	??_xvprintf+1
  2939  021F  0849               	movf	xvprintf@j,w
  2940  0220  00A8               	movwf	??_xvprintf
  2941  0221  0AC9               	incf	xvprintf@j,f
  2942  0222  1903               	skipnz
  2943  0223  0ACA               	incf	xvprintf@j+1,f
  2944  0224  0848               	movf	xvprintf@w+1,w
  2945  0225  0229               	subwf	??_xvprintf+1,w
  2946  0226  1D03               	skipz
  2947  0227  2A2A               	goto	u3715
  2948  0228  0847               	movf	xvprintf@w,w
  2949  0229  0228               	subwf	??_xvprintf,w
  2950  022A                     u3715:	
  2951  022A  1C03               	skipc
  2952  022B  2A16               	goto	l3625
  2953  022C                     l3631:	
  2954                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  2955                           
  2956  022C  3001               	movlw	1
  2957  022D  02D1               	subwf	xvprintf@i,f
  2958  022E  3000               	movlw	0
  2959  022F  3BD2               	subwfb	xvprintf@i+1,f
  2960  0230  0851               	movf	xvprintf@i,w
  2961  0231  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  2962  0232  0086               	movwf	6
  2963  0233  0187               	clrf	7
  2964  0234  0801               	movf	1,w
  2965  0235  3185  25A1  3180   	fcall	_xputc
  2966  0238  0020               	movlb	0	; select bank0
  2967  0239  0851               	movf	xvprintf@i,w
  2968  023A  0452               	iorwf	xvprintf@i+1,w
  2969  023B  1903               	btfsc	3,2
  2970  023C  2A42               	goto	l3637
  2971  023D  2A2C               	goto	l3631
  2972  023E                     l3635:	
  2973                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  2974                           
  2975  023E  3020               	movlw	32
  2976  023F  3185  25A1  3180   	fcall	_xputc
  2977  0242                     l3637:	
  2978  0242  0020               	movlb	0	; select bank0
  2979  0243  084A               	movf	xvprintf@j+1,w
  2980  0244  00A9               	movwf	??_xvprintf+1
  2981  0245  0849               	movf	xvprintf@j,w
  2982  0246  00A8               	movwf	??_xvprintf
  2983  0247  0AC9               	incf	xvprintf@j,f
  2984  0248  1903               	skipnz
  2985  0249  0ACA               	incf	xvprintf@j+1,f
  2986  024A  0848               	movf	xvprintf@w+1,w
  2987  024B  0229               	subwf	??_xvprintf+1,w
  2988  024C  1D03               	skipz
  2989  024D  2A50               	goto	u3735
  2990  024E  0847               	movf	xvprintf@w,w
  2991  024F  0228               	subwf	??_xvprintf,w
  2992  0250                     u3735:	
  2993  0250  1803               	btfsc	3,0
  2994  0251  2829               	goto	l123
  2995  0252  2A3E               	goto	l3635
  2996  0253                     __end_of_xvprintf:	
  2997                           ;xprintf.c: 161: }
  2998                           
  2999                           
  3000                           	psect	text3
  3001  070E                     __ptext3:	
  3002 ;; *************** function _xputs *****************
  3003 ;; Defined at:
  3004 ;;		line 44 in file "xprintf.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  str             1    wreg     PTR const unsigned char 
  3007 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  str             1    9[COMMON] PTR const unsigned char 
  3010 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3020 ;;      Params:         0       0       0       0       0       0
  3021 ;;      Locals:         1       0       0       0       0       0
  3022 ;;      Temps:          1       0       0       0       0       0
  3023 ;;      Totals:         2       0       0       0       0       0
  3024 ;;Total ram usage:        2 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    6
  3027 ;; This function calls:
  3028 ;;		_xputc
  3029 ;; This function is called by:
  3030 ;;		_xvprintf
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           
  3035                           ;psect for function _xputs
  3036  070E                     _xputs:	
  3037                           
  3038                           ;incstack = 0
  3039                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3040                           ;xputs@str stored from wreg
  3041  070E  00F9               	movwf	xputs@str
  3042  070F                     l2343:	
  3043                           ;xprintf.c: 48: while (*str)
  3044                           
  3045  070F  0879               	movf	xputs@str,w
  3046  0710  0086               	movwf	6
  3047  0711  0187               	clrf	7
  3048  0712  0801               	movf	1,w
  3049  0713  1903               	btfsc	3,2
  3050  0714  0008               	return
  3051                           
  3052                           ;xprintf.c: 49: xputc(*str++);
  3053  0715  0879               	movf	xputs@str,w
  3054  0716  0086               	movwf	6
  3055  0717  0187               	clrf	7
  3056  0718  0801               	movf	1,w
  3057  0719  3185  25A1  3187   	fcall	_xputc
  3058  071C  3001               	movlw	1
  3059  071D  00F8               	movwf	??_xputs
  3060  071E  0878               	movf	??_xputs,w
  3061  071F  07F9               	addwf	xputs@str,f
  3062  0720  2F0F               	goto	l2343
  3063  0721                     __end_of_xputs:	
  3064                           
  3065                           	psect	text4
  3066  05A1                     __ptext4:	
  3067 ;; *************** function _xputc *****************
  3068 ;; Defined at:
  3069 ;;		line 26 in file "xprintf.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  c               1    wreg     unsigned char 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  c               1    7[COMMON] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3083 ;;      Params:         0       0       0       0       0       0
  3084 ;;      Locals:         1       0       0       0       0       0
  3085 ;;      Temps:          1       0       0       0       0       0
  3086 ;;      Totals:         2       0       0       0       0       0
  3087 ;;Total ram usage:        2 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    5
  3090 ;; This function calls:
  3091 ;;		Absolute function
  3092 ;;		_LCD_Put
  3093 ;; This function is called by:
  3094 ;;		_xputs
  3095 ;;		_xvprintf
  3096 ;;		_xfputs
  3097 ;;		_put_dump
  3098 ;;		_xgets
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           
  3103                           ;psect for function _xputc
  3104  05A1                     _xputc:	
  3105                           
  3106                           ;incstack = 0
  3107                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3108                           ;xputc@c stored from wreg
  3109  05A1  00F7               	movwf	xputc@c
  3110  05A2  300A               	movlw	10
  3111  05A3  0677               	xorwf	xputc@c,w
  3112  05A4  1D03               	btfss	3,2
  3113  05A5  2DB0               	goto	l2321
  3114  05A6  3020               	movlw	(low (STR_2| (0+32768)))& (0+255)
  3115  05A7  00F6               	movwf	??_xputc
  3116  05A8  0876               	movf	??_xputc,w
  3117  05A9  00F5               	movwf	LCD_Put@word
  3118  05AA  0020               	movlb	0	; select bank0
  3119  05AB  0863               	movf	_xfunc_out+1,w
  3120  05AC  008A               	movwf	10
  3121  05AD  0862               	movf	_xfunc_out,w
  3122  05AE  000A               	callw
  3123  05AF  3185               	pagesel	$
  3124  05B0                     l2321:	
  3125                           
  3126                           ;xprintf.c: 30: if (outptr) {
  3127  05B0  087B               	movf	_outptr,w
  3128  05B1  1903               	btfsc	3,2
  3129  05B2  2DBF               	goto	l2329
  3130                           
  3131                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  3132  05B3  0877               	movf	xputc@c,w
  3133  05B4  00F6               	movwf	??_xputc
  3134  05B5  087B               	movf	_outptr,w
  3135  05B6  0086               	movwf	6
  3136  05B7  0187               	clrf	7
  3137  05B8  0876               	movf	??_xputc,w
  3138  05B9  0081               	movwf	1
  3139  05BA  3001               	movlw	1
  3140  05BB  00F6               	movwf	??_xputc
  3141  05BC  0876               	movf	??_xputc,w
  3142  05BD  07FB               	addwf	_outptr,f
  3143                           
  3144                           ;xprintf.c: 32: return;
  3145  05BE  0008               	return
  3146  05BF                     l2329:	
  3147                           
  3148                           ;xprintf.c: 33: }
  3149                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  3150  05BF  0020               	movlb	0	; select bank0
  3151  05C0  0862               	movf	_xfunc_out,w
  3152  05C1  0463               	iorwf	_xfunc_out+1,w
  3153  05C2  1903               	btfsc	3,2
  3154  05C3  0008               	return
  3155  05C4  0877               	movf	xputc@c,w
  3156  05C5  00F6               	movwf	??_xputc
  3157  05C6  0876               	movf	??_xputc,w
  3158  05C7  00F5               	movwf	LCD_Put@word
  3159  05C8  0863               	movf	_xfunc_out+1,w
  3160  05C9  008A               	movwf	10
  3161  05CA  0862               	movf	_xfunc_out,w
  3162  05CB  000A               	callw
  3163  05CC  3185               	pagesel	$
  3164  05CD  0008               	return
  3165  05CE                     __end_of_xputc:	
  3166                           
  3167                           	psect	text5
  3168  0765                     __ptext5:	
  3169 ;; *************** function _LCD_Put *****************
  3170 ;; Defined at:
  3171 ;;		line 54 in file "LCD.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  word            1    5[COMMON] char 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, pclath, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3185 ;;      Params:         1       0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0
  3188 ;;      Totals:         1       0       0       0       0       0
  3189 ;;Total ram usage:        1 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    4
  3192 ;; This function calls:
  3193 ;;		_LCD_WriteData
  3194 ;; This function is called by:
  3195 ;;		_main
  3196 ;;		_xputc
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function _LCD_Put
  3202  0765                     _LCD_Put:	
  3203                           
  3204                           ;LCD.c: 56: RA4 = 1;
  3205                           
  3206                           ;incstack = 0
  3207                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  3208  0765  0020               	movlb	0	; select bank0
  3209  0766  160C               	bsf	12,4	;volatile
  3210                           
  3211                           ;LCD.c: 57: LCD_WriteData(word);
  3212  0767  0875               	movf	LCD_Put@word,w
  3213  0768  3184  24F7         	fcall	_LCD_WriteData
  3214  076A  0008               	return
  3215  076B                     __end_of_LCD_Put:	
  3216                           
  3217                           	psect	text6
  3218  06B0                     __ptext6:	
  3219 ;; *************** function ___wmul *****************
  3220 ;; Defined at:
  3221 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  multiplier      2    2[COMMON] unsigned int 
  3224 ;;  multiplicand    2    4[COMMON] unsigned int 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  product         2    6[COMMON] unsigned int 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  2    2[COMMON] unsigned int 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3236 ;;      Params:         4       0       0       0       0       0
  3237 ;;      Locals:         2       0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0
  3239 ;;      Totals:         6       0       0       0       0       0
  3240 ;;Total ram usage:        6 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    3
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_xvprintf
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           
  3251                           ;psect for function ___wmul
  3252  06B0                     ___wmul:	
  3253                           
  3254                           ;incstack = 0
  3255                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3256  06B0  01F6               	clrf	___wmul@product
  3257  06B1  01F7               	clrf	___wmul@product+1
  3258  06B2                     l2519:	
  3259  06B2  1C72               	btfss	___wmul@multiplier,0
  3260  06B3  2EB8               	goto	l811
  3261  06B4  0874               	movf	___wmul@multiplicand,w
  3262  06B5  07F6               	addwf	___wmul@product,f
  3263  06B6  0875               	movf	___wmul@multiplicand+1,w
  3264  06B7  3DF7               	addwfc	___wmul@product+1,f
  3265  06B8                     l811:	
  3266  06B8  3001               	movlw	1
  3267  06B9                     u2015:	
  3268  06B9  35F4               	lslf	___wmul@multiplicand,f
  3269  06BA  0DF5               	rlf	___wmul@multiplicand+1,f
  3270  06BB  0B89               	decfsz	9,f
  3271  06BC  2EB9               	goto	u2015
  3272  06BD  3001               	movlw	1
  3273  06BE                     u2025:	
  3274  06BE  36F3               	lsrf	___wmul@multiplier+1,f
  3275  06BF  0CF2               	rrf	___wmul@multiplier,f
  3276  06C0  0B89               	decfsz	9,f
  3277  06C1  2EBE               	goto	u2025
  3278  06C2  0872               	movf	___wmul@multiplier,w
  3279  06C3  0473               	iorwf	___wmul@multiplier+1,w
  3280  06C4  1D03               	btfss	3,2
  3281  06C5  2EB2               	goto	l2519
  3282  06C6  0877               	movf	___wmul@product+1,w
  3283  06C7  00F3               	movwf	?___wmul+1
  3284  06C8  0876               	movf	___wmul@product,w
  3285  06C9  00F2               	movwf	?___wmul
  3286  06CA  0008               	return
  3287  06CB                     __end_of___wmul:	
  3288                           
  3289                           	psect	text7
  3290  04B4                     __ptext7:	
  3291 ;; *************** function ___llmod *****************
  3292 ;; Defined at:
  3293 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  divisor         4    2[COMMON] unsigned long 
  3296 ;;  dividend        4    6[COMMON] unsigned long 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  counter         1    0[BANK0 ] unsigned char 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  4    2[COMMON] unsigned long 
  3301 ;; Registers used:
  3302 ;;		wreg, status,2, status,0
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3308 ;;      Params:         8       0       0       0       0       0
  3309 ;;      Locals:         0       1       0       0       0       0
  3310 ;;      Temps:          1       0       0       0       0       0
  3311 ;;      Totals:         9       1       0       0       0       0
  3312 ;;Total ram usage:       10 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    3
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_xvprintf
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function ___llmod
  3324  04B4                     ___llmod:	
  3325                           
  3326                           ;incstack = 0
  3327                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3328  04B4  0875               	movf	___llmod@divisor+3,w
  3329  04B5  0474               	iorwf	___llmod@divisor+2,w
  3330  04B6  0473               	iorwf	___llmod@divisor+1,w
  3331  04B7  0472               	iorwf	___llmod@divisor,w
  3332  04B8  1903               	skipnz
  3333  04B9  2CEE               	goto	l3471
  3334  04BA  0020               	movlb	0	; select bank0
  3335  04BB  01A0               	clrf	___llmod@counter
  3336  04BC  0AA0               	incf	___llmod@counter,f
  3337  04BD                     l3461:	
  3338  04BD  1BF5               	btfsc	___llmod@divisor+3,7
  3339  04BE  2CCB               	goto	l3463
  3340  04BF  3001               	movlw	1
  3341  04C0                     u3415:	
  3342  04C0  35F2               	lslf	___llmod@divisor,f
  3343  04C1  0DF3               	rlf	___llmod@divisor+1,f
  3344  04C2  0DF4               	rlf	___llmod@divisor+2,f
  3345  04C3  0DF5               	rlf	___llmod@divisor+3,f
  3346  04C4  0B89               	decfsz	9,f
  3347  04C5  2CC0               	goto	u3415
  3348  04C6  3001               	movlw	1
  3349  04C7  00FA               	movwf	??___llmod
  3350  04C8  087A               	movf	??___llmod,w
  3351  04C9  07A0               	addwf	___llmod@counter,f
  3352  04CA  2CBD               	goto	l3461
  3353  04CB                     l3463:	
  3354  04CB  0875               	movf	___llmod@divisor+3,w
  3355  04CC  0279               	subwf	___llmod@dividend+3,w
  3356  04CD  1D03               	skipz
  3357  04CE  2CD9               	goto	u3435
  3358  04CF  0874               	movf	___llmod@divisor+2,w
  3359  04D0  0278               	subwf	___llmod@dividend+2,w
  3360  04D1  1D03               	skipz
  3361  04D2  2CD9               	goto	u3435
  3362  04D3  0873               	movf	___llmod@divisor+1,w
  3363  04D4  0277               	subwf	___llmod@dividend+1,w
  3364  04D5  1D03               	skipz
  3365  04D6  2CD9               	goto	u3435
  3366  04D7  0872               	movf	___llmod@divisor,w
  3367  04D8  0276               	subwf	___llmod@dividend,w
  3368  04D9                     u3435:	
  3369  04D9  1C03               	skipc
  3370  04DA  2CE3               	goto	l3467
  3371  04DB  0872               	movf	___llmod@divisor,w
  3372  04DC  02F6               	subwf	___llmod@dividend,f
  3373  04DD  0873               	movf	___llmod@divisor+1,w
  3374  04DE  3BF7               	subwfb	___llmod@dividend+1,f
  3375  04DF  0874               	movf	___llmod@divisor+2,w
  3376  04E0  3BF8               	subwfb	___llmod@dividend+2,f
  3377  04E1  0875               	movf	___llmod@divisor+3,w
  3378  04E2  3BF9               	subwfb	___llmod@dividend+3,f
  3379  04E3                     l3467:	
  3380  04E3  3001               	movlw	1
  3381  04E4                     u3445:	
  3382  04E4  36F5               	lsrf	___llmod@divisor+3,f
  3383  04E5  0CF4               	rrf	___llmod@divisor+2,f
  3384  04E6  0CF3               	rrf	___llmod@divisor+1,f
  3385  04E7  0CF2               	rrf	___llmod@divisor,f
  3386  04E8  0B89               	decfsz	9,f
  3387  04E9  2CE4               	goto	u3445
  3388  04EA  3001               	movlw	1
  3389  04EB  02A0               	subwf	___llmod@counter,f
  3390  04EC  1D03               	btfss	3,2
  3391  04ED  2CCB               	goto	l3463
  3392  04EE                     l3471:	
  3393  04EE  0879               	movf	___llmod@dividend+3,w
  3394  04EF  00F5               	movwf	?___llmod+3
  3395  04F0  0878               	movf	___llmod@dividend+2,w
  3396  04F1  00F4               	movwf	?___llmod+2
  3397  04F2  0877               	movf	___llmod@dividend+1,w
  3398  04F3  00F3               	movwf	?___llmod+1
  3399  04F4  0876               	movf	___llmod@dividend,w
  3400  04F5  00F2               	movwf	?___llmod
  3401  04F6  0008               	return
  3402  04F7                     __end_of___llmod:	
  3403                           
  3404                           	psect	text8
  3405  0461                     __ptext8:	
  3406 ;; *************** function ___lldiv *****************
  3407 ;; Defined at:
  3408 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  divisor         4    2[COMMON] unsigned long 
  3411 ;;  dividend        4    6[COMMON] unsigned long 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  quotient        4    0[BANK0 ] unsigned long 
  3414 ;;  counter         1    4[BANK0 ] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  4    2[COMMON] unsigned long 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3424 ;;      Params:         8       0       0       0       0       0
  3425 ;;      Locals:         0       5       0       0       0       0
  3426 ;;      Temps:          1       0       0       0       0       0
  3427 ;;      Totals:         9       5       0       0       0       0
  3428 ;;Total ram usage:       14 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    3
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_xvprintf
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           
  3439                           ;psect for function ___lldiv
  3440  0461                     ___lldiv:	
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3444  0461  3000               	movlw	0
  3445  0462  0020               	movlb	0	; select bank0
  3446  0463  00A3               	movwf	___lldiv@quotient+3
  3447  0464  3000               	movlw	0
  3448  0465  00A2               	movwf	___lldiv@quotient+2
  3449  0466  3000               	movlw	0
  3450  0467  00A1               	movwf	___lldiv@quotient+1
  3451  0468  3000               	movlw	0
  3452  0469  00A0               	movwf	___lldiv@quotient
  3453  046A  0875               	movf	___lldiv@divisor+3,w
  3454  046B  0474               	iorwf	___lldiv@divisor+2,w
  3455  046C  0473               	iorwf	___lldiv@divisor+1,w
  3456  046D  0472               	iorwf	___lldiv@divisor,w
  3457  046E  1903               	skipnz
  3458  046F  2CAB               	goto	l2551
  3459  0470  01A4               	clrf	___lldiv@counter
  3460  0471  0AA4               	incf	___lldiv@counter,f
  3461  0472                     l2537:	
  3462  0472  1BF5               	btfsc	___lldiv@divisor+3,7
  3463  0473  2C80               	goto	l2539
  3464  0474  3001               	movlw	1
  3465  0475                     u2055:	
  3466  0475  35F2               	lslf	___lldiv@divisor,f
  3467  0476  0DF3               	rlf	___lldiv@divisor+1,f
  3468  0477  0DF4               	rlf	___lldiv@divisor+2,f
  3469  0478  0DF5               	rlf	___lldiv@divisor+3,f
  3470  0479  0B89               	decfsz	9,f
  3471  047A  2C75               	goto	u2055
  3472  047B  3001               	movlw	1
  3473  047C  00FA               	movwf	??___lldiv
  3474  047D  087A               	movf	??___lldiv,w
  3475  047E  07A4               	addwf	___lldiv@counter,f
  3476  047F  2C72               	goto	l2537
  3477  0480                     l2539:	
  3478  0480  3001               	movlw	1
  3479  0481                     u2075:	
  3480  0481  35A0               	lslf	___lldiv@quotient,f
  3481  0482  0DA1               	rlf	___lldiv@quotient+1,f
  3482  0483  0DA2               	rlf	___lldiv@quotient+2,f
  3483  0484  0DA3               	rlf	___lldiv@quotient+3,f
  3484  0485  0B89               	decfsz	9,f
  3485  0486  2C81               	goto	u2075
  3486  0487  0875               	movf	___lldiv@divisor+3,w
  3487  0488  0279               	subwf	___lldiv@dividend+3,w
  3488  0489  1D03               	skipz
  3489  048A  2C95               	goto	u2085
  3490  048B  0874               	movf	___lldiv@divisor+2,w
  3491  048C  0278               	subwf	___lldiv@dividend+2,w
  3492  048D  1D03               	skipz
  3493  048E  2C95               	goto	u2085
  3494  048F  0873               	movf	___lldiv@divisor+1,w
  3495  0490  0277               	subwf	___lldiv@dividend+1,w
  3496  0491  1D03               	skipz
  3497  0492  2C95               	goto	u2085
  3498  0493  0872               	movf	___lldiv@divisor,w
  3499  0494  0276               	subwf	___lldiv@dividend,w
  3500  0495                     u2085:	
  3501  0495  1C03               	skipc
  3502  0496  2CA0               	goto	l2547
  3503  0497  0872               	movf	___lldiv@divisor,w
  3504  0498  02F6               	subwf	___lldiv@dividend,f
  3505  0499  0873               	movf	___lldiv@divisor+1,w
  3506  049A  3BF7               	subwfb	___lldiv@dividend+1,f
  3507  049B  0874               	movf	___lldiv@divisor+2,w
  3508  049C  3BF8               	subwfb	___lldiv@dividend+2,f
  3509  049D  0875               	movf	___lldiv@divisor+3,w
  3510  049E  3BF9               	subwfb	___lldiv@dividend+3,f
  3511  049F  1420               	bsf	___lldiv@quotient,0
  3512  04A0                     l2547:	
  3513  04A0  3001               	movlw	1
  3514  04A1                     u2095:	
  3515  04A1  36F5               	lsrf	___lldiv@divisor+3,f
  3516  04A2  0CF4               	rrf	___lldiv@divisor+2,f
  3517  04A3  0CF3               	rrf	___lldiv@divisor+1,f
  3518  04A4  0CF2               	rrf	___lldiv@divisor,f
  3519  04A5  0B89               	decfsz	9,f
  3520  04A6  2CA1               	goto	u2095
  3521  04A7  3001               	movlw	1
  3522  04A8  02A4               	subwf	___lldiv@counter,f
  3523  04A9  1D03               	btfss	3,2
  3524  04AA  2C80               	goto	l2539
  3525  04AB                     l2551:	
  3526  04AB  0823               	movf	___lldiv@quotient+3,w
  3527  04AC  00F5               	movwf	?___lldiv+3
  3528  04AD  0822               	movf	___lldiv@quotient+2,w
  3529  04AE  00F4               	movwf	?___lldiv+2
  3530  04AF  0821               	movf	___lldiv@quotient+1,w
  3531  04B0  00F3               	movwf	?___lldiv+1
  3532  04B1  0820               	movf	___lldiv@quotient,w
  3533  04B2  00F2               	movwf	?___lldiv
  3534  04B3  0008               	return
  3535  04B4                     __end_of___lldiv:	
  3536                           
  3537                           	psect	text9
  3538  06CB                     __ptext9:	
  3539 ;; *************** function _Timer1_Init *****************
  3540 ;; Defined at:
  3541 ;;		line 3 in file "Timer1.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3555 ;;      Params:         0       0       0       0       0       0
  3556 ;;      Locals:         0       0       0       0       0       0
  3557 ;;      Temps:          1       0       0       0       0       0
  3558 ;;      Totals:         1       0       0       0       0       0
  3559 ;;Total ram usage:        1 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:    3
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           
  3570                           ;psect for function _Timer1_Init
  3571  06CB                     _Timer1_Init:	
  3572                           
  3573                           ;Timer1.c: 5: TRISB |= (1<<6);
  3574                           
  3575                           ;incstack = 0
  3576                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  3577  06CB  0021               	movlb	1	; select bank1
  3578  06CC  170D               	bsf	13,6	;volatile
  3579                           
  3580                           ;Timer1.c: 6: ANSELB &= ~(1<<6);
  3581  06CD  30BF               	movlw	191
  3582  06CE  00F2               	movwf	??_Timer1_Init
  3583  06CF  0872               	movf	??_Timer1_Init,w
  3584  06D0  0023               	movlb	3	; select bank3
  3585  06D1  058D               	andwf	13,f	;volatile
  3586                           
  3587                           ;Timer1.c: 8: T1CON |= (0x01<<2);
  3588  06D2  0020               	movlb	0	; select bank0
  3589  06D3  1518               	bsf	24,2	;volatile
  3590                           
  3591                           ;Timer1.c: 9: T1CON &= ~(0x01<<3);
  3592  06D4  30F7               	movlw	247
  3593  06D5  00F2               	movwf	??_Timer1_Init
  3594  06D6  0872               	movf	??_Timer1_Init,w
  3595  06D7  0598               	andwf	24,f	;volatile
  3596                           
  3597                           ;Timer1.c: 10: T1CON |= (0x00<<4);
  3598  06D8  0818               	movf	24,w	;volatile
  3599                           
  3600                           ;Timer1.c: 11: T1CON |= (0x02<<6);
  3601  06D9  1798               	bsf	24,7	;volatile
  3602                           
  3603                           ;Timer1.c: 13: T1GCON = 0x00;
  3604  06DA  0199               	clrf	25	;volatile
  3605                           
  3606                           ;Timer1.c: 15: TMR1 = 0x0000;
  3607  06DB  0196               	clrf	22	;volatile
  3608  06DC  0197               	clrf	23	;volatile
  3609                           
  3610                           ;Timer1.c: 17: TMR1IE = 1;
  3611  06DD  0021               	movlb	1	; select bank1
  3612  06DE  1411               	bsf	17,0	;volatile
  3613                           
  3614                           ;Timer1.c: 18: TMR1IF = 0;
  3615  06DF  0020               	movlb	0	; select bank0
  3616  06E0  1011               	bcf	17,0	;volatile
  3617                           
  3618                           ;Timer1.c: 19: PEIE = 1;
  3619  06E1  170B               	bsf	11,6	;volatile
  3620                           
  3621                           ;Timer1.c: 20: GIE = 1;
  3622  06E2  178B               	bsf	11,7	;volatile
  3623  06E3  0008               	return
  3624  06E4                     __end_of_Timer1_Init:	
  3625                           
  3626                           	psect	text10
  3627  0350                     __ptext10:	
  3628 ;; *************** function _LCD_Init *****************
  3629 ;; Defined at:
  3630 ;;		line 28 in file "LCD.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0, pclath, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3644 ;;      Params:         0       0       0       0       0       0
  3645 ;;      Locals:         0       0       0       0       0       0
  3646 ;;      Temps:          2       0       0       0       0       0
  3647 ;;      Totals:         2       0       0       0       0       0
  3648 ;;Total ram usage:        2 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    5
  3651 ;; This function calls:
  3652 ;;		_LCD_DisplayClear
  3653 ;;		_LCD_WriteData
  3654 ;; This function is called by:
  3655 ;;		_main
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function _LCD_Init
  3661  0350                     _LCD_Init:	
  3662                           
  3663                           ;LCD.c: 30: RA4 = 0;
  3664                           
  3665                           ;incstack = 0
  3666                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3667  0350  0020               	movlb	0	; select bank0
  3668  0351  120C               	bcf	12,4	;volatile
  3669                           
  3670                           ;LCD.c: 31: RA3 = 0;
  3671  0352  118C               	bcf	12,3	;volatile
  3672                           
  3673                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  3674  0353  3002               	movlw	2
  3675  0354  00F7               	movwf	??_LCD_Init+1
  3676  0355  3038               	movlw	56
  3677  0356  00F6               	movwf	??_LCD_Init
  3678  0357  30AD               	movlw	173
  3679  0358                     u3807:	
  3680  0358  0B89               	decfsz	9,f
  3681  0359  2B58               	goto	u3807
  3682  035A  0BF6               	decfsz	??_LCD_Init,f
  3683  035B  2B58               	goto	u3807
  3684  035C  0BF7               	decfsz	??_LCD_Init+1,f
  3685  035D  2B58               	goto	u3807
  3686  035E  0000               	nop
  3687                           
  3688                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  3689  035F  3003               	movlw	3
  3690  0360  0020               	movlb	0	; select bank0
  3691  0361  008D               	movwf	13	;volatile
  3692                           
  3693                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3694  0362  158C               	bsf	12,3	;volatile
  3695  0363  3200               	nop2	;2 cycle nop
  3696  0364  3200               	nop2	;2 cycle nop
  3697  0365  3200               	nop2	;2 cycle nop
  3698  0366  3200               	nop2	;2 cycle nop
  3699  0367  0020               	movlb	0	; select bank0
  3700  0368  118C               	bcf	12,3	;volatile
  3701  0369  3200               	nop2	;2 cycle nop
  3702  036A  3200               	nop2	;2 cycle nop
  3703  036B  3200               	nop2	;2 cycle nop
  3704  036C  3200               	nop2	;2 cycle nop
  3705                           
  3706                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  3707  036D  3034               	movlw	52
  3708  036E  00F6               	movwf	??_LCD_Init
  3709  036F  30F2               	movlw	242
  3710  0370                     u3817:	
  3711  0370  0B89               	decfsz	9,f
  3712  0371  2B70               	goto	u3817
  3713  0372  0BF6               	decfsz	??_LCD_Init,f
  3714  0373  2B70               	goto	u3817
  3715                           
  3716                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3717  0374  0020               	movlb	0	; select bank0
  3718  0375  158C               	bsf	12,3	;volatile
  3719  0376  3200               	nop2	;2 cycle nop
  3720  0377  3200               	nop2	;2 cycle nop
  3721  0378  3200               	nop2	;2 cycle nop
  3722  0379  3200               	nop2	;2 cycle nop
  3723  037A  0020               	movlb	0	; select bank0
  3724  037B  118C               	bcf	12,3	;volatile
  3725  037C  3200               	nop2	;2 cycle nop
  3726  037D  3200               	nop2	;2 cycle nop
  3727  037E  3200               	nop2	;2 cycle nop
  3728  037F  3200               	nop2	;2 cycle nop
  3729                           
  3730                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  3731  0380  3005               	movlw	5
  3732  0381  00F6               	movwf	??_LCD_Init
  3733  0382  3026               	movlw	38
  3734  0383                     u3827:	
  3735  0383  0B89               	decfsz	9,f
  3736  0384  2B83               	goto	u3827
  3737  0385  0BF6               	decfsz	??_LCD_Init,f
  3738  0386  2B83               	goto	u3827
  3739  0387  3200               	nop2
  3740                           
  3741                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3742  0388  0020               	movlb	0	; select bank0
  3743  0389  158C               	bsf	12,3	;volatile
  3744  038A  3200               	nop2	;2 cycle nop
  3745  038B  3200               	nop2	;2 cycle nop
  3746  038C  3200               	nop2	;2 cycle nop
  3747  038D  3200               	nop2	;2 cycle nop
  3748  038E  0020               	movlb	0	; select bank0
  3749  038F  118C               	bcf	12,3	;volatile
  3750  0390  3200               	nop2	;2 cycle nop
  3751  0391  3200               	nop2	;2 cycle nop
  3752  0392  3200               	nop2	;2 cycle nop
  3753  0393  3200               	nop2	;2 cycle nop
  3754                           
  3755                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  3756  0394  3005               	movlw	5
  3757  0395  00F6               	movwf	??_LCD_Init
  3758  0396  3026               	movlw	38
  3759  0397                     u3837:	
  3760  0397  0B89               	decfsz	9,f
  3761  0398  2B97               	goto	u3837
  3762  0399  0BF6               	decfsz	??_LCD_Init,f
  3763  039A  2B97               	goto	u3837
  3764  039B  3200               	nop2
  3765                           
  3766                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  3767  039C  3002               	movlw	2
  3768  039D  0020               	movlb	0	; select bank0
  3769  039E  008D               	movwf	13	;volatile
  3770                           
  3771                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3772  039F  158C               	bsf	12,3	;volatile
  3773  03A0  3200               	nop2	;2 cycle nop
  3774  03A1  3200               	nop2	;2 cycle nop
  3775  03A2  3200               	nop2	;2 cycle nop
  3776  03A3  3200               	nop2	;2 cycle nop
  3777  03A4  0020               	movlb	0	; select bank0
  3778  03A5  118C               	bcf	12,3	;volatile
  3779  03A6  3200               	nop2	;2 cycle nop
  3780  03A7  3200               	nop2	;2 cycle nop
  3781  03A8  3200               	nop2	;2 cycle nop
  3782  03A9  3200               	nop2	;2 cycle nop
  3783                           
  3784                           ;LCD.c: 44: LCD_WriteData(0x28);
  3785  03AA  3028               	movlw	40
  3786  03AB  3184  24F7  3183   	fcall	_LCD_WriteData
  3787                           
  3788                           ;LCD.c: 45: LCD_WriteData(0x0c);
  3789  03AE  300C               	movlw	12
  3790  03AF  3184  24F7  3183   	fcall	_LCD_WriteData
  3791                           
  3792                           ;LCD.c: 46: LCD_DisplayClear();
  3793  03B2  3187  2731  3183   	fcall	_LCD_DisplayClear
  3794                           
  3795                           ;LCD.c: 47: LCD_WriteData(0x06);
  3796  03B5  3006               	movlw	6
  3797  03B6  3184  24F7         	fcall	_LCD_WriteData
  3798  03B8  0008               	return
  3799  03B9                     __end_of_LCD_Init:	
  3800                           
  3801                           	psect	text11
  3802  0731                     __ptext11:	
  3803 ;; *************** function _LCD_DisplayClear *****************
  3804 ;; Defined at:
  3805 ;;		line 64 in file "LCD.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0, pclath, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3819 ;;      Params:         0       0       0       0       0       0
  3820 ;;      Locals:         0       0       0       0       0       0
  3821 ;;      Temps:          1       0       0       0       0       0
  3822 ;;      Totals:         1       0       0       0       0       0
  3823 ;;Total ram usage:        1 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:    4
  3826 ;; This function calls:
  3827 ;;		_LCD_WriteData
  3828 ;; This function is called by:
  3829 ;;		_LCD_Init
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           
  3834                           ;psect for function _LCD_DisplayClear
  3835  0731                     _LCD_DisplayClear:	
  3836                           
  3837                           ;LCD.c: 66: RA4 = 0;
  3838                           
  3839                           ;incstack = 0
  3840                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  3841  0731  0020               	movlb	0	; select bank0
  3842  0732  120C               	bcf	12,4	;volatile
  3843                           
  3844                           ;LCD.c: 67: LCD_WriteData(0x01);
  3845  0733  3001               	movlw	1
  3846  0734  3184  24F7  3187   	fcall	_LCD_WriteData
  3847                           
  3848                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  3849  0737  3015               	movlw	21
  3850  0738  00F5               	movwf	??_LCD_DisplayClear
  3851  0739  30C6               	movlw	198
  3852  073A                     u3847:	
  3853  073A  0B89               	decfsz	9,f
  3854  073B  2F3A               	goto	u3847
  3855  073C  0BF5               	decfsz	??_LCD_DisplayClear,f
  3856  073D  2F3A               	goto	u3847
  3857  073E  3200               	nop2
  3858  073F  0008               	return
  3859  0740                     __end_of_LCD_DisplayClear:	
  3860                           
  3861                           	psect	text12
  3862  06E4                     __ptext12:	
  3863 ;; *************** function _LCD_CursorPosition *****************
  3864 ;; Defined at:
  3865 ;;		line 86 in file "LCD.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  tx              1    wreg     unsigned char 
  3868 ;;  ty              1    5[COMMON] unsigned char 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  tx              1    7[COMMON] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0, pclath, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3880 ;;      Params:         1       0       0       0       0       0
  3881 ;;      Locals:         1       0       0       0       0       0
  3882 ;;      Temps:          1       0       0       0       0       0
  3883 ;;      Totals:         3       0       0       0       0       0
  3884 ;;Total ram usage:        3 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:    4
  3887 ;; This function calls:
  3888 ;;		_LCD_WriteData
  3889 ;; This function is called by:
  3890 ;;		_main
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function _LCD_CursorPosition
  3896  06E4                     _LCD_CursorPosition:	
  3897                           
  3898                           ;incstack = 0
  3899                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  3900                           ;LCD_CursorPosition@tx stored from wreg
  3901  06E4  00F7               	movwf	LCD_CursorPosition@tx
  3902                           
  3903                           ;LCD.c: 88: RA4 = 0;
  3904  06E5  0020               	movlb	0	; select bank0
  3905  06E6  120C               	bcf	12,4	;volatile
  3906                           
  3907                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  3908  06E7  0875               	movf	LCD_CursorPosition@ty,w
  3909  06E8  00F6               	movwf	??_LCD_CursorPosition
  3910  06E9  3005               	movlw	5
  3911  06EA                     u2675:	
  3912  06EA  35F6               	lslf	??_LCD_CursorPosition,f
  3913  06EB  3EFF               	addlw	-1
  3914  06EC  1D03               	skipz
  3915  06ED  2EEA               	goto	u2675
  3916  06EE  3576               	lslf	??_LCD_CursorPosition,w
  3917  06EF  0477               	iorwf	LCD_CursorPosition@tx,w
  3918  06F0  3880               	iorlw	-128
  3919  06F1  3184  24F7  3186   	fcall	_LCD_WriteData
  3920                           
  3921                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  3922  06F4  306A               	movlw	106
  3923  06F5                     u3857:	
  3924  06F5  0B89               	decfsz	9,f
  3925  06F6  2EF5               	goto	u3857
  3926  06F7  3200               	nop2
  3927  06F8  0008               	return
  3928  06F9                     __end_of_LCD_CursorPosition:	
  3929                           
  3930                           	psect	text13
  3931  04F7                     __ptext13:	
  3932 ;; *************** function _LCD_WriteData *****************
  3933 ;; Defined at:
  3934 ;;		line 15 in file "LCD.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;  point           1    wreg     char 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  point           1    4[COMMON] char 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3948 ;;      Params:         0       0       0       0       0       0
  3949 ;;      Locals:         1       0       0       0       0       0
  3950 ;;      Temps:          2       0       0       0       0       0
  3951 ;;      Totals:         3       0       0       0       0       0
  3952 ;;Total ram usage:        3 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    3
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_LCD_Init
  3959 ;;		_LCD_Put
  3960 ;;		_LCD_DisplayClear
  3961 ;;		_LCD_CursorPosition
  3962 ;;		_LCD_CursorHome
  3963 ;;		_LCD_CursorShift
  3964 ;;		_LCD_DispShift
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           
  3969                           ;psect for function _LCD_WriteData
  3970  04F7                     _LCD_WriteData:	
  3971                           
  3972                           ;incstack = 0
  3973                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  3974                           ;LCD_WriteData@point stored from wreg
  3975  04F7  00F4               	movwf	LCD_WriteData@point
  3976                           
  3977                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  3978  04F8  30D5               	movlw	213
  3979  04F9                     u3867:	
  3980  04F9  0B89               	decfsz	9,f
  3981  04FA  2CF9               	goto	u3867
  3982  04FB  0000               	nop
  3983                           
  3984                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  3985  04FC  0874               	movf	LCD_WriteData@point,w
  3986  04FD  00F2               	movwf	??_LCD_WriteData
  3987  04FE  3004               	movlw	4
  3988  04FF                     u1675:	
  3989  04FF  1003               	clrc
  3990  0500  1BF2               	btfsc	??_LCD_WriteData,7
  3991  0501  1403               	setc
  3992  0502  0CF2               	rrf	??_LCD_WriteData,f
  3993  0503  0B89               	decfsz	9,f
  3994  0504  2CFF               	goto	u1675
  3995  0505  3003               	movlw	3
  3996  0506  0572               	andwf	??_LCD_WriteData,w
  3997  0507  00F3               	movwf	??_LCD_WriteData+1
  3998  0508  0E74               	swapf	LCD_WriteData@point,w
  3999  0509  390F               	andlw	15
  4000  050A  1989               	btfsc	9,3
  4001  050B  38F0               	iorlw	240
  4002  050C  390C               	andlw	12
  4003  050D  0709               	addwf	9,w
  4004  050E  0473               	iorwf	??_LCD_WriteData+1,w
  4005  050F  0020               	movlb	0	; select bank0
  4006  0510  008D               	movwf	13	;volatile
  4007                           
  4008                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  4009  0511  158C               	bsf	12,3	;volatile
  4010  0512  3200               	nop2	;2 cycle nop
  4011  0513  3200               	nop2	;2 cycle nop
  4012  0514  3200               	nop2	;2 cycle nop
  4013  0515  3200               	nop2	;2 cycle nop
  4014  0516  0020               	movlb	0	; select bank0
  4015  0517  118C               	bcf	12,3	;volatile
  4016  0518  3200               	nop2	;2 cycle nop
  4017  0519  3200               	nop2	;2 cycle nop
  4018  051A  3200               	nop2	;2 cycle nop
  4019  051B  3200               	nop2	;2 cycle nop
  4020                           
  4021                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  4022  051C  3003               	movlw	3
  4023  051D  0574               	andwf	LCD_WriteData@point,w
  4024  051E  00F2               	movwf	??_LCD_WriteData
  4025  051F  0874               	movf	LCD_WriteData@point,w
  4026  0520  390C               	andlw	12
  4027  0521  0709               	addwf	9,w
  4028  0522  0472               	iorwf	??_LCD_WriteData,w
  4029  0523  0020               	movlb	0	; select bank0
  4030  0524  008D               	movwf	13	;volatile
  4031                           
  4032                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  4033  0525  158C               	bsf	12,3	;volatile
  4034  0526  3200               	nop2	;2 cycle nop
  4035  0527  3200               	nop2	;2 cycle nop
  4036  0528  3200               	nop2	;2 cycle nop
  4037  0529  3200               	nop2	;2 cycle nop
  4038  052A  0020               	movlb	0	; select bank0
  4039  052B  118C               	bcf	12,3	;volatile
  4040  052C  3200               	nop2	;2 cycle nop
  4041  052D  3200               	nop2	;2 cycle nop
  4042  052E  3200               	nop2	;2 cycle nop
  4043  052F  3200               	nop2	;2 cycle nop
  4044  0530  0008               	return
  4045  0531                     __end_of_LCD_WriteData:	
  4046                           
  4047                           	psect	text14
  4048  0691                     __ptext14:	
  4049 ;; *************** function _DAC_Initialize *****************
  4050 ;; Defined at:
  4051 ;;		line 14 in file "MCP4726.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4065 ;;      Params:         0       0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0
  4067 ;;      Temps:          0       2       0       0       0       0
  4068 ;;      Totals:         0       2       0       0       0       0
  4069 ;;Total ram usage:        2 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    6
  4072 ;; This function calls:
  4073 ;;		_I2C_Init
  4074 ;;		_I2C_Transmit
  4075 ;; This function is called by:
  4076 ;;		_main
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           
  4081                           ;psect for function _DAC_Initialize
  4082  0691                     _DAC_Initialize:	
  4083                           
  4084                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  4085                           
  4086                           ;incstack = 0
  4087                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4088  0691  01F7               	clrf	I2C_Init@address
  4089  0692  01F8               	clrf	I2C_Init@mode
  4090  0693  01F9               	clrf	I2C_Init@Speed
  4091  0694  3001               	movlw	1
  4092  0695  3186  2622  3186   	fcall	_I2C_Init
  4093                           
  4094                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  4095  0698  0020               	movlb	0	; select bank0
  4096  0699  0866               	movf	_ConfigReg,w
  4097  069A  391F               	andlw	-225
  4098  069B  3880               	iorlw	128
  4099  069C  00E6               	movwf	_ConfigReg
  4100                           
  4101                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  4102  069D  1066               	bcf	_ConfigReg,0
  4103                           
  4104                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  4105  069E  30F9               	movlw	-7
  4106  069F  05E6               	andwf	_ConfigReg,f
  4107                           
  4108                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  4109  06A0  30E7               	movlw	-25
  4110  06A1  05E6               	andwf	_ConfigReg,f
  4111                           
  4112                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  4113  06A2  3060               	movlw	96
  4114  06A3  00A8               	movwf	??_DAC_Initialize
  4115  06A4  0828               	movf	??_DAC_Initialize,w
  4116  06A5  00A0               	movwf	I2C_Transmit@address
  4117  06A6  3066               	movlw	(low (_ConfigReg| 0))& (0+255)
  4118  06A7  00A9               	movwf	??_DAC_Initialize+1
  4119  06A8  0829               	movf	??_DAC_Initialize+1,w
  4120  06A9  00A1               	movwf	I2C_Transmit@pData
  4121  06AA  01A2               	clrf	I2C_Transmit@size
  4122  06AB  0AA2               	incf	I2C_Transmit@size,f
  4123  06AC  3001               	movlw	1
  4124  06AD  3185  25CE         	fcall	_I2C_Transmit
  4125  06AF  0008               	return
  4126  06B0                     __end_of_DAC_Initialize:	
  4127                           
  4128                           	psect	text15
  4129  05CE                     __ptext15:	
  4130 ;; *************** function _I2C_Transmit *****************
  4131 ;; Defined at:
  4132 ;;		line 23 in file "I2C_Common.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  I2Cx            1    wreg     enum E3054
  4135 ;;  address         1    0[BANK0 ] unsigned char 
  4136 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  4137 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4138 ;;  size            1    2[BANK0 ] unsigned char 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  I2Cx            1    6[BANK0 ] enum E3054
  4141 ;;  result          1    7[BANK0 ] char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      char 
  4144 ;; Registers used:
  4145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4151 ;;      Params:         0       3       0       0       0       0
  4152 ;;      Locals:         0       2       0       0       0       0
  4153 ;;      Temps:          0       3       0       0       0       0
  4154 ;;      Totals:         0       8       0       0       0       0
  4155 ;;Total ram usage:        8 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    4
  4158 ;; This function calls:
  4159 ;;		_I2C1_Transmit
  4160 ;;		_I2C2_Transmit
  4161 ;; This function is called by:
  4162 ;;		_DAC_Initialize
  4163 ;;		_DAC_WriteVoltage
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           
  4168                           ;psect for function _I2C_Transmit
  4169  05CE                     _I2C_Transmit:	
  4170                           
  4171                           ;incstack = 0
  4172                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4173                           ;I2C_Transmit@I2Cx stored from wreg
  4174  05CE  0020               	movlb	0	; select bank0
  4175  05CF  00A6               	movwf	I2C_Transmit@I2Cx
  4176                           
  4177                           ;I2C_Common.c: 25: int8_t result;
  4178                           ;I2C_Common.c: 27: switch(I2Cx)
  4179  05D0  2DEF               	goto	l3657
  4180  05D1                     l3651:	
  4181                           ;I2C_Common.c: 28: {
  4182                           ;I2C_Common.c: 29: case I2C1_MODULE:
  4183                           
  4184                           
  4185                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  4186  05D1  0821               	movf	I2C_Transmit@pData,w
  4187  05D2  00A3               	movwf	??_I2C_Transmit
  4188  05D3  0823               	movf	??_I2C_Transmit,w
  4189  05D4  00F2               	movwf	I2C1_Transmit@pData
  4190  05D5  0822               	movf	I2C_Transmit@size,w
  4191  05D6  00A4               	movwf	??_I2C_Transmit+1
  4192  05D7  0824               	movf	??_I2C_Transmit+1,w
  4193  05D8  00F3               	movwf	I2C1_Transmit@size
  4194  05D9  0820               	movf	I2C_Transmit@address,w
  4195  05DA  3182  22D2  3185   	fcall	_I2C1_Transmit
  4196  05DD  2DEA               	goto	L7
  4197  05DE                     l3653:	
  4198                           ;I2C_Common.c: 33: case I2C2_MODULE:
  4199                           
  4200                           ;I2C_Common.c: 31: break;
  4201                           
  4202                           
  4203                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  4204  05DE  0821               	movf	I2C_Transmit@pData,w
  4205  05DF  00A3               	movwf	??_I2C_Transmit
  4206  05E0  0823               	movf	??_I2C_Transmit,w
  4207  05E1  00F2               	movwf	I2C2_Transmit@pData
  4208  05E2  0822               	movf	I2C_Transmit@size,w
  4209  05E3  00A4               	movwf	??_I2C_Transmit+1
  4210  05E4  0824               	movf	??_I2C_Transmit+1,w
  4211  05E5  00F3               	movwf	I2C2_Transmit@size
  4212  05E6  0820               	movf	I2C_Transmit@address,w
  4213  05E7  3182  2253  3185   	fcall	_I2C2_Transmit
  4214  05EA                     L7:	
  4215  05EA  0020               	movlb	0	; select bank0
  4216  05EB  00A5               	movwf	??_I2C_Transmit+2
  4217  05EC  0825               	movf	??_I2C_Transmit+2,w
  4218  05ED  00A7               	movwf	I2C_Transmit@result
  4219                           
  4220                           ;I2C_Common.c: 36: }
  4221                           
  4222                           ;I2C_Common.c: 35: break;
  4223  05EE  2DF7               	goto	l3659
  4224  05EF                     l3657:	
  4225  05EF  0826               	movf	I2C_Transmit@I2Cx,w
  4226                           
  4227                           ; Switch size 1, requested type "space"
  4228                           ; Number of cases is 2, Range of values is 0 to 1
  4229                           ; switch strategies available:
  4230                           ; Name         Instructions Cycles
  4231                           ; simple_byte            7     4 (average)
  4232                           ; direct_byte           10     6 (fixed)
  4233                           ; jumptable            260     6 (fixed)
  4234                           ;	Chosen strategy is simple_byte
  4235  05F0  3A00               	xorlw	0	; case 0
  4236  05F1  1903               	skipnz
  4237  05F2  2DD1               	goto	l3651
  4238  05F3  3A01               	xorlw	1	; case 1
  4239  05F4  1903               	skipnz
  4240  05F5  2DDE               	goto	l3653
  4241  05F6  2DF7               	goto	l3659
  4242  05F7                     l3659:	
  4243                           
  4244                           ;I2C_Common.c: 37: return result;
  4245  05F7  0827               	movf	I2C_Transmit@result,w
  4246  05F8  0008               	return
  4247  05F9                     __end_of_I2C_Transmit:	
  4248                           
  4249                           	psect	text16
  4250  0253                     __ptext16:	
  4251 ;; *************** function _I2C2_Transmit *****************
  4252 ;; Defined at:
  4253 ;;		line 52 in file "I2C2.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  address         1    wreg     unsigned char 
  4256 ;;  pData           1    2[COMMON] PTR unsigned char 
  4257 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4258 ;;  size            1    3[COMMON] unsigned char 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  address         1    6[COMMON] unsigned char 
  4261 ;;  i               1    8[COMMON] unsigned char 
  4262 ;;  i               1    7[COMMON] unsigned char 
  4263 ;;  result          1    9[COMMON] char 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      char 
  4266 ;; Registers used:
  4267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4273 ;;      Params:         2       0       0       0       0       0
  4274 ;;      Locals:         4       0       0       0       0       0
  4275 ;;      Temps:          2       0       0       0       0       0
  4276 ;;      Totals:         8       0       0       0       0       0
  4277 ;;Total ram usage:        8 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:    3
  4280 ;; This function calls:
  4281 ;;		Nothing
  4282 ;; This function is called by:
  4283 ;;		_I2C_Transmit
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           
  4288                           ;psect for function _I2C2_Transmit
  4289  0253                     _I2C2_Transmit:	
  4290                           
  4291                           ;incstack = 0
  4292                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  4293                           ;I2C2_Transmit@address stored from wreg
  4294  0253  00F6               	movwf	I2C2_Transmit@address
  4295                           
  4296                           ;I2C2.c: 54: int8_t result = 0;
  4297  0254  01F9               	clrf	I2C2_Transmit@result
  4298                           
  4299                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  4300  0255  2AC7               	goto	l3449
  4301  0256                     l3405:	
  4302                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4303                           
  4304                           ;I2C2.c: 57: {
  4305                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  4306                           
  4307  0256  3005               	movlw	5
  4308  0257  0024               	movlb	4	; select bank4
  4309  0258  051C               	andwf	28,w	;volatile
  4310  0259  00F4               	movwf	??_I2C2_Transmit
  4311  025A  081E               	movf	30,w	;volatile
  4312  025B  391F               	andlw	31
  4313  025C  0474               	iorwf	??_I2C2_Transmit,w
  4314  025D  1D03               	btfss	3,2
  4315  025E  2A56               	goto	l3405
  4316                           
  4317                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  4318  025F  141E               	bsf	30,0	;volatile
  4319  0260                     l3407:	
  4320                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4321                           
  4322  0260  3005               	movlw	5
  4323  0261  051C               	andwf	28,w	;volatile
  4324  0262  00F4               	movwf	??_I2C2_Transmit
  4325  0263  081E               	movf	30,w	;volatile
  4326  0264  391F               	andlw	31
  4327  0265  0474               	iorwf	??_I2C2_Transmit,w
  4328  0266  1D03               	btfss	3,2
  4329  0267  2A60               	goto	l3407
  4330                           
  4331                           ;I2C2.c: 63: SSP2BUF = address << 1;
  4332  0268  3576               	lslf	I2C2_Transmit@address,w
  4333  0269  0099               	movwf	25	;volatile
  4334  026A                     l523:	
  4335                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  4336                           
  4337  026A  191C               	btfsc	28,2	;volatile
  4338  026B  2A6A               	goto	l523
  4339                           
  4340                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  4341  026C  3000               	movlw	0
  4342  026D  1B1E               	btfsc	30,6	;volatile
  4343  026E  3001               	movlw	1
  4344  026F  00F9               	movwf	I2C2_Transmit@result
  4345                           
  4346                           ;I2C2.c: 67: if (!result)
  4347  0270  0879               	movf	I2C2_Transmit@result,w
  4348  0271  1D03               	btfss	3,2
  4349  0272  2A9A               	goto	l3431
  4350                           
  4351                           ;I2C2.c: 68: {
  4352                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  4353  0273  01F7               	clrf	I2C2_Transmit@i
  4354  0274  2A79               	goto	l3429
  4355  0275                     l3427:	
  4356                           ;I2C2.c: 79: break;
  4357                           
  4358  0275  3001               	movlw	1
  4359  0276  00F4               	movwf	??_I2C2_Transmit
  4360  0277  0874               	movf	??_I2C2_Transmit,w
  4361  0278  07F7               	addwf	I2C2_Transmit@i,f
  4362  0279                     l3429:	
  4363  0279  0873               	movf	I2C2_Transmit@size,w
  4364  027A  0277               	subwf	I2C2_Transmit@i,w
  4365  027B  1803               	btfsc	3,0
  4366  027C  2A9A               	goto	l3431
  4367  027D                     l3417:	
  4368                           ;I2C2.c: 70: {
  4369                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4370                           
  4371  027D  3005               	movlw	5
  4372  027E  051C               	andwf	28,w	;volatile
  4373  027F  00F4               	movwf	??_I2C2_Transmit
  4374  0280  081E               	movf	30,w	;volatile
  4375  0281  391F               	andlw	31
  4376  0282  0474               	iorwf	??_I2C2_Transmit,w
  4377  0283  1D03               	btfss	3,2
  4378  0284  2A7D               	goto	l3417
  4379                           
  4380                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  4381  0285  0877               	movf	I2C2_Transmit@i,w
  4382  0286  0772               	addwf	I2C2_Transmit@pData,w
  4383  0287  00F4               	movwf	??_I2C2_Transmit
  4384  0288  0874               	movf	??_I2C2_Transmit,w
  4385  0289  0086               	movwf	6
  4386  028A  0187               	clrf	7
  4387  028B  0801               	movf	1,w
  4388  028C  0099               	movwf	25	;volatile
  4389  028D                     l532:	
  4390                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  4391                           
  4392  028D  191C               	btfsc	28,2	;volatile
  4393  028E  2A8D               	goto	l532
  4394                           
  4395                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  4396  028F  3000               	movlw	0
  4397  0290  1B1E               	btfsc	30,6	;volatile
  4398  0291  3001               	movlw	1
  4399  0292  00F9               	movwf	I2C2_Transmit@result
  4400                           
  4401                           ;I2C2.c: 76: if (result)
  4402  0293  0879               	movf	I2C2_Transmit@result,w
  4403  0294  1903               	btfsc	3,2
  4404  0295  2A75               	goto	l3427
  4405                           
  4406                           ;I2C2.c: 77: {
  4407                           ;I2C2.c: 78: result = 2;
  4408  0296  3002               	movlw	2
  4409  0297  00F4               	movwf	??_I2C2_Transmit
  4410  0298  0874               	movf	??_I2C2_Transmit,w
  4411  0299  00F9               	movwf	I2C2_Transmit@result
  4412  029A                     l3431:	
  4413                           ;I2C2.c: 80: }
  4414                           ;I2C2.c: 81: }
  4415                           ;I2C2.c: 82: }
  4416                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4417                           
  4418  029A  3005               	movlw	5
  4419  029B  051C               	andwf	28,w	;volatile
  4420  029C  00F4               	movwf	??_I2C2_Transmit
  4421  029D  081E               	movf	30,w	;volatile
  4422  029E  391F               	andlw	31
  4423  029F  0474               	iorwf	??_I2C2_Transmit,w
  4424  02A0  1D03               	btfss	3,2
  4425  02A1  2A9A               	goto	l3431
  4426                           
  4427                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  4428  02A2  151E               	bsf	30,2	;volatile
  4429                           
  4430                           ;I2C2.c: 86: break;
  4431  02A3  2AD0               	goto	l3451
  4432  02A4                     l541:	
  4433                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  4434                           
  4435                           
  4436                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  4437  02A4  0024               	movlb	4	; select bank4
  4438  02A5  1D9C               	btfss	28,3	;volatile
  4439  02A6  1E1C               	btfss	28,4	;volatile
  4440  02A7  2AC5               	goto	l3445
  4441                           
  4442                           ;I2C2.c: 90: {
  4443                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  4444  02A8  01F8               	clrf	I2C2_Transmit@i_552
  4445  02A9                     l3441:	
  4446  02A9  0873               	movf	I2C2_Transmit@size,w
  4447  02AA  0278               	subwf	I2C2_Transmit@i_552,w
  4448  02AB  1803               	btfsc	3,0
  4449  02AC  2AC0               	goto	l3443
  4450                           
  4451                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  4452  02AD  0878               	movf	I2C2_Transmit@i_552,w
  4453  02AE  0772               	addwf	I2C2_Transmit@pData,w
  4454  02AF  00F4               	movwf	??_I2C2_Transmit
  4455  02B0  0874               	movf	??_I2C2_Transmit,w
  4456  02B1  0086               	movwf	6
  4457  02B2  0187               	clrf	7
  4458  02B3  0801               	movf	1,w
  4459  02B4  00F5               	movwf	??_I2C2_Transmit+1
  4460  02B5  0878               	movf	I2C2_Transmit@i_552,w
  4461  02B6  3EA0               	addlw	(low (_I2C2_Config| 0))& (0+255)
  4462  02B7  0086               	movwf	6
  4463  02B8  0187               	clrf	7
  4464  02B9  0875               	movf	??_I2C2_Transmit+1,w
  4465  02BA  0081               	movwf	1
  4466  02BB  3001               	movlw	1
  4467  02BC  00F4               	movwf	??_I2C2_Transmit
  4468  02BD  0874               	movf	??_I2C2_Transmit,w
  4469  02BE  07F8               	addwf	I2C2_Transmit@i_552,f
  4470  02BF  2AA9               	goto	l3441
  4471  02C0                     l3443:	
  4472                           
  4473                           ;I2C2.c: 93: result = size;
  4474  02C0  0873               	movf	I2C2_Transmit@size,w
  4475  02C1  00F4               	movwf	??_I2C2_Transmit
  4476  02C2  0874               	movf	??_I2C2_Transmit,w
  4477  02C3  00F9               	movwf	I2C2_Transmit@result
  4478                           
  4479                           ;I2C2.c: 94: }
  4480  02C4  2AD0               	goto	l3451
  4481  02C5                     l3445:	
  4482                           
  4483                           ;I2C2.c: 95: else
  4484                           ;I2C2.c: 96: result = 0;
  4485  02C5  01F9               	clrf	I2C2_Transmit@result
  4486                           
  4487                           ;I2C2.c: 98: }
  4488                           
  4489                           ;I2C2.c: 97: break;
  4490  02C6  2AD0               	goto	l3451
  4491  02C7                     l3449:	
  4492  02C7  0021               	movlb	1	; select bank1
  4493  02C8  0832               	movf	(_I2C2_Config^(0+128)+18),w
  4494                           
  4495                           ; Switch size 1, requested type "space"
  4496                           ; Number of cases is 2, Range of values is 0 to 1
  4497                           ; switch strategies available:
  4498                           ; Name         Instructions Cycles
  4499                           ; simple_byte            7     4 (average)
  4500                           ; direct_byte           10     6 (fixed)
  4501                           ; jumptable            260     6 (fixed)
  4502                           ;	Chosen strategy is simple_byte
  4503  02C9  3A00               	xorlw	0	; case 0
  4504  02CA  1903               	skipnz
  4505  02CB  2A56               	goto	l3405
  4506  02CC  3A01               	xorlw	1	; case 1
  4507  02CD  1903               	skipnz
  4508  02CE  2AA4               	goto	l541
  4509  02CF  2AD0               	goto	l3451
  4510  02D0                     l3451:	
  4511                           
  4512                           ;I2C2.c: 100: return result;
  4513  02D0  0879               	movf	I2C2_Transmit@result,w
  4514  02D1  0008               	return
  4515  02D2                     __end_of_I2C2_Transmit:	
  4516                           
  4517                           	psect	text17
  4518  02D2                     __ptext17:	
  4519 ;; *************** function _I2C1_Transmit *****************
  4520 ;; Defined at:
  4521 ;;		line 52 in file "I2C1.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  address         1    wreg     unsigned char 
  4524 ;;  pData           1    2[COMMON] PTR unsigned char 
  4525 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4526 ;;  size            1    3[COMMON] unsigned char 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  address         1    6[COMMON] unsigned char 
  4529 ;;  i               1    8[COMMON] unsigned char 
  4530 ;;  i               1    7[COMMON] unsigned char 
  4531 ;;  result          1    9[COMMON] char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      char 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4541 ;;      Params:         2       0       0       0       0       0
  4542 ;;      Locals:         4       0       0       0       0       0
  4543 ;;      Temps:          2       0       0       0       0       0
  4544 ;;      Totals:         8       0       0       0       0       0
  4545 ;;Total ram usage:        8 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    3
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_I2C_Transmit
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           
  4556                           ;psect for function _I2C1_Transmit
  4557  02D2                     _I2C1_Transmit:	
  4558                           
  4559                           ;incstack = 0
  4560                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  4561                           ;I2C1_Transmit@address stored from wreg
  4562  02D2  00F6               	movwf	I2C1_Transmit@address
  4563                           
  4564                           ;I2C1.c: 54: int8_t result;
  4565                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  4566  02D3  2B45               	goto	l3363
  4567  02D4                     l3319:	
  4568                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4569                           
  4570                           ;I2C1.c: 57: {
  4571                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  4572                           
  4573  02D4  3005               	movlw	5
  4574  02D5  0024               	movlb	4	; select bank4
  4575  02D6  0514               	andwf	20,w	;volatile
  4576  02D7  00F4               	movwf	??_I2C1_Transmit
  4577  02D8  0816               	movf	22,w	;volatile
  4578  02D9  391F               	andlw	31
  4579  02DA  0474               	iorwf	??_I2C1_Transmit,w
  4580  02DB  1D03               	btfss	3,2
  4581  02DC  2AD4               	goto	l3319
  4582                           
  4583                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  4584  02DD  1416               	bsf	22,0	;volatile
  4585  02DE                     l3321:	
  4586                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4587                           
  4588  02DE  3005               	movlw	5
  4589  02DF  0514               	andwf	20,w	;volatile
  4590  02E0  00F4               	movwf	??_I2C1_Transmit
  4591  02E1  0816               	movf	22,w	;volatile
  4592  02E2  391F               	andlw	31
  4593  02E3  0474               	iorwf	??_I2C1_Transmit,w
  4594  02E4  1D03               	btfss	3,2
  4595  02E5  2ADE               	goto	l3321
  4596                           
  4597                           ;I2C1.c: 63: SSP1BUF = address << 1;
  4598  02E6  3576               	lslf	I2C1_Transmit@address,w
  4599  02E7  0091               	movwf	17	;volatile
  4600  02E8                     l386:	
  4601                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  4602                           
  4603  02E8  1914               	btfsc	20,2	;volatile
  4604  02E9  2AE8               	goto	l386
  4605                           
  4606                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  4607  02EA  3000               	movlw	0
  4608  02EB  1B16               	btfsc	22,6	;volatile
  4609  02EC  3001               	movlw	1
  4610  02ED  00F9               	movwf	I2C1_Transmit@result
  4611                           
  4612                           ;I2C1.c: 67: if (!result)
  4613  02EE  0879               	movf	I2C1_Transmit@result,w
  4614  02EF  1D03               	btfss	3,2
  4615  02F0  2B18               	goto	l3345
  4616                           
  4617                           ;I2C1.c: 68: {
  4618                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  4619  02F1  01F7               	clrf	I2C1_Transmit@i
  4620  02F2  2AF7               	goto	l3343
  4621  02F3                     l3341:	
  4622                           ;I2C1.c: 79: break;
  4623                           
  4624  02F3  3001               	movlw	1
  4625  02F4  00F4               	movwf	??_I2C1_Transmit
  4626  02F5  0874               	movf	??_I2C1_Transmit,w
  4627  02F6  07F7               	addwf	I2C1_Transmit@i,f
  4628  02F7                     l3343:	
  4629  02F7  0873               	movf	I2C1_Transmit@size,w
  4630  02F8  0277               	subwf	I2C1_Transmit@i,w
  4631  02F9  1803               	btfsc	3,0
  4632  02FA  2B18               	goto	l3345
  4633  02FB                     l3331:	
  4634                           ;I2C1.c: 70: {
  4635                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4636                           
  4637  02FB  3005               	movlw	5
  4638  02FC  0514               	andwf	20,w	;volatile
  4639  02FD  00F4               	movwf	??_I2C1_Transmit
  4640  02FE  0816               	movf	22,w	;volatile
  4641  02FF  391F               	andlw	31
  4642  0300  0474               	iorwf	??_I2C1_Transmit,w
  4643  0301  1D03               	btfss	3,2
  4644  0302  2AFB               	goto	l3331
  4645                           
  4646                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  4647  0303  0877               	movf	I2C1_Transmit@i,w
  4648  0304  0772               	addwf	I2C1_Transmit@pData,w
  4649  0305  00F4               	movwf	??_I2C1_Transmit
  4650  0306  0874               	movf	??_I2C1_Transmit,w
  4651  0307  0086               	movwf	6
  4652  0308  0187               	clrf	7
  4653  0309  0801               	movf	1,w
  4654  030A  0091               	movwf	17	;volatile
  4655  030B                     l395:	
  4656                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  4657                           
  4658  030B  1914               	btfsc	20,2	;volatile
  4659  030C  2B0B               	goto	l395
  4660                           
  4661                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  4662  030D  3000               	movlw	0
  4663  030E  1B16               	btfsc	22,6	;volatile
  4664  030F  3001               	movlw	1
  4665  0310  00F9               	movwf	I2C1_Transmit@result
  4666                           
  4667                           ;I2C1.c: 76: if (result)
  4668  0311  0879               	movf	I2C1_Transmit@result,w
  4669  0312  1903               	btfsc	3,2
  4670  0313  2AF3               	goto	l3341
  4671                           
  4672                           ;I2C1.c: 77: {
  4673                           ;I2C1.c: 78: result = 2;
  4674  0314  3002               	movlw	2
  4675  0315  00F4               	movwf	??_I2C1_Transmit
  4676  0316  0874               	movf	??_I2C1_Transmit,w
  4677  0317  00F9               	movwf	I2C1_Transmit@result
  4678  0318                     l3345:	
  4679                           ;I2C1.c: 80: }
  4680                           ;I2C1.c: 81: }
  4681                           ;I2C1.c: 82: }
  4682                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4683                           
  4684  0318  3005               	movlw	5
  4685  0319  0514               	andwf	20,w	;volatile
  4686  031A  00F4               	movwf	??_I2C1_Transmit
  4687  031B  0816               	movf	22,w	;volatile
  4688  031C  391F               	andlw	31
  4689  031D  0474               	iorwf	??_I2C1_Transmit,w
  4690  031E  1D03               	btfss	3,2
  4691  031F  2B18               	goto	l3345
  4692                           
  4693                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  4694  0320  1516               	bsf	22,2	;volatile
  4695                           
  4696                           ;I2C1.c: 86: break;
  4697  0321  2B4E               	goto	l3365
  4698  0322                     l404:	
  4699                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  4700                           
  4701                           
  4702                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  4703  0322  0024               	movlb	4	; select bank4
  4704  0323  1D94               	btfss	20,3	;volatile
  4705  0324  1E14               	btfss	20,4	;volatile
  4706  0325  2B43               	goto	l3359
  4707                           
  4708                           ;I2C1.c: 90: {
  4709                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  4710  0326  01F8               	clrf	I2C1_Transmit@i_408
  4711  0327                     l3355:	
  4712  0327  0873               	movf	I2C1_Transmit@size,w
  4713  0328  0278               	subwf	I2C1_Transmit@i_408,w
  4714  0329  1803               	btfsc	3,0
  4715  032A  2B3E               	goto	l3357
  4716                           
  4717                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  4718  032B  0878               	movf	I2C1_Transmit@i_408,w
  4719  032C  0772               	addwf	I2C1_Transmit@pData,w
  4720  032D  00F4               	movwf	??_I2C1_Transmit
  4721  032E  0874               	movf	??_I2C1_Transmit,w
  4722  032F  0086               	movwf	6
  4723  0330  0187               	clrf	7
  4724  0331  0801               	movf	1,w
  4725  0332  00F5               	movwf	??_I2C1_Transmit+1
  4726  0333  0878               	movf	I2C1_Transmit@i_408,w
  4727  0334  3EB3               	addlw	(low (_I2C1_Config| 0))& (0+255)
  4728  0335  0086               	movwf	6
  4729  0336  0187               	clrf	7
  4730  0337  0875               	movf	??_I2C1_Transmit+1,w
  4731  0338  0081               	movwf	1
  4732  0339  3001               	movlw	1
  4733  033A  00F4               	movwf	??_I2C1_Transmit
  4734  033B  0874               	movf	??_I2C1_Transmit,w
  4735  033C  07F8               	addwf	I2C1_Transmit@i_408,f
  4736  033D  2B27               	goto	l3355
  4737  033E                     l3357:	
  4738                           
  4739                           ;I2C1.c: 93: result = size;
  4740  033E  0873               	movf	I2C1_Transmit@size,w
  4741  033F  00F4               	movwf	??_I2C1_Transmit
  4742  0340  0874               	movf	??_I2C1_Transmit,w
  4743  0341  00F9               	movwf	I2C1_Transmit@result
  4744                           
  4745                           ;I2C1.c: 94: }
  4746  0342  2B4E               	goto	l3365
  4747  0343                     l3359:	
  4748                           
  4749                           ;I2C1.c: 95: else
  4750                           ;I2C1.c: 96: result = 0;
  4751  0343  01F9               	clrf	I2C1_Transmit@result
  4752                           
  4753                           ;I2C1.c: 98: }
  4754                           
  4755                           ;I2C1.c: 97: break;
  4756  0344  2B4E               	goto	l3365
  4757  0345                     l3363:	
  4758  0345  0021               	movlb	1	; select bank1
  4759  0346  0845               	movf	(_I2C1_Config^(0+128)+18),w
  4760                           
  4761                           ; Switch size 1, requested type "space"
  4762                           ; Number of cases is 2, Range of values is 0 to 1
  4763                           ; switch strategies available:
  4764                           ; Name         Instructions Cycles
  4765                           ; simple_byte            7     4 (average)
  4766                           ; direct_byte           10     6 (fixed)
  4767                           ; jumptable            260     6 (fixed)
  4768                           ;	Chosen strategy is simple_byte
  4769  0347  3A00               	xorlw	0	; case 0
  4770  0348  1903               	skipnz
  4771  0349  2AD4               	goto	l3319
  4772  034A  3A01               	xorlw	1	; case 1
  4773  034B  1903               	skipnz
  4774  034C  2B22               	goto	l404
  4775  034D  2B4E               	goto	l3365
  4776  034E                     l3365:	
  4777                           
  4778                           ;I2C1.c: 100: return result;
  4779  034E  0879               	movf	I2C1_Transmit@result,w
  4780  034F  0008               	return
  4781  0350                     __end_of_I2C1_Transmit:	
  4782                           
  4783                           	psect	text18
  4784  0622                     __ptext18:	
  4785 ;; *************** function _I2C_Init *****************
  4786 ;; Defined at:
  4787 ;;		line 6 in file "I2C_Common.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  I2Cx            1    wreg     enum E3054
  4790 ;;  address         1    7[COMMON] unsigned char 
  4791 ;;  mode            1    8[COMMON] enum E3045
  4792 ;;  Speed           1    9[COMMON] enum E3049
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  I2Cx            1   10[COMMON] enum E3054
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4804 ;;      Params:         3       0       0       0       0       0
  4805 ;;      Locals:         1       0       0       0       0       0
  4806 ;;      Temps:          0       2       0       0       0       0
  4807 ;;      Totals:         4       2       0       0       0       0
  4808 ;;Total ram usage:        6 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    5
  4811 ;; This function calls:
  4812 ;;		_I2C1_Setting
  4813 ;;		_I2C2_Setting
  4814 ;; This function is called by:
  4815 ;;		_DAC_Initialize
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           
  4820                           ;psect for function _I2C_Init
  4821  0622                     _I2C_Init:	
  4822                           
  4823                           ;incstack = 0
  4824                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4825                           ;I2C_Init@I2Cx stored from wreg
  4826  0622  00FA               	movwf	I2C_Init@I2Cx
  4827                           
  4828                           ;I2C_Common.c: 8: switch(I2Cx)
  4829  0623  2E40               	goto	l3647
  4830  0624                     l3641:	
  4831                           ;I2C_Common.c: 9: {
  4832                           ;I2C_Common.c: 10: case I2C1_MODULE:
  4833                           
  4834                           
  4835                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  4836  0624  0878               	movf	I2C_Init@mode,w
  4837  0625  0020               	movlb	0	; select bank0
  4838  0626  00A0               	movwf	??_I2C_Init
  4839  0627  0820               	movf	??_I2C_Init,w
  4840  0628  00F3               	movwf	I2C1_Setting@mode
  4841  0629  0879               	movf	I2C_Init@Speed,w
  4842  062A  00A1               	movwf	??_I2C_Init+1
  4843  062B  0821               	movf	??_I2C_Init+1,w
  4844  062C  00F4               	movwf	I2C1_Setting@Speed
  4845  062D  0877               	movf	I2C_Init@address,w
  4846  062E  3185  2569  3186   	fcall	_I2C1_Setting
  4847                           
  4848                           ;I2C_Common.c: 12: break;
  4849  0631  2E48               	goto	l633
  4850  0632                     l3643:	
  4851                           ;I2C_Common.c: 14: case I2C2_MODULE:
  4852                           
  4853                           
  4854                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  4855  0632  0878               	movf	I2C_Init@mode,w
  4856  0633  0020               	movlb	0	; select bank0
  4857  0634  00A0               	movwf	??_I2C_Init
  4858  0635  0820               	movf	??_I2C_Init,w
  4859  0636  00F3               	movwf	I2C2_Setting@mode
  4860  0637  0879               	movf	I2C_Init@Speed,w
  4861  0638  00A1               	movwf	??_I2C_Init+1
  4862  0639  0821               	movf	??_I2C_Init+1,w
  4863  063A  00F4               	movwf	I2C2_Setting@Speed
  4864  063B  0877               	movf	I2C_Init@address,w
  4865  063C  3185  2531  3186   	fcall	_I2C2_Setting
  4866                           
  4867                           ;I2C_Common.c: 17: }
  4868                           
  4869                           ;I2C_Common.c: 16: break;
  4870  063F  2E48               	goto	l633
  4871  0640                     l3647:	
  4872  0640  087A               	movf	I2C_Init@I2Cx,w
  4873                           
  4874                           ; Switch size 1, requested type "space"
  4875                           ; Number of cases is 2, Range of values is 0 to 1
  4876                           ; switch strategies available:
  4877                           ; Name         Instructions Cycles
  4878                           ; simple_byte            7     4 (average)
  4879                           ; direct_byte           10     6 (fixed)
  4880                           ; jumptable            260     6 (fixed)
  4881                           ;	Chosen strategy is simple_byte
  4882  0641  3A00               	xorlw	0	; case 0
  4883  0642  1903               	skipnz
  4884  0643  2E24               	goto	l3641
  4885  0644  3A01               	xorlw	1	; case 1
  4886  0645  1903               	skipnz
  4887  0646  2E32               	goto	l3643
  4888  0647  2E48               	goto	l633
  4889  0648                     l633:	
  4890                           
  4891                           ;I2C_Common.c: 19: PEIE = 1;
  4892  0648  170B               	bsf	11,6	;volatile
  4893                           
  4894                           ;I2C_Common.c: 20: GIE = 1;
  4895  0649  178B               	bsf	11,7	;volatile
  4896  064A  0008               	return
  4897  064B                     __end_of_I2C_Init:	
  4898                           
  4899                           	psect	text19
  4900  0531                     __ptext19:	
  4901 ;; *************** function _I2C2_Setting *****************
  4902 ;; Defined at:
  4903 ;;		line 15 in file "I2C2.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  address         1    wreg     unsigned char 
  4906 ;;  mode            1    3[COMMON] enum E3045
  4907 ;;  Speed           1    4[COMMON] enum E3049
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  address         1    6[COMMON] unsigned char 
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4919 ;;      Params:         2       0       0       0       0       0
  4920 ;;      Locals:         1       0       0       0       0       0
  4921 ;;      Temps:          1       0       0       0       0       0
  4922 ;;      Totals:         4       0       0       0       0       0
  4923 ;;Total ram usage:        4 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    4
  4926 ;; This function calls:
  4927 ;;		_I2C2_PinInit
  4928 ;; This function is called by:
  4929 ;;		_I2C_Init
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           
  4934                           ;psect for function _I2C2_Setting
  4935  0531                     _I2C2_Setting:	
  4936                           
  4937                           ;incstack = 0
  4938                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4939                           ;I2C2_Setting@address stored from wreg
  4940  0531  00F6               	movwf	I2C2_Setting@address
  4941                           
  4942                           ;I2C2.c: 17: I2C2_PinInit();
  4943  0532  3187  2740  3185   	fcall	_I2C2_PinInit
  4944                           
  4945                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  4946  0535  0873               	movf	I2C2_Setting@mode,w
  4947  0536  00F5               	movwf	??_I2C2_Setting
  4948  0537  0875               	movf	??_I2C2_Setting,w
  4949  0538  0021               	movlb	1	; select bank1
  4950  0539  00B2               	movwf	(_I2C2_Config^(0+128)+18)
  4951                           
  4952                           ;I2C2.c: 20: switch(mode)
  4953  053A  2D5A               	goto	l3401
  4954  053B                     l506:	
  4955                           ;I2C2.c: 21: {
  4956                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  4957                           
  4958                           
  4959                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  4960  053B  0024               	movlb	4	; select bank4
  4961  053C  159D               	bsf	29,3	;volatile
  4962                           
  4963                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  4964  053D  0874               	movf	I2C2_Setting@Speed,w
  4965  053E  1D03               	btfss	3,2
  4966  053F  2D43               	goto	l3379
  4967                           
  4968                           ;I2C2.c: 25: {
  4969                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  4970  0540  179C               	bsf	28,7	;volatile
  4971                           
  4972                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  4973  0541  304F               	movlw	79
  4974  0542  2D4B               	goto	L8
  4975  0543                     l3379:	
  4976                           ;I2C2.c: 28: }
  4977                           
  4978                           
  4979                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  4980  0543  0374               	decf	I2C2_Setting@Speed,w
  4981  0544  1D03               	btfss	3,2
  4982  0545  2D58               	goto	l3397
  4983                           
  4984                           ;I2C2.c: 30: {
  4985                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  4986  0546  307F               	movlw	127
  4987  0547  00F5               	movwf	??_I2C2_Setting
  4988  0548  0875               	movf	??_I2C2_Setting,w
  4989  0549  059C               	andwf	28,f	;volatile
  4990                           
  4991                           ;I2C2.c: 32: SSP2ADD = 0x13;
  4992  054A  3013               	movlw	19
  4993  054B                     L8:	
  4994  054B  009A               	movwf	26	;volatile
  4995  054C  2D58               	goto	l3397
  4996  054D                     l3387:	
  4997                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  4998                           
  4999                           ;I2C2.c: 35: break;
  5000                           
  5001                           ;I2C2.c: 33: }
  5002                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  5003                           
  5004                           
  5005                           ;I2C2.c: 38: SSP2STAT = 0x00;
  5006  054D  0024               	movlb	4	; select bank4
  5007  054E  019C               	clrf	28	;volatile
  5008                           
  5009                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  5010  054F  3006               	movlw	6
  5011  0550  00F5               	movwf	??_I2C2_Setting
  5012  0551  0875               	movf	??_I2C2_Setting,w
  5013  0552  049D               	iorwf	29,f	;volatile
  5014                           
  5015                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  5016  0553  141E               	bsf	30,0	;volatile
  5017                           
  5018                           ;I2C2.c: 41: SSP2ADD = address << 1;
  5019  0554  3576               	lslf	I2C2_Setting@address,w
  5020  0555  009A               	movwf	26	;volatile
  5021                           
  5022                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  5023  0556  30FE               	movlw	254
  5024  0557  009B               	movwf	27	;volatile
  5025  0558                     l3397:	
  5026                           
  5027                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  5028  0558  169D               	bsf	29,5	;volatile
  5029                           
  5030                           ;I2C2.c: 45: }
  5031                           
  5032                           ;I2C2.c: 44: break;
  5033  0559  2D62               	goto	l510
  5034  055A                     l3401:	
  5035  055A  0873               	movf	I2C2_Setting@mode,w
  5036                           
  5037                           ; Switch size 1, requested type "space"
  5038                           ; Number of cases is 2, Range of values is 0 to 1
  5039                           ; switch strategies available:
  5040                           ; Name         Instructions Cycles
  5041                           ; simple_byte            7     4 (average)
  5042                           ; direct_byte           10     6 (fixed)
  5043                           ; jumptable            260     6 (fixed)
  5044                           ;	Chosen strategy is simple_byte
  5045  055B  3A00               	xorlw	0	; case 0
  5046  055C  1903               	skipnz
  5047  055D  2D3B               	goto	l506
  5048  055E  3A01               	xorlw	1	; case 1
  5049  055F  1903               	skipnz
  5050  0560  2D4D               	goto	l3387
  5051  0561  2D62               	goto	l510
  5052  0562                     l510:	
  5053                           
  5054                           ;I2C2.c: 46: SSP2IE = 1;
  5055  0562  0021               	movlb	1	; select bank1
  5056  0563  1414               	bsf	20,0	;volatile
  5057                           
  5058                           ;I2C2.c: 47: BCL2IE = 1;
  5059  0564  1494               	bsf	20,1	;volatile
  5060                           
  5061                           ;I2C2.c: 48: SSP2IF = 0;
  5062  0565  0020               	movlb	0	; select bank0
  5063  0566  1014               	bcf	20,0	;volatile
  5064                           
  5065                           ;I2C2.c: 49: BCL2IF = 0;
  5066  0567  1094               	bcf	20,1	;volatile
  5067  0568  0008               	return
  5068  0569                     __end_of_I2C2_Setting:	
  5069                           
  5070                           	psect	text20
  5071  0740                     __ptext20:	
  5072 ;; *************** function _I2C2_PinInit *****************
  5073 ;; Defined at:
  5074 ;;		line 9 in file "I2C2.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5088 ;;      Params:         0       0       0       0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0
  5090 ;;      Temps:          1       0       0       0       0       0
  5091 ;;      Totals:         1       0       0       0       0       0
  5092 ;;Total ram usage:        1 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    3
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_I2C2_Setting
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           
  5103                           ;psect for function _I2C2_PinInit
  5104  0740                     _I2C2_PinInit:	
  5105                           
  5106                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  5107                           
  5108                           ;incstack = 0
  5109                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  5110  0740  3024               	movlw	36
  5111  0741  00F2               	movwf	??_I2C2_PinInit
  5112  0742  0872               	movf	??_I2C2_PinInit,w
  5113  0743  0021               	movlb	1	; select bank1
  5114  0744  048D               	iorwf	13,f	;volatile
  5115                           
  5116                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  5117  0745  30DB               	movlw	219
  5118  0746  00F2               	movwf	??_I2C2_PinInit
  5119  0747  0872               	movf	??_I2C2_PinInit,w
  5120  0748  0023               	movlb	3	; select bank3
  5121  0749  058D               	andwf	13,f	;volatile
  5122  074A  0008               	return
  5123  074B                     __end_of_I2C2_PinInit:	
  5124                           
  5125                           	psect	text21
  5126  0569                     __ptext21:	
  5127 ;; *************** function _I2C1_Setting *****************
  5128 ;; Defined at:
  5129 ;;		line 15 in file "I2C1.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  address         1    wreg     unsigned char 
  5132 ;;  mode            1    3[COMMON] enum E3045
  5133 ;;  Speed           1    4[COMMON] enum E3049
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  address         1    6[COMMON] unsigned char 
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5145 ;;      Params:         2       0       0       0       0       0
  5146 ;;      Locals:         1       0       0       0       0       0
  5147 ;;      Temps:          1       0       0       0       0       0
  5148 ;;      Totals:         4       0       0       0       0       0
  5149 ;;Total ram usage:        4 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:    4
  5152 ;; This function calls:
  5153 ;;		_I2C1_PinInit
  5154 ;; This function is called by:
  5155 ;;		_I2C_Init
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           
  5160                           ;psect for function _I2C1_Setting
  5161  0569                     _I2C1_Setting:	
  5162                           
  5163                           ;incstack = 0
  5164                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5165                           ;I2C1_Setting@address stored from wreg
  5166  0569  00F6               	movwf	I2C1_Setting@address
  5167                           
  5168                           ;I2C1.c: 17: I2C1_PinInit();
  5169  056A  3187  274B  3185   	fcall	_I2C1_PinInit
  5170                           
  5171                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  5172  056D  0873               	movf	I2C1_Setting@mode,w
  5173  056E  00F5               	movwf	??_I2C1_Setting
  5174  056F  0875               	movf	??_I2C1_Setting,w
  5175  0570  0021               	movlb	1	; select bank1
  5176  0571  00C5               	movwf	(_I2C1_Config^(0+128)+18)
  5177                           
  5178                           ;I2C1.c: 20: switch(mode)
  5179  0572  2D92               	goto	l3315
  5180  0573                     l369:	
  5181                           ;I2C1.c: 21: {
  5182                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  5183                           
  5184                           
  5185                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  5186  0573  0024               	movlb	4	; select bank4
  5187  0574  1595               	bsf	21,3	;volatile
  5188                           
  5189                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5190  0575  0874               	movf	I2C1_Setting@Speed,w
  5191  0576  1D03               	btfss	3,2
  5192  0577  2D7B               	goto	l3293
  5193                           
  5194                           ;I2C1.c: 25: {
  5195                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  5196  0578  1794               	bsf	20,7	;volatile
  5197                           
  5198                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  5199  0579  304F               	movlw	79
  5200  057A  2D83               	goto	L9
  5201  057B                     l3293:	
  5202                           ;I2C1.c: 28: }
  5203                           
  5204                           
  5205                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5206  057B  0374               	decf	I2C1_Setting@Speed,w
  5207  057C  1D03               	btfss	3,2
  5208  057D  2D90               	goto	l3311
  5209                           
  5210                           ;I2C1.c: 30: {
  5211                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  5212  057E  307F               	movlw	127
  5213  057F  00F5               	movwf	??_I2C1_Setting
  5214  0580  0875               	movf	??_I2C1_Setting,w
  5215  0581  0594               	andwf	20,f	;volatile
  5216                           
  5217                           ;I2C1.c: 32: SSP1ADD = 0x13;
  5218  0582  3013               	movlw	19
  5219  0583                     L9:	
  5220  0583  0092               	movwf	18	;volatile
  5221  0584  2D90               	goto	l3311
  5222  0585                     l3301:	
  5223                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  5224                           
  5225                           ;I2C1.c: 35: break;
  5226                           
  5227                           ;I2C1.c: 33: }
  5228                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  5229                           
  5230                           
  5231                           ;I2C1.c: 38: SSP1STAT = 0x00;
  5232  0585  0024               	movlb	4	; select bank4
  5233  0586  0194               	clrf	20	;volatile
  5234                           
  5235                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  5236  0587  3006               	movlw	6
  5237  0588  00F5               	movwf	??_I2C1_Setting
  5238  0589  0875               	movf	??_I2C1_Setting,w
  5239  058A  0495               	iorwf	21,f	;volatile
  5240                           
  5241                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  5242  058B  1416               	bsf	22,0	;volatile
  5243                           
  5244                           ;I2C1.c: 41: SSP1ADD = address << 1;
  5245  058C  3576               	lslf	I2C1_Setting@address,w
  5246  058D  0092               	movwf	18	;volatile
  5247                           
  5248                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  5249  058E  30FE               	movlw	254
  5250  058F  0093               	movwf	19	;volatile
  5251  0590                     l3311:	
  5252                           
  5253                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  5254  0590  1695               	bsf	21,5	;volatile
  5255                           
  5256                           ;I2C1.c: 45: }
  5257                           
  5258                           ;I2C1.c: 44: break;
  5259  0591  2D9A               	goto	l373
  5260  0592                     l3315:	
  5261  0592  0873               	movf	I2C1_Setting@mode,w
  5262                           
  5263                           ; Switch size 1, requested type "space"
  5264                           ; Number of cases is 2, Range of values is 0 to 1
  5265                           ; switch strategies available:
  5266                           ; Name         Instructions Cycles
  5267                           ; simple_byte            7     4 (average)
  5268                           ; direct_byte           10     6 (fixed)
  5269                           ; jumptable            260     6 (fixed)
  5270                           ;	Chosen strategy is simple_byte
  5271  0593  3A00               	xorlw	0	; case 0
  5272  0594  1903               	skipnz
  5273  0595  2D73               	goto	l369
  5274  0596  3A01               	xorlw	1	; case 1
  5275  0597  1903               	skipnz
  5276  0598  2D85               	goto	l3301
  5277  0599  2D9A               	goto	l373
  5278  059A                     l373:	
  5279                           
  5280                           ;I2C1.c: 46: SSP1IE = 1;
  5281  059A  0021               	movlb	1	; select bank1
  5282  059B  1591               	bsf	17,3	;volatile
  5283                           
  5284                           ;I2C1.c: 47: BCL1IE = 1;
  5285  059C  1592               	bsf	18,3	;volatile
  5286                           
  5287                           ;I2C1.c: 48: SSP1IF = 0;
  5288  059D  0020               	movlb	0	; select bank0
  5289  059E  1191               	bcf	17,3	;volatile
  5290                           
  5291                           ;I2C1.c: 49: BCL1IF = 0;
  5292  059F  1192               	bcf	18,3	;volatile
  5293  05A0  0008               	return
  5294  05A1                     __end_of_I2C1_Setting:	
  5295                           
  5296                           	psect	text22
  5297  074B                     __ptext22:	
  5298 ;; *************** function _I2C1_PinInit *****************
  5299 ;; Defined at:
  5300 ;;		line 9 in file "I2C1.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5314 ;;      Params:         0       0       0       0       0       0
  5315 ;;      Locals:         0       0       0       0       0       0
  5316 ;;      Temps:          1       0       0       0       0       0
  5317 ;;      Totals:         1       0       0       0       0       0
  5318 ;;Total ram usage:        1 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    3
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_I2C1_Setting
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           
  5329                           ;psect for function _I2C1_PinInit
  5330  074B                     _I2C1_PinInit:	
  5331                           
  5332                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  5333                           
  5334                           ;incstack = 0
  5335                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  5336  074B  3012               	movlw	18
  5337  074C  00F2               	movwf	??_I2C1_PinInit
  5338  074D  0872               	movf	??_I2C1_PinInit,w
  5339  074E  0021               	movlb	1	; select bank1
  5340  074F  048D               	iorwf	13,f	;volatile
  5341                           
  5342                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  5343  0750  30ED               	movlw	237
  5344  0751  00F2               	movwf	??_I2C1_PinInit
  5345  0752  0872               	movf	??_I2C1_PinInit,w
  5346  0753  0023               	movlb	3	; select bank3
  5347  0754  058D               	andwf	13,f	;volatile
  5348  0755  0008               	return
  5349  0756                     __end_of_I2C1_PinInit:	
  5350                           
  5351                           	psect	text23
  5352  066F                     __ptext23:	
  5353 ;; *************** function _Buzer_Init *****************
  5354 ;; Defined at:
  5355 ;;		line 9 in file "Buzer.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;		None
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;		None
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg, status,2, status,0
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5369 ;;      Params:         0       0       0       0       0       0
  5370 ;;      Locals:         0       0       0       0       0       0
  5371 ;;      Temps:          1       0       0       0       0       0
  5372 ;;      Totals:         1       0       0       0       0       0
  5373 ;;Total ram usage:        1 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    3
  5376 ;; This function calls:
  5377 ;;		Nothing
  5378 ;; This function is called by:
  5379 ;;		_main
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           
  5384                           ;psect for function _Buzer_Init
  5385  066F                     _Buzer_Init:	
  5386                           
  5387                           ;Buzer.c: 11: TRISA &= ~(0x01<<7);
  5388                           
  5389                           ;incstack = 0
  5390                           ; Regs used in _Buzer_Init: [wreg+status,2+status,0]
  5391  066F  307F               	movlw	127
  5392  0670  00F2               	movwf	??_Buzer_Init
  5393  0671  0872               	movf	??_Buzer_Init,w
  5394  0672  0021               	movlb	1	; select bank1
  5395  0673  058C               	andwf	12,f	;volatile
  5396                           
  5397                           ;Buzer.c: 12: ANSELA &= ~(0x01<<7);
  5398  0674  307F               	movlw	127
  5399  0675  00F2               	movwf	??_Buzer_Init
  5400  0676  0872               	movf	??_Buzer_Init,w
  5401  0677  0023               	movlb	3	; select bank3
  5402  0678  058C               	andwf	12,f	;volatile
  5403                           
  5404                           ;Buzer.c: 13: APFCON0 |= (0x01<<3);
  5405  0679  0022               	movlb	2	; select bank2
  5406  067A  159D               	bsf	29,3	;volatile
  5407                           
  5408                           ;Buzer.c: 15: T2CON |= (0x00<<3);
  5409  067B  0020               	movlb	0	; select bank0
  5410  067C  081C               	movf	28,w	;volatile
  5411                           
  5412                           ;Buzer.c: 16: T2CON |= (0x02<<0);
  5413  067D  149C               	bsf	28,1	;volatile
  5414                           
  5415                           ;Buzer.c: 17: T2CON |= (0x01<<2);
  5416  067E  151C               	bsf	28,2	;volatile
  5417                           
  5418                           ;Buzer.c: 19: TMR2 = 0x00;
  5419  067F  019A               	clrf	26	;volatile
  5420                           
  5421                           ;Buzer.c: 20: PR2 = 0xFF;
  5422  0680  30FF               	movlw	255
  5423  0681  009B               	movwf	27	;volatile
  5424                           
  5425                           ;Buzer.c: 22: CCP2CON &= ~(0x03<<6);
  5426  0682  303F               	movlw	63
  5427  0683  00F2               	movwf	??_Buzer_Init
  5428  0684  0872               	movf	??_Buzer_Init,w
  5429  0685  0025               	movlb	5	; select bank5
  5430  0686  059A               	andwf	26,f	;volatile
  5431                           
  5432                           ;Buzer.c: 23: CCP2CON |= (0x0C<<0);
  5433  0687  300C               	movlw	12
  5434  0688  00F2               	movwf	??_Buzer_Init
  5435  0689  0872               	movf	??_Buzer_Init,w
  5436  068A  049A               	iorwf	26,f	;volatile
  5437                           
  5438                           ;Buzer.c: 24: CCPTMRS &= ~(0x03<<2);
  5439  068B  30F3               	movlw	243
  5440  068C  00F2               	movwf	??_Buzer_Init
  5441  068D  0872               	movf	??_Buzer_Init,w
  5442  068E  059E               	andwf	30,f	;volatile
  5443                           
  5444                           ;Buzer.c: 26: CCPR2L = 0x00;
  5445  068F  0198               	clrf	24	;volatile
  5446  0690  0008               	return
  5447  0691                     __end_of_Buzer_Init:	
  5448                           
  5449                           	psect	text24
  5450  06F9                     __ptext24:	
  5451 ;; *************** function _Basic_Init *****************
  5452 ;; Defined at:
  5453 ;;		line 29 in file "main.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      char 
  5460 ;; Registers used:
  5461 ;;		wreg, status,2
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5467 ;;      Params:         0       0       0       0       0       0
  5468 ;;      Locals:         0       0       0       0       0       0
  5469 ;;      Temps:          0       0       0       0       0       0
  5470 ;;      Totals:         0       0       0       0       0       0
  5471 ;;Total ram usage:        0 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    3
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_main
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           
  5482                           ;psect for function _Basic_Init
  5483  06F9                     _Basic_Init:	
  5484                           
  5485                           ;main.c: 31: OSCCON = 0xF0;
  5486                           
  5487                           ;incstack = 0
  5488                           ; Regs used in _Basic_Init: [wreg+status,2]
  5489  06F9  30F0               	movlw	240
  5490  06FA  0021               	movlb	1	; select bank1
  5491  06FB  0099               	movwf	25	;volatile
  5492                           
  5493                           ;main.c: 35: TRISA = 0x07;
  5494  06FC  3007               	movlw	7
  5495  06FD  008C               	movwf	12	;volatile
  5496                           
  5497                           ;main.c: 36: ANSELA = 0x07;
  5498  06FE  3007               	movlw	7
  5499  06FF  0023               	movlb	3	; select bank3
  5500  0700  008C               	movwf	12	;volatile
  5501                           
  5502                           ;main.c: 38: TRISB = 0x40;
  5503  0701  3040               	movlw	64
  5504  0702  0021               	movlb	1	; select bank1
  5505  0703  008D               	movwf	13	;volatile
  5506                           
  5507                           ;main.c: 39: ANSELB = 0x00;
  5508  0704  0023               	movlb	3	; select bank3
  5509  0705  018D               	clrf	13	;volatile
  5510                           
  5511                           ;main.c: 41: APFCON0 = 0x08;
  5512  0706  3008               	movlw	8
  5513  0707  0022               	movlb	2	; select bank2
  5514  0708  009D               	movwf	29	;volatile
  5515                           
  5516                           ;main.c: 42: APFCON1 = 0x00;
  5517  0709  019E               	clrf	30	;volatile
  5518                           
  5519                           ;main.c: 44: PORTA = 0x00;
  5520  070A  0020               	movlb	0	; select bank0
  5521  070B  018C               	clrf	12	;volatile
  5522                           
  5523                           ;main.c: 45: PORTB = 0x00;
  5524  070C  018D               	clrf	13	;volatile
  5525  070D  0008               	return
  5526  070E                     __end_of_Basic_Init:	
  5527                           ;main.c: 47: return 0;
  5528                           ;	Return value of _Basic_Init is never used
  5529                           
  5530                           
  5531                           	psect	intentry
  5532  0004                     __pintentry:	
  5533 ;; *************** function _Handler *****************
  5534 ;; Defined at:
  5535 ;;		line 50 in file "main.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;		None
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  1    wreg      void 
  5542 ;; Registers used:
  5543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5549 ;;      Params:         0       0       0       0       0       0
  5550 ;;      Locals:         0       0       0       0       0       0
  5551 ;;      Temps:          1       0       0       0       0       0
  5552 ;;      Totals:         1       0       0       0       0       0
  5553 ;;Total ram usage:        1 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    2
  5556 ;; This function calls:
  5557 ;;		_I2C_CommonInterrupt
  5558 ;;		_Timer1_Handler
  5559 ;; This function is called by:
  5560 ;;		Interrupt level 1
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564  0004                     _Handler:	
  5565                           
  5566                           ;incstack = 0
  5567  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5568                           
  5569                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5570  0005  3180               	pagesel	$
  5571  0006  0020               	movlb	0	; select bank0
  5572  0007  087F               	movf	127,w
  5573  0008  00F1               	movwf	??_Handler
  5574                           
  5575                           ;main.c: 52: Timer1_Handler();
  5576  0009  3187  2756  3180   	fcall	_Timer1_Handler
  5577                           
  5578                           ;main.c: 53: I2C_CommonInterrupt();
  5579  000C  3187  276B         	fcall	_I2C_CommonInterrupt
  5580  000E  0871               	movf	??_Handler,w
  5581  000F  0020               	movlb	0	; select bank0
  5582  0010  00FF               	movwf	127
  5583  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5584  0012  0009               	retfie
  5585  0013                     __end_of_Handler:	
  5586                           
  5587                           	psect	text26
  5588  0756                     __ptext26:	
  5589 ;; *************** function _Timer1_Handler *****************
  5590 ;; Defined at:
  5591 ;;		line 33 in file "Timer1.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		None
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5605 ;;      Params:         0       0       0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0
  5608 ;;      Totals:         0       0       0       0       0       0
  5609 ;;Total ram usage:        0 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_Handler
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           
  5619                           ;psect for function _Timer1_Handler
  5620  0756                     _Timer1_Handler:	
  5621                           
  5622                           ;Timer1.c: 35: if(TMR1IF&&TMR1IE)
  5623                           
  5624                           ;incstack = 0
  5625                           ; Regs used in _Timer1_Handler: []
  5626  0756  0020               	movlb	0	; select bank0
  5627  0757  1C11               	btfss	17,0	;volatile
  5628  0758  0008               	return
  5629  0759  0021               	movlb	1	; select bank1
  5630  075A  1C11               	btfss	17,0	;volatile
  5631  075B  0008               	return
  5632                           
  5633                           ;Timer1.c: 36: {
  5634                           ;Timer1.c: 37: TMR1IF = 0;
  5635  075C  0020               	movlb	0	; select bank0
  5636  075D  1011               	bcf	17,0	;volatile
  5637  075E  0008               	return
  5638  075F                     __end_of_Timer1_Handler:	
  5639                           
  5640                           	psect	text27
  5641  076B                     __ptext27:	
  5642 ;; *************** function _I2C_CommonInterrupt *****************
  5643 ;; Defined at:
  5644 ;;		line 58 in file "I2C_Common.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;		None
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5658 ;;      Params:         0       0       0       0       0       0
  5659 ;;      Locals:         0       0       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0
  5661 ;;      Totals:         0       0       0       0       0       0
  5662 ;;Total ram usage:        0 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; Hardware stack levels required when called:    1
  5665 ;; This function calls:
  5666 ;;		_I2C1_Interrupt
  5667 ;;		_I2C2_Interrupt
  5668 ;; This function is called by:
  5669 ;;		_Handler
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           
  5674                           ;psect for function _I2C_CommonInterrupt
  5675  076B                     _I2C_CommonInterrupt:	
  5676                           
  5677                           ;I2C_Common.c: 60: I2C1_Interrupt();
  5678                           
  5679                           ;incstack = 0
  5680                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5681  076B  3184  240D  3187   	fcall	_I2C1_Interrupt
  5682                           
  5683                           ;I2C_Common.c: 61: I2C2_Interrupt();
  5684  076E  3183  23B9         	fcall	_I2C2_Interrupt
  5685  0770  0008               	return
  5686  0771                     __end_of_I2C_CommonInterrupt:	
  5687                           
  5688                           	psect	text28
  5689  03B9                     __ptext28:	
  5690 ;; *************** function _I2C2_Interrupt *****************
  5691 ;; Defined at:
  5692 ;;		line 152 in file "I2C2.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;		None
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;		None
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1    wreg      void 
  5699 ;; Registers used:
  5700 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5706 ;;      Params:         0       0       0       0       0       0
  5707 ;;      Locals:         0       0       0       0       0       0
  5708 ;;      Temps:          1       0       0       0       0       0
  5709 ;;      Totals:         1       0       0       0       0       0
  5710 ;;Total ram usage:        1 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; This function calls:
  5713 ;;		Nothing
  5714 ;; This function is called by:
  5715 ;;		_I2C_CommonInterrupt
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           
  5720                           ;psect for function _I2C2_Interrupt
  5721  03B9                     _I2C2_Interrupt:	
  5722                           
  5723                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  5724                           
  5725                           ;incstack = 0
  5726                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  5727  03B9  0020               	movlb	0	; select bank0
  5728  03BA  1C14               	btfss	20,0	;volatile
  5729  03BB  2C05               	goto	i1l2839
  5730  03BC  0021               	movlb	1	; select bank1
  5731  03BD  1C14               	btfss	20,0	;volatile
  5732  03BE  2C05               	goto	i1l2839
  5733                           
  5734                           ;I2C2.c: 155: {
  5735                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  5736  03BF  0024               	movlb	4	; select bank4
  5737  03C0  1E9C               	btfss	28,5	;volatile
  5738  03C1  2BDC               	goto	i1l589
  5739                           
  5740                           ;I2C2.c: 157: {
  5741                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  5742  03C2  1D1C               	btfss	28,2	;volatile
  5743  03C3  2BCF               	goto	i1l2815
  5744                           
  5745                           ;I2C2.c: 159: {
  5746                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  5747  03C4  1B1E               	btfsc	30,6	;volatile
  5748  03C5  2C03               	goto	i1l2837
  5749  03C6                     i1l2807:	
  5750                           ;I2C2.c: 161: {
  5751                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  5752                           
  5753  03C6  081C               	movf	28,w	;volatile
  5754  03C7  3901               	andlw	1
  5755  03C8  00F0               	movwf	??_I2C2_Interrupt
  5756  03C9  0E1D               	swapf	29,w	;volatile
  5757  03CA  3901               	andlw	1
  5758  03CB  0470               	iorwf	??_I2C2_Interrupt,w
  5759  03CC  1D03               	btfss	3,2
  5760  03CD  2BC6               	goto	i1l2807
  5761  03CE  2BEF               	goto	L10
  5762  03CF                     i1l2815:	
  5763                           ;I2C2.c: 166: }
  5764                           ;I2C2.c: 167: }
  5765                           
  5766                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  5767                           
  5768                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  5769                           
  5770                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  5771                           
  5772                           
  5773                           ;I2C2.c: 168: else
  5774                           ;I2C2.c: 169: {
  5775                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  5776  03CF  0819               	movf	25,w	;volatile
  5777  03D0  00F0               	movwf	??_I2C2_Interrupt
  5778  03D1  0021               	movlb	1	; select bank1
  5779  03D2  0831               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  5780  03D3  0086               	movwf	6
  5781  03D4  0187               	clrf	7
  5782  03D5  0870               	movf	??_I2C2_Interrupt,w
  5783  03D6  0081               	movwf	1
  5784                           
  5785                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  5786  03D7  3001               	movlw	1
  5787  03D8  00F0               	movwf	??_I2C2_Interrupt
  5788  03D9  0870               	movf	??_I2C2_Interrupt,w
  5789  03DA  07B1               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  5790  03DB  2C01               	goto	i1l2835
  5791  03DC                     i1l589:	
  5792                           ;I2C2.c: 173: }
  5793                           ;I2C2.c: 174: }
  5794                           
  5795                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  5796                           
  5797                           
  5798                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  5799  03DC  1A9C               	btfsc	28,5	;volatile
  5800  03DD  2C03               	goto	i1l2837
  5801                           
  5802                           ;I2C2.c: 176: {
  5803                           ;I2C2.c: 177: SSP2BUF;
  5804  03DE  0819               	movf	25,w	;volatile
  5805                           
  5806                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  5807  03DF  1D1C               	btfss	28,2	;volatile
  5808  03E0  2BFC               	goto	i1l2833
  5809                           
  5810                           ;I2C2.c: 180: {
  5811                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  5812  03E1  30A0               	movlw	(low (_I2C2_Config| 0))& (0+255)
  5813  03E2  00F0               	movwf	??_I2C2_Interrupt
  5814  03E3  0870               	movf	??_I2C2_Interrupt,w
  5815  03E4  0021               	movlb	1	; select bank1
  5816  03E5  00B0               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  5817  03E6                     i1l2827:	
  5818                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  5819                           
  5820  03E6  0024               	movlb	4	; select bank4
  5821  03E7  081C               	movf	28,w	;volatile
  5822  03E8  3901               	andlw	1
  5823  03E9  00F0               	movwf	??_I2C2_Interrupt
  5824  03EA  0E1D               	swapf	29,w	;volatile
  5825  03EB  3901               	andlw	1
  5826  03EC  0470               	iorwf	??_I2C2_Interrupt,w
  5827  03ED  1D03               	btfss	3,2
  5828  03EE  2BE6               	goto	i1l2827
  5829  03EF                     L10:	
  5830                           
  5831                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  5832  03EF  0021               	movlb	1	; select bank1
  5833  03F0  0830               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  5834  03F1  0086               	movwf	6
  5835  03F2  0187               	clrf	7
  5836  03F3  0801               	movf	1,w
  5837  03F4  0024               	movlb	4	; select bank4
  5838  03F5  0099               	movwf	25	;volatile
  5839                           
  5840                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  5841  03F6  3001               	movlw	1
  5842  03F7  00F0               	movwf	??_I2C2_Interrupt
  5843  03F8  0870               	movf	??_I2C2_Interrupt,w
  5844  03F9  0021               	movlb	1	; select bank1
  5845  03FA  07B0               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  5846                           
  5847                           ;I2C2.c: 186: }
  5848  03FB  2C01               	goto	i1l2835
  5849  03FC                     i1l2833:	
  5850                           
  5851                           ;I2C2.c: 187: else
  5852                           ;I2C2.c: 188: {
  5853                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  5854  03FC  30A8               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  5855  03FD  00F0               	movwf	??_I2C2_Interrupt
  5856  03FE  0870               	movf	??_I2C2_Interrupt,w
  5857  03FF  0021               	movlb	1	; select bank1
  5858  0400  00B1               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  5859  0401                     i1l2835:	
  5860                           
  5861                           ;I2C2.c: 190: }
  5862                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  5863  0401  0024               	movlb	4	; select bank4
  5864  0402  161D               	bsf	29,4	;volatile
  5865  0403                     i1l2837:	
  5866                           
  5867                           ;I2C2.c: 192: }
  5868                           ;I2C2.c: 193: SSP2IF = 0;
  5869  0403  0020               	movlb	0	; select bank0
  5870  0404  1014               	bcf	20,0	;volatile
  5871  0405                     i1l2839:	
  5872                           
  5873                           ;I2C2.c: 194: }
  5874                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  5875  0405  0021               	movlb	1	; select bank1
  5876  0406  1C94               	btfss	20,1	;volatile
  5877  0407  0008               	return
  5878  0408  0020               	movlb	0	; select bank0
  5879  0409  1C94               	btfss	20,1	;volatile
  5880  040A  0008               	return
  5881                           
  5882                           ;I2C2.c: 197: BCL2IF = 0;
  5883  040B  1094               	bcf	20,1	;volatile
  5884  040C  0008               	return
  5885  040D                     __end_of_I2C2_Interrupt:	
  5886                           
  5887                           	psect	text29
  5888  040D                     __ptext29:	
  5889 ;; *************** function _I2C1_Interrupt *****************
  5890 ;; Defined at:
  5891 ;;		line 152 in file "I2C1.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;		None
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;		None
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      void 
  5898 ;; Registers used:
  5899 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5905 ;;      Params:         0       0       0       0       0       0
  5906 ;;      Locals:         0       0       0       0       0       0
  5907 ;;      Temps:          1       0       0       0       0       0
  5908 ;;      Totals:         1       0       0       0       0       0
  5909 ;;Total ram usage:        1 bytes
  5910 ;; Hardware stack levels used:    1
  5911 ;; This function calls:
  5912 ;;		Nothing
  5913 ;; This function is called by:
  5914 ;;		_I2C_CommonInterrupt
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           
  5919                           ;psect for function _I2C1_Interrupt
  5920  040D                     _I2C1_Interrupt:	
  5921                           
  5922                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  5923                           
  5924                           ;incstack = 0
  5925                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  5926  040D  0020               	movlb	0	; select bank0
  5927  040E  1D91               	btfss	17,3	;volatile
  5928  040F  2C59               	goto	i1l2789
  5929  0410  0021               	movlb	1	; select bank1
  5930  0411  1D91               	btfss	17,3	;volatile
  5931  0412  2C59               	goto	i1l2789
  5932                           
  5933                           ;I2C1.c: 155: {
  5934                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  5935  0413  0024               	movlb	4	; select bank4
  5936  0414  1E94               	btfss	20,5	;volatile
  5937  0415  2C30               	goto	i1l452
  5938                           
  5939                           ;I2C1.c: 157: {
  5940                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  5941  0416  1D14               	btfss	20,2	;volatile
  5942  0417  2C23               	goto	i1l2765
  5943                           
  5944                           ;I2C1.c: 159: {
  5945                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  5946  0418  1B16               	btfsc	22,6	;volatile
  5947  0419  2C57               	goto	i1l2787
  5948  041A                     i1l2757:	
  5949                           ;I2C1.c: 161: {
  5950                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  5951                           
  5952  041A  0814               	movf	20,w	;volatile
  5953  041B  3901               	andlw	1
  5954  041C  00F0               	movwf	??_I2C1_Interrupt
  5955  041D  0E15               	swapf	21,w	;volatile
  5956  041E  3901               	andlw	1
  5957  041F  0470               	iorwf	??_I2C1_Interrupt,w
  5958  0420  1D03               	btfss	3,2
  5959  0421  2C1A               	goto	i1l2757
  5960  0422  2C43               	goto	L11
  5961  0423                     i1l2765:	
  5962                           ;I2C1.c: 166: }
  5963                           ;I2C1.c: 167: }
  5964                           
  5965                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  5966                           
  5967                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  5968                           
  5969                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  5970                           
  5971                           
  5972                           ;I2C1.c: 168: else
  5973                           ;I2C1.c: 169: {
  5974                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  5975  0423  0811               	movf	17,w	;volatile
  5976  0424  00F0               	movwf	??_I2C1_Interrupt
  5977  0425  0021               	movlb	1	; select bank1
  5978  0426  0844               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  5979  0427  0086               	movwf	6
  5980  0428  0187               	clrf	7
  5981  0429  0870               	movf	??_I2C1_Interrupt,w
  5982  042A  0081               	movwf	1
  5983                           
  5984                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  5985  042B  3001               	movlw	1
  5986  042C  00F0               	movwf	??_I2C1_Interrupt
  5987  042D  0870               	movf	??_I2C1_Interrupt,w
  5988  042E  07C4               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  5989  042F  2C55               	goto	i1l2785
  5990  0430                     i1l452:	
  5991                           ;I2C1.c: 173: }
  5992                           ;I2C1.c: 174: }
  5993                           
  5994                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  5995                           
  5996                           
  5997                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  5998  0430  1A94               	btfsc	20,5	;volatile
  5999  0431  2C57               	goto	i1l2787
  6000                           
  6001                           ;I2C1.c: 176: {
  6002                           ;I2C1.c: 177: SSP1BUF;
  6003  0432  0811               	movf	17,w	;volatile
  6004                           
  6005                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  6006  0433  1D14               	btfss	20,2	;volatile
  6007  0434  2C50               	goto	i1l2783
  6008                           
  6009                           ;I2C1.c: 180: {
  6010                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  6011  0435  30B3               	movlw	(low (_I2C1_Config| 0))& (0+255)
  6012  0436  00F0               	movwf	??_I2C1_Interrupt
  6013  0437  0870               	movf	??_I2C1_Interrupt,w
  6014  0438  0021               	movlb	1	; select bank1
  6015  0439  00C3               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  6016  043A                     i1l2777:	
  6017                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  6018                           
  6019  043A  0024               	movlb	4	; select bank4
  6020  043B  0814               	movf	20,w	;volatile
  6021  043C  3901               	andlw	1
  6022  043D  00F0               	movwf	??_I2C1_Interrupt
  6023  043E  0E15               	swapf	21,w	;volatile
  6024  043F  3901               	andlw	1
  6025  0440  0470               	iorwf	??_I2C1_Interrupt,w
  6026  0441  1D03               	btfss	3,2
  6027  0442  2C3A               	goto	i1l2777
  6028  0443                     L11:	
  6029                           
  6030                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  6031  0443  0021               	movlb	1	; select bank1
  6032  0444  0843               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  6033  0445  0086               	movwf	6
  6034  0446  0187               	clrf	7
  6035  0447  0801               	movf	1,w
  6036  0448  0024               	movlb	4	; select bank4
  6037  0449  0091               	movwf	17	;volatile
  6038                           
  6039                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  6040  044A  3001               	movlw	1
  6041  044B  00F0               	movwf	??_I2C1_Interrupt
  6042  044C  0870               	movf	??_I2C1_Interrupt,w
  6043  044D  0021               	movlb	1	; select bank1
  6044  044E  07C3               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  6045                           
  6046                           ;I2C1.c: 186: }
  6047  044F  2C55               	goto	i1l2785
  6048  0450                     i1l2783:	
  6049                           
  6050                           ;I2C1.c: 187: else
  6051                           ;I2C1.c: 188: {
  6052                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  6053  0450  30BB               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  6054  0451  00F0               	movwf	??_I2C1_Interrupt
  6055  0452  0870               	movf	??_I2C1_Interrupt,w
  6056  0453  0021               	movlb	1	; select bank1
  6057  0454  00C4               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  6058  0455                     i1l2785:	
  6059                           
  6060                           ;I2C1.c: 190: }
  6061                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  6062  0455  0024               	movlb	4	; select bank4
  6063  0456  1615               	bsf	21,4	;volatile
  6064  0457                     i1l2787:	
  6065                           
  6066                           ;I2C1.c: 192: }
  6067                           ;I2C1.c: 193: SSP1IF = 0;
  6068  0457  0020               	movlb	0	; select bank0
  6069  0458  1191               	bcf	17,3	;volatile
  6070  0459                     i1l2789:	
  6071                           
  6072                           ;I2C1.c: 194: }
  6073                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  6074  0459  0021               	movlb	1	; select bank1
  6075  045A  1D92               	btfss	18,3	;volatile
  6076  045B  0008               	return
  6077  045C  0020               	movlb	0	; select bank0
  6078  045D  1D92               	btfss	18,3	;volatile
  6079  045E  0008               	return
  6080                           
  6081                           ;I2C1.c: 197: BCL1IF = 0;
  6082  045F  1192               	bcf	18,3	;volatile
  6083  0460  0008               	return
  6084  0461                     __end_of_I2C1_Interrupt:	
  6085  007E                     btemp	set	126	;btemp
  6086  007E                     int$flags	set	126
  6087  007E                     wtemp0	set	126


Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     61      71
    BANK1            80      0      38
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S282$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S282$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[13]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[13]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _xvprintf->___lldiv
    _xvprintf->___llmod
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _DAC_Initialize->_I2C_Init
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv
    _DAC_Initialize->_I2C_Transmit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8082
                         _Basic_Init
                         _Buzer_Init
                     _DAC_Initialize
                 _LCD_CursorPosition
                           _LCD_Init
                        _Timer1_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                              8     2      6    4695
                                             53 BANK0      8     2      6
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    4215
                                              5 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     337
                                              8 COMMON     2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     262
                                              6 COMMON     2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     196
                                              5 COMMON     1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     220
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     290
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              6 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              5 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     196
                                              5 COMMON     3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0      88
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                              8 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              0 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              7 COMMON     4     1      3
                                              0 BANK0      2     2      0
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              3 COMMON     4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzer_Init                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0       0
                                              1 COMMON     1     1      0
                _I2C_CommonInterrupt
                     _Timer1_Handler
 ---------------------------------------------------------------------------------
 (8) _Timer1_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_Init
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _Handler (ROOT)
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      79       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3D      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      26       8       47.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      79      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Mar 25 02:36:26 2017

                 __CFG_CP$OFF 0000                I2C2_Transmit@i 0077         ??_I2C_CommonInterrupt 0071  
         ___wmul@multiplicand 0074                           l123 0029                           l138 00A5  
                         l404 0322                           l156 0140                           l510 0562  
                         l506 053B                           l523 026A                           l179 01F7  
                         l532 028D                           l373 059A                           l541 02A4  
                         l369 0573                           l633 0648                           l386 02E8  
                         l395 030B                           l811 06B8                           _GIE 005F  
                         _RA3 0063                           _RA4 0064                           _PR2 001B  
                __CFG_CPD$OFF 0000                  __CFG_BORV$LO 0000                           wreg 0009  
                  _Basic_Init 06F9                  __CFG_LVP$OFF 0000               __end_of_LCD_Put 076B  
                        l2321 05B0                          l3301 0585                          l3311 0590  
                        l2343 070F                          l3401 055A                          l3321 02DE  
                        l2329 05BF                          l3315 0592                          l3331 02FB  
                        l3341 02F3                          l3405 0256                          l3501 0057  
                        l3343 02F7                          l3319 02D4                          l3431 029A  
                        l3407 0260                          l2551 04AB                          l2519 06B2  
                        l3511 006E                          l3345 0318                          l3441 02A9  
                        l3417 027D                          l2537 0472                          l3601 01D5  
                        l3521 009D                          l3355 0327                          l3363 0345  
                        l3443 02C0                          l3451 02D0                          l3427 0275  
                        l2547 04A0                          l2539 0480                          l3293 057B  
                        l3357 033E                          l3365 034E                          l3445 02C5  
                        l3429 0279                          l3461 04BD                          l3605 01DD  
                        l3517 0095                          l3509 006B                          l3359 0343  
                        l3463 04CB                          l3471 04EE                          l3631 022C  
                        l3623 020D                          l3551 00F1                          l3543 00CD  
                        l3641 0624                          l3449 02C7                          l3625 0216  
                        l3617 0205                          l3561 011A                          l3545 00DB  
                        l3537 00C0                          l3529 00B2                          l3387 054D  
                        l3379 0543                          l3643 0632                          l3651 05D1  
                        l3467 04E3                          l3635 023E                          l3627 021A  
                        l3563 011C                          l3555 00F5                          l3547 00DF  
                        l3571 0128                          l3397 0558                          l3653 05DE  
                        l3637 0242                          l3581 0178                          l3565 011E  
                        l3557 010A                          l3647 0640                          l3591 019B  
                        l3583 0188                          l3567 0123                          l3559 0117  
                        l3487 0042                          l3657 05EF                          l3577 015A  
                        l3659 05F7                          l3579 016F                          l3691 0661  
                        l3589 0199                          STR_1 05F9                          STR_2 0620  
                        STR_3 0606                          STR_4 0614                          STR_5 061A  
                        STR_6 060D                          u2015 06B9                          u2025 06BE  
                        u2055 0475                          u2075 0481                          u2085 0495  
                        u2095 04A1                          u3415 04C0                          u1675 04FF  
                        u3435 04D9                          u3445 04E4                          u2675 06EA  
                        u3715 022A                          _PEIE 005E                          u3807 0358  
                        u3735 0250                          u3817 0370                          u3585 00EF  
                        u3827 0383                          u3595 0103                          u3837 0397  
                        u3847 073A                          u3857 06F5                          u3867 04F9  
                        _TMR1 0016                          _TMR2 001A               ??_I2C1_Transmit 0074  
                __CFG_WRT$OFF 0000                          _main 064B              __end_of_I2C_Init 064B  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0074  
            ??_I2C1_Interrupt 0070                          start 0013                 __CFG_IESO$OFF 0000  
             __end_of_Handler 0013                 _LCD_WriteData 04F7                 __CFG_MCLRE$ON 0000  
            ??_I2C2_Interrupt 0070      __end_of_LCD_DisplayClear 0740         __size_of_I2C_Transmit 002B  
            __end_of_LCD_Init 03B9                 __CFG_PLLEN$ON 0000                   LCD_Put@word 0075  
                       ?_main 0070                 __CFG_WDTE$OFF 0000               __end_of___lldiv 04B4  
                       _T1CON 0018               __end_of___llmod 04F7                         _T2CON 001C  
                       i1l452 0430                         i1l589 03DC                         _PORTA 000C  
                       _PORTB 000D                         _TRISA 008C                         _TRISB 008D  
           I2C2_Transmit@size 0073                 __CFG_PWRTE$ON 0000                __CFG_FCMEN$OFF 0000  
                       _xputc 05A1                         _xputs 070E                         pclath 000A  
                       status 0003                         wtemp0 007E               __end_of_xprintf 0731  
                _I2C_Transmit 05CE            _LCD_CursorPosition 06E4                ?_LCD_WriteData 0070  
            ??_DAC_Initialize 0028               __initialization 0015                    _Buzer_Init 066F  
                __end_of_main 066F           ?_LCD_CursorPosition 0075                        ??_main 007B  
                   ??_LCD_Put 0076                   ?_Basic_Init 0070                        _BCL1IE 0493  
                      _BCL1IF 0093                        _BCL2IE 04A1                        _BCL2IF 00A1  
              _Timer1_Handler 0756              ___llmod@dividend 0076                        _CCPR2L 0298  
        ??_LCD_CursorPosition 0076                        _ANSELA 018C                        _ANSELB 018D  
                      _T1GCON 0019                        ?_xputc 0070                        ?_xputs 0070  
                      i1l2807 03C6                        i1l2815 03CF                        i1l2833 03FC  
                      i1l2835 0401                        i1l2827 03E6                        i1l2757 041A  
                      i1l2765 0423                        i1l2837 0403                        i1l2783 0450  
                      i1l2839 0405                        i1l2785 0455                        i1l2777 043A  
                      i1l2787 0457                        i1l2789 0459            I2C2_Transmit@i_552 0078  
                      _OSCCON 0099            I2C2_Transmit@pData 0072                        _TMR1IE 0488  
                      _TMR1IF 0088                     ??_Handler 0071                        _TMR1ON 00C0  
                      _SSP1IE 048B                        _SSP1IF 008B                        _SSP2IE 04A0  
                      _SSP2IF 00A0                 ??_Timer1_Init 0072                        ___wmul 06B0  
                   ??___lldiv 007A                     ??___llmod 007A                        _outptr 007B  
            I2C_Transmit@I2Cx 0026                     ?_I2C_Init 0077        __end_of_Timer1_Handler 075F  
            I2C_Transmit@size 0022                        xputc@c 0077                     ??_xprintf 005B  
     __end_of__initialization 0025                     ?_LCD_Init 0070               ??_LCD_WriteData 0072  
            __end_of_xvprintf 0253                    _VoltageReg 0064                __pcstackCOMMON 0070  
                 ?_Buzer_Init 0070           __size_of_Basic_Init 0015           __end_of_Timer1_Init 06E4  
               __end_of_xputc 05CE                 __end_of_xputs 0721                    ??_I2C_Init 0020  
             ?_Timer1_Handler 0070           I2C1_Transmit@result 0079                       ??_xputc 0076  
                     ??_xputs 0078                    __pbssBANK0 005D                    __pbssBANK1 00A0  
                  ??_LCD_Init 0076                  I2C_Init@I2Cx 007A   __end_of_I2C_CommonInterrupt 0771  
                I2C_Init@mode 0078                    __pmaintext 064B                       ?___wmul 0072  
                  __pintentry 0004                       _CCP2CON 029A             ?_LCD_DisplayClear 0070  
                     _APFCON0 011D                       _APFCON1 011E                       _CCPTMRS 029E  
          ??_LCD_DisplayClear 0075                       _LCD_Put 0765                  _xvprintf$177 003C  
                _xvprintf$178 0040                  _xvprintf$179 0042                       _SSP1ADD 0212  
                     _SSP2ADD 021A                       _SSP1BUF 0211                       _SSP2BUF 0219  
                     _SSP1MSK 0213                       _SSP2MSK 021B           __size_of_Buzer_Init 0022  
         I2C2_Transmit@result 0079                       _Handler 0004         __end_of_I2C1_Transmit 0350  
       __end_of_I2C2_Transmit 02D2                   _Timer1_Init 06CB                       ___lldiv 0461  
             __size_of___wmul 001B                       ___llmod 04B4               __CFG_STVREN$OFF 0000  
                     __ptext1 0721                       __ptext2 0029                       __ptext3 070E  
                     __ptext4 05A1                       __ptext5 0765                       __ptext6 06B0  
                     __ptext7 04B4                       __ptext8 0461                       __ptext9 06CB  
                   ?_xvprintf 0025                  ??_Basic_Init 0072                       clrloop0 0760  
        end_of_initialization 0025                       _xprintf 0721                 ?_I2C1_PinInit 0070  
               ?_I2C2_PinInit 0070                   _I2C1_Config 00B3                   _I2C2_Config 00A0  
               ?_I2C1_Setting 0073               ___lldiv@divisor 0072                 ?_I2C2_Setting 0073  
             ___lldiv@counter 0024             I2C_Transmit@pData 0021            __end_of_Basic_Init 070E  
                __pstringtext 05F9       __size_of_I2C1_Interrupt 0054              __CFG_FOSC$INTOSC 0000  
                  ??_xvprintf 0028       __size_of_I2C2_Interrupt 0054             __size_of_I2C_Init 0029  
         I2C1_Setting@address 0076   __size_of_LCD_CursorPosition 0015                ??_I2C1_PinInit 0072  
              ??_I2C2_PinInit 0072                ??_I2C1_Setting 0075                ??_I2C2_Setting 0075  
           __size_of_LCD_Init 0069                  ??_Buzer_Init 0072                __end_of___wmul 06CB  
                   _ConfigReg 0066              ??_Timer1_Handler 0070       __size_of_DAC_Initialize 001F  
         start_initialization 0015          I2C1_Transmit@address 0076                     _MemoryReg 005D  
          __end_of_Buzer_Init 0691           I2C2_Setting@address 0076               ___llmod@divisor 0072  
             ___llmod@counter 0020          LCD_CursorPosition@tx 0077          LCD_CursorPosition@ty 0075  
       __end_of_LCD_WriteData 0531                      ??___wmul 0076             I2C1_Setting@Speed 0074  
                    ?_LCD_Put 0075                   __pbssCOMMON 007B                     ___latbits 0001  
               __pcstackBANK0 0020            I2C1_Transmit@i_408 0078            I2C1_Transmit@pData 0072  
   __size_of_LCD_DisplayClear 000F               I2C_Init@address 0077                      ?_Handler 0070  
               ?_I2C_Transmit 0020                 I2C_Init@Speed 0079                  ?_Timer1_Init 0070  
                    ?___lldiv 0072                      ?___llmod 0072                _I2C1_Interrupt 040D  
        __end_of_I2C1_PinInit 0756  __size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 074B  
        __end_of_I2C1_Setting 05A1                      _I2C_Init 0622          __end_of_I2C2_Setting 0569  
              _I2C2_Interrupt 03B9             __size_of_xvprintf 022A                      ?_xprintf 0055  
              __size_of_xputc 002D                __size_of_xputs 0013                      _LCD_Init 0350  
              ___wmul@product 0076                ??_I2C_Transmit 0023                     clear_ram0 075F  
      __end_of_I2C1_Interrupt 0461                      _SSP1CON1 0215                      _SSP1CON2 0216  
        I2C2_Transmit@address 0076                      _SSP2CON1 021D                      _SSP2CON2 021E  
                    _SSP1STAT 0214                      _SSP2STAT 021C             ___wmul@multiplier 0072  
              _DAC_Initialize 0691        __end_of_I2C2_Interrupt 040D        __size_of_I2C1_Transmit 007E  
                   _xfunc_out 0062              __size_of_LCD_Put 0006        __size_of_I2C2_Transmit 007F  
            __size_of_Handler 000F               ?_I2C1_Interrupt 0070        __end_of_DAC_Initialize 06B0  
            __size_of___lldiv 0053              __size_of___llmod 0043              I2C1_Setting@mode 0073  
          LCD_WriteData@point 0074               ?_I2C2_Interrupt 0070             I2C1_Transmit@size 0073  
  __end_of_LCD_CursorPosition 06F9                      __ptext10 0350                      __ptext11 0731  
                    __ptext20 0740                      __ptext12 06E4                      __ptext21 0569  
                    __ptext13 04F7                      __ptext22 074B                      __ptext14 0691  
                    __ptext23 066F                      __ptext15 05CE                      __ptext24 06F9  
                    __ptext16 0253                      __ptext17 02D2                      __ptext26 0756  
                    __ptext18 0622                      __ptext27 076B                      __ptext19 0531  
                    __ptext28 03B9                      __ptext29 040D                  _SSP1CON1bits 0215  
                _SSP1CON2bits 0216              _LCD_DisplayClear 0731                  _SSP2CON1bits 021D  
                _SSP2CON2bits 021E              __size_of_xprintf 0010                 __size_of_main 0024  
               _I2C1_Transmit 02D2                 _I2C2_Transmit 0253         __size_of_I2C1_PinInit 000B  
        __size_of_Timer1_Init 0019                      int$flags 007E         __size_of_I2C2_PinInit 000B  
         I2C_Transmit@address 0020         __size_of_I2C1_Setting 0038               ?_DAC_Initialize 0070  
                _SSP1STATbits 0214                      _xfunc_in 0060         __size_of_I2C2_Setting 0038  
                _SSP2STATbits 021C          __end_of_I2C_Transmit 05F9             I2C2_Setting@Speed 0074  
                    _xvprintf 0029                    xprintf@arp 005C                    xprintf@fmt 0055  
                    intlevel1 0000           _I2C_CommonInterrupt 076B                  _I2C1_PinInit 074B  
            ___lldiv@dividend 0076                ?_I2C1_Transmit 0072             __CFG_CLKOUTEN$OFF 0000  
                _I2C2_PinInit 0740                  _I2C1_Setting 0569                ?_I2C2_Transmit 0072  
                _I2C2_Setting 0531                   xvprintf@arp 0027                   xvprintf@fmt 0025  
          I2C_Transmit@result 0027              I2C2_Setting@mode 0073          ?_I2C_CommonInterrupt 0070  
            ___lldiv@quotient 0020        __size_of_LCD_WriteData 003A       __size_of_Timer1_Handler 0009  
              I2C1_Transmit@i 0077                      xputs@str 0079                     xvprintf@c 0054  
                   xvprintf@d 0053                     xvprintf@f 004F                     xvprintf@i 0051  
                   xvprintf@j 0049                     xvprintf@p 0044                     xvprintf@r 0045  
                   xvprintf@s 002C                     xvprintf@v 004B                     xvprintf@w 0047  
