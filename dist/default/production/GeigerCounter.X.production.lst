

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun May 21 00:45:57 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 1.41
    61                           ; Generated 25/01/2017 GMT
    62                           ; 
    63                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F1827 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  0111                     	;# 
   143  0112                     	;# 
   144  0113                     	;# 
   145  0114                     	;# 
   146  0115                     	;# 
   147  0116                     	;# 
   148  0117                     	;# 
   149  0118                     	;# 
   150  0119                     	;# 
   151  011A                     	;# 
   152  011B                     	;# 
   153  011D                     	;# 
   154  011E                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0191                     	;# 
   158  0191                     	;# 
   159  0192                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0193                     	;# 
   163  0194                     	;# 
   164  0195                     	;# 
   165  0196                     	;# 
   166  0199                     	;# 
   167  019A                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176  019F                     	;# 
   177  020C                     	;# 
   178  020D                     	;# 
   179  0211                     	;# 
   180  0211                     	;# 
   181  0212                     	;# 
   182  0212                     	;# 
   183  0213                     	;# 
   184  0213                     	;# 
   185  0214                     	;# 
   186  0214                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  0219                     	;# 
   195  021A                     	;# 
   196  021B                     	;# 
   197  021C                     	;# 
   198  021D                     	;# 
   199  021E                     	;# 
   200  021F                     	;# 
   201  0291                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0294                     	;# 
   206  0295                     	;# 
   207  0295                     	;# 
   208  0296                     	;# 
   209  0298                     	;# 
   210  0298                     	;# 
   211  0299                     	;# 
   212  029A                     	;# 
   213  029B                     	;# 
   214  029C                     	;# 
   215  029C                     	;# 
   216  029D                     	;# 
   217  029E                     	;# 
   218  029E                     	;# 
   219  0311                     	;# 
   220  0311                     	;# 
   221  0312                     	;# 
   222  0313                     	;# 
   223  0318                     	;# 
   224  0318                     	;# 
   225  0319                     	;# 
   226  031A                     	;# 
   227  0394                     	;# 
   228  0395                     	;# 
   229  0396                     	;# 
   230  039A                     	;# 
   231  039C                     	;# 
   232  039D                     	;# 
   233  039E                     	;# 
   234  039F                     	;# 
   235  0415                     	;# 
   236  0416                     	;# 
   237  0417                     	;# 
   238  041C                     	;# 
   239  041D                     	;# 
   240  041E                     	;# 
   241  0FE4                     	;# 
   242  0FE5                     	;# 
   243  0FE6                     	;# 
   244  0FE7                     	;# 
   245  0FE8                     	;# 
   246  0FE9                     	;# 
   247  0FEA                     	;# 
   248  0FEB                     	;# 
   249  0FED                     	;# 
   250  0FEE                     	;# 
   251  0FEF                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0095                     	;# 
   288  0096                     	;# 
   289  0097                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  0111                     	;# 
   301  0112                     	;# 
   302  0113                     	;# 
   303  0114                     	;# 
   304  0115                     	;# 
   305  0116                     	;# 
   306  0117                     	;# 
   307  0118                     	;# 
   308  0119                     	;# 
   309  011A                     	;# 
   310  011B                     	;# 
   311  011D                     	;# 
   312  011E                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0191                     	;# 
   316  0191                     	;# 
   317  0192                     	;# 
   318  0193                     	;# 
   319  0193                     	;# 
   320  0193                     	;# 
   321  0194                     	;# 
   322  0195                     	;# 
   323  0196                     	;# 
   324  0199                     	;# 
   325  019A                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019B                     	;# 
   330  019C                     	;# 
   331  019C                     	;# 
   332  019D                     	;# 
   333  019E                     	;# 
   334  019F                     	;# 
   335  020C                     	;# 
   336  020D                     	;# 
   337  0211                     	;# 
   338  0211                     	;# 
   339  0212                     	;# 
   340  0212                     	;# 
   341  0213                     	;# 
   342  0213                     	;# 
   343  0214                     	;# 
   344  0214                     	;# 
   345  0215                     	;# 
   346  0215                     	;# 
   347  0215                     	;# 
   348  0216                     	;# 
   349  0216                     	;# 
   350  0217                     	;# 
   351  0217                     	;# 
   352  0219                     	;# 
   353  021A                     	;# 
   354  021B                     	;# 
   355  021C                     	;# 
   356  021D                     	;# 
   357  021E                     	;# 
   358  021F                     	;# 
   359  0291                     	;# 
   360  0291                     	;# 
   361  0292                     	;# 
   362  0293                     	;# 
   363  0294                     	;# 
   364  0295                     	;# 
   365  0295                     	;# 
   366  0296                     	;# 
   367  0298                     	;# 
   368  0298                     	;# 
   369  0299                     	;# 
   370  029A                     	;# 
   371  029B                     	;# 
   372  029C                     	;# 
   373  029C                     	;# 
   374  029D                     	;# 
   375  029E                     	;# 
   376  029E                     	;# 
   377  0311                     	;# 
   378  0311                     	;# 
   379  0312                     	;# 
   380  0313                     	;# 
   381  0318                     	;# 
   382  0318                     	;# 
   383  0319                     	;# 
   384  031A                     	;# 
   385  0394                     	;# 
   386  0395                     	;# 
   387  0396                     	;# 
   388  039A                     	;# 
   389  039C                     	;# 
   390  039D                     	;# 
   391  039E                     	;# 
   392  039F                     	;# 
   393  0415                     	;# 
   394  0416                     	;# 
   395  0417                     	;# 
   396  041C                     	;# 
   397  041D                     	;# 
   398  041E                     	;# 
   399  0FE4                     	;# 
   400  0FE5                     	;# 
   401  0FE6                     	;# 
   402  0FE7                     	;# 
   403  0FE8                     	;# 
   404  0FE9                     	;# 
   405  0FEA                     	;# 
   406  0FEB                     	;# 
   407  0FED                     	;# 
   408  0FEE                     	;# 
   409  0FEF                     	;# 
   410  0000                     	;# 
   411  0001                     	;# 
   412  0002                     	;# 
   413  0003                     	;# 
   414  0004                     	;# 
   415  0005                     	;# 
   416  0006                     	;# 
   417  0007                     	;# 
   418  0008                     	;# 
   419  0009                     	;# 
   420  000A                     	;# 
   421  000B                     	;# 
   422  000C                     	;# 
   423  000D                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0094                     	;# 
   445  0095                     	;# 
   446  0096                     	;# 
   447  0097                     	;# 
   448  0098                     	;# 
   449  0099                     	;# 
   450  009A                     	;# 
   451  009B                     	;# 
   452  009B                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  010C                     	;# 
   457  010D                     	;# 
   458  0111                     	;# 
   459  0112                     	;# 
   460  0113                     	;# 
   461  0114                     	;# 
   462  0115                     	;# 
   463  0116                     	;# 
   464  0117                     	;# 
   465  0118                     	;# 
   466  0119                     	;# 
   467  011A                     	;# 
   468  011B                     	;# 
   469  011D                     	;# 
   470  011E                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473  0191                     	;# 
   474  0191                     	;# 
   475  0192                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0194                     	;# 
   480  0195                     	;# 
   481  0196                     	;# 
   482  0199                     	;# 
   483  019A                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019C                     	;# 
   489  019C                     	;# 
   490  019D                     	;# 
   491  019E                     	;# 
   492  019F                     	;# 
   493  020C                     	;# 
   494  020D                     	;# 
   495  0211                     	;# 
   496  0211                     	;# 
   497  0212                     	;# 
   498  0212                     	;# 
   499  0213                     	;# 
   500  0213                     	;# 
   501  0214                     	;# 
   502  0214                     	;# 
   503  0215                     	;# 
   504  0215                     	;# 
   505  0215                     	;# 
   506  0216                     	;# 
   507  0216                     	;# 
   508  0217                     	;# 
   509  0217                     	;# 
   510  0219                     	;# 
   511  021A                     	;# 
   512  021B                     	;# 
   513  021C                     	;# 
   514  021D                     	;# 
   515  021E                     	;# 
   516  021F                     	;# 
   517  0291                     	;# 
   518  0291                     	;# 
   519  0292                     	;# 
   520  0293                     	;# 
   521  0294                     	;# 
   522  0295                     	;# 
   523  0295                     	;# 
   524  0296                     	;# 
   525  0298                     	;# 
   526  0298                     	;# 
   527  0299                     	;# 
   528  029A                     	;# 
   529  029B                     	;# 
   530  029C                     	;# 
   531  029C                     	;# 
   532  029D                     	;# 
   533  029E                     	;# 
   534  029E                     	;# 
   535  0311                     	;# 
   536  0311                     	;# 
   537  0312                     	;# 
   538  0313                     	;# 
   539  0318                     	;# 
   540  0318                     	;# 
   541  0319                     	;# 
   542  031A                     	;# 
   543  0394                     	;# 
   544  0395                     	;# 
   545  0396                     	;# 
   546  039A                     	;# 
   547  039C                     	;# 
   548  039D                     	;# 
   549  039E                     	;# 
   550  039F                     	;# 
   551  0415                     	;# 
   552  0416                     	;# 
   553  0417                     	;# 
   554  041C                     	;# 
   555  041D                     	;# 
   556  041E                     	;# 
   557  0FE4                     	;# 
   558  0FE5                     	;# 
   559  0FE6                     	;# 
   560  0FE7                     	;# 
   561  0FE8                     	;# 
   562  0FE9                     	;# 
   563  0FEA                     	;# 
   564  0FEB                     	;# 
   565  0FED                     	;# 
   566  0FEE                     	;# 
   567  0FEF                     	;# 
   568  0000                     	;# 
   569  0001                     	;# 
   570  0002                     	;# 
   571  0003                     	;# 
   572  0004                     	;# 
   573  0005                     	;# 
   574  0006                     	;# 
   575  0007                     	;# 
   576  0008                     	;# 
   577  0009                     	;# 
   578  000A                     	;# 
   579  000B                     	;# 
   580  000C                     	;# 
   581  000D                     	;# 
   582  0011                     	;# 
   583  0012                     	;# 
   584  0013                     	;# 
   585  0014                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0016                     	;# 
   589  0017                     	;# 
   590  0018                     	;# 
   591  0019                     	;# 
   592  001A                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001E                     	;# 
   596  001F                     	;# 
   597  008C                     	;# 
   598  008D                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0094                     	;# 
   603  0095                     	;# 
   604  0096                     	;# 
   605  0097                     	;# 
   606  0098                     	;# 
   607  0099                     	;# 
   608  009A                     	;# 
   609  009B                     	;# 
   610  009B                     	;# 
   611  009C                     	;# 
   612  009D                     	;# 
   613  009E                     	;# 
   614  010C                     	;# 
   615  010D                     	;# 
   616  0111                     	;# 
   617  0112                     	;# 
   618  0113                     	;# 
   619  0114                     	;# 
   620  0115                     	;# 
   621  0116                     	;# 
   622  0117                     	;# 
   623  0118                     	;# 
   624  0119                     	;# 
   625  011A                     	;# 
   626  011B                     	;# 
   627  011D                     	;# 
   628  011E                     	;# 
   629  018C                     	;# 
   630  018D                     	;# 
   631  0191                     	;# 
   632  0191                     	;# 
   633  0192                     	;# 
   634  0193                     	;# 
   635  0193                     	;# 
   636  0193                     	;# 
   637  0194                     	;# 
   638  0195                     	;# 
   639  0196                     	;# 
   640  0199                     	;# 
   641  019A                     	;# 
   642  019B                     	;# 
   643  019B                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019C                     	;# 
   647  019C                     	;# 
   648  019D                     	;# 
   649  019E                     	;# 
   650  019F                     	;# 
   651  020C                     	;# 
   652  020D                     	;# 
   653  0211                     	;# 
   654  0211                     	;# 
   655  0212                     	;# 
   656  0212                     	;# 
   657  0213                     	;# 
   658  0213                     	;# 
   659  0214                     	;# 
   660  0214                     	;# 
   661  0215                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0216                     	;# 
   665  0216                     	;# 
   666  0217                     	;# 
   667  0217                     	;# 
   668  0219                     	;# 
   669  021A                     	;# 
   670  021B                     	;# 
   671  021C                     	;# 
   672  021D                     	;# 
   673  021E                     	;# 
   674  021F                     	;# 
   675  0291                     	;# 
   676  0291                     	;# 
   677  0292                     	;# 
   678  0293                     	;# 
   679  0294                     	;# 
   680  0295                     	;# 
   681  0295                     	;# 
   682  0296                     	;# 
   683  0298                     	;# 
   684  0298                     	;# 
   685  0299                     	;# 
   686  029A                     	;# 
   687  029B                     	;# 
   688  029C                     	;# 
   689  029C                     	;# 
   690  029D                     	;# 
   691  029E                     	;# 
   692  029E                     	;# 
   693  0311                     	;# 
   694  0311                     	;# 
   695  0312                     	;# 
   696  0313                     	;# 
   697  0318                     	;# 
   698  0318                     	;# 
   699  0319                     	;# 
   700  031A                     	;# 
   701  0394                     	;# 
   702  0395                     	;# 
   703  0396                     	;# 
   704  039A                     	;# 
   705  039C                     	;# 
   706  039D                     	;# 
   707  039E                     	;# 
   708  039F                     	;# 
   709  0415                     	;# 
   710  0416                     	;# 
   711  0417                     	;# 
   712  041C                     	;# 
   713  041D                     	;# 
   714  041E                     	;# 
   715  0FE4                     	;# 
   716  0FE5                     	;# 
   717  0FE6                     	;# 
   718  0FE7                     	;# 
   719  0FE8                     	;# 
   720  0FE9                     	;# 
   721  0FEA                     	;# 
   722  0FEB                     	;# 
   723  0FED                     	;# 
   724  0FEE                     	;# 
   725  0FEF                     	;# 
   726  0000                     	;# 
   727  0001                     	;# 
   728  0002                     	;# 
   729  0003                     	;# 
   730  0004                     	;# 
   731  0005                     	;# 
   732  0006                     	;# 
   733  0007                     	;# 
   734  0008                     	;# 
   735  0009                     	;# 
   736  000A                     	;# 
   737  000B                     	;# 
   738  000C                     	;# 
   739  000D                     	;# 
   740  0011                     	;# 
   741  0012                     	;# 
   742  0013                     	;# 
   743  0014                     	;# 
   744  0015                     	;# 
   745  0016                     	;# 
   746  0016                     	;# 
   747  0017                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  001A                     	;# 
   751  001B                     	;# 
   752  001C                     	;# 
   753  001E                     	;# 
   754  001F                     	;# 
   755  008C                     	;# 
   756  008D                     	;# 
   757  0091                     	;# 
   758  0092                     	;# 
   759  0093                     	;# 
   760  0094                     	;# 
   761  0095                     	;# 
   762  0096                     	;# 
   763  0097                     	;# 
   764  0098                     	;# 
   765  0099                     	;# 
   766  009A                     	;# 
   767  009B                     	;# 
   768  009B                     	;# 
   769  009C                     	;# 
   770  009D                     	;# 
   771  009E                     	;# 
   772  010C                     	;# 
   773  010D                     	;# 
   774  0111                     	;# 
   775  0112                     	;# 
   776  0113                     	;# 
   777  0114                     	;# 
   778  0115                     	;# 
   779  0116                     	;# 
   780  0117                     	;# 
   781  0118                     	;# 
   782  0119                     	;# 
   783  011A                     	;# 
   784  011B                     	;# 
   785  011D                     	;# 
   786  011E                     	;# 
   787  018C                     	;# 
   788  018D                     	;# 
   789  0191                     	;# 
   790  0191                     	;# 
   791  0192                     	;# 
   792  0193                     	;# 
   793  0193                     	;# 
   794  0193                     	;# 
   795  0194                     	;# 
   796  0195                     	;# 
   797  0196                     	;# 
   798  0199                     	;# 
   799  019A                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019B                     	;# 
   804  019C                     	;# 
   805  019C                     	;# 
   806  019D                     	;# 
   807  019E                     	;# 
   808  019F                     	;# 
   809  020C                     	;# 
   810  020D                     	;# 
   811  0211                     	;# 
   812  0211                     	;# 
   813  0212                     	;# 
   814  0212                     	;# 
   815  0213                     	;# 
   816  0213                     	;# 
   817  0214                     	;# 
   818  0214                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0216                     	;# 
   823  0216                     	;# 
   824  0217                     	;# 
   825  0217                     	;# 
   826  0219                     	;# 
   827  021A                     	;# 
   828  021B                     	;# 
   829  021C                     	;# 
   830  021D                     	;# 
   831  021E                     	;# 
   832  021F                     	;# 
   833  0291                     	;# 
   834  0291                     	;# 
   835  0292                     	;# 
   836  0293                     	;# 
   837  0294                     	;# 
   838  0295                     	;# 
   839  0295                     	;# 
   840  0296                     	;# 
   841  0298                     	;# 
   842  0298                     	;# 
   843  0299                     	;# 
   844  029A                     	;# 
   845  029B                     	;# 
   846  029C                     	;# 
   847  029C                     	;# 
   848  029D                     	;# 
   849  029E                     	;# 
   850  029E                     	;# 
   851  0311                     	;# 
   852  0311                     	;# 
   853  0312                     	;# 
   854  0313                     	;# 
   855  0318                     	;# 
   856  0318                     	;# 
   857  0319                     	;# 
   858  031A                     	;# 
   859  0394                     	;# 
   860  0395                     	;# 
   861  0396                     	;# 
   862  039A                     	;# 
   863  039C                     	;# 
   864  039D                     	;# 
   865  039E                     	;# 
   866  039F                     	;# 
   867  0415                     	;# 
   868  0416                     	;# 
   869  0417                     	;# 
   870  041C                     	;# 
   871  041D                     	;# 
   872  041E                     	;# 
   873  0FE4                     	;# 
   874  0FE5                     	;# 
   875  0FE6                     	;# 
   876  0FE7                     	;# 
   877  0FE8                     	;# 
   878  0FE9                     	;# 
   879  0FEA                     	;# 
   880  0FEB                     	;# 
   881  0FED                     	;# 
   882  0FEE                     	;# 
   883  0FEF                     	;# 
   884  0000                     	;# 
   885  0001                     	;# 
   886  0002                     	;# 
   887  0003                     	;# 
   888  0004                     	;# 
   889  0005                     	;# 
   890  0006                     	;# 
   891  0007                     	;# 
   892  0008                     	;# 
   893  0009                     	;# 
   894  000A                     	;# 
   895  000B                     	;# 
   896  000C                     	;# 
   897  000D                     	;# 
   898  0011                     	;# 
   899  0012                     	;# 
   900  0013                     	;# 
   901  0014                     	;# 
   902  0015                     	;# 
   903  0016                     	;# 
   904  0016                     	;# 
   905  0017                     	;# 
   906  0018                     	;# 
   907  0019                     	;# 
   908  001A                     	;# 
   909  001B                     	;# 
   910  001C                     	;# 
   911  001E                     	;# 
   912  001F                     	;# 
   913  008C                     	;# 
   914  008D                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0094                     	;# 
   919  0095                     	;# 
   920  0096                     	;# 
   921  0097                     	;# 
   922  0098                     	;# 
   923  0099                     	;# 
   924  009A                     	;# 
   925  009B                     	;# 
   926  009B                     	;# 
   927  009C                     	;# 
   928  009D                     	;# 
   929  009E                     	;# 
   930  010C                     	;# 
   931  010D                     	;# 
   932  0111                     	;# 
   933  0112                     	;# 
   934  0113                     	;# 
   935  0114                     	;# 
   936  0115                     	;# 
   937  0116                     	;# 
   938  0117                     	;# 
   939  0118                     	;# 
   940  0119                     	;# 
   941  011A                     	;# 
   942  011B                     	;# 
   943  011D                     	;# 
   944  011E                     	;# 
   945  018C                     	;# 
   946  018D                     	;# 
   947  0191                     	;# 
   948  0191                     	;# 
   949  0192                     	;# 
   950  0193                     	;# 
   951  0193                     	;# 
   952  0193                     	;# 
   953  0194                     	;# 
   954  0195                     	;# 
   955  0196                     	;# 
   956  0199                     	;# 
   957  019A                     	;# 
   958  019B                     	;# 
   959  019B                     	;# 
   960  019B                     	;# 
   961  019B                     	;# 
   962  019C                     	;# 
   963  019C                     	;# 
   964  019D                     	;# 
   965  019E                     	;# 
   966  019F                     	;# 
   967  020C                     	;# 
   968  020D                     	;# 
   969  0211                     	;# 
   970  0211                     	;# 
   971  0212                     	;# 
   972  0212                     	;# 
   973  0213                     	;# 
   974  0213                     	;# 
   975  0214                     	;# 
   976  0214                     	;# 
   977  0215                     	;# 
   978  0215                     	;# 
   979  0215                     	;# 
   980  0216                     	;# 
   981  0216                     	;# 
   982  0217                     	;# 
   983  0217                     	;# 
   984  0219                     	;# 
   985  021A                     	;# 
   986  021B                     	;# 
   987  021C                     	;# 
   988  021D                     	;# 
   989  021E                     	;# 
   990  021F                     	;# 
   991  0291                     	;# 
   992  0291                     	;# 
   993  0292                     	;# 
   994  0293                     	;# 
   995  0294                     	;# 
   996  0295                     	;# 
   997  0295                     	;# 
   998  0296                     	;# 
   999  0298                     	;# 
  1000  0298                     	;# 
  1001  0299                     	;# 
  1002  029A                     	;# 
  1003  029B                     	;# 
  1004  029C                     	;# 
  1005  029C                     	;# 
  1006  029D                     	;# 
  1007  029E                     	;# 
  1008  029E                     	;# 
  1009  0311                     	;# 
  1010  0311                     	;# 
  1011  0312                     	;# 
  1012  0313                     	;# 
  1013  0318                     	;# 
  1014  0318                     	;# 
  1015  0319                     	;# 
  1016  031A                     	;# 
  1017  0394                     	;# 
  1018  0395                     	;# 
  1019  0396                     	;# 
  1020  039A                     	;# 
  1021  039C                     	;# 
  1022  039D                     	;# 
  1023  039E                     	;# 
  1024  039F                     	;# 
  1025  0415                     	;# 
  1026  0416                     	;# 
  1027  0417                     	;# 
  1028  041C                     	;# 
  1029  041D                     	;# 
  1030  041E                     	;# 
  1031  0FE4                     	;# 
  1032  0FE5                     	;# 
  1033  0FE6                     	;# 
  1034  0FE7                     	;# 
  1035  0FE8                     	;# 
  1036  0FE9                     	;# 
  1037  0FEA                     	;# 
  1038  0FEB                     	;# 
  1039  0FED                     	;# 
  1040  0FEE                     	;# 
  1041  0FEF                     	;# 
  1042  0000                     	;# 
  1043  0001                     	;# 
  1044  0002                     	;# 
  1045  0003                     	;# 
  1046  0004                     	;# 
  1047  0005                     	;# 
  1048  0006                     	;# 
  1049  0007                     	;# 
  1050  0008                     	;# 
  1051  0009                     	;# 
  1052  000A                     	;# 
  1053  000B                     	;# 
  1054  000C                     	;# 
  1055  000D                     	;# 
  1056  0011                     	;# 
  1057  0012                     	;# 
  1058  0013                     	;# 
  1059  0014                     	;# 
  1060  0015                     	;# 
  1061  0016                     	;# 
  1062  0016                     	;# 
  1063  0017                     	;# 
  1064  0018                     	;# 
  1065  0019                     	;# 
  1066  001A                     	;# 
  1067  001B                     	;# 
  1068  001C                     	;# 
  1069  001E                     	;# 
  1070  001F                     	;# 
  1071  008C                     	;# 
  1072  008D                     	;# 
  1073  0091                     	;# 
  1074  0092                     	;# 
  1075  0093                     	;# 
  1076  0094                     	;# 
  1077  0095                     	;# 
  1078  0096                     	;# 
  1079  0097                     	;# 
  1080  0098                     	;# 
  1081  0099                     	;# 
  1082  009A                     	;# 
  1083  009B                     	;# 
  1084  009B                     	;# 
  1085  009C                     	;# 
  1086  009D                     	;# 
  1087  009E                     	;# 
  1088  010C                     	;# 
  1089  010D                     	;# 
  1090  0111                     	;# 
  1091  0112                     	;# 
  1092  0113                     	;# 
  1093  0114                     	;# 
  1094  0115                     	;# 
  1095  0116                     	;# 
  1096  0117                     	;# 
  1097  0118                     	;# 
  1098  0119                     	;# 
  1099  011A                     	;# 
  1100  011B                     	;# 
  1101  011D                     	;# 
  1102  011E                     	;# 
  1103  018C                     	;# 
  1104  018D                     	;# 
  1105  0191                     	;# 
  1106  0191                     	;# 
  1107  0192                     	;# 
  1108  0193                     	;# 
  1109  0193                     	;# 
  1110  0193                     	;# 
  1111  0194                     	;# 
  1112  0195                     	;# 
  1113  0196                     	;# 
  1114  0199                     	;# 
  1115  019A                     	;# 
  1116  019B                     	;# 
  1117  019B                     	;# 
  1118  019B                     	;# 
  1119  019B                     	;# 
  1120  019C                     	;# 
  1121  019C                     	;# 
  1122  019D                     	;# 
  1123  019E                     	;# 
  1124  019F                     	;# 
  1125  020C                     	;# 
  1126  020D                     	;# 
  1127  0211                     	;# 
  1128  0211                     	;# 
  1129  0212                     	;# 
  1130  0212                     	;# 
  1131  0213                     	;# 
  1132  0213                     	;# 
  1133  0214                     	;# 
  1134  0214                     	;# 
  1135  0215                     	;# 
  1136  0215                     	;# 
  1137  0215                     	;# 
  1138  0216                     	;# 
  1139  0216                     	;# 
  1140  0217                     	;# 
  1141  0217                     	;# 
  1142  0219                     	;# 
  1143  021A                     	;# 
  1144  021B                     	;# 
  1145  021C                     	;# 
  1146  021D                     	;# 
  1147  021E                     	;# 
  1148  021F                     	;# 
  1149  0291                     	;# 
  1150  0291                     	;# 
  1151  0292                     	;# 
  1152  0293                     	;# 
  1153  0294                     	;# 
  1154  0295                     	;# 
  1155  0295                     	;# 
  1156  0296                     	;# 
  1157  0298                     	;# 
  1158  0298                     	;# 
  1159  0299                     	;# 
  1160  029A                     	;# 
  1161  029B                     	;# 
  1162  029C                     	;# 
  1163  029C                     	;# 
  1164  029D                     	;# 
  1165  029E                     	;# 
  1166  029E                     	;# 
  1167  0311                     	;# 
  1168  0311                     	;# 
  1169  0312                     	;# 
  1170  0313                     	;# 
  1171  0318                     	;# 
  1172  0318                     	;# 
  1173  0319                     	;# 
  1174  031A                     	;# 
  1175  0394                     	;# 
  1176  0395                     	;# 
  1177  0396                     	;# 
  1178  039A                     	;# 
  1179  039C                     	;# 
  1180  039D                     	;# 
  1181  039E                     	;# 
  1182  039F                     	;# 
  1183  0415                     	;# 
  1184  0416                     	;# 
  1185  0417                     	;# 
  1186  041C                     	;# 
  1187  041D                     	;# 
  1188  041E                     	;# 
  1189  0FE4                     	;# 
  1190  0FE5                     	;# 
  1191  0FE6                     	;# 
  1192  0FE7                     	;# 
  1193  0FE8                     	;# 
  1194  0FE9                     	;# 
  1195  0FEA                     	;# 
  1196  0FEB                     	;# 
  1197  0FED                     	;# 
  1198  0FEE                     	;# 
  1199  0FEF                     	;# 
  1200  0000                     	;# 
  1201  0001                     	;# 
  1202  0002                     	;# 
  1203  0003                     	;# 
  1204  0004                     	;# 
  1205  0005                     	;# 
  1206  0006                     	;# 
  1207  0007                     	;# 
  1208  0008                     	;# 
  1209  0009                     	;# 
  1210  000A                     	;# 
  1211  000B                     	;# 
  1212  000C                     	;# 
  1213  000D                     	;# 
  1214  0011                     	;# 
  1215  0012                     	;# 
  1216  0013                     	;# 
  1217  0014                     	;# 
  1218  0015                     	;# 
  1219  0016                     	;# 
  1220  0016                     	;# 
  1221  0017                     	;# 
  1222  0018                     	;# 
  1223  0019                     	;# 
  1224  001A                     	;# 
  1225  001B                     	;# 
  1226  001C                     	;# 
  1227  001E                     	;# 
  1228  001F                     	;# 
  1229  008C                     	;# 
  1230  008D                     	;# 
  1231  0091                     	;# 
  1232  0092                     	;# 
  1233  0093                     	;# 
  1234  0094                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0097                     	;# 
  1238  0098                     	;# 
  1239  0099                     	;# 
  1240  009A                     	;# 
  1241  009B                     	;# 
  1242  009B                     	;# 
  1243  009C                     	;# 
  1244  009D                     	;# 
  1245  009E                     	;# 
  1246  010C                     	;# 
  1247  010D                     	;# 
  1248  0111                     	;# 
  1249  0112                     	;# 
  1250  0113                     	;# 
  1251  0114                     	;# 
  1252  0115                     	;# 
  1253  0116                     	;# 
  1254  0117                     	;# 
  1255  0118                     	;# 
  1256  0119                     	;# 
  1257  011A                     	;# 
  1258  011B                     	;# 
  1259  011D                     	;# 
  1260  011E                     	;# 
  1261  018C                     	;# 
  1262  018D                     	;# 
  1263  0191                     	;# 
  1264  0191                     	;# 
  1265  0192                     	;# 
  1266  0193                     	;# 
  1267  0193                     	;# 
  1268  0193                     	;# 
  1269  0194                     	;# 
  1270  0195                     	;# 
  1271  0196                     	;# 
  1272  0199                     	;# 
  1273  019A                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019B                     	;# 
  1278  019C                     	;# 
  1279  019C                     	;# 
  1280  019D                     	;# 
  1281  019E                     	;# 
  1282  019F                     	;# 
  1283  020C                     	;# 
  1284  020D                     	;# 
  1285  0211                     	;# 
  1286  0211                     	;# 
  1287  0212                     	;# 
  1288  0212                     	;# 
  1289  0213                     	;# 
  1290  0213                     	;# 
  1291  0214                     	;# 
  1292  0214                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0215                     	;# 
  1296  0216                     	;# 
  1297  0216                     	;# 
  1298  0217                     	;# 
  1299  0217                     	;# 
  1300  0219                     	;# 
  1301  021A                     	;# 
  1302  021B                     	;# 
  1303  021C                     	;# 
  1304  021D                     	;# 
  1305  021E                     	;# 
  1306  021F                     	;# 
  1307  0291                     	;# 
  1308  0291                     	;# 
  1309  0292                     	;# 
  1310  0293                     	;# 
  1311  0294                     	;# 
  1312  0295                     	;# 
  1313  0295                     	;# 
  1314  0296                     	;# 
  1315  0298                     	;# 
  1316  0298                     	;# 
  1317  0299                     	;# 
  1318  029A                     	;# 
  1319  029B                     	;# 
  1320  029C                     	;# 
  1321  029C                     	;# 
  1322  029D                     	;# 
  1323  029E                     	;# 
  1324  029E                     	;# 
  1325  0311                     	;# 
  1326  0311                     	;# 
  1327  0312                     	;# 
  1328  0313                     	;# 
  1329  0318                     	;# 
  1330  0318                     	;# 
  1331  0319                     	;# 
  1332  031A                     	;# 
  1333  0394                     	;# 
  1334  0395                     	;# 
  1335  0396                     	;# 
  1336  039A                     	;# 
  1337  039C                     	;# 
  1338  039D                     	;# 
  1339  039E                     	;# 
  1340  039F                     	;# 
  1341  0415                     	;# 
  1342  0416                     	;# 
  1343  0417                     	;# 
  1344  041C                     	;# 
  1345  041D                     	;# 
  1346  041E                     	;# 
  1347  0FE4                     	;# 
  1348  0FE5                     	;# 
  1349  0FE6                     	;# 
  1350  0FE7                     	;# 
  1351  0FE8                     	;# 
  1352  0FE9                     	;# 
  1353  0FEA                     	;# 
  1354  0FEB                     	;# 
  1355  0FED                     	;# 
  1356  0FEE                     	;# 
  1357  0FEF                     	;# 
  1358  0000                     	;# 
  1359  0001                     	;# 
  1360  0002                     	;# 
  1361  0003                     	;# 
  1362  0004                     	;# 
  1363  0005                     	;# 
  1364  0006                     	;# 
  1365  0007                     	;# 
  1366  0008                     	;# 
  1367  0009                     	;# 
  1368  000A                     	;# 
  1369  000B                     	;# 
  1370  000C                     	;# 
  1371  000D                     	;# 
  1372  0011                     	;# 
  1373  0012                     	;# 
  1374  0013                     	;# 
  1375  0014                     	;# 
  1376  0015                     	;# 
  1377  0016                     	;# 
  1378  0016                     	;# 
  1379  0017                     	;# 
  1380  0018                     	;# 
  1381  0019                     	;# 
  1382  001A                     	;# 
  1383  001B                     	;# 
  1384  001C                     	;# 
  1385  001E                     	;# 
  1386  001F                     	;# 
  1387  008C                     	;# 
  1388  008D                     	;# 
  1389  0091                     	;# 
  1390  0092                     	;# 
  1391  0093                     	;# 
  1392  0094                     	;# 
  1393  0095                     	;# 
  1394  0096                     	;# 
  1395  0097                     	;# 
  1396  0098                     	;# 
  1397  0099                     	;# 
  1398  009A                     	;# 
  1399  009B                     	;# 
  1400  009B                     	;# 
  1401  009C                     	;# 
  1402  009D                     	;# 
  1403  009E                     	;# 
  1404  010C                     	;# 
  1405  010D                     	;# 
  1406  0111                     	;# 
  1407  0112                     	;# 
  1408  0113                     	;# 
  1409  0114                     	;# 
  1410  0115                     	;# 
  1411  0116                     	;# 
  1412  0117                     	;# 
  1413  0118                     	;# 
  1414  0119                     	;# 
  1415  011A                     	;# 
  1416  011B                     	;# 
  1417  011D                     	;# 
  1418  011E                     	;# 
  1419  018C                     	;# 
  1420  018D                     	;# 
  1421  0191                     	;# 
  1422  0191                     	;# 
  1423  0192                     	;# 
  1424  0193                     	;# 
  1425  0193                     	;# 
  1426  0193                     	;# 
  1427  0194                     	;# 
  1428  0195                     	;# 
  1429  0196                     	;# 
  1430  0199                     	;# 
  1431  019A                     	;# 
  1432  019B                     	;# 
  1433  019B                     	;# 
  1434  019B                     	;# 
  1435  019B                     	;# 
  1436  019C                     	;# 
  1437  019C                     	;# 
  1438  019D                     	;# 
  1439  019E                     	;# 
  1440  019F                     	;# 
  1441  020C                     	;# 
  1442  020D                     	;# 
  1443  0211                     	;# 
  1444  0211                     	;# 
  1445  0212                     	;# 
  1446  0212                     	;# 
  1447  0213                     	;# 
  1448  0213                     	;# 
  1449  0214                     	;# 
  1450  0214                     	;# 
  1451  0215                     	;# 
  1452  0215                     	;# 
  1453  0215                     	;# 
  1454  0216                     	;# 
  1455  0216                     	;# 
  1456  0217                     	;# 
  1457  0217                     	;# 
  1458  0219                     	;# 
  1459  021A                     	;# 
  1460  021B                     	;# 
  1461  021C                     	;# 
  1462  021D                     	;# 
  1463  021E                     	;# 
  1464  021F                     	;# 
  1465  0291                     	;# 
  1466  0291                     	;# 
  1467  0292                     	;# 
  1468  0293                     	;# 
  1469  0294                     	;# 
  1470  0295                     	;# 
  1471  0295                     	;# 
  1472  0296                     	;# 
  1473  0298                     	;# 
  1474  0298                     	;# 
  1475  0299                     	;# 
  1476  029A                     	;# 
  1477  029B                     	;# 
  1478  029C                     	;# 
  1479  029C                     	;# 
  1480  029D                     	;# 
  1481  029E                     	;# 
  1482  029E                     	;# 
  1483  0311                     	;# 
  1484  0311                     	;# 
  1485  0312                     	;# 
  1486  0313                     	;# 
  1487  0318                     	;# 
  1488  0318                     	;# 
  1489  0319                     	;# 
  1490  031A                     	;# 
  1491  0394                     	;# 
  1492  0395                     	;# 
  1493  0396                     	;# 
  1494  039A                     	;# 
  1495  039C                     	;# 
  1496  039D                     	;# 
  1497  039E                     	;# 
  1498  039F                     	;# 
  1499  0415                     	;# 
  1500  0416                     	;# 
  1501  0417                     	;# 
  1502  041C                     	;# 
  1503  041D                     	;# 
  1504  041E                     	;# 
  1505  0FE4                     	;# 
  1506  0FE5                     	;# 
  1507  0FE6                     	;# 
  1508  0FE7                     	;# 
  1509  0FE8                     	;# 
  1510  0FE9                     	;# 
  1511  0FEA                     	;# 
  1512  0FEB                     	;# 
  1513  0FED                     	;# 
  1514  0FEE                     	;# 
  1515  0FEF                     	;# 
  1516  0000                     	;# 
  1517  0001                     	;# 
  1518  0002                     	;# 
  1519  0003                     	;# 
  1520  0004                     	;# 
  1521  0005                     	;# 
  1522  0006                     	;# 
  1523  0007                     	;# 
  1524  0008                     	;# 
  1525  0009                     	;# 
  1526  000A                     	;# 
  1527  000B                     	;# 
  1528  000C                     	;# 
  1529  000D                     	;# 
  1530  0011                     	;# 
  1531  0012                     	;# 
  1532  0013                     	;# 
  1533  0014                     	;# 
  1534  0015                     	;# 
  1535  0016                     	;# 
  1536  0016                     	;# 
  1537  0017                     	;# 
  1538  0018                     	;# 
  1539  0019                     	;# 
  1540  001A                     	;# 
  1541  001B                     	;# 
  1542  001C                     	;# 
  1543  001E                     	;# 
  1544  001F                     	;# 
  1545  008C                     	;# 
  1546  008D                     	;# 
  1547  0091                     	;# 
  1548  0092                     	;# 
  1549  0093                     	;# 
  1550  0094                     	;# 
  1551  0095                     	;# 
  1552  0096                     	;# 
  1553  0097                     	;# 
  1554  0098                     	;# 
  1555  0099                     	;# 
  1556  009A                     	;# 
  1557  009B                     	;# 
  1558  009B                     	;# 
  1559  009C                     	;# 
  1560  009D                     	;# 
  1561  009E                     	;# 
  1562  010C                     	;# 
  1563  010D                     	;# 
  1564  0111                     	;# 
  1565  0112                     	;# 
  1566  0113                     	;# 
  1567  0114                     	;# 
  1568  0115                     	;# 
  1569  0116                     	;# 
  1570  0117                     	;# 
  1571  0118                     	;# 
  1572  0119                     	;# 
  1573  011A                     	;# 
  1574  011B                     	;# 
  1575  011D                     	;# 
  1576  011E                     	;# 
  1577  018C                     	;# 
  1578  018D                     	;# 
  1579  0191                     	;# 
  1580  0191                     	;# 
  1581  0192                     	;# 
  1582  0193                     	;# 
  1583  0193                     	;# 
  1584  0193                     	;# 
  1585  0194                     	;# 
  1586  0195                     	;# 
  1587  0196                     	;# 
  1588  0199                     	;# 
  1589  019A                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019C                     	;# 
  1595  019C                     	;# 
  1596  019D                     	;# 
  1597  019E                     	;# 
  1598  019F                     	;# 
  1599  020C                     	;# 
  1600  020D                     	;# 
  1601  0211                     	;# 
  1602  0211                     	;# 
  1603  0212                     	;# 
  1604  0212                     	;# 
  1605  0213                     	;# 
  1606  0213                     	;# 
  1607  0214                     	;# 
  1608  0214                     	;# 
  1609  0215                     	;# 
  1610  0215                     	;# 
  1611  0215                     	;# 
  1612  0216                     	;# 
  1613  0216                     	;# 
  1614  0217                     	;# 
  1615  0217                     	;# 
  1616  0219                     	;# 
  1617  021A                     	;# 
  1618  021B                     	;# 
  1619  021C                     	;# 
  1620  021D                     	;# 
  1621  021E                     	;# 
  1622  021F                     	;# 
  1623  0291                     	;# 
  1624  0291                     	;# 
  1625  0292                     	;# 
  1626  0293                     	;# 
  1627  0294                     	;# 
  1628  0295                     	;# 
  1629  0295                     	;# 
  1630  0296                     	;# 
  1631  0298                     	;# 
  1632  0298                     	;# 
  1633  0299                     	;# 
  1634  029A                     	;# 
  1635  029B                     	;# 
  1636  029C                     	;# 
  1637  029C                     	;# 
  1638  029D                     	;# 
  1639  029E                     	;# 
  1640  029E                     	;# 
  1641  0311                     	;# 
  1642  0311                     	;# 
  1643  0312                     	;# 
  1644  0313                     	;# 
  1645  0318                     	;# 
  1646  0318                     	;# 
  1647  0319                     	;# 
  1648  031A                     	;# 
  1649  0394                     	;# 
  1650  0395                     	;# 
  1651  0396                     	;# 
  1652  039A                     	;# 
  1653  039C                     	;# 
  1654  039D                     	;# 
  1655  039E                     	;# 
  1656  039F                     	;# 
  1657  0415                     	;# 
  1658  0416                     	;# 
  1659  0417                     	;# 
  1660  041C                     	;# 
  1661  041D                     	;# 
  1662  041E                     	;# 
  1663  0FE4                     	;# 
  1664  0FE5                     	;# 
  1665  0FE6                     	;# 
  1666  0FE7                     	;# 
  1667  0FE8                     	;# 
  1668  0FE9                     	;# 
  1669  0FEA                     	;# 
  1670  0FEB                     	;# 
  1671  0FED                     	;# 
  1672  0FEE                     	;# 
  1673  0FEF                     	;# 
  1674  0000                     	;# 
  1675  0001                     	;# 
  1676  0002                     	;# 
  1677  0003                     	;# 
  1678  0004                     	;# 
  1679  0005                     	;# 
  1680  0006                     	;# 
  1681  0007                     	;# 
  1682  0008                     	;# 
  1683  0009                     	;# 
  1684  000A                     	;# 
  1685  000B                     	;# 
  1686  000C                     	;# 
  1687  000D                     	;# 
  1688  0011                     	;# 
  1689  0012                     	;# 
  1690  0013                     	;# 
  1691  0014                     	;# 
  1692  0015                     	;# 
  1693  0016                     	;# 
  1694  0016                     	;# 
  1695  0017                     	;# 
  1696  0018                     	;# 
  1697  0019                     	;# 
  1698  001A                     	;# 
  1699  001B                     	;# 
  1700  001C                     	;# 
  1701  001E                     	;# 
  1702  001F                     	;# 
  1703  008C                     	;# 
  1704  008D                     	;# 
  1705  0091                     	;# 
  1706  0092                     	;# 
  1707  0093                     	;# 
  1708  0094                     	;# 
  1709  0095                     	;# 
  1710  0096                     	;# 
  1711  0097                     	;# 
  1712  0098                     	;# 
  1713  0099                     	;# 
  1714  009A                     	;# 
  1715  009B                     	;# 
  1716  009B                     	;# 
  1717  009C                     	;# 
  1718  009D                     	;# 
  1719  009E                     	;# 
  1720  010C                     	;# 
  1721  010D                     	;# 
  1722  0111                     	;# 
  1723  0112                     	;# 
  1724  0113                     	;# 
  1725  0114                     	;# 
  1726  0115                     	;# 
  1727  0116                     	;# 
  1728  0117                     	;# 
  1729  0118                     	;# 
  1730  0119                     	;# 
  1731  011A                     	;# 
  1732  011B                     	;# 
  1733  011D                     	;# 
  1734  011E                     	;# 
  1735  018C                     	;# 
  1736  018D                     	;# 
  1737  0191                     	;# 
  1738  0191                     	;# 
  1739  0192                     	;# 
  1740  0193                     	;# 
  1741  0193                     	;# 
  1742  0193                     	;# 
  1743  0194                     	;# 
  1744  0195                     	;# 
  1745  0196                     	;# 
  1746  0199                     	;# 
  1747  019A                     	;# 
  1748  019B                     	;# 
  1749  019B                     	;# 
  1750  019B                     	;# 
  1751  019B                     	;# 
  1752  019C                     	;# 
  1753  019C                     	;# 
  1754  019D                     	;# 
  1755  019E                     	;# 
  1756  019F                     	;# 
  1757  020C                     	;# 
  1758  020D                     	;# 
  1759  0211                     	;# 
  1760  0211                     	;# 
  1761  0212                     	;# 
  1762  0212                     	;# 
  1763  0213                     	;# 
  1764  0213                     	;# 
  1765  0214                     	;# 
  1766  0214                     	;# 
  1767  0215                     	;# 
  1768  0215                     	;# 
  1769  0215                     	;# 
  1770  0216                     	;# 
  1771  0216                     	;# 
  1772  0217                     	;# 
  1773  0217                     	;# 
  1774  0219                     	;# 
  1775  021A                     	;# 
  1776  021B                     	;# 
  1777  021C                     	;# 
  1778  021D                     	;# 
  1779  021E                     	;# 
  1780  021F                     	;# 
  1781  0291                     	;# 
  1782  0291                     	;# 
  1783  0292                     	;# 
  1784  0293                     	;# 
  1785  0294                     	;# 
  1786  0295                     	;# 
  1787  0295                     	;# 
  1788  0296                     	;# 
  1789  0298                     	;# 
  1790  0298                     	;# 
  1791  0299                     	;# 
  1792  029A                     	;# 
  1793  029B                     	;# 
  1794  029C                     	;# 
  1795  029C                     	;# 
  1796  029D                     	;# 
  1797  029E                     	;# 
  1798  029E                     	;# 
  1799  0311                     	;# 
  1800  0311                     	;# 
  1801  0312                     	;# 
  1802  0313                     	;# 
  1803  0318                     	;# 
  1804  0318                     	;# 
  1805  0319                     	;# 
  1806  031A                     	;# 
  1807  0394                     	;# 
  1808  0395                     	;# 
  1809  0396                     	;# 
  1810  039A                     	;# 
  1811  039C                     	;# 
  1812  039D                     	;# 
  1813  039E                     	;# 
  1814  039F                     	;# 
  1815  0415                     	;# 
  1816  0416                     	;# 
  1817  0417                     	;# 
  1818  041C                     	;# 
  1819  041D                     	;# 
  1820  041E                     	;# 
  1821  0FE4                     	;# 
  1822  0FE5                     	;# 
  1823  0FE6                     	;# 
  1824  0FE7                     	;# 
  1825  0FE8                     	;# 
  1826  0FE9                     	;# 
  1827  0FEA                     	;# 
  1828  0FEB                     	;# 
  1829  0FED                     	;# 
  1830  0FEE                     	;# 
  1831  0FEF                     	;# 
  1832  0000                     	;# 
  1833  0001                     	;# 
  1834  0002                     	;# 
  1835  0003                     	;# 
  1836  0004                     	;# 
  1837  0005                     	;# 
  1838  0006                     	;# 
  1839  0007                     	;# 
  1840  0008                     	;# 
  1841  0009                     	;# 
  1842  000A                     	;# 
  1843  000B                     	;# 
  1844  000C                     	;# 
  1845  000D                     	;# 
  1846  0011                     	;# 
  1847  0012                     	;# 
  1848  0013                     	;# 
  1849  0014                     	;# 
  1850  0015                     	;# 
  1851  0016                     	;# 
  1852  0016                     	;# 
  1853  0017                     	;# 
  1854  0018                     	;# 
  1855  0019                     	;# 
  1856  001A                     	;# 
  1857  001B                     	;# 
  1858  001C                     	;# 
  1859  001E                     	;# 
  1860  001F                     	;# 
  1861  008C                     	;# 
  1862  008D                     	;# 
  1863  0091                     	;# 
  1864  0092                     	;# 
  1865  0093                     	;# 
  1866  0094                     	;# 
  1867  0095                     	;# 
  1868  0096                     	;# 
  1869  0097                     	;# 
  1870  0098                     	;# 
  1871  0099                     	;# 
  1872  009A                     	;# 
  1873  009B                     	;# 
  1874  009B                     	;# 
  1875  009C                     	;# 
  1876  009D                     	;# 
  1877  009E                     	;# 
  1878  010C                     	;# 
  1879  010D                     	;# 
  1880  0111                     	;# 
  1881  0112                     	;# 
  1882  0113                     	;# 
  1883  0114                     	;# 
  1884  0115                     	;# 
  1885  0116                     	;# 
  1886  0117                     	;# 
  1887  0118                     	;# 
  1888  0119                     	;# 
  1889  011A                     	;# 
  1890  011B                     	;# 
  1891  011D                     	;# 
  1892  011E                     	;# 
  1893  018C                     	;# 
  1894  018D                     	;# 
  1895  0191                     	;# 
  1896  0191                     	;# 
  1897  0192                     	;# 
  1898  0193                     	;# 
  1899  0193                     	;# 
  1900  0193                     	;# 
  1901  0194                     	;# 
  1902  0195                     	;# 
  1903  0196                     	;# 
  1904  0199                     	;# 
  1905  019A                     	;# 
  1906  019B                     	;# 
  1907  019B                     	;# 
  1908  019B                     	;# 
  1909  019B                     	;# 
  1910  019C                     	;# 
  1911  019C                     	;# 
  1912  019D                     	;# 
  1913  019E                     	;# 
  1914  019F                     	;# 
  1915  020C                     	;# 
  1916  020D                     	;# 
  1917  0211                     	;# 
  1918  0211                     	;# 
  1919  0212                     	;# 
  1920  0212                     	;# 
  1921  0213                     	;# 
  1922  0213                     	;# 
  1923  0214                     	;# 
  1924  0214                     	;# 
  1925  0215                     	;# 
  1926  0215                     	;# 
  1927  0215                     	;# 
  1928  0216                     	;# 
  1929  0216                     	;# 
  1930  0217                     	;# 
  1931  0217                     	;# 
  1932  0219                     	;# 
  1933  021A                     	;# 
  1934  021B                     	;# 
  1935  021C                     	;# 
  1936  021D                     	;# 
  1937  021E                     	;# 
  1938  021F                     	;# 
  1939  0291                     	;# 
  1940  0291                     	;# 
  1941  0292                     	;# 
  1942  0293                     	;# 
  1943  0294                     	;# 
  1944  0295                     	;# 
  1945  0295                     	;# 
  1946  0296                     	;# 
  1947  0298                     	;# 
  1948  0298                     	;# 
  1949  0299                     	;# 
  1950  029A                     	;# 
  1951  029B                     	;# 
  1952  029C                     	;# 
  1953  029C                     	;# 
  1954  029D                     	;# 
  1955  029E                     	;# 
  1956  029E                     	;# 
  1957  0311                     	;# 
  1958  0311                     	;# 
  1959  0312                     	;# 
  1960  0313                     	;# 
  1961  0318                     	;# 
  1962  0318                     	;# 
  1963  0319                     	;# 
  1964  031A                     	;# 
  1965  0394                     	;# 
  1966  0395                     	;# 
  1967  0396                     	;# 
  1968  039A                     	;# 
  1969  039C                     	;# 
  1970  039D                     	;# 
  1971  039E                     	;# 
  1972  039F                     	;# 
  1973  0415                     	;# 
  1974  0416                     	;# 
  1975  0417                     	;# 
  1976  041C                     	;# 
  1977  041D                     	;# 
  1978  041E                     	;# 
  1979  0FE4                     	;# 
  1980  0FE5                     	;# 
  1981  0FE6                     	;# 
  1982  0FE7                     	;# 
  1983  0FE8                     	;# 
  1984  0FE9                     	;# 
  1985  0FEA                     	;# 
  1986  0FEB                     	;# 
  1987  0FED                     	;# 
  1988  0FEE                     	;# 
  1989  0FEF                     	;# 
  1990  0000                     	;# 
  1991  0001                     	;# 
  1992  0002                     	;# 
  1993  0003                     	;# 
  1994  0004                     	;# 
  1995  0005                     	;# 
  1996  0006                     	;# 
  1997  0007                     	;# 
  1998  0008                     	;# 
  1999  0009                     	;# 
  2000  000A                     	;# 
  2001  000B                     	;# 
  2002  000C                     	;# 
  2003  000D                     	;# 
  2004  0011                     	;# 
  2005  0012                     	;# 
  2006  0013                     	;# 
  2007  0014                     	;# 
  2008  0015                     	;# 
  2009  0016                     	;# 
  2010  0016                     	;# 
  2011  0017                     	;# 
  2012  0018                     	;# 
  2013  0019                     	;# 
  2014  001A                     	;# 
  2015  001B                     	;# 
  2016  001C                     	;# 
  2017  001E                     	;# 
  2018  001F                     	;# 
  2019  008C                     	;# 
  2020  008D                     	;# 
  2021  0091                     	;# 
  2022  0092                     	;# 
  2023  0093                     	;# 
  2024  0094                     	;# 
  2025  0095                     	;# 
  2026  0096                     	;# 
  2027  0097                     	;# 
  2028  0098                     	;# 
  2029  0099                     	;# 
  2030  009A                     	;# 
  2031  009B                     	;# 
  2032  009B                     	;# 
  2033  009C                     	;# 
  2034  009D                     	;# 
  2035  009E                     	;# 
  2036  010C                     	;# 
  2037  010D                     	;# 
  2038  0111                     	;# 
  2039  0112                     	;# 
  2040  0113                     	;# 
  2041  0114                     	;# 
  2042  0115                     	;# 
  2043  0116                     	;# 
  2044  0117                     	;# 
  2045  0118                     	;# 
  2046  0119                     	;# 
  2047  011A                     	;# 
  2048  011B                     	;# 
  2049  011D                     	;# 
  2050  011E                     	;# 
  2051  018C                     	;# 
  2052  018D                     	;# 
  2053  0191                     	;# 
  2054  0191                     	;# 
  2055  0192                     	;# 
  2056  0193                     	;# 
  2057  0193                     	;# 
  2058  0193                     	;# 
  2059  0194                     	;# 
  2060  0195                     	;# 
  2061  0196                     	;# 
  2062  0199                     	;# 
  2063  019A                     	;# 
  2064  019B                     	;# 
  2065  019B                     	;# 
  2066  019B                     	;# 
  2067  019B                     	;# 
  2068  019C                     	;# 
  2069  019C                     	;# 
  2070  019D                     	;# 
  2071  019E                     	;# 
  2072  019F                     	;# 
  2073  020C                     	;# 
  2074  020D                     	;# 
  2075  0211                     	;# 
  2076  0211                     	;# 
  2077  0212                     	;# 
  2078  0212                     	;# 
  2079  0213                     	;# 
  2080  0213                     	;# 
  2081  0214                     	;# 
  2082  0214                     	;# 
  2083  0215                     	;# 
  2084  0215                     	;# 
  2085  0215                     	;# 
  2086  0216                     	;# 
  2087  0216                     	;# 
  2088  0217                     	;# 
  2089  0217                     	;# 
  2090  0219                     	;# 
  2091  021A                     	;# 
  2092  021B                     	;# 
  2093  021C                     	;# 
  2094  021D                     	;# 
  2095  021E                     	;# 
  2096  021F                     	;# 
  2097  0291                     	;# 
  2098  0291                     	;# 
  2099  0292                     	;# 
  2100  0293                     	;# 
  2101  0294                     	;# 
  2102  0295                     	;# 
  2103  0295                     	;# 
  2104  0296                     	;# 
  2105  0298                     	;# 
  2106  0298                     	;# 
  2107  0299                     	;# 
  2108  029A                     	;# 
  2109  029B                     	;# 
  2110  029C                     	;# 
  2111  029C                     	;# 
  2112  029D                     	;# 
  2113  029E                     	;# 
  2114  029E                     	;# 
  2115  0311                     	;# 
  2116  0311                     	;# 
  2117  0312                     	;# 
  2118  0313                     	;# 
  2119  0318                     	;# 
  2120  0318                     	;# 
  2121  0319                     	;# 
  2122  031A                     	;# 
  2123  0394                     	;# 
  2124  0395                     	;# 
  2125  0396                     	;# 
  2126  039A                     	;# 
  2127  039C                     	;# 
  2128  039D                     	;# 
  2129  039E                     	;# 
  2130  039F                     	;# 
  2131  0415                     	;# 
  2132  0416                     	;# 
  2133  0417                     	;# 
  2134  041C                     	;# 
  2135  041D                     	;# 
  2136  041E                     	;# 
  2137  0FE4                     	;# 
  2138  0FE5                     	;# 
  2139  0FE6                     	;# 
  2140  0FE7                     	;# 
  2141  0FE8                     	;# 
  2142  0FE9                     	;# 
  2143  0FEA                     	;# 
  2144  0FEB                     	;# 
  2145  0FED                     	;# 
  2146  0FEE                     	;# 
  2147  0FEF                     	;# 
  2148                           
  2149                           	psect	idataBANK1
  2150  0F4B                     __pidataBANK1:	
  2151                           
  2152                           ;initializer for _DAC_VoltageTable
  2153  0F4B  34BF               	retlw	low (STR_5| (0+32768))
  2154  0F4C  3481               	retlw	high (STR_5| (0+32768))
  2155  0F4D  346F               	retlw	low (STR_6| (0+32768))
  2156  0F4E  3481               	retlw	high (STR_6| (0+32768))
  2157  0F4F  34C4               	retlw	low (STR_7| (0+32768))
  2158  0F50  3481               	retlw	high (STR_7| (0+32768))
  2159  0F51  3475               	retlw	low (STR_8| (0+32768))
  2160  0F52  3481               	retlw	high (STR_8| (0+32768))
  2161  0F53  34C9               	retlw	low (STR_9| (0+32768))
  2162  0F54  3481               	retlw	high (STR_9| (0+32768))
  2163  0F55  347B               	retlw	low (STR_10| (0+32768))
  2164  0F56  3481               	retlw	high (STR_10| (0+32768))
  2165  0F57  34CE               	retlw	low (STR_11| (0+32768))
  2166  0F58  3481               	retlw	high (STR_11| (0+32768))
  2167  0F59  3481               	retlw	low (STR_12| (0+32768))
  2168  0F5A  3481               	retlw	high (STR_12| (0+32768))
  2169  0F5B  34D3               	retlw	low (STR_13| (0+32768))
  2170  0F5C  3481               	retlw	high (STR_13| (0+32768))
  2171  0F5D  3487               	retlw	low (STR_14| (0+32768))
  2172  0F5E  3481               	retlw	high (STR_14| (0+32768))
  2173  0F5F  34B0               	retlw	low (STR_15| (0+32768))
  2174  0F60  3481               	retlw	high (STR_15| (0+32768))
  2175  0F61  3463               	retlw	low (STR_16| (0+32768))
  2176  0F62  3481               	retlw	high (STR_16| (0+32768))
  2177  0F63  34B5               	retlw	low (STR_17| (0+32768))
  2178  0F64  3481               	retlw	high (STR_17| (0+32768))
  2179  0F65  3469               	retlw	low (STR_18| (0+32768))
  2180  0F66  3481               	retlw	high (STR_18| (0+32768))
  2181  0F67  34BA               	retlw	low (STR_19| (0+32768))
  2182  0F68  3481               	retlw	high (STR_19| (0+32768))
  2183                           
  2184                           	psect	idataBANK2
  2185  0720                     __pidataBANK2:	
  2186                           
  2187                           ;initializer for _H7826_01_Gain
  2188  0720  348D               	retlw	low (STR_35| (0+32768))
  2189  0721  3481               	retlw	high (STR_35| (0+32768))
  2190  0722  3492               	retlw	low (STR_36| (0+32768))
  2191  0723  3481               	retlw	high (STR_36| (0+32768))
  2192  0724  34A6               	retlw	low (STR_37| (0+32768))
  2193  0725  3481               	retlw	high (STR_37| (0+32768))
  2194  0726  3497               	retlw	low (STR_38| (0+32768))
  2195  0727  3481               	retlw	high (STR_38| (0+32768))
  2196  0728  3445               	retlw	low (STR_39| (0+32768))
  2197  0729  3481               	retlw	high (STR_39| (0+32768))
  2198  072A  344B               	retlw	low (STR_40| (0+32768))
  2199  072B  3481               	retlw	high (STR_40| (0+32768))
  2200  072C  3451               	retlw	low (STR_41| (0+32768))
  2201  072D  3481               	retlw	high (STR_41| (0+32768))
  2202  072E  3439               	retlw	low (STR_42| (0+32768))
  2203  072F  3481               	retlw	high (STR_42| (0+32768))
  2204  0730  34F4               	retlw	low (STR_43| (0+32768))
  2205  0731  3480               	retlw	high (STR_43| (0+32768))
  2206  0732  341E               	retlw	low (STR_44| (0+32768))
  2207  0733  3481               	retlw	high (STR_44| (0+32768))
  2208  0734  34FB               	retlw	low (STR_45| (0+32768))
  2209  0735  3480               	retlw	high (STR_45| (0+32768))
  2210  0736  3402               	retlw	low (STR_46| (0+32768))
  2211  0737  3481               	retlw	high (STR_46| (0+32768))
  2212  0738  342C               	retlw	low (STR_47| (0+32768))
  2213  0739  3481               	retlw	high (STR_47| (0+32768))
  2214  073A  34E6               	retlw	low (STR_48| (0+32768))
  2215  073B  3480               	retlw	high (STR_48| (0+32768))
  2216  073C  34ED               	retlw	low (STR_49| (0+32768))
  2217  073D  3480               	retlw	high (STR_49| (0+32768))
  2218                           
  2219                           ;initializer for _H7826_Gain
  2220  073E  34A1               	retlw	low (STR_20| (0+32768))
  2221  073F  3481               	retlw	high (STR_20| (0+32768))
  2222  0740  349C               	retlw	low (STR_21| (0+32768))
  2223  0741  3481               	retlw	high (STR_21| (0+32768))
  2224  0742  34AB               	retlw	low (STR_22| (0+32768))
  2225  0743  3481               	retlw	high (STR_22| (0+32768))
  2226  0744  345D               	retlw	low (STR_23| (0+32768))
  2227  0745  3481               	retlw	high (STR_23| (0+32768))
  2228  0746  3433               	retlw	low (STR_24| (0+32768))
  2229  0747  3481               	retlw	high (STR_24| (0+32768))
  2230  0748  343F               	retlw	low (STR_25| (0+32768))
  2231  0749  3481               	retlw	high (STR_25| (0+32768))
  2232  074A  3457               	retlw	low (STR_26| (0+32768))
  2233  074B  3481               	retlw	high (STR_26| (0+32768))
  2234  074C  3410               	retlw	low (STR_27| (0+32768))
  2235  074D  3481               	retlw	high (STR_27| (0+32768))
  2236  074E  3409               	retlw	low (STR_28| (0+32768))
  2237  074F  3481               	retlw	high (STR_28| (0+32768))
  2238  0750  3417               	retlw	low (STR_29| (0+32768))
  2239  0751  3481               	retlw	high (STR_29| (0+32768))
  2240  0752  34DF               	retlw	low (STR_30| (0+32768))
  2241  0753  3480               	retlw	high (STR_30| (0+32768))
  2242  0754  3425               	retlw	low (STR_31| (0+32768))
  2243  0755  3481               	retlw	high (STR_31| (0+32768))
  2244  0756  34CF               	retlw	low (STR_32| (0+32768))
  2245  0757  3480               	retlw	high (STR_32| (0+32768))
  2246  0758  34C7               	retlw	low (STR_33| (0+32768))
  2247  0759  3480               	retlw	high (STR_33| (0+32768))
  2248  075A  34BF               	retlw	low (STR_34| (0+32768))
  2249  075B  3480               	retlw	high (STR_34| (0+32768))
  2250                           
  2251                           	psect	stringtext
  2252  0064                     __pstringtext:	
  2253  0064                     _dpowers:	
  2254  0064  3401               	retlw	1
  2255  0065  3400               	retlw	0
  2256  0066  3400               	retlw	0
  2257  0067  3400               	retlw	0
  2258  0068  340A               	retlw	10
  2259  0069  3400               	retlw	0
  2260  006A  3400               	retlw	0
  2261  006B  3400               	retlw	0
  2262  006C  3464               	retlw	100
  2263  006D  3400               	retlw	0
  2264  006E  3400               	retlw	0
  2265  006F  3400               	retlw	0
  2266  0070  34E8               	retlw	232
  2267  0071  3403               	retlw	3
  2268  0072  3400               	retlw	0
  2269  0073  3400               	retlw	0
  2270  0074  3410               	retlw	16
  2271  0075  3427               	retlw	39
  2272  0076  3400               	retlw	0
  2273  0077  3400               	retlw	0
  2274  0078  34A0               	retlw	160
  2275  0079  3486               	retlw	134
  2276  007A  3401               	retlw	1
  2277  007B  3400               	retlw	0
  2278  007C  3440               	retlw	64
  2279  007D  3442               	retlw	66
  2280  007E  340F               	retlw	15
  2281  007F  3400               	retlw	0
  2282  0080  3480               	retlw	128
  2283  0081  3496               	retlw	150
  2284  0082  3498               	retlw	152
  2285  0083  3400               	retlw	0
  2286  0084  3400               	retlw	0
  2287  0085  34E1               	retlw	225
  2288  0086  34F5               	retlw	245
  2289  0087  3405               	retlw	5
  2290  0088  3400               	retlw	0
  2291  0089  34CA               	retlw	202
  2292  008A  349A               	retlw	154
  2293  008B  343B               	retlw	59
  2294  008C                     __end_of_dpowers:	
  2295  008C                     _DAC_DataTable:	
  2296  008C  3499               	retlw	153
  2297  008D  3401               	retlw	1
  2298  008E  34C2               	retlw	194
  2299  008F  3401               	retlw	1
  2300  0090  34EB               	retlw	235
  2301  0091  3401               	retlw	1
  2302  0092  3414               	retlw	20
  2303  0093  3402               	retlw	2
  2304  0094  343D               	retlw	61
  2305  0095  3402               	retlw	2
  2306  0096  3466               	retlw	102
  2307  0097  3402               	retlw	2
  2308  0098  348F               	retlw	143
  2309  0099  3402               	retlw	2
  2310  009A  34B8               	retlw	184
  2311  009B  3402               	retlw	2
  2312  009C  34E1               	retlw	225
  2313  009D  3402               	retlw	2
  2314  009E  340A               	retlw	10
  2315  009F  3403               	retlw	3
  2316  00A0  3433               	retlw	51
  2317  00A1  3403               	retlw	3
  2318  00A2  345B               	retlw	91
  2319  00A3  3403               	retlw	3
  2320  00A4  3484               	retlw	132
  2321  00A5  3403               	retlw	3
  2322  00A6  34AD               	retlw	173
  2323  00A7  3403               	retlw	3
  2324  00A8  34D6               	retlw	214
  2325  00A9  3403               	retlw	3
  2326  00AA                     __end_of_DAC_DataTable:	
  2327  0016                     _TMR1	set	22
  2328  000C                     _PORTA	set	12
  2329  001F                     _CPSCON1	set	31
  2330  001E                     _CPSCON0	set	30
  2331  0015                     _TMR0	set	21
  2332  0019                     _T1GCON	set	25
  2333  0018                     _T1CON	set	24
  2334  000D                     _PORTB	set	13
  2335  001B                     _PR2	set	27
  2336  001A                     _TMR2	set	26
  2337  001C                     _T2CON	set	28
  2338  00C0                     _TMR1ON	set	192
  2339  009B                     _TMR6IF	set	155
  2340  0099                     _TMR4IF	set	153
  2341  0088                     _TMR1IF	set	136
  2342  005F                     _GIE	set	95
  2343  005E                     _PEIE	set	94
  2344  00A1                     _BCL2IF	set	161
  2345  00A0                     _SSP2IF	set	160
  2346  0093                     _BCL1IF	set	147
  2347  008B                     _SSP1IF	set	139
  2348  0099                     _OSCCON	set	153
  2349  0095                     _OPTION_REG	set	149
  2350  008D                     _TRISB	set	141
  2351  008C                     _TRISA	set	140
  2352  049B                     _TMR6IE	set	1179
  2353  0499                     _TMR4IE	set	1177
  2354  0488                     _TMR1IE	set	1160
  2355  04A1                     _BCL2IE	set	1185
  2356  04A0                     _SSP2IE	set	1184
  2357  0493                     _BCL1IE	set	1171
  2358  048B                     _SSP1IE	set	1163
  2359  011E                     _APFCON1	set	286
  2360  011D                     _APFCON0	set	285
  2361  0866                     _LATA6	set	2150
  2362  0863                     _LATA3	set	2147
  2363  0864                     _LATA4	set	2148
  2364  018D                     _ANSELB	set	397
  2365  018C                     _ANSELA	set	396
  2366  021C                     _SSP2STATbits	set	540
  2367  0219                     _SSP2BUF	set	537
  2368  021E                     _SSP2CON2	set	542
  2369  021B                     _SSP2MSK	set	539
  2370  021E                     _SSP2CON2bits	set	542
  2371  021D                     _SSP2CON1bits	set	541
  2372  021A                     _SSP2ADD	set	538
  2373  021C                     _SSP2STAT	set	540
  2374  021D                     _SSP2CON1	set	541
  2375  0214                     _SSP1STATbits	set	532
  2376  0211                     _SSP1BUF	set	529
  2377  0216                     _SSP1CON2	set	534
  2378  0213                     _SSP1MSK	set	531
  2379  0216                     _SSP1CON2bits	set	534
  2380  0215                     _SSP1CON1bits	set	533
  2381  0212                     _SSP1ADD	set	530
  2382  0214                     _SSP1STAT	set	532
  2383  0215                     _SSP1CON1	set	533
  2384  0298                     _CCPR2L	set	664
  2385  029E                     _CCPTMRS	set	670
  2386  029A                     _CCP2CON	set	666
  2387  041E                     _T6CON	set	1054
  2388  041C                     _TMR6	set	1052
  2389  041D                     _PR6	set	1053
  2390  0417                     _T4CON	set	1047
  2391  0415                     _TMR4	set	1045
  2392  0416                     _PR4	set	1046
  2393  00AA                     STR_2:	
  2394  00AA  3453               	retlw	83	;'S'
  2395  00AB  3445               	retlw	69	;'E'
  2396  00AC  344C               	retlw	76	;'L'
  2397  00AD  3445               	retlw	69	;'E'
  2398  00AE  3443               	retlw	67	;'C'
  2399  00AF  3454               	retlw	84	;'T'
  2400  00B0  3446               	retlw	70	;'F'
  2401  00B1  3455               	retlw	85	;'U'
  2402  00B2  344E               	retlw	78	;'N'
  2403  00B3  3443               	retlw	67	;'C'
  2404  00B4  3400               	retlw	0
  2405  00B5                     STR_4:	
  2406  00B5  3450               	retlw	80	;'P'
  2407  00B6  344D               	retlw	77	;'M'
  2408  00B7  3454               	retlw	84	;'T'
  2409  00B8  3444               	retlw	68	;'D'
  2410  00B9  3445               	retlw	69	;'E'
  2411  00BA  3456               	retlw	86	;'V'
  2412  00BB  3449               	retlw	73	;'I'
  2413  00BC  3443               	retlw	67	;'C'
  2414  00BD  3445               	retlw	69	;'E'
  2415  00BE  3400               	retlw	0
  2416  00BF                     STR_34:	
  2417  00BF  3432               	retlw	50	;'2'
  2418  00C0  3437               	retlw	55	;'7'
  2419  00C1  3437               	retlw	55	;'7'
  2420  00C2  3434               	retlw	52	;'4'
  2421  00C3  3435               	retlw	53	;'5'
  2422  00C4  3436               	retlw	54	;'6'
  2423  00C5  3432               	retlw	50	;'2'
  2424  00C6  3400               	retlw	0
  2425  00C7                     STR_33:	
  2426  00C7  3431               	retlw	49	;'1'
  2427  00C8  3439               	retlw	57	;'9'
  2428  00C9  3434               	retlw	52	;'4'
  2429  00CA  3430               	retlw	48	;'0'
  2430  00CB  3436               	retlw	54	;'6'
  2431  00CC  3437               	retlw	55	;'7'
  2432  00CD  3433               	retlw	51	;'3'
  2433  00CE  3400               	retlw	0
  2434  00CF                     STR_32:	
  2435  00CF  3431               	retlw	49	;'1'
  2436  00D0  3433               	retlw	51	;'3'
  2437  00D1  3433               	retlw	51	;'3'
  2438  00D2  3436               	retlw	54	;'6'
  2439  00D3  3430               	retlw	48	;'0'
  2440  00D4  3430               	retlw	48	;'0'
  2441  00D5  3436               	retlw	54	;'6'
  2442  00D6  3400               	retlw	0
  2443  00D7                     STR_3:	
  2444  00D7  3441               	retlw	65	;'A'
  2445  00D8  3444               	retlw	68	;'D'
  2446  00D9  344A               	retlw	74	;'J'
  2447  00DA  3447               	retlw	71	;'G'
  2448  00DB  3441               	retlw	65	;'A'
  2449  00DC  3449               	retlw	73	;'I'
  2450  00DD  344E               	retlw	78	;'N'
  2451  00DE  3400               	retlw	0
  2452  00DF                     STR_30:	
  2453  00DF  3436               	retlw	54	;'6'
  2454  00E0  3430               	retlw	48	;'0'
  2455  00E1  3430               	retlw	48	;'0'
  2456  00E2  3430               	retlw	48	;'0'
  2457  00E3  3430               	retlw	48	;'0'
  2458  00E4  3430               	retlw	48	;'0'
  2459  00E5  3400               	retlw	0
  2460  00E6                     STR_48:	
  2461  00E6  3437               	retlw	55	;'7'
  2462  00E7  3430               	retlw	48	;'0'
  2463  00E8  3430               	retlw	48	;'0'
  2464  00E9  3438               	retlw	56	;'8'
  2465  00EA  3439               	retlw	57	;'9'
  2466  00EB  3430               	retlw	48	;'0'
  2467  00EC  3400               	retlw	0
  2468  00ED                     STR_49:	
  2469  00ED  3439               	retlw	57	;'9'
  2470  00EE  3436               	retlw	54	;'6'
  2471  00EF  3438               	retlw	56	;'8'
  2472  00F0  3434               	retlw	52	;'4'
  2473  00F1  3437               	retlw	55	;'7'
  2474  00F2  3432               	retlw	50	;'2'
  2475  00F3  3400               	retlw	0
  2476  00F4                     STR_43:	
  2477  00F4  3431               	retlw	49	;'1'
  2478  00F5  3430               	retlw	48	;'0'
  2479  00F6  3438               	retlw	56	;'8'
  2480  00F7  3438               	retlw	56	;'8'
  2481  00F8  3434               	retlw	52	;'4'
  2482  00F9  3433               	retlw	51	;'3'
  2483  00FA  3400               	retlw	0
  2484  00FB                     STR_45:	
  2485  00FB  3432               	retlw	50	;'2'
  2486  00FC  3434               	retlw	52	;'4'
  2487  00FD  3432               	retlw	50	;'2'
  2488  00FE  3433               	retlw	51	;'3'
  2489  00FF  3436               	retlw	54	;'6'
  2490  0100  3434               	retlw	52	;'4'
  2491  0101  3400               	retlw	0
  2492  0102                     STR_46:	
  2493  0102  3433               	retlw	51	;'3'
  2494  0103  3435               	retlw	53	;'5'
  2495  0104  3431               	retlw	49	;'1'
  2496  0105  3431               	retlw	49	;'1'
  2497  0106  3432               	retlw	50	;'2'
  2498  0107  3437               	retlw	55	;'7'
  2499  0108  3400               	retlw	0
  2500  0109                     STR_28:	
  2501  0109  3432               	retlw	50	;'2'
  2502  010A  3434               	retlw	52	;'4'
  2503  010B  3437               	retlw	55	;'7'
  2504  010C  3436               	retlw	54	;'6'
  2505  010D  3434               	retlw	52	;'4'
  2506  010E  3437               	retlw	55	;'7'
  2507  010F  3400               	retlw	0
  2508  0110                     STR_27:	
  2509  0110  3431               	retlw	49	;'1'
  2510  0111  3435               	retlw	53	;'5'
  2511  0112  3433               	retlw	51	;'3'
  2512  0113  3432               	retlw	50	;'2'
  2513  0114  3432               	retlw	50	;'2'
  2514  0115  3438               	retlw	56	;'8'
  2515  0116  3400               	retlw	0
  2516  0117                     STR_29:	
  2517  0117  3433               	retlw	51	;'3'
  2518  0118  3438               	retlw	56	;'8'
  2519  0119  3439               	retlw	57	;'9'
  2520  011A  3439               	retlw	57	;'9'
  2521  011B  3438               	retlw	56	;'8'
  2522  011C  3438               	retlw	56	;'8'
  2523  011D  3400               	retlw	0
  2524  011E                     STR_44:	
  2525  011E  3431               	retlw	49	;'1'
  2526  011F  3436               	retlw	54	;'6'
  2527  0120  3434               	retlw	52	;'4'
  2528  0121  3431               	retlw	49	;'1'
  2529  0122  3433               	retlw	51	;'3'
  2530  0123  3439               	retlw	57	;'9'
  2531  0124  3400               	retlw	0
  2532  0125                     STR_31:	
  2533  0125  3439               	retlw	57	;'9'
  2534  0126  3430               	retlw	48	;'0'
  2535  0127  3433               	retlw	51	;'3'
  2536  0128  3438               	retlw	56	;'8'
  2537  0129  3439               	retlw	57	;'9'
  2538  012A  3439               	retlw	57	;'9'
  2539  012B  3400               	retlw	0
  2540  012C                     STR_47:	
  2541  012C  3434               	retlw	52	;'4'
  2542  012D  3439               	retlw	57	;'9'
  2543  012E  3439               	retlw	57	;'9'
  2544  012F  3439               	retlw	57	;'9'
  2545  0130  3439               	retlw	57	;'9'
  2546  0131  3439               	retlw	57	;'9'
  2547  0132  3400               	retlw	0
  2548  0133                     STR_24:	
  2549  0133  3433               	retlw	51	;'3'
  2550  0134  3430               	retlw	48	;'0'
  2551  0135  3430               	retlw	48	;'0'
  2552  0136  3430               	retlw	48	;'0'
  2553  0137  3430               	retlw	48	;'0'
  2554  0138  3400               	retlw	0
  2555  0139                     STR_42:	
  2556  0139  3437               	retlw	55	;'7'
  2557  013A  3430               	retlw	48	;'0'
  2558  013B  3435               	retlw	53	;'5'
  2559  013C  3430               	retlw	48	;'0'
  2560  013D  3430               	retlw	48	;'0'
  2561  013E  3400               	retlw	0
  2562  013F                     STR_25:	
  2563  013F  3435               	retlw	53	;'5'
  2564  0140  3433               	retlw	51	;'3'
  2565  0141  3435               	retlw	53	;'5'
  2566  0142  3435               	retlw	53	;'5'
  2567  0143  3433               	retlw	51	;'3'
  2568  0144  3400               	retlw	0
  2569  0145                     STR_39:	
  2570  0145  3431               	retlw	49	;'1'
  2571  0146  3436               	retlw	54	;'6'
  2572  0147  3431               	retlw	49	;'1'
  2573  0148  3432               	retlw	50	;'2'
  2574  0149  3435               	retlw	53	;'5'
  2575  014A  3400               	retlw	0
  2576  014B                     STR_40:	
  2577  014B  3432               	retlw	50	;'2'
  2578  014C  3437               	retlw	55	;'7'
  2579  014D  3432               	retlw	50	;'2'
  2580  014E  3433               	retlw	51	;'3'
  2581  014F  3438               	retlw	56	;'8'
  2582  0150  3400               	retlw	0
  2583  0151                     STR_41:	
  2584  0151  3434               	retlw	52	;'4'
  2585  0152  3434               	retlw	52	;'4'
  2586  0153  3434               	retlw	52	;'4'
  2587  0154  3437               	retlw	55	;'7'
  2588  0155  3438               	retlw	56	;'8'
  2589  0156  3400               	retlw	0
  2590  0157                     STR_26:	
  2591  0157  3439               	retlw	57	;'9'
  2592  0158  3432               	retlw	50	;'2'
  2593  0159  3430               	retlw	48	;'0'
  2594  015A  3438               	retlw	56	;'8'
  2595  015B  3438               	retlw	56	;'8'
  2596  015C  3400               	retlw	0
  2597  015D                     STR_23:	
  2598  015D  3431               	retlw	49	;'1'
  2599  015E  3436               	retlw	54	;'6'
  2600  015F  3430               	retlw	48	;'0'
  2601  0160  3439               	retlw	57	;'9'
  2602  0161  3439               	retlw	57	;'9'
  2603  0162  3400               	retlw	0
  2604  0163                     STR_16:	
  2605  0163  3431               	retlw	49	;'1'
  2606  0164  342E               	retlw	46	;'.'
  2607  0165  3430               	retlw	48	;'0'
  2608  0166  3435               	retlw	53	;'5'
  2609  0167  3456               	retlw	86	;'V'
  2610  0168  3400               	retlw	0
  2611  0169                     STR_18:	
  2612  0169  3431               	retlw	49	;'1'
  2613  016A  342E               	retlw	46	;'.'
  2614  016B  3431               	retlw	49	;'1'
  2615  016C  3435               	retlw	53	;'5'
  2616  016D  3456               	retlw	86	;'V'
  2617  016E  3400               	retlw	0
  2618  016F                     STR_6:	
  2619  016F  3430               	retlw	48	;'0'
  2620  0170  342E               	retlw	46	;'.'
  2621  0171  3435               	retlw	53	;'5'
  2622  0172  3435               	retlw	53	;'5'
  2623  0173  3456               	retlw	86	;'V'
  2624  0174  3400               	retlw	0
  2625  0175                     STR_8:	
  2626  0175  3430               	retlw	48	;'0'
  2627  0176  342E               	retlw	46	;'.'
  2628  0177  3436               	retlw	54	;'6'
  2629  0178  3435               	retlw	53	;'5'
  2630  0179  3456               	retlw	86	;'V'
  2631  017A  3400               	retlw	0
  2632  017B                     STR_10:	
  2633  017B  3430               	retlw	48	;'0'
  2634  017C  342E               	retlw	46	;'.'
  2635  017D  3437               	retlw	55	;'7'
  2636  017E  3435               	retlw	53	;'5'
  2637  017F  3456               	retlw	86	;'V'
  2638  0180  3400               	retlw	0
  2639  0181                     STR_12:	
  2640  0181  3430               	retlw	48	;'0'
  2641  0182  342E               	retlw	46	;'.'
  2642  0183  3438               	retlw	56	;'8'
  2643  0184  3435               	retlw	53	;'5'
  2644  0185  3456               	retlw	86	;'V'
  2645  0186  3400               	retlw	0
  2646  0187                     STR_14:	
  2647  0187  3430               	retlw	48	;'0'
  2648  0188  342E               	retlw	46	;'.'
  2649  0189  3439               	retlw	57	;'9'
  2650  018A  3435               	retlw	53	;'5'
  2651  018B  3456               	retlw	86	;'V'
  2652  018C  3400               	retlw	0
  2653  018D                     STR_35:	
  2654  018D  3431               	retlw	49	;'1'
  2655  018E  3432               	retlw	50	;'2'
  2656  018F  3435               	retlw	53	;'5'
  2657  0190  3430               	retlw	48	;'0'
  2658  0191  3400               	retlw	0
  2659  0192                     STR_36:	
  2660  0192  3432               	retlw	50	;'2'
  2661  0193  3435               	retlw	53	;'5'
  2662  0194  3438               	retlw	56	;'8'
  2663  0195  3430               	retlw	48	;'0'
  2664  0196  3400               	retlw	0
  2665  0197                     STR_38:	
  2666  0197  3439               	retlw	57	;'9'
  2667  0198  3431               	retlw	49	;'1'
  2668  0199  3438               	retlw	56	;'8'
  2669  019A  3432               	retlw	50	;'2'
  2670  019B  3400               	retlw	0
  2671  019C                     STR_21:	
  2672  019C  3433               	retlw	51	;'3'
  2673  019D  3439               	retlw	57	;'9'
  2674  019E  3435               	retlw	53	;'5'
  2675  019F  3437               	retlw	55	;'7'
  2676  01A0  3400               	retlw	0
  2677  01A1                     STR_20:	
  2678  01A1  3431               	retlw	49	;'1'
  2679  01A2  3437               	retlw	55	;'7'
  2680  01A3  3437               	retlw	55	;'7'
  2681  01A4  3437               	retlw	55	;'7'
  2682  01A5  3400               	retlw	0
  2683  01A6                     STR_37:	
  2684  01A6  3434               	retlw	52	;'4'
  2685  01A7  3439               	retlw	57	;'9'
  2686  01A8  3439               	retlw	57	;'9'
  2687  01A9  3438               	retlw	56	;'8'
  2688  01AA  3400               	retlw	0
  2689  01AB                     STR_22:	
  2690  01AB  3438               	retlw	56	;'8'
  2691  01AC  3432               	retlw	50	;'2'
  2692  01AD  3431               	retlw	49	;'1'
  2693  01AE  3439               	retlw	57	;'9'
  2694  01AF  3400               	retlw	0
  2695  01B0                     STR_15:	
  2696  01B0  3431               	retlw	49	;'1'
  2697  01B1  342E               	retlw	46	;'.'
  2698  01B2  3430               	retlw	48	;'0'
  2699  01B3  3456               	retlw	86	;'V'
  2700  01B4  3400               	retlw	0
  2701  01B5                     STR_17:	
  2702  01B5  3431               	retlw	49	;'1'
  2703  01B6  342E               	retlw	46	;'.'
  2704  01B7  3431               	retlw	49	;'1'
  2705  01B8  3456               	retlw	86	;'V'
  2706  01B9  3400               	retlw	0
  2707  01BA                     STR_19:	
  2708  01BA  3431               	retlw	49	;'1'
  2709  01BB  342E               	retlw	46	;'.'
  2710  01BC  3432               	retlw	50	;'2'
  2711  01BD  3456               	retlw	86	;'V'
  2712  01BE  3400               	retlw	0
  2713  01BF                     STR_5:	
  2714  01BF  3430               	retlw	48	;'0'
  2715  01C0  342E               	retlw	46	;'.'
  2716  01C1  3435               	retlw	53	;'5'
  2717  01C2  3456               	retlw	86	;'V'
  2718  01C3  3400               	retlw	0
  2719  01C4                     STR_7:	
  2720  01C4  3430               	retlw	48	;'0'
  2721  01C5  342E               	retlw	46	;'.'
  2722  01C6  3436               	retlw	54	;'6'
  2723  01C7  3456               	retlw	86	;'V'
  2724  01C8  3400               	retlw	0
  2725  01C9                     STR_9:	
  2726  01C9  3430               	retlw	48	;'0'
  2727  01CA  342E               	retlw	46	;'.'
  2728  01CB  3437               	retlw	55	;'7'
  2729  01CC  3456               	retlw	86	;'V'
  2730  01CD  3400               	retlw	0
  2731  01CE                     STR_11:	
  2732  01CE  3430               	retlw	48	;'0'
  2733  01CF  342E               	retlw	46	;'.'
  2734  01D0  3438               	retlw	56	;'8'
  2735  01D1  3456               	retlw	86	;'V'
  2736  01D2  3400               	retlw	0
  2737  01D3                     STR_13:	
  2738  01D3  3430               	retlw	48	;'0'
  2739  01D4  342E               	retlw	46	;'.'
  2740  01D5  3439               	retlw	57	;'9'
  2741  01D6  3456               	retlw	86	;'V'
  2742  01D7  3400               	retlw	0
  2743  01D8                     STR_1:	
  2744  01D8  3425               	retlw	37	;'%'
  2745  01D9  346C               	retlw	108	;'l'
  2746  01DA  3475               	retlw	117	;'u'
  2747  01DB  3400               	retlw	0
  2748                           
  2749                           ; #config settings
  2750  0000                     
  2751                           	psect	cinit
  2752  0033                     start_initialization:	
  2753  0033                     __initialization:	
  2754                           
  2755                           ; Initialize objects allocated to BANK1
  2756  0033  304B               	movlw	low __pidataBANK1
  2757  0034  0084               	movwf	4
  2758  0035  308F               	movlw	(high __pidataBANK1)| (0+128)
  2759  0036  0085               	movwf	5
  2760  0037  30C6               	movlw	low __pdataBANK1
  2761  0038  0086               	movwf	6
  2762  0039  3000               	movlw	high __pdataBANK1
  2763  003A  0087               	movwf	7
  2764  003B  301E               	movlw	30
  2765  003C  318E  262A  3180   	fcall	init_ram
  2766                           
  2767                           ; Initialize objects allocated to BANK2
  2768  003F  3020               	movlw	low __pidataBANK2
  2769  0040  0084               	movwf	4
  2770  0041  3087               	movlw	(high __pidataBANK2)| (0+128)
  2771  0042  0085               	movwf	5
  2772  0043  3020               	movlw	low __pdataBANK2
  2773  0044  0086               	movwf	6
  2774  0045  3001               	movlw	high __pdataBANK2
  2775  0046  0087               	movwf	7
  2776  0047  303C               	movlw	60
  2777  0048  318E  262A  3180   	fcall	init_ram
  2778                           
  2779                           ; Clear objects allocated to COMMON
  2780  004B  01F0               	clrf	__pbssCOMMON& (0+127)
  2781  004C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2782  004D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2783  004E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2784  004F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2785  0050  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2786                           
  2787                           ; Clear objects allocated to BANK0
  2788  0051  3058               	movlw	low __pbssBANK0
  2789  0052  0084               	movwf	4
  2790  0053  3000               	movlw	high __pbssBANK0
  2791  0054  0085               	movwf	5
  2792  0055  3018               	movlw	24
  2793  0056  318E  2624  3180   	fcall	clear_ram0
  2794                           
  2795                           ; Clear objects allocated to BANK1
  2796  0059  30A0               	movlw	low __pbssBANK1
  2797  005A  0084               	movwf	4
  2798  005B  3000               	movlw	high __pbssBANK1
  2799  005C  0085               	movwf	5
  2800  005D  3026               	movlw	38
  2801  005E  318E  2624         	fcall	clear_ram0
  2802  0060                     end_of_initialization:	
  2803                           ;End of C runtime variable initialization code
  2804                           
  2805  0060                     __end_of__initialization:	
  2806  0060  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2807  0061  0020               	movlb	0
  2808  0062  3183  2BEE         	ljmp	_main	;jump to C main() function
  2809                           
  2810                           	psect	bssCOMMON
  2811  0070                     __pbssCOMMON:	
  2812  0070                     _mTouch_Interval:	
  2813  0070                     	ds	3
  2814  0073                     _count:	
  2815  0073                     	ds	2
  2816  0075                     CPSx_Read@channel:	
  2817  0075                     	ds	1
  2818                           
  2819                           	psect	bssBANK0
  2820  0058                     __pbssBANK0:	
  2821  0058                     _timesum:	
  2822  0058                     	ds	4
  2823  005C                     _countsum:	
  2824  005C                     	ds	4
  2825  0060                     _CPS_Data:	
  2826  0060                     	ds	3
  2827  0063                     _CPS_PreData:	
  2828  0063                     	ds	3
  2829  0066                     _MemoryReg:	
  2830  0066                     	ds	3
  2831  0069                     _errno:	
  2832  0069                     	ds	2
  2833  006B                     _mode:	
  2834  006B                     	ds	2
  2835  006D                     _VoltageReg:	
  2836  006D                     	ds	2
  2837  006F                     _ConfigReg:	
  2838  006F                     	ds	1
  2839                           
  2840                           	psect	bssBANK1
  2841  00A0                     __pbssBANK1:	
  2842  00A0                     _I2C2_Config:	
  2843  00A0                     	ds	19
  2844  00B3                     _I2C1_Config:	
  2845  00B3                     	ds	19
  2846                           
  2847                           	psect	dataBANK1
  2848  00C6                     __pdataBANK1:	
  2849  00C6                     _DAC_VoltageTable:	
  2850  00C6                     	ds	30
  2851                           
  2852                           	psect	dataBANK2
  2853  0120                     __pdataBANK2:	
  2854  0120                     _H7826_01_Gain:	
  2855  0120                     	ds	30
  2856  013E                     _H7826_Gain:	
  2857  013E                     	ds	30
  2858                           
  2859                           	psect	inittext
  2860  0E2A                     init_ram:	
  2861  0E2A  00FE               	movwf	126
  2862  0E2B                     initloop:	
  2863  0E2B  0012               	moviw fsr0++
  2864  0E2C  001E               	movwi fsr1++
  2865  0E2D  0BFE               	decfsz	126,f
  2866  0E2E  2E2B               	goto	initloop
  2867  0E2F  3400               	retlw	0
  2868                           
  2869                           	psect	clrtext
  2870  0E24                     clear_ram0:	
  2871                           ;	Called with FSR0 containing the base address, and
  2872                           ;	WREG with the size to clear
  2873                           
  2874  0E24  0064               	clrwdt	;clear the watchdog before getting into this loop
  2875  0E25                     clrloop0:	
  2876  0E25  0180               	clrf	0	;clear RAM location pointed to by FSR
  2877  0E26  3101               	addfsr 0,1
  2878  0E27  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2879  0E28  2E25               	goto	clrloop0	;have we reached the end yet?
  2880  0E29  3400               	retlw	0	;all done for this memory range, return
  2881                           
  2882                           	psect	cstackCOMMON
  2883  0076                     __pcstackCOMMON:	
  2884  0076                     ?_LCD_DisplayClear:	
  2885  0076                     ?_Basic_Init:	
  2886                           ; 1 bytes @ 0x0
  2887                           
  2888  0076                     ?_mTouch_Read:	
  2889                           ; 1 bytes @ 0x0
  2890                           
  2891  0076                     ?_mTouch_IntervalDecrement:	
  2892                           ; 1 bytes @ 0x0
  2893                           
  2894  0076                     ??_mTouch_IntervalDecrement:	
  2895                           ; 1 bytes @ 0x0
  2896                           
  2897  0076                     ?_Buzzer_Init:	
  2898                           ; 1 bytes @ 0x0
  2899                           
  2900  0076                     ?_Buzzer_SetDuty:	
  2901                           ; 1 bytes @ 0x0
  2902                           
  2903  0076                     ?_Buzzer_Handler:	
  2904                           ; 1 bytes @ 0x0
  2905                           
  2906  0076                     ?_I2C1_PinInit:	
  2907                           ; 1 bytes @ 0x0
  2908                           
  2909  0076                     ?_I2C1_Interrupt:	
  2910                           ; 1 bytes @ 0x0
  2911                           
  2912  0076                     ??_I2C1_Interrupt:	
  2913                           ; 1 bytes @ 0x0
  2914                           
  2915  0076                     ?_I2C2_PinInit:	
  2916                           ; 1 bytes @ 0x0
  2917                           
  2918  0076                     ?_I2C2_Interrupt:	
  2919                           ; 1 bytes @ 0x0
  2920                           
  2921  0076                     ??_I2C2_Interrupt:	
  2922                           ; 1 bytes @ 0x0
  2923                           
  2924  0076                     ?_I2C_CommonInterrupt:	
  2925                           ; 1 bytes @ 0x0
  2926                           
  2927  0076                     ?_LCD_WriteData:	
  2928                           ; 1 bytes @ 0x0
  2929                           
  2930  0076                     ?_LCD_Init:	
  2931                           ; 1 bytes @ 0x0
  2932                           
  2933  0076                     ?_putch:	
  2934                           ; 1 bytes @ 0x0
  2935                           
  2936  0076                     ?_LCD_CursorHome:	
  2937                           ; 1 bytes @ 0x0
  2938                           
  2939  0076                     ?_DAC_Initialize:	
  2940                           ; 1 bytes @ 0x0
  2941                           
  2942  0076                     ?_Timer1_Init:	
  2943                           ; 1 bytes @ 0x0
  2944                           
  2945  0076                     ?_Timer1_Count10us:	
  2946                           ; 1 bytes @ 0x0
  2947                           
  2948  0076                     ??_Timer1_Count10us:	
  2949                           ; 1 bytes @ 0x0
  2950                           
  2951  0076                     ?_Timer1_DetectAssignCount:	
  2952                           ; 1 bytes @ 0x0
  2953                           
  2954  0076                     ??_Timer1_DetectAssignCount:	
  2955                           ; 1 bytes @ 0x0
  2956                           
  2957  0076                     ?_Timer4_Init:	
  2958                           ; 1 bytes @ 0x0
  2959                           
  2960  0076                     ?_Timer4_Handler:	
  2961                           ; 1 bytes @ 0x0
  2962                           
  2963  0076                     ??_Timer4_Handler:	
  2964                           ; 1 bytes @ 0x0
  2965                           
  2966  0076                     ?_Timer6_Init:	
  2967                           ; 1 bytes @ 0x0
  2968                           
  2969  0076                     ?_Timer6_Handler:	
  2970                           ; 1 bytes @ 0x0
  2971                           
  2972  0076                     ??_Timer6_Handler:	
  2973                           ; 1 bytes @ 0x0
  2974                           
  2975  0076                     ?_mTouch_PortInit:	
  2976                           ; 1 bytes @ 0x0
  2977                           
  2978  0076                     ?_mTouch_Init:	
  2979                           ; 1 bytes @ 0x0
  2980                           
  2981  0076                     ?_CPSx_Read:	
  2982                           ; 1 bytes @ 0x0
  2983                           
  2984  0076                     ??_CPSx_Read:	
  2985                           ; 1 bytes @ 0x0
  2986                           
  2987  0076                     ?_main:	
  2988                           ; 1 bytes @ 0x0
  2989                           
  2990  0076                     ?_Handler:	
  2991                           ; 1 bytes @ 0x0
  2992                           
  2993  0076                     Buzzer_SetDuty@duty:	
  2994                           ; 1 bytes @ 0x0
  2995                           
  2996                           
  2997                           ; 2 bytes @ 0x0
  2998  0076                     	ds	1
  2999  0077                     ??_I2C_CommonInterrupt:	
  3000                           
  3001                           ; 1 bytes @ 0x1
  3002  0077                     	ds	1
  3003  0078                     ??_Buzzer_SetDuty:	
  3004                           
  3005                           ; 1 bytes @ 0x2
  3006  0078                     	ds	2
  3007  007A                     Buzzer_SetDuty@CCP2CON_Pre:	
  3008                           
  3009                           ; 1 bytes @ 0x4
  3010  007A                     	ds	1
  3011  007B                     ??_Buzzer_Handler:	
  3012  007B                     ??_Handler:	
  3013                           ; 1 bytes @ 0x5
  3014                           
  3015                           
  3016                           ; 1 bytes @ 0x5
  3017  007B                     	ds	1
  3018                           
  3019                           	psect	cstackBANK0
  3020  0020                     __pcstackBANK0:	
  3021  0020                     ??_Basic_Init:	
  3022  0020                     ??_Buzzer_Init:	
  3023                           ; 1 bytes @ 0x0
  3024                           
  3025  0020                     ?_Buzzer_MiliSecond:	
  3026                           ; 1 bytes @ 0x0
  3027                           
  3028  0020                     ??_I2C1_PinInit:	
  3029                           ; 1 bytes @ 0x0
  3030                           
  3031  0020                     ?_I2C1_Transmit:	
  3032                           ; 1 bytes @ 0x0
  3033                           
  3034  0020                     ??_I2C2_PinInit:	
  3035                           ; 1 bytes @ 0x0
  3036                           
  3037  0020                     ?_I2C2_Transmit:	
  3038                           ; 1 bytes @ 0x0
  3039                           
  3040  0020                     ??_LCD_WriteData:	
  3041                           ; 1 bytes @ 0x0
  3042                           
  3043  0020                     ??_Timer1_Init:	
  3044                           ; 1 bytes @ 0x0
  3045                           
  3046  0020                     ??_Timer4_Init:	
  3047                           ; 1 bytes @ 0x0
  3048                           
  3049  0020                     ??_Timer6_Init:	
  3050                           ; 1 bytes @ 0x0
  3051                           
  3052  0020                     ??_mTouch_PortInit:	
  3053                           ; 1 bytes @ 0x0
  3054                           
  3055  0020                     ?___lmul:	
  3056                           ; 1 bytes @ 0x0
  3057                           
  3058  0020                     I2C1_Transmit@pData:	
  3059                           ; 4 bytes @ 0x0
  3060                           
  3061  0020                     I2C2_Transmit@pData:	
  3062                           ; 1 bytes @ 0x0
  3063                           
  3064  0020                     Buzzer_MiliSecond@time:	
  3065                           ; 1 bytes @ 0x0
  3066                           
  3067  0020                     ___lmul@multiplier:	
  3068                           ; 2 bytes @ 0x0
  3069                           
  3070                           
  3071                           ; 4 bytes @ 0x0
  3072  0020                     	ds	1
  3073  0021                     ?_I2C1_Setting:	
  3074  0021                     ?_I2C2_Setting:	
  3075                           ; 1 bytes @ 0x1
  3076                           
  3077  0021                     ??_mTouch_Init:	
  3078                           ; 1 bytes @ 0x1
  3079                           
  3080  0021                     I2C1_Setting@mode:	
  3081                           ; 1 bytes @ 0x1
  3082                           
  3083  0021                     I2C1_Transmit@size:	
  3084                           ; 1 bytes @ 0x1
  3085                           
  3086  0021                     I2C2_Setting@mode:	
  3087                           ; 1 bytes @ 0x1
  3088                           
  3089  0021                     I2C2_Transmit@size:	
  3090                           ; 1 bytes @ 0x1
  3091                           
  3092                           
  3093                           ; 1 bytes @ 0x1
  3094  0021                     	ds	1
  3095  0022                     ??_mTouch_Read:	
  3096  0022                     ??_Buzzer_MiliSecond:	
  3097                           ; 1 bytes @ 0x2
  3098                           
  3099  0022                     ??_I2C1_Transmit:	
  3100                           ; 1 bytes @ 0x2
  3101                           
  3102  0022                     ??_I2C2_Transmit:	
  3103                           ; 1 bytes @ 0x2
  3104                           
  3105  0022                     I2C1_Setting@Speed:	
  3106                           ; 1 bytes @ 0x2
  3107                           
  3108  0022                     I2C2_Setting@Speed:	
  3109                           ; 1 bytes @ 0x2
  3110                           
  3111  0022                     LCD_WriteData@point:	
  3112                           ; 1 bytes @ 0x2
  3113                           
  3114                           
  3115                           ; 1 bytes @ 0x2
  3116  0022                     	ds	1
  3117  0023                     ??_LCD_DisplayClear:	
  3118  0023                     ??_I2C1_Setting:	
  3119                           ; 1 bytes @ 0x3
  3120                           
  3121  0023                     ??_I2C2_Setting:	
  3122                           ; 1 bytes @ 0x3
  3123                           
  3124  0023                     ??_putch:	
  3125                           ; 1 bytes @ 0x3
  3126                           
  3127  0023                     ??_LCD_CursorHome:	
  3128                           ; 1 bytes @ 0x3
  3129                           
  3130  0023                     putch@c:	
  3131                           ; 1 bytes @ 0x3
  3132                           
  3133                           
  3134                           ; 1 bytes @ 0x3
  3135  0023                     	ds	1
  3136  0024                     ??_LCD_Init:	
  3137  0024                     I2C1_Setting@address:	
  3138                           ; 1 bytes @ 0x4
  3139                           
  3140  0024                     I2C1_Transmit@address:	
  3141                           ; 1 bytes @ 0x4
  3142                           
  3143  0024                     I2C2_Setting@address:	
  3144                           ; 1 bytes @ 0x4
  3145                           
  3146  0024                     I2C2_Transmit@address:	
  3147                           ; 1 bytes @ 0x4
  3148                           
  3149  0024                     ___lmul@multiplicand:	
  3150                           ; 1 bytes @ 0x4
  3151                           
  3152                           
  3153                           ; 4 bytes @ 0x4
  3154  0024                     	ds	1
  3155  0025                     ?_I2C_Init:	
  3156  0025                     I2C1_Transmit@i:	
  3157                           ; 1 bytes @ 0x5
  3158                           
  3159  0025                     I2C2_Transmit@i:	
  3160                           ; 1 bytes @ 0x5
  3161                           
  3162  0025                     I2C_Init@address:	
  3163                           ; 1 bytes @ 0x5
  3164                           
  3165                           
  3166                           ; 1 bytes @ 0x5
  3167  0025                     	ds	1
  3168  0026                     I2C1_Transmit@i_172:	
  3169  0026                     I2C2_Transmit@i_316:	
  3170                           ; 1 bytes @ 0x6
  3171                           
  3172  0026                     I2C_Init@mode:	
  3173                           ; 1 bytes @ 0x6
  3174                           
  3175                           
  3176                           ; 1 bytes @ 0x6
  3177  0026                     	ds	1
  3178  0027                     I2C1_Transmit@result:	
  3179  0027                     I2C2_Transmit@result:	
  3180                           ; 1 bytes @ 0x7
  3181                           
  3182  0027                     I2C_Init@Speed:	
  3183                           ; 1 bytes @ 0x7
  3184                           
  3185  0027                     mTouch_Read@chan:	
  3186                           ; 1 bytes @ 0x7
  3187                           
  3188                           
  3189                           ; 1 bytes @ 0x7
  3190  0027                     	ds	1
  3191  0028                     ??_I2C_Init:	
  3192  0028                     ?_I2C_Transmit:	
  3193                           ; 1 bytes @ 0x8
  3194                           
  3195  0028                     ??___lmul:	
  3196                           ; 1 bytes @ 0x8
  3197                           
  3198  0028                     I2C_Transmit@address:	
  3199                           ; 1 bytes @ 0x8
  3200                           
  3201  0028                     ___lmul@product:	
  3202                           ; 1 bytes @ 0x8
  3203                           
  3204                           
  3205                           ; 4 bytes @ 0x8
  3206  0028                     	ds	1
  3207  0029                     I2C_Transmit@pData:	
  3208                           
  3209                           ; 1 bytes @ 0x9
  3210  0029                     	ds	1
  3211  002A                     I2C_Init@I2Cx:	
  3212  002A                     I2C_Transmit@size:	
  3213                           ; 1 bytes @ 0xA
  3214                           
  3215                           
  3216                           ; 1 bytes @ 0xA
  3217  002A                     	ds	1
  3218  002B                     ??_I2C_Transmit:	
  3219                           
  3220                           ; 1 bytes @ 0xB
  3221  002B                     	ds	1
  3222  002C                     ?___lldiv:	
  3223  002C                     ___lldiv@divisor:	
  3224                           ; 4 bytes @ 0xC
  3225                           
  3226                           
  3227                           ; 4 bytes @ 0xC
  3228  002C                     	ds	2
  3229  002E                     I2C_Transmit@I2Cx:	
  3230                           
  3231                           ; 1 bytes @ 0xE
  3232  002E                     	ds	1
  3233  002F                     I2C_Transmit@result:	
  3234                           
  3235                           ; 1 bytes @ 0xF
  3236  002F                     	ds	1
  3237  0030                     ??_DAC_Initialize:	
  3238  0030                     ___lldiv@dividend:	
  3239                           ; 1 bytes @ 0x10
  3240                           
  3241                           
  3242                           ; 4 bytes @ 0x10
  3243  0030                     	ds	4
  3244  0034                     ??___lldiv:	
  3245                           
  3246                           ; 1 bytes @ 0x14
  3247  0034                     	ds	1
  3248  0035                     ___lldiv@quotient:	
  3249                           
  3250                           ; 4 bytes @ 0x15
  3251  0035                     	ds	4
  3252  0039                     ___lldiv@counter:	
  3253                           
  3254                           ; 1 bytes @ 0x19
  3255  0039                     	ds	1
  3256  003A                     ?_Timer1_GetCPM:	
  3257  003A                     ?___llmod:	
  3258                           ; 2 bytes @ 0x1A
  3259                           
  3260  003A                     ___llmod@divisor:	
  3261                           ; 4 bytes @ 0x1A
  3262                           
  3263                           
  3264                           ; 4 bytes @ 0x1A
  3265  003A                     	ds	2
  3266  003C                     ??_Timer1_GetCPM:	
  3267                           
  3268                           ; 1 bytes @ 0x1C
  3269  003C                     	ds	2
  3270  003E                     ___llmod@dividend:	
  3271                           
  3272                           ; 4 bytes @ 0x1E
  3273  003E                     	ds	4
  3274  0042                     ??___llmod:	
  3275                           
  3276                           ; 1 bytes @ 0x22
  3277  0042                     	ds	1
  3278  0043                     ___llmod@counter:	
  3279                           
  3280                           ; 1 bytes @ 0x23
  3281  0043                     	ds	1
  3282  0044                     ?_printf:	
  3283  0044                     printf@f:	
  3284                           ; 2 bytes @ 0x24
  3285                           
  3286                           
  3287                           ; 2 bytes @ 0x24
  3288  0044                     	ds	4
  3289  0048                     ??_printf:	
  3290                           
  3291                           ; 1 bytes @ 0x28
  3292  0048                     	ds	6
  3293  004E                     printf@flag:	
  3294                           
  3295                           ; 1 bytes @ 0x2E
  3296  004E                     	ds	1
  3297  004F                     printf@prec:	
  3298                           
  3299                           ; 2 bytes @ 0x2F
  3300  004F                     	ds	2
  3301  0051                     printf@val:	
  3302                           
  3303                           ; 4 bytes @ 0x31
  3304  0051                     	ds	4
  3305  0055                     printf@ap:	
  3306                           
  3307                           ; 1 bytes @ 0x35
  3308  0055                     	ds	1
  3309  0056                     printf@c:	
  3310                           
  3311                           ; 1 bytes @ 0x36
  3312  0056                     	ds	1
  3313  0057                     ??_main:	
  3314                           
  3315                           ; 1 bytes @ 0x37
  3316  0057                     	ds	1
  3317                           
  3318                           	psect	maintext
  3319  03EE                     __pmaintext:	
  3320 ;;
  3321 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3322 ;;
  3323 ;; *************** function _main *****************
  3324 ;; Defined at:
  3325 ;;		line 18 in file "main.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      char 
  3332 ;; Registers used:
  3333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : B1F/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3339 ;;      Params:         0       0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0       0
  3341 ;;      Temps:          0       1       0       0       0       0
  3342 ;;      Totals:         0       1       0       0       0       0
  3343 ;;Total ram usage:        1 bytes
  3344 ;; Hardware stack levels required when called:    7
  3345 ;; This function calls:
  3346 ;;		_Basic_Init
  3347 ;;		_Buzzer_Init
  3348 ;;		_DAC_Initialize
  3349 ;;		_LCD_CursorHome
  3350 ;;		_LCD_Init
  3351 ;;		_Timer1_GetCPM
  3352 ;;		_Timer1_Init
  3353 ;;		_Timer4_Init
  3354 ;;		_Timer6_Init
  3355 ;;		_mTouch_Init
  3356 ;;		_mTouch_Read
  3357 ;;		_printf
  3358 ;; This function is called by:
  3359 ;;		Startup code after reset
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           
  3364                           ;psect for function _main
  3365  03EE                     _main:	
  3366                           
  3367                           ;main.c: 20: Basic_Init();
  3368                           
  3369                           ;incstack = 0
  3370                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3371  03EE  318F  2703  3183   	fcall	_Basic_Init
  3372                           
  3373                           ;main.c: 21: LATA6 = 1;
  3374  03F1  0022               	movlb	2	; select bank2
  3375  03F2  170C               	bsf	12,6	;volatile
  3376                           
  3377                           ;main.c: 22: Buzzer_Init();
  3378  03F3  318F  27AE  3183   	fcall	_Buzzer_Init
  3379                           
  3380                           ;main.c: 23: LCD_Init();
  3381  03F6  3184  246A  3183   	fcall	_LCD_Init
  3382                           
  3383                           ;main.c: 25: Timer1_Init();
  3384  03F9  318F  2730  3183   	fcall	_Timer1_Init
  3385                           
  3386                           ;main.c: 26: TMR1ON = 1;;
  3387  03FC  0020               	movlb	0	; select bank0
  3388  03FD  1418               	bsf	24,0	;volatile
  3389                           
  3390                           ;main.c: 27: mTouch_Init();
  3391  03FE  318E  26DB  3183   	fcall	_mTouch_Init
  3392                           
  3393                           ;main.c: 28: Timer4_Init();
  3394  0401  318E  26C8  3183   	fcall	_Timer4_Init
  3395                           
  3396                           ;main.c: 29: Timer6_Init();
  3397  0404  318E  268A  3183   	fcall	_Timer6_Init
  3398                           
  3399                           ;main.c: 30: DAC_Initialize();
  3400  0407  318F  2769  3183   	fcall	_DAC_Initialize
  3401                           
  3402                           ;main.c: 32: mode.ModeNum = 0;
  3403  040A  0020               	movlb	0	; select bank0
  3404  040B  01EC               	clrf	_mode+1
  3405  040C                     l3899:	
  3406                           ;main.c: 34: while(1)
  3407                           
  3408                           
  3409                           ;main.c: 35: {
  3410                           ;main.c: 36: if(mTouch_Read(2)&&(mode.ModeNum<4-1))
  3411  040C  3002               	movlw	2
  3412  040D  3185  25D4  3183   	fcall	_mTouch_Read
  3413  0410  3A00               	xorlw	0
  3414  0411  1903               	skipnz
  3415  0412  2C1D               	goto	l3905
  3416  0413  3003               	movlw	3
  3417  0414  0020               	movlb	0	; select bank0
  3418  0415  026C               	subwf	_mode+1,w
  3419  0416  1803               	skipnc
  3420  0417  2C1D               	goto	l3905
  3421                           
  3422                           ;main.c: 37: mode.ModeNum++;
  3423  0418  3001               	movlw	1
  3424  0419  00D7               	movwf	??_main
  3425  041A  0857               	movf	??_main,w
  3426  041B  07EC               	addwf	_mode+1,f
  3427  041C  2C2A               	goto	l3911
  3428  041D                     l3905:	
  3429                           
  3430                           ;main.c: 38: else if(mTouch_Read(1)&&(mode.ModeNum>0))
  3431  041D  3001               	movlw	1
  3432  041E  3185  25D4  3183   	fcall	_mTouch_Read
  3433  0421  3A00               	xorlw	0
  3434  0422  1903               	skipnz
  3435  0423  2C2A               	goto	l3911
  3436  0424  0020               	movlb	0	; select bank0
  3437  0425  086C               	movf	_mode+1,w
  3438  0426  1903               	btfsc	3,2
  3439  0427  2C2A               	goto	l3911
  3440                           
  3441                           ;main.c: 39: mode.ModeNum--;
  3442  0428  3001               	movlw	1
  3443  0429  02EC               	subwf	_mode+1,f
  3444  042A                     l3911:	
  3445                           
  3446                           ;main.c: 41: LCD_CursorHome();
  3447  042A  318E  26A8  3183   	fcall	_LCD_CursorHome
  3448                           
  3449                           ;main.c: 42: switch(mode.ModeNum)
  3450  042D  2C5A               	goto	l3923
  3451  042E                     l3913:	
  3452                           ;main.c: 43: {
  3453                           ;main.c: 44: case COUNT:
  3454                           
  3455                           
  3456                           ;main.c: 45: printf("%lu",Timer1_GetCPM());
  3457  042E  30D8               	movlw	low (STR_1| (0+32768))
  3458  042F  0020               	movlb	0	; select bank0
  3459  0430  00C4               	movwf	printf@f
  3460  0431  3081               	movlw	high (STR_1| (0+32768))
  3461  0432  00C5               	movwf	printf@f+1
  3462  0433  3187  278C  3183   	fcall	_Timer1_GetCPM
  3463  0436  0020               	movlb	0	; select bank0
  3464  0437  083B               	movf	?_Timer1_GetCPM+1,w
  3465  0438  00C7               	movwf	?_printf+3
  3466  0439  083A               	movf	?_Timer1_GetCPM,w
  3467  043A  00C6               	movwf	?_printf+2
  3468  043B  3181  21DC  3183   	fcall	_printf
  3469                           
  3470                           ;main.c: 46: break;
  3471  043E  2C0C               	goto	l3899
  3472  043F                     l3915:	
  3473                           ;main.c: 47: case SELECTFUNC:
  3474                           
  3475                           
  3476                           ;main.c: 48: printf("SELECTFUNC");
  3477  043F  30AA               	movlw	low (STR_2| (0+32768))
  3478  0440  0020               	movlb	0	; select bank0
  3479  0441  00C4               	movwf	printf@f
  3480  0442  3080               	movlw	high (STR_2| (0+32768))
  3481  0443  00C5               	movwf	printf@f+1
  3482  0444  3181  21DC  3183   	fcall	_printf
  3483                           
  3484                           ;main.c: 49: break;
  3485  0447  2C0C               	goto	l3899
  3486  0448                     l3917:	
  3487                           ;main.c: 50: case ADJGAIN:
  3488                           
  3489                           
  3490                           ;main.c: 51: printf("ADJGAIN");
  3491  0448  30D7               	movlw	low (STR_3| (0+32768))
  3492  0449  0020               	movlb	0	; select bank0
  3493  044A  00C4               	movwf	printf@f
  3494  044B  3080               	movlw	high (STR_3| (0+32768))
  3495  044C  00C5               	movwf	printf@f+1
  3496  044D  3181  21DC  3183   	fcall	_printf
  3497                           
  3498                           ;main.c: 52: break;
  3499  0450  2C0C               	goto	l3899
  3500  0451                     l3919:	
  3501                           ;main.c: 53: case PMTDEVICE:
  3502                           
  3503                           
  3504                           ;main.c: 54: printf("PMTDEVICE");
  3505  0451  30B5               	movlw	low (STR_4| (0+32768))
  3506  0452  0020               	movlb	0	; select bank0
  3507  0453  00C4               	movwf	printf@f
  3508  0454  3080               	movlw	high (STR_4| (0+32768))
  3509  0455  00C5               	movwf	printf@f+1
  3510  0456  3181  21DC  3183   	fcall	_printf
  3511                           
  3512                           ;main.c: 56: }
  3513                           
  3514                           ;main.c: 55: break;
  3515  0459  2C0C               	goto	l3899
  3516  045A                     l3923:	
  3517  045A  0020               	movlb	0	; select bank0
  3518  045B  086C               	movf	_mode+1,w
  3519                           
  3520                           ; Switch size 1, requested type "space"
  3521                           ; Number of cases is 4, Range of values is 0 to 3
  3522                           ; switch strategies available:
  3523                           ; Name         Instructions Cycles
  3524                           ; simple_byte           13     7 (average)
  3525                           ; direct_byte           14     6 (fixed)
  3526                           ; jumptable            260     6 (fixed)
  3527                           ;	Chosen strategy is simple_byte
  3528  045C  3A00               	xorlw	0	; case 0
  3529  045D  1903               	skipnz
  3530  045E  2C2E               	goto	l3913
  3531  045F  3A01               	xorlw	1	; case 1
  3532  0460  1903               	skipnz
  3533  0461  2C3F               	goto	l3915
  3534  0462  3A03               	xorlw	3	; case 2
  3535  0463  1903               	skipnz
  3536  0464  2C48               	goto	l3917
  3537  0465  3A01               	xorlw	1	; case 3
  3538  0466  1903               	skipnz
  3539  0467  2C51               	goto	l3919
  3540  0468  2C0C               	goto	l3899
  3541  0469  2C0C               	goto	l3899
  3542  046A                     __end_of_main:	
  3543                           
  3544                           	psect	text1
  3545  01DC                     __ptext1:	
  3546 ;; *************** function _printf *****************
  3547 ;; Defined at:
  3548 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  f               2   36[BANK0 ] PTR const unsigned char 
  3551 ;;		 -> STR_4(10), STR_3(8), STR_2(11), STR_1(4), 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  val             4   49[BANK0 ] unsigned long 
  3554 ;;  tmpval          4    0        struct .
  3555 ;;  prec            2   47[BANK0 ] int 
  3556 ;;  cp              2    0        PTR const unsigned char 
  3557 ;;  len             2    0        unsigned int 
  3558 ;;  c               1   54[BANK0 ] char 
  3559 ;;  ap              1   53[BANK0 ] PTR void [1]
  3560 ;;		 -> ?_printf(2), 
  3561 ;;  flag            1   46[BANK0 ] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  2   36[BANK0 ] int 
  3564 ;; Registers used:
  3565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3571 ;;      Params:         0       4       0       0       0       0
  3572 ;;      Locals:         0       9       0       0       0       0
  3573 ;;      Temps:          0       6       0       0       0       0
  3574 ;;      Totals:         0      19       0       0       0       0
  3575 ;;Total ram usage:       19 bytes
  3576 ;; Hardware stack levels used:    1
  3577 ;; Hardware stack levels required when called:    5
  3578 ;; This function calls:
  3579 ;;		___lldiv
  3580 ;;		___llmod
  3581 ;;		_putch
  3582 ;; This function is called by:
  3583 ;;		_main
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           
  3588                           ;psect for function _printf
  3589  01DC                     _printf:	
  3590                           
  3591                           ;doprnt.c: 466: va_list ap;
  3592                           ;doprnt.c: 499: signed char c;
  3593                           ;doprnt.c: 504: int prec;
  3594                           ;doprnt.c: 508: unsigned char flag;
  3595                           ;doprnt.c: 523: union {
  3596                           ;doprnt.c: 524: unsigned long vd;
  3597                           ;doprnt.c: 525: double integ;
  3598                           ;doprnt.c: 526: } tmpval;
  3599                           ;doprnt.c: 528: unsigned long val;
  3600                           ;doprnt.c: 529: unsigned len;
  3601                           ;doprnt.c: 530: const char * cp;
  3602                           ;doprnt.c: 533: *ap = __va_start();
  3603                           
  3604                           ;incstack = 0
  3605                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3606  01DC  3046               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3607  01DD  0020               	movlb	0	; select bank0
  3608  01DE  00C8               	movwf	??_printf
  3609  01DF  0848               	movf	??_printf,w
  3610  01E0  00D5               	movwf	printf@ap
  3611  01E1                     l3845:	
  3612                           ;doprnt.c: 536: while(c = *f++) {
  3613                           
  3614  01E1  0020               	movlb	0	; select bank0
  3615  01E2  0845               	movf	printf@f+1,w
  3616  01E3  00C9               	movwf	??_printf+1
  3617  01E4  0844               	movf	printf@f,w
  3618  01E5  00C8               	movwf	??_printf
  3619  01E6  0AC4               	incf	printf@f,f
  3620  01E7  1903               	skipnz
  3621  01E8  0AC5               	incf	printf@f+1,f
  3622  01E9  0848               	movf	??_printf,w
  3623  01EA  0084               	movwf	4
  3624  01EB  0849               	movf	??_printf+1,w
  3625  01EC  0085               	movwf	5
  3626  01ED  0800               	movf	0,w	;code access
  3627  01EE  00CA               	movwf	??_printf+2
  3628  01EF  084A               	movf	??_printf+2,w
  3629  01F0  00D6               	movwf	printf@c
  3630  01F1  0856               	movf	printf@c,w
  3631  01F2  1903               	btfsc	3,2
  3632  01F3  0008               	return
  3633                           
  3634                           ;doprnt.c: 538: if(c != '%')
  3635  01F4  3025               	movlw	37
  3636  01F5  0656               	xorwf	printf@c,w
  3637  01F6  1903               	btfsc	3,2
  3638  01F7  29FD               	goto	l3809
  3639                           
  3640                           ;doprnt.c: 540: {
  3641                           ;doprnt.c: 541: (putch(c) );
  3642  01F8  0856               	movf	printf@c,w
  3643  01F9  318E  2630  3181   	fcall	_putch
  3644                           
  3645                           ;doprnt.c: 542: continue;
  3646  01FC  29E1               	goto	l3845
  3647  01FD                     l3809:	
  3648                           
  3649                           ;doprnt.c: 543: }
  3650                           ;doprnt.c: 548: flag = 0;
  3651  01FD  0020               	movlb	0	; select bank0
  3652  01FE  01CE               	clrf	printf@flag
  3653                           
  3654                           ;doprnt.c: 635: switch(c = *f++) {
  3655                           
  3656                           ;doprnt.c: 633: loop:
  3657  01FF  2A07               	goto	l3815
  3658  0200                     l680:	
  3659                           ;doprnt.c: 641: case 'l':
  3660                           
  3661                           ;doprnt.c: 638: goto alldone;
  3662                           
  3663                           ;doprnt.c: 637: case 0:
  3664                           
  3665                           
  3666                           ;doprnt.c: 643: flag |= 0x10;
  3667  0200  164E               	bsf	printf@flag,4
  3668                           
  3669                           ;doprnt.c: 644: goto loop;
  3670  0201  2A07               	goto	l3815
  3671  0202                     l3811:	
  3672                           ;doprnt.c: 817: case 'u':
  3673                           
  3674                           ;doprnt.c: 813: continue;
  3675                           
  3676                           ;doprnt.c: 802: default:
  3677                           
  3678                           
  3679                           ;doprnt.c: 818: flag |= 0xC0;
  3680  0202  30C0               	movlw	192
  3681  0203  00C8               	movwf	??_printf
  3682  0204  0848               	movf	??_printf,w
  3683  0205  04CE               	iorwf	printf@flag,f
  3684                           
  3685                           ;doprnt.c: 822: }
  3686                           
  3687                           ;doprnt.c: 819: break;
  3688  0206  2A1E               	goto	l683
  3689  0207                     l3815:	
  3690  0207  0845               	movf	printf@f+1,w
  3691  0208  00C9               	movwf	??_printf+1
  3692  0209  0844               	movf	printf@f,w
  3693  020A  00C8               	movwf	??_printf
  3694  020B  0AC4               	incf	printf@f,f
  3695  020C  1903               	skipnz
  3696  020D  0AC5               	incf	printf@f+1,f
  3697  020E  0848               	movf	??_printf,w
  3698  020F  0084               	movwf	4
  3699  0210  0849               	movf	??_printf+1,w
  3700  0211  0085               	movwf	5
  3701  0212  0800               	movf	0,w	;code access
  3702  0213  00D6               	movwf	printf@c
  3703                           
  3704                           ; Switch size 1, requested type "space"
  3705                           ; Number of cases is 3, Range of values is 0 to 117
  3706                           ; switch strategies available:
  3707                           ; Name         Instructions Cycles
  3708                           ; simple_byte           10     6 (average)
  3709                           ; direct_byte          242     6 (fixed)
  3710                           ; jumptable            260     6 (fixed)
  3711                           ;	Chosen strategy is simple_byte
  3712  0214  3A00               	xorlw	0	; case 0
  3713  0215  1903               	skipnz
  3714  0216  2ABE               	goto	l693
  3715  0217  3A6C               	xorlw	108	; case 108
  3716  0218  1903               	skipnz
  3717  0219  2A00               	goto	l680
  3718  021A  3A19               	xorlw	25	; case 117
  3719  021B  1903               	skipnz
  3720  021C  2A02               	goto	l3811
  3721  021D  29E1               	goto	l3845
  3722  021E                     l683:	
  3723                           
  3724                           ;doprnt.c: 1273: {
  3725                           ;doprnt.c: 1281: if(flag & 0x10)
  3726  021E  1E4E               	btfss	printf@flag,4
  3727  021F  2A2D               	goto	l3821
  3728                           
  3729                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3730  0220  0855               	movf	printf@ap,w
  3731  0221  0086               	movwf	6
  3732  0222  0187               	clrf	7
  3733  0223  3F40               	moviw [0]fsr1
  3734  0224  00D1               	movwf	printf@val
  3735  0225  3F41               	moviw [1]fsr1
  3736  0226  00D2               	movwf	printf@val+1
  3737  0227  3F42               	moviw [2]fsr1
  3738  0228  00D3               	movwf	printf@val+2
  3739  0229  3F43               	moviw [3]fsr1
  3740  022A  00D4               	movwf	printf@val+3
  3741  022B  3004               	movlw	4
  3742  022C  2A3B               	goto	L1
  3743  022D                     l3821:	
  3744                           
  3745                           ;doprnt.c: 1283: else
  3746                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3747  022D  0855               	movf	printf@ap,w
  3748  022E  0086               	movwf	6
  3749  022F  0187               	clrf	7
  3750  0230  3F40               	moviw [0]fsr1
  3751  0231  00C8               	movwf	??_printf
  3752  0232  3F41               	moviw [1]fsr1
  3753  0233  00C9               	movwf	??_printf+1
  3754  0234  0848               	movf	??_printf,w
  3755  0235  00D1               	movwf	printf@val
  3756  0236  0849               	movf	??_printf+1,w
  3757  0237  00D2               	movwf	printf@val+1
  3758  0238  01D3               	clrf	printf@val+2
  3759  0239  01D4               	clrf	printf@val+3
  3760  023A  3002               	movlw	2
  3761  023B                     L1:	
  3762  023B  00C8               	movwf	??_printf
  3763  023C  0848               	movf	??_printf,w
  3764  023D  07D5               	addwf	printf@ap,f
  3765                           
  3766                           ;doprnt.c: 1287: }
  3767                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3768  023E  01D6               	clrf	printf@c
  3769  023F  0AD6               	incf	printf@c,f
  3770  0240  300A               	movlw	10
  3771  0241  0656               	xorwf	printf@c,w
  3772  0242  1903               	btfsc	3,2
  3773  0243  2A71               	goto	l3837
  3774  0244                     l3831:	
  3775                           
  3776                           ;doprnt.c: 1306: if(val < dpowers[c])
  3777  0244  0856               	movf	printf@c,w
  3778  0245  00C8               	movwf	??_printf
  3779  0246  01C9               	clrf	??_printf+1
  3780  0247  35C8               	lslf	??_printf,f
  3781  0248  0DC9               	rlf	??_printf+1,f
  3782  0249  35C8               	lslf	??_printf,f
  3783  024A  0DC9               	rlf	??_printf+1,f
  3784  024B  3064               	movlw	low (_dpowers| (0+32768))
  3785  024C  0748               	addwf	??_printf,w
  3786  024D  0084               	movwf	4
  3787  024E  3080               	movlw	high (_dpowers| (0+32768))
  3788  024F  3D49               	addwfc	??_printf+1,w
  3789  0250  0085               	movwf	5
  3790  0251  3F00               	moviw [0]fsr0
  3791  0252  00CA               	movwf	??_printf+2
  3792  0253  3F01               	moviw [1]fsr0
  3793  0254  00CB               	movwf	??_printf+3
  3794  0255  3F02               	moviw [2]fsr0
  3795  0256  00CC               	movwf	??_printf+4
  3796  0257  3F03               	moviw [3]fsr0
  3797  0258  00CD               	movwf	??_printf+5
  3798  0259  084D               	movf	??_printf+5,w
  3799  025A  0254               	subwf	printf@val+3,w
  3800  025B  1D03               	skipz
  3801  025C  2A67               	goto	u3745
  3802  025D  084C               	movf	??_printf+4,w
  3803  025E  0253               	subwf	printf@val+2,w
  3804  025F  1D03               	skipz
  3805  0260  2A67               	goto	u3745
  3806  0261  084B               	movf	??_printf+3,w
  3807  0262  0252               	subwf	printf@val+1,w
  3808  0263  1D03               	skipz
  3809  0264  2A67               	goto	u3745
  3810  0265  084A               	movf	??_printf+2,w
  3811  0266  0251               	subwf	printf@val,w
  3812  0267                     u3745:	
  3813  0267  1C03               	btfss	3,0
  3814  0268  2A71               	goto	l3837
  3815                           
  3816                           ;doprnt.c: 1307: break;
  3817  0269  3001               	movlw	1
  3818  026A  00C8               	movwf	??_printf
  3819  026B  0848               	movf	??_printf,w
  3820  026C  07D6               	addwf	printf@c,f
  3821  026D  300A               	movlw	10
  3822  026E  0656               	xorwf	printf@c,w
  3823  026F  1D03               	btfss	3,2
  3824  0270  2A44               	goto	l3831
  3825  0271                     l3837:	
  3826                           
  3827                           ;doprnt.c: 1422: {
  3828                           ;doprnt.c: 1469: }
  3829                           ;doprnt.c: 1472: prec = c;
  3830  0271  0856               	movf	printf@c,w
  3831  0272  00CF               	movwf	printf@prec
  3832  0273  01D0               	clrf	printf@prec+1
  3833  0274  1BCF               	btfsc	printf@prec,7
  3834  0275  03D0               	decf	printf@prec+1,f
  3835  0276                     l3843:	
  3836                           ;doprnt.c: 1474: while(prec--) {
  3837                           
  3838  0276  30FF               	movlw	255
  3839  0277  0020               	movlb	0	; select bank0
  3840  0278  07CF               	addwf	printf@prec,f
  3841  0279  30FF               	movlw	255
  3842  027A  3DD0               	addwfc	printf@prec+1,f
  3843  027B  0A4F               	incf	printf@prec,w
  3844  027C  1903               	btfsc	3,2
  3845  027D  0A50               	incf	printf@prec+1,w
  3846  027E  1903               	btfsc	3,2
  3847  027F  29E1               	goto	l3845
  3848                           
  3849                           ;doprnt.c: 1478: {
  3850                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3851  0280  3000               	movlw	0
  3852  0281  00BD               	movwf	___llmod@divisor+3
  3853  0282  3000               	movlw	0
  3854  0283  00BC               	movwf	___llmod@divisor+2
  3855  0284  3000               	movlw	0
  3856  0285  00BB               	movwf	___llmod@divisor+1
  3857  0286  300A               	movlw	10
  3858  0287  00BA               	movwf	___llmod@divisor
  3859  0288  0850               	movf	printf@prec+1,w
  3860  0289  0085               	movwf	5
  3861  028A  084F               	movf	printf@prec,w
  3862  028B  0084               	movwf	4
  3863  028C  3584               	lslf	4,f
  3864  028D  0D85               	rlf	5,f
  3865  028E  3584               	lslf	4,f
  3866  028F  0D85               	rlf	5,f
  3867  0290  3064               	movlw	low (_dpowers| (0+32768))
  3868  0291  0784               	addwf	4,f
  3869  0292  3080               	movlw	high (_dpowers| (0+32768))
  3870  0293  3D85               	addwfc	5,f
  3871  0294  3F00               	moviw [0]fsr0
  3872  0295  00AC               	movwf	___lldiv@divisor
  3873  0296  3F01               	moviw [1]fsr0
  3874  0297  00AD               	movwf	___lldiv@divisor+1
  3875  0298  3F02               	moviw [2]fsr0
  3876  0299  00AE               	movwf	___lldiv@divisor+2
  3877  029A  3F03               	moviw [3]fsr0
  3878  029B  00AF               	movwf	___lldiv@divisor+3
  3879  029C  0854               	movf	printf@val+3,w
  3880  029D  00B3               	movwf	___lldiv@dividend+3
  3881  029E  0853               	movf	printf@val+2,w
  3882  029F  00B2               	movwf	___lldiv@dividend+2
  3883  02A0  0852               	movf	printf@val+1,w
  3884  02A1  00B1               	movwf	___lldiv@dividend+1
  3885  02A2  0851               	movf	printf@val,w
  3886  02A3  00B0               	movwf	___lldiv@dividend
  3887  02A4  3185  2581  3181   	fcall	___lldiv
  3888  02A7  0020               	movlb	0	; select bank0
  3889  02A8  082F               	movf	?___lldiv+3,w
  3890  02A9  00C1               	movwf	___llmod@dividend+3
  3891  02AA  082E               	movf	?___lldiv+2,w
  3892  02AB  00C0               	movwf	___llmod@dividend+2
  3893  02AC  082D               	movf	?___lldiv+1,w
  3894  02AD  00BF               	movwf	___llmod@dividend+1
  3895  02AE  082C               	movf	?___lldiv,w
  3896  02AF  00BE               	movwf	___llmod@dividend
  3897  02B0  3186  26A0  3181   	fcall	___llmod
  3898  02B3  0020               	movlb	0	; select bank0
  3899  02B4  083A               	movf	?___llmod,w
  3900  02B5  3E30               	addlw	48
  3901  02B6  00C8               	movwf	??_printf
  3902  02B7  0848               	movf	??_printf,w
  3903  02B8  00D6               	movwf	printf@c
  3904                           
  3905                           ;doprnt.c: 1523: }
  3906                           ;doprnt.c: 1524: (putch(c) );
  3907  02B9  0856               	movf	printf@c,w
  3908  02BA  318E  2630  3181   	fcall	_putch
  3909  02BD  2A76               	goto	l3843
  3910  02BE                     l693:	
  3911                           ;doprnt.c: 1540: return 0;
  3912                           ;	Return value of _printf is never used
  3913                           
  3914                           ;doprnt.c: 1525: }
  3915                           ;doprnt.c: 1533: }
  3916                           ;doprnt.c: 1535: alldone:
  3917                           
  3918  02BE  0008               	return
  3919  02BF                     __end_of_printf:	
  3920                           
  3921                           	psect	text2
  3922  0E30                     __ptext2:	
  3923 ;; *************** function _putch *****************
  3924 ;; Defined at:
  3925 ;;		line 64 in file "LCD.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  c               1    wreg     unsigned char 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  c               1    3[BANK0 ] unsigned char 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, status,2, status,0, pclath, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3939 ;;      Params:         0       0       0       0       0       0
  3940 ;;      Locals:         0       1       0       0       0       0
  3941 ;;      Temps:          0       0       0       0       0       0
  3942 ;;      Totals:         0       1       0       0       0       0
  3943 ;;Total ram usage:        1 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    4
  3946 ;; This function calls:
  3947 ;;		_LCD_WriteData
  3948 ;; This function is called by:
  3949 ;;		_printf
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           
  3954                           ;psect for function _putch
  3955  0E30                     _putch:	
  3956                           
  3957                           ;incstack = 0
  3958                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3959                           ;putch@c stored from wreg
  3960  0E30  0020               	movlb	0	; select bank0
  3961  0E31  00A3               	movwf	putch@c
  3962                           
  3963                           ;LCD.c: 66: LATA3 = 1;
  3964  0E32  0022               	movlb	2	; select bank2
  3965  0E33  158C               	bsf	12,3	;volatile
  3966                           
  3967                           ;LCD.c: 67: LCD_WriteData(c);
  3968  0E34  0020               	movlb	0	; select bank0
  3969  0E35  0823               	movf	putch@c,w
  3970  0E36  3186  26E3         	fcall	_LCD_WriteData
  3971  0E38  0008               	return
  3972  0E39                     __end_of_putch:	
  3973                           
  3974                           	psect	text3
  3975  06A0                     __ptext3:	
  3976 ;; *************** function ___llmod *****************
  3977 ;; Defined at:
  3978 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  divisor         4   26[BANK0 ] unsigned long 
  3981 ;;  dividend        4   30[BANK0 ] unsigned long 
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  counter         1   35[BANK0 ] unsigned char 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  4   26[BANK0 ] unsigned long 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3993 ;;      Params:         0       8       0       0       0       0
  3994 ;;      Locals:         0       1       0       0       0       0
  3995 ;;      Temps:          0       1       0       0       0       0
  3996 ;;      Totals:         0      10       0       0       0       0
  3997 ;;Total ram usage:       10 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    3
  4000 ;; This function calls:
  4001 ;;		Nothing
  4002 ;; This function is called by:
  4003 ;;		_printf
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           
  4008                           ;psect for function ___llmod
  4009  06A0                     ___llmod:	
  4010                           
  4011                           ;incstack = 0
  4012                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4013  06A0  0020               	movlb	0	; select bank0
  4014  06A1  083D               	movf	___llmod@divisor+3,w
  4015  06A2  043C               	iorwf	___llmod@divisor+2,w
  4016  06A3  043B               	iorwf	___llmod@divisor+1,w
  4017  06A4  043A               	iorwf	___llmod@divisor,w
  4018  06A5  1903               	skipnz
  4019  06A6  2EDA               	goto	l3607
  4020  06A7  01C3               	clrf	___llmod@counter
  4021  06A8  0AC3               	incf	___llmod@counter,f
  4022  06A9                     l3597:	
  4023  06A9  1BBD               	btfsc	___llmod@divisor+3,7
  4024  06AA  2EB7               	goto	l3599
  4025  06AB  3001               	movlw	1
  4026  06AC                     u3635:	
  4027  06AC  35BA               	lslf	___llmod@divisor,f
  4028  06AD  0DBB               	rlf	___llmod@divisor+1,f
  4029  06AE  0DBC               	rlf	___llmod@divisor+2,f
  4030  06AF  0DBD               	rlf	___llmod@divisor+3,f
  4031  06B0  0B89               	decfsz	9,f
  4032  06B1  2EAC               	goto	u3635
  4033  06B2  3001               	movlw	1
  4034  06B3  00C2               	movwf	??___llmod
  4035  06B4  0842               	movf	??___llmod,w
  4036  06B5  07C3               	addwf	___llmod@counter,f
  4037  06B6  2EA9               	goto	l3597
  4038  06B7                     l3599:	
  4039  06B7  083D               	movf	___llmod@divisor+3,w
  4040  06B8  0241               	subwf	___llmod@dividend+3,w
  4041  06B9  1D03               	skipz
  4042  06BA  2EC5               	goto	u3655
  4043  06BB  083C               	movf	___llmod@divisor+2,w
  4044  06BC  0240               	subwf	___llmod@dividend+2,w
  4045  06BD  1D03               	skipz
  4046  06BE  2EC5               	goto	u3655
  4047  06BF  083B               	movf	___llmod@divisor+1,w
  4048  06C0  023F               	subwf	___llmod@dividend+1,w
  4049  06C1  1D03               	skipz
  4050  06C2  2EC5               	goto	u3655
  4051  06C3  083A               	movf	___llmod@divisor,w
  4052  06C4  023E               	subwf	___llmod@dividend,w
  4053  06C5                     u3655:	
  4054  06C5  1C03               	skipc
  4055  06C6  2ECF               	goto	l3603
  4056  06C7  083A               	movf	___llmod@divisor,w
  4057  06C8  02BE               	subwf	___llmod@dividend,f
  4058  06C9  083B               	movf	___llmod@divisor+1,w
  4059  06CA  3BBF               	subwfb	___llmod@dividend+1,f
  4060  06CB  083C               	movf	___llmod@divisor+2,w
  4061  06CC  3BC0               	subwfb	___llmod@dividend+2,f
  4062  06CD  083D               	movf	___llmod@divisor+3,w
  4063  06CE  3BC1               	subwfb	___llmod@dividend+3,f
  4064  06CF                     l3603:	
  4065  06CF  3001               	movlw	1
  4066  06D0                     u3665:	
  4067  06D0  36BD               	lsrf	___llmod@divisor+3,f
  4068  06D1  0CBC               	rrf	___llmod@divisor+2,f
  4069  06D2  0CBB               	rrf	___llmod@divisor+1,f
  4070  06D3  0CBA               	rrf	___llmod@divisor,f
  4071  06D4  0B89               	decfsz	9,f
  4072  06D5  2ED0               	goto	u3665
  4073  06D6  3001               	movlw	1
  4074  06D7  02C3               	subwf	___llmod@counter,f
  4075  06D8  1D03               	btfss	3,2
  4076  06D9  2EB7               	goto	l3599
  4077  06DA                     l3607:	
  4078  06DA  0841               	movf	___llmod@dividend+3,w
  4079  06DB  00BD               	movwf	?___llmod+3
  4080  06DC  0840               	movf	___llmod@dividend+2,w
  4081  06DD  00BC               	movwf	?___llmod+2
  4082  06DE  083F               	movf	___llmod@dividend+1,w
  4083  06DF  00BB               	movwf	?___llmod+1
  4084  06E0  083E               	movf	___llmod@dividend,w
  4085  06E1  00BA               	movwf	?___llmod
  4086  06E2  0008               	return
  4087  06E3                     __end_of___llmod:	
  4088                           
  4089                           	psect	text4
  4090  05D4                     __ptext4:	
  4091 ;; *************** function _mTouch_Read *****************
  4092 ;; Defined at:
  4093 ;;		line 110 in file "main.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  chan            1    wreg     unsigned char 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  chan            1    7[BANK0 ] unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      unsigned char 
  4100 ;; Registers used:
  4101 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4107 ;;      Params:         0       0       0       0       0       0
  4108 ;;      Locals:         0       1       0       0       0       0
  4109 ;;      Temps:          0       5       0       0       0       0
  4110 ;;      Totals:         0       6       0       0       0       0
  4111 ;;Total ram usage:        6 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:    4
  4114 ;; This function calls:
  4115 ;;		_Buzzer_MiliSecond
  4116 ;; This function is called by:
  4117 ;;		_main
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           
  4122                           ;psect for function _mTouch_Read
  4123  05D4                     _mTouch_Read:	
  4124                           
  4125                           ;incstack = 0
  4126                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4127                           ;mTouch_Read@chan stored from wreg
  4128  05D4  0020               	movlb	0	; select bank0
  4129  05D5  00A7               	movwf	mTouch_Read@chan
  4130                           
  4131                           ;main.c: 112: if(chan>2)return 0;
  4132  05D6  3003               	movlw	3
  4133  05D7  0227               	subwf	mTouch_Read@chan,w
  4134  05D8  1C03               	skipc
  4135  05D9  2DDC               	goto	l3787
  4136  05DA  3000               	movlw	0
  4137  05DB  0008               	return
  4138  05DC                     l3787:	
  4139                           
  4140                           ;main.c: 114: if(((CPS_PreData[chan]-CPS_Data[chan])>100)&&!mTouch_Interval[chan])
  4141  05DC  0827               	movf	mTouch_Read@chan,w
  4142  05DD  3E60               	addlw	(low (_CPS_Data| 0))& (0+255)
  4143  05DE  0086               	movwf	6
  4144  05DF  0187               	clrf	7
  4145  05E0  0801               	movf	1,w
  4146  05E1  00A2               	movwf	??_mTouch_Read
  4147  05E2  01A3               	clrf	??_mTouch_Read+1
  4148  05E3  09A2               	comf	??_mTouch_Read,f
  4149  05E4  09A3               	comf	??_mTouch_Read+1,f
  4150  05E5  0AA2               	incf	??_mTouch_Read,f
  4151  05E6  1903               	skipnz
  4152  05E7  0AA3               	incf	??_mTouch_Read+1,f
  4153  05E8  0827               	movf	mTouch_Read@chan,w
  4154  05E9  3E63               	addlw	(low (_CPS_PreData| 0))& (0+255)
  4155  05EA  0086               	movwf	6
  4156  05EB  0187               	clrf	7
  4157  05EC  0801               	movf	1,w
  4158  05ED  0722               	addwf	??_mTouch_Read,w
  4159  05EE  00A4               	movwf	??_mTouch_Read+2
  4160  05EF  0823               	movf	??_mTouch_Read+1,w
  4161  05F0  1803               	skipnc
  4162  05F1  0A23               	incf	??_mTouch_Read+1,w
  4163  05F2  00A5               	movwf	??_mTouch_Read+3
  4164  05F3  0825               	movf	??_mTouch_Read+3,w
  4165  05F4  3A80               	xorlw	128
  4166  05F5  00A6               	movwf	??_mTouch_Read+4
  4167  05F6  3080               	movlw	128
  4168  05F7  0226               	subwf	??_mTouch_Read+4,w
  4169  05F8  1D03               	skipz
  4170  05F9  2DFC               	goto	u3695
  4171  05FA  3065               	movlw	101
  4172  05FB  0224               	subwf	??_mTouch_Read+2,w
  4173  05FC                     u3695:	
  4174  05FC  1C03               	skipc
  4175  05FD  2E16               	goto	l3799
  4176  05FE  0020               	movlb	0	; select bank0
  4177  05FF  0827               	movf	mTouch_Read@chan,w
  4178  0600  3E70               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4179  0601  0086               	movwf	6
  4180  0602  0187               	clrf	7
  4181  0603  0801               	movf	1,w
  4182  0604  1D03               	btfss	3,2
  4183  0605  2E16               	goto	l3799
  4184                           
  4185                           ;main.c: 115: {
  4186                           ;main.c: 116: mTouch_Interval[chan] = 100;
  4187  0606  3064               	movlw	100
  4188  0607  00A2               	movwf	??_mTouch_Read
  4189  0608  0827               	movf	mTouch_Read@chan,w
  4190  0609  3E70               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4191  060A  0086               	movwf	6
  4192  060B  0187               	clrf	7
  4193  060C  0822               	movf	??_mTouch_Read,w
  4194  060D  0081               	movwf	1
  4195                           
  4196                           ;main.c: 117: Buzzer_MiliSecond(100);
  4197  060E  3064               	movlw	100
  4198  060F  00A0               	movwf	Buzzer_MiliSecond@time
  4199  0610  3000               	movlw	0
  4200  0611  00A1               	movwf	Buzzer_MiliSecond@time+1
  4201  0612  318E  2643         	fcall	_Buzzer_MiliSecond
  4202                           
  4203                           ;main.c: 118: return 1;
  4204  0614  3001               	movlw	1
  4205  0615  0008               	return
  4206  0616                     l3799:	
  4207                           
  4208                           ;main.c: 119: }
  4209                           ;main.c: 120: return 0;
  4210  0616  3000               	movlw	0
  4211  0617  0008               	return
  4212  0618                     __end_of_mTouch_Read:	
  4213                           
  4214                           	psect	text5
  4215  0E43                     __ptext5:	
  4216 ;; *************** function _Buzzer_MiliSecond *****************
  4217 ;; Defined at:
  4218 ;;		line 38 in file "Buzzer.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  time            2    0[BANK0 ] unsigned int 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      void 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4232 ;;      Params:         0       2       0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0
  4235 ;;      Totals:         0       2       0       0       0       0
  4236 ;;Total ram usage:        2 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    3
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_mTouch_Read
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           
  4247                           ;psect for function _Buzzer_MiliSecond
  4248  0E43                     _Buzzer_MiliSecond:	
  4249                           
  4250                           ;Buzzer.c: 40: if(count==0)
  4251                           
  4252                           ;incstack = 0
  4253                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  4254  0E43  0873               	movf	_count,w
  4255  0E44  0474               	iorwf	_count+1,w
  4256  0E45  1D03               	btfss	3,2
  4257  0E46  0008               	return
  4258                           
  4259                           ;Buzzer.c: 41: count = time;
  4260  0E47  0020               	movlb	0	; select bank0
  4261  0E48  0821               	movf	Buzzer_MiliSecond@time+1,w
  4262  0E49  00F4               	movwf	_count+1
  4263  0E4A  0820               	movf	Buzzer_MiliSecond@time,w
  4264  0E4B  00F3               	movwf	_count
  4265  0E4C  0008               	return
  4266  0E4D                     __end_of_Buzzer_MiliSecond:	
  4267                           
  4268                           	psect	text6
  4269  0EDB                     __ptext6:	
  4270 ;; *************** function _mTouch_Init *****************
  4271 ;; Defined at:
  4272 ;;		line 12 in file "mTouch.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0, pclath, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4286 ;;      Params:         0       0       0       0       0       0
  4287 ;;      Locals:         0       0       0       0       0       0
  4288 ;;      Temps:          0       1       0       0       0       0
  4289 ;;      Totals:         0       1       0       0       0       0
  4290 ;;Total ram usage:        1 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:    4
  4293 ;; This function calls:
  4294 ;;		_mTouch_PortInit
  4295 ;; This function is called by:
  4296 ;;		_main
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           
  4301                           ;psect for function _mTouch_Init
  4302  0EDB                     _mTouch_Init:	
  4303                           
  4304                           ;mTouch.c: 14: mTouch_PortInit();
  4305                           
  4306                           ;incstack = 0
  4307                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4308  0EDB  318E  267D         	fcall	_mTouch_PortInit
  4309                           
  4310                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4311  0EDD  0021               	movlb	1	; select bank1
  4312  0EDE  0815               	movf	21,w	;volatile
  4313                           
  4314                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4315  0EDF  1595               	bsf	21,3	;volatile
  4316                           
  4317                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4318  0EE0  1695               	bsf	21,5	;volatile
  4319                           
  4320                           ;mTouch.c: 20: TMR0 = 0x00;
  4321  0EE1  0020               	movlb	0	; select bank0
  4322  0EE2  0195               	clrf	21	;volatile
  4323                           
  4324                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4325  0EE3  141E               	bsf	30,0	;volatile
  4326                           
  4327                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4328  0EE4  300C               	movlw	12
  4329  0EE5  00A1               	movwf	??_mTouch_Init
  4330  0EE6  0821               	movf	??_mTouch_Init,w
  4331  0EE7  049E               	iorwf	30,f	;volatile
  4332                           
  4333                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4334  0EE8  307F               	movlw	127
  4335  0EE9  00A1               	movwf	??_mTouch_Init
  4336  0EEA  0821               	movf	??_mTouch_Init,w
  4337  0EEB  059E               	andwf	30,f	;volatile
  4338                           
  4339                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4340  0EEC  019F               	clrf	31	;volatile
  4341  0EED  0008               	return
  4342  0EEE                     __end_of_mTouch_Init:	
  4343                           
  4344                           	psect	text7
  4345  0E7D                     __ptext7:	
  4346 ;; *************** function _mTouch_PortInit *****************
  4347 ;; Defined at:
  4348 ;;		line 6 in file "mTouch.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;		None
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;		None
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      void 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4362 ;;      Params:         0       0       0       0       0       0
  4363 ;;      Locals:         0       0       0       0       0       0
  4364 ;;      Temps:          0       1       0       0       0       0
  4365 ;;      Totals:         0       1       0       0       0       0
  4366 ;;Total ram usage:        1 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:    3
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_mTouch_Init
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           
  4377                           ;psect for function _mTouch_PortInit
  4378  0E7D                     _mTouch_PortInit:	
  4379                           
  4380                           ;mTouch.c: 8: TRISA |= (0x07);
  4381                           
  4382                           ;incstack = 0
  4383                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4384  0E7D  3007               	movlw	7
  4385  0E7E  0020               	movlb	0	; select bank0
  4386  0E7F  00A0               	movwf	??_mTouch_PortInit
  4387  0E80  0820               	movf	??_mTouch_PortInit,w
  4388  0E81  0021               	movlb	1	; select bank1
  4389  0E82  048C               	iorwf	12,f	;volatile
  4390                           
  4391                           ;mTouch.c: 9: ANSELA |= (0x07);
  4392  0E83  3007               	movlw	7
  4393  0E84  0020               	movlb	0	; select bank0
  4394  0E85  00A0               	movwf	??_mTouch_PortInit
  4395  0E86  0820               	movf	??_mTouch_PortInit,w
  4396  0E87  0023               	movlb	3	; select bank3
  4397  0E88  048C               	iorwf	12,f	;volatile
  4398  0E89  0008               	return
  4399  0E8A                     __end_of_mTouch_PortInit:	
  4400                           
  4401                           	psect	text8
  4402  0E8A                     __ptext8:	
  4403 ;; *************** function _Timer6_Init *****************
  4404 ;; Defined at:
  4405 ;;		line 3 in file "Timer6.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;		None
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4419 ;;      Params:         0       0       0       0       0       0
  4420 ;;      Locals:         0       0       0       0       0       0
  4421 ;;      Temps:          0       0       0       0       0       0
  4422 ;;      Totals:         0       0       0       0       0       0
  4423 ;;Total ram usage:        0 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    3
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_main
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           
  4434                           ;psect for function _Timer6_Init
  4435  0E8A                     _Timer6_Init:	
  4436                           
  4437                           ;Timer6.c: 5: PR6 = 50;
  4438                           
  4439                           ;incstack = 0
  4440                           ; Regs used in _Timer6_Init: [wreg+status,2]
  4441  0E8A  3032               	movlw	50
  4442  0E8B  0028               	movlb	8	; select bank8
  4443  0E8C  009D               	movwf	29	;volatile
  4444                           
  4445                           ;Timer6.c: 6: TMR6 = 0x00;
  4446  0E8D  019C               	clrf	28	;volatile
  4447                           
  4448                           ;Timer6.c: 7: T6CON |= (0x02<<0);
  4449  0E8E  149E               	bsf	30,1	;volatile
  4450                           
  4451                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  4452  0E8F  081E               	movf	30,w	;volatile
  4453                           
  4454                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  4455  0E90  151E               	bsf	30,2	;volatile
  4456                           
  4457                           ;Timer6.c: 11: TMR6IF = 0;
  4458  0E91  0020               	movlb	0	; select bank0
  4459  0E92  1193               	bcf	19,3	;volatile
  4460                           
  4461                           ;Timer6.c: 12: TMR6IE = 1;
  4462  0E93  0021               	movlb	1	; select bank1
  4463  0E94  1593               	bsf	19,3	;volatile
  4464                           
  4465                           ;Timer6.c: 13: PEIE = 1;
  4466  0E95  170B               	bsf	11,6	;volatile
  4467                           
  4468                           ;Timer6.c: 14: GIE = 1;
  4469  0E96  178B               	bsf	11,7	;volatile
  4470  0E97  0008               	return
  4471  0E98                     __end_of_Timer6_Init:	
  4472                           
  4473                           	psect	text9
  4474  0EC8                     __ptext9:	
  4475 ;; *************** function _Timer4_Init *****************
  4476 ;; Defined at:
  4477 ;;		line 3 in file "Timer4.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4491 ;;      Params:         0       0       0       0       0       0
  4492 ;;      Locals:         0       0       0       0       0       0
  4493 ;;      Temps:          0       1       0       0       0       0
  4494 ;;      Totals:         0       1       0       0       0       0
  4495 ;;Total ram usage:        1 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    3
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_main
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           
  4506                           ;psect for function _Timer4_Init
  4507  0EC8                     _Timer4_Init:	
  4508                           
  4509                           ;Timer4.c: 5: PR4 = 0x7D;
  4510                           
  4511                           ;incstack = 0
  4512                           ; Regs used in _Timer4_Init: [wreg+status,2+status,0]
  4513  0EC8  307D               	movlw	125
  4514  0EC9  0028               	movlb	8	; select bank8
  4515  0ECA  0096               	movwf	22	;volatile
  4516                           
  4517                           ;Timer4.c: 6: TMR4 = 0x00;
  4518  0ECB  0195               	clrf	21	;volatile
  4519                           
  4520                           ;Timer4.c: 7: T4CON |= (0x03<<0);
  4521  0ECC  3003               	movlw	3
  4522  0ECD  0020               	movlb	0	; select bank0
  4523  0ECE  00A0               	movwf	??_Timer4_Init
  4524  0ECF  0820               	movf	??_Timer4_Init,w
  4525  0ED0  0028               	movlb	8	; select bank8
  4526  0ED1  0497               	iorwf	23,f	;volatile
  4527                           
  4528                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  4529  0ED2  0817               	movf	23,w	;volatile
  4530                           
  4531                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  4532  0ED3  1517               	bsf	23,2	;volatile
  4533                           
  4534                           ;Timer4.c: 11: TMR4IF = 0;
  4535  0ED4  0020               	movlb	0	; select bank0
  4536  0ED5  1093               	bcf	19,1	;volatile
  4537                           
  4538                           ;Timer4.c: 12: TMR4IE = 1;
  4539  0ED6  0021               	movlb	1	; select bank1
  4540  0ED7  1493               	bsf	19,1	;volatile
  4541                           
  4542                           ;Timer4.c: 13: PEIE = 1;
  4543  0ED8  170B               	bsf	11,6	;volatile
  4544                           
  4545                           ;Timer4.c: 14: GIE = 1;
  4546  0ED9  178B               	bsf	11,7	;volatile
  4547  0EDA  0008               	return
  4548  0EDB                     __end_of_Timer4_Init:	
  4549                           
  4550                           	psect	text10
  4551  0F30                     __ptext10:	
  4552 ;; *************** function _Timer1_Init *****************
  4553 ;; Defined at:
  4554 ;;		line 6 in file "Timer1.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, status,2, status,0
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4568 ;;      Params:         0       0       0       0       0       0
  4569 ;;      Locals:         0       0       0       0       0       0
  4570 ;;      Temps:          0       1       0       0       0       0
  4571 ;;      Totals:         0       1       0       0       0       0
  4572 ;;Total ram usage:        1 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; Hardware stack levels required when called:    3
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_main
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           
  4583                           ;psect for function _Timer1_Init
  4584  0F30                     _Timer1_Init:	
  4585                           
  4586                           ;Timer1.c: 8: TRISB |= (1<<6);
  4587                           
  4588                           ;incstack = 0
  4589                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4590  0F30  0021               	movlb	1	; select bank1
  4591  0F31  170D               	bsf	13,6	;volatile
  4592                           
  4593                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  4594  0F32  30BF               	movlw	191
  4595  0F33  0020               	movlb	0	; select bank0
  4596  0F34  00A0               	movwf	??_Timer1_Init
  4597  0F35  0820               	movf	??_Timer1_Init,w
  4598  0F36  0023               	movlb	3	; select bank3
  4599  0F37  058D               	andwf	13,f	;volatile
  4600                           
  4601                           ;Timer1.c: 11: T1CON |= (0x01<<2);
  4602  0F38  0020               	movlb	0	; select bank0
  4603  0F39  1518               	bsf	24,2	;volatile
  4604                           
  4605                           ;Timer1.c: 12: T1CON &= ~(0x01<<3);
  4606  0F3A  30F7               	movlw	247
  4607  0F3B  00A0               	movwf	??_Timer1_Init
  4608  0F3C  0820               	movf	??_Timer1_Init,w
  4609  0F3D  0598               	andwf	24,f	;volatile
  4610                           
  4611                           ;Timer1.c: 13: T1CON |= (0x00<<4);
  4612  0F3E  0818               	movf	24,w	;volatile
  4613                           
  4614                           ;Timer1.c: 14: T1CON |= (0x02<<6);
  4615  0F3F  1798               	bsf	24,7	;volatile
  4616                           
  4617                           ;Timer1.c: 16: T1GCON = 0x00;
  4618  0F40  0199               	clrf	25	;volatile
  4619                           
  4620                           ;Timer1.c: 18: TMR1 = 0xFFFF-10;
  4621  0F41  30FF               	movlw	255
  4622  0F42  0097               	movwf	23	;volatile
  4623  0F43  30F5               	movlw	245
  4624  0F44  0096               	movwf	22	;volatile
  4625                           
  4626                           ;Timer1.c: 20: TMR1IF = 0;
  4627  0F45  1011               	bcf	17,0	;volatile
  4628                           
  4629                           ;Timer1.c: 21: TMR1IE = 1;
  4630  0F46  0021               	movlb	1	; select bank1
  4631  0F47  1411               	bsf	17,0	;volatile
  4632                           
  4633                           ;Timer1.c: 22: PEIE = 1;
  4634  0F48  170B               	bsf	11,6	;volatile
  4635                           
  4636                           ;Timer1.c: 23: GIE = 1;
  4637  0F49  178B               	bsf	11,7	;volatile
  4638  0F4A  0008               	return
  4639  0F4B                     __end_of_Timer1_Init:	
  4640                           
  4641                           	psect	text11
  4642  078C                     __ptext11:	
  4643 ;; *************** function _Timer1_GetCPM *****************
  4644 ;; Defined at:
  4645 ;;		line 38 in file "Timer1.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;		None
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;		None
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  2   26[BANK0 ] unsigned int 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0, pclath, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4659 ;;      Params:         0       2       0       0       0       0
  4660 ;;      Locals:         0       0       0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0       0
  4662 ;;      Totals:         0       2       0       0       0       0
  4663 ;;Total ram usage:        2 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    4
  4666 ;; This function calls:
  4667 ;;		___lldiv
  4668 ;;		___lmul
  4669 ;; This function is called by:
  4670 ;;		_main
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           
  4675                           ;psect for function _Timer1_GetCPM
  4676  078C                     _Timer1_GetCPM:	
  4677                           
  4678                           ;Timer1.c: 40: return (uint16_t)((countsum * 6000000) / timesum );
  4679                           
  4680                           ;incstack = 0
  4681                           ; Regs used in _Timer1_GetCPM: [wreg+status,2+status,0+pclath+cstack]
  4682  078C  0020               	movlb	0	; select bank0
  4683  078D  085B               	movf	_timesum+3,w
  4684  078E  00AF               	movwf	___lldiv@divisor+3
  4685  078F  085A               	movf	_timesum+2,w
  4686  0790  00AE               	movwf	___lldiv@divisor+2
  4687  0791  0859               	movf	_timesum+1,w
  4688  0792  00AD               	movwf	___lldiv@divisor+1
  4689  0793  0858               	movf	_timesum,w
  4690  0794  00AC               	movwf	___lldiv@divisor
  4691  0795  085F               	movf	_countsum+3,w
  4692  0796  00A3               	movwf	___lmul@multiplier+3
  4693  0797  085E               	movf	_countsum+2,w
  4694  0798  00A2               	movwf	___lmul@multiplier+2
  4695  0799  085D               	movf	_countsum+1,w
  4696  079A  00A1               	movwf	___lmul@multiplier+1
  4697  079B  085C               	movf	_countsum,w
  4698  079C  00A0               	movwf	___lmul@multiplier
  4699  079D  3000               	movlw	0
  4700  079E  00A7               	movwf	___lmul@multiplicand+3
  4701  079F  305B               	movlw	91
  4702  07A0  00A6               	movwf	___lmul@multiplicand+2
  4703  07A1  308D               	movlw	141
  4704  07A2  00A5               	movwf	___lmul@multiplicand+1
  4705  07A3  3080               	movlw	128
  4706  07A4  00A4               	movwf	___lmul@multiplicand
  4707  07A5  3187  275C  3187   	fcall	___lmul
  4708  07A8  0020               	movlb	0	; select bank0
  4709  07A9  0823               	movf	?___lmul+3,w
  4710  07AA  00B3               	movwf	___lldiv@dividend+3
  4711  07AB  0822               	movf	?___lmul+2,w
  4712  07AC  00B2               	movwf	___lldiv@dividend+2
  4713  07AD  0821               	movf	?___lmul+1,w
  4714  07AE  00B1               	movwf	___lldiv@dividend+1
  4715  07AF  0820               	movf	?___lmul,w
  4716  07B0  00B0               	movwf	___lldiv@dividend
  4717  07B1  3185  2581         	fcall	___lldiv
  4718  07B3  0020               	movlb	0	; select bank0
  4719  07B4  082D               	movf	?___lldiv+1,w
  4720  07B5  00BB               	movwf	?_Timer1_GetCPM+1
  4721  07B6  082C               	movf	?___lldiv,w
  4722  07B7  00BA               	movwf	?_Timer1_GetCPM
  4723  07B8  0008               	return
  4724  07B9                     __end_of_Timer1_GetCPM:	
  4725                           
  4726                           	psect	text12
  4727  075C                     __ptext12:	
  4728 ;; *************** function ___lmul *****************
  4729 ;; Defined at:
  4730 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul32.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4733 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  product         4    8[BANK0 ] unsigned long 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  4    0[BANK0 ] unsigned long 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4745 ;;      Params:         0       8       0       0       0       0
  4746 ;;      Locals:         0       4       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0
  4748 ;;      Totals:         0      12       0       0       0       0
  4749 ;;Total ram usage:       12 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:    3
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_Timer1_GetCPM
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           
  4760                           ;psect for function ___lmul
  4761  075C                     ___lmul:	
  4762                           
  4763                           ;incstack = 0
  4764                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4765  075C  3000               	movlw	0
  4766  075D  0020               	movlb	0	; select bank0
  4767  075E  00AB               	movwf	___lmul@product+3
  4768  075F  3000               	movlw	0
  4769  0760  00AA               	movwf	___lmul@product+2
  4770  0761  3000               	movlw	0
  4771  0762  00A9               	movwf	___lmul@product+1
  4772  0763  3000               	movlw	0
  4773  0764  00A8               	movwf	___lmul@product
  4774  0765                     l3555:	
  4775  0765  1C20               	btfss	___lmul@multiplier,0
  4776  0766  2F6F               	goto	l3559
  4777  0767  0824               	movf	___lmul@multiplicand,w
  4778  0768  07A8               	addwf	___lmul@product,f
  4779  0769  0825               	movf	___lmul@multiplicand+1,w
  4780  076A  3DA9               	addwfc	___lmul@product+1,f
  4781  076B  0826               	movf	___lmul@multiplicand+2,w
  4782  076C  3DAA               	addwfc	___lmul@product+2,f
  4783  076D  0827               	movf	___lmul@multiplicand+3,w
  4784  076E  3DAB               	addwfc	___lmul@product+3,f
  4785  076F                     l3559:	
  4786  076F  3001               	movlw	1
  4787  0770                     u3525:	
  4788  0770  35A4               	lslf	___lmul@multiplicand,f
  4789  0771  0DA5               	rlf	___lmul@multiplicand+1,f
  4790  0772  0DA6               	rlf	___lmul@multiplicand+2,f
  4791  0773  0DA7               	rlf	___lmul@multiplicand+3,f
  4792  0774  0B89               	decfsz	9,f
  4793  0775  2F70               	goto	u3525
  4794  0776  3001               	movlw	1
  4795  0777                     u3535:	
  4796  0777  36A3               	lsrf	___lmul@multiplier+3,f
  4797  0778  0CA2               	rrf	___lmul@multiplier+2,f
  4798  0779  0CA1               	rrf	___lmul@multiplier+1,f
  4799  077A  0CA0               	rrf	___lmul@multiplier,f
  4800  077B  0B89               	decfsz	9,f
  4801  077C  2F77               	goto	u3535
  4802  077D  0823               	movf	___lmul@multiplier+3,w
  4803  077E  0422               	iorwf	___lmul@multiplier+2,w
  4804  077F  0421               	iorwf	___lmul@multiplier+1,w
  4805  0780  0420               	iorwf	___lmul@multiplier,w
  4806  0781  1D03               	skipz
  4807  0782  2F65               	goto	l3555
  4808  0783  082B               	movf	___lmul@product+3,w
  4809  0784  00A3               	movwf	?___lmul+3
  4810  0785  082A               	movf	___lmul@product+2,w
  4811  0786  00A2               	movwf	?___lmul+2
  4812  0787  0829               	movf	___lmul@product+1,w
  4813  0788  00A1               	movwf	?___lmul+1
  4814  0789  0828               	movf	___lmul@product,w
  4815  078A  00A0               	movwf	?___lmul
  4816  078B  0008               	return
  4817  078C                     __end_of___lmul:	
  4818                           
  4819                           	psect	text13
  4820  0581                     __ptext13:	
  4821 ;; *************** function ___lldiv *****************
  4822 ;; Defined at:
  4823 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  divisor         4   12[BANK0 ] unsigned long 
  4826 ;;  dividend        4   16[BANK0 ] unsigned long 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  quotient        4   21[BANK0 ] unsigned long 
  4829 ;;  counter         1   25[BANK0 ] unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  4   12[BANK0 ] unsigned long 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4839 ;;      Params:         0       8       0       0       0       0
  4840 ;;      Locals:         0       5       0       0       0       0
  4841 ;;      Temps:          0       1       0       0       0       0
  4842 ;;      Totals:         0      14       0       0       0       0
  4843 ;;Total ram usage:       14 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; Hardware stack levels required when called:    3
  4846 ;; This function calls:
  4847 ;;		Nothing
  4848 ;; This function is called by:
  4849 ;;		_Timer1_GetCPM
  4850 ;;		_printf
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           
  4855                           ;psect for function ___lldiv
  4856  0581                     ___lldiv:	
  4857                           
  4858                           ;incstack = 0
  4859                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4860  0581  3000               	movlw	0
  4861  0582  0020               	movlb	0	; select bank0
  4862  0583  00B8               	movwf	___lldiv@quotient+3
  4863  0584  3000               	movlw	0
  4864  0585  00B7               	movwf	___lldiv@quotient+2
  4865  0586  3000               	movlw	0
  4866  0587  00B6               	movwf	___lldiv@quotient+1
  4867  0588  3000               	movlw	0
  4868  0589  00B5               	movwf	___lldiv@quotient
  4869  058A  082F               	movf	___lldiv@divisor+3,w
  4870  058B  042E               	iorwf	___lldiv@divisor+2,w
  4871  058C  042D               	iorwf	___lldiv@divisor+1,w
  4872  058D  042C               	iorwf	___lldiv@divisor,w
  4873  058E  1903               	skipnz
  4874  058F  2DCB               	goto	l3587
  4875  0590  01B9               	clrf	___lldiv@counter
  4876  0591  0AB9               	incf	___lldiv@counter,f
  4877  0592                     l3573:	
  4878  0592  1BAF               	btfsc	___lldiv@divisor+3,7
  4879  0593  2DA0               	goto	l3575
  4880  0594  3001               	movlw	1
  4881  0595                     u3565:	
  4882  0595  35AC               	lslf	___lldiv@divisor,f
  4883  0596  0DAD               	rlf	___lldiv@divisor+1,f
  4884  0597  0DAE               	rlf	___lldiv@divisor+2,f
  4885  0598  0DAF               	rlf	___lldiv@divisor+3,f
  4886  0599  0B89               	decfsz	9,f
  4887  059A  2D95               	goto	u3565
  4888  059B  3001               	movlw	1
  4889  059C  00B4               	movwf	??___lldiv
  4890  059D  0834               	movf	??___lldiv,w
  4891  059E  07B9               	addwf	___lldiv@counter,f
  4892  059F  2D92               	goto	l3573
  4893  05A0                     l3575:	
  4894  05A0  3001               	movlw	1
  4895  05A1                     u3585:	
  4896  05A1  35B5               	lslf	___lldiv@quotient,f
  4897  05A2  0DB6               	rlf	___lldiv@quotient+1,f
  4898  05A3  0DB7               	rlf	___lldiv@quotient+2,f
  4899  05A4  0DB8               	rlf	___lldiv@quotient+3,f
  4900  05A5  0B89               	decfsz	9,f
  4901  05A6  2DA1               	goto	u3585
  4902  05A7  082F               	movf	___lldiv@divisor+3,w
  4903  05A8  0233               	subwf	___lldiv@dividend+3,w
  4904  05A9  1D03               	skipz
  4905  05AA  2DB5               	goto	u3595
  4906  05AB  082E               	movf	___lldiv@divisor+2,w
  4907  05AC  0232               	subwf	___lldiv@dividend+2,w
  4908  05AD  1D03               	skipz
  4909  05AE  2DB5               	goto	u3595
  4910  05AF  082D               	movf	___lldiv@divisor+1,w
  4911  05B0  0231               	subwf	___lldiv@dividend+1,w
  4912  05B1  1D03               	skipz
  4913  05B2  2DB5               	goto	u3595
  4914  05B3  082C               	movf	___lldiv@divisor,w
  4915  05B4  0230               	subwf	___lldiv@dividend,w
  4916  05B5                     u3595:	
  4917  05B5  1C03               	skipc
  4918  05B6  2DC0               	goto	l3583
  4919  05B7  082C               	movf	___lldiv@divisor,w
  4920  05B8  02B0               	subwf	___lldiv@dividend,f
  4921  05B9  082D               	movf	___lldiv@divisor+1,w
  4922  05BA  3BB1               	subwfb	___lldiv@dividend+1,f
  4923  05BB  082E               	movf	___lldiv@divisor+2,w
  4924  05BC  3BB2               	subwfb	___lldiv@dividend+2,f
  4925  05BD  082F               	movf	___lldiv@divisor+3,w
  4926  05BE  3BB3               	subwfb	___lldiv@dividend+3,f
  4927  05BF  1435               	bsf	___lldiv@quotient,0
  4928  05C0                     l3583:	
  4929  05C0  3001               	movlw	1
  4930  05C1                     u3605:	
  4931  05C1  36AF               	lsrf	___lldiv@divisor+3,f
  4932  05C2  0CAE               	rrf	___lldiv@divisor+2,f
  4933  05C3  0CAD               	rrf	___lldiv@divisor+1,f
  4934  05C4  0CAC               	rrf	___lldiv@divisor,f
  4935  05C5  0B89               	decfsz	9,f
  4936  05C6  2DC1               	goto	u3605
  4937  05C7  3001               	movlw	1
  4938  05C8  02B9               	subwf	___lldiv@counter,f
  4939  05C9  1D03               	btfss	3,2
  4940  05CA  2DA0               	goto	l3575
  4941  05CB                     l3587:	
  4942  05CB  0838               	movf	___lldiv@quotient+3,w
  4943  05CC  00AF               	movwf	?___lldiv+3
  4944  05CD  0837               	movf	___lldiv@quotient+2,w
  4945  05CE  00AE               	movwf	?___lldiv+2
  4946  05CF  0836               	movf	___lldiv@quotient+1,w
  4947  05D0  00AD               	movwf	?___lldiv+1
  4948  05D1  0835               	movf	___lldiv@quotient,w
  4949  05D2  00AC               	movwf	?___lldiv
  4950  05D3  0008               	return
  4951  05D4                     __end_of___lldiv:	
  4952                           
  4953                           	psect	text14
  4954  046A                     __ptext14:	
  4955 ;; *************** function _LCD_Init *****************
  4956 ;; Defined at:
  4957 ;;		line 28 in file "LCD.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;		None
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;		None
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      void 
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, status,0, pclath, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4971 ;;      Params:         0       0       0       0       0       0
  4972 ;;      Locals:         0       0       0       0       0       0
  4973 ;;      Temps:          0       2       0       0       0       0
  4974 ;;      Totals:         0       2       0       0       0       0
  4975 ;;Total ram usage:        2 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    5
  4978 ;; This function calls:
  4979 ;;		_LCD_DisplayClear
  4980 ;;		_LCD_WriteData
  4981 ;; This function is called by:
  4982 ;;		_main
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           
  4987                           ;psect for function _LCD_Init
  4988  046A                     _LCD_Init:	
  4989                           
  4990                           ;LCD.c: 30: LATA3 = 0;
  4991                           
  4992                           ;incstack = 0
  4993                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4994  046A  0022               	movlb	2	; select bank2
  4995  046B  118C               	bcf	12,3	;volatile
  4996                           
  4997                           ;LCD.c: 31: LATA4 = 0;
  4998  046C  120C               	bcf	12,4	;volatile
  4999                           
  5000                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  5001  046D  3002               	movlw	2
  5002  046E  0020               	movlb	0	; select bank0
  5003  046F  00A5               	movwf	??_LCD_Init+1
  5004  0470  3038               	movlw	56
  5005  0471  00A4               	movwf	??_LCD_Init
  5006  0472  30AD               	movlw	173
  5007  0473                     u3877:	
  5008  0473  0B89               	decfsz	9,f
  5009  0474  2C73               	goto	u3877
  5010  0475  0BA4               	decfsz	??_LCD_Init,f
  5011  0476  2C73               	goto	u3877
  5012  0477  0BA5               	decfsz	??_LCD_Init+1,f
  5013  0478  2C73               	goto	u3877
  5014                           
  5015                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  5016  0479  3003               	movlw	3
  5017  047A  0020               	movlb	0	; select bank0
  5018  047B  008D               	movwf	13	;volatile
  5019                           
  5020                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5021  047C  0022               	movlb	2	; select bank2
  5022  047D  160C               	bsf	12,4	;volatile
  5023  047E  3200               	nop2	;2 cycle nop
  5024  047F  3200               	nop2	;2 cycle nop
  5025  0480  3200               	nop2	;2 cycle nop
  5026  0481  3200               	nop2	;2 cycle nop
  5027  0482  0022               	movlb	2	; select bank2
  5028  0483  120C               	bcf	12,4	;volatile
  5029  0484  3200               	nop2	;2 cycle nop
  5030  0485  3200               	nop2	;2 cycle nop
  5031  0486  3200               	nop2	;2 cycle nop
  5032  0487  3200               	nop2	;2 cycle nop
  5033                           
  5034                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  5035  0488  3034               	movlw	52
  5036  0489  0020               	movlb	0	; select bank0
  5037  048A  00A4               	movwf	??_LCD_Init
  5038  048B  30F1               	movlw	241
  5039  048C                     u3887:	
  5040  048C  0B89               	decfsz	9,f
  5041  048D  2C8C               	goto	u3887
  5042  048E  0BA4               	decfsz	??_LCD_Init,f
  5043  048F  2C8C               	goto	u3887
  5044  0490  3200               	nop2
  5045                           
  5046                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5047  0491  0022               	movlb	2	; select bank2
  5048  0492  160C               	bsf	12,4	;volatile
  5049  0493  3200               	nop2	;2 cycle nop
  5050  0494  3200               	nop2	;2 cycle nop
  5051  0495  3200               	nop2	;2 cycle nop
  5052  0496  3200               	nop2	;2 cycle nop
  5053  0497  0022               	movlb	2	; select bank2
  5054  0498  120C               	bcf	12,4	;volatile
  5055  0499  3200               	nop2	;2 cycle nop
  5056  049A  3200               	nop2	;2 cycle nop
  5057  049B  3200               	nop2	;2 cycle nop
  5058  049C  3200               	nop2	;2 cycle nop
  5059                           
  5060                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5061  049D  3005               	movlw	5
  5062  049E  0020               	movlb	0	; select bank0
  5063  049F  00A4               	movwf	??_LCD_Init
  5064  04A0  3026               	movlw	38
  5065  04A1                     u3897:	
  5066  04A1  0B89               	decfsz	9,f
  5067  04A2  2CA1               	goto	u3897
  5068  04A3  0BA4               	decfsz	??_LCD_Init,f
  5069  04A4  2CA1               	goto	u3897
  5070  04A5  0000               	nop
  5071                           
  5072                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5073  04A6  0022               	movlb	2	; select bank2
  5074  04A7  160C               	bsf	12,4	;volatile
  5075  04A8  3200               	nop2	;2 cycle nop
  5076  04A9  3200               	nop2	;2 cycle nop
  5077  04AA  3200               	nop2	;2 cycle nop
  5078  04AB  3200               	nop2	;2 cycle nop
  5079  04AC  0022               	movlb	2	; select bank2
  5080  04AD  120C               	bcf	12,4	;volatile
  5081  04AE  3200               	nop2	;2 cycle nop
  5082  04AF  3200               	nop2	;2 cycle nop
  5083  04B0  3200               	nop2	;2 cycle nop
  5084  04B1  3200               	nop2	;2 cycle nop
  5085                           
  5086                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5087  04B2  3005               	movlw	5
  5088  04B3  0020               	movlb	0	; select bank0
  5089  04B4  00A4               	movwf	??_LCD_Init
  5090  04B5  3026               	movlw	38
  5091  04B6                     u3907:	
  5092  04B6  0B89               	decfsz	9,f
  5093  04B7  2CB6               	goto	u3907
  5094  04B8  0BA4               	decfsz	??_LCD_Init,f
  5095  04B9  2CB6               	goto	u3907
  5096  04BA  0000               	nop
  5097                           
  5098                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  5099  04BB  3002               	movlw	2
  5100  04BC  0020               	movlb	0	; select bank0
  5101  04BD  008D               	movwf	13	;volatile
  5102                           
  5103                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5104  04BE  0022               	movlb	2	; select bank2
  5105  04BF  160C               	bsf	12,4	;volatile
  5106  04C0  3200               	nop2	;2 cycle nop
  5107  04C1  3200               	nop2	;2 cycle nop
  5108  04C2  3200               	nop2	;2 cycle nop
  5109  04C3  3200               	nop2	;2 cycle nop
  5110  04C4  0022               	movlb	2	; select bank2
  5111  04C5  120C               	bcf	12,4	;volatile
  5112  04C6  3200               	nop2	;2 cycle nop
  5113  04C7  3200               	nop2	;2 cycle nop
  5114  04C8  3200               	nop2	;2 cycle nop
  5115  04C9  3200               	nop2	;2 cycle nop
  5116                           
  5117                           ;LCD.c: 44: LCD_WriteData(0x28);
  5118  04CA  3028               	movlw	40
  5119  04CB  3186  26E3  3184   	fcall	_LCD_WriteData
  5120                           
  5121                           ;LCD.c: 45: LCD_WriteData(0x0c);
  5122  04CE  300C               	movlw	12
  5123  04CF  3186  26E3  3184   	fcall	_LCD_WriteData
  5124                           
  5125                           ;LCD.c: 46: LCD_DisplayClear();
  5126  04D2  318E  26B8  3184   	fcall	_LCD_DisplayClear
  5127                           
  5128                           ;LCD.c: 47: LCD_WriteData(0x06);
  5129  04D5  3006               	movlw	6
  5130  04D6  3186  26E3         	fcall	_LCD_WriteData
  5131  04D8  0008               	return
  5132  04D9                     __end_of_LCD_Init:	
  5133                           
  5134                           	psect	text15
  5135  0EB8                     __ptext15:	
  5136 ;; *************** function _LCD_DisplayClear *****************
  5137 ;; Defined at:
  5138 ;;		line 73 in file "LCD.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;		None
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;		None
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      void 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0, pclath, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5152 ;;      Params:         0       0       0       0       0       0
  5153 ;;      Locals:         0       0       0       0       0       0
  5154 ;;      Temps:          0       1       0       0       0       0
  5155 ;;      Totals:         0       1       0       0       0       0
  5156 ;;Total ram usage:        1 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    4
  5159 ;; This function calls:
  5160 ;;		_LCD_WriteData
  5161 ;; This function is called by:
  5162 ;;		_LCD_Init
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           
  5167                           ;psect for function _LCD_DisplayClear
  5168  0EB8                     _LCD_DisplayClear:	
  5169                           
  5170                           ;LCD.c: 75: LATA3 = 0;
  5171                           
  5172                           ;incstack = 0
  5173                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  5174  0EB8  0022               	movlb	2	; select bank2
  5175  0EB9  118C               	bcf	12,3	;volatile
  5176                           
  5177                           ;LCD.c: 76: LCD_WriteData(0x01);
  5178  0EBA  3001               	movlw	1
  5179  0EBB  3186  26E3  318E   	fcall	_LCD_WriteData
  5180                           
  5181                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  5182  0EBE  3015               	movlw	21
  5183  0EBF  0020               	movlb	0	; select bank0
  5184  0EC0  00A3               	movwf	??_LCD_DisplayClear
  5185  0EC1  30C6               	movlw	198
  5186  0EC2                     u3917:	
  5187  0EC2  0B89               	decfsz	9,f
  5188  0EC3  2EC2               	goto	u3917
  5189  0EC4  0BA3               	decfsz	??_LCD_DisplayClear,f
  5190  0EC5  2EC2               	goto	u3917
  5191  0EC6  0000               	nop
  5192  0EC7  0008               	return
  5193  0EC8                     __end_of_LCD_DisplayClear:	
  5194                           
  5195                           	psect	text16
  5196  0EA8                     __ptext16:	
  5197 ;; *************** function _LCD_CursorHome *****************
  5198 ;; Defined at:
  5199 ;;		line 84 in file "LCD.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0, pclath, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5213 ;;      Params:         0       0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0
  5215 ;;      Temps:          0       1       0       0       0       0
  5216 ;;      Totals:         0       1       0       0       0       0
  5217 ;;Total ram usage:        1 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    4
  5220 ;; This function calls:
  5221 ;;		_LCD_WriteData
  5222 ;; This function is called by:
  5223 ;;		_main
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           
  5228                           ;psect for function _LCD_CursorHome
  5229  0EA8                     _LCD_CursorHome:	
  5230                           
  5231                           ;LCD.c: 86: LATA3 = 0;
  5232                           
  5233                           ;incstack = 0
  5234                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  5235  0EA8  0022               	movlb	2	; select bank2
  5236  0EA9  118C               	bcf	12,3	;volatile
  5237                           
  5238                           ;LCD.c: 87: LCD_WriteData(0x02);
  5239  0EAA  3002               	movlw	2
  5240  0EAB  3186  26E3  318E   	fcall	_LCD_WriteData
  5241                           
  5242                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  5243  0EAE  3015               	movlw	21
  5244  0EAF  0020               	movlb	0	; select bank0
  5245  0EB0  00A3               	movwf	??_LCD_CursorHome
  5246  0EB1  30C6               	movlw	198
  5247  0EB2                     u3927:	
  5248  0EB2  0B89               	decfsz	9,f
  5249  0EB3  2EB2               	goto	u3927
  5250  0EB4  0BA3               	decfsz	??_LCD_CursorHome,f
  5251  0EB5  2EB2               	goto	u3927
  5252  0EB6  0000               	nop
  5253  0EB7  0008               	return
  5254  0EB8                     __end_of_LCD_CursorHome:	
  5255                           
  5256                           	psect	text17
  5257  06E3                     __ptext17:	
  5258 ;; *************** function _LCD_WriteData *****************
  5259 ;; Defined at:
  5260 ;;		line 15 in file "LCD.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  point           1    wreg     char 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  point           1    2[BANK0 ] char 
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg, status,2, status,0
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5274 ;;      Params:         0       0       0       0       0       0
  5275 ;;      Locals:         0       1       0       0       0       0
  5276 ;;      Temps:          0       2       0       0       0       0
  5277 ;;      Totals:         0       3       0       0       0       0
  5278 ;;Total ram usage:        3 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; Hardware stack levels required when called:    3
  5281 ;; This function calls:
  5282 ;;		Nothing
  5283 ;; This function is called by:
  5284 ;;		_LCD_Init
  5285 ;;		_putch
  5286 ;;		_LCD_DisplayClear
  5287 ;;		_LCD_CursorHome
  5288 ;;		_LCD_Put
  5289 ;;		_LCD_CursorPosition
  5290 ;;		_LCD_CursorShift
  5291 ;;		_LCD_DispShift
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           
  5296                           ;psect for function _LCD_WriteData
  5297  06E3                     _LCD_WriteData:	
  5298                           
  5299                           ;incstack = 0
  5300                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  5301                           ;LCD_WriteData@point stored from wreg
  5302  06E3  0020               	movlb	0	; select bank0
  5303  06E4  00A2               	movwf	LCD_WriteData@point
  5304                           
  5305                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  5306  06E5  30D5               	movlw	213
  5307  06E6                     u3937:	
  5308  06E6  0B89               	decfsz	9,f
  5309  06E7  2EE6               	goto	u3937
  5310  06E8  0000               	nop
  5311                           
  5312                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  5313  06E9  0020               	movlb	0	; select bank0
  5314  06EA  0822               	movf	LCD_WriteData@point,w
  5315  06EB  00A0               	movwf	??_LCD_WriteData
  5316  06EC  3004               	movlw	4
  5317  06ED                     u3495:	
  5318  06ED  1003               	clrc
  5319  06EE  1BA0               	btfsc	??_LCD_WriteData,7
  5320  06EF  1403               	setc
  5321  06F0  0CA0               	rrf	??_LCD_WriteData,f
  5322  06F1  0B89               	decfsz	9,f
  5323  06F2  2EED               	goto	u3495
  5324  06F3  3003               	movlw	3
  5325  06F4  0520               	andwf	??_LCD_WriteData,w
  5326  06F5  00A1               	movwf	??_LCD_WriteData+1
  5327  06F6  0E22               	swapf	LCD_WriteData@point,w
  5328  06F7  390F               	andlw	15
  5329  06F8  1989               	btfsc	9,3
  5330  06F9  38F0               	iorlw	240
  5331  06FA  390C               	andlw	12
  5332  06FB  0709               	addwf	9,w
  5333  06FC  0421               	iorwf	??_LCD_WriteData+1,w
  5334  06FD  008D               	movwf	13	;volatile
  5335                           
  5336                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5337  06FE  0022               	movlb	2	; select bank2
  5338  06FF  160C               	bsf	12,4	;volatile
  5339  0700  3200               	nop2	;2 cycle nop
  5340  0701  3200               	nop2	;2 cycle nop
  5341  0702  3200               	nop2	;2 cycle nop
  5342  0703  3200               	nop2	;2 cycle nop
  5343  0704  0022               	movlb	2	; select bank2
  5344  0705  120C               	bcf	12,4	;volatile
  5345  0706  3200               	nop2	;2 cycle nop
  5346  0707  3200               	nop2	;2 cycle nop
  5347  0708  3200               	nop2	;2 cycle nop
  5348  0709  3200               	nop2	;2 cycle nop
  5349                           
  5350                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  5351  070A  3003               	movlw	3
  5352  070B  0020               	movlb	0	; select bank0
  5353  070C  0522               	andwf	LCD_WriteData@point,w
  5354  070D  00A0               	movwf	??_LCD_WriteData
  5355  070E  0822               	movf	LCD_WriteData@point,w
  5356  070F  390C               	andlw	12
  5357  0710  0709               	addwf	9,w
  5358  0711  0420               	iorwf	??_LCD_WriteData,w
  5359  0712  008D               	movwf	13	;volatile
  5360                           
  5361                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5362  0713  0022               	movlb	2	; select bank2
  5363  0714  160C               	bsf	12,4	;volatile
  5364  0715  3200               	nop2	;2 cycle nop
  5365  0716  3200               	nop2	;2 cycle nop
  5366  0717  3200               	nop2	;2 cycle nop
  5367  0718  3200               	nop2	;2 cycle nop
  5368  0719  0022               	movlb	2	; select bank2
  5369  071A  120C               	bcf	12,4	;volatile
  5370  071B  3200               	nop2	;2 cycle nop
  5371  071C  3200               	nop2	;2 cycle nop
  5372  071D  3200               	nop2	;2 cycle nop
  5373  071E  3200               	nop2	;2 cycle nop
  5374  071F  0008               	return
  5375  0720                     __end_of_LCD_WriteData:	
  5376                           
  5377                           	psect	text18
  5378  0F69                     __ptext18:	
  5379 ;; *************** function _DAC_Initialize *****************
  5380 ;; Defined at:
  5381 ;;		line 14 in file "MCP4726.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;		None
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;		None
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5395 ;;      Params:         0       0       0       0       0       0
  5396 ;;      Locals:         0       0       0       0       0       0
  5397 ;;      Temps:          0       2       0       0       0       0
  5398 ;;      Totals:         0       2       0       0       0       0
  5399 ;;Total ram usage:        2 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; Hardware stack levels required when called:    6
  5402 ;; This function calls:
  5403 ;;		_I2C_Init
  5404 ;;		_I2C_Transmit
  5405 ;; This function is called by:
  5406 ;;		_main
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           
  5411                           ;psect for function _DAC_Initialize
  5412  0F69                     _DAC_Initialize:	
  5413                           
  5414                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  5415                           
  5416                           ;incstack = 0
  5417                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5418  0F69  0020               	movlb	0	; select bank0
  5419  0F6A  01A5               	clrf	I2C_Init@address
  5420  0F6B  01A6               	clrf	I2C_Init@mode
  5421  0F6C  01A7               	clrf	I2C_Init@Speed
  5422  0F6D  3001               	movlw	1
  5423  0F6E  318F  27D6  318F   	fcall	_I2C_Init
  5424                           
  5425                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  5426  0F71  0020               	movlb	0	; select bank0
  5427  0F72  086F               	movf	_ConfigReg,w
  5428  0F73  391F               	andlw	-225
  5429  0F74  3880               	iorlw	128
  5430  0F75  00EF               	movwf	_ConfigReg
  5431                           
  5432                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  5433  0F76  106F               	bcf	_ConfigReg,0
  5434                           
  5435                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  5436  0F77  30F9               	movlw	-7
  5437  0F78  05EF               	andwf	_ConfigReg,f
  5438                           
  5439                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  5440  0F79  30E7               	movlw	-25
  5441  0F7A  05EF               	andwf	_ConfigReg,f
  5442                           
  5443                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  5444  0F7B  3060               	movlw	96
  5445  0F7C  00B0               	movwf	??_DAC_Initialize
  5446  0F7D  0830               	movf	??_DAC_Initialize,w
  5447  0F7E  00A8               	movwf	I2C_Transmit@address
  5448  0F7F  306F               	movlw	(low (_ConfigReg| 0))& (0+255)
  5449  0F80  00B1               	movwf	??_DAC_Initialize+1
  5450  0F81  0831               	movf	??_DAC_Initialize+1,w
  5451  0F82  00A9               	movwf	I2C_Transmit@pData
  5452  0F83  01AA               	clrf	I2C_Transmit@size
  5453  0F84  0AAA               	incf	I2C_Transmit@size,f
  5454  0F85  3001               	movlw	1
  5455  0F86  3187  27B9         	fcall	_I2C_Transmit
  5456  0F88  0008               	return
  5457  0F89                     __end_of_DAC_Initialize:	
  5458                           
  5459                           	psect	text19
  5460  07B9                     __ptext19:	
  5461 ;; *************** function _I2C_Transmit *****************
  5462 ;; Defined at:
  5463 ;;		line 23 in file "I2C_Common.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  I2Cx            1    wreg     enum E3164
  5466 ;;  address         1    8[BANK0 ] unsigned char 
  5467 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  5468 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5469 ;;  size            1   10[BANK0 ] unsigned char 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  I2Cx            1   14[BANK0 ] enum E3164
  5472 ;;  result          1   15[BANK0 ] char 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      char 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5482 ;;      Params:         0       3       0       0       0       0
  5483 ;;      Locals:         0       2       0       0       0       0
  5484 ;;      Temps:          0       3       0       0       0       0
  5485 ;;      Totals:         0       8       0       0       0       0
  5486 ;;Total ram usage:        8 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    4
  5489 ;; This function calls:
  5490 ;;		_I2C1_Transmit
  5491 ;;		_I2C2_Transmit
  5492 ;; This function is called by:
  5493 ;;		_DAC_Initialize
  5494 ;;		_DAC_WriteVoltage
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function _I2C_Transmit
  5500  07B9                     _I2C_Transmit:	
  5501                           
  5502                           ;incstack = 0
  5503                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5504                           ;I2C_Transmit@I2Cx stored from wreg
  5505  07B9  0020               	movlb	0	; select bank0
  5506  07BA  00AE               	movwf	I2C_Transmit@I2Cx
  5507                           
  5508                           ;I2C_Common.c: 25: int8_t result;
  5509                           ;I2C_Common.c: 27: switch(I2Cx)
  5510  07BB  2FDA               	goto	l3535
  5511  07BC                     l3529:	
  5512                           ;I2C_Common.c: 28: {
  5513                           ;I2C_Common.c: 29: case I2C1_MODULE:
  5514                           
  5515                           
  5516                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  5517  07BC  0829               	movf	I2C_Transmit@pData,w
  5518  07BD  00AB               	movwf	??_I2C_Transmit
  5519  07BE  082B               	movf	??_I2C_Transmit,w
  5520  07BF  00A0               	movwf	I2C1_Transmit@pData
  5521  07C0  082A               	movf	I2C_Transmit@size,w
  5522  07C1  00AC               	movwf	??_I2C_Transmit+1
  5523  07C2  082C               	movf	??_I2C_Transmit+1,w
  5524  07C3  00A1               	movwf	I2C1_Transmit@size
  5525  07C4  0828               	movf	I2C_Transmit@address,w
  5526  07C5  3183  2357  3187   	fcall	_I2C1_Transmit
  5527  07C8  2FD5               	goto	L2
  5528  07C9                     l3531:	
  5529                           ;I2C_Common.c: 33: case I2C2_MODULE:
  5530                           
  5531                           ;I2C_Common.c: 31: break;
  5532                           
  5533                           
  5534                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  5535  07C9  0829               	movf	I2C_Transmit@pData,w
  5536  07CA  00AB               	movwf	??_I2C_Transmit
  5537  07CB  082B               	movf	??_I2C_Transmit,w
  5538  07CC  00A0               	movwf	I2C2_Transmit@pData
  5539  07CD  082A               	movf	I2C_Transmit@size,w
  5540  07CE  00AC               	movwf	??_I2C_Transmit+1
  5541  07CF  082C               	movf	??_I2C_Transmit+1,w
  5542  07D0  00A1               	movwf	I2C2_Transmit@size
  5543  07D1  0828               	movf	I2C_Transmit@address,w
  5544  07D2  3182  22BF  3187   	fcall	_I2C2_Transmit
  5545  07D5                     L2:	
  5546  07D5  0020               	movlb	0	; select bank0
  5547  07D6  00AD               	movwf	??_I2C_Transmit+2
  5548  07D7  082D               	movf	??_I2C_Transmit+2,w
  5549  07D8  00AF               	movwf	I2C_Transmit@result
  5550                           
  5551                           ;I2C_Common.c: 36: }
  5552                           
  5553                           ;I2C_Common.c: 35: break;
  5554  07D9  2FE2               	goto	l3537
  5555  07DA                     l3535:	
  5556  07DA  082E               	movf	I2C_Transmit@I2Cx,w
  5557                           
  5558                           ; Switch size 1, requested type "space"
  5559                           ; Number of cases is 2, Range of values is 0 to 1
  5560                           ; switch strategies available:
  5561                           ; Name         Instructions Cycles
  5562                           ; simple_byte            7     4 (average)
  5563                           ; direct_byte           10     6 (fixed)
  5564                           ; jumptable            260     6 (fixed)
  5565                           ;	Chosen strategy is simple_byte
  5566  07DB  3A00               	xorlw	0	; case 0
  5567  07DC  1903               	skipnz
  5568  07DD  2FBC               	goto	l3529
  5569  07DE  3A01               	xorlw	1	; case 1
  5570  07DF  1903               	skipnz
  5571  07E0  2FC9               	goto	l3531
  5572  07E1  2FE2               	goto	l3537
  5573  07E2                     l3537:	
  5574                           
  5575                           ;I2C_Common.c: 37: return result;
  5576  07E2  082F               	movf	I2C_Transmit@result,w
  5577  07E3  0008               	return
  5578  07E4                     __end_of_I2C_Transmit:	
  5579                           
  5580                           	psect	text20
  5581  02BF                     __ptext20:	
  5582 ;; *************** function _I2C2_Transmit *****************
  5583 ;; Defined at:
  5584 ;;		line 52 in file "I2C2.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  address         1    wreg     unsigned char 
  5587 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  5588 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5589 ;;  size            1    1[BANK0 ] unsigned char 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;  address         1    4[BANK0 ] unsigned char 
  5592 ;;  i               1    6[BANK0 ] unsigned char 
  5593 ;;  i               1    5[BANK0 ] unsigned char 
  5594 ;;  result          1    7[BANK0 ] char 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  1    wreg      char 
  5597 ;; Registers used:
  5598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5604 ;;      Params:         0       2       0       0       0       0
  5605 ;;      Locals:         0       4       0       0       0       0
  5606 ;;      Temps:          0       2       0       0       0       0
  5607 ;;      Totals:         0       8       0       0       0       0
  5608 ;;Total ram usage:        8 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    3
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_I2C_Transmit
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           
  5619                           ;psect for function _I2C2_Transmit
  5620  02BF                     _I2C2_Transmit:	
  5621                           
  5622                           ;incstack = 0
  5623                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  5624                           ;I2C2_Transmit@address stored from wreg
  5625  02BF  0020               	movlb	0	; select bank0
  5626  02C0  00A4               	movwf	I2C2_Transmit@address
  5627                           
  5628                           ;I2C2.c: 54: int8_t result = 0;
  5629  02C1  01A7               	clrf	I2C2_Transmit@result
  5630                           
  5631                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  5632  02C2  2B4B               	goto	l3485
  5633  02C3                     l3441:	
  5634                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5635                           
  5636                           ;I2C2.c: 57: {
  5637                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  5638                           
  5639  02C3  3005               	movlw	5
  5640  02C4  0024               	movlb	4	; select bank4
  5641  02C5  051C               	andwf	28,w	;volatile
  5642  02C6  0020               	movlb	0	; select bank0
  5643  02C7  00A2               	movwf	??_I2C2_Transmit
  5644  02C8  0024               	movlb	4	; select bank4
  5645  02C9  081E               	movf	30,w	;volatile
  5646  02CA  391F               	andlw	31
  5647  02CB  0020               	movlb	0	; select bank0
  5648  02CC  0422               	iorwf	??_I2C2_Transmit,w
  5649  02CD  1D03               	btfss	3,2
  5650  02CE  2AC3               	goto	l3441
  5651                           
  5652                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  5653  02CF  0024               	movlb	4	; select bank4
  5654  02D0  141E               	bsf	30,0	;volatile
  5655  02D1                     l3443:	
  5656                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5657                           
  5658  02D1  3005               	movlw	5
  5659  02D2  0024               	movlb	4	; select bank4
  5660  02D3  051C               	andwf	28,w	;volatile
  5661  02D4  0020               	movlb	0	; select bank0
  5662  02D5  00A2               	movwf	??_I2C2_Transmit
  5663  02D6  0024               	movlb	4	; select bank4
  5664  02D7  081E               	movf	30,w	;volatile
  5665  02D8  391F               	andlw	31
  5666  02D9  0020               	movlb	0	; select bank0
  5667  02DA  0422               	iorwf	??_I2C2_Transmit,w
  5668  02DB  1D03               	btfss	3,2
  5669  02DC  2AD1               	goto	l3443
  5670                           
  5671                           ;I2C2.c: 63: SSP2BUF = address << 1;
  5672  02DD  3524               	lslf	I2C2_Transmit@address,w
  5673  02DE  0024               	movlb	4	; select bank4
  5674  02DF  0099               	movwf	25	;volatile
  5675  02E0                     l228:	
  5676                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  5677                           
  5678  02E0  191C               	btfsc	28,2	;volatile
  5679  02E1  2AE0               	goto	l228
  5680                           
  5681                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  5682  02E2  3000               	movlw	0
  5683  02E3  1B1E               	btfsc	30,6	;volatile
  5684  02E4  3001               	movlw	1
  5685  02E5  0020               	movlb	0	; select bank0
  5686  02E6  00A7               	movwf	I2C2_Transmit@result
  5687                           
  5688                           ;I2C2.c: 67: if (!result)
  5689  02E7  0827               	movf	I2C2_Transmit@result,w
  5690  02E8  1D03               	btfss	3,2
  5691  02E9  2B17               	goto	l3467
  5692                           
  5693                           ;I2C2.c: 68: {
  5694                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  5695  02EA  01A5               	clrf	I2C2_Transmit@i
  5696  02EB  2AF0               	goto	l3465
  5697  02EC                     l3463:	
  5698                           ;I2C2.c: 79: break;
  5699                           
  5700  02EC  3001               	movlw	1
  5701  02ED  00A2               	movwf	??_I2C2_Transmit
  5702  02EE  0822               	movf	??_I2C2_Transmit,w
  5703  02EF  07A5               	addwf	I2C2_Transmit@i,f
  5704  02F0                     l3465:	
  5705  02F0  0821               	movf	I2C2_Transmit@size,w
  5706  02F1  0225               	subwf	I2C2_Transmit@i,w
  5707  02F2  1803               	btfsc	3,0
  5708  02F3  2B17               	goto	l3467
  5709  02F4                     l3453:	
  5710                           ;I2C2.c: 70: {
  5711                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5712                           
  5713  02F4  3005               	movlw	5
  5714  02F5  0024               	movlb	4	; select bank4
  5715  02F6  051C               	andwf	28,w	;volatile
  5716  02F7  0020               	movlb	0	; select bank0
  5717  02F8  00A2               	movwf	??_I2C2_Transmit
  5718  02F9  0024               	movlb	4	; select bank4
  5719  02FA  081E               	movf	30,w	;volatile
  5720  02FB  391F               	andlw	31
  5721  02FC  0020               	movlb	0	; select bank0
  5722  02FD  0422               	iorwf	??_I2C2_Transmit,w
  5723  02FE  1D03               	btfss	3,2
  5724  02FF  2AF4               	goto	l3453
  5725                           
  5726                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  5727  0300  0825               	movf	I2C2_Transmit@i,w
  5728  0301  0720               	addwf	I2C2_Transmit@pData,w
  5729  0302  00A2               	movwf	??_I2C2_Transmit
  5730  0303  0822               	movf	??_I2C2_Transmit,w
  5731  0304  0086               	movwf	6
  5732  0305  0187               	clrf	7
  5733  0306  0801               	movf	1,w
  5734  0307  0024               	movlb	4	; select bank4
  5735  0308  0099               	movwf	25	;volatile
  5736  0309                     l237:	
  5737                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  5738                           
  5739  0309  191C               	btfsc	28,2	;volatile
  5740  030A  2B09               	goto	l237
  5741                           
  5742                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  5743  030B  3000               	movlw	0
  5744  030C  1B1E               	btfsc	30,6	;volatile
  5745  030D  3001               	movlw	1
  5746  030E  0020               	movlb	0	; select bank0
  5747  030F  00A7               	movwf	I2C2_Transmit@result
  5748                           
  5749                           ;I2C2.c: 76: if (result)
  5750  0310  0827               	movf	I2C2_Transmit@result,w
  5751  0311  1903               	btfsc	3,2
  5752  0312  2AEC               	goto	l3463
  5753                           
  5754                           ;I2C2.c: 77: {
  5755                           ;I2C2.c: 78: result = 2;
  5756  0313  3002               	movlw	2
  5757  0314  00A2               	movwf	??_I2C2_Transmit
  5758  0315  0822               	movf	??_I2C2_Transmit,w
  5759  0316  00A7               	movwf	I2C2_Transmit@result
  5760  0317                     l3467:	
  5761                           ;I2C2.c: 80: }
  5762                           ;I2C2.c: 81: }
  5763                           ;I2C2.c: 82: }
  5764                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5765                           
  5766  0317  3005               	movlw	5
  5767  0318  0024               	movlb	4	; select bank4
  5768  0319  051C               	andwf	28,w	;volatile
  5769  031A  0020               	movlb	0	; select bank0
  5770  031B  00A2               	movwf	??_I2C2_Transmit
  5771  031C  0024               	movlb	4	; select bank4
  5772  031D  081E               	movf	30,w	;volatile
  5773  031E  391F               	andlw	31
  5774  031F  0020               	movlb	0	; select bank0
  5775  0320  0422               	iorwf	??_I2C2_Transmit,w
  5776  0321  1D03               	btfss	3,2
  5777  0322  2B17               	goto	l3467
  5778                           
  5779                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  5780  0323  0024               	movlb	4	; select bank4
  5781  0324  151E               	bsf	30,2	;volatile
  5782                           
  5783                           ;I2C2.c: 86: break;
  5784  0325  2B54               	goto	l3487
  5785  0326                     l246:	
  5786                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  5787                           
  5788                           
  5789                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  5790  0326  0024               	movlb	4	; select bank4
  5791  0327  1D9C               	btfss	28,3	;volatile
  5792  0328  1E1C               	btfss	28,4	;volatile
  5793  0329  2B48               	goto	l3481
  5794                           
  5795                           ;I2C2.c: 90: {
  5796                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  5797  032A  0020               	movlb	0	; select bank0
  5798  032B  01A6               	clrf	I2C2_Transmit@i_316
  5799  032C                     l3477:	
  5800  032C  0821               	movf	I2C2_Transmit@size,w
  5801  032D  0226               	subwf	I2C2_Transmit@i_316,w
  5802  032E  1803               	btfsc	3,0
  5803  032F  2B43               	goto	l3479
  5804                           
  5805                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  5806  0330  0826               	movf	I2C2_Transmit@i_316,w
  5807  0331  0720               	addwf	I2C2_Transmit@pData,w
  5808  0332  00A2               	movwf	??_I2C2_Transmit
  5809  0333  0822               	movf	??_I2C2_Transmit,w
  5810  0334  0086               	movwf	6
  5811  0335  0187               	clrf	7
  5812  0336  0801               	movf	1,w
  5813  0337  00A3               	movwf	??_I2C2_Transmit+1
  5814  0338  0826               	movf	I2C2_Transmit@i_316,w
  5815  0339  3EA0               	addlw	(low (_I2C2_Config| 0))& (0+255)
  5816  033A  0086               	movwf	6
  5817  033B  0187               	clrf	7
  5818  033C  0823               	movf	??_I2C2_Transmit+1,w
  5819  033D  0081               	movwf	1
  5820  033E  3001               	movlw	1
  5821  033F  00A2               	movwf	??_I2C2_Transmit
  5822  0340  0822               	movf	??_I2C2_Transmit,w
  5823  0341  07A6               	addwf	I2C2_Transmit@i_316,f
  5824  0342  2B2C               	goto	l3477
  5825  0343                     l3479:	
  5826                           
  5827                           ;I2C2.c: 93: result = size;
  5828  0343  0821               	movf	I2C2_Transmit@size,w
  5829  0344  00A2               	movwf	??_I2C2_Transmit
  5830  0345  0822               	movf	??_I2C2_Transmit,w
  5831  0346  00A7               	movwf	I2C2_Transmit@result
  5832                           
  5833                           ;I2C2.c: 94: }
  5834  0347  2B54               	goto	l3487
  5835  0348                     l3481:	
  5836                           
  5837                           ;I2C2.c: 95: else
  5838                           ;I2C2.c: 96: result = 0;
  5839  0348  0020               	movlb	0	; select bank0
  5840  0349  01A7               	clrf	I2C2_Transmit@result
  5841                           
  5842                           ;I2C2.c: 98: }
  5843                           
  5844                           ;I2C2.c: 97: break;
  5845  034A  2B54               	goto	l3487
  5846  034B                     l3485:	
  5847  034B  0021               	movlb	1	; select bank1
  5848  034C  0832               	movf	(_I2C2_Config^(0+128)+18),w
  5849                           
  5850                           ; Switch size 1, requested type "space"
  5851                           ; Number of cases is 2, Range of values is 0 to 1
  5852                           ; switch strategies available:
  5853                           ; Name         Instructions Cycles
  5854                           ; simple_byte            7     4 (average)
  5855                           ; direct_byte           10     6 (fixed)
  5856                           ; jumptable            260     6 (fixed)
  5857                           ;	Chosen strategy is simple_byte
  5858  034D  3A00               	xorlw	0	; case 0
  5859  034E  1903               	skipnz
  5860  034F  2AC3               	goto	l3441
  5861  0350  3A01               	xorlw	1	; case 1
  5862  0351  1903               	skipnz
  5863  0352  2B26               	goto	l246
  5864  0353  2B54               	goto	l3487
  5865  0354                     l3487:	
  5866                           
  5867                           ;I2C2.c: 100: return result;
  5868  0354  0020               	movlb	0	; select bank0
  5869  0355  0827               	movf	I2C2_Transmit@result,w
  5870  0356  0008               	return
  5871  0357                     __end_of_I2C2_Transmit:	
  5872                           
  5873                           	psect	text21
  5874  0357                     __ptext21:	
  5875 ;; *************** function _I2C1_Transmit *****************
  5876 ;; Defined at:
  5877 ;;		line 52 in file "I2C1.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  address         1    wreg     unsigned char 
  5880 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  5881 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5882 ;;  size            1    1[BANK0 ] unsigned char 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  address         1    4[BANK0 ] unsigned char 
  5885 ;;  i               1    6[BANK0 ] unsigned char 
  5886 ;;  i               1    5[BANK0 ] unsigned char 
  5887 ;;  result          1    7[BANK0 ] char 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      char 
  5890 ;; Registers used:
  5891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5897 ;;      Params:         0       2       0       0       0       0
  5898 ;;      Locals:         0       4       0       0       0       0
  5899 ;;      Temps:          0       2       0       0       0       0
  5900 ;;      Totals:         0       8       0       0       0       0
  5901 ;;Total ram usage:        8 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    3
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_I2C_Transmit
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           
  5912                           ;psect for function _I2C1_Transmit
  5913  0357                     _I2C1_Transmit:	
  5914                           
  5915                           ;incstack = 0
  5916                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  5917                           ;I2C1_Transmit@address stored from wreg
  5918  0357  0020               	movlb	0	; select bank0
  5919  0358  00A4               	movwf	I2C1_Transmit@address
  5920                           
  5921                           ;I2C1.c: 54: int8_t result;
  5922                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  5923  0359  2BE2               	goto	l3399
  5924  035A                     l3355:	
  5925                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5926                           
  5927                           ;I2C1.c: 57: {
  5928                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  5929                           
  5930  035A  3005               	movlw	5
  5931  035B  0024               	movlb	4	; select bank4
  5932  035C  0514               	andwf	20,w	;volatile
  5933  035D  0020               	movlb	0	; select bank0
  5934  035E  00A2               	movwf	??_I2C1_Transmit
  5935  035F  0024               	movlb	4	; select bank4
  5936  0360  0816               	movf	22,w	;volatile
  5937  0361  391F               	andlw	31
  5938  0362  0020               	movlb	0	; select bank0
  5939  0363  0422               	iorwf	??_I2C1_Transmit,w
  5940  0364  1D03               	btfss	3,2
  5941  0365  2B5A               	goto	l3355
  5942                           
  5943                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  5944  0366  0024               	movlb	4	; select bank4
  5945  0367  1416               	bsf	22,0	;volatile
  5946  0368                     l3357:	
  5947                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5948                           
  5949  0368  3005               	movlw	5
  5950  0369  0024               	movlb	4	; select bank4
  5951  036A  0514               	andwf	20,w	;volatile
  5952  036B  0020               	movlb	0	; select bank0
  5953  036C  00A2               	movwf	??_I2C1_Transmit
  5954  036D  0024               	movlb	4	; select bank4
  5955  036E  0816               	movf	22,w	;volatile
  5956  036F  391F               	andlw	31
  5957  0370  0020               	movlb	0	; select bank0
  5958  0371  0422               	iorwf	??_I2C1_Transmit,w
  5959  0372  1D03               	btfss	3,2
  5960  0373  2B68               	goto	l3357
  5961                           
  5962                           ;I2C1.c: 63: SSP1BUF = address << 1;
  5963  0374  3524               	lslf	I2C1_Transmit@address,w
  5964  0375  0024               	movlb	4	; select bank4
  5965  0376  0091               	movwf	17	;volatile
  5966  0377                     l91:	
  5967                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  5968                           
  5969  0377  1914               	btfsc	20,2	;volatile
  5970  0378  2B77               	goto	l91
  5971                           
  5972                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  5973  0379  3000               	movlw	0
  5974  037A  1B16               	btfsc	22,6	;volatile
  5975  037B  3001               	movlw	1
  5976  037C  0020               	movlb	0	; select bank0
  5977  037D  00A7               	movwf	I2C1_Transmit@result
  5978                           
  5979                           ;I2C1.c: 67: if (!result)
  5980  037E  0827               	movf	I2C1_Transmit@result,w
  5981  037F  1D03               	btfss	3,2
  5982  0380  2BAE               	goto	l3381
  5983                           
  5984                           ;I2C1.c: 68: {
  5985                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  5986  0381  01A5               	clrf	I2C1_Transmit@i
  5987  0382  2B87               	goto	l3379
  5988  0383                     l3377:	
  5989                           ;I2C1.c: 79: break;
  5990                           
  5991  0383  3001               	movlw	1
  5992  0384  00A2               	movwf	??_I2C1_Transmit
  5993  0385  0822               	movf	??_I2C1_Transmit,w
  5994  0386  07A5               	addwf	I2C1_Transmit@i,f
  5995  0387                     l3379:	
  5996  0387  0821               	movf	I2C1_Transmit@size,w
  5997  0388  0225               	subwf	I2C1_Transmit@i,w
  5998  0389  1803               	btfsc	3,0
  5999  038A  2BAE               	goto	l3381
  6000  038B                     l3367:	
  6001                           ;I2C1.c: 70: {
  6002                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6003                           
  6004  038B  3005               	movlw	5
  6005  038C  0024               	movlb	4	; select bank4
  6006  038D  0514               	andwf	20,w	;volatile
  6007  038E  0020               	movlb	0	; select bank0
  6008  038F  00A2               	movwf	??_I2C1_Transmit
  6009  0390  0024               	movlb	4	; select bank4
  6010  0391  0816               	movf	22,w	;volatile
  6011  0392  391F               	andlw	31
  6012  0393  0020               	movlb	0	; select bank0
  6013  0394  0422               	iorwf	??_I2C1_Transmit,w
  6014  0395  1D03               	btfss	3,2
  6015  0396  2B8B               	goto	l3367
  6016                           
  6017                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  6018  0397  0825               	movf	I2C1_Transmit@i,w
  6019  0398  0720               	addwf	I2C1_Transmit@pData,w
  6020  0399  00A2               	movwf	??_I2C1_Transmit
  6021  039A  0822               	movf	??_I2C1_Transmit,w
  6022  039B  0086               	movwf	6
  6023  039C  0187               	clrf	7
  6024  039D  0801               	movf	1,w
  6025  039E  0024               	movlb	4	; select bank4
  6026  039F  0091               	movwf	17	;volatile
  6027  03A0                     l100:	
  6028                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  6029                           
  6030  03A0  1914               	btfsc	20,2	;volatile
  6031  03A1  2BA0               	goto	l100
  6032                           
  6033                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  6034  03A2  3000               	movlw	0
  6035  03A3  1B16               	btfsc	22,6	;volatile
  6036  03A4  3001               	movlw	1
  6037  03A5  0020               	movlb	0	; select bank0
  6038  03A6  00A7               	movwf	I2C1_Transmit@result
  6039                           
  6040                           ;I2C1.c: 76: if (result)
  6041  03A7  0827               	movf	I2C1_Transmit@result,w
  6042  03A8  1903               	btfsc	3,2
  6043  03A9  2B83               	goto	l3377
  6044                           
  6045                           ;I2C1.c: 77: {
  6046                           ;I2C1.c: 78: result = 2;
  6047  03AA  3002               	movlw	2
  6048  03AB  00A2               	movwf	??_I2C1_Transmit
  6049  03AC  0822               	movf	??_I2C1_Transmit,w
  6050  03AD  00A7               	movwf	I2C1_Transmit@result
  6051  03AE                     l3381:	
  6052                           ;I2C1.c: 80: }
  6053                           ;I2C1.c: 81: }
  6054                           ;I2C1.c: 82: }
  6055                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6056                           
  6057  03AE  3005               	movlw	5
  6058  03AF  0024               	movlb	4	; select bank4
  6059  03B0  0514               	andwf	20,w	;volatile
  6060  03B1  0020               	movlb	0	; select bank0
  6061  03B2  00A2               	movwf	??_I2C1_Transmit
  6062  03B3  0024               	movlb	4	; select bank4
  6063  03B4  0816               	movf	22,w	;volatile
  6064  03B5  391F               	andlw	31
  6065  03B6  0020               	movlb	0	; select bank0
  6066  03B7  0422               	iorwf	??_I2C1_Transmit,w
  6067  03B8  1D03               	btfss	3,2
  6068  03B9  2BAE               	goto	l3381
  6069                           
  6070                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  6071  03BA  0024               	movlb	4	; select bank4
  6072  03BB  1516               	bsf	22,2	;volatile
  6073                           
  6074                           ;I2C1.c: 86: break;
  6075  03BC  2BEB               	goto	l3401
  6076  03BD                     l109:	
  6077                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  6078                           
  6079                           
  6080                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  6081  03BD  0024               	movlb	4	; select bank4
  6082  03BE  1D94               	btfss	20,3	;volatile
  6083  03BF  1E14               	btfss	20,4	;volatile
  6084  03C0  2BDF               	goto	l3395
  6085                           
  6086                           ;I2C1.c: 90: {
  6087                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  6088  03C1  0020               	movlb	0	; select bank0
  6089  03C2  01A6               	clrf	I2C1_Transmit@i_172
  6090  03C3                     l3391:	
  6091  03C3  0821               	movf	I2C1_Transmit@size,w
  6092  03C4  0226               	subwf	I2C1_Transmit@i_172,w
  6093  03C5  1803               	btfsc	3,0
  6094  03C6  2BDA               	goto	l3393
  6095                           
  6096                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  6097  03C7  0826               	movf	I2C1_Transmit@i_172,w
  6098  03C8  0720               	addwf	I2C1_Transmit@pData,w
  6099  03C9  00A2               	movwf	??_I2C1_Transmit
  6100  03CA  0822               	movf	??_I2C1_Transmit,w
  6101  03CB  0086               	movwf	6
  6102  03CC  0187               	clrf	7
  6103  03CD  0801               	movf	1,w
  6104  03CE  00A3               	movwf	??_I2C1_Transmit+1
  6105  03CF  0826               	movf	I2C1_Transmit@i_172,w
  6106  03D0  3EB3               	addlw	(low (_I2C1_Config| 0))& (0+255)
  6107  03D1  0086               	movwf	6
  6108  03D2  0187               	clrf	7
  6109  03D3  0823               	movf	??_I2C1_Transmit+1,w
  6110  03D4  0081               	movwf	1
  6111  03D5  3001               	movlw	1
  6112  03D6  00A2               	movwf	??_I2C1_Transmit
  6113  03D7  0822               	movf	??_I2C1_Transmit,w
  6114  03D8  07A6               	addwf	I2C1_Transmit@i_172,f
  6115  03D9  2BC3               	goto	l3391
  6116  03DA                     l3393:	
  6117                           
  6118                           ;I2C1.c: 93: result = size;
  6119  03DA  0821               	movf	I2C1_Transmit@size,w
  6120  03DB  00A2               	movwf	??_I2C1_Transmit
  6121  03DC  0822               	movf	??_I2C1_Transmit,w
  6122  03DD  00A7               	movwf	I2C1_Transmit@result
  6123                           
  6124                           ;I2C1.c: 94: }
  6125  03DE  2BEB               	goto	l3401
  6126  03DF                     l3395:	
  6127                           
  6128                           ;I2C1.c: 95: else
  6129                           ;I2C1.c: 96: result = 0;
  6130  03DF  0020               	movlb	0	; select bank0
  6131  03E0  01A7               	clrf	I2C1_Transmit@result
  6132                           
  6133                           ;I2C1.c: 98: }
  6134                           
  6135                           ;I2C1.c: 97: break;
  6136  03E1  2BEB               	goto	l3401
  6137  03E2                     l3399:	
  6138  03E2  0021               	movlb	1	; select bank1
  6139  03E3  0845               	movf	(_I2C1_Config^(0+128)+18),w
  6140                           
  6141                           ; Switch size 1, requested type "space"
  6142                           ; Number of cases is 2, Range of values is 0 to 1
  6143                           ; switch strategies available:
  6144                           ; Name         Instructions Cycles
  6145                           ; simple_byte            7     4 (average)
  6146                           ; direct_byte           10     6 (fixed)
  6147                           ; jumptable            260     6 (fixed)
  6148                           ;	Chosen strategy is simple_byte
  6149  03E4  3A00               	xorlw	0	; case 0
  6150  03E5  1903               	skipnz
  6151  03E6  2B5A               	goto	l3355
  6152  03E7  3A01               	xorlw	1	; case 1
  6153  03E8  1903               	skipnz
  6154  03E9  2BBD               	goto	l109
  6155  03EA  2BEB               	goto	l3401
  6156  03EB                     l3401:	
  6157                           
  6158                           ;I2C1.c: 100: return result;
  6159  03EB  0020               	movlb	0	; select bank0
  6160  03EC  0827               	movf	I2C1_Transmit@result,w
  6161  03ED  0008               	return
  6162  03EE                     __end_of_I2C1_Transmit:	
  6163                           
  6164                           	psect	text22
  6165  0FD6                     __ptext22:	
  6166 ;; *************** function _I2C_Init *****************
  6167 ;; Defined at:
  6168 ;;		line 6 in file "I2C_Common.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;  I2Cx            1    wreg     enum E3164
  6171 ;;  address         1    5[BANK0 ] unsigned char 
  6172 ;;  mode            1    6[BANK0 ] enum E3155
  6173 ;;  Speed           1    7[BANK0 ] enum E3159
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;  I2Cx            1   10[BANK0 ] enum E3164
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  1    wreg      void 
  6178 ;; Registers used:
  6179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6185 ;;      Params:         0       3       0       0       0       0
  6186 ;;      Locals:         0       1       0       0       0       0
  6187 ;;      Temps:          0       2       0       0       0       0
  6188 ;;      Totals:         0       6       0       0       0       0
  6189 ;;Total ram usage:        6 bytes
  6190 ;; Hardware stack levels used:    1
  6191 ;; Hardware stack levels required when called:    5
  6192 ;; This function calls:
  6193 ;;		_I2C1_Setting
  6194 ;;		_I2C2_Setting
  6195 ;; This function is called by:
  6196 ;;		_DAC_Initialize
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           
  6201                           ;psect for function _I2C_Init
  6202  0FD6                     _I2C_Init:	
  6203                           
  6204                           ;incstack = 0
  6205                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6206                           ;I2C_Init@I2Cx stored from wreg
  6207  0FD6  0020               	movlb	0	; select bank0
  6208  0FD7  00AA               	movwf	I2C_Init@I2Cx
  6209                           
  6210                           ;I2C_Common.c: 8: switch(I2Cx)
  6211  0FD8  2FF4               	goto	l3525
  6212  0FD9                     l3519:	
  6213                           ;I2C_Common.c: 9: {
  6214                           ;I2C_Common.c: 10: case I2C1_MODULE:
  6215                           
  6216                           
  6217                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  6218  0FD9  0826               	movf	I2C_Init@mode,w
  6219  0FDA  00A8               	movwf	??_I2C_Init
  6220  0FDB  0828               	movf	??_I2C_Init,w
  6221  0FDC  00A1               	movwf	I2C1_Setting@mode
  6222  0FDD  0827               	movf	I2C_Init@Speed,w
  6223  0FDE  00A9               	movwf	??_I2C_Init+1
  6224  0FDF  0829               	movf	??_I2C_Init+1,w
  6225  0FE0  00A2               	movwf	I2C1_Setting@Speed
  6226  0FE1  0825               	movf	I2C_Init@address,w
  6227  0FE2  3186  265C  318F   	fcall	_I2C1_Setting
  6228                           
  6229                           ;I2C_Common.c: 12: break;
  6230  0FE5  2FFD               	goto	l338
  6231  0FE6                     l3521:	
  6232                           ;I2C_Common.c: 14: case I2C2_MODULE:
  6233                           
  6234                           
  6235                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  6236  0FE6  0020               	movlb	0	; select bank0
  6237  0FE7  0826               	movf	I2C_Init@mode,w
  6238  0FE8  00A8               	movwf	??_I2C_Init
  6239  0FE9  0828               	movf	??_I2C_Init,w
  6240  0FEA  00A1               	movwf	I2C2_Setting@mode
  6241  0FEB  0827               	movf	I2C_Init@Speed,w
  6242  0FEC  00A9               	movwf	??_I2C_Init+1
  6243  0FED  0829               	movf	??_I2C_Init+1,w
  6244  0FEE  00A2               	movwf	I2C2_Setting@Speed
  6245  0FEF  0825               	movf	I2C_Init@address,w
  6246  0FF0  3186  2618  318F   	fcall	_I2C2_Setting
  6247                           
  6248                           ;I2C_Common.c: 17: }
  6249                           
  6250                           ;I2C_Common.c: 16: break;
  6251  0FF3  2FFD               	goto	l338
  6252  0FF4                     l3525:	
  6253  0FF4  0020               	movlb	0	; select bank0
  6254  0FF5  082A               	movf	I2C_Init@I2Cx,w
  6255                           
  6256                           ; Switch size 1, requested type "space"
  6257                           ; Number of cases is 2, Range of values is 0 to 1
  6258                           ; switch strategies available:
  6259                           ; Name         Instructions Cycles
  6260                           ; simple_byte            7     4 (average)
  6261                           ; direct_byte           10     6 (fixed)
  6262                           ; jumptable            260     6 (fixed)
  6263                           ;	Chosen strategy is simple_byte
  6264  0FF6  3A00               	xorlw	0	; case 0
  6265  0FF7  1903               	skipnz
  6266  0FF8  2FD9               	goto	l3519
  6267  0FF9  3A01               	xorlw	1	; case 1
  6268  0FFA  1903               	skipnz
  6269  0FFB  2FE6               	goto	l3521
  6270  0FFC  2FFD               	goto	l338
  6271  0FFD                     l338:	
  6272                           
  6273                           ;I2C_Common.c: 19: PEIE = 1;
  6274  0FFD  170B               	bsf	11,6	;volatile
  6275                           
  6276                           ;I2C_Common.c: 20: GIE = 1;
  6277  0FFE  178B               	bsf	11,7	;volatile
  6278  0FFF  0008               	return
  6279  1000                     __end_of_I2C_Init:	
  6280                           
  6281                           	psect	text23
  6282  0618                     __ptext23:	
  6283 ;; *************** function _I2C2_Setting *****************
  6284 ;; Defined at:
  6285 ;;		line 15 in file "I2C2.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  address         1    wreg     unsigned char 
  6288 ;;  mode            1    1[BANK0 ] enum E3155
  6289 ;;  Speed           1    2[BANK0 ] enum E3159
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  address         1    4[BANK0 ] unsigned char 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      void 
  6294 ;; Registers used:
  6295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6301 ;;      Params:         0       2       0       0       0       0
  6302 ;;      Locals:         0       1       0       0       0       0
  6303 ;;      Temps:          0       1       0       0       0       0
  6304 ;;      Totals:         0       4       0       0       0       0
  6305 ;;Total ram usage:        4 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    4
  6308 ;; This function calls:
  6309 ;;		_I2C2_PinInit
  6310 ;; This function is called by:
  6311 ;;		_I2C_Init
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           
  6316                           ;psect for function _I2C2_Setting
  6317  0618                     _I2C2_Setting:	
  6318                           
  6319                           ;incstack = 0
  6320                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6321                           ;I2C2_Setting@address stored from wreg
  6322  0618  0020               	movlb	0	; select bank0
  6323  0619  00A4               	movwf	I2C2_Setting@address
  6324                           
  6325                           ;I2C2.c: 17: I2C2_PinInit();
  6326  061A  318E  2670  3186   	fcall	_I2C2_PinInit
  6327                           
  6328                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  6329  061D  0020               	movlb	0	; select bank0
  6330  061E  0821               	movf	I2C2_Setting@mode,w
  6331  061F  00A3               	movwf	??_I2C2_Setting
  6332  0620  0823               	movf	??_I2C2_Setting,w
  6333  0621  0021               	movlb	1	; select bank1
  6334  0622  00B2               	movwf	(_I2C2_Config^(0+128)+18)
  6335                           
  6336                           ;I2C2.c: 20: switch(mode)
  6337  0623  2E4C               	goto	l3437
  6338  0624                     l211:	
  6339                           ;I2C2.c: 21: {
  6340                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  6341                           
  6342                           
  6343                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  6344  0624  0024               	movlb	4	; select bank4
  6345  0625  159D               	bsf	29,3	;volatile
  6346                           
  6347                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6348  0626  0020               	movlb	0	; select bank0
  6349  0627  0822               	movf	I2C2_Setting@Speed,w
  6350  0628  1D03               	btfss	3,2
  6351  0629  2E2E               	goto	l3415
  6352                           
  6353                           ;I2C2.c: 25: {
  6354                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  6355  062A  0024               	movlb	4	; select bank4
  6356  062B  179C               	bsf	28,7	;volatile
  6357                           
  6358                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  6359  062C  304F               	movlw	79
  6360  062D  2E38               	goto	L3
  6361  062E                     l3415:	
  6362                           ;I2C2.c: 28: }
  6363                           
  6364                           
  6365                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6366  062E  0020               	movlb	0	; select bank0
  6367  062F  0322               	decf	I2C2_Setting@Speed,w
  6368  0630  1D03               	btfss	3,2
  6369  0631  2E39               	goto	l3421
  6370                           
  6371                           ;I2C2.c: 30: {
  6372                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  6373  0632  307F               	movlw	127
  6374  0633  00A3               	movwf	??_I2C2_Setting
  6375  0634  0823               	movf	??_I2C2_Setting,w
  6376  0635  0024               	movlb	4	; select bank4
  6377  0636  059C               	andwf	28,f	;volatile
  6378                           
  6379                           ;I2C2.c: 32: SSP2ADD = 0x13;
  6380  0637  3013               	movlw	19
  6381  0638                     L3:	
  6382  0638  009A               	movwf	26	;volatile
  6383  0639                     l3421:	
  6384                           
  6385                           ;I2C2.c: 33: }
  6386                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  6387  0639  0024               	movlb	4	; select bank4
  6388  063A  2E4A               	goto	l3433
  6389  063B                     l3423:	
  6390                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  6391                           
  6392                           ;I2C2.c: 35: break;
  6393                           
  6394                           
  6395                           ;I2C2.c: 38: SSP2STAT = 0x00;
  6396  063B  0024               	movlb	4	; select bank4
  6397  063C  019C               	clrf	28	;volatile
  6398                           
  6399                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  6400  063D  3006               	movlw	6
  6401  063E  0020               	movlb	0	; select bank0
  6402  063F  00A3               	movwf	??_I2C2_Setting
  6403  0640  0823               	movf	??_I2C2_Setting,w
  6404  0641  0024               	movlb	4	; select bank4
  6405  0642  049D               	iorwf	29,f	;volatile
  6406                           
  6407                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  6408  0643  141E               	bsf	30,0	;volatile
  6409                           
  6410                           ;I2C2.c: 41: SSP2ADD = address << 1;
  6411  0644  0020               	movlb	0	; select bank0
  6412  0645  3524               	lslf	I2C2_Setting@address,w
  6413  0646  0024               	movlb	4	; select bank4
  6414  0647  009A               	movwf	26	;volatile
  6415                           
  6416                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  6417  0648  30FE               	movlw	254
  6418  0649  009B               	movwf	27	;volatile
  6419  064A                     l3433:	
  6420                           
  6421                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  6422  064A  169D               	bsf	29,5	;volatile
  6423                           
  6424                           ;I2C2.c: 45: }
  6425                           
  6426                           ;I2C2.c: 44: break;
  6427  064B  2E55               	goto	l215
  6428  064C                     l3437:	
  6429  064C  0020               	movlb	0	; select bank0
  6430  064D  0821               	movf	I2C2_Setting@mode,w
  6431                           
  6432                           ; Switch size 1, requested type "space"
  6433                           ; Number of cases is 2, Range of values is 0 to 1
  6434                           ; switch strategies available:
  6435                           ; Name         Instructions Cycles
  6436                           ; simple_byte            7     4 (average)
  6437                           ; direct_byte           10     6 (fixed)
  6438                           ; jumptable            260     6 (fixed)
  6439                           ;	Chosen strategy is simple_byte
  6440  064E  3A00               	xorlw	0	; case 0
  6441  064F  1903               	skipnz
  6442  0650  2E24               	goto	l211
  6443  0651  3A01               	xorlw	1	; case 1
  6444  0652  1903               	skipnz
  6445  0653  2E3B               	goto	l3423
  6446  0654  2E55               	goto	l215
  6447  0655                     l215:	
  6448                           
  6449                           ;I2C2.c: 46: SSP2IE = 1;
  6450  0655  0021               	movlb	1	; select bank1
  6451  0656  1414               	bsf	20,0	;volatile
  6452                           
  6453                           ;I2C2.c: 47: BCL2IE = 1;
  6454  0657  1494               	bsf	20,1	;volatile
  6455                           
  6456                           ;I2C2.c: 48: SSP2IF = 0;
  6457  0658  0020               	movlb	0	; select bank0
  6458  0659  1014               	bcf	20,0	;volatile
  6459                           
  6460                           ;I2C2.c: 49: BCL2IF = 0;
  6461  065A  1094               	bcf	20,1	;volatile
  6462  065B  0008               	return
  6463  065C                     __end_of_I2C2_Setting:	
  6464                           
  6465                           	psect	text24
  6466  0E70                     __ptext24:	
  6467 ;; *************** function _I2C2_PinInit *****************
  6468 ;; Defined at:
  6469 ;;		line 9 in file "I2C2.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;		None
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  1    wreg      void 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6483 ;;      Params:         0       0       0       0       0       0
  6484 ;;      Locals:         0       0       0       0       0       0
  6485 ;;      Temps:          0       1       0       0       0       0
  6486 ;;      Totals:         0       1       0       0       0       0
  6487 ;;Total ram usage:        1 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    3
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		_I2C2_Setting
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           
  6498                           ;psect for function _I2C2_PinInit
  6499  0E70                     _I2C2_PinInit:	
  6500                           
  6501                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  6502                           
  6503                           ;incstack = 0
  6504                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  6505  0E70  3024               	movlw	36
  6506  0E71  0020               	movlb	0	; select bank0
  6507  0E72  00A0               	movwf	??_I2C2_PinInit
  6508  0E73  0820               	movf	??_I2C2_PinInit,w
  6509  0E74  0021               	movlb	1	; select bank1
  6510  0E75  048D               	iorwf	13,f	;volatile
  6511                           
  6512                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  6513  0E76  30DB               	movlw	219
  6514  0E77  0020               	movlb	0	; select bank0
  6515  0E78  00A0               	movwf	??_I2C2_PinInit
  6516  0E79  0820               	movf	??_I2C2_PinInit,w
  6517  0E7A  0023               	movlb	3	; select bank3
  6518  0E7B  058D               	andwf	13,f	;volatile
  6519  0E7C  0008               	return
  6520  0E7D                     __end_of_I2C2_PinInit:	
  6521                           
  6522                           	psect	text25
  6523  065C                     __ptext25:	
  6524 ;; *************** function _I2C1_Setting *****************
  6525 ;; Defined at:
  6526 ;;		line 15 in file "I2C1.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  address         1    wreg     unsigned char 
  6529 ;;  mode            1    1[BANK0 ] enum E3155
  6530 ;;  Speed           1    2[BANK0 ] enum E3159
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  address         1    4[BANK0 ] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  1    wreg      void 
  6535 ;; Registers used:
  6536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6542 ;;      Params:         0       2       0       0       0       0
  6543 ;;      Locals:         0       1       0       0       0       0
  6544 ;;      Temps:          0       1       0       0       0       0
  6545 ;;      Totals:         0       4       0       0       0       0
  6546 ;;Total ram usage:        4 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; Hardware stack levels required when called:    4
  6549 ;; This function calls:
  6550 ;;		_I2C1_PinInit
  6551 ;; This function is called by:
  6552 ;;		_I2C_Init
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           
  6557                           ;psect for function _I2C1_Setting
  6558  065C                     _I2C1_Setting:	
  6559                           
  6560                           ;incstack = 0
  6561                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6562                           ;I2C1_Setting@address stored from wreg
  6563  065C  0020               	movlb	0	; select bank0
  6564  065D  00A4               	movwf	I2C1_Setting@address
  6565                           
  6566                           ;I2C1.c: 17: I2C1_PinInit();
  6567  065E  318E  2663  3186   	fcall	_I2C1_PinInit
  6568                           
  6569                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  6570  0661  0020               	movlb	0	; select bank0
  6571  0662  0821               	movf	I2C1_Setting@mode,w
  6572  0663  00A3               	movwf	??_I2C1_Setting
  6573  0664  0823               	movf	??_I2C1_Setting,w
  6574  0665  0021               	movlb	1	; select bank1
  6575  0666  00C5               	movwf	(_I2C1_Config^(0+128)+18)
  6576                           
  6577                           ;I2C1.c: 20: switch(mode)
  6578  0667  2E90               	goto	l3351
  6579  0668                     l74:	
  6580                           ;I2C1.c: 21: {
  6581                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  6582                           
  6583                           
  6584                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  6585  0668  0024               	movlb	4	; select bank4
  6586  0669  1595               	bsf	21,3	;volatile
  6587                           
  6588                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6589  066A  0020               	movlb	0	; select bank0
  6590  066B  0822               	movf	I2C1_Setting@Speed,w
  6591  066C  1D03               	btfss	3,2
  6592  066D  2E72               	goto	l3329
  6593                           
  6594                           ;I2C1.c: 25: {
  6595                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  6596  066E  0024               	movlb	4	; select bank4
  6597  066F  1794               	bsf	20,7	;volatile
  6598                           
  6599                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  6600  0670  304F               	movlw	79
  6601  0671  2E7C               	goto	L4
  6602  0672                     l3329:	
  6603                           ;I2C1.c: 28: }
  6604                           
  6605                           
  6606                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6607  0672  0020               	movlb	0	; select bank0
  6608  0673  0322               	decf	I2C1_Setting@Speed,w
  6609  0674  1D03               	btfss	3,2
  6610  0675  2E7D               	goto	l3335
  6611                           
  6612                           ;I2C1.c: 30: {
  6613                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  6614  0676  307F               	movlw	127
  6615  0677  00A3               	movwf	??_I2C1_Setting
  6616  0678  0823               	movf	??_I2C1_Setting,w
  6617  0679  0024               	movlb	4	; select bank4
  6618  067A  0594               	andwf	20,f	;volatile
  6619                           
  6620                           ;I2C1.c: 32: SSP1ADD = 0x13;
  6621  067B  3013               	movlw	19
  6622  067C                     L4:	
  6623  067C  0092               	movwf	18	;volatile
  6624  067D                     l3335:	
  6625                           
  6626                           ;I2C1.c: 33: }
  6627                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  6628  067D  0024               	movlb	4	; select bank4
  6629  067E  2E8E               	goto	l3347
  6630  067F                     l3337:	
  6631                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  6632                           
  6633                           ;I2C1.c: 35: break;
  6634                           
  6635                           
  6636                           ;I2C1.c: 38: SSP1STAT = 0x00;
  6637  067F  0024               	movlb	4	; select bank4
  6638  0680  0194               	clrf	20	;volatile
  6639                           
  6640                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  6641  0681  3006               	movlw	6
  6642  0682  0020               	movlb	0	; select bank0
  6643  0683  00A3               	movwf	??_I2C1_Setting
  6644  0684  0823               	movf	??_I2C1_Setting,w
  6645  0685  0024               	movlb	4	; select bank4
  6646  0686  0495               	iorwf	21,f	;volatile
  6647                           
  6648                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  6649  0687  1416               	bsf	22,0	;volatile
  6650                           
  6651                           ;I2C1.c: 41: SSP1ADD = address << 1;
  6652  0688  0020               	movlb	0	; select bank0
  6653  0689  3524               	lslf	I2C1_Setting@address,w
  6654  068A  0024               	movlb	4	; select bank4
  6655  068B  0092               	movwf	18	;volatile
  6656                           
  6657                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  6658  068C  30FE               	movlw	254
  6659  068D  0093               	movwf	19	;volatile
  6660  068E                     l3347:	
  6661                           
  6662                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  6663  068E  1695               	bsf	21,5	;volatile
  6664                           
  6665                           ;I2C1.c: 45: }
  6666                           
  6667                           ;I2C1.c: 44: break;
  6668  068F  2E99               	goto	l78
  6669  0690                     l3351:	
  6670  0690  0020               	movlb	0	; select bank0
  6671  0691  0821               	movf	I2C1_Setting@mode,w
  6672                           
  6673                           ; Switch size 1, requested type "space"
  6674                           ; Number of cases is 2, Range of values is 0 to 1
  6675                           ; switch strategies available:
  6676                           ; Name         Instructions Cycles
  6677                           ; simple_byte            7     4 (average)
  6678                           ; direct_byte           10     6 (fixed)
  6679                           ; jumptable            260     6 (fixed)
  6680                           ;	Chosen strategy is simple_byte
  6681  0692  3A00               	xorlw	0	; case 0
  6682  0693  1903               	skipnz
  6683  0694  2E68               	goto	l74
  6684  0695  3A01               	xorlw	1	; case 1
  6685  0696  1903               	skipnz
  6686  0697  2E7F               	goto	l3337
  6687  0698  2E99               	goto	l78
  6688  0699                     l78:	
  6689                           
  6690                           ;I2C1.c: 46: SSP1IE = 1;
  6691  0699  0021               	movlb	1	; select bank1
  6692  069A  1591               	bsf	17,3	;volatile
  6693                           
  6694                           ;I2C1.c: 47: BCL1IE = 1;
  6695  069B  1592               	bsf	18,3	;volatile
  6696                           
  6697                           ;I2C1.c: 48: SSP1IF = 0;
  6698  069C  0020               	movlb	0	; select bank0
  6699  069D  1191               	bcf	17,3	;volatile
  6700                           
  6701                           ;I2C1.c: 49: BCL1IF = 0;
  6702  069E  1192               	bcf	18,3	;volatile
  6703  069F  0008               	return
  6704  06A0                     __end_of_I2C1_Setting:	
  6705                           
  6706                           	psect	text26
  6707  0E63                     __ptext26:	
  6708 ;; *************** function _I2C1_PinInit *****************
  6709 ;; Defined at:
  6710 ;;		line 9 in file "I2C1.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;		None
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6724 ;;      Params:         0       0       0       0       0       0
  6725 ;;      Locals:         0       0       0       0       0       0
  6726 ;;      Temps:          0       1       0       0       0       0
  6727 ;;      Totals:         0       1       0       0       0       0
  6728 ;;Total ram usage:        1 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    3
  6731 ;; This function calls:
  6732 ;;		Nothing
  6733 ;; This function is called by:
  6734 ;;		_I2C1_Setting
  6735 ;; This function uses a non-reentrant model
  6736 ;;
  6737                           
  6738                           
  6739                           ;psect for function _I2C1_PinInit
  6740  0E63                     _I2C1_PinInit:	
  6741                           
  6742                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  6743                           
  6744                           ;incstack = 0
  6745                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  6746  0E63  3012               	movlw	18
  6747  0E64  0020               	movlb	0	; select bank0
  6748  0E65  00A0               	movwf	??_I2C1_PinInit
  6749  0E66  0820               	movf	??_I2C1_PinInit,w
  6750  0E67  0021               	movlb	1	; select bank1
  6751  0E68  048D               	iorwf	13,f	;volatile
  6752                           
  6753                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  6754  0E69  30ED               	movlw	237
  6755  0E6A  0020               	movlb	0	; select bank0
  6756  0E6B  00A0               	movwf	??_I2C1_PinInit
  6757  0E6C  0820               	movf	??_I2C1_PinInit,w
  6758  0E6D  0023               	movlb	3	; select bank3
  6759  0E6E  058D               	andwf	13,f	;volatile
  6760  0E6F  0008               	return
  6761  0E70                     __end_of_I2C1_PinInit:	
  6762                           
  6763                           	psect	text27
  6764  0FAE                     __ptext27:	
  6765 ;; *************** function _Buzzer_Init *****************
  6766 ;; Defined at:
  6767 ;;		line 11 in file "Buzzer.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6781 ;;      Params:         0       0       0       0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0
  6783 ;;      Temps:          0       1       0       0       0       0
  6784 ;;      Totals:         0       1       0       0       0       0
  6785 ;;Total ram usage:        1 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    3
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_main
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           
  6796                           ;psect for function _Buzzer_Init
  6797  0FAE                     _Buzzer_Init:	
  6798                           
  6799                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  6800                           
  6801                           ;incstack = 0
  6802                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  6803  0FAE  307F               	movlw	127
  6804  0FAF  0020               	movlb	0	; select bank0
  6805  0FB0  00A0               	movwf	??_Buzzer_Init
  6806  0FB1  0820               	movf	??_Buzzer_Init,w
  6807  0FB2  0021               	movlb	1	; select bank1
  6808  0FB3  058C               	andwf	12,f	;volatile
  6809                           
  6810                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  6811  0FB4  307F               	movlw	127
  6812  0FB5  0020               	movlb	0	; select bank0
  6813  0FB6  00A0               	movwf	??_Buzzer_Init
  6814  0FB7  0820               	movf	??_Buzzer_Init,w
  6815  0FB8  0023               	movlb	3	; select bank3
  6816  0FB9  058C               	andwf	12,f	;volatile
  6817                           
  6818                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  6819  0FBA  0022               	movlb	2	; select bank2
  6820  0FBB  159D               	bsf	29,3	;volatile
  6821                           
  6822                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  6823  0FBC  0020               	movlb	0	; select bank0
  6824  0FBD  081C               	movf	28,w	;volatile
  6825                           
  6826                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  6827  0FBE  149C               	bsf	28,1	;volatile
  6828                           
  6829                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  6830  0FBF  151C               	bsf	28,2	;volatile
  6831                           
  6832                           ;Buzzer.c: 21: TMR2 = 0x00;
  6833  0FC0  019A               	clrf	26	;volatile
  6834                           
  6835                           ;Buzzer.c: 22: PR2 = 0xFF;
  6836  0FC1  30FF               	movlw	255
  6837  0FC2  009B               	movwf	27	;volatile
  6838                           
  6839                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  6840  0FC3  303F               	movlw	63
  6841  0FC4  00A0               	movwf	??_Buzzer_Init
  6842  0FC5  0820               	movf	??_Buzzer_Init,w
  6843  0FC6  0025               	movlb	5	; select bank5
  6844  0FC7  059A               	andwf	26,f	;volatile
  6845                           
  6846                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  6847  0FC8  300C               	movlw	12
  6848  0FC9  0020               	movlb	0	; select bank0
  6849  0FCA  00A0               	movwf	??_Buzzer_Init
  6850  0FCB  0820               	movf	??_Buzzer_Init,w
  6851  0FCC  0025               	movlb	5	; select bank5
  6852  0FCD  049A               	iorwf	26,f	;volatile
  6853                           
  6854                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  6855  0FCE  30F3               	movlw	243
  6856  0FCF  0020               	movlb	0	; select bank0
  6857  0FD0  00A0               	movwf	??_Buzzer_Init
  6858  0FD1  0820               	movf	??_Buzzer_Init,w
  6859  0FD2  0025               	movlb	5	; select bank5
  6860  0FD3  059E               	andwf	30,f	;volatile
  6861                           
  6862                           ;Buzzer.c: 28: CCPR2L = 0x00;
  6863  0FD4  0198               	clrf	24	;volatile
  6864  0FD5  0008               	return
  6865  0FD6                     __end_of_Buzzer_Init:	
  6866                           
  6867                           	psect	text28
  6868  0F03                     __ptext28:	
  6869 ;; *************** function _Basic_Init *****************
  6870 ;; Defined at:
  6871 ;;		line 61 in file "main.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;		None
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      char 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6885 ;;      Params:         0       0       0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0       0
  6888 ;;      Totals:         0       0       0       0       0       0
  6889 ;;Total ram usage:        0 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    3
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_main
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           
  6900                           ;psect for function _Basic_Init
  6901  0F03                     _Basic_Init:	
  6902                           
  6903                           ;main.c: 63: OSCCON = 0xF0;
  6904                           
  6905                           ;incstack = 0
  6906                           ; Regs used in _Basic_Init: [wreg+status,2]
  6907  0F03  30F0               	movlw	240
  6908  0F04  0021               	movlb	1	; select bank1
  6909  0F05  0099               	movwf	25	;volatile
  6910                           
  6911                           ;main.c: 67: TRISA = 0x07;
  6912  0F06  3007               	movlw	7
  6913  0F07  008C               	movwf	12	;volatile
  6914                           
  6915                           ;main.c: 68: ANSELA = 0x07;
  6916  0F08  3007               	movlw	7
  6917  0F09  0023               	movlb	3	; select bank3
  6918  0F0A  008C               	movwf	12	;volatile
  6919                           
  6920                           ;main.c: 70: TRISB = 0x40;
  6921  0F0B  3040               	movlw	64
  6922  0F0C  0021               	movlb	1	; select bank1
  6923  0F0D  008D               	movwf	13	;volatile
  6924                           
  6925                           ;main.c: 71: ANSELB = 0x00;
  6926  0F0E  0023               	movlb	3	; select bank3
  6927  0F0F  018D               	clrf	13	;volatile
  6928                           
  6929                           ;main.c: 73: APFCON0 = 0x08;
  6930  0F10  3008               	movlw	8
  6931  0F11  0022               	movlb	2	; select bank2
  6932  0F12  009D               	movwf	29	;volatile
  6933                           
  6934                           ;main.c: 74: APFCON1 = 0x00;
  6935  0F13  019E               	clrf	30	;volatile
  6936                           
  6937                           ;main.c: 76: PORTA = 0x00;
  6938  0F14  0020               	movlb	0	; select bank0
  6939  0F15  018C               	clrf	12	;volatile
  6940                           
  6941                           ;main.c: 77: PORTB = 0x00;
  6942  0F16  018D               	clrf	13	;volatile
  6943  0F17  0008               	return
  6944  0F18                     __end_of_Basic_Init:	
  6945                           ;main.c: 79: return 0;
  6946                           ;	Return value of _Basic_Init is never used
  6947                           
  6948                           
  6949                           	psect	intentry
  6950  0004                     __pintentry:	
  6951 ;; *************** function _Handler *****************
  6952 ;; Defined at:
  6953 ;;		line 82 in file "main.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;		None
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;		None
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  1    wreg      void 
  6960 ;; Registers used:
  6961 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6967 ;;      Params:         0       0       0       0       0       0
  6968 ;;      Locals:         0       0       0       0       0       0
  6969 ;;      Temps:          1       0       0       0       0       0
  6970 ;;      Totals:         1       0       0       0       0       0
  6971 ;;Total ram usage:        1 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; Hardware stack levels required when called:    2
  6974 ;; This function calls:
  6975 ;;		_Buzzer_Handler
  6976 ;;		_CPSx_Read
  6977 ;;		_I2C_CommonInterrupt
  6978 ;;		_Timer1_Count10us
  6979 ;;		_Timer1_DetectAssignCount
  6980 ;;		_Timer4_Handler
  6981 ;;		_Timer6_Handler
  6982 ;;		_mTouch_IntervalDecrement
  6983 ;; This function is called by:
  6984 ;;		Interrupt level 1
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988  0004                     _Handler:	
  6989                           
  6990                           ;incstack = 0
  6991  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6992                           
  6993                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6994  0005  3180               	pagesel	$
  6995  0006  0020               	movlb	0	; select bank0
  6996  0007  087F               	movf	127,w
  6997  0008  00FB               	movwf	??_Handler
  6998                           
  6999                           ;main.c: 84: if(Timer6_Handler())
  7000  0009  318E  2658  3180   	fcall	_Timer6_Handler
  7001  000C  3A00               	xorlw	0
  7002  000D  1903               	skipnz
  7003  000E  2812               	goto	i1l3249
  7004                           
  7005                           ;main.c: 85: {
  7006                           ;main.c: 86: Timer1_Count10us();
  7007  000F  318E  2639  3180   	fcall	_Timer1_Count10us
  7008  0012                     i1l3249:	
  7009                           
  7010                           ;main.c: 87: }
  7011                           ;main.c: 88: if(Timer4_Handler())
  7012  0012  318E  264D  3180   	fcall	_Timer4_Handler
  7013  0015  3A00               	xorlw	0
  7014  0016  1903               	skipnz
  7015  0017  2821               	goto	i1l3257
  7016                           
  7017                           ;main.c: 89: {
  7018                           ;main.c: 90: CPSx_Read();
  7019  0018  318F  2789  3180   	fcall	_CPSx_Read
  7020                           
  7021                           ;main.c: 91: Buzzer_Handler();
  7022  001B  318E  26EE  3180   	fcall	_Buzzer_Handler
  7023                           
  7024                           ;main.c: 92: mTouch_IntervalDecrement();
  7025  001E  318E  2698  3180   	fcall	_mTouch_IntervalDecrement
  7026  0021                     i1l3257:	
  7027                           
  7028                           ;main.c: 93: }
  7029                           ;main.c: 94: if(Timer1_DetectAssignCount())
  7030  0021  318F  2718  3180   	fcall	_Timer1_DetectAssignCount
  7031  0024  3A00               	xorlw	0
  7032  0025  1903               	skipnz
  7033  0026  282A               	goto	i1l3261
  7034                           
  7035                           ;main.c: 95: LATA6 = !LATA6;
  7036  0027  3040               	movlw	64
  7037  0028  0022               	movlb	2	; select bank2
  7038  0029  068C               	xorwf	12,f
  7039  002A                     i1l3261:	
  7040                           
  7041                           ;main.c: 97: I2C_CommonInterrupt();
  7042  002A  318E  261E         	fcall	_I2C_CommonInterrupt
  7043  002C  087B               	movf	??_Handler,w
  7044  002D  0020               	movlb	0	; select bank0
  7045  002E  00FF               	movwf	127
  7046  002F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7047  0030  0009               	retfie
  7048  0031                     __end_of_Handler:	
  7049                           
  7050                           	psect	text30
  7051  0E98                     __ptext30:	
  7052 ;; *************** function _mTouch_IntervalDecrement *****************
  7053 ;; Defined at:
  7054 ;;		line 100 in file "main.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;		None
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;		None
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  1    wreg      void 
  7061 ;; Registers used:
  7062 ;;		wreg, status,2, status,0
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 0/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7068 ;;      Params:         0       0       0       0       0       0
  7069 ;;      Locals:         0       0       0       0       0       0
  7070 ;;      Temps:          0       0       0       0       0       0
  7071 ;;      Totals:         0       0       0       0       0       0
  7072 ;;Total ram usage:        0 bytes
  7073 ;; Hardware stack levels used:    1
  7074 ;; This function calls:
  7075 ;;		Nothing
  7076 ;; This function is called by:
  7077 ;;		_Handler
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           
  7082                           ;psect for function _mTouch_IntervalDecrement
  7083  0E98                     _mTouch_IntervalDecrement:	
  7084                           
  7085                           ;main.c: 102: if(mTouch_Interval[0]>0)
  7086                           
  7087                           ;incstack = 0
  7088                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  7089  0E98  0870               	movf	_mTouch_Interval,w
  7090  0E99  1903               	btfsc	3,2
  7091  0E9A  2E9D               	goto	i1l646
  7092                           
  7093                           ;main.c: 103: mTouch_Interval[0]--;
  7094  0E9B  3001               	movlw	1
  7095  0E9C  02F0               	subwf	_mTouch_Interval,f
  7096  0E9D                     i1l646:	
  7097                           
  7098                           ;main.c: 104: if(mTouch_Interval[1]>0)
  7099  0E9D  0871               	movf	_mTouch_Interval+1,w
  7100  0E9E  1903               	btfsc	3,2
  7101  0E9F  2EA2               	goto	i1l647
  7102                           
  7103                           ;main.c: 105: mTouch_Interval[1]--;
  7104  0EA0  3001               	movlw	1
  7105  0EA1  02F1               	subwf	_mTouch_Interval+1,f
  7106  0EA2                     i1l647:	
  7107                           
  7108                           ;main.c: 106: if(mTouch_Interval[2]>0)
  7109  0EA2  0872               	movf	_mTouch_Interval+2,w
  7110  0EA3  1903               	btfsc	3,2
  7111  0EA4  0008               	return
  7112                           
  7113                           ;main.c: 107: mTouch_Interval[2]--;
  7114  0EA5  3001               	movlw	1
  7115  0EA6  02F2               	subwf	_mTouch_Interval+2,f
  7116  0EA7  0008               	return
  7117  0EA8                     __end_of_mTouch_IntervalDecrement:	
  7118                           
  7119                           	psect	text31
  7120  0E58                     __ptext31:	
  7121 ;; *************** function _Timer6_Handler *****************
  7122 ;; Defined at:
  7123 ;;		line 17 in file "Timer6.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;		None
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;		None
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      unsigned char 
  7130 ;; Registers used:
  7131 ;;		wreg
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7137 ;;      Params:         0       0       0       0       0       0
  7138 ;;      Locals:         0       0       0       0       0       0
  7139 ;;      Temps:          0       0       0       0       0       0
  7140 ;;      Totals:         0       0       0       0       0       0
  7141 ;;Total ram usage:        0 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; This function calls:
  7144 ;;		Nothing
  7145 ;; This function is called by:
  7146 ;;		_Handler
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           
  7151                           ;psect for function _Timer6_Handler
  7152  0E58                     _Timer6_Handler:	
  7153                           
  7154                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  7155                           
  7156                           ;incstack = 0
  7157                           ; Regs used in _Timer6_Handler: [wreg]
  7158  0E58  0021               	movlb	1	; select bank1
  7159  0E59  1D93               	btfss	19,3	;volatile
  7160  0E5A  2E61               	goto	i1l1903
  7161  0E5B  0020               	movlb	0	; select bank0
  7162  0E5C  1D93               	btfss	19,3	;volatile
  7163  0E5D  2E61               	goto	i1l1903
  7164                           
  7165                           ;Timer6.c: 20: {
  7166                           ;Timer6.c: 21: TMR6IF = 0;
  7167  0E5E  1193               	bcf	19,3	;volatile
  7168                           
  7169                           ;Timer6.c: 22: return 1;
  7170  0E5F  3001               	movlw	1
  7171  0E60  0008               	return
  7172  0E61                     i1l1903:	
  7173                           
  7174                           ;Timer6.c: 23: }
  7175                           ;Timer6.c: 24: return 0;
  7176  0E61  3000               	movlw	0
  7177  0E62  0008               	return
  7178  0E63                     __end_of_Timer6_Handler:	
  7179                           
  7180                           	psect	text32
  7181  0E4D                     __ptext32:	
  7182 ;; *************** function _Timer4_Handler *****************
  7183 ;; Defined at:
  7184 ;;		line 17 in file "Timer4.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;		None
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;		None
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  1    wreg      unsigned char 
  7191 ;; Registers used:
  7192 ;;		wreg
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7198 ;;      Params:         0       0       0       0       0       0
  7199 ;;      Locals:         0       0       0       0       0       0
  7200 ;;      Temps:          0       0       0       0       0       0
  7201 ;;      Totals:         0       0       0       0       0       0
  7202 ;;Total ram usage:        0 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; This function calls:
  7205 ;;		Nothing
  7206 ;; This function is called by:
  7207 ;;		_Handler
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           
  7212                           ;psect for function _Timer4_Handler
  7213  0E4D                     _Timer4_Handler:	
  7214                           
  7215                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  7216                           
  7217                           ;incstack = 0
  7218                           ; Regs used in _Timer4_Handler: [wreg]
  7219  0E4D  0021               	movlb	1	; select bank1
  7220  0E4E  1C93               	btfss	19,1	;volatile
  7221  0E4F  2E56               	goto	i1l1871
  7222  0E50  0020               	movlb	0	; select bank0
  7223  0E51  1C93               	btfss	19,1	;volatile
  7224  0E52  2E56               	goto	i1l1871
  7225                           
  7226                           ;Timer4.c: 20: {
  7227                           ;Timer4.c: 21: TMR4IF = 0;
  7228  0E53  1093               	bcf	19,1	;volatile
  7229                           
  7230                           ;Timer4.c: 22: return 1;
  7231  0E54  3001               	movlw	1
  7232  0E55  0008               	return
  7233  0E56                     i1l1871:	
  7234                           
  7235                           ;Timer4.c: 23: }
  7236                           ;Timer4.c: 24: return 0;
  7237  0E56  3000               	movlw	0
  7238  0E57  0008               	return
  7239  0E58                     __end_of_Timer4_Handler:	
  7240                           
  7241                           	psect	text33
  7242  0F18                     __ptext33:	
  7243 ;; *************** function _Timer1_DetectAssignCount *****************
  7244 ;; Defined at:
  7245 ;;		line 48 in file "Timer1.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;		None
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;		None
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  1    wreg      unsigned char 
  7252 ;; Registers used:
  7253 ;;		wreg
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7259 ;;      Params:         0       0       0       0       0       0
  7260 ;;      Locals:         0       0       0       0       0       0
  7261 ;;      Temps:          0       0       0       0       0       0
  7262 ;;      Totals:         0       0       0       0       0       0
  7263 ;;Total ram usage:        0 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		_Handler
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           
  7273                           ;psect for function _Timer1_DetectAssignCount
  7274  0F18                     _Timer1_DetectAssignCount:	
  7275                           
  7276                           ;Timer1.c: 50: if(TMR1IF&&TMR1IE)
  7277                           
  7278                           ;incstack = 0
  7279                           ; Regs used in _Timer1_DetectAssignCount: [wreg]
  7280  0F18  0020               	movlb	0	; select bank0
  7281  0F19  1C11               	btfss	17,0	;volatile
  7282  0F1A  2F2E               	goto	i1l2895
  7283  0F1B  0021               	movlb	1	; select bank1
  7284  0F1C  1C11               	btfss	17,0	;volatile
  7285  0F1D  2F2E               	goto	i1l2895
  7286                           
  7287                           ;Timer1.c: 51: {
  7288                           ;Timer1.c: 52: countsum += 10;
  7289  0F1E  300A               	movlw	10
  7290  0F1F  0020               	movlb	0	; select bank0
  7291  0F20  07DC               	addwf	_countsum,f
  7292  0F21  3000               	movlw	0
  7293  0F22  3DDD               	addwfc	_countsum+1,f
  7294  0F23  3000               	movlw	0
  7295  0F24  3DDE               	addwfc	_countsum+2,f
  7296  0F25  3000               	movlw	0
  7297  0F26  3DDF               	addwfc	_countsum+3,f
  7298                           
  7299                           ;Timer1.c: 53: TMR1 = 0xFFFF-10;
  7300  0F27  30FF               	movlw	255
  7301  0F28  0097               	movwf	23	;volatile
  7302  0F29  30F5               	movlw	245
  7303  0F2A  0096               	movwf	22	;volatile
  7304                           
  7305                           ;Timer1.c: 54: TMR1IF = 0;
  7306  0F2B  1011               	bcf	17,0	;volatile
  7307                           
  7308                           ;Timer1.c: 55: return 1;
  7309  0F2C  3001               	movlw	1
  7310  0F2D  0008               	return
  7311  0F2E                     i1l2895:	
  7312                           
  7313                           ;Timer1.c: 56: }
  7314                           ;Timer1.c: 57: return 0;
  7315  0F2E  3000               	movlw	0
  7316  0F2F  0008               	return
  7317  0F30                     __end_of_Timer1_DetectAssignCount:	
  7318                           
  7319                           	psect	text34
  7320  0E39                     __ptext34:	
  7321 ;; *************** function _Timer1_Count10us *****************
  7322 ;; Defined at:
  7323 ;;		line 43 in file "Timer1.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;		None
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;		None
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      void 
  7330 ;; Registers used:
  7331 ;;		wreg
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7337 ;;      Params:         0       0       0       0       0       0
  7338 ;;      Locals:         0       0       0       0       0       0
  7339 ;;      Temps:          0       0       0       0       0       0
  7340 ;;      Totals:         0       0       0       0       0       0
  7341 ;;Total ram usage:        0 bytes
  7342 ;; Hardware stack levels used:    1
  7343 ;; This function calls:
  7344 ;;		Nothing
  7345 ;; This function is called by:
  7346 ;;		_Handler
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           
  7351                           ;psect for function _Timer1_Count10us
  7352  0E39                     _Timer1_Count10us:	
  7353                           
  7354                           ;Timer1.c: 45: timesum++;
  7355                           
  7356                           ;incstack = 0
  7357                           ; Regs used in _Timer1_Count10us: [wreg]
  7358  0E39  3001               	movlw	1
  7359  0E3A  0020               	movlb	0	; select bank0
  7360  0E3B  07D8               	addwf	_timesum,f
  7361  0E3C  3000               	movlw	0
  7362  0E3D  3DD9               	addwfc	_timesum+1,f
  7363  0E3E  3000               	movlw	0
  7364  0E3F  3DDA               	addwfc	_timesum+2,f
  7365  0E40  3000               	movlw	0
  7366  0E41  3DDB               	addwfc	_timesum+3,f
  7367  0E42  0008               	return
  7368  0E43                     __end_of_Timer1_Count10us:	
  7369                           
  7370                           	psect	text35
  7371  0E1E                     __ptext35:	
  7372 ;; *************** function _I2C_CommonInterrupt *****************
  7373 ;; Defined at:
  7374 ;;		line 58 in file "I2C_Common.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;		None
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;		None
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  1    wreg      void 
  7381 ;; Registers used:
  7382 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7388 ;;      Params:         0       0       0       0       0       0
  7389 ;;      Locals:         0       0       0       0       0       0
  7390 ;;      Temps:          0       0       0       0       0       0
  7391 ;;      Totals:         0       0       0       0       0       0
  7392 ;;Total ram usage:        0 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; Hardware stack levels required when called:    1
  7395 ;; This function calls:
  7396 ;;		_I2C1_Interrupt
  7397 ;;		_I2C2_Interrupt
  7398 ;; This function is called by:
  7399 ;;		_Handler
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           
  7404                           ;psect for function _I2C_CommonInterrupt
  7405  0E1E                     _I2C_CommonInterrupt:	
  7406                           
  7407                           ;I2C_Common.c: 60: I2C1_Interrupt();
  7408                           
  7409                           ;incstack = 0
  7410                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7411  0E1E  3185  252D  318E   	fcall	_I2C1_Interrupt
  7412                           
  7413                           ;I2C_Common.c: 61: I2C2_Interrupt();
  7414  0E21  3184  24D9         	fcall	_I2C2_Interrupt
  7415  0E23  0008               	return
  7416  0E24                     __end_of_I2C_CommonInterrupt:	
  7417                           
  7418                           	psect	text36
  7419  04D9                     __ptext36:	
  7420 ;; *************** function _I2C2_Interrupt *****************
  7421 ;; Defined at:
  7422 ;;		line 152 in file "I2C2.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;		None
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;		None
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  1    wreg      void 
  7429 ;; Registers used:
  7430 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7436 ;;      Params:         0       0       0       0       0       0
  7437 ;;      Locals:         0       0       0       0       0       0
  7438 ;;      Temps:          1       0       0       0       0       0
  7439 ;;      Totals:         1       0       0       0       0       0
  7440 ;;Total ram usage:        1 bytes
  7441 ;; Hardware stack levels used:    1
  7442 ;; This function calls:
  7443 ;;		Nothing
  7444 ;; This function is called by:
  7445 ;;		_I2C_CommonInterrupt
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           
  7450                           ;psect for function _I2C2_Interrupt
  7451  04D9                     _I2C2_Interrupt:	
  7452                           
  7453                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  7454                           
  7455                           ;incstack = 0
  7456                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7457  04D9  0020               	movlb	0	; select bank0
  7458  04DA  1C14               	btfss	20,0	;volatile
  7459  04DB  2D25               	goto	i1l2497
  7460  04DC  0021               	movlb	1	; select bank1
  7461  04DD  1C14               	btfss	20,0	;volatile
  7462  04DE  2D25               	goto	i1l2497
  7463                           
  7464                           ;I2C2.c: 155: {
  7465                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  7466  04DF  0024               	movlb	4	; select bank4
  7467  04E0  1E9C               	btfss	28,5	;volatile
  7468  04E1  2CFC               	goto	i1l294
  7469                           
  7470                           ;I2C2.c: 157: {
  7471                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  7472  04E2  1D1C               	btfss	28,2	;volatile
  7473  04E3  2CEF               	goto	i1l2473
  7474                           
  7475                           ;I2C2.c: 159: {
  7476                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  7477  04E4  1B1E               	btfsc	30,6	;volatile
  7478  04E5  2D23               	goto	i1l2495
  7479  04E6                     i1l2465:	
  7480                           ;I2C2.c: 161: {
  7481                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7482                           
  7483  04E6  081C               	movf	28,w	;volatile
  7484  04E7  3901               	andlw	1
  7485  04E8  00F6               	movwf	??_I2C2_Interrupt
  7486  04E9  0E1D               	swapf	29,w	;volatile
  7487  04EA  3901               	andlw	1
  7488  04EB  0476               	iorwf	??_I2C2_Interrupt,w
  7489  04EC  1D03               	btfss	3,2
  7490  04ED  2CE6               	goto	i1l2465
  7491  04EE  2D0F               	goto	L5
  7492  04EF                     i1l2473:	
  7493                           ;I2C2.c: 166: }
  7494                           ;I2C2.c: 167: }
  7495                           
  7496                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  7497                           
  7498                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  7499                           
  7500                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  7501                           
  7502                           
  7503                           ;I2C2.c: 168: else
  7504                           ;I2C2.c: 169: {
  7505                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  7506  04EF  0819               	movf	25,w	;volatile
  7507  04F0  00F6               	movwf	??_I2C2_Interrupt
  7508  04F1  0021               	movlb	1	; select bank1
  7509  04F2  0831               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  7510  04F3  0086               	movwf	6
  7511  04F4  0187               	clrf	7
  7512  04F5  0876               	movf	??_I2C2_Interrupt,w
  7513  04F6  0081               	movwf	1
  7514                           
  7515                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  7516  04F7  3001               	movlw	1
  7517  04F8  00F6               	movwf	??_I2C2_Interrupt
  7518  04F9  0876               	movf	??_I2C2_Interrupt,w
  7519  04FA  07B1               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  7520  04FB  2D21               	goto	i1l2493
  7521  04FC                     i1l294:	
  7522                           ;I2C2.c: 173: }
  7523                           ;I2C2.c: 174: }
  7524                           
  7525                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  7526                           
  7527                           
  7528                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  7529  04FC  1A9C               	btfsc	28,5	;volatile
  7530  04FD  2D23               	goto	i1l2495
  7531                           
  7532                           ;I2C2.c: 176: {
  7533                           ;I2C2.c: 177: SSP2BUF;
  7534  04FE  0819               	movf	25,w	;volatile
  7535                           
  7536                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  7537  04FF  1D1C               	btfss	28,2	;volatile
  7538  0500  2D1C               	goto	i1l2491
  7539                           
  7540                           ;I2C2.c: 180: {
  7541                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  7542  0501  30A0               	movlw	(low (_I2C2_Config| 0))& (0+255)
  7543  0502  00F6               	movwf	??_I2C2_Interrupt
  7544  0503  0876               	movf	??_I2C2_Interrupt,w
  7545  0504  0021               	movlb	1	; select bank1
  7546  0505  00B0               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  7547  0506                     i1l2485:	
  7548                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7549                           
  7550  0506  0024               	movlb	4	; select bank4
  7551  0507  081C               	movf	28,w	;volatile
  7552  0508  3901               	andlw	1
  7553  0509  00F6               	movwf	??_I2C2_Interrupt
  7554  050A  0E1D               	swapf	29,w	;volatile
  7555  050B  3901               	andlw	1
  7556  050C  0476               	iorwf	??_I2C2_Interrupt,w
  7557  050D  1D03               	btfss	3,2
  7558  050E  2D06               	goto	i1l2485
  7559  050F                     L5:	
  7560                           
  7561                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  7562  050F  0021               	movlb	1	; select bank1
  7563  0510  0830               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  7564  0511  0086               	movwf	6
  7565  0512  0187               	clrf	7
  7566  0513  0801               	movf	1,w
  7567  0514  0024               	movlb	4	; select bank4
  7568  0515  0099               	movwf	25	;volatile
  7569                           
  7570                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  7571  0516  3001               	movlw	1
  7572  0517  00F6               	movwf	??_I2C2_Interrupt
  7573  0518  0876               	movf	??_I2C2_Interrupt,w
  7574  0519  0021               	movlb	1	; select bank1
  7575  051A  07B0               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  7576                           
  7577                           ;I2C2.c: 186: }
  7578  051B  2D21               	goto	i1l2493
  7579  051C                     i1l2491:	
  7580                           
  7581                           ;I2C2.c: 187: else
  7582                           ;I2C2.c: 188: {
  7583                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  7584  051C  30A8               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  7585  051D  00F6               	movwf	??_I2C2_Interrupt
  7586  051E  0876               	movf	??_I2C2_Interrupt,w
  7587  051F  0021               	movlb	1	; select bank1
  7588  0520  00B1               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  7589  0521                     i1l2493:	
  7590                           
  7591                           ;I2C2.c: 190: }
  7592                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  7593  0521  0024               	movlb	4	; select bank4
  7594  0522  161D               	bsf	29,4	;volatile
  7595  0523                     i1l2495:	
  7596                           
  7597                           ;I2C2.c: 192: }
  7598                           ;I2C2.c: 193: SSP2IF = 0;
  7599  0523  0020               	movlb	0	; select bank0
  7600  0524  1014               	bcf	20,0	;volatile
  7601  0525                     i1l2497:	
  7602                           
  7603                           ;I2C2.c: 194: }
  7604                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  7605  0525  0021               	movlb	1	; select bank1
  7606  0526  1C94               	btfss	20,1	;volatile
  7607  0527  0008               	return
  7608  0528  0020               	movlb	0	; select bank0
  7609  0529  1C94               	btfss	20,1	;volatile
  7610  052A  0008               	return
  7611                           
  7612                           ;I2C2.c: 197: BCL2IF = 0;
  7613  052B  1094               	bcf	20,1	;volatile
  7614  052C  0008               	return
  7615  052D                     __end_of_I2C2_Interrupt:	
  7616                           
  7617                           	psect	text37
  7618  052D                     __ptext37:	
  7619 ;; *************** function _I2C1_Interrupt *****************
  7620 ;; Defined at:
  7621 ;;		line 152 in file "I2C1.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;		None
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;		None
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      void 
  7628 ;; Registers used:
  7629 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7635 ;;      Params:         0       0       0       0       0       0
  7636 ;;      Locals:         0       0       0       0       0       0
  7637 ;;      Temps:          1       0       0       0       0       0
  7638 ;;      Totals:         1       0       0       0       0       0
  7639 ;;Total ram usage:        1 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; This function calls:
  7642 ;;		Nothing
  7643 ;; This function is called by:
  7644 ;;		_I2C_CommonInterrupt
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648                           
  7649                           ;psect for function _I2C1_Interrupt
  7650  052D                     _I2C1_Interrupt:	
  7651                           
  7652                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  7653                           
  7654                           ;incstack = 0
  7655                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7656  052D  0020               	movlb	0	; select bank0
  7657  052E  1D91               	btfss	17,3	;volatile
  7658  052F  2D79               	goto	i1l2447
  7659  0530  0021               	movlb	1	; select bank1
  7660  0531  1D91               	btfss	17,3	;volatile
  7661  0532  2D79               	goto	i1l2447
  7662                           
  7663                           ;I2C1.c: 155: {
  7664                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  7665  0533  0024               	movlb	4	; select bank4
  7666  0534  1E94               	btfss	20,5	;volatile
  7667  0535  2D50               	goto	i1l157
  7668                           
  7669                           ;I2C1.c: 157: {
  7670                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  7671  0536  1D14               	btfss	20,2	;volatile
  7672  0537  2D43               	goto	i1l2423
  7673                           
  7674                           ;I2C1.c: 159: {
  7675                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  7676  0538  1B16               	btfsc	22,6	;volatile
  7677  0539  2D77               	goto	i1l2445
  7678  053A                     i1l2415:	
  7679                           ;I2C1.c: 161: {
  7680                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  7681                           
  7682  053A  0814               	movf	20,w	;volatile
  7683  053B  3901               	andlw	1
  7684  053C  00F6               	movwf	??_I2C1_Interrupt
  7685  053D  0E15               	swapf	21,w	;volatile
  7686  053E  3901               	andlw	1
  7687  053F  0476               	iorwf	??_I2C1_Interrupt,w
  7688  0540  1D03               	btfss	3,2
  7689  0541  2D3A               	goto	i1l2415
  7690  0542  2D63               	goto	L6
  7691  0543                     i1l2423:	
  7692                           ;I2C1.c: 166: }
  7693                           ;I2C1.c: 167: }
  7694                           
  7695                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  7696                           
  7697                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  7698                           
  7699                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  7700                           
  7701                           
  7702                           ;I2C1.c: 168: else
  7703                           ;I2C1.c: 169: {
  7704                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  7705  0543  0811               	movf	17,w	;volatile
  7706  0544  00F6               	movwf	??_I2C1_Interrupt
  7707  0545  0021               	movlb	1	; select bank1
  7708  0546  0844               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  7709  0547  0086               	movwf	6
  7710  0548  0187               	clrf	7
  7711  0549  0876               	movf	??_I2C1_Interrupt,w
  7712  054A  0081               	movwf	1
  7713                           
  7714                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  7715  054B  3001               	movlw	1
  7716  054C  00F6               	movwf	??_I2C1_Interrupt
  7717  054D  0876               	movf	??_I2C1_Interrupt,w
  7718  054E  07C4               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  7719  054F  2D75               	goto	i1l2443
  7720  0550                     i1l157:	
  7721                           ;I2C1.c: 173: }
  7722                           ;I2C1.c: 174: }
  7723                           
  7724                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  7725                           
  7726                           
  7727                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  7728  0550  1A94               	btfsc	20,5	;volatile
  7729  0551  2D77               	goto	i1l2445
  7730                           
  7731                           ;I2C1.c: 176: {
  7732                           ;I2C1.c: 177: SSP1BUF;
  7733  0552  0811               	movf	17,w	;volatile
  7734                           
  7735                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  7736  0553  1D14               	btfss	20,2	;volatile
  7737  0554  2D70               	goto	i1l2441
  7738                           
  7739                           ;I2C1.c: 180: {
  7740                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  7741  0555  30B3               	movlw	(low (_I2C1_Config| 0))& (0+255)
  7742  0556  00F6               	movwf	??_I2C1_Interrupt
  7743  0557  0876               	movf	??_I2C1_Interrupt,w
  7744  0558  0021               	movlb	1	; select bank1
  7745  0559  00C3               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  7746  055A                     i1l2435:	
  7747                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  7748                           
  7749  055A  0024               	movlb	4	; select bank4
  7750  055B  0814               	movf	20,w	;volatile
  7751  055C  3901               	andlw	1
  7752  055D  00F6               	movwf	??_I2C1_Interrupt
  7753  055E  0E15               	swapf	21,w	;volatile
  7754  055F  3901               	andlw	1
  7755  0560  0476               	iorwf	??_I2C1_Interrupt,w
  7756  0561  1D03               	btfss	3,2
  7757  0562  2D5A               	goto	i1l2435
  7758  0563                     L6:	
  7759                           
  7760                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  7761  0563  0021               	movlb	1	; select bank1
  7762  0564  0843               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  7763  0565  0086               	movwf	6
  7764  0566  0187               	clrf	7
  7765  0567  0801               	movf	1,w
  7766  0568  0024               	movlb	4	; select bank4
  7767  0569  0091               	movwf	17	;volatile
  7768                           
  7769                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  7770  056A  3001               	movlw	1
  7771  056B  00F6               	movwf	??_I2C1_Interrupt
  7772  056C  0876               	movf	??_I2C1_Interrupt,w
  7773  056D  0021               	movlb	1	; select bank1
  7774  056E  07C3               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  7775                           
  7776                           ;I2C1.c: 186: }
  7777  056F  2D75               	goto	i1l2443
  7778  0570                     i1l2441:	
  7779                           
  7780                           ;I2C1.c: 187: else
  7781                           ;I2C1.c: 188: {
  7782                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  7783  0570  30BB               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  7784  0571  00F6               	movwf	??_I2C1_Interrupt
  7785  0572  0876               	movf	??_I2C1_Interrupt,w
  7786  0573  0021               	movlb	1	; select bank1
  7787  0574  00C4               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  7788  0575                     i1l2443:	
  7789                           
  7790                           ;I2C1.c: 190: }
  7791                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  7792  0575  0024               	movlb	4	; select bank4
  7793  0576  1615               	bsf	21,4	;volatile
  7794  0577                     i1l2445:	
  7795                           
  7796                           ;I2C1.c: 192: }
  7797                           ;I2C1.c: 193: SSP1IF = 0;
  7798  0577  0020               	movlb	0	; select bank0
  7799  0578  1191               	bcf	17,3	;volatile
  7800  0579                     i1l2447:	
  7801                           
  7802                           ;I2C1.c: 194: }
  7803                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  7804  0579  0021               	movlb	1	; select bank1
  7805  057A  1D92               	btfss	18,3	;volatile
  7806  057B  0008               	return
  7807  057C  0020               	movlb	0	; select bank0
  7808  057D  1D92               	btfss	18,3	;volatile
  7809  057E  0008               	return
  7810                           
  7811                           ;I2C1.c: 197: BCL1IF = 0;
  7812  057F  1192               	bcf	18,3	;volatile
  7813  0580  0008               	return
  7814  0581                     __end_of_I2C1_Interrupt:	
  7815                           
  7816                           	psect	text38
  7817  0F89                     __ptext38:	
  7818 ;; *************** function _CPSx_Read *****************
  7819 ;; Defined at:
  7820 ;;		line 29 in file "mTouch.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;		None
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;		None
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      void 
  7827 ;; Registers used:
  7828 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7834 ;;      Params:         0       0       0       0       0       0
  7835 ;;      Locals:         0       0       0       0       0       0
  7836 ;;      Temps:          1       0       0       0       0       0
  7837 ;;      Totals:         1       0       0       0       0       0
  7838 ;;Total ram usage:        1 bytes
  7839 ;; Hardware stack levels used:    1
  7840 ;; This function calls:
  7841 ;;		Nothing
  7842 ;; This function is called by:
  7843 ;;		_Handler
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847                           
  7848                           ;psect for function _CPSx_Read
  7849  0F89                     _CPSx_Read:	
  7850                           
  7851                           ;mTouch.c: 31: static uint8_t channel=0;
  7852                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  7853                           
  7854                           ;incstack = 0
  7855                           ; Regs used in _CPSx_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7856  0F89  0875               	movf	CPSx_Read@channel,w
  7857  0F8A  3E60               	addlw	(low (_CPS_Data| 0))& (0+255)
  7858  0F8B  0086               	movwf	6
  7859  0F8C  0187               	clrf	7
  7860  0F8D  0801               	movf	1,w
  7861  0F8E  00F6               	movwf	??_CPSx_Read
  7862  0F8F  0875               	movf	CPSx_Read@channel,w
  7863  0F90  3E63               	addlw	(low (_CPS_PreData| 0))& (0+255)
  7864  0F91  0086               	movwf	6
  7865  0F92  0187               	clrf	7
  7866  0F93  0876               	movf	??_CPSx_Read,w
  7867  0F94  0081               	movwf	1
  7868                           
  7869                           ;mTouch.c: 34: CPSCON0 &= ~(0x01<<7);;
  7870  0F95  307F               	movlw	127
  7871  0F96  00F6               	movwf	??_CPSx_Read
  7872  0F97  0876               	movf	??_CPSx_Read,w
  7873  0F98  0020               	movlb	0	; select bank0
  7874  0F99  059E               	andwf	30,f	;volatile
  7875                           
  7876                           ;mTouch.c: 35: CPS_Data[channel] = TMR0;
  7877  0F9A  0815               	movf	21,w	;volatile
  7878  0F9B  00F6               	movwf	??_CPSx_Read
  7879  0F9C  0875               	movf	CPSx_Read@channel,w
  7880  0F9D  3E60               	addlw	(low (_CPS_Data| 0))& (0+255)
  7881  0F9E  0086               	movwf	6
  7882  0F9F  0187               	clrf	7
  7883  0FA0  0876               	movf	??_CPSx_Read,w
  7884  0FA1  0081               	movwf	1
  7885                           
  7886                           ;mTouch.c: 36: TMR0 = 0x00;
  7887  0FA2  0195               	clrf	21	;volatile
  7888                           
  7889                           ;mTouch.c: 37: CPSCON0 |= (0x01<<7);;
  7890  0FA3  179E               	bsf	30,7	;volatile
  7891                           
  7892                           ;mTouch.c: 39: if(channel++>2)channel = 0;
  7893  0FA4  0875               	movf	CPSx_Read@channel,w
  7894  0FA5  0AF5               	incf	CPSx_Read@channel,f
  7895  0FA6  00F6               	movwf	??_CPSx_Read
  7896  0FA7  3003               	movlw	3
  7897  0FA8  0276               	subwf	??_CPSx_Read,w
  7898  0FA9  1803               	btfsc	3,0
  7899  0FAA  01F5               	clrf	CPSx_Read@channel
  7900                           
  7901                           ;mTouch.c: 40: CPSCON1 = (uint8_t)channel;
  7902  0FAB  0875               	movf	CPSx_Read@channel,w
  7903  0FAC  009F               	movwf	31	;volatile
  7904  0FAD  0008               	return
  7905  0FAE                     __end_of_CPSx_Read:	
  7906                           
  7907                           	psect	text39
  7908  0EEE                     __ptext39:	
  7909 ;; *************** function _Buzzer_Handler *****************
  7910 ;; Defined at:
  7911 ;;		line 44 in file "Buzzer.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;		None
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;		None
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2, status,0, pclath, cstack
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7925 ;;      Params:         0       0       0       0       0       0
  7926 ;;      Locals:         0       0       0       0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0
  7928 ;;      Totals:         0       0       0       0       0       0
  7929 ;;Total ram usage:        0 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    1
  7932 ;; This function calls:
  7933 ;;		_Buzzer_SetDuty
  7934 ;; This function is called by:
  7935 ;;		_Handler
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           
  7940                           ;psect for function _Buzzer_Handler
  7941  0EEE                     _Buzzer_Handler:	
  7942                           
  7943                           ;Buzzer.c: 46: if(count>0)
  7944                           
  7945                           ;incstack = 0
  7946                           ; Regs used in _Buzzer_Handler: [wreg+status,2+status,0+pclath+cstack]
  7947  0EEE  0873               	movf	_count,w
  7948  0EEF  0474               	iorwf	_count+1,w
  7949  0EF0  1903               	btfsc	3,2
  7950  0EF1  2EFD               	goto	i1l2693
  7951                           
  7952                           ;Buzzer.c: 47: {
  7953                           ;Buzzer.c: 48: count--;
  7954  0EF2  3001               	movlw	1
  7955  0EF3  02F3               	subwf	_count,f
  7956  0EF4  3000               	movlw	0
  7957  0EF5  3BF4               	subwfb	_count+1,f
  7958                           
  7959                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  7960  0EF6  30FF               	movlw	255
  7961  0EF7  00F6               	movwf	Buzzer_SetDuty@duty
  7962  0EF8  3001               	movlw	1
  7963  0EF9  00F7               	movwf	Buzzer_SetDuty@duty+1
  7964  0EFA  3187  27E4         	fcall	_Buzzer_SetDuty
  7965                           
  7966                           ;Buzzer.c: 50: }
  7967  0EFC  0008               	return
  7968  0EFD                     i1l2693:	
  7969                           
  7970                           ;Buzzer.c: 51: else
  7971                           ;Buzzer.c: 52: {
  7972                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  7973  0EFD  3000               	movlw	0
  7974  0EFE  00F6               	movwf	Buzzer_SetDuty@duty
  7975  0EFF  00F7               	movwf	Buzzer_SetDuty@duty+1
  7976  0F00  3187  27E4         	fcall	_Buzzer_SetDuty
  7977  0F02  0008               	return
  7978  0F03                     __end_of_Buzzer_Handler:	
  7979                           
  7980                           	psect	text40
  7981  07E4                     __ptext40:	
  7982 ;; *************** function _Buzzer_SetDuty *****************
  7983 ;; Defined at:
  7984 ;;		line 31 in file "Buzzer.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  duty            2    0[COMMON] unsigned int 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1    wreg      void 
  7991 ;; Registers used:
  7992 ;;		wreg, status,2, status,0
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7998 ;;      Params:         2       0       0       0       0       0
  7999 ;;      Locals:         1       0       0       0       0       0
  8000 ;;      Temps:          2       0       0       0       0       0
  8001 ;;      Totals:         5       0       0       0       0       0
  8002 ;;Total ram usage:        5 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		_Buzzer_Handler
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           
  8012                           ;psect for function _Buzzer_SetDuty
  8013  07E4                     _Buzzer_SetDuty:	
  8014                           
  8015                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  8016                           
  8017                           ;incstack = 0
  8018                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  8019  07E4  0025               	movlb	5	; select bank5
  8020  07E5  081A               	movf	26,w	;volatile
  8021  07E6  39CF               	andlw	207
  8022  07E7  00F8               	movwf	??_Buzzer_SetDuty
  8023  07E8  0878               	movf	??_Buzzer_SetDuty,w
  8024  07E9  00FA               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  8025                           
  8026                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  8027  07EA  0877               	movf	Buzzer_SetDuty@duty+1,w
  8028  07EB  00F9               	movwf	??_Buzzer_SetDuty+1
  8029  07EC  0876               	movf	Buzzer_SetDuty@duty,w
  8030  07ED  00F8               	movwf	??_Buzzer_SetDuty
  8031  07EE  36F9               	lsrf	??_Buzzer_SetDuty+1,f
  8032  07EF  0CF8               	rrf	??_Buzzer_SetDuty,f
  8033  07F0  36F9               	lsrf	??_Buzzer_SetDuty+1,f
  8034  07F1  0CF8               	rrf	??_Buzzer_SetDuty,f
  8035  07F2  0878               	movf	??_Buzzer_SetDuty,w
  8036  07F3  0098               	movwf	24	;volatile
  8037                           
  8038                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  8039  07F4  0876               	movf	Buzzer_SetDuty@duty,w
  8040  07F5  3903               	andlw	3
  8041  07F6  00F8               	movwf	??_Buzzer_SetDuty
  8042  07F7  3003               	movlw	3
  8043  07F8                     u175_25:	
  8044  07F8  35F8               	lslf	??_Buzzer_SetDuty,f
  8045  07F9  3EFF               	addlw	-1
  8046  07FA  1D03               	skipz
  8047  07FB  2FF8               	goto	u175_25
  8048  07FC  3578               	lslf	??_Buzzer_SetDuty,w
  8049  07FD  047A               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  8050  07FE  009A               	movwf	26	;volatile
  8051  07FF  0008               	return
  8052  0800                     __end_of_Buzzer_SetDuty:	
  8053  007E                     btemp	set	126	;btemp
  8054  007E                     int$flags	set	126
  8055  007E                     wtemp0	set	126


Data Sizes:
    Strings     306
    Constant    70
    Data        90
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     56      80
    BANK1            80      0      68
    BANK2            80      0      60
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_49(CODE[7]), STR_48(CODE[7]), STR_47(CODE[7]), STR_46(CODE[7]), 
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[7]), STR_42(CODE[6]), 
		 -> STR_41(CODE[6]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[5]), 
		 -> STR_37(CODE[5]), STR_36(CODE[5]), STR_35(CODE[5]), 

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_34(CODE[8]), STR_33(CODE[8]), STR_32(CODE[8]), STR_31(CODE[7]), 
		 -> STR_30(CODE[7]), STR_29(CODE[7]), STR_28(CODE[7]), STR_27(CODE[7]), 
		 -> STR_26(CODE[6]), STR_25(CODE[6]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 

    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[6]), 
		 -> STR_15(CODE[5]), STR_14(CODE[6]), STR_13(CODE[5]), STR_12(CODE[6]), 
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[5]), STR_8(CODE[6]), 
		 -> STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[5]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S46$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S46$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Handler->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___llmod
    _putch->_LCD_WriteData
    ___llmod->___lldiv
    _mTouch_Read->_Buzzer_MiliSecond
    _mTouch_Init->_mTouch_PortInit
    _Timer1_GetCPM->___lldiv
    ___lldiv->___lmul
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6425
                                             55 BANK0      1     1      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                     _LCD_CursorHome
                           _LCD_Init
                      _Timer1_GetCPM
                        _Timer1_Init
                        _Timer4_Init
                        _Timer6_Init
                        _mTouch_Init
                        _mTouch_Read
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    23      4    1936
                                             36 BANK0     19    15      4
                      _Timer1_GetCPM (ARG)
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     155
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                             26 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _mTouch_Read                                          6     6      0     263
                                              2 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        2     0      2     839
                                             26 BANK0      2     0      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     290
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     549
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              4 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                             16 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              8 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              5 BANK0      6     3      3
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              1     1      0     195
                                              5 COMMON     1     1      0
                     _Buzzer_Handler
                          _CPSx_Read
                _I2C_CommonInterrupt
                   _Timer1_Count10us
           _Timer1_DetectAssignCount
                     _Timer4_Handler
                     _Timer6_Handler
           _mTouch_IntervalDecrement
 ---------------------------------------------------------------------------------
 (6) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer6_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer4_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_DetectAssignCount                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_Count10us                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _CPSx_Read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Buzzer_Handler                                       0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (7) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Timer1_Init
   _Timer4_Init
   _Timer6_Init
   _mTouch_Init
     _mTouch_PortInit
   _mTouch_Read
     _Buzzer_MiliSecond
   _printf
     _Timer1_GetCPM (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
     ___lldiv (ARG)
       ___lmul (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Handler
     _Buzzer_SetDuty
   _CPSx_Read
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Count10us
   _Timer1_DetectAssignCount
   _Timer4_Handler
   _Timer6_Handler
   _mTouch_IntervalDecrement

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      DC       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     38      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      44       8       85.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      DC      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun May 21 00:45:57 2017

                   _LCD_CursorHome 0EA8                        __CFG_CP$OFF 0000  
                               l74 0668                                 l91 0377  
                               l78 0699                     I2C2_Transmit@i 0025  
            ??_I2C_CommonInterrupt 0077                                l100 03A0  
                              l211 0624                                l109 03BD  
                              l215 0655                                l228 02E0  
                              l237 0309                                l246 0326  
                              l338 0FFD                                l680 0200  
                              l683 021E                                l693 02BE  
                              _GIE 005F                                _PR2 001B  
                              _PR4 0416                       __CFG_CPD$OFF 0000  
                              _PR6 041D                       __CFG_BORV$LO 0000  
                              wreg 0009                         _Basic_Init 0F03  
                     __CFG_LVP$OFF 0000         ??_Timer1_DetectAssignCount 0076  
                             l3401 03EB                               l3421 0639  
                             l3335 067D                               l3351 0690  
                             l3423 063B                               l3415 062E  
                             l3337 067F                               l3329 0672  
                             l3433 064A                               l3521 0FE6  
                             l3441 02C3                               l3347 068E  
                             l3355 035A                               l3443 02D1  
                             l3531 07C9                               l3603 06CF  
                             l3437 064C                               l3525 0FF4  
                             l3381 03AE                               l3357 0368  
                             l3453 02F4                               l3519 0FD9  
                             l3391 03C3                               l3367 038B  
                             l3463 02EC                               l3535 07DA  
                             l3607 06DA                               l3393 03DA  
                             l3377 0383                               l3481 0348  
                             l3465 02F0                               l3537 07E2  
                             l3529 07BC                               l3395 03DF  
                             l3379 0387                               l3467 0317  
                             l3555 0765                               l3811 0202  
                             l3477 032C                               l3485 034B  
                             l3573 0592                               l3821 022D  
                             l3399 03E2                               l3479 0343  
                             l3487 0354                               l3583 05C0  
                             l3575 05A0                               l3559 076F  
                             l3831 0244                               l3815 0207  
                             l3911 042A                               l3809 01FD  
                             l3913 042E                               l3905 041D  
                             l3587 05CB                               l3843 0276  
                             l3915 043F                               l3923 045A  
                             l3597 06A9                               l3837 0271  
                             l3845 01E1                               l3917 0448  
                             l3599 06B7                               l3919 0451  
                             l3787 05DC                               l3799 0616  
                             l3899 040C                               STR_1 01D8  
                             STR_2 00AA                               STR_3 00D7  
                             STR_4 00B5                               STR_5 01BF  
                             STR_6 016F                               STR_7 01C4  
                             STR_8 0175                               STR_9 01C9  
                             u3605 05C1                               u3525 0770  
                             u3535 0777                               u3635 06AC  
                             _PEIE 005E                               u3565 0595  
                             u3495 06ED                               u3655 06C5  
                             u3585 05A1                               u3665 06D0  
                             u3745 0267                               u3907 04B6  
                             u3595 05B5                               u3917 0EC2  
                             u3927 0EB2                               u3695 05FC  
                             u3937 06E6                               u3877 0473  
                             u3887 048C                               u3897 04A1  
            Buzzer_MiliSecond@time 0020                               _TMR0 0015  
                             _TMR1 0016                               _TMR2 001A  
                             _TMR4 0415                               _TMR6 041C  
                  ??_I2C1_Transmit 0022                       __CFG_WRT$OFF 0000  
                             _main 03EE                               _mode 006B  
                 __end_of_I2C_Init 1000                               fsr0h 0005  
                             fsr1h 0007                               indf0 0000  
                             fsr0l 0004                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    __CFG_BOREN$ON 0000                    ??_I2C2_Transmit 0022  
                 ??_I2C1_Interrupt 0076                               start 0031  
                    __CFG_IESO$OFF 0000                    __end_of_Handler 0031  
           __end_of_LCD_CursorHome 0EB8                      _LCD_WriteData 06E3  
                    __CFG_MCLRE$ON 0000                   ??_I2C2_Interrupt 0076  
               __size_of_CPSx_Read 0025           __end_of_LCD_DisplayClear 0EC8  
            __size_of_I2C_Transmit 002B                   __end_of_LCD_Init 04D9  
                    __CFG_PLLEN$ON 0000                              ?_main 0076  
                            STR_10 017B                              STR_11 01CE  
                            STR_20 01A1                              STR_12 0181  
                            STR_21 019C                              STR_13 01D3  
                            STR_30 00DF                              STR_22 01AB  
                            STR_14 0187                              STR_31 0125  
                            STR_23 015D                              STR_15 01B0  
                            STR_32 00CF                              STR_24 0133  
                            STR_40 014B                              STR_16 0163  
                            STR_33 00C7                              STR_25 013F  
                            STR_41 0151                              STR_17 01B5  
                    __CFG_WDTE$OFF 0000                              STR_34 00BF  
                            STR_26 0157                              STR_42 0139  
                            STR_18 0169                              STR_27 0110  
                            STR_43 00F4                              STR_35 018D  
                            STR_19 01BA                              STR_28 0109  
                            STR_44 011E                              STR_36 0192  
                            STR_29 0117                              STR_45 00FB  
                            STR_37 01A6                              STR_46 0102  
                            STR_38 0197                              STR_47 012C  
                            STR_39 0145                              STR_48 00E6  
                            STR_49 00ED                    __end_of___lldiv 05D4  
                            _T1CON 0018                    __end_of___llmod 06E3  
                            _T2CON 001C                              _LATA3 0863  
                            _LATA4 0864                              _LATA6 0866  
                            _T4CON 0417                              _T6CON 041E  
                            i1l157 0550                              i1l294 04FC  
                            i1l646 0E9D                              i1l647 0EA2  
                            _PORTA 000C                              _PORTB 000D  
                            _TRISA 008C                              _TRISB 008D  
                I2C2_Transmit@size 0021                ___lmul@multiplicand 0024  
                    __CFG_PWRTE$ON 0000                     __CFG_FCMEN$OFF 0000  
                  __end_of_dpowers 008C                              _count 0073  
                            _errno 0069                              _putch 0E30  
                    ??_Buzzer_Init 0020              __end_of_Timer1_GetCPM 07B9  
                            status 0003                              wtemp0 007E  
                _Buzzer_MiliSecond 0E43                       _I2C_Transmit 07B9  
                   ?_LCD_WriteData 0076                 ?_Buzzer_MiliSecond 0020  
                 ??_DAC_Initialize 0030                    ?_LCD_CursorHome 0076  
                  __initialization 0033                       __end_of_main 046A  
              ??_Buzzer_MiliSecond 0022                             ??_main 0057  
                 CPSx_Read@channel 0075                        ?_Basic_Init 0076  
                           _BCL1IE 0493                             _BCL1IF 0093  
                           _BCL2IE 04A1                             _BCL2IF 00A1  
                 ___llmod@dividend 003E               __size_of_mTouch_Init 0013  
             __size_of_mTouch_Read 0044                             _CCPR2L 0298  
                           _ANSELA 018C                             ?_putch 0076  
                           _ANSELB 018D                             _T1GCON 0019  
                __end_of_CPSx_Read 0FAE                             i1l2415 053A  
                           i1l2423 0543                             i1l2441 0570  
                           i1l2443 0575                             i1l2435 055A  
                           i1l2445 0577                             i1l3261 002A  
                           i1l2447 0579                             i1l1903 0E61  
                           i1l2465 04E6                             i1l2473 04EF  
                           i1l3257 0021                             i1l3249 0012  
                           i1l2491 051C                             i1l2493 0521  
                           i1l2485 0506                             i1l2495 0523  
                           i1l1871 0E56                             i1l2497 0525  
               I2C2_Transmit@i_316 0026                             i1l2693 0EFD  
                           i1l2895 0F2E                    _mTouch_Interval 0070  
        __end_of_Buzzer_MiliSecond 0E4D                             u175_25 07F8  
                           _OSCCON 0099                 I2C2_Transmit@pData 0020  
                   _Timer4_Handler 0E4D                             _TMR1IE 0488  
                           _TMR1IF 0088                          ??_Handler 007B  
                           _TMR4IE 0499                             _TMR4IF 0099  
                           _TMR6IE 049B                             _TMR6IF 009B  
                           _TMR1ON 00C0                             _SSP1IE 048B  
                           _SSP1IF 008B                             _SSP2IE 04A0  
                           _SSP2IF 00A0           _mTouch_IntervalDecrement 0E98  
                   _Timer6_Handler 0E58                    _mTouch_PortInit 0E7D  
                    ??_Timer1_Init 0020                      ??_Timer4_Init 0020  
              __end_of_Buzzer_Init 0FD6                      ??_Timer6_Init 0020  
                ?_Timer1_Count10us 0076                             ___lmul 075C  
                        ??___lldiv 0034                          ??___llmod 0042  
               ??_Timer1_Count10us 0076                             _printf 01DC  
                 I2C_Transmit@I2Cx 002E                          ?_I2C_Init 0025  
                           putch@c 0023                   I2C_Transmit@size 002A  
           __end_of_Timer4_Handler 0E58            __end_of__initialization 0060  
           __end_of_Timer6_Handler 0E63                          ?_LCD_Init 0076  
                  ??_LCD_WriteData 0020                         _VoltageReg 006D  
               Buzzer_SetDuty@duty 0076                     __pcstackCOMMON 0076  
              __size_of_Basic_Init 0015                       __pidataBANK1 0F4B  
                     __pidataBANK2 0720                      __end_of_putch 0E39  
              __end_of_Timer1_Init 0F4B                __end_of_Timer4_Init 0EDB  
              __end_of_Timer6_Init 0E98          Buzzer_SetDuty@CCP2CON_Pre 007A  
                       ??_I2C_Init 0028                I2C1_Transmit@result 0027  
                          ??_putch 0023            __size_of_Buzzer_Handler 0015  
                  ?_Timer4_Handler 0076            __end_of_mTouch_PortInit 0E8A  
                       __pbssBANK0 0058                         __pbssBANK1 00A0  
       __size_of_Buzzer_MiliSecond 000A                        _Buzzer_Init 0FAE  
                       ??_LCD_Init 0024                    ?_Timer6_Handler 0076  
          __size_of_Buzzer_SetDuty 001C                      _DAC_DataTable 008C  
                     I2C_Init@I2Cx 002A        __end_of_I2C_CommonInterrupt 0E24  
                     I2C_Init@mode 0026                         __pmaintext 03EE  
                          ?___lmul 0020                         __pintentry 0004  
                          _CCP2CON 029A                  ?_LCD_DisplayClear 0076  
                   ___lmul@product 0028                            _APFCON0 011D  
                          _APFCON1 011E                            _CCPTMRS 029E  
                          ?_printf 0044                 ??_LCD_DisplayClear 0023  
                          _CPSCON0 001E                            _CPSCON1 001F  
                          _SSP1ADD 0212                            _SSP2ADD 021A  
                          _SSP1BUF 0211                            _SSP2BUF 0219  
                          _SSP1MSK 0213                            _SSP2MSK 021B  
              I2C2_Transmit@result 0027                   ??_LCD_CursorHome 0023  
                          _Handler 0004              __end_of_I2C1_Transmit 03EE  
            __end_of_I2C2_Transmit 0357                        _Timer1_Init 0F30  
                      _Timer4_Init 0EC8                        _Timer6_Init 0E8A  
__size_of_Timer1_DetectAssignCount 0018                    __size_of___lmul 0030  
        ?_Timer1_DetectAssignCount 0076                            ___lldiv 0581  
                          ___llmod 06A0                    __CFG_STVREN$OFF 0000  
                          __ptext1 01DC                            __ptext2 0E30  
                          __ptext3 06A0                            __ptext4 05D4  
                          __ptext5 0E43                            __ptext6 0EDB  
                          __ptext7 0E7D                            __ptext8 0E8A  
                          __ptext9 0EC8                    __size_of_printf 00E3  
                  mTouch_Read@chan 0027                            _dpowers 0064  
                     ??_Basic_Init 0020         ??_mTouch_IntervalDecrement 0076  
                          _timesum 0058                            clrloop0 0E25  
             end_of_initialization 0060                   ?_mTouch_PortInit 0076  
                    ?_I2C1_PinInit 0076                            init_ram 0E2A  
                          initloop 0E2B                      ?_I2C2_PinInit 0076  
                      _I2C1_Config 00B3                          _CPSx_Read 0F89  
                      _I2C2_Config 00A0                      ?_I2C1_Setting 0021  
                  ___lldiv@divisor 002C                      ?_I2C2_Setting 0021  
                  ___lldiv@counter 0039                  I2C_Transmit@pData 0029  
                          printf@c 0056                            printf@f 0044  
               __end_of_Basic_Init 0F18                   _DAC_VoltageTable 00C6  
                     __pstringtext 0064            __size_of_I2C1_Interrupt 0054  
           __size_of_Timer1_GetCPM 002D                   __CFG_FOSC$INTOSC 0000  
                    ??_mTouch_Init 0021                      ??_mTouch_Read 0022  
          __size_of_I2C2_Interrupt 0054          __size_of_Timer1_Count10us 000A  
                __size_of_I2C_Init 002A                I2C1_Setting@address 0024  
                   _Buzzer_Handler 0EEE                     ??_I2C1_PinInit 0020  
                   ??_I2C2_PinInit 0020                     _Buzzer_SetDuty 07E4  
                   ??_I2C1_Setting 0023                         ?_CPSx_Read 0076  
                   ??_I2C2_Setting 0023                      _H7826_01_Gain 0120  
                __size_of_LCD_Init 006F                     __end_of___lmul 078C  
                        _ConfigReg 006F            __size_of_DAC_Initialize 0020  
                   __end_of_printf 02BF                   ??_Timer4_Handler 0076  
              start_initialization 0033             __end_of_Buzzer_Handler 0F03  
                 ??_Timer6_Handler 0076               I2C1_Transmit@address 0024  
                        _MemoryReg 0066             __end_of_Buzzer_SetDuty 0800  
                     ?_Buzzer_Init 0076                __end_of_mTouch_Init 0EEE  
              __end_of_mTouch_Read 0618                      _Timer1_GetCPM 078C  
              I2C2_Setting@address 0024                    ___llmod@divisor 003A  
                  ___llmod@counter 0043              __end_of_LCD_WriteData 0720  
                         ??___lmul 0028                        __pdataBANK1 00C6  
                      __pdataBANK2 0120                           ??_printf 0048  
                I2C1_Setting@Speed 0022                        __pbssCOMMON 0070  
                        ___latbits 0001                      __pcstackBANK0 0020  
 __end_of_mTouch_IntervalDecrement 0EA8                    ?_Buzzer_Handler 0076  
               I2C1_Transmit@i_172 0026                 I2C1_Transmit@pData 0020  
        __size_of_LCD_DisplayClear 0010                    ?_Buzzer_SetDuty 0076  
                   ?_Timer1_GetCPM 003A   __end_of_Timer1_DetectAssignCount 0F30  
                  I2C_Init@address 0025                           ?_Handler 0076  
                      ??_CPSx_Read 0076                      ?_I2C_Transmit 0028  
                    I2C_Init@Speed 0027                       ?_Timer1_Init 0076  
                     ?_Timer4_Init 0076                       ?_Timer6_Init 0076  
                         ?___lldiv 002C                           ?___llmod 003A  
                   _I2C1_Interrupt 052D               __end_of_I2C1_PinInit 0E70  
     __size_of_I2C_CommonInterrupt 0006               __end_of_I2C2_PinInit 0E7D  
             __end_of_I2C1_Setting 06A0                           _I2C_Init 0FD6  
             __end_of_I2C2_Setting 065C                     _I2C2_Interrupt 04D9  
                       _H7826_Gain 013E                        _mTouch_Init 0EDB  
                      _mTouch_Read 05D4                   _Timer1_Count10us 0E39  
                   __size_of_putch 0009                           _LCD_Init 046A  
                         _CPS_Data 0060                     ??_I2C_Transmit 002B  
                        clear_ram0 0E24             __end_of_I2C1_Interrupt 0581  
                         _SSP1CON1 0215                           _SSP1CON2 0216  
             I2C2_Transmit@address 0024                           _SSP2CON1 021D  
                         _SSP2CON2 021E                           _SSP1STAT 0214  
                         _SSP2STAT 021C                     _DAC_Initialize 0F69  
           __end_of_I2C2_Interrupt 052D                         printf@flag 004E  
                       printf@prec 004F             __size_of_I2C1_Transmit 0097  
           __size_of_I2C2_Transmit 0098                    ??_Timer1_GetCPM 003C  
                      _CPS_PreData 0063                  ___lmul@multiplier 0020  
                 __size_of_Handler 002D               __size_of_Buzzer_Init 0028  
         _Timer1_DetectAssignCount 0F18           __size_of_mTouch_PortInit 000D  
__size_of_mTouch_IntervalDecrement 0010          ?_mTouch_IntervalDecrement 0076  
                  ?_I2C1_Interrupt 0076            __size_of_LCD_CursorHome 0010  
           __end_of_DAC_Initialize 0F89                   __size_of___lldiv 0053  
                 __size_of___llmod 0043                   I2C1_Setting@mode 0021  
               LCD_WriteData@point 0022                    ?_I2C2_Interrupt 0076  
                I2C1_Transmit@size 0021                           __ptext10 0F30  
                         __ptext11 078C                           __ptext20 02BF  
                         __ptext12 075C                           __ptext21 0357  
                         __ptext13 0581                           __ptext30 0E98  
                         __ptext22 0FD6                           __ptext14 046A  
                         __ptext31 0E58                           __ptext23 0618  
                         __ptext15 0EB8                           __ptext40 07E4  
                         __ptext32 0E4D                           __ptext24 0E70  
                         __ptext16 0EA8                           __ptext33 0F18  
                         __ptext25 065C                           __ptext17 06E3  
                         __ptext34 0E39                           __ptext26 0E63  
                         __ptext18 0F69                           __ptext35 0E1E  
                         __ptext27 0FAE                           __ptext19 07B9  
                         __ptext36 04D9                           __ptext28 0F03  
                         __ptext37 052D                           __ptext38 0F89  
                         __ptext39 0EEE                       _SSP1CON1bits 0215  
                     _SSP1CON2bits 0216                   _LCD_DisplayClear 0EB8  
                     _SSP2CON1bits 021D                       _SSP2CON2bits 021E  
                         _countsum 005C              __end_of_DAC_DataTable 00AA  
                    __size_of_main 007C                      _I2C1_Transmit 0357  
                    _I2C2_Transmit 02BF              __size_of_I2C1_PinInit 000D  
             __size_of_Timer1_Init 001B                           int$flags 007E  
            __size_of_I2C2_PinInit 000D               __size_of_Timer4_Init 0013  
              I2C_Transmit@address 0028               __size_of_Timer6_Init 000E  
            __size_of_I2C1_Setting 0044                    ?_DAC_Initialize 0076  
                        printf@val 0051                       _SSP1STATbits 0214  
            __size_of_I2C2_Setting 0044                       _SSP2STATbits 021C  
                 ??_Buzzer_Handler 007B               __end_of_I2C_Transmit 07E4  
                I2C2_Setting@Speed 0022                   ??_Buzzer_SetDuty 0078  
                         intlevel1 0000                _I2C_CommonInterrupt 0E1E  
                     _I2C1_PinInit 0E63                   ___lldiv@dividend 0030  
                   ?_I2C1_Transmit 0020                  __CFG_CLKOUTEN$OFF 0000  
                     _I2C2_PinInit 0E70                       _I2C1_Setting 065C  
                   ?_I2C2_Transmit 0020                       _I2C2_Setting 0618  
         __end_of_Timer1_Count10us 0E43                           printf@ap 0055  
               I2C_Transmit@result 002F                  ??_mTouch_PortInit 0020  
                 I2C2_Setting@mode 0021               ?_I2C_CommonInterrupt 0076  
                       _OPTION_REG 0095                   ___lldiv@quotient 0035  
                     ?_mTouch_Init 0076                       ?_mTouch_Read 0076  
           __size_of_LCD_WriteData 003D                     I2C1_Transmit@i 0025  
          __size_of_Timer4_Handler 000B            __size_of_Timer6_Handler 000B  
