

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May 16 13:19:39 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 1.41
    60                           ; Generated 25/01/2017 GMT
    61                           ; 
    62                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F1827 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  0111                     	;# 
   142  0112                     	;# 
   143  0113                     	;# 
   144  0114                     	;# 
   145  0115                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0118                     	;# 
   149  0119                     	;# 
   150  011A                     	;# 
   151  011B                     	;# 
   152  011D                     	;# 
   153  011E                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0191                     	;# 
   157  0191                     	;# 
   158  0192                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0193                     	;# 
   162  0194                     	;# 
   163  0195                     	;# 
   164  0196                     	;# 
   165  0199                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019D                     	;# 
   174  019E                     	;# 
   175  019F                     	;# 
   176  020C                     	;# 
   177  020D                     	;# 
   178  0211                     	;# 
   179  0211                     	;# 
   180  0212                     	;# 
   181  0212                     	;# 
   182  0213                     	;# 
   183  0213                     	;# 
   184  0214                     	;# 
   185  0214                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0215                     	;# 
   189  0216                     	;# 
   190  0216                     	;# 
   191  0217                     	;# 
   192  0217                     	;# 
   193  0219                     	;# 
   194  021A                     	;# 
   195  021B                     	;# 
   196  021C                     	;# 
   197  021D                     	;# 
   198  021E                     	;# 
   199  021F                     	;# 
   200  0291                     	;# 
   201  0291                     	;# 
   202  0292                     	;# 
   203  0293                     	;# 
   204  0294                     	;# 
   205  0295                     	;# 
   206  0295                     	;# 
   207  0296                     	;# 
   208  0298                     	;# 
   209  0298                     	;# 
   210  0299                     	;# 
   211  029A                     	;# 
   212  029B                     	;# 
   213  029C                     	;# 
   214  029C                     	;# 
   215  029D                     	;# 
   216  029E                     	;# 
   217  029E                     	;# 
   218  0311                     	;# 
   219  0311                     	;# 
   220  0312                     	;# 
   221  0313                     	;# 
   222  0318                     	;# 
   223  0318                     	;# 
   224  0319                     	;# 
   225  031A                     	;# 
   226  0394                     	;# 
   227  0395                     	;# 
   228  0396                     	;# 
   229  039A                     	;# 
   230  039C                     	;# 
   231  039D                     	;# 
   232  039E                     	;# 
   233  039F                     	;# 
   234  0415                     	;# 
   235  0416                     	;# 
   236  0417                     	;# 
   237  041C                     	;# 
   238  041D                     	;# 
   239  041E                     	;# 
   240  0FE4                     	;# 
   241  0FE5                     	;# 
   242  0FE6                     	;# 
   243  0FE7                     	;# 
   244  0FE8                     	;# 
   245  0FE9                     	;# 
   246  0FEA                     	;# 
   247  0FEB                     	;# 
   248  0FED                     	;# 
   249  0FEE                     	;# 
   250  0FEF                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  0111                     	;# 
   300  0112                     	;# 
   301  0113                     	;# 
   302  0114                     	;# 
   303  0115                     	;# 
   304  0116                     	;# 
   305  0117                     	;# 
   306  0118                     	;# 
   307  0119                     	;# 
   308  011A                     	;# 
   309  011B                     	;# 
   310  011D                     	;# 
   311  011E                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0191                     	;# 
   315  0191                     	;# 
   316  0192                     	;# 
   317  0193                     	;# 
   318  0193                     	;# 
   319  0193                     	;# 
   320  0194                     	;# 
   321  0195                     	;# 
   322  0196                     	;# 
   323  0199                     	;# 
   324  019A                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019C                     	;# 
   330  019C                     	;# 
   331  019D                     	;# 
   332  019E                     	;# 
   333  019F                     	;# 
   334  020C                     	;# 
   335  020D                     	;# 
   336  0211                     	;# 
   337  0211                     	;# 
   338  0212                     	;# 
   339  0212                     	;# 
   340  0213                     	;# 
   341  0213                     	;# 
   342  0214                     	;# 
   343  0214                     	;# 
   344  0215                     	;# 
   345  0215                     	;# 
   346  0215                     	;# 
   347  0216                     	;# 
   348  0216                     	;# 
   349  0217                     	;# 
   350  0217                     	;# 
   351  0219                     	;# 
   352  021A                     	;# 
   353  021B                     	;# 
   354  021C                     	;# 
   355  021D                     	;# 
   356  021E                     	;# 
   357  021F                     	;# 
   358  0291                     	;# 
   359  0291                     	;# 
   360  0292                     	;# 
   361  0293                     	;# 
   362  0294                     	;# 
   363  0295                     	;# 
   364  0295                     	;# 
   365  0296                     	;# 
   366  0298                     	;# 
   367  0298                     	;# 
   368  0299                     	;# 
   369  029A                     	;# 
   370  029B                     	;# 
   371  029C                     	;# 
   372  029C                     	;# 
   373  029D                     	;# 
   374  029E                     	;# 
   375  029E                     	;# 
   376  0311                     	;# 
   377  0311                     	;# 
   378  0312                     	;# 
   379  0313                     	;# 
   380  0318                     	;# 
   381  0318                     	;# 
   382  0319                     	;# 
   383  031A                     	;# 
   384  0394                     	;# 
   385  0395                     	;# 
   386  0396                     	;# 
   387  039A                     	;# 
   388  039C                     	;# 
   389  039D                     	;# 
   390  039E                     	;# 
   391  039F                     	;# 
   392  0415                     	;# 
   393  0416                     	;# 
   394  0417                     	;# 
   395  041C                     	;# 
   396  041D                     	;# 
   397  041E                     	;# 
   398  0FE4                     	;# 
   399  0FE5                     	;# 
   400  0FE6                     	;# 
   401  0FE7                     	;# 
   402  0FE8                     	;# 
   403  0FE9                     	;# 
   404  0FEA                     	;# 
   405  0FEB                     	;# 
   406  0FED                     	;# 
   407  0FEE                     	;# 
   408  0FEF                     	;# 
   409  0000                     	;# 
   410  0001                     	;# 
   411  0002                     	;# 
   412  0003                     	;# 
   413  0004                     	;# 
   414  0005                     	;# 
   415  0006                     	;# 
   416  0007                     	;# 
   417  0008                     	;# 
   418  0009                     	;# 
   419  000A                     	;# 
   420  000B                     	;# 
   421  000C                     	;# 
   422  000D                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001E                     	;# 
   437  001F                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  0091                     	;# 
   441  0092                     	;# 
   442  0093                     	;# 
   443  0094                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  010C                     	;# 
   456  010D                     	;# 
   457  0111                     	;# 
   458  0112                     	;# 
   459  0113                     	;# 
   460  0114                     	;# 
   461  0115                     	;# 
   462  0116                     	;# 
   463  0117                     	;# 
   464  0118                     	;# 
   465  0119                     	;# 
   466  011A                     	;# 
   467  011B                     	;# 
   468  011D                     	;# 
   469  011E                     	;# 
   470  018C                     	;# 
   471  018D                     	;# 
   472  0191                     	;# 
   473  0191                     	;# 
   474  0192                     	;# 
   475  0193                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0194                     	;# 
   479  0195                     	;# 
   480  0196                     	;# 
   481  0199                     	;# 
   482  019A                     	;# 
   483  019B                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019C                     	;# 
   488  019C                     	;# 
   489  019D                     	;# 
   490  019E                     	;# 
   491  019F                     	;# 
   492  020C                     	;# 
   493  020D                     	;# 
   494  0211                     	;# 
   495  0211                     	;# 
   496  0212                     	;# 
   497  0212                     	;# 
   498  0213                     	;# 
   499  0213                     	;# 
   500  0214                     	;# 
   501  0214                     	;# 
   502  0215                     	;# 
   503  0215                     	;# 
   504  0215                     	;# 
   505  0216                     	;# 
   506  0216                     	;# 
   507  0217                     	;# 
   508  0217                     	;# 
   509  0219                     	;# 
   510  021A                     	;# 
   511  021B                     	;# 
   512  021C                     	;# 
   513  021D                     	;# 
   514  021E                     	;# 
   515  021F                     	;# 
   516  0291                     	;# 
   517  0291                     	;# 
   518  0292                     	;# 
   519  0293                     	;# 
   520  0294                     	;# 
   521  0295                     	;# 
   522  0295                     	;# 
   523  0296                     	;# 
   524  0298                     	;# 
   525  0298                     	;# 
   526  0299                     	;# 
   527  029A                     	;# 
   528  029B                     	;# 
   529  029C                     	;# 
   530  029C                     	;# 
   531  029D                     	;# 
   532  029E                     	;# 
   533  029E                     	;# 
   534  0311                     	;# 
   535  0311                     	;# 
   536  0312                     	;# 
   537  0313                     	;# 
   538  0318                     	;# 
   539  0318                     	;# 
   540  0319                     	;# 
   541  031A                     	;# 
   542  0394                     	;# 
   543  0395                     	;# 
   544  0396                     	;# 
   545  039A                     	;# 
   546  039C                     	;# 
   547  039D                     	;# 
   548  039E                     	;# 
   549  039F                     	;# 
   550  0415                     	;# 
   551  0416                     	;# 
   552  0417                     	;# 
   553  041C                     	;# 
   554  041D                     	;# 
   555  041E                     	;# 
   556  0FE4                     	;# 
   557  0FE5                     	;# 
   558  0FE6                     	;# 
   559  0FE7                     	;# 
   560  0FE8                     	;# 
   561  0FE9                     	;# 
   562  0FEA                     	;# 
   563  0FEB                     	;# 
   564  0FED                     	;# 
   565  0FEE                     	;# 
   566  0FEF                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0008                     	;# 
   576  0009                     	;# 
   577  000A                     	;# 
   578  000B                     	;# 
   579  000C                     	;# 
   580  000D                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0016                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001C                     	;# 
   594  001E                     	;# 
   595  001F                     	;# 
   596  008C                     	;# 
   597  008D                     	;# 
   598  0091                     	;# 
   599  0092                     	;# 
   600  0093                     	;# 
   601  0094                     	;# 
   602  0095                     	;# 
   603  0096                     	;# 
   604  0097                     	;# 
   605  0098                     	;# 
   606  0099                     	;# 
   607  009A                     	;# 
   608  009B                     	;# 
   609  009B                     	;# 
   610  009C                     	;# 
   611  009D                     	;# 
   612  009E                     	;# 
   613  010C                     	;# 
   614  010D                     	;# 
   615  0111                     	;# 
   616  0112                     	;# 
   617  0113                     	;# 
   618  0114                     	;# 
   619  0115                     	;# 
   620  0116                     	;# 
   621  0117                     	;# 
   622  0118                     	;# 
   623  0119                     	;# 
   624  011A                     	;# 
   625  011B                     	;# 
   626  011D                     	;# 
   627  011E                     	;# 
   628  018C                     	;# 
   629  018D                     	;# 
   630  0191                     	;# 
   631  0191                     	;# 
   632  0192                     	;# 
   633  0193                     	;# 
   634  0193                     	;# 
   635  0193                     	;# 
   636  0194                     	;# 
   637  0195                     	;# 
   638  0196                     	;# 
   639  0199                     	;# 
   640  019A                     	;# 
   641  019B                     	;# 
   642  019B                     	;# 
   643  019B                     	;# 
   644  019B                     	;# 
   645  019C                     	;# 
   646  019C                     	;# 
   647  019D                     	;# 
   648  019E                     	;# 
   649  019F                     	;# 
   650  020C                     	;# 
   651  020D                     	;# 
   652  0211                     	;# 
   653  0211                     	;# 
   654  0212                     	;# 
   655  0212                     	;# 
   656  0213                     	;# 
   657  0213                     	;# 
   658  0214                     	;# 
   659  0214                     	;# 
   660  0215                     	;# 
   661  0215                     	;# 
   662  0215                     	;# 
   663  0216                     	;# 
   664  0216                     	;# 
   665  0217                     	;# 
   666  0217                     	;# 
   667  0219                     	;# 
   668  021A                     	;# 
   669  021B                     	;# 
   670  021C                     	;# 
   671  021D                     	;# 
   672  021E                     	;# 
   673  021F                     	;# 
   674  0291                     	;# 
   675  0291                     	;# 
   676  0292                     	;# 
   677  0293                     	;# 
   678  0294                     	;# 
   679  0295                     	;# 
   680  0295                     	;# 
   681  0296                     	;# 
   682  0298                     	;# 
   683  0298                     	;# 
   684  0299                     	;# 
   685  029A                     	;# 
   686  029B                     	;# 
   687  029C                     	;# 
   688  029C                     	;# 
   689  029D                     	;# 
   690  029E                     	;# 
   691  029E                     	;# 
   692  0311                     	;# 
   693  0311                     	;# 
   694  0312                     	;# 
   695  0313                     	;# 
   696  0318                     	;# 
   697  0318                     	;# 
   698  0319                     	;# 
   699  031A                     	;# 
   700  0394                     	;# 
   701  0395                     	;# 
   702  0396                     	;# 
   703  039A                     	;# 
   704  039C                     	;# 
   705  039D                     	;# 
   706  039E                     	;# 
   707  039F                     	;# 
   708  0415                     	;# 
   709  0416                     	;# 
   710  0417                     	;# 
   711  041C                     	;# 
   712  041D                     	;# 
   713  041E                     	;# 
   714  0FE4                     	;# 
   715  0FE5                     	;# 
   716  0FE6                     	;# 
   717  0FE7                     	;# 
   718  0FE8                     	;# 
   719  0FE9                     	;# 
   720  0FEA                     	;# 
   721  0FEB                     	;# 
   722  0FED                     	;# 
   723  0FEE                     	;# 
   724  0FEF                     	;# 
   725  0000                     	;# 
   726  0001                     	;# 
   727  0002                     	;# 
   728  0003                     	;# 
   729  0004                     	;# 
   730  0005                     	;# 
   731  0006                     	;# 
   732  0007                     	;# 
   733  0008                     	;# 
   734  0009                     	;# 
   735  000A                     	;# 
   736  000B                     	;# 
   737  000C                     	;# 
   738  000D                     	;# 
   739  0011                     	;# 
   740  0012                     	;# 
   741  0013                     	;# 
   742  0014                     	;# 
   743  0015                     	;# 
   744  0016                     	;# 
   745  0016                     	;# 
   746  0017                     	;# 
   747  0018                     	;# 
   748  0019                     	;# 
   749  001A                     	;# 
   750  001B                     	;# 
   751  001C                     	;# 
   752  001E                     	;# 
   753  001F                     	;# 
   754  008C                     	;# 
   755  008D                     	;# 
   756  0091                     	;# 
   757  0092                     	;# 
   758  0093                     	;# 
   759  0094                     	;# 
   760  0095                     	;# 
   761  0096                     	;# 
   762  0097                     	;# 
   763  0098                     	;# 
   764  0099                     	;# 
   765  009A                     	;# 
   766  009B                     	;# 
   767  009B                     	;# 
   768  009C                     	;# 
   769  009D                     	;# 
   770  009E                     	;# 
   771  010C                     	;# 
   772  010D                     	;# 
   773  0111                     	;# 
   774  0112                     	;# 
   775  0113                     	;# 
   776  0114                     	;# 
   777  0115                     	;# 
   778  0116                     	;# 
   779  0117                     	;# 
   780  0118                     	;# 
   781  0119                     	;# 
   782  011A                     	;# 
   783  011B                     	;# 
   784  011D                     	;# 
   785  011E                     	;# 
   786  018C                     	;# 
   787  018D                     	;# 
   788  0191                     	;# 
   789  0191                     	;# 
   790  0192                     	;# 
   791  0193                     	;# 
   792  0193                     	;# 
   793  0193                     	;# 
   794  0194                     	;# 
   795  0195                     	;# 
   796  0196                     	;# 
   797  0199                     	;# 
   798  019A                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019C                     	;# 
   805  019D                     	;# 
   806  019E                     	;# 
   807  019F                     	;# 
   808  020C                     	;# 
   809  020D                     	;# 
   810  0211                     	;# 
   811  0211                     	;# 
   812  0212                     	;# 
   813  0212                     	;# 
   814  0213                     	;# 
   815  0213                     	;# 
   816  0214                     	;# 
   817  0214                     	;# 
   818  0215                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0216                     	;# 
   822  0216                     	;# 
   823  0217                     	;# 
   824  0217                     	;# 
   825  0219                     	;# 
   826  021A                     	;# 
   827  021B                     	;# 
   828  021C                     	;# 
   829  021D                     	;# 
   830  021E                     	;# 
   831  021F                     	;# 
   832  0291                     	;# 
   833  0291                     	;# 
   834  0292                     	;# 
   835  0293                     	;# 
   836  0294                     	;# 
   837  0295                     	;# 
   838  0295                     	;# 
   839  0296                     	;# 
   840  0298                     	;# 
   841  0298                     	;# 
   842  0299                     	;# 
   843  029A                     	;# 
   844  029B                     	;# 
   845  029C                     	;# 
   846  029C                     	;# 
   847  029D                     	;# 
   848  029E                     	;# 
   849  029E                     	;# 
   850  0311                     	;# 
   851  0311                     	;# 
   852  0312                     	;# 
   853  0313                     	;# 
   854  0318                     	;# 
   855  0318                     	;# 
   856  0319                     	;# 
   857  031A                     	;# 
   858  0394                     	;# 
   859  0395                     	;# 
   860  0396                     	;# 
   861  039A                     	;# 
   862  039C                     	;# 
   863  039D                     	;# 
   864  039E                     	;# 
   865  039F                     	;# 
   866  0415                     	;# 
   867  0416                     	;# 
   868  0417                     	;# 
   869  041C                     	;# 
   870  041D                     	;# 
   871  041E                     	;# 
   872  0FE4                     	;# 
   873  0FE5                     	;# 
   874  0FE6                     	;# 
   875  0FE7                     	;# 
   876  0FE8                     	;# 
   877  0FE9                     	;# 
   878  0FEA                     	;# 
   879  0FEB                     	;# 
   880  0FED                     	;# 
   881  0FEE                     	;# 
   882  0FEF                     	;# 
   883  0000                     	;# 
   884  0001                     	;# 
   885  0002                     	;# 
   886  0003                     	;# 
   887  0004                     	;# 
   888  0005                     	;# 
   889  0006                     	;# 
   890  0007                     	;# 
   891  0008                     	;# 
   892  0009                     	;# 
   893  000A                     	;# 
   894  000B                     	;# 
   895  000C                     	;# 
   896  000D                     	;# 
   897  0011                     	;# 
   898  0012                     	;# 
   899  0013                     	;# 
   900  0014                     	;# 
   901  0015                     	;# 
   902  0016                     	;# 
   903  0016                     	;# 
   904  0017                     	;# 
   905  0018                     	;# 
   906  0019                     	;# 
   907  001A                     	;# 
   908  001B                     	;# 
   909  001C                     	;# 
   910  001E                     	;# 
   911  001F                     	;# 
   912  008C                     	;# 
   913  008D                     	;# 
   914  0091                     	;# 
   915  0092                     	;# 
   916  0093                     	;# 
   917  0094                     	;# 
   918  0095                     	;# 
   919  0096                     	;# 
   920  0097                     	;# 
   921  0098                     	;# 
   922  0099                     	;# 
   923  009A                     	;# 
   924  009B                     	;# 
   925  009B                     	;# 
   926  009C                     	;# 
   927  009D                     	;# 
   928  009E                     	;# 
   929  010C                     	;# 
   930  010D                     	;# 
   931  0111                     	;# 
   932  0112                     	;# 
   933  0113                     	;# 
   934  0114                     	;# 
   935  0115                     	;# 
   936  0116                     	;# 
   937  0117                     	;# 
   938  0118                     	;# 
   939  0119                     	;# 
   940  011A                     	;# 
   941  011B                     	;# 
   942  011D                     	;# 
   943  011E                     	;# 
   944  018C                     	;# 
   945  018D                     	;# 
   946  0191                     	;# 
   947  0191                     	;# 
   948  0192                     	;# 
   949  0193                     	;# 
   950  0193                     	;# 
   951  0193                     	;# 
   952  0194                     	;# 
   953  0195                     	;# 
   954  0196                     	;# 
   955  0199                     	;# 
   956  019A                     	;# 
   957  019B                     	;# 
   958  019B                     	;# 
   959  019B                     	;# 
   960  019B                     	;# 
   961  019C                     	;# 
   962  019C                     	;# 
   963  019D                     	;# 
   964  019E                     	;# 
   965  019F                     	;# 
   966  020C                     	;# 
   967  020D                     	;# 
   968  0211                     	;# 
   969  0211                     	;# 
   970  0212                     	;# 
   971  0212                     	;# 
   972  0213                     	;# 
   973  0213                     	;# 
   974  0214                     	;# 
   975  0214                     	;# 
   976  0215                     	;# 
   977  0215                     	;# 
   978  0215                     	;# 
   979  0216                     	;# 
   980  0216                     	;# 
   981  0217                     	;# 
   982  0217                     	;# 
   983  0219                     	;# 
   984  021A                     	;# 
   985  021B                     	;# 
   986  021C                     	;# 
   987  021D                     	;# 
   988  021E                     	;# 
   989  021F                     	;# 
   990  0291                     	;# 
   991  0291                     	;# 
   992  0292                     	;# 
   993  0293                     	;# 
   994  0294                     	;# 
   995  0295                     	;# 
   996  0295                     	;# 
   997  0296                     	;# 
   998  0298                     	;# 
   999  0298                     	;# 
  1000  0299                     	;# 
  1001  029A                     	;# 
  1002  029B                     	;# 
  1003  029C                     	;# 
  1004  029C                     	;# 
  1005  029D                     	;# 
  1006  029E                     	;# 
  1007  029E                     	;# 
  1008  0311                     	;# 
  1009  0311                     	;# 
  1010  0312                     	;# 
  1011  0313                     	;# 
  1012  0318                     	;# 
  1013  0318                     	;# 
  1014  0319                     	;# 
  1015  031A                     	;# 
  1016  0394                     	;# 
  1017  0395                     	;# 
  1018  0396                     	;# 
  1019  039A                     	;# 
  1020  039C                     	;# 
  1021  039D                     	;# 
  1022  039E                     	;# 
  1023  039F                     	;# 
  1024  0415                     	;# 
  1025  0416                     	;# 
  1026  0417                     	;# 
  1027  041C                     	;# 
  1028  041D                     	;# 
  1029  041E                     	;# 
  1030  0FE4                     	;# 
  1031  0FE5                     	;# 
  1032  0FE6                     	;# 
  1033  0FE7                     	;# 
  1034  0FE8                     	;# 
  1035  0FE9                     	;# 
  1036  0FEA                     	;# 
  1037  0FEB                     	;# 
  1038  0FED                     	;# 
  1039  0FEE                     	;# 
  1040  0FEF                     	;# 
  1041  0000                     	;# 
  1042  0001                     	;# 
  1043  0002                     	;# 
  1044  0003                     	;# 
  1045  0004                     	;# 
  1046  0005                     	;# 
  1047  0006                     	;# 
  1048  0007                     	;# 
  1049  0008                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  0011                     	;# 
  1056  0012                     	;# 
  1057  0013                     	;# 
  1058  0014                     	;# 
  1059  0015                     	;# 
  1060  0016                     	;# 
  1061  0016                     	;# 
  1062  0017                     	;# 
  1063  0018                     	;# 
  1064  0019                     	;# 
  1065  001A                     	;# 
  1066  001B                     	;# 
  1067  001C                     	;# 
  1068  001E                     	;# 
  1069  001F                     	;# 
  1070  008C                     	;# 
  1071  008D                     	;# 
  1072  0091                     	;# 
  1073  0092                     	;# 
  1074  0093                     	;# 
  1075  0094                     	;# 
  1076  0095                     	;# 
  1077  0096                     	;# 
  1078  0097                     	;# 
  1079  0098                     	;# 
  1080  0099                     	;# 
  1081  009A                     	;# 
  1082  009B                     	;# 
  1083  009B                     	;# 
  1084  009C                     	;# 
  1085  009D                     	;# 
  1086  009E                     	;# 
  1087  010C                     	;# 
  1088  010D                     	;# 
  1089  0111                     	;# 
  1090  0112                     	;# 
  1091  0113                     	;# 
  1092  0114                     	;# 
  1093  0115                     	;# 
  1094  0116                     	;# 
  1095  0117                     	;# 
  1096  0118                     	;# 
  1097  0119                     	;# 
  1098  011A                     	;# 
  1099  011B                     	;# 
  1100  011D                     	;# 
  1101  011E                     	;# 
  1102  018C                     	;# 
  1103  018D                     	;# 
  1104  0191                     	;# 
  1105  0191                     	;# 
  1106  0192                     	;# 
  1107  0193                     	;# 
  1108  0193                     	;# 
  1109  0193                     	;# 
  1110  0194                     	;# 
  1111  0195                     	;# 
  1112  0196                     	;# 
  1113  0199                     	;# 
  1114  019A                     	;# 
  1115  019B                     	;# 
  1116  019B                     	;# 
  1117  019B                     	;# 
  1118  019B                     	;# 
  1119  019C                     	;# 
  1120  019C                     	;# 
  1121  019D                     	;# 
  1122  019E                     	;# 
  1123  019F                     	;# 
  1124  020C                     	;# 
  1125  020D                     	;# 
  1126  0211                     	;# 
  1127  0211                     	;# 
  1128  0212                     	;# 
  1129  0212                     	;# 
  1130  0213                     	;# 
  1131  0213                     	;# 
  1132  0214                     	;# 
  1133  0214                     	;# 
  1134  0215                     	;# 
  1135  0215                     	;# 
  1136  0215                     	;# 
  1137  0216                     	;# 
  1138  0216                     	;# 
  1139  0217                     	;# 
  1140  0217                     	;# 
  1141  0219                     	;# 
  1142  021A                     	;# 
  1143  021B                     	;# 
  1144  021C                     	;# 
  1145  021D                     	;# 
  1146  021E                     	;# 
  1147  021F                     	;# 
  1148  0291                     	;# 
  1149  0291                     	;# 
  1150  0292                     	;# 
  1151  0293                     	;# 
  1152  0294                     	;# 
  1153  0295                     	;# 
  1154  0295                     	;# 
  1155  0296                     	;# 
  1156  0298                     	;# 
  1157  0298                     	;# 
  1158  0299                     	;# 
  1159  029A                     	;# 
  1160  029B                     	;# 
  1161  029C                     	;# 
  1162  029C                     	;# 
  1163  029D                     	;# 
  1164  029E                     	;# 
  1165  029E                     	;# 
  1166  0311                     	;# 
  1167  0311                     	;# 
  1168  0312                     	;# 
  1169  0313                     	;# 
  1170  0318                     	;# 
  1171  0318                     	;# 
  1172  0319                     	;# 
  1173  031A                     	;# 
  1174  0394                     	;# 
  1175  0395                     	;# 
  1176  0396                     	;# 
  1177  039A                     	;# 
  1178  039C                     	;# 
  1179  039D                     	;# 
  1180  039E                     	;# 
  1181  039F                     	;# 
  1182  0415                     	;# 
  1183  0416                     	;# 
  1184  0417                     	;# 
  1185  041C                     	;# 
  1186  041D                     	;# 
  1187  041E                     	;# 
  1188  0FE4                     	;# 
  1189  0FE5                     	;# 
  1190  0FE6                     	;# 
  1191  0FE7                     	;# 
  1192  0FE8                     	;# 
  1193  0FE9                     	;# 
  1194  0FEA                     	;# 
  1195  0FEB                     	;# 
  1196  0FED                     	;# 
  1197  0FEE                     	;# 
  1198  0FEF                     	;# 
  1199  0000                     	;# 
  1200  0001                     	;# 
  1201  0002                     	;# 
  1202  0003                     	;# 
  1203  0004                     	;# 
  1204  0005                     	;# 
  1205  0006                     	;# 
  1206  0007                     	;# 
  1207  0008                     	;# 
  1208  0009                     	;# 
  1209  000A                     	;# 
  1210  000B                     	;# 
  1211  000C                     	;# 
  1212  000D                     	;# 
  1213  0011                     	;# 
  1214  0012                     	;# 
  1215  0013                     	;# 
  1216  0014                     	;# 
  1217  0015                     	;# 
  1218  0016                     	;# 
  1219  0016                     	;# 
  1220  0017                     	;# 
  1221  0018                     	;# 
  1222  0019                     	;# 
  1223  001A                     	;# 
  1224  001B                     	;# 
  1225  001C                     	;# 
  1226  001E                     	;# 
  1227  001F                     	;# 
  1228  008C                     	;# 
  1229  008D                     	;# 
  1230  0091                     	;# 
  1231  0092                     	;# 
  1232  0093                     	;# 
  1233  0094                     	;# 
  1234  0095                     	;# 
  1235  0096                     	;# 
  1236  0097                     	;# 
  1237  0098                     	;# 
  1238  0099                     	;# 
  1239  009A                     	;# 
  1240  009B                     	;# 
  1241  009B                     	;# 
  1242  009C                     	;# 
  1243  009D                     	;# 
  1244  009E                     	;# 
  1245  010C                     	;# 
  1246  010D                     	;# 
  1247  0111                     	;# 
  1248  0112                     	;# 
  1249  0113                     	;# 
  1250  0114                     	;# 
  1251  0115                     	;# 
  1252  0116                     	;# 
  1253  0117                     	;# 
  1254  0118                     	;# 
  1255  0119                     	;# 
  1256  011A                     	;# 
  1257  011B                     	;# 
  1258  011D                     	;# 
  1259  011E                     	;# 
  1260  018C                     	;# 
  1261  018D                     	;# 
  1262  0191                     	;# 
  1263  0191                     	;# 
  1264  0192                     	;# 
  1265  0193                     	;# 
  1266  0193                     	;# 
  1267  0193                     	;# 
  1268  0194                     	;# 
  1269  0195                     	;# 
  1270  0196                     	;# 
  1271  0199                     	;# 
  1272  019A                     	;# 
  1273  019B                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019B                     	;# 
  1277  019C                     	;# 
  1278  019C                     	;# 
  1279  019D                     	;# 
  1280  019E                     	;# 
  1281  019F                     	;# 
  1282  020C                     	;# 
  1283  020D                     	;# 
  1284  0211                     	;# 
  1285  0211                     	;# 
  1286  0212                     	;# 
  1287  0212                     	;# 
  1288  0213                     	;# 
  1289  0213                     	;# 
  1290  0214                     	;# 
  1291  0214                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0216                     	;# 
  1296  0216                     	;# 
  1297  0217                     	;# 
  1298  0217                     	;# 
  1299  0219                     	;# 
  1300  021A                     	;# 
  1301  021B                     	;# 
  1302  021C                     	;# 
  1303  021D                     	;# 
  1304  021E                     	;# 
  1305  021F                     	;# 
  1306  0291                     	;# 
  1307  0291                     	;# 
  1308  0292                     	;# 
  1309  0293                     	;# 
  1310  0294                     	;# 
  1311  0295                     	;# 
  1312  0295                     	;# 
  1313  0296                     	;# 
  1314  0298                     	;# 
  1315  0298                     	;# 
  1316  0299                     	;# 
  1317  029A                     	;# 
  1318  029B                     	;# 
  1319  029C                     	;# 
  1320  029C                     	;# 
  1321  029D                     	;# 
  1322  029E                     	;# 
  1323  029E                     	;# 
  1324  0311                     	;# 
  1325  0311                     	;# 
  1326  0312                     	;# 
  1327  0313                     	;# 
  1328  0318                     	;# 
  1329  0318                     	;# 
  1330  0319                     	;# 
  1331  031A                     	;# 
  1332  0394                     	;# 
  1333  0395                     	;# 
  1334  0396                     	;# 
  1335  039A                     	;# 
  1336  039C                     	;# 
  1337  039D                     	;# 
  1338  039E                     	;# 
  1339  039F                     	;# 
  1340  0415                     	;# 
  1341  0416                     	;# 
  1342  0417                     	;# 
  1343  041C                     	;# 
  1344  041D                     	;# 
  1345  041E                     	;# 
  1346  0FE4                     	;# 
  1347  0FE5                     	;# 
  1348  0FE6                     	;# 
  1349  0FE7                     	;# 
  1350  0FE8                     	;# 
  1351  0FE9                     	;# 
  1352  0FEA                     	;# 
  1353  0FEB                     	;# 
  1354  0FED                     	;# 
  1355  0FEE                     	;# 
  1356  0FEF                     	;# 
  1357  0000                     	;# 
  1358  0001                     	;# 
  1359  0002                     	;# 
  1360  0003                     	;# 
  1361  0004                     	;# 
  1362  0005                     	;# 
  1363  0006                     	;# 
  1364  0007                     	;# 
  1365  0008                     	;# 
  1366  0009                     	;# 
  1367  000A                     	;# 
  1368  000B                     	;# 
  1369  000C                     	;# 
  1370  000D                     	;# 
  1371  0011                     	;# 
  1372  0012                     	;# 
  1373  0013                     	;# 
  1374  0014                     	;# 
  1375  0015                     	;# 
  1376  0016                     	;# 
  1377  0016                     	;# 
  1378  0017                     	;# 
  1379  0018                     	;# 
  1380  0019                     	;# 
  1381  001A                     	;# 
  1382  001B                     	;# 
  1383  001C                     	;# 
  1384  001E                     	;# 
  1385  001F                     	;# 
  1386  008C                     	;# 
  1387  008D                     	;# 
  1388  0091                     	;# 
  1389  0092                     	;# 
  1390  0093                     	;# 
  1391  0094                     	;# 
  1392  0095                     	;# 
  1393  0096                     	;# 
  1394  0097                     	;# 
  1395  0098                     	;# 
  1396  0099                     	;# 
  1397  009A                     	;# 
  1398  009B                     	;# 
  1399  009B                     	;# 
  1400  009C                     	;# 
  1401  009D                     	;# 
  1402  009E                     	;# 
  1403  010C                     	;# 
  1404  010D                     	;# 
  1405  0111                     	;# 
  1406  0112                     	;# 
  1407  0113                     	;# 
  1408  0114                     	;# 
  1409  0115                     	;# 
  1410  0116                     	;# 
  1411  0117                     	;# 
  1412  0118                     	;# 
  1413  0119                     	;# 
  1414  011A                     	;# 
  1415  011B                     	;# 
  1416  011D                     	;# 
  1417  011E                     	;# 
  1418  018C                     	;# 
  1419  018D                     	;# 
  1420  0191                     	;# 
  1421  0191                     	;# 
  1422  0192                     	;# 
  1423  0193                     	;# 
  1424  0193                     	;# 
  1425  0193                     	;# 
  1426  0194                     	;# 
  1427  0195                     	;# 
  1428  0196                     	;# 
  1429  0199                     	;# 
  1430  019A                     	;# 
  1431  019B                     	;# 
  1432  019B                     	;# 
  1433  019B                     	;# 
  1434  019B                     	;# 
  1435  019C                     	;# 
  1436  019C                     	;# 
  1437  019D                     	;# 
  1438  019E                     	;# 
  1439  019F                     	;# 
  1440  020C                     	;# 
  1441  020D                     	;# 
  1442  0211                     	;# 
  1443  0211                     	;# 
  1444  0212                     	;# 
  1445  0212                     	;# 
  1446  0213                     	;# 
  1447  0213                     	;# 
  1448  0214                     	;# 
  1449  0214                     	;# 
  1450  0215                     	;# 
  1451  0215                     	;# 
  1452  0215                     	;# 
  1453  0216                     	;# 
  1454  0216                     	;# 
  1455  0217                     	;# 
  1456  0217                     	;# 
  1457  0219                     	;# 
  1458  021A                     	;# 
  1459  021B                     	;# 
  1460  021C                     	;# 
  1461  021D                     	;# 
  1462  021E                     	;# 
  1463  021F                     	;# 
  1464  0291                     	;# 
  1465  0291                     	;# 
  1466  0292                     	;# 
  1467  0293                     	;# 
  1468  0294                     	;# 
  1469  0295                     	;# 
  1470  0295                     	;# 
  1471  0296                     	;# 
  1472  0298                     	;# 
  1473  0298                     	;# 
  1474  0299                     	;# 
  1475  029A                     	;# 
  1476  029B                     	;# 
  1477  029C                     	;# 
  1478  029C                     	;# 
  1479  029D                     	;# 
  1480  029E                     	;# 
  1481  029E                     	;# 
  1482  0311                     	;# 
  1483  0311                     	;# 
  1484  0312                     	;# 
  1485  0313                     	;# 
  1486  0318                     	;# 
  1487  0318                     	;# 
  1488  0319                     	;# 
  1489  031A                     	;# 
  1490  0394                     	;# 
  1491  0395                     	;# 
  1492  0396                     	;# 
  1493  039A                     	;# 
  1494  039C                     	;# 
  1495  039D                     	;# 
  1496  039E                     	;# 
  1497  039F                     	;# 
  1498  0415                     	;# 
  1499  0416                     	;# 
  1500  0417                     	;# 
  1501  041C                     	;# 
  1502  041D                     	;# 
  1503  041E                     	;# 
  1504  0FE4                     	;# 
  1505  0FE5                     	;# 
  1506  0FE6                     	;# 
  1507  0FE7                     	;# 
  1508  0FE8                     	;# 
  1509  0FE9                     	;# 
  1510  0FEA                     	;# 
  1511  0FEB                     	;# 
  1512  0FED                     	;# 
  1513  0FEE                     	;# 
  1514  0FEF                     	;# 
  1515  0000                     	;# 
  1516  0001                     	;# 
  1517  0002                     	;# 
  1518  0003                     	;# 
  1519  0004                     	;# 
  1520  0005                     	;# 
  1521  0006                     	;# 
  1522  0007                     	;# 
  1523  0008                     	;# 
  1524  0009                     	;# 
  1525  000A                     	;# 
  1526  000B                     	;# 
  1527  000C                     	;# 
  1528  000D                     	;# 
  1529  0011                     	;# 
  1530  0012                     	;# 
  1531  0013                     	;# 
  1532  0014                     	;# 
  1533  0015                     	;# 
  1534  0016                     	;# 
  1535  0016                     	;# 
  1536  0017                     	;# 
  1537  0018                     	;# 
  1538  0019                     	;# 
  1539  001A                     	;# 
  1540  001B                     	;# 
  1541  001C                     	;# 
  1542  001E                     	;# 
  1543  001F                     	;# 
  1544  008C                     	;# 
  1545  008D                     	;# 
  1546  0091                     	;# 
  1547  0092                     	;# 
  1548  0093                     	;# 
  1549  0094                     	;# 
  1550  0095                     	;# 
  1551  0096                     	;# 
  1552  0097                     	;# 
  1553  0098                     	;# 
  1554  0099                     	;# 
  1555  009A                     	;# 
  1556  009B                     	;# 
  1557  009B                     	;# 
  1558  009C                     	;# 
  1559  009D                     	;# 
  1560  009E                     	;# 
  1561  010C                     	;# 
  1562  010D                     	;# 
  1563  0111                     	;# 
  1564  0112                     	;# 
  1565  0113                     	;# 
  1566  0114                     	;# 
  1567  0115                     	;# 
  1568  0116                     	;# 
  1569  0117                     	;# 
  1570  0118                     	;# 
  1571  0119                     	;# 
  1572  011A                     	;# 
  1573  011B                     	;# 
  1574  011D                     	;# 
  1575  011E                     	;# 
  1576  018C                     	;# 
  1577  018D                     	;# 
  1578  0191                     	;# 
  1579  0191                     	;# 
  1580  0192                     	;# 
  1581  0193                     	;# 
  1582  0193                     	;# 
  1583  0193                     	;# 
  1584  0194                     	;# 
  1585  0195                     	;# 
  1586  0196                     	;# 
  1587  0199                     	;# 
  1588  019A                     	;# 
  1589  019B                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019C                     	;# 
  1594  019C                     	;# 
  1595  019D                     	;# 
  1596  019E                     	;# 
  1597  019F                     	;# 
  1598  020C                     	;# 
  1599  020D                     	;# 
  1600  0211                     	;# 
  1601  0211                     	;# 
  1602  0212                     	;# 
  1603  0212                     	;# 
  1604  0213                     	;# 
  1605  0213                     	;# 
  1606  0214                     	;# 
  1607  0214                     	;# 
  1608  0215                     	;# 
  1609  0215                     	;# 
  1610  0215                     	;# 
  1611  0216                     	;# 
  1612  0216                     	;# 
  1613  0217                     	;# 
  1614  0217                     	;# 
  1615  0219                     	;# 
  1616  021A                     	;# 
  1617  021B                     	;# 
  1618  021C                     	;# 
  1619  021D                     	;# 
  1620  021E                     	;# 
  1621  021F                     	;# 
  1622  0291                     	;# 
  1623  0291                     	;# 
  1624  0292                     	;# 
  1625  0293                     	;# 
  1626  0294                     	;# 
  1627  0295                     	;# 
  1628  0295                     	;# 
  1629  0296                     	;# 
  1630  0298                     	;# 
  1631  0298                     	;# 
  1632  0299                     	;# 
  1633  029A                     	;# 
  1634  029B                     	;# 
  1635  029C                     	;# 
  1636  029C                     	;# 
  1637  029D                     	;# 
  1638  029E                     	;# 
  1639  029E                     	;# 
  1640  0311                     	;# 
  1641  0311                     	;# 
  1642  0312                     	;# 
  1643  0313                     	;# 
  1644  0318                     	;# 
  1645  0318                     	;# 
  1646  0319                     	;# 
  1647  031A                     	;# 
  1648  0394                     	;# 
  1649  0395                     	;# 
  1650  0396                     	;# 
  1651  039A                     	;# 
  1652  039C                     	;# 
  1653  039D                     	;# 
  1654  039E                     	;# 
  1655  039F                     	;# 
  1656  0415                     	;# 
  1657  0416                     	;# 
  1658  0417                     	;# 
  1659  041C                     	;# 
  1660  041D                     	;# 
  1661  041E                     	;# 
  1662  0FE4                     	;# 
  1663  0FE5                     	;# 
  1664  0FE6                     	;# 
  1665  0FE7                     	;# 
  1666  0FE8                     	;# 
  1667  0FE9                     	;# 
  1668  0FEA                     	;# 
  1669  0FEB                     	;# 
  1670  0FED                     	;# 
  1671  0FEE                     	;# 
  1672  0FEF                     	;# 
  1673  0000                     	;# 
  1674  0001                     	;# 
  1675  0002                     	;# 
  1676  0003                     	;# 
  1677  0004                     	;# 
  1678  0005                     	;# 
  1679  0006                     	;# 
  1680  0007                     	;# 
  1681  0008                     	;# 
  1682  0009                     	;# 
  1683  000A                     	;# 
  1684  000B                     	;# 
  1685  000C                     	;# 
  1686  000D                     	;# 
  1687  0011                     	;# 
  1688  0012                     	;# 
  1689  0013                     	;# 
  1690  0014                     	;# 
  1691  0015                     	;# 
  1692  0016                     	;# 
  1693  0016                     	;# 
  1694  0017                     	;# 
  1695  0018                     	;# 
  1696  0019                     	;# 
  1697  001A                     	;# 
  1698  001B                     	;# 
  1699  001C                     	;# 
  1700  001E                     	;# 
  1701  001F                     	;# 
  1702  008C                     	;# 
  1703  008D                     	;# 
  1704  0091                     	;# 
  1705  0092                     	;# 
  1706  0093                     	;# 
  1707  0094                     	;# 
  1708  0095                     	;# 
  1709  0096                     	;# 
  1710  0097                     	;# 
  1711  0098                     	;# 
  1712  0099                     	;# 
  1713  009A                     	;# 
  1714  009B                     	;# 
  1715  009B                     	;# 
  1716  009C                     	;# 
  1717  009D                     	;# 
  1718  009E                     	;# 
  1719  010C                     	;# 
  1720  010D                     	;# 
  1721  0111                     	;# 
  1722  0112                     	;# 
  1723  0113                     	;# 
  1724  0114                     	;# 
  1725  0115                     	;# 
  1726  0116                     	;# 
  1727  0117                     	;# 
  1728  0118                     	;# 
  1729  0119                     	;# 
  1730  011A                     	;# 
  1731  011B                     	;# 
  1732  011D                     	;# 
  1733  011E                     	;# 
  1734  018C                     	;# 
  1735  018D                     	;# 
  1736  0191                     	;# 
  1737  0191                     	;# 
  1738  0192                     	;# 
  1739  0193                     	;# 
  1740  0193                     	;# 
  1741  0193                     	;# 
  1742  0194                     	;# 
  1743  0195                     	;# 
  1744  0196                     	;# 
  1745  0199                     	;# 
  1746  019A                     	;# 
  1747  019B                     	;# 
  1748  019B                     	;# 
  1749  019B                     	;# 
  1750  019B                     	;# 
  1751  019C                     	;# 
  1752  019C                     	;# 
  1753  019D                     	;# 
  1754  019E                     	;# 
  1755  019F                     	;# 
  1756  020C                     	;# 
  1757  020D                     	;# 
  1758  0211                     	;# 
  1759  0211                     	;# 
  1760  0212                     	;# 
  1761  0212                     	;# 
  1762  0213                     	;# 
  1763  0213                     	;# 
  1764  0214                     	;# 
  1765  0214                     	;# 
  1766  0215                     	;# 
  1767  0215                     	;# 
  1768  0215                     	;# 
  1769  0216                     	;# 
  1770  0216                     	;# 
  1771  0217                     	;# 
  1772  0217                     	;# 
  1773  0219                     	;# 
  1774  021A                     	;# 
  1775  021B                     	;# 
  1776  021C                     	;# 
  1777  021D                     	;# 
  1778  021E                     	;# 
  1779  021F                     	;# 
  1780  0291                     	;# 
  1781  0291                     	;# 
  1782  0292                     	;# 
  1783  0293                     	;# 
  1784  0294                     	;# 
  1785  0295                     	;# 
  1786  0295                     	;# 
  1787  0296                     	;# 
  1788  0298                     	;# 
  1789  0298                     	;# 
  1790  0299                     	;# 
  1791  029A                     	;# 
  1792  029B                     	;# 
  1793  029C                     	;# 
  1794  029C                     	;# 
  1795  029D                     	;# 
  1796  029E                     	;# 
  1797  029E                     	;# 
  1798  0311                     	;# 
  1799  0311                     	;# 
  1800  0312                     	;# 
  1801  0313                     	;# 
  1802  0318                     	;# 
  1803  0318                     	;# 
  1804  0319                     	;# 
  1805  031A                     	;# 
  1806  0394                     	;# 
  1807  0395                     	;# 
  1808  0396                     	;# 
  1809  039A                     	;# 
  1810  039C                     	;# 
  1811  039D                     	;# 
  1812  039E                     	;# 
  1813  039F                     	;# 
  1814  0415                     	;# 
  1815  0416                     	;# 
  1816  0417                     	;# 
  1817  041C                     	;# 
  1818  041D                     	;# 
  1819  041E                     	;# 
  1820  0FE4                     	;# 
  1821  0FE5                     	;# 
  1822  0FE6                     	;# 
  1823  0FE7                     	;# 
  1824  0FE8                     	;# 
  1825  0FE9                     	;# 
  1826  0FEA                     	;# 
  1827  0FEB                     	;# 
  1828  0FED                     	;# 
  1829  0FEE                     	;# 
  1830  0FEF                     	;# 
  1831  0000                     	;# 
  1832  0001                     	;# 
  1833  0002                     	;# 
  1834  0003                     	;# 
  1835  0004                     	;# 
  1836  0005                     	;# 
  1837  0006                     	;# 
  1838  0007                     	;# 
  1839  0008                     	;# 
  1840  0009                     	;# 
  1841  000A                     	;# 
  1842  000B                     	;# 
  1843  000C                     	;# 
  1844  000D                     	;# 
  1845  0011                     	;# 
  1846  0012                     	;# 
  1847  0013                     	;# 
  1848  0014                     	;# 
  1849  0015                     	;# 
  1850  0016                     	;# 
  1851  0016                     	;# 
  1852  0017                     	;# 
  1853  0018                     	;# 
  1854  0019                     	;# 
  1855  001A                     	;# 
  1856  001B                     	;# 
  1857  001C                     	;# 
  1858  001E                     	;# 
  1859  001F                     	;# 
  1860  008C                     	;# 
  1861  008D                     	;# 
  1862  0091                     	;# 
  1863  0092                     	;# 
  1864  0093                     	;# 
  1865  0094                     	;# 
  1866  0095                     	;# 
  1867  0096                     	;# 
  1868  0097                     	;# 
  1869  0098                     	;# 
  1870  0099                     	;# 
  1871  009A                     	;# 
  1872  009B                     	;# 
  1873  009B                     	;# 
  1874  009C                     	;# 
  1875  009D                     	;# 
  1876  009E                     	;# 
  1877  010C                     	;# 
  1878  010D                     	;# 
  1879  0111                     	;# 
  1880  0112                     	;# 
  1881  0113                     	;# 
  1882  0114                     	;# 
  1883  0115                     	;# 
  1884  0116                     	;# 
  1885  0117                     	;# 
  1886  0118                     	;# 
  1887  0119                     	;# 
  1888  011A                     	;# 
  1889  011B                     	;# 
  1890  011D                     	;# 
  1891  011E                     	;# 
  1892  018C                     	;# 
  1893  018D                     	;# 
  1894  0191                     	;# 
  1895  0191                     	;# 
  1896  0192                     	;# 
  1897  0193                     	;# 
  1898  0193                     	;# 
  1899  0193                     	;# 
  1900  0194                     	;# 
  1901  0195                     	;# 
  1902  0196                     	;# 
  1903  0199                     	;# 
  1904  019A                     	;# 
  1905  019B                     	;# 
  1906  019B                     	;# 
  1907  019B                     	;# 
  1908  019B                     	;# 
  1909  019C                     	;# 
  1910  019C                     	;# 
  1911  019D                     	;# 
  1912  019E                     	;# 
  1913  019F                     	;# 
  1914  020C                     	;# 
  1915  020D                     	;# 
  1916  0211                     	;# 
  1917  0211                     	;# 
  1918  0212                     	;# 
  1919  0212                     	;# 
  1920  0213                     	;# 
  1921  0213                     	;# 
  1922  0214                     	;# 
  1923  0214                     	;# 
  1924  0215                     	;# 
  1925  0215                     	;# 
  1926  0215                     	;# 
  1927  0216                     	;# 
  1928  0216                     	;# 
  1929  0217                     	;# 
  1930  0217                     	;# 
  1931  0219                     	;# 
  1932  021A                     	;# 
  1933  021B                     	;# 
  1934  021C                     	;# 
  1935  021D                     	;# 
  1936  021E                     	;# 
  1937  021F                     	;# 
  1938  0291                     	;# 
  1939  0291                     	;# 
  1940  0292                     	;# 
  1941  0293                     	;# 
  1942  0294                     	;# 
  1943  0295                     	;# 
  1944  0295                     	;# 
  1945  0296                     	;# 
  1946  0298                     	;# 
  1947  0298                     	;# 
  1948  0299                     	;# 
  1949  029A                     	;# 
  1950  029B                     	;# 
  1951  029C                     	;# 
  1952  029C                     	;# 
  1953  029D                     	;# 
  1954  029E                     	;# 
  1955  029E                     	;# 
  1956  0311                     	;# 
  1957  0311                     	;# 
  1958  0312                     	;# 
  1959  0313                     	;# 
  1960  0318                     	;# 
  1961  0318                     	;# 
  1962  0319                     	;# 
  1963  031A                     	;# 
  1964  0394                     	;# 
  1965  0395                     	;# 
  1966  0396                     	;# 
  1967  039A                     	;# 
  1968  039C                     	;# 
  1969  039D                     	;# 
  1970  039E                     	;# 
  1971  039F                     	;# 
  1972  0415                     	;# 
  1973  0416                     	;# 
  1974  0417                     	;# 
  1975  041C                     	;# 
  1976  041D                     	;# 
  1977  041E                     	;# 
  1978  0FE4                     	;# 
  1979  0FE5                     	;# 
  1980  0FE6                     	;# 
  1981  0FE7                     	;# 
  1982  0FE8                     	;# 
  1983  0FE9                     	;# 
  1984  0FEA                     	;# 
  1985  0FEB                     	;# 
  1986  0FED                     	;# 
  1987  0FEE                     	;# 
  1988  0FEF                     	;# 
  1989                           
  1990                           	psect	idataBANK1
  1991  0E64                     __pidataBANK1:	
  1992                           
  1993                           ;initializer for _DAC_VoltageTable
  1994  0E64  34D1               	retlw	low (STR_5| (0+32768))
  1995  0E65  3483               	retlw	high (STR_5| (0+32768))
  1996  0E66  347B               	retlw	low (STR_6| (0+32768))
  1997  0E67  3483               	retlw	high (STR_6| (0+32768))
  1998  0E68  34D6               	retlw	low (STR_7| (0+32768))
  1999  0E69  3483               	retlw	high (STR_7| (0+32768))
  2000  0E6A  3481               	retlw	low (STR_8| (0+32768))
  2001  0E6B  3483               	retlw	high (STR_8| (0+32768))
  2002  0E6C  34DB               	retlw	low (STR_9| (0+32768))
  2003  0E6D  3483               	retlw	high (STR_9| (0+32768))
  2004  0E6E  3487               	retlw	low (STR_10| (0+32768))
  2005  0E6F  3483               	retlw	high (STR_10| (0+32768))
  2006  0E70  34E0               	retlw	low (STR_11| (0+32768))
  2007  0E71  3483               	retlw	high (STR_11| (0+32768))
  2008  0E72  348D               	retlw	low (STR_12| (0+32768))
  2009  0E73  3483               	retlw	high (STR_12| (0+32768))
  2010  0E74  34E5               	retlw	low (STR_13| (0+32768))
  2011  0E75  3483               	retlw	high (STR_13| (0+32768))
  2012  0E76  3493               	retlw	low (STR_14| (0+32768))
  2013  0E77  3483               	retlw	high (STR_14| (0+32768))
  2014  0E78  34C2               	retlw	low (STR_15| (0+32768))
  2015  0E79  3483               	retlw	high (STR_15| (0+32768))
  2016  0E7A  346F               	retlw	low (STR_16| (0+32768))
  2017  0E7B  3483               	retlw	high (STR_16| (0+32768))
  2018  0E7C  34C7               	retlw	low (STR_17| (0+32768))
  2019  0E7D  3483               	retlw	high (STR_17| (0+32768))
  2020  0E7E  3475               	retlw	low (STR_18| (0+32768))
  2021  0E7F  3483               	retlw	high (STR_18| (0+32768))
  2022  0E80  34CC               	retlw	low (STR_19| (0+32768))
  2023  0E81  3483               	retlw	high (STR_19| (0+32768))
  2024                           
  2025                           	psect	idataBANK2
  2026  0F44                     __pidataBANK2:	
  2027                           
  2028                           ;initializer for _H7826_01_Gain
  2029  0F44  349F               	retlw	low (STR_35| (0+32768))
  2030  0F45  3483               	retlw	high (STR_35| (0+32768))
  2031  0F46  34A4               	retlw	low (STR_36| (0+32768))
  2032  0F47  3483               	retlw	high (STR_36| (0+32768))
  2033  0F48  34B8               	retlw	low (STR_37| (0+32768))
  2034  0F49  3483               	retlw	high (STR_37| (0+32768))
  2035  0F4A  34A9               	retlw	low (STR_38| (0+32768))
  2036  0F4B  3483               	retlw	high (STR_38| (0+32768))
  2037  0F4C  3451               	retlw	low (STR_39| (0+32768))
  2038  0F4D  3483               	retlw	high (STR_39| (0+32768))
  2039  0F4E  3457               	retlw	low (STR_40| (0+32768))
  2040  0F4F  3483               	retlw	high (STR_40| (0+32768))
  2041  0F50  345D               	retlw	low (STR_41| (0+32768))
  2042  0F51  3483               	retlw	high (STR_41| (0+32768))
  2043  0F52  3445               	retlw	low (STR_42| (0+32768))
  2044  0F53  3483               	retlw	high (STR_42| (0+32768))
  2045  0F54  34F4               	retlw	low (STR_43| (0+32768))
  2046  0F55  3482               	retlw	high (STR_43| (0+32768))
  2047  0F56  341E               	retlw	low (STR_44| (0+32768))
  2048  0F57  3483               	retlw	high (STR_44| (0+32768))
  2049  0F58  34FB               	retlw	low (STR_45| (0+32768))
  2050  0F59  3482               	retlw	high (STR_45| (0+32768))
  2051  0F5A  3402               	retlw	low (STR_46| (0+32768))
  2052  0F5B  3483               	retlw	high (STR_46| (0+32768))
  2053  0F5C  342C               	retlw	low (STR_47| (0+32768))
  2054  0F5D  3483               	retlw	high (STR_47| (0+32768))
  2055  0F5E  34E6               	retlw	low (STR_48| (0+32768))
  2056  0F5F  3482               	retlw	high (STR_48| (0+32768))
  2057  0F60  34ED               	retlw	low (STR_49| (0+32768))
  2058  0F61  3482               	retlw	high (STR_49| (0+32768))
  2059                           
  2060                           ;initializer for _H7826_Gain
  2061  0F62  34B3               	retlw	low (STR_20| (0+32768))
  2062  0F63  3483               	retlw	high (STR_20| (0+32768))
  2063  0F64  34AE               	retlw	low (STR_21| (0+32768))
  2064  0F65  3483               	retlw	high (STR_21| (0+32768))
  2065  0F66  34BD               	retlw	low (STR_22| (0+32768))
  2066  0F67  3483               	retlw	high (STR_22| (0+32768))
  2067  0F68  3469               	retlw	low (STR_23| (0+32768))
  2068  0F69  3483               	retlw	high (STR_23| (0+32768))
  2069  0F6A  343F               	retlw	low (STR_24| (0+32768))
  2070  0F6B  3483               	retlw	high (STR_24| (0+32768))
  2071  0F6C  344B               	retlw	low (STR_25| (0+32768))
  2072  0F6D  3483               	retlw	high (STR_25| (0+32768))
  2073  0F6E  3463               	retlw	low (STR_26| (0+32768))
  2074  0F6F  3483               	retlw	high (STR_26| (0+32768))
  2075  0F70  3410               	retlw	low (STR_27| (0+32768))
  2076  0F71  3483               	retlw	high (STR_27| (0+32768))
  2077  0F72  3409               	retlw	low (STR_28| (0+32768))
  2078  0F73  3483               	retlw	high (STR_28| (0+32768))
  2079  0F74  3417               	retlw	low (STR_29| (0+32768))
  2080  0F75  3483               	retlw	high (STR_29| (0+32768))
  2081  0F76  34DF               	retlw	low (STR_30| (0+32768))
  2082  0F77  3482               	retlw	high (STR_30| (0+32768))
  2083  0F78  3425               	retlw	low (STR_31| (0+32768))
  2084  0F79  3483               	retlw	high (STR_31| (0+32768))
  2085  0F7A  34C1               	retlw	low (STR_32| (0+32768))
  2086  0F7B  3482               	retlw	high (STR_32| (0+32768))
  2087  0F7C  34B9               	retlw	low (STR_33| (0+32768))
  2088  0F7D  3482               	retlw	high (STR_33| (0+32768))
  2089  0F7E  34B1               	retlw	low (STR_34| (0+32768))
  2090  0F7F  3482               	retlw	high (STR_34| (0+32768))
  2091                           
  2092                           	psect	stringtext
  2093  027E                     __pstringtext:	
  2094  027E                     _DAC_DataTable:	
  2095  027E  3499               	retlw	153
  2096  027F  3401               	retlw	1
  2097  0280  34C2               	retlw	194
  2098  0281  3401               	retlw	1
  2099  0282  34EB               	retlw	235
  2100  0283  3401               	retlw	1
  2101  0284  3414               	retlw	20
  2102  0285  3402               	retlw	2
  2103  0286  343D               	retlw	61
  2104  0287  3402               	retlw	2
  2105  0288  3466               	retlw	102
  2106  0289  3402               	retlw	2
  2107  028A  348F               	retlw	143
  2108  028B  3402               	retlw	2
  2109  028C  34B8               	retlw	184
  2110  028D  3402               	retlw	2
  2111  028E  34E1               	retlw	225
  2112  028F  3402               	retlw	2
  2113  0290  340A               	retlw	10
  2114  0291  3403               	retlw	3
  2115  0292  3433               	retlw	51
  2116  0293  3403               	retlw	3
  2117  0294  345B               	retlw	91
  2118  0295  3403               	retlw	3
  2119  0296  3484               	retlw	132
  2120  0297  3403               	retlw	3
  2121  0298  34AD               	retlw	173
  2122  0299  3403               	retlw	3
  2123  029A  34D6               	retlw	214
  2124  029B  3403               	retlw	3
  2125  029C                     __end_of_DAC_DataTable:	
  2126  0016                     _TMR1	set	22
  2127  000C                     _PORTA	set	12
  2128  001F                     _CPSCON1	set	31
  2129  001E                     _CPSCON0	set	30
  2130  0015                     _TMR0	set	21
  2131  0019                     _T1GCON	set	25
  2132  0018                     _T1CON	set	24
  2133  000D                     _PORTB	set	13
  2134  001B                     _PR2	set	27
  2135  001A                     _TMR2	set	26
  2136  001C                     _T2CON	set	28
  2137  0099                     _TMR4IF	set	153
  2138  00C0                     _TMR1ON	set	192
  2139  0088                     _TMR1IF	set	136
  2140  005F                     _GIE	set	95
  2141  005E                     _PEIE	set	94
  2142  00A1                     _BCL2IF	set	161
  2143  00A0                     _SSP2IF	set	160
  2144  0093                     _BCL1IF	set	147
  2145  008B                     _SSP1IF	set	139
  2146  0099                     _OSCCON	set	153
  2147  0095                     _OPTION_REG	set	149
  2148  008D                     _TRISB	set	141
  2149  008C                     _TRISA	set	140
  2150  0499                     _TMR4IE	set	1177
  2151  0488                     _TMR1IE	set	1160
  2152  04A1                     _BCL2IE	set	1185
  2153  04A0                     _SSP2IE	set	1184
  2154  0493                     _BCL1IE	set	1171
  2155  048B                     _SSP1IE	set	1163
  2156  011E                     _APFCON1	set	286
  2157  011D                     _APFCON0	set	285
  2158  0866                     _LATA6	set	2150
  2159  0863                     _LATA3	set	2147
  2160  0864                     _LATA4	set	2148
  2161  018D                     _ANSELB	set	397
  2162  018C                     _ANSELA	set	396
  2163  021C                     _SSP2STATbits	set	540
  2164  0219                     _SSP2BUF	set	537
  2165  021E                     _SSP2CON2	set	542
  2166  021B                     _SSP2MSK	set	539
  2167  021E                     _SSP2CON2bits	set	542
  2168  021D                     _SSP2CON1bits	set	541
  2169  021A                     _SSP2ADD	set	538
  2170  021C                     _SSP2STAT	set	540
  2171  021D                     _SSP2CON1	set	541
  2172  0214                     _SSP1STATbits	set	532
  2173  0211                     _SSP1BUF	set	529
  2174  0216                     _SSP1CON2	set	534
  2175  0213                     _SSP1MSK	set	531
  2176  0216                     _SSP1CON2bits	set	534
  2177  0215                     _SSP1CON1bits	set	533
  2178  0212                     _SSP1ADD	set	530
  2179  0214                     _SSP1STAT	set	532
  2180  0215                     _SSP1CON1	set	533
  2181  0298                     _CCPR2L	set	664
  2182  029E                     _CCPTMRS	set	670
  2183  029A                     _CCP2CON	set	666
  2184  0417                     _T4CON	set	1047
  2185  0415                     _TMR4	set	1045
  2186  0416                     _PR4	set	1046
  2187  029C                     STR_2:	
  2188  029C  3453               	retlw	83	;'S'
  2189  029D  3445               	retlw	69	;'E'
  2190  029E  344C               	retlw	76	;'L'
  2191  029F  3445               	retlw	69	;'E'
  2192  02A0  3443               	retlw	67	;'C'
  2193  02A1  3454               	retlw	84	;'T'
  2194  02A2  3446               	retlw	70	;'F'
  2195  02A3  3455               	retlw	85	;'U'
  2196  02A4  344E               	retlw	78	;'N'
  2197  02A5  3443               	retlw	67	;'C'
  2198  02A6  3400               	retlw	0
  2199  02A7                     STR_4:	
  2200  02A7  3450               	retlw	80	;'P'
  2201  02A8  344D               	retlw	77	;'M'
  2202  02A9  3454               	retlw	84	;'T'
  2203  02AA  3444               	retlw	68	;'D'
  2204  02AB  3445               	retlw	69	;'E'
  2205  02AC  3456               	retlw	86	;'V'
  2206  02AD  3449               	retlw	73	;'I'
  2207  02AE  3443               	retlw	67	;'C'
  2208  02AF  3445               	retlw	69	;'E'
  2209  02B0  3400               	retlw	0
  2210  02B1                     STR_34:	
  2211  02B1  3432               	retlw	50	;'2'
  2212  02B2  3437               	retlw	55	;'7'
  2213  02B3  3437               	retlw	55	;'7'
  2214  02B4  3434               	retlw	52	;'4'
  2215  02B5  3435               	retlw	53	;'5'
  2216  02B6  3436               	retlw	54	;'6'
  2217  02B7  3432               	retlw	50	;'2'
  2218  02B8  3400               	retlw	0
  2219  02B9                     STR_33:	
  2220  02B9  3431               	retlw	49	;'1'
  2221  02BA  3439               	retlw	57	;'9'
  2222  02BB  3434               	retlw	52	;'4'
  2223  02BC  3430               	retlw	48	;'0'
  2224  02BD  3436               	retlw	54	;'6'
  2225  02BE  3437               	retlw	55	;'7'
  2226  02BF  3433               	retlw	51	;'3'
  2227  02C0  3400               	retlw	0
  2228  02C1                     STR_32:	
  2229  02C1  3431               	retlw	49	;'1'
  2230  02C2  3433               	retlw	51	;'3'
  2231  02C3  3433               	retlw	51	;'3'
  2232  02C4  3436               	retlw	54	;'6'
  2233  02C5  3430               	retlw	48	;'0'
  2234  02C6  3430               	retlw	48	;'0'
  2235  02C7  3436               	retlw	54	;'6'
  2236  02C8  3400               	retlw	0
  2237  02C9                     STR_3:	
  2238  02C9  3441               	retlw	65	;'A'
  2239  02CA  3444               	retlw	68	;'D'
  2240  02CB  344A               	retlw	74	;'J'
  2241  02CC  3447               	retlw	71	;'G'
  2242  02CD  3441               	retlw	65	;'A'
  2243  02CE  3449               	retlw	73	;'I'
  2244  02CF  344E               	retlw	78	;'N'
  2245  02D0  3400               	retlw	0
  2246  02D1                     STR_51:	
  2247  02D1  3425               	retlw	37	;'%'
  2248  02D2  3430               	retlw	48	;'0'
  2249  02D3  3438               	retlw	56	;'8'
  2250  02D4  346C               	retlw	108	;'l'
  2251  02D5  3458               	retlw	88	;'X'
  2252  02D6  3420               	retlw	32	;' '
  2253  02D7  3400               	retlw	0
  2254  02D8                     STR_54:	
  2255  02D8  3420               	retlw	32	;' '
  2256  02D9  3425               	retlw	37	;'%'
  2257  02DA  3430               	retlw	48	;'0'
  2258  02DB  3438               	retlw	56	;'8'
  2259  02DC  344C               	retlw	76	;'L'
  2260  02DD  3458               	retlw	88	;'X'
  2261  02DE  3400               	retlw	0
  2262  02DF                     STR_30:	
  2263  02DF  3436               	retlw	54	;'6'
  2264  02E0  3430               	retlw	48	;'0'
  2265  02E1  3430               	retlw	48	;'0'
  2266  02E2  3430               	retlw	48	;'0'
  2267  02E3  3430               	retlw	48	;'0'
  2268  02E4  3430               	retlw	48	;'0'
  2269  02E5  3400               	retlw	0
  2270  02E6                     STR_48:	
  2271  02E6  3437               	retlw	55	;'7'
  2272  02E7  3430               	retlw	48	;'0'
  2273  02E8  3430               	retlw	48	;'0'
  2274  02E9  3438               	retlw	56	;'8'
  2275  02EA  3439               	retlw	57	;'9'
  2276  02EB  3430               	retlw	48	;'0'
  2277  02EC  3400               	retlw	0
  2278  02ED                     STR_49:	
  2279  02ED  3439               	retlw	57	;'9'
  2280  02EE  3436               	retlw	54	;'6'
  2281  02EF  3438               	retlw	56	;'8'
  2282  02F0  3434               	retlw	52	;'4'
  2283  02F1  3437               	retlw	55	;'7'
  2284  02F2  3432               	retlw	50	;'2'
  2285  02F3  3400               	retlw	0
  2286  02F4                     STR_43:	
  2287  02F4  3431               	retlw	49	;'1'
  2288  02F5  3430               	retlw	48	;'0'
  2289  02F6  3438               	retlw	56	;'8'
  2290  02F7  3438               	retlw	56	;'8'
  2291  02F8  3434               	retlw	52	;'4'
  2292  02F9  3433               	retlw	51	;'3'
  2293  02FA  3400               	retlw	0
  2294  02FB                     STR_45:	
  2295  02FB  3432               	retlw	50	;'2'
  2296  02FC  3434               	retlw	52	;'4'
  2297  02FD  3432               	retlw	50	;'2'
  2298  02FE  3433               	retlw	51	;'3'
  2299  02FF  3436               	retlw	54	;'6'
  2300  0300  3434               	retlw	52	;'4'
  2301  0301  3400               	retlw	0
  2302  0302                     STR_46:	
  2303  0302  3433               	retlw	51	;'3'
  2304  0303  3435               	retlw	53	;'5'
  2305  0304  3431               	retlw	49	;'1'
  2306  0305  3431               	retlw	49	;'1'
  2307  0306  3432               	retlw	50	;'2'
  2308  0307  3437               	retlw	55	;'7'
  2309  0308  3400               	retlw	0
  2310  0309                     STR_28:	
  2311  0309  3432               	retlw	50	;'2'
  2312  030A  3434               	retlw	52	;'4'
  2313  030B  3437               	retlw	55	;'7'
  2314  030C  3436               	retlw	54	;'6'
  2315  030D  3434               	retlw	52	;'4'
  2316  030E  3437               	retlw	55	;'7'
  2317  030F  3400               	retlw	0
  2318  0310                     STR_27:	
  2319  0310  3431               	retlw	49	;'1'
  2320  0311  3435               	retlw	53	;'5'
  2321  0312  3433               	retlw	51	;'3'
  2322  0313  3432               	retlw	50	;'2'
  2323  0314  3432               	retlw	50	;'2'
  2324  0315  3438               	retlw	56	;'8'
  2325  0316  3400               	retlw	0
  2326  0317                     STR_29:	
  2327  0317  3433               	retlw	51	;'3'
  2328  0318  3438               	retlw	56	;'8'
  2329  0319  3439               	retlw	57	;'9'
  2330  031A  3439               	retlw	57	;'9'
  2331  031B  3438               	retlw	56	;'8'
  2332  031C  3438               	retlw	56	;'8'
  2333  031D  3400               	retlw	0
  2334  031E                     STR_44:	
  2335  031E  3431               	retlw	49	;'1'
  2336  031F  3436               	retlw	54	;'6'
  2337  0320  3434               	retlw	52	;'4'
  2338  0321  3431               	retlw	49	;'1'
  2339  0322  3433               	retlw	51	;'3'
  2340  0323  3439               	retlw	57	;'9'
  2341  0324  3400               	retlw	0
  2342  0325                     STR_31:	
  2343  0325  3439               	retlw	57	;'9'
  2344  0326  3430               	retlw	48	;'0'
  2345  0327  3433               	retlw	51	;'3'
  2346  0328  3438               	retlw	56	;'8'
  2347  0329  3439               	retlw	57	;'9'
  2348  032A  3439               	retlw	57	;'9'
  2349  032B  3400               	retlw	0
  2350  032C                     STR_47:	
  2351  032C  3434               	retlw	52	;'4'
  2352  032D  3439               	retlw	57	;'9'
  2353  032E  3439               	retlw	57	;'9'
  2354  032F  3439               	retlw	57	;'9'
  2355  0330  3439               	retlw	57	;'9'
  2356  0331  3439               	retlw	57	;'9'
  2357  0332  3400               	retlw	0
  2358  0333                     STR_52:	
  2359  0333  3420               	retlw	32	;' '
  2360  0334  3425               	retlw	37	;'%'
  2361  0335  3430               	retlw	48	;'0'
  2362  0336  3432               	retlw	50	;'2'
  2363  0337  3458               	retlw	88	;'X'
  2364  0338  3400               	retlw	0
  2365  0339                     STR_53:	
  2366  0339  3420               	retlw	32	;' '
  2367  033A  3425               	retlw	37	;'%'
  2368  033B  3430               	retlw	48	;'0'
  2369  033C  3434               	retlw	52	;'4'
  2370  033D  3458               	retlw	88	;'X'
  2371  033E  3400               	retlw	0
  2372  033F                     STR_24:	
  2373  033F  3433               	retlw	51	;'3'
  2374  0340  3430               	retlw	48	;'0'
  2375  0341  3430               	retlw	48	;'0'
  2376  0342  3430               	retlw	48	;'0'
  2377  0343  3430               	retlw	48	;'0'
  2378  0344  3400               	retlw	0
  2379  0345                     STR_42:	
  2380  0345  3437               	retlw	55	;'7'
  2381  0346  3430               	retlw	48	;'0'
  2382  0347  3435               	retlw	53	;'5'
  2383  0348  3430               	retlw	48	;'0'
  2384  0349  3430               	retlw	48	;'0'
  2385  034A  3400               	retlw	0
  2386  034B                     STR_25:	
  2387  034B  3435               	retlw	53	;'5'
  2388  034C  3433               	retlw	51	;'3'
  2389  034D  3435               	retlw	53	;'5'
  2390  034E  3435               	retlw	53	;'5'
  2391  034F  3433               	retlw	51	;'3'
  2392  0350  3400               	retlw	0
  2393  0351                     STR_39:	
  2394  0351  3431               	retlw	49	;'1'
  2395  0352  3436               	retlw	54	;'6'
  2396  0353  3431               	retlw	49	;'1'
  2397  0354  3432               	retlw	50	;'2'
  2398  0355  3435               	retlw	53	;'5'
  2399  0356  3400               	retlw	0
  2400  0357                     STR_40:	
  2401  0357  3432               	retlw	50	;'2'
  2402  0358  3437               	retlw	55	;'7'
  2403  0359  3432               	retlw	50	;'2'
  2404  035A  3433               	retlw	51	;'3'
  2405  035B  3438               	retlw	56	;'8'
  2406  035C  3400               	retlw	0
  2407  035D                     STR_41:	
  2408  035D  3434               	retlw	52	;'4'
  2409  035E  3434               	retlw	52	;'4'
  2410  035F  3434               	retlw	52	;'4'
  2411  0360  3437               	retlw	55	;'7'
  2412  0361  3438               	retlw	56	;'8'
  2413  0362  3400               	retlw	0
  2414  0363                     STR_26:	
  2415  0363  3439               	retlw	57	;'9'
  2416  0364  3432               	retlw	50	;'2'
  2417  0365  3430               	retlw	48	;'0'
  2418  0366  3438               	retlw	56	;'8'
  2419  0367  3438               	retlw	56	;'8'
  2420  0368  3400               	retlw	0
  2421  0369                     STR_23:	
  2422  0369  3431               	retlw	49	;'1'
  2423  036A  3436               	retlw	54	;'6'
  2424  036B  3430               	retlw	48	;'0'
  2425  036C  3439               	retlw	57	;'9'
  2426  036D  3439               	retlw	57	;'9'
  2427  036E  3400               	retlw	0
  2428  036F                     STR_16:	
  2429  036F  3431               	retlw	49	;'1'
  2430  0370  342E               	retlw	46	;'.'
  2431  0371  3430               	retlw	48	;'0'
  2432  0372  3435               	retlw	53	;'5'
  2433  0373  3456               	retlw	86	;'V'
  2434  0374  3400               	retlw	0
  2435  0375                     STR_18:	
  2436  0375  3431               	retlw	49	;'1'
  2437  0376  342E               	retlw	46	;'.'
  2438  0377  3431               	retlw	49	;'1'
  2439  0378  3435               	retlw	53	;'5'
  2440  0379  3456               	retlw	86	;'V'
  2441  037A  3400               	retlw	0
  2442  037B                     STR_6:	
  2443  037B  3430               	retlw	48	;'0'
  2444  037C  342E               	retlw	46	;'.'
  2445  037D  3435               	retlw	53	;'5'
  2446  037E  3435               	retlw	53	;'5'
  2447  037F  3456               	retlw	86	;'V'
  2448  0380  3400               	retlw	0
  2449  0381                     STR_8:	
  2450  0381  3430               	retlw	48	;'0'
  2451  0382  342E               	retlw	46	;'.'
  2452  0383  3436               	retlw	54	;'6'
  2453  0384  3435               	retlw	53	;'5'
  2454  0385  3456               	retlw	86	;'V'
  2455  0386  3400               	retlw	0
  2456  0387                     STR_10:	
  2457  0387  3430               	retlw	48	;'0'
  2458  0388  342E               	retlw	46	;'.'
  2459  0389  3437               	retlw	55	;'7'
  2460  038A  3435               	retlw	53	;'5'
  2461  038B  3456               	retlw	86	;'V'
  2462  038C  3400               	retlw	0
  2463  038D                     STR_12:	
  2464  038D  3430               	retlw	48	;'0'
  2465  038E  342E               	retlw	46	;'.'
  2466  038F  3438               	retlw	56	;'8'
  2467  0390  3435               	retlw	53	;'5'
  2468  0391  3456               	retlw	86	;'V'
  2469  0392  3400               	retlw	0
  2470  0393                     STR_14:	
  2471  0393  3430               	retlw	48	;'0'
  2472  0394  342E               	retlw	46	;'.'
  2473  0395  3439               	retlw	57	;'9'
  2474  0396  3435               	retlw	53	;'5'
  2475  0397  3456               	retlw	86	;'V'
  2476  0398  3400               	retlw	0
  2477  0399                     STR_1:	
  2478  0399  3443               	retlw	67	;'C'
  2479  039A  344F               	retlw	79	;'O'
  2480  039B  3455               	retlw	85	;'U'
  2481  039C  344E               	retlw	78	;'N'
  2482  039D  3454               	retlw	84	;'T'
  2483  039E  3400               	retlw	0
  2484  039F                     STR_35:	
  2485  039F  3431               	retlw	49	;'1'
  2486  03A0  3432               	retlw	50	;'2'
  2487  03A1  3435               	retlw	53	;'5'
  2488  03A2  3430               	retlw	48	;'0'
  2489  03A3  3400               	retlw	0
  2490  03A4                     STR_36:	
  2491  03A4  3432               	retlw	50	;'2'
  2492  03A5  3435               	retlw	53	;'5'
  2493  03A6  3438               	retlw	56	;'8'
  2494  03A7  3430               	retlw	48	;'0'
  2495  03A8  3400               	retlw	0
  2496  03A9                     STR_38:	
  2497  03A9  3439               	retlw	57	;'9'
  2498  03AA  3431               	retlw	49	;'1'
  2499  03AB  3438               	retlw	56	;'8'
  2500  03AC  3432               	retlw	50	;'2'
  2501  03AD  3400               	retlw	0
  2502  03AE                     STR_21:	
  2503  03AE  3433               	retlw	51	;'3'
  2504  03AF  3439               	retlw	57	;'9'
  2505  03B0  3435               	retlw	53	;'5'
  2506  03B1  3437               	retlw	55	;'7'
  2507  03B2  3400               	retlw	0
  2508  03B3                     STR_20:	
  2509  03B3  3431               	retlw	49	;'1'
  2510  03B4  3437               	retlw	55	;'7'
  2511  03B5  3437               	retlw	55	;'7'
  2512  03B6  3437               	retlw	55	;'7'
  2513  03B7  3400               	retlw	0
  2514  03B8                     STR_37:	
  2515  03B8  3434               	retlw	52	;'4'
  2516  03B9  3439               	retlw	57	;'9'
  2517  03BA  3439               	retlw	57	;'9'
  2518  03BB  3438               	retlw	56	;'8'
  2519  03BC  3400               	retlw	0
  2520  03BD                     STR_22:	
  2521  03BD  3438               	retlw	56	;'8'
  2522  03BE  3432               	retlw	50	;'2'
  2523  03BF  3431               	retlw	49	;'1'
  2524  03C0  3439               	retlw	57	;'9'
  2525  03C1  3400               	retlw	0
  2526  03C2                     STR_15:	
  2527  03C2  3431               	retlw	49	;'1'
  2528  03C3  342E               	retlw	46	;'.'
  2529  03C4  3430               	retlw	48	;'0'
  2530  03C5  3456               	retlw	86	;'V'
  2531  03C6  3400               	retlw	0
  2532  03C7                     STR_17:	
  2533  03C7  3431               	retlw	49	;'1'
  2534  03C8  342E               	retlw	46	;'.'
  2535  03C9  3431               	retlw	49	;'1'
  2536  03CA  3456               	retlw	86	;'V'
  2537  03CB  3400               	retlw	0
  2538  03CC                     STR_19:	
  2539  03CC  3431               	retlw	49	;'1'
  2540  03CD  342E               	retlw	46	;'.'
  2541  03CE  3432               	retlw	50	;'2'
  2542  03CF  3456               	retlw	86	;'V'
  2543  03D0  3400               	retlw	0
  2544  03D1                     STR_5:	
  2545  03D1  3430               	retlw	48	;'0'
  2546  03D2  342E               	retlw	46	;'.'
  2547  03D3  3435               	retlw	53	;'5'
  2548  03D4  3456               	retlw	86	;'V'
  2549  03D5  3400               	retlw	0
  2550  03D6                     STR_7:	
  2551  03D6  3430               	retlw	48	;'0'
  2552  03D7  342E               	retlw	46	;'.'
  2553  03D8  3436               	retlw	54	;'6'
  2554  03D9  3456               	retlw	86	;'V'
  2555  03DA  3400               	retlw	0
  2556  03DB                     STR_9:	
  2557  03DB  3430               	retlw	48	;'0'
  2558  03DC  342E               	retlw	46	;'.'
  2559  03DD  3437               	retlw	55	;'7'
  2560  03DE  3456               	retlw	86	;'V'
  2561  03DF  3400               	retlw	0
  2562  03E0                     STR_11:	
  2563  03E0  3430               	retlw	48	;'0'
  2564  03E1  342E               	retlw	46	;'.'
  2565  03E2  3438               	retlw	56	;'8'
  2566  03E3  3456               	retlw	86	;'V'
  2567  03E4  3400               	retlw	0
  2568  03E5                     STR_13:	
  2569  03E5  3430               	retlw	48	;'0'
  2570  03E6  342E               	retlw	46	;'.'
  2571  03E7  3439               	retlw	57	;'9'
  2572  03E8  3456               	retlw	86	;'V'
  2573  03E9  3400               	retlw	0
  2574  03EA                     STR_50:	
  2575  03EA  340D               	retlw	13
  2576  03EB  3400               	retlw	0
  2577                           
  2578                           ; #config settings
  2579  0000                     
  2580                           	psect	cinit
  2581  0024                     start_initialization:	
  2582  0024                     __initialization:	
  2583                           
  2584                           ; Initialize objects allocated to BANK1
  2585  0024  3064               	movlw	low __pidataBANK1
  2586  0025  0084               	movwf	4
  2587  0026  308E               	movlw	(high __pidataBANK1)| (0+128)
  2588  0027  0085               	movwf	5
  2589  0028  30D1               	movlw	low __pdataBANK1
  2590  0029  0086               	movwf	6
  2591  002A  3000               	movlw	high __pdataBANK1
  2592  002B  0087               	movwf	7
  2593  002C  301E               	movlw	30
  2594  002D  318D  2525  3180   	fcall	init_ram
  2595                           
  2596                           ; Initialize objects allocated to BANK2
  2597  0030  3044               	movlw	low __pidataBANK2
  2598  0031  0084               	movwf	4
  2599  0032  308F               	movlw	(high __pidataBANK2)| (0+128)
  2600  0033  0085               	movwf	5
  2601  0034  3020               	movlw	low __pdataBANK2
  2602  0035  0086               	movwf	6
  2603  0036  3001               	movlw	high __pdataBANK2
  2604  0037  0087               	movwf	7
  2605  0038  303C               	movlw	60
  2606  0039  318D  2525  3180   	fcall	init_ram
  2607                           
  2608                           ; Clear objects allocated to COMMON
  2609  003C  01F6               	clrf	__pbssCOMMON& (0+127)
  2610  003D  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2611  003E  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2612  003F  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2613  0040  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  2614                           
  2615                           ; Clear objects allocated to BANK0
  2616  0041  3067               	movlw	low __pbssBANK0
  2617  0042  0084               	movwf	4
  2618  0043  3000               	movlw	high __pbssBANK0
  2619  0044  0085               	movwf	5
  2620  0045  3009               	movlw	9
  2621  0046  318D  251F  3180   	fcall	clear_ram0
  2622                           
  2623                           ; Clear objects allocated to BANK1
  2624  0049  30A0               	movlw	low __pbssBANK1
  2625  004A  0084               	movwf	4
  2626  004B  3000               	movlw	high __pbssBANK1
  2627  004C  0085               	movwf	5
  2628  004D  3031               	movlw	49
  2629  004E  318D  251F         	fcall	clear_ram0
  2630  0050                     end_of_initialization:	
  2631                           ;End of C runtime variable initialization code
  2632                           
  2633  0050                     __end_of__initialization:	
  2634  0050  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2635  0051  0020               	movlb	0
  2636  0052  3185  2D1B         	ljmp	_main	;jump to C main() function
  2637                           
  2638                           	psect	bssCOMMON
  2639  0076                     __pbssCOMMON:	
  2640  0076                     _xfunc_in:	
  2641  0076                     	ds	2
  2642  0078                     _count:	
  2643  0078                     	ds	2
  2644  007A                     CPSx_Read@channel:	
  2645  007A                     	ds	1
  2646                           
  2647                           	psect	bssBANK0
  2648  0067                     __pbssBANK0:	
  2649  0067                     _mTouch_Interval:	
  2650  0067                     	ds	3
  2651  006A                     _mode:	
  2652  006A                     	ds	2
  2653  006C                     _xfunc_out:	
  2654  006C                     	ds	2
  2655  006E                     _outptr:	
  2656  006E                     	ds	1
  2657  006F                     _ConfigReg:	
  2658  006F                     	ds	1
  2659                           
  2660                           	psect	bssBANK1
  2661  00A0                     __pbssBANK1:	
  2662  00A0                     _CPS_Data:	
  2663  00A0                     	ds	3
  2664  00A3                     _CPS_PreData:	
  2665  00A3                     	ds	3
  2666  00A6                     _MemoryReg:	
  2667  00A6                     	ds	3
  2668  00A9                     _I2C2_Config:	
  2669  00A9                     	ds	19
  2670  00BC                     _I2C1_Config:	
  2671  00BC                     	ds	19
  2672  00CF                     _VoltageReg:	
  2673  00CF                     	ds	2
  2674                           
  2675                           	psect	dataBANK1
  2676  00D1                     __pdataBANK1:	
  2677  00D1                     _DAC_VoltageTable:	
  2678  00D1                     	ds	30
  2679                           
  2680                           	psect	dataBANK2
  2681  0120                     __pdataBANK2:	
  2682  0120                     _H7826_01_Gain:	
  2683  0120                     	ds	30
  2684  013E                     _H7826_Gain:	
  2685  013E                     	ds	30
  2686                           
  2687                           	psect	inittext
  2688  0D25                     init_ram:	
  2689  0D25  00FE               	movwf	126
  2690  0D26                     initloop:	
  2691  0D26  0012               	moviw fsr0++
  2692  0D27  001E               	movwi fsr1++
  2693  0D28  0BFE               	decfsz	126,f
  2694  0D29  2D26               	goto	initloop
  2695  0D2A  3400               	retlw	0
  2696                           
  2697                           	psect	clrtext
  2698  0D1F                     clear_ram0:	
  2699                           ;	Called with FSR0 containing the base address, and
  2700                           ;	WREG with the size to clear
  2701                           
  2702  0D1F  0064               	clrwdt	;clear the watchdog before getting into this loop
  2703  0D20                     clrloop0:	
  2704  0D20  0180               	clrf	0	;clear RAM location pointed to by FSR
  2705  0D21  3101               	addfsr 0,1
  2706  0D22  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2707  0D23  2D20               	goto	clrloop0	;have we reached the end yet?
  2708  0D24  3400               	retlw	0	;all done for this memory range, return
  2709                           
  2710                           	psect	cstackCOMMON
  2711  0070                     __pcstackCOMMON:	
  2712  0070                     ?_LCD_DisplayClear:	
  2713  0070                     ?_Basic_Init:	
  2714                           ; 1 bytes @ 0x0
  2715                           
  2716  0070                     ?_mTouch_Read:	
  2717                           ; 1 bytes @ 0x0
  2718                           
  2719  0070                     ?_mTouch_IntervalIncrement:	
  2720                           ; 1 bytes @ 0x0
  2721                           
  2722  0070                     ??_mTouch_IntervalIncrement:	
  2723                           ; 1 bytes @ 0x0
  2724                           
  2725  0070                     ?_Buzzer_Init:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728  0070                     ?_Buzzer_SetDuty:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  0070                     ?_Buzzer_Handler:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  0070                     ?_I2C1_PinInit:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737  0070                     ?_I2C1_Interrupt:	
  2738                           ; 1 bytes @ 0x0
  2739                           
  2740  0070                     ??_I2C1_Interrupt:	
  2741                           ; 1 bytes @ 0x0
  2742                           
  2743  0070                     ?_I2C2_PinInit:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746  0070                     ?_I2C2_Interrupt:	
  2747                           ; 1 bytes @ 0x0
  2748                           
  2749  0070                     ??_I2C2_Interrupt:	
  2750                           ; 1 bytes @ 0x0
  2751                           
  2752  0070                     ?_I2C_CommonInterrupt:	
  2753                           ; 1 bytes @ 0x0
  2754                           
  2755  0070                     ?_LCD_WriteData:	
  2756                           ; 1 bytes @ 0x0
  2757                           
  2758  0070                     ?_LCD_Init:	
  2759                           ; 1 bytes @ 0x0
  2760                           
  2761  0070                     ?_LCD_CursorHome:	
  2762                           ; 1 bytes @ 0x0
  2763                           
  2764  0070                     ?_DAC_Initialize:	
  2765                           ; 1 bytes @ 0x0
  2766                           
  2767  0070                     ?_Timer1_Init:	
  2768                           ; 1 bytes @ 0x0
  2769                           
  2770  0070                     ?_Timer1_Handler:	
  2771                           ; 1 bytes @ 0x0
  2772                           
  2773  0070                     ??_Timer1_Handler:	
  2774                           ; 1 bytes @ 0x0
  2775                           
  2776  0070                     ?_Timer4_Init:	
  2777                           ; 1 bytes @ 0x0
  2778                           
  2779  0070                     ?_Timer4_Handler:	
  2780                           ; 1 bytes @ 0x0
  2781                           
  2782  0070                     ??_Timer4_Handler:	
  2783                           ; 1 bytes @ 0x0
  2784                           
  2785  0070                     ?_mTouch_PortInit:	
  2786                           ; 1 bytes @ 0x0
  2787                           
  2788  0070                     ?_mTouch_Init:	
  2789                           ; 1 bytes @ 0x0
  2790                           
  2791  0070                     ?_CPSx_Read:	
  2792                           ; 1 bytes @ 0x0
  2793                           
  2794  0070                     ??_CPSx_Read:	
  2795                           ; 1 bytes @ 0x0
  2796                           
  2797  0070                     ?_main:	
  2798                           ; 1 bytes @ 0x0
  2799                           
  2800  0070                     ?_Handler:	
  2801                           ; 1 bytes @ 0x0
  2802                           
  2803  0070                     ?_xputc:	
  2804                           ; 1 bytes @ 0x0
  2805                           
  2806  0070                     ?_xputs:	
  2807                           ; 1 bytes @ 0x0
  2808                           
  2809  0070                     Buzzer_SetDuty@duty:	
  2810                           ; 1 bytes @ 0x0
  2811                           
  2812                           
  2813                           ; 2 bytes @ 0x0
  2814  0070                     	ds	1
  2815  0071                     ??_I2C_CommonInterrupt:	
  2816                           
  2817                           ; 1 bytes @ 0x1
  2818  0071                     	ds	1
  2819  0072                     ??_Buzzer_SetDuty:	
  2820                           
  2821                           ; 1 bytes @ 0x2
  2822  0072                     	ds	2
  2823  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
  2824                           
  2825                           ; 1 bytes @ 0x4
  2826  0074                     	ds	1
  2827  0075                     ??_Buzzer_Handler:	
  2828  0075                     ??_Handler:	
  2829                           ; 1 bytes @ 0x5
  2830                           
  2831                           
  2832                           ; 1 bytes @ 0x5
  2833  0075                     	ds	1
  2834                           
  2835                           	psect	cstackBANK0
  2836  0020                     __pcstackBANK0:	
  2837  0020                     ??_Basic_Init:	
  2838  0020                     ??_Buzzer_Init:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841  0020                     ?_Buzzer_MiliSecond:	
  2842                           ; 1 bytes @ 0x0
  2843                           
  2844  0020                     ??_I2C1_PinInit:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847  0020                     ?_I2C1_Transmit:	
  2848                           ; 1 bytes @ 0x0
  2849                           
  2850  0020                     ??_I2C2_PinInit:	
  2851                           ; 1 bytes @ 0x0
  2852                           
  2853  0020                     ?_I2C2_Transmit:	
  2854                           ; 1 bytes @ 0x0
  2855                           
  2856  0020                     ??_LCD_WriteData:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859  0020                     ??_Timer1_Init:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862  0020                     ??_Timer4_Init:	
  2863                           ; 1 bytes @ 0x0
  2864                           
  2865  0020                     ??_mTouch_PortInit:	
  2866                           ; 1 bytes @ 0x0
  2867                           
  2868  0020                     ?___wmul:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0020                     ?___lldiv:	
  2872                           ; 2 bytes @ 0x0
  2873                           
  2874  0020                     ?___llmod:	
  2875                           ; 4 bytes @ 0x0
  2876                           
  2877  0020                     I2C1_Transmit@pData:	
  2878                           ; 4 bytes @ 0x0
  2879                           
  2880  0020                     I2C2_Transmit@pData:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  0020                     Buzzer_MiliSecond@time:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0020                     ___wmul@multiplier:	
  2887                           ; 2 bytes @ 0x0
  2888                           
  2889  0020                     ___lldiv@divisor:	
  2890                           ; 2 bytes @ 0x0
  2891                           
  2892  0020                     ___llmod@divisor:	
  2893                           ; 4 bytes @ 0x0
  2894                           
  2895                           
  2896                           ; 4 bytes @ 0x0
  2897  0020                     	ds	1
  2898  0021                     ?_I2C1_Setting:	
  2899  0021                     ?_I2C2_Setting:	
  2900                           ; 1 bytes @ 0x1
  2901                           
  2902  0021                     ??_mTouch_Init:	
  2903                           ; 1 bytes @ 0x1
  2904                           
  2905  0021                     I2C1_Setting@mode:	
  2906                           ; 1 bytes @ 0x1
  2907                           
  2908  0021                     I2C1_Transmit@size:	
  2909                           ; 1 bytes @ 0x1
  2910                           
  2911  0021                     I2C2_Setting@mode:	
  2912                           ; 1 bytes @ 0x1
  2913                           
  2914  0021                     I2C2_Transmit@size:	
  2915                           ; 1 bytes @ 0x1
  2916                           
  2917                           
  2918                           ; 1 bytes @ 0x1
  2919  0021                     	ds	1
  2920  0022                     ??_mTouch_Read:	
  2921  0022                     ??_Buzzer_MiliSecond:	
  2922                           ; 1 bytes @ 0x2
  2923                           
  2924  0022                     ??_I2C1_Transmit:	
  2925                           ; 1 bytes @ 0x2
  2926                           
  2927  0022                     ??_I2C2_Transmit:	
  2928                           ; 1 bytes @ 0x2
  2929                           
  2930  0022                     I2C1_Setting@Speed:	
  2931                           ; 1 bytes @ 0x2
  2932                           
  2933  0022                     I2C2_Setting@Speed:	
  2934                           ; 1 bytes @ 0x2
  2935                           
  2936  0022                     LCD_WriteData@point:	
  2937                           ; 1 bytes @ 0x2
  2938                           
  2939  0022                     ___wmul@multiplicand:	
  2940                           ; 1 bytes @ 0x2
  2941                           
  2942                           
  2943                           ; 2 bytes @ 0x2
  2944  0022                     	ds	1
  2945  0023                     ??_LCD_DisplayClear:	
  2946  0023                     ??_I2C1_Setting:	
  2947                           ; 1 bytes @ 0x3
  2948                           
  2949  0023                     ??_I2C2_Setting:	
  2950                           ; 1 bytes @ 0x3
  2951                           
  2952  0023                     ?_LCD_Put:	
  2953                           ; 1 bytes @ 0x3
  2954                           
  2955  0023                     ??_LCD_CursorHome:	
  2956                           ; 1 bytes @ 0x3
  2957                           
  2958  0023                     LCD_Put@word:	
  2959                           ; 1 bytes @ 0x3
  2960                           
  2961                           
  2962                           ; 1 bytes @ 0x3
  2963  0023                     	ds	1
  2964  0024                     ??_LCD_Init:	
  2965  0024                     ??_LCD_Put:	
  2966                           ; 1 bytes @ 0x4
  2967                           
  2968  0024                     ??_xputc:	
  2969                           ; 1 bytes @ 0x4
  2970                           
  2971  0024                     ??___wmul:	
  2972                           ; 1 bytes @ 0x4
  2973                           
  2974  0024                     I2C1_Setting@address:	
  2975                           ; 1 bytes @ 0x4
  2976                           
  2977  0024                     I2C1_Transmit@address:	
  2978                           ; 1 bytes @ 0x4
  2979                           
  2980  0024                     I2C2_Setting@address:	
  2981                           ; 1 bytes @ 0x4
  2982                           
  2983  0024                     I2C2_Transmit@address:	
  2984                           ; 1 bytes @ 0x4
  2985                           
  2986  0024                     ___wmul@product:	
  2987                           ; 1 bytes @ 0x4
  2988                           
  2989  0024                     ___lldiv@dividend:	
  2990                           ; 2 bytes @ 0x4
  2991                           
  2992  0024                     ___llmod@dividend:	
  2993                           ; 4 bytes @ 0x4
  2994                           
  2995                           
  2996                           ; 4 bytes @ 0x4
  2997  0024                     	ds	1
  2998  0025                     ?_I2C_Init:	
  2999  0025                     I2C1_Transmit@i:	
  3000                           ; 1 bytes @ 0x5
  3001                           
  3002  0025                     I2C2_Transmit@i:	
  3003                           ; 1 bytes @ 0x5
  3004                           
  3005  0025                     I2C_Init@address:	
  3006                           ; 1 bytes @ 0x5
  3007                           
  3008  0025                     xputc@c:	
  3009                           ; 1 bytes @ 0x5
  3010                           
  3011                           
  3012                           ; 1 bytes @ 0x5
  3013  0025                     	ds	1
  3014  0026                     ??_xputs:	
  3015  0026                     I2C1_Transmit@i_172:	
  3016                           ; 1 bytes @ 0x6
  3017                           
  3018  0026                     I2C2_Transmit@i_316:	
  3019                           ; 1 bytes @ 0x6
  3020                           
  3021  0026                     I2C_Init@mode:	
  3022                           ; 1 bytes @ 0x6
  3023                           
  3024                           
  3025                           ; 1 bytes @ 0x6
  3026  0026                     	ds	1
  3027  0027                     I2C1_Transmit@result:	
  3028  0027                     I2C2_Transmit@result:	
  3029                           ; 1 bytes @ 0x7
  3030                           
  3031  0027                     I2C_Init@Speed:	
  3032                           ; 1 bytes @ 0x7
  3033                           
  3034  0027                     mTouch_Read@chan:	
  3035                           ; 1 bytes @ 0x7
  3036                           
  3037  0027                     xputs@str:	
  3038                           ; 1 bytes @ 0x7
  3039                           
  3040                           
  3041                           ; 1 bytes @ 0x7
  3042  0027                     	ds	1
  3043  0028                     ??_I2C_Init:	
  3044  0028                     ?_I2C_Transmit:	
  3045                           ; 1 bytes @ 0x8
  3046                           
  3047  0028                     ??___lldiv:	
  3048                           ; 1 bytes @ 0x8
  3049                           
  3050  0028                     ??___llmod:	
  3051                           ; 1 bytes @ 0x8
  3052                           
  3053  0028                     I2C_Transmit@address:	
  3054                           ; 1 bytes @ 0x8
  3055                           
  3056                           
  3057                           ; 1 bytes @ 0x8
  3058  0028                     	ds	1
  3059  0029                     I2C_Transmit@pData:	
  3060  0029                     ___llmod@counter:	
  3061                           ; 1 bytes @ 0x9
  3062                           
  3063  0029                     ___lldiv@quotient:	
  3064                           ; 1 bytes @ 0x9
  3065                           
  3066                           
  3067                           ; 4 bytes @ 0x9
  3068  0029                     	ds	1
  3069  002A                     I2C_Init@I2Cx:	
  3070  002A                     I2C_Transmit@size:	
  3071                           ; 1 bytes @ 0xA
  3072                           
  3073                           
  3074                           ; 1 bytes @ 0xA
  3075  002A                     	ds	1
  3076  002B                     ??_I2C_Transmit:	
  3077                           
  3078                           ; 1 bytes @ 0xB
  3079  002B                     	ds	2
  3080  002D                     ___lldiv@counter:	
  3081                           
  3082                           ; 1 bytes @ 0xD
  3083  002D                     	ds	1
  3084  002E                     ?_xvprintf:	
  3085  002E                     I2C_Transmit@I2Cx:	
  3086                           ; 1 bytes @ 0xE
  3087                           
  3088  002E                     xvprintf@fmt:	
  3089                           ; 1 bytes @ 0xE
  3090                           
  3091                           
  3092                           ; 2 bytes @ 0xE
  3093  002E                     	ds	1
  3094  002F                     I2C_Transmit@result:	
  3095                           
  3096                           ; 1 bytes @ 0xF
  3097  002F                     	ds	1
  3098  0030                     ??_DAC_Initialize:	
  3099  0030                     xvprintf@arp:	
  3100                           ; 1 bytes @ 0x10
  3101                           
  3102                           
  3103                           ; 1 bytes @ 0x10
  3104  0030                     	ds	1
  3105  0031                     ??_xvprintf:	
  3106                           
  3107                           ; 1 bytes @ 0x11
  3108  0031                     	ds	4
  3109  0035                     xvprintf@s:	
  3110                           
  3111                           ; 16 bytes @ 0x15
  3112  0035                     	ds	16
  3113  0045                     _xvprintf$740:	
  3114                           
  3115                           ; 4 bytes @ 0x25
  3116  0045                     	ds	4
  3117  0049                     _xvprintf$741:	
  3118                           
  3119                           ; 2 bytes @ 0x29
  3120  0049                     	ds	2
  3121  004B                     _xvprintf$742:	
  3122                           
  3123                           ; 2 bytes @ 0x2B
  3124  004B                     	ds	2
  3125  004D                     xvprintf@p:	
  3126                           
  3127                           ; 1 bytes @ 0x2D
  3128  004D                     	ds	1
  3129  004E                     xvprintf@r:	
  3130                           
  3131                           ; 2 bytes @ 0x2E
  3132  004E                     	ds	2
  3133  0050                     xvprintf@w:	
  3134                           
  3135                           ; 2 bytes @ 0x30
  3136  0050                     	ds	2
  3137  0052                     xvprintf@j:	
  3138                           
  3139                           ; 2 bytes @ 0x32
  3140  0052                     	ds	2
  3141  0054                     xvprintf@v:	
  3142                           
  3143                           ; 4 bytes @ 0x34
  3144  0054                     	ds	4
  3145  0058                     xvprintf@f:	
  3146                           
  3147                           ; 2 bytes @ 0x38
  3148  0058                     	ds	2
  3149  005A                     xvprintf@i:	
  3150                           
  3151                           ; 2 bytes @ 0x3A
  3152  005A                     	ds	2
  3153  005C                     xvprintf@d:	
  3154                           
  3155                           ; 1 bytes @ 0x3C
  3156  005C                     	ds	1
  3157  005D                     xvprintf@c:	
  3158                           
  3159                           ; 1 bytes @ 0x3D
  3160  005D                     	ds	1
  3161  005E                     ?_xprintf:	
  3162  005E                     xprintf@fmt:	
  3163                           ; 1 bytes @ 0x3E
  3164                           
  3165                           
  3166                           ; 2 bytes @ 0x3E
  3167  005E                     	ds	6
  3168  0064                     ??_xprintf:	
  3169                           
  3170                           ; 1 bytes @ 0x44
  3171  0064                     	ds	1
  3172  0065                     xprintf@arp:	
  3173                           
  3174                           ; 1 bytes @ 0x45
  3175  0065                     	ds	1
  3176  0066                     ??_main:	
  3177                           
  3178                           ; 1 bytes @ 0x46
  3179  0066                     	ds	1
  3180                           
  3181                           	psect	maintext
  3182  051B                     __pmaintext:	
  3183 ;;
  3184 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3185 ;;
  3186 ;; *************** function _main *****************
  3187 ;; Defined at:
  3188 ;;		line 18 in file "main.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      char 
  3195 ;; Registers used:
  3196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : B1F/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3202 ;;      Params:         0       0       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0       0
  3204 ;;      Temps:          0       1       0       0       0       0
  3205 ;;      Totals:         0       1       0       0       0       0
  3206 ;;Total ram usage:        1 bytes
  3207 ;; Hardware stack levels required when called:    9
  3208 ;; This function calls:
  3209 ;;		_Basic_Init
  3210 ;;		_Buzzer_Init
  3211 ;;		_DAC_Initialize
  3212 ;;		_LCD_CursorHome
  3213 ;;		_LCD_Init
  3214 ;;		_Timer1_Init
  3215 ;;		_Timer4_Init
  3216 ;;		_mTouch_Init
  3217 ;;		_mTouch_Read
  3218 ;;		_xprintf
  3219 ;; This function is called by:
  3220 ;;		Startup code after reset
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           
  3225                           ;psect for function _main
  3226  051B                     _main:	
  3227                           
  3228                           ;main.c: 20: Basic_Init();
  3229                           
  3230                           ;incstack = 0
  3231                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3232  051B  318D  25E8  3185   	fcall	_Basic_Init
  3233                           
  3234                           ;main.c: 22: LATA6 = 1;
  3235  051E  0022               	movlb	2	; select bank2
  3236  051F  170C               	bsf	12,6	;volatile
  3237                           
  3238                           ;main.c: 24: Buzzer_Init();
  3239  0520  318E  26C7  3185   	fcall	_Buzzer_Init
  3240                           
  3241                           ;main.c: 26: LCD_Init();
  3242  0523  3185  2591  3185   	fcall	_LCD_Init
  3243                           
  3244                           ;main.c: 27: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  3245  0526  302B               	movlw	low _LCD_Put
  3246  0527  0020               	movlb	0	; select bank0
  3247  0528  00EC               	movwf	_xfunc_out
  3248  0529  300D               	movlw	high _LCD_Put
  3249  052A  00ED               	movwf	_xfunc_out+1
  3250                           
  3251                           ;main.c: 29: Timer1_Init();
  3252  052B  318E  2612  3185   	fcall	_Timer1_Init
  3253                           
  3254                           ;main.c: 30: TMR1ON = 1;;
  3255  052E  0020               	movlb	0	; select bank0
  3256  052F  1418               	bsf	24,0	;volatile
  3257                           
  3258                           ;main.c: 32: mTouch_Init();
  3259  0530  318D  25C0  3185   	fcall	_mTouch_Init
  3260                           
  3261                           ;main.c: 34: Timer4_Init();
  3262  0533  318D  25AD  3185   	fcall	_Timer4_Init
  3263                           
  3264                           ;main.c: 36: DAC_Initialize();
  3265  0536  318E  2682  3185   	fcall	_DAC_Initialize
  3266                           
  3267                           ;main.c: 38: mode.ModeNum = 0;
  3268  0539  0020               	movlb	0	; select bank0
  3269  053A  01EB               	clrf	_mode+1
  3270  053B                     l4796:	
  3271                           ;main.c: 40: while(1)
  3272                           
  3273                           
  3274                           ;main.c: 41: {
  3275                           ;main.c: 42: if(mTouch_Read(2)&&(mode.ModeNum<4-1))
  3276  053B  3002               	movlw	2
  3277  053C  3186  26FB  3185   	fcall	_mTouch_Read
  3278  053F  3A00               	xorlw	0
  3279  0540  1903               	skipnz
  3280  0541  2D4C               	goto	l4802
  3281  0542  3003               	movlw	3
  3282  0543  0020               	movlb	0	; select bank0
  3283  0544  026B               	subwf	_mode+1,w
  3284  0545  1803               	skipnc
  3285  0546  2D4C               	goto	l4802
  3286                           
  3287                           ;main.c: 43: mode.ModeNum++;
  3288  0547  3001               	movlw	1
  3289  0548  00E6               	movwf	??_main
  3290  0549  0866               	movf	??_main,w
  3291  054A  07EB               	addwf	_mode+1,f
  3292  054B  2D59               	goto	l4808
  3293  054C                     l4802:	
  3294                           
  3295                           ;main.c: 44: else if(mTouch_Read(1)&&(mode.ModeNum>0))
  3296  054C  3001               	movlw	1
  3297  054D  3186  26FB  3185   	fcall	_mTouch_Read
  3298  0550  3A00               	xorlw	0
  3299  0551  1903               	skipnz
  3300  0552  2D59               	goto	l4808
  3301  0553  0020               	movlb	0	; select bank0
  3302  0554  086B               	movf	_mode+1,w
  3303  0555  1903               	btfsc	3,2
  3304  0556  2D59               	goto	l4808
  3305                           
  3306                           ;main.c: 45: mode.ModeNum--;
  3307  0557  3001               	movlw	1
  3308  0558  02EB               	subwf	_mode+1,f
  3309  0559                     l4808:	
  3310                           
  3311                           ;main.c: 46: LCD_CursorHome();
  3312  0559  318D  256C  3185   	fcall	_LCD_CursorHome
  3313                           
  3314                           ;main.c: 47: switch(mode.ModeNum)
  3315  055C  2D81               	goto	l4820
  3316  055D                     l4810:	
  3317                           ;main.c: 48: {
  3318                           ;main.c: 49: case COUNT:
  3319                           
  3320                           
  3321                           ;main.c: 50: xprintf("COUNT");
  3322  055D  3099               	movlw	low (STR_1| (0+32768))
  3323  055E  0020               	movlb	0	; select bank0
  3324  055F  00DE               	movwf	xprintf@fmt
  3325  0560  3083               	movlw	high (STR_1| (0+32768))
  3326  0561  00DF               	movwf	xprintf@fmt+1
  3327  0562  318D  258C  3185   	fcall	_xprintf
  3328                           
  3329                           ;main.c: 51: break;
  3330  0565  2D3B               	goto	l4796
  3331  0566                     l4812:	
  3332                           ;main.c: 52: case SELECTFUNC:
  3333                           
  3334                           
  3335                           ;main.c: 53: xprintf("SELECTFUNC");
  3336  0566  309C               	movlw	low (STR_2| (0+32768))
  3337  0567  0020               	movlb	0	; select bank0
  3338  0568  00DE               	movwf	xprintf@fmt
  3339  0569  3082               	movlw	high (STR_2| (0+32768))
  3340  056A  00DF               	movwf	xprintf@fmt+1
  3341  056B  318D  258C  3185   	fcall	_xprintf
  3342                           
  3343                           ;main.c: 54: break;
  3344  056E  2D3B               	goto	l4796
  3345  056F                     l4814:	
  3346                           ;main.c: 55: case ADJGAIN:
  3347                           
  3348                           
  3349                           ;main.c: 56: xprintf("ADJGAIN");
  3350  056F  30C9               	movlw	low (STR_3| (0+32768))
  3351  0570  0020               	movlb	0	; select bank0
  3352  0571  00DE               	movwf	xprintf@fmt
  3353  0572  3082               	movlw	high (STR_3| (0+32768))
  3354  0573  00DF               	movwf	xprintf@fmt+1
  3355  0574  318D  258C  3185   	fcall	_xprintf
  3356                           
  3357                           ;main.c: 57: break;
  3358  0577  2D3B               	goto	l4796
  3359  0578                     l4816:	
  3360                           ;main.c: 58: case PMTDEVICE:
  3361                           
  3362                           
  3363                           ;main.c: 59: xprintf("PMTDEVICE");
  3364  0578  30A7               	movlw	low (STR_4| (0+32768))
  3365  0579  0020               	movlb	0	; select bank0
  3366  057A  00DE               	movwf	xprintf@fmt
  3367  057B  3082               	movlw	high (STR_4| (0+32768))
  3368  057C  00DF               	movwf	xprintf@fmt+1
  3369  057D  318D  258C  3185   	fcall	_xprintf
  3370                           
  3371                           ;main.c: 61: }
  3372                           
  3373                           ;main.c: 60: break;
  3374  0580  2D3B               	goto	l4796
  3375  0581                     l4820:	
  3376  0581  0020               	movlb	0	; select bank0
  3377  0582  086B               	movf	_mode+1,w
  3378                           
  3379                           ; Switch size 1, requested type "space"
  3380                           ; Number of cases is 4, Range of values is 0 to 3
  3381                           ; switch strategies available:
  3382                           ; Name         Instructions Cycles
  3383                           ; simple_byte           13     7 (average)
  3384                           ; direct_byte           14     6 (fixed)
  3385                           ; jumptable            260     6 (fixed)
  3386                           ;	Chosen strategy is simple_byte
  3387  0583  3A00               	xorlw	0	; case 0
  3388  0584  1903               	skipnz
  3389  0585  2D5D               	goto	l4810
  3390  0586  3A01               	xorlw	1	; case 1
  3391  0587  1903               	skipnz
  3392  0588  2D66               	goto	l4812
  3393  0589  3A03               	xorlw	3	; case 2
  3394  058A  1903               	skipnz
  3395  058B  2D6F               	goto	l4814
  3396  058C  3A01               	xorlw	1	; case 3
  3397  058D  1903               	skipnz
  3398  058E  2D78               	goto	l4816
  3399  058F  2D3B               	goto	l4796
  3400  0590  2D3B               	goto	l4796
  3401  0591                     __end_of_main:	
  3402                           ;main.c: 62: }
  3403                           ;main.c: 64: return 0;
  3404                           ;	Return value of _main is never used
  3405                           
  3406                           
  3407                           	psect	text1
  3408  0D8C                     __ptext1:	
  3409 ;; *************** function _xprintf *****************
  3410 ;; Defined at:
  3411 ;;		line 165 in file "xprintf.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  3414 ;;		 -> STR_54(7), STR_53(6), STR_52(6), STR_51(7), 
  3415 ;;		 -> STR_4(10), STR_3(8), STR_2(11), STR_1(6), 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  arp             1   69[BANK0 ] PTR void [1]
  3418 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3428 ;;      Params:         0       6       0       0       0       0
  3429 ;;      Locals:         0       1       0       0       0       0
  3430 ;;      Temps:          0       1       0       0       0       0
  3431 ;;      Totals:         0       8       0       0       0       0
  3432 ;;Total ram usage:        8 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    8
  3435 ;; This function calls:
  3436 ;;		_xvprintf
  3437 ;; This function is called by:
  3438 ;;		_main
  3439 ;;		_put_dump
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           
  3444                           ;psect for function _xprintf
  3445  0D8C                     _xprintf:	
  3446                           
  3447                           ;xprintf.c: 170: va_list arp;
  3448                           ;xprintf.c: 173: *arp = __va_start();
  3449                           
  3450                           ;incstack = 0
  3451                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3452  0D8C  3060               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  3453  0D8D  0020               	movlb	0	; select bank0
  3454  0D8E  00E4               	movwf	??_xprintf
  3455  0D8F  0864               	movf	??_xprintf,w
  3456  0D90  00E5               	movwf	xprintf@arp
  3457                           
  3458                           ;xprintf.c: 174: xvprintf(fmt, arp);
  3459  0D91  085F               	movf	xprintf@fmt+1,w
  3460  0D92  00AF               	movwf	xvprintf@fmt+1
  3461  0D93  085E               	movf	xprintf@fmt,w
  3462  0D94  00AE               	movwf	xvprintf@fmt
  3463  0D95  3065               	movlw	(low (xprintf@arp| 0))& (0+255)
  3464  0D96  00E4               	movwf	??_xprintf
  3465  0D97  0864               	movf	??_xprintf,w
  3466  0D98  00B0               	movwf	xvprintf@arp
  3467  0D99  3180  2054         	fcall	_xvprintf
  3468  0D9B  0008               	return
  3469  0D9C                     __end_of_xprintf:	
  3470                           
  3471                           	psect	text2
  3472  0054                     __ptext2:	
  3473 ;; *************** function _xvprintf *****************
  3474 ;; Defined at:
  3475 ;;		line 88 in file "xprintf.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3478 ;;		 -> STR_54(7), STR_53(6), STR_52(6), STR_51(7), 
  3479 ;;		 -> STR_4(10), STR_3(8), STR_2(11), STR_1(6), 
  3480 ;;  arp             1   16[BANK0 ] PTR PTR void 
  3481 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  s              16   21[BANK0 ] unsigned char [16]
  3484 ;;  v               4   52[BANK0 ] unsigned long 
  3485 ;;  i               2   58[BANK0 ] unsigned int 
  3486 ;;  f               2   56[BANK0 ] unsigned int 
  3487 ;;  j               2   50[BANK0 ] unsigned int 
  3488 ;;  w               2   48[BANK0 ] unsigned int 
  3489 ;;  r               2   46[BANK0 ] unsigned int 
  3490 ;;  c               1   61[BANK0 ] unsigned char 
  3491 ;;  d               1   60[BANK0 ] unsigned char 
  3492 ;;  p               1   45[BANK0 ] PTR unsigned char 
  3493 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3503 ;;      Params:         0       3       0       0       0       0
  3504 ;;      Locals:         0      41       0       0       0       0
  3505 ;;      Temps:          0       4       0       0       0       0
  3506 ;;      Totals:         0      48       0       0       0       0
  3507 ;;Total ram usage:       48 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    7
  3510 ;; This function calls:
  3511 ;;		___lldiv
  3512 ;;		___llmod
  3513 ;;		___wmul
  3514 ;;		_xputc
  3515 ;;		_xputs
  3516 ;; This function is called by:
  3517 ;;		_xprintf
  3518 ;;		_xsprintf
  3519 ;;		_xfprintf
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           
  3524                           ;psect for function _xvprintf
  3525  0054                     _xvprintf:	
  3526  0054                     l648:	
  3527                           ;incstack = 0
  3528                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3529                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  3530                           ;xprintf.c: 94: unsigned long v;
  3531                           ;xprintf.c: 95: char s[16], c, d, *p;
  3532                           ;xprintf.c: 98: for (;;) {
  3533                           
  3534                           
  3535                           ;xprintf.c: 99: c = *fmt++;
  3536  0054  0020               	movlb	0	; select bank0
  3537  0055  082E               	movf	xvprintf@fmt,w
  3538  0056  0084               	movwf	4
  3539  0057  082F               	movf	xvprintf@fmt+1,w
  3540  0058  0085               	movwf	5
  3541  0059  0800               	movf	0,w	;code access
  3542  005A  00B1               	movwf	??_xvprintf
  3543  005B  0831               	movf	??_xvprintf,w
  3544  005C  00DD               	movwf	xvprintf@c
  3545  005D  3001               	movlw	1
  3546  005E  07AE               	addwf	xvprintf@fmt,f
  3547  005F  3000               	movlw	0
  3548  0060  3DAF               	addwfc	xvprintf@fmt+1,f
  3549                           
  3550                           ;xprintf.c: 100: if (!c) break;
  3551  0061  085D               	movf	xvprintf@c,w
  3552  0062  1903               	btfsc	3,2
  3553  0063  0008               	return
  3554                           
  3555                           ;xprintf.c: 101: if (c != '%') {
  3556  0064  3025               	movlw	37
  3557  0065  065D               	xorwf	xvprintf@c,w
  3558  0066  1903               	btfsc	3,2
  3559  0067  286D               	goto	l4582
  3560                           
  3561                           ;xprintf.c: 102: xputc(c); continue;
  3562  0068  085D               	movf	xvprintf@c,w
  3563  0069  3187  27C7  3180   	fcall	_xputc
  3564  006C  2854               	goto	l648
  3565  006D                     l4582:	
  3566                           
  3567                           ;xprintf.c: 103: }
  3568                           ;xprintf.c: 104: f = 0;
  3569  006D  0020               	movlb	0	; select bank0
  3570  006E  01D8               	clrf	xvprintf@f
  3571  006F  01D9               	clrf	xvprintf@f+1
  3572                           
  3573                           ;xprintf.c: 105: c = *fmt++;
  3574  0070  082E               	movf	xvprintf@fmt,w
  3575  0071  0084               	movwf	4
  3576  0072  082F               	movf	xvprintf@fmt+1,w
  3577  0073  0085               	movwf	5
  3578  0074  0800               	movf	0,w	;code access
  3579  0075  00B1               	movwf	??_xvprintf
  3580  0076  0831               	movf	??_xvprintf,w
  3581  0077  00DD               	movwf	xvprintf@c
  3582  0078  3001               	movlw	1
  3583  0079  07AE               	addwf	xvprintf@fmt,f
  3584  007A  3000               	movlw	0
  3585  007B  3DAF               	addwfc	xvprintf@fmt+1,f
  3586                           
  3587                           ;xprintf.c: 106: if (c == '0') {
  3588  007C  3030               	movlw	48
  3589  007D  065D               	xorwf	xvprintf@c,w
  3590  007E  1D03               	btfss	3,2
  3591  007F  2882               	goto	l4596
  3592                           
  3593                           ;xprintf.c: 107: f = 1; c = *fmt++;
  3594  0080  3001               	movlw	1
  3595  0081  2887               	goto	L6
  3596  0082                     l4596:	
  3597                           ;xprintf.c: 108: } else {
  3598                           
  3599                           
  3600                           ;xprintf.c: 109: if (c == '-') {
  3601  0082  302D               	movlw	45
  3602  0083  065D               	xorwf	xvprintf@c,w
  3603  0084  1D03               	btfss	3,2
  3604  0085  2896               	goto	l4604
  3605                           
  3606                           ;xprintf.c: 110: f = 2; c = *fmt++;
  3607  0086  3002               	movlw	2
  3608  0087                     L6:	
  3609  0087  00D8               	movwf	xvprintf@f
  3610  0088  3000               	movlw	0
  3611  0089  00D9               	movwf	xvprintf@f+1
  3612  008A  082E               	movf	xvprintf@fmt,w
  3613  008B  0084               	movwf	4
  3614  008C  082F               	movf	xvprintf@fmt+1,w
  3615  008D  0085               	movwf	5
  3616  008E  0800               	movf	0,w	;code access
  3617  008F  00B1               	movwf	??_xvprintf
  3618  0090  0831               	movf	??_xvprintf,w
  3619  0091  00DD               	movwf	xvprintf@c
  3620  0092  3001               	movlw	1
  3621  0093  07AE               	addwf	xvprintf@fmt,f
  3622  0094  3000               	movlw	0
  3623  0095  3DAF               	addwfc	xvprintf@fmt+1,f
  3624  0096                     l4604:	
  3625                           
  3626                           ;xprintf.c: 111: }
  3627                           ;xprintf.c: 112: }
  3628                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  3629  0096  01D0               	clrf	xvprintf@w
  3630  0097  01D1               	clrf	xvprintf@w+1
  3631  0098  28C0               	goto	l4612
  3632  0099                     l4606:	
  3633                           
  3634                           ;xprintf.c: 114: w = w * 10 + c - '0';
  3635  0099  085D               	movf	xvprintf@c,w
  3636  009A  00B1               	movwf	??_xvprintf
  3637  009B  01B2               	clrf	??_xvprintf+1
  3638  009C  0851               	movf	xvprintf@w+1,w
  3639  009D  00A1               	movwf	___wmul@multiplier+1
  3640  009E  0850               	movf	xvprintf@w,w
  3641  009F  00A0               	movwf	___wmul@multiplier
  3642  00A0  300A               	movlw	10
  3643  00A1  00A2               	movwf	___wmul@multiplicand
  3644  00A2  3000               	movlw	0
  3645  00A3  00A3               	movwf	___wmul@multiplicand+1
  3646  00A4  318E  2648  3180   	fcall	___wmul
  3647  00A7  0020               	movlb	0	; select bank0
  3648  00A8  0831               	movf	??_xvprintf,w
  3649  00A9  0720               	addwf	?___wmul,w
  3650  00AA  00B3               	movwf	??_xvprintf+2
  3651  00AB  0832               	movf	??_xvprintf+1,w
  3652  00AC  3D21               	addwfc	?___wmul+1,w
  3653  00AD  00B4               	movwf	??_xvprintf+3
  3654  00AE  0833               	movf	??_xvprintf+2,w
  3655  00AF  3ED0               	addlw	208
  3656  00B0  00D0               	movwf	xvprintf@w
  3657  00B1  30FF               	movlw	255
  3658  00B2  3D34               	addwfc	??_xvprintf+3,w
  3659  00B3  00D1               	movwf	xvprintf@w+1
  3660  00B4  082E               	movf	xvprintf@fmt,w
  3661  00B5  0084               	movwf	4
  3662  00B6  082F               	movf	xvprintf@fmt+1,w
  3663  00B7  0085               	movwf	5
  3664  00B8  0800               	movf	0,w	;code access
  3665  00B9  00B1               	movwf	??_xvprintf
  3666  00BA  0831               	movf	??_xvprintf,w
  3667  00BB  00DD               	movwf	xvprintf@c
  3668  00BC  3001               	movlw	1
  3669  00BD  07AE               	addwf	xvprintf@fmt,f
  3670  00BE  3000               	movlw	0
  3671  00BF  3DAF               	addwfc	xvprintf@fmt+1,f
  3672  00C0                     l4612:	
  3673  00C0  3030               	movlw	48
  3674  00C1  025D               	subwf	xvprintf@c,w
  3675  00C2  1C03               	skipc
  3676  00C3  28C8               	goto	l4616
  3677  00C4  303A               	movlw	58
  3678  00C5  025D               	subwf	xvprintf@c,w
  3679  00C6  1C03               	skipc
  3680  00C7  2899               	goto	l4606
  3681  00C8                     l4616:	
  3682                           
  3683                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  3684  00C8  306C               	movlw	108
  3685  00C9  065D               	xorwf	xvprintf@c,w
  3686  00CA  1903               	btfsc	3,2
  3687  00CB  28D0               	goto	l663
  3688  00CC  304C               	movlw	76
  3689  00CD  065D               	xorwf	xvprintf@c,w
  3690  00CE  1D03               	btfss	3,2
  3691  00CF  28DD               	goto	l4624
  3692  00D0                     l663:	
  3693                           
  3694                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  3695  00D0  1558               	bsf	xvprintf@f,2
  3696  00D1  082E               	movf	xvprintf@fmt,w
  3697  00D2  0084               	movwf	4
  3698  00D3  082F               	movf	xvprintf@fmt+1,w
  3699  00D4  0085               	movwf	5
  3700  00D5  0800               	movf	0,w	;code access
  3701  00D6  00B1               	movwf	??_xvprintf
  3702  00D7  0831               	movf	??_xvprintf,w
  3703  00D8  00DD               	movwf	xvprintf@c
  3704  00D9  3001               	movlw	1
  3705  00DA  07AE               	addwf	xvprintf@fmt,f
  3706  00DB  3000               	movlw	0
  3707  00DC  3DAF               	addwfc	xvprintf@fmt+1,f
  3708  00DD                     l4624:	
  3709                           
  3710                           ;xprintf.c: 117: }
  3711                           ;xprintf.c: 118: if (!c) break;
  3712  00DD  085D               	movf	xvprintf@c,w
  3713  00DE  1903               	btfsc	3,2
  3714  00DF  0008               	return
  3715                           
  3716                           ;xprintf.c: 119: d = c;
  3717  00E0  085D               	movf	xvprintf@c,w
  3718  00E1  00B1               	movwf	??_xvprintf
  3719  00E2  0831               	movf	??_xvprintf,w
  3720  00E3  00DC               	movwf	xvprintf@d
  3721                           
  3722                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  3723  00E4  3061               	movlw	97
  3724  00E5  025C               	subwf	xvprintf@d,w
  3725  00E6  1C03               	skipc
  3726  00E7  2953               	goto	l4666
  3727  00E8  3020               	movlw	32
  3728  00E9  02DC               	subwf	xvprintf@d,f
  3729                           
  3730                           ;xprintf.c: 121: switch (d) {
  3731  00EA  2953               	goto	l4666
  3732  00EB                     l4632:	
  3733                           ;xprintf.c: 122: case 'S' :
  3734                           
  3735                           
  3736                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  3737  00EB  0830               	movf	xvprintf@arp,w
  3738  00EC  0086               	movwf	6
  3739  00ED  0187               	clrf	7
  3740  00EE  3F40               	moviw [0]fsr1
  3741  00EF  0084               	movwf	4
  3742  00F0  0185               	clrf	5
  3743  00F1  0A81               	incf	1,f
  3744  00F2  0800               	movf	0,w
  3745  00F3  00B1               	movwf	??_xvprintf
  3746  00F4  0831               	movf	??_xvprintf,w
  3747  00F5  00CD               	movwf	xvprintf@p
  3748                           
  3749                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  3750  00F6  01D2               	clrf	xvprintf@j
  3751  00F7  01D3               	clrf	xvprintf@j+1
  3752  00F8                     l4638:	
  3753  00F8  0852               	movf	xvprintf@j,w
  3754  00F9  074D               	addwf	xvprintf@p,w
  3755  00FA  00B1               	movwf	??_xvprintf
  3756  00FB  0831               	movf	??_xvprintf,w
  3757  00FC  0086               	movwf	6
  3758  00FD  0187               	clrf	7
  3759  00FE  0801               	movf	1,w
  3760  00FF  1903               	btfsc	3,2
  3761  0100  290A               	goto	l4642
  3762  0101  3001               	movlw	1
  3763  0102  07D2               	addwf	xvprintf@j,f
  3764  0103  3000               	movlw	0
  3765  0104  3DD3               	addwfc	xvprintf@j+1,f
  3766  0105  28F8               	goto	l4638
  3767  0106                     l4640:	
  3768                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  3769                           
  3770  0106  3020               	movlw	32
  3771  0107  3187  27C7  3180   	fcall	_xputc
  3772  010A                     l4642:	
  3773  010A  0020               	movlb	0	; select bank0
  3774  010B  18D8               	btfsc	xvprintf@f,1
  3775  010C  291C               	goto	l4646
  3776  010D  0853               	movf	xvprintf@j+1,w
  3777  010E  00B2               	movwf	??_xvprintf+1
  3778  010F  0852               	movf	xvprintf@j,w
  3779  0110  00B1               	movwf	??_xvprintf
  3780  0111  0AD2               	incf	xvprintf@j,f
  3781  0112  1903               	skipnz
  3782  0113  0AD3               	incf	xvprintf@j+1,f
  3783  0114  0851               	movf	xvprintf@w+1,w
  3784  0115  0232               	subwf	??_xvprintf+1,w
  3785  0116  1D03               	skipz
  3786  0117  291A               	goto	u4645
  3787  0118  0850               	movf	xvprintf@w,w
  3788  0119  0231               	subwf	??_xvprintf,w
  3789  011A                     u4645:	
  3790  011A  1C03               	skipc
  3791  011B  2906               	goto	l4640
  3792  011C                     l4646:	
  3793                           
  3794                           ;xprintf.c: 126: xputs(p);
  3795  011C  084D               	movf	xvprintf@p,w
  3796  011D  318D  25FD  3180   	fcall	_xputs
  3797  0120                     l4650:	
  3798                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  3799                           
  3800  0120  0020               	movlb	0	; select bank0
  3801  0121  0853               	movf	xvprintf@j+1,w
  3802  0122  00B2               	movwf	??_xvprintf+1
  3803  0123  0852               	movf	xvprintf@j,w
  3804  0124  00B1               	movwf	??_xvprintf
  3805  0125  0AD2               	incf	xvprintf@j,f
  3806  0126  1903               	skipnz
  3807  0127  0AD3               	incf	xvprintf@j+1,f
  3808  0128  0851               	movf	xvprintf@w+1,w
  3809  0129  0232               	subwf	??_xvprintf+1,w
  3810  012A  1D03               	skipz
  3811  012B  292E               	goto	u4655
  3812  012C  0850               	movf	xvprintf@w,w
  3813  012D  0231               	subwf	??_xvprintf,w
  3814  012E                     u4655:	
  3815  012E  1803               	btfsc	3,0
  3816  012F  2854               	goto	l648
  3817  0130  3020               	movlw	32
  3818  0131  3187  27C7  3180   	fcall	_xputc
  3819  0134  2920               	goto	l4650
  3820  0135                     l4652:	
  3821                           ;xprintf.c: 129: case 'C' :
  3822                           
  3823                           ;xprintf.c: 128: continue;
  3824                           
  3825                           
  3826                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  3827  0135  0830               	movf	xvprintf@arp,w
  3828  0136  0086               	movwf	6
  3829  0137  0187               	clrf	7
  3830  0138  0801               	movf	1,w
  3831  0139  0084               	movwf	4
  3832  013A  0185               	clrf	5
  3833  013B  3002               	movlw	2
  3834  013C  0781               	addwf	1,f
  3835  013D  0800               	movf	0,w
  3836  013E  3187  27C7  3180   	fcall	_xputc
  3837  0141  2854               	goto	l648
  3838  0142                     l4654:	
  3839                           ;xprintf.c: 131: case 'B' :
  3840                           
  3841                           
  3842                           ;xprintf.c: 132: r = 2; break;
  3843  0142  3002               	movlw	2
  3844  0143  0020               	movlb	0	; select bank0
  3845  0144  294A               	goto	L3
  3846  0145                     l4656:	
  3847                           ;xprintf.c: 133: case 'O' :
  3848                           
  3849                           
  3850                           ;xprintf.c: 134: r = 8; break;
  3851  0145  3008               	movlw	8
  3852  0146  294A               	goto	L3
  3853  0147                     l4658:	
  3854                           ;xprintf.c: 135: case 'D' :
  3855                           
  3856                           
  3857                           ;xprintf.c: 136: case 'U' :
  3858                           ;xprintf.c: 137: r = 10; break;
  3859  0147  300A               	movlw	10
  3860  0148  294A               	goto	L3
  3861  0149                     l4660:	
  3862                           ;xprintf.c: 138: case 'X' :
  3863                           
  3864                           
  3865                           ;xprintf.c: 139: r = 16; break;
  3866  0149  3010               	movlw	16
  3867  014A                     L3:	
  3868  014A  00CE               	movwf	xvprintf@r
  3869  014B  3000               	movlw	0
  3870  014C  00CF               	movwf	xvprintf@r+1
  3871  014D  296B               	goto	l681
  3872  014E                     l4662:	
  3873                           ;xprintf.c: 140: default:
  3874                           
  3875                           
  3876                           ;xprintf.c: 141: xputc(c); continue;
  3877  014E  085D               	movf	xvprintf@c,w
  3878  014F  3187  27C7  3180   	fcall	_xputc
  3879  0152  2854               	goto	l648
  3880  0153                     l4666:	
  3881                           ;xprintf.c: 142: }
  3882                           
  3883  0153  0020               	movlb	0	; select bank0
  3884  0154  085C               	movf	xvprintf@d,w
  3885                           
  3886                           ; Switch size 1, requested type "space"
  3887                           ; Number of cases is 7, Range of values is 66 to 88
  3888                           ; switch strategies available:
  3889                           ; Name         Instructions Cycles
  3890                           ; simple_byte           22    12 (average)
  3891                           ; direct_byte           55     9 (fixed)
  3892                           ; jumptable            263     9 (fixed)
  3893                           ;	Chosen strategy is simple_byte
  3894  0155  3A42               	xorlw	66	; case 66
  3895  0156  1903               	skipnz
  3896  0157  2942               	goto	l4654
  3897  0158  3A01               	xorlw	1	; case 67
  3898  0159  1903               	skipnz
  3899  015A  2935               	goto	l4652
  3900  015B  3A07               	xorlw	7	; case 68
  3901  015C  1903               	skipnz
  3902  015D  2947               	goto	l4658
  3903  015E  3A0B               	xorlw	11	; case 79
  3904  015F  1903               	skipnz
  3905  0160  2945               	goto	l4656
  3906  0161  3A1C               	xorlw	28	; case 83
  3907  0162  1903               	skipnz
  3908  0163  28EB               	goto	l4632
  3909  0164  3A06               	xorlw	6	; case 85
  3910  0165  1903               	skipnz
  3911  0166  2947               	goto	l4658
  3912  0167  3A0D               	xorlw	13	; case 88
  3913  0168  1903               	skipnz
  3914  0169  2949               	goto	l4660
  3915  016A  294E               	goto	l4662
  3916  016B                     l681:	
  3917                           
  3918                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  3919  016B  0020               	movlb	0	; select bank0
  3920  016C  1958               	btfsc	xvprintf@f,2
  3921  016D  29A3               	goto	l4676
  3922  016E  3044               	movlw	68
  3923  016F  065C               	xorwf	xvprintf@d,w
  3924  0170  1903               	btfsc	3,2
  3925  0171  2985               	goto	l4672
  3926  0172  0830               	movf	xvprintf@arp,w
  3927  0173  0086               	movwf	6
  3928  0174  0187               	clrf	7
  3929  0175  0801               	movf	1,w
  3930  0176  0084               	movwf	4
  3931  0177  0185               	clrf	5
  3932  0178  3002               	movlw	2
  3933  0179  0781               	addwf	1,f
  3934  017A  3F00               	moviw [0]fsr0
  3935  017B  00B1               	movwf	??_xvprintf
  3936  017C  3F01               	moviw [1]fsr0
  3937  017D  00B2               	movwf	??_xvprintf+1
  3938  017E  0831               	movf	??_xvprintf,w
  3939  017F  00C5               	movwf	_xvprintf$740
  3940  0180  0832               	movf	??_xvprintf+1,w
  3941  0181  00C6               	movwf	_xvprintf$740+1
  3942  0182  01C7               	clrf	_xvprintf$740+2
  3943  0183  01C8               	clrf	_xvprintf$740+3
  3944  0184  299A               	goto	l4674
  3945  0185                     l4672:	
  3946  0185  0830               	movf	xvprintf@arp,w
  3947  0186  0086               	movwf	6
  3948  0187  0187               	clrf	7
  3949  0188  0801               	movf	1,w
  3950  0189  0084               	movwf	4
  3951  018A  0185               	clrf	5
  3952  018B  3002               	movlw	2
  3953  018C  0781               	addwf	1,f
  3954  018D  3F00               	moviw [0]fsr0
  3955  018E  00B1               	movwf	??_xvprintf
  3956  018F  3F01               	moviw [1]fsr0
  3957  0190  00B2               	movwf	??_xvprintf+1
  3958  0191  0831               	movf	??_xvprintf,w
  3959  0192  00C5               	movwf	_xvprintf$740
  3960  0193  0832               	movf	??_xvprintf+1,w
  3961  0194  00C6               	movwf	_xvprintf$740+1
  3962  0195  0D89               	rlf	9,f
  3963  0196  3B89               	subwfb	9,f
  3964  0197  0989               	comf	9,f
  3965  0198  00C7               	movwf	_xvprintf$740+2
  3966  0199  00C8               	movwf	_xvprintf$740+3
  3967  019A                     l4674:	
  3968  019A  0848               	movf	_xvprintf$740+3,w
  3969  019B  00D7               	movwf	xvprintf@v+3
  3970  019C  0847               	movf	_xvprintf$740+2,w
  3971  019D  00D6               	movwf	xvprintf@v+2
  3972  019E  0846               	movf	_xvprintf$740+1,w
  3973  019F  00D5               	movwf	xvprintf@v+1
  3974  01A0  0845               	movf	_xvprintf$740,w
  3975  01A1  00D4               	movwf	xvprintf@v
  3976  01A2  29B3               	goto	l4678
  3977  01A3                     l4676:	
  3978  01A3  0830               	movf	xvprintf@arp,w
  3979  01A4  0086               	movwf	6
  3980  01A5  0187               	clrf	7
  3981  01A6  0801               	movf	1,w
  3982  01A7  0084               	movwf	4
  3983  01A8  0185               	clrf	5
  3984  01A9  3004               	movlw	4
  3985  01AA  0781               	addwf	1,f
  3986  01AB  3F00               	moviw [0]fsr0
  3987  01AC  00D4               	movwf	xvprintf@v
  3988  01AD  3F01               	moviw [1]fsr0
  3989  01AE  00D5               	movwf	xvprintf@v+1
  3990  01AF  3F02               	moviw [2]fsr0
  3991  01B0  00D6               	movwf	xvprintf@v+2
  3992  01B1  3F03               	moviw [3]fsr0
  3993  01B2  00D7               	movwf	xvprintf@v+3
  3994  01B3                     l4678:	
  3995                           
  3996                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  3997  01B3  3044               	movlw	68
  3998  01B4  065C               	xorwf	xvprintf@d,w
  3999  01B5  1903               	btfsc	3,2
  4000  01B6  1FD7               	btfss	xvprintf@v+3,7
  4001  01B7  29C4               	goto	l4684
  4002                           
  4003                           ;xprintf.c: 147: v = 0 - v;
  4004  01B8  09D4               	comf	xvprintf@v,f
  4005  01B9  09D5               	comf	xvprintf@v+1,f
  4006  01BA  09D6               	comf	xvprintf@v+2,f
  4007  01BB  09D7               	comf	xvprintf@v+3,f
  4008  01BC  0AD4               	incf	xvprintf@v,f
  4009  01BD  1903               	skipnz
  4010  01BE  0AD5               	incf	xvprintf@v+1,f
  4011  01BF  1903               	skipnz
  4012  01C0  0AD6               	incf	xvprintf@v+2,f
  4013  01C1  1903               	skipnz
  4014  01C2  0AD7               	incf	xvprintf@v+3,f
  4015                           
  4016                           ;xprintf.c: 148: f |= 8;
  4017  01C3  15D8               	bsf	xvprintf@f,3
  4018  01C4                     l4684:	
  4019                           
  4020                           ;xprintf.c: 149: }
  4021                           ;xprintf.c: 150: i = 0;
  4022  01C4  01DA               	clrf	xvprintf@i
  4023  01C5  01DB               	clrf	xvprintf@i+1
  4024  01C6                     l4686:	
  4025                           ;xprintf.c: 151: do {
  4026                           
  4027                           
  4028                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  4029  01C6  084E               	movf	xvprintf@r,w
  4030  01C7  00A0               	movwf	___llmod@divisor
  4031  01C8  084F               	movf	xvprintf@r+1,w
  4032  01C9  00A1               	movwf	___llmod@divisor+1
  4033  01CA  01A2               	clrf	___llmod@divisor+2
  4034  01CB  01A3               	clrf	___llmod@divisor+3
  4035  01CC  0857               	movf	xvprintf@v+3,w
  4036  01CD  00A7               	movwf	___llmod@dividend+3
  4037  01CE  0856               	movf	xvprintf@v+2,w
  4038  01CF  00A6               	movwf	___llmod@dividend+2
  4039  01D0  0855               	movf	xvprintf@v+1,w
  4040  01D1  00A5               	movwf	___llmod@dividend+1
  4041  01D2  0854               	movf	xvprintf@v,w
  4042  01D3  00A4               	movwf	___llmod@dividend
  4043  01D4  318F  27BD  3180   	fcall	___llmod
  4044  01D7  0020               	movlb	0	; select bank0
  4045  01D8  0820               	movf	?___llmod,w
  4046  01D9  00B1               	movwf	??_xvprintf
  4047  01DA  0831               	movf	??_xvprintf,w
  4048  01DB  00DC               	movwf	xvprintf@d
  4049  01DC  084E               	movf	xvprintf@r,w
  4050  01DD  00A0               	movwf	___lldiv@divisor
  4051  01DE  084F               	movf	xvprintf@r+1,w
  4052  01DF  00A1               	movwf	___lldiv@divisor+1
  4053  01E0  01A2               	clrf	___lldiv@divisor+2
  4054  01E1  01A3               	clrf	___lldiv@divisor+3
  4055  01E2  0857               	movf	xvprintf@v+3,w
  4056  01E3  00A7               	movwf	___lldiv@dividend+3
  4057  01E4  0856               	movf	xvprintf@v+2,w
  4058  01E5  00A6               	movwf	___lldiv@dividend+2
  4059  01E6  0855               	movf	xvprintf@v+1,w
  4060  01E7  00A5               	movwf	___lldiv@dividend+1
  4061  01E8  0854               	movf	xvprintf@v,w
  4062  01E9  00A4               	movwf	___lldiv@dividend
  4063  01EA  3186  26A8  3180   	fcall	___lldiv
  4064  01ED  0020               	movlb	0	; select bank0
  4065  01EE  0823               	movf	?___lldiv+3,w
  4066  01EF  00D7               	movwf	xvprintf@v+3
  4067  01F0  0822               	movf	?___lldiv+2,w
  4068  01F1  00D6               	movwf	xvprintf@v+2
  4069  01F2  0821               	movf	?___lldiv+1,w
  4070  01F3  00D5               	movwf	xvprintf@v+1
  4071  01F4  0820               	movf	?___lldiv,w
  4072  01F5  00D4               	movwf	xvprintf@v
  4073                           
  4074                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  4075  01F6  300A               	movlw	10
  4076  01F7  025C               	subwf	xvprintf@d,w
  4077  01F8  1C03               	skipc
  4078  01F9  2A08               	goto	l4700
  4079  01FA  3078               	movlw	120
  4080  01FB  065D               	xorwf	xvprintf@c,w
  4081  01FC  1903               	btfsc	3,2
  4082  01FD  2A00               	goto	l4696
  4083  01FE  3007               	movlw	7
  4084  01FF  2A01               	goto	L4
  4085  0200                     l4696:	
  4086  0200  3027               	movlw	39
  4087  0201                     L4:	
  4088  0201  00C9               	movwf	_xvprintf$741
  4089  0202  3000               	movlw	0
  4090  0203  00CA               	movwf	_xvprintf$741+1
  4091  0204  0849               	movf	_xvprintf$741,w
  4092  0205  00B1               	movwf	??_xvprintf
  4093  0206  0831               	movf	??_xvprintf,w
  4094  0207  07DC               	addwf	xvprintf@d,f
  4095  0208                     l4700:	
  4096                           
  4097                           ;xprintf.c: 154: s[i++] = d + '0';
  4098  0208  085C               	movf	xvprintf@d,w
  4099  0209  3E30               	addlw	48
  4100  020A  00B1               	movwf	??_xvprintf
  4101  020B  085A               	movf	xvprintf@i,w
  4102  020C  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  4103  020D  0086               	movwf	6
  4104  020E  0187               	clrf	7
  4105  020F  0831               	movf	??_xvprintf,w
  4106  0210  0081               	movwf	1
  4107  0211  3001               	movlw	1
  4108  0212  07DA               	addwf	xvprintf@i,f
  4109  0213  3000               	movlw	0
  4110  0214  3DDB               	addwfc	xvprintf@i+1,f
  4111                           
  4112                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  4113  0215  0857               	movf	xvprintf@v+3,w
  4114  0216  0456               	iorwf	xvprintf@v+2,w
  4115  0217  0455               	iorwf	xvprintf@v+1,w
  4116  0218  0454               	iorwf	xvprintf@v,w
  4117  0219  1903               	skipnz
  4118  021A  2A22               	goto	l704
  4119  021B  3000               	movlw	0
  4120  021C  025B               	subwf	xvprintf@i+1,w
  4121  021D  3010               	movlw	16
  4122  021E  1903               	skipnz
  4123  021F  025A               	subwf	xvprintf@i,w
  4124  0220  1C03               	skipc
  4125  0221  29C6               	goto	l4686
  4126  0222                     l704:	
  4127                           
  4128                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  4129  0222  1DD8               	btfss	xvprintf@f,3
  4130  0223  2A30               	goto	l4712
  4131  0224  302D               	movlw	45
  4132  0225  00B1               	movwf	??_xvprintf
  4133  0226  085A               	movf	xvprintf@i,w
  4134  0227  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  4135  0228  0086               	movwf	6
  4136  0229  0187               	clrf	7
  4137  022A  0831               	movf	??_xvprintf,w
  4138  022B  0081               	movwf	1
  4139  022C  3001               	movlw	1
  4140  022D  07DA               	addwf	xvprintf@i,f
  4141  022E  3000               	movlw	0
  4142  022F  3DDB               	addwfc	xvprintf@i+1,f
  4143  0230                     l4712:	
  4144                           
  4145                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  4146  0230  085B               	movf	xvprintf@i+1,w
  4147  0231  00D3               	movwf	xvprintf@j+1
  4148  0232  085A               	movf	xvprintf@i,w
  4149  0233  00D2               	movwf	xvprintf@j
  4150  0234  1858               	btfsc	xvprintf@f,0
  4151  0235  2A38               	goto	l4718
  4152  0236  3020               	movlw	32
  4153  0237  2A39               	goto	L5
  4154  0238                     l4718:	
  4155  0238  3030               	movlw	48
  4156  0239                     L5:	
  4157  0239  00CB               	movwf	_xvprintf$742
  4158  023A  3000               	movlw	0
  4159  023B  00CC               	movwf	_xvprintf$742+1
  4160  023C  084B               	movf	_xvprintf$742,w
  4161  023D  00B1               	movwf	??_xvprintf
  4162  023E  0831               	movf	??_xvprintf,w
  4163  023F  00DC               	movwf	xvprintf@d
  4164                           
  4165                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  4166  0240  2A45               	goto	l4722
  4167  0241                     l4720:	
  4168  0241  085C               	movf	xvprintf@d,w
  4169  0242  3187  27C7  3180   	fcall	_xputc
  4170  0245                     l4722:	
  4171  0245  0020               	movlb	0	; select bank0
  4172  0246  18D8               	btfsc	xvprintf@f,1
  4173  0247  2A57               	goto	l4726
  4174  0248  0853               	movf	xvprintf@j+1,w
  4175  0249  00B2               	movwf	??_xvprintf+1
  4176  024A  0852               	movf	xvprintf@j,w
  4177  024B  00B1               	movwf	??_xvprintf
  4178  024C  0AD2               	incf	xvprintf@j,f
  4179  024D  1903               	skipnz
  4180  024E  0AD3               	incf	xvprintf@j+1,f
  4181  024F  0851               	movf	xvprintf@w+1,w
  4182  0250  0232               	subwf	??_xvprintf+1,w
  4183  0251  1D03               	skipz
  4184  0252  2A55               	goto	u4775
  4185  0253  0850               	movf	xvprintf@w,w
  4186  0254  0231               	subwf	??_xvprintf,w
  4187  0255                     u4775:	
  4188  0255  1C03               	skipc
  4189  0256  2A41               	goto	l4720
  4190  0257                     l4726:	
  4191                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  4192                           
  4193  0257  3001               	movlw	1
  4194  0258  02DA               	subwf	xvprintf@i,f
  4195  0259  3000               	movlw	0
  4196  025A  3BDB               	subwfb	xvprintf@i+1,f
  4197  025B  085A               	movf	xvprintf@i,w
  4198  025C  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  4199  025D  0086               	movwf	6
  4200  025E  0187               	clrf	7
  4201  025F  0801               	movf	1,w
  4202  0260  3187  27C7  3180   	fcall	_xputc
  4203  0263  0020               	movlb	0	; select bank0
  4204  0264  085A               	movf	xvprintf@i,w
  4205  0265  045B               	iorwf	xvprintf@i+1,w
  4206  0266  1903               	btfsc	3,2
  4207  0267  2A6D               	goto	l4732
  4208  0268  2A57               	goto	l4726
  4209  0269                     l4730:	
  4210                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  4211                           
  4212  0269  3020               	movlw	32
  4213  026A  3187  27C7  3180   	fcall	_xputc
  4214  026D                     l4732:	
  4215  026D  0020               	movlb	0	; select bank0
  4216  026E  0853               	movf	xvprintf@j+1,w
  4217  026F  00B2               	movwf	??_xvprintf+1
  4218  0270  0852               	movf	xvprintf@j,w
  4219  0271  00B1               	movwf	??_xvprintf
  4220  0272  0AD2               	incf	xvprintf@j,f
  4221  0273  1903               	skipnz
  4222  0274  0AD3               	incf	xvprintf@j+1,f
  4223  0275  0851               	movf	xvprintf@w+1,w
  4224  0276  0232               	subwf	??_xvprintf+1,w
  4225  0277  1D03               	skipz
  4226  0278  2A7B               	goto	u4795
  4227  0279  0850               	movf	xvprintf@w,w
  4228  027A  0231               	subwf	??_xvprintf,w
  4229  027B                     u4795:	
  4230  027B  1803               	btfsc	3,0
  4231  027C  2854               	goto	l648
  4232  027D  2A69               	goto	l4730
  4233  027E                     __end_of_xvprintf:	
  4234                           ;xprintf.c: 161: }
  4235                           
  4236                           
  4237                           	psect	text3
  4238  0DFD                     __ptext3:	
  4239 ;; *************** function _xputs *****************
  4240 ;; Defined at:
  4241 ;;		line 44 in file "xprintf.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  str             1    wreg     PTR const unsigned char 
  4244 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  str             1    7[BANK0 ] PTR const unsigned char 
  4247 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4257 ;;      Params:         0       0       0       0       0       0
  4258 ;;      Locals:         0       1       0       0       0       0
  4259 ;;      Temps:          0       1       0       0       0       0
  4260 ;;      Totals:         0       2       0       0       0       0
  4261 ;;Total ram usage:        2 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    6
  4264 ;; This function calls:
  4265 ;;		_xputc
  4266 ;; This function is called by:
  4267 ;;		_xvprintf
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _xputs
  4273  0DFD                     _xputs:	
  4274                           
  4275                           ;incstack = 0
  4276                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4277                           ;xputs@str stored from wreg
  4278  0DFD  0020               	movlb	0	; select bank0
  4279  0DFE  00A7               	movwf	xputs@str
  4280  0DFF                     l4568:	
  4281                           ;xprintf.c: 48: while (*str)
  4282                           
  4283  0DFF  0827               	movf	xputs@str,w
  4284  0E00  0086               	movwf	6
  4285  0E01  0187               	clrf	7
  4286  0E02  0801               	movf	1,w
  4287  0E03  1903               	btfsc	3,2
  4288  0E04  0008               	return
  4289                           
  4290                           ;xprintf.c: 49: xputc(*str++);
  4291  0E05  0827               	movf	xputs@str,w
  4292  0E06  0086               	movwf	6
  4293  0E07  0187               	clrf	7
  4294  0E08  0801               	movf	1,w
  4295  0E09  3187  27C7  318D   	fcall	_xputc
  4296  0E0C  3001               	movlw	1
  4297  0E0D  0020               	movlb	0	; select bank0
  4298  0E0E  00A6               	movwf	??_xputs
  4299  0E0F  0826               	movf	??_xputs,w
  4300  0E10  07A7               	addwf	xputs@str,f
  4301  0E11  2DFF               	goto	l4568
  4302  0E12                     __end_of_xputs:	
  4303                           
  4304                           	psect	text4
  4305  07C7                     __ptext4:	
  4306 ;; *************** function _xputc *****************
  4307 ;; Defined at:
  4308 ;;		line 26 in file "xprintf.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  c               1    wreg     unsigned char 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  c               1    5[BANK0 ] unsigned char 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4322 ;;      Params:         0       0       0       0       0       0
  4323 ;;      Locals:         0       1       0       0       0       0
  4324 ;;      Temps:          0       1       0       0       0       0
  4325 ;;      Totals:         0       2       0       0       0       0
  4326 ;;Total ram usage:        2 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    5
  4329 ;; This function calls:
  4330 ;;		Absolute function
  4331 ;;		_LCD_Put
  4332 ;; This function is called by:
  4333 ;;		_xputs
  4334 ;;		_xvprintf
  4335 ;;		_xfputs
  4336 ;;		_put_dump
  4337 ;;		_xgets
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           
  4342                           ;psect for function _xputc
  4343  07C7                     _xputc:	
  4344                           
  4345                           ;incstack = 0
  4346                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4347                           ;xputc@c stored from wreg
  4348  07C7  0020               	movlb	0	; select bank0
  4349  07C8  00A5               	movwf	xputc@c
  4350  07C9  300A               	movlw	10
  4351  07CA  0625               	xorwf	xputc@c,w
  4352  07CB  1D03               	btfss	3,2
  4353  07CC  2FD6               	goto	l4550
  4354  07CD  30EA               	movlw	(low (STR_50| (0+32768)))& (0+255)
  4355  07CE  00A4               	movwf	??_xputc
  4356  07CF  0824               	movf	??_xputc,w
  4357  07D0  00A3               	movwf	LCD_Put@word
  4358  07D1  086D               	movf	_xfunc_out+1,w
  4359  07D2  008A               	movwf	10
  4360  07D3  086C               	movf	_xfunc_out,w
  4361  07D4  000A               	callw
  4362  07D5  3187               	pagesel	$
  4363  07D6                     l4550:	
  4364                           
  4365                           ;xprintf.c: 30: if (outptr) {
  4366  07D6  0020               	movlb	0	; select bank0
  4367  07D7  086E               	movf	_outptr,w
  4368  07D8  1903               	btfsc	3,2
  4369  07D9  2FE6               	goto	l4558
  4370                           
  4371                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  4372  07DA  0825               	movf	xputc@c,w
  4373  07DB  00A4               	movwf	??_xputc
  4374  07DC  086E               	movf	_outptr,w
  4375  07DD  0086               	movwf	6
  4376  07DE  0187               	clrf	7
  4377  07DF  0824               	movf	??_xputc,w
  4378  07E0  0081               	movwf	1
  4379  07E1  3001               	movlw	1
  4380  07E2  00A4               	movwf	??_xputc
  4381  07E3  0824               	movf	??_xputc,w
  4382  07E4  07EE               	addwf	_outptr,f
  4383                           
  4384                           ;xprintf.c: 32: return;
  4385  07E5  0008               	return
  4386  07E6                     l4558:	
  4387                           
  4388                           ;xprintf.c: 33: }
  4389                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  4390  07E6  086C               	movf	_xfunc_out,w
  4391  07E7  046D               	iorwf	_xfunc_out+1,w
  4392  07E8  1903               	btfsc	3,2
  4393  07E9  0008               	return
  4394  07EA  0825               	movf	xputc@c,w
  4395  07EB  00A4               	movwf	??_xputc
  4396  07EC  0824               	movf	??_xputc,w
  4397  07ED  00A3               	movwf	LCD_Put@word
  4398  07EE  086D               	movf	_xfunc_out+1,w
  4399  07EF  008A               	movwf	10
  4400  07F0  086C               	movf	_xfunc_out,w
  4401  07F1  000A               	callw
  4402  07F2  3187               	pagesel	$
  4403  07F3  0008               	return
  4404  07F4                     __end_of_xputc:	
  4405                           
  4406                           	psect	text5
  4407  0D2B                     __ptext5:	
  4408 ;; *************** function _LCD_Put *****************
  4409 ;; Defined at:
  4410 ;;		line 54 in file "LCD.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  word            1    3[BANK0 ] char 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0, pclath, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4424 ;;      Params:         0       1       0       0       0       0
  4425 ;;      Locals:         0       0       0       0       0       0
  4426 ;;      Temps:          0       0       0       0       0       0
  4427 ;;      Totals:         0       1       0       0       0       0
  4428 ;;Total ram usage:        1 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    4
  4431 ;; This function calls:
  4432 ;;		_LCD_WriteData
  4433 ;; This function is called by:
  4434 ;;		_main
  4435 ;;		_xputc
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           
  4440                           ;psect for function _LCD_Put
  4441  0D2B                     _LCD_Put:	
  4442                           
  4443                           ;LCD.c: 56: LATA3 = 1;
  4444                           
  4445                           ;incstack = 0
  4446                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  4447  0D2B  0022               	movlb	2	; select bank2
  4448  0D2C  158C               	bsf	12,3	;volatile
  4449                           
  4450                           ;LCD.c: 57: LCD_WriteData(word);
  4451  0D2D  0020               	movlb	0	; select bank0
  4452  0D2E  0823               	movf	LCD_Put@word,w
  4453  0D2F  318F  2780         	fcall	_LCD_WriteData
  4454  0D31  0008               	return
  4455  0D32                     __end_of_LCD_Put:	
  4456                           
  4457                           	psect	text6
  4458  0E48                     __ptext6:	
  4459 ;; *************** function ___wmul *****************
  4460 ;; Defined at:
  4461 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4464 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;  product         2    4[BANK0 ] unsigned int 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  2    0[BANK0 ] unsigned int 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4476 ;;      Params:         0       4       0       0       0       0
  4477 ;;      Locals:         0       2       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0
  4479 ;;      Totals:         0       6       0       0       0       0
  4480 ;;Total ram usage:        6 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    3
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_xvprintf
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           
  4491                           ;psect for function ___wmul
  4492  0E48                     ___wmul:	
  4493                           
  4494                           ;incstack = 0
  4495                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4496  0E48  0020               	movlb	0	; select bank0
  4497  0E49  01A4               	clrf	___wmul@product
  4498  0E4A  01A5               	clrf	___wmul@product+1
  4499  0E4B                     l3906:	
  4500  0E4B  1C20               	btfss	___wmul@multiplier,0
  4501  0E4C  2E51               	goto	l926
  4502  0E4D  0822               	movf	___wmul@multiplicand,w
  4503  0E4E  07A4               	addwf	___wmul@product,f
  4504  0E4F  0823               	movf	___wmul@multiplicand+1,w
  4505  0E50  3DA5               	addwfc	___wmul@product+1,f
  4506  0E51                     l926:	
  4507  0E51  3001               	movlw	1
  4508  0E52                     u3775:	
  4509  0E52  35A2               	lslf	___wmul@multiplicand,f
  4510  0E53  0DA3               	rlf	___wmul@multiplicand+1,f
  4511  0E54  0B89               	decfsz	9,f
  4512  0E55  2E52               	goto	u3775
  4513  0E56  3001               	movlw	1
  4514  0E57                     u3785:	
  4515  0E57  36A1               	lsrf	___wmul@multiplier+1,f
  4516  0E58  0CA0               	rrf	___wmul@multiplier,f
  4517  0E59  0B89               	decfsz	9,f
  4518  0E5A  2E57               	goto	u3785
  4519  0E5B  0820               	movf	___wmul@multiplier,w
  4520  0E5C  0421               	iorwf	___wmul@multiplier+1,w
  4521  0E5D  1D03               	btfss	3,2
  4522  0E5E  2E4B               	goto	l3906
  4523  0E5F  0825               	movf	___wmul@product+1,w
  4524  0E60  00A1               	movwf	?___wmul+1
  4525  0E61  0824               	movf	___wmul@product,w
  4526  0E62  00A0               	movwf	?___wmul
  4527  0E63  0008               	return
  4528  0E64                     __end_of___wmul:	
  4529                           
  4530                           	psect	text7
  4531  0FBD                     __ptext7:	
  4532 ;; *************** function ___llmod *****************
  4533 ;; Defined at:
  4534 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  divisor         4    0[BANK0 ] unsigned long 
  4537 ;;  dividend        4    4[BANK0 ] unsigned long 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  counter         1    9[BANK0 ] unsigned char 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  4    0[BANK0 ] unsigned long 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4549 ;;      Params:         0       8       0       0       0       0
  4550 ;;      Locals:         0       1       0       0       0       0
  4551 ;;      Temps:          0       1       0       0       0       0
  4552 ;;      Totals:         0      10       0       0       0       0
  4553 ;;Total ram usage:       10 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    3
  4556 ;; This function calls:
  4557 ;;		Nothing
  4558 ;; This function is called by:
  4559 ;;		_xvprintf
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           
  4564                           ;psect for function ___llmod
  4565  0FBD                     ___llmod:	
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4569  0FBD  0020               	movlb	0	; select bank0
  4570  0FBE  0823               	movf	___llmod@divisor+3,w
  4571  0FBF  0422               	iorwf	___llmod@divisor+2,w
  4572  0FC0  0421               	iorwf	___llmod@divisor+1,w
  4573  0FC1  0420               	iorwf	___llmod@divisor,w
  4574  0FC2  1903               	skipnz
  4575  0FC3  2FF7               	goto	l3958
  4576  0FC4  01A9               	clrf	___llmod@counter
  4577  0FC5  0AA9               	incf	___llmod@counter,f
  4578  0FC6                     l3948:	
  4579  0FC6  1BA3               	btfsc	___llmod@divisor+3,7
  4580  0FC7  2FD4               	goto	l3950
  4581  0FC8  3001               	movlw	1
  4582  0FC9                     u3885:	
  4583  0FC9  35A0               	lslf	___llmod@divisor,f
  4584  0FCA  0DA1               	rlf	___llmod@divisor+1,f
  4585  0FCB  0DA2               	rlf	___llmod@divisor+2,f
  4586  0FCC  0DA3               	rlf	___llmod@divisor+3,f
  4587  0FCD  0B89               	decfsz	9,f
  4588  0FCE  2FC9               	goto	u3885
  4589  0FCF  3001               	movlw	1
  4590  0FD0  00A8               	movwf	??___llmod
  4591  0FD1  0828               	movf	??___llmod,w
  4592  0FD2  07A9               	addwf	___llmod@counter,f
  4593  0FD3  2FC6               	goto	l3948
  4594  0FD4                     l3950:	
  4595  0FD4  0823               	movf	___llmod@divisor+3,w
  4596  0FD5  0227               	subwf	___llmod@dividend+3,w
  4597  0FD6  1D03               	skipz
  4598  0FD7  2FE2               	goto	u3905
  4599  0FD8  0822               	movf	___llmod@divisor+2,w
  4600  0FD9  0226               	subwf	___llmod@dividend+2,w
  4601  0FDA  1D03               	skipz
  4602  0FDB  2FE2               	goto	u3905
  4603  0FDC  0821               	movf	___llmod@divisor+1,w
  4604  0FDD  0225               	subwf	___llmod@dividend+1,w
  4605  0FDE  1D03               	skipz
  4606  0FDF  2FE2               	goto	u3905
  4607  0FE0  0820               	movf	___llmod@divisor,w
  4608  0FE1  0224               	subwf	___llmod@dividend,w
  4609  0FE2                     u3905:	
  4610  0FE2  1C03               	skipc
  4611  0FE3  2FEC               	goto	l3954
  4612  0FE4  0820               	movf	___llmod@divisor,w
  4613  0FE5  02A4               	subwf	___llmod@dividend,f
  4614  0FE6  0821               	movf	___llmod@divisor+1,w
  4615  0FE7  3BA5               	subwfb	___llmod@dividend+1,f
  4616  0FE8  0822               	movf	___llmod@divisor+2,w
  4617  0FE9  3BA6               	subwfb	___llmod@dividend+2,f
  4618  0FEA  0823               	movf	___llmod@divisor+3,w
  4619  0FEB  3BA7               	subwfb	___llmod@dividend+3,f
  4620  0FEC                     l3954:	
  4621  0FEC  3001               	movlw	1
  4622  0FED                     u3915:	
  4623  0FED  36A3               	lsrf	___llmod@divisor+3,f
  4624  0FEE  0CA2               	rrf	___llmod@divisor+2,f
  4625  0FEF  0CA1               	rrf	___llmod@divisor+1,f
  4626  0FF0  0CA0               	rrf	___llmod@divisor,f
  4627  0FF1  0B89               	decfsz	9,f
  4628  0FF2  2FED               	goto	u3915
  4629  0FF3  3001               	movlw	1
  4630  0FF4  02A9               	subwf	___llmod@counter,f
  4631  0FF5  1D03               	btfss	3,2
  4632  0FF6  2FD4               	goto	l3950
  4633  0FF7                     l3958:	
  4634  0FF7  0827               	movf	___llmod@dividend+3,w
  4635  0FF8  00A3               	movwf	?___llmod+3
  4636  0FF9  0826               	movf	___llmod@dividend+2,w
  4637  0FFA  00A2               	movwf	?___llmod+2
  4638  0FFB  0825               	movf	___llmod@dividend+1,w
  4639  0FFC  00A1               	movwf	?___llmod+1
  4640  0FFD  0824               	movf	___llmod@dividend,w
  4641  0FFE  00A0               	movwf	?___llmod
  4642  0FFF  0008               	return
  4643  1000                     __end_of___llmod:	
  4644                           
  4645                           	psect	text8
  4646  06A8                     __ptext8:	
  4647 ;; *************** function ___lldiv *****************
  4648 ;; Defined at:
  4649 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;  divisor         4    0[BANK0 ] unsigned long 
  4652 ;;  dividend        4    4[BANK0 ] unsigned long 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  quotient        4    9[BANK0 ] unsigned long 
  4655 ;;  counter         1   13[BANK0 ] unsigned char 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  4    0[BANK0 ] unsigned long 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4665 ;;      Params:         0       8       0       0       0       0
  4666 ;;      Locals:         0       5       0       0       0       0
  4667 ;;      Temps:          0       1       0       0       0       0
  4668 ;;      Totals:         0      14       0       0       0       0
  4669 ;;Total ram usage:       14 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    3
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_xvprintf
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           
  4680                           ;psect for function ___lldiv
  4681  06A8                     ___lldiv:	
  4682                           
  4683                           ;incstack = 0
  4684                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4685  06A8  3000               	movlw	0
  4686  06A9  0020               	movlb	0	; select bank0
  4687  06AA  00AC               	movwf	___lldiv@quotient+3
  4688  06AB  3000               	movlw	0
  4689  06AC  00AB               	movwf	___lldiv@quotient+2
  4690  06AD  3000               	movlw	0
  4691  06AE  00AA               	movwf	___lldiv@quotient+1
  4692  06AF  3000               	movlw	0
  4693  06B0  00A9               	movwf	___lldiv@quotient
  4694  06B1  0823               	movf	___lldiv@divisor+3,w
  4695  06B2  0422               	iorwf	___lldiv@divisor+2,w
  4696  06B3  0421               	iorwf	___lldiv@divisor+1,w
  4697  06B4  0420               	iorwf	___lldiv@divisor,w
  4698  06B5  1903               	skipnz
  4699  06B6  2EF2               	goto	l3938
  4700  06B7  01AD               	clrf	___lldiv@counter
  4701  06B8  0AAD               	incf	___lldiv@counter,f
  4702  06B9                     l3924:	
  4703  06B9  1BA3               	btfsc	___lldiv@divisor+3,7
  4704  06BA  2EC7               	goto	l3926
  4705  06BB  3001               	movlw	1
  4706  06BC                     u3815:	
  4707  06BC  35A0               	lslf	___lldiv@divisor,f
  4708  06BD  0DA1               	rlf	___lldiv@divisor+1,f
  4709  06BE  0DA2               	rlf	___lldiv@divisor+2,f
  4710  06BF  0DA3               	rlf	___lldiv@divisor+3,f
  4711  06C0  0B89               	decfsz	9,f
  4712  06C1  2EBC               	goto	u3815
  4713  06C2  3001               	movlw	1
  4714  06C3  00A8               	movwf	??___lldiv
  4715  06C4  0828               	movf	??___lldiv,w
  4716  06C5  07AD               	addwf	___lldiv@counter,f
  4717  06C6  2EB9               	goto	l3924
  4718  06C7                     l3926:	
  4719  06C7  3001               	movlw	1
  4720  06C8                     u3835:	
  4721  06C8  35A9               	lslf	___lldiv@quotient,f
  4722  06C9  0DAA               	rlf	___lldiv@quotient+1,f
  4723  06CA  0DAB               	rlf	___lldiv@quotient+2,f
  4724  06CB  0DAC               	rlf	___lldiv@quotient+3,f
  4725  06CC  0B89               	decfsz	9,f
  4726  06CD  2EC8               	goto	u3835
  4727  06CE  0823               	movf	___lldiv@divisor+3,w
  4728  06CF  0227               	subwf	___lldiv@dividend+3,w
  4729  06D0  1D03               	skipz
  4730  06D1  2EDC               	goto	u3845
  4731  06D2  0822               	movf	___lldiv@divisor+2,w
  4732  06D3  0226               	subwf	___lldiv@dividend+2,w
  4733  06D4  1D03               	skipz
  4734  06D5  2EDC               	goto	u3845
  4735  06D6  0821               	movf	___lldiv@divisor+1,w
  4736  06D7  0225               	subwf	___lldiv@dividend+1,w
  4737  06D8  1D03               	skipz
  4738  06D9  2EDC               	goto	u3845
  4739  06DA  0820               	movf	___lldiv@divisor,w
  4740  06DB  0224               	subwf	___lldiv@dividend,w
  4741  06DC                     u3845:	
  4742  06DC  1C03               	skipc
  4743  06DD  2EE7               	goto	l3934
  4744  06DE  0820               	movf	___lldiv@divisor,w
  4745  06DF  02A4               	subwf	___lldiv@dividend,f
  4746  06E0  0821               	movf	___lldiv@divisor+1,w
  4747  06E1  3BA5               	subwfb	___lldiv@dividend+1,f
  4748  06E2  0822               	movf	___lldiv@divisor+2,w
  4749  06E3  3BA6               	subwfb	___lldiv@dividend+2,f
  4750  06E4  0823               	movf	___lldiv@divisor+3,w
  4751  06E5  3BA7               	subwfb	___lldiv@dividend+3,f
  4752  06E6  1429               	bsf	___lldiv@quotient,0
  4753  06E7                     l3934:	
  4754  06E7  3001               	movlw	1
  4755  06E8                     u3855:	
  4756  06E8  36A3               	lsrf	___lldiv@divisor+3,f
  4757  06E9  0CA2               	rrf	___lldiv@divisor+2,f
  4758  06EA  0CA1               	rrf	___lldiv@divisor+1,f
  4759  06EB  0CA0               	rrf	___lldiv@divisor,f
  4760  06EC  0B89               	decfsz	9,f
  4761  06ED  2EE8               	goto	u3855
  4762  06EE  3001               	movlw	1
  4763  06EF  02AD               	subwf	___lldiv@counter,f
  4764  06F0  1D03               	btfss	3,2
  4765  06F1  2EC7               	goto	l3926
  4766  06F2                     l3938:	
  4767  06F2  082C               	movf	___lldiv@quotient+3,w
  4768  06F3  00A3               	movwf	?___lldiv+3
  4769  06F4  082B               	movf	___lldiv@quotient+2,w
  4770  06F5  00A2               	movwf	?___lldiv+2
  4771  06F6  082A               	movf	___lldiv@quotient+1,w
  4772  06F7  00A1               	movwf	?___lldiv+1
  4773  06F8  0829               	movf	___lldiv@quotient,w
  4774  06F9  00A0               	movwf	?___lldiv
  4775  06FA  0008               	return
  4776  06FB                     __end_of___lldiv:	
  4777                           
  4778                           	psect	text9
  4779  06FB                     __ptext9:	
  4780 ;; *************** function _mTouch_Read *****************
  4781 ;; Defined at:
  4782 ;;		line 111 in file "main.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  chan            1    wreg     unsigned char 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;  chan            1    7[BANK0 ] unsigned char 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      unsigned char 
  4789 ;; Registers used:
  4790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4796 ;;      Params:         0       0       0       0       0       0
  4797 ;;      Locals:         0       1       0       0       0       0
  4798 ;;      Temps:          0       5       0       0       0       0
  4799 ;;      Totals:         0       6       0       0       0       0
  4800 ;;Total ram usage:        6 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; Hardware stack levels required when called:    4
  4803 ;; This function calls:
  4804 ;;		_Buzzer_MiliSecond
  4805 ;; This function is called by:
  4806 ;;		_main
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           
  4811                           ;psect for function _mTouch_Read
  4812  06FB                     _mTouch_Read:	
  4813                           
  4814                           ;incstack = 0
  4815                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4816                           ;mTouch_Read@chan stored from wreg
  4817  06FB  0020               	movlb	0	; select bank0
  4818  06FC  00A7               	movwf	mTouch_Read@chan
  4819                           
  4820                           ;main.c: 113: if(chan>2)return 0;
  4821  06FD  3003               	movlw	3
  4822  06FE  0227               	subwf	mTouch_Read@chan,w
  4823  06FF  1C03               	skipc
  4824  0700  2F03               	goto	l4316
  4825  0701  3000               	movlw	0
  4826  0702  0008               	return
  4827  0703                     l4316:	
  4828                           
  4829                           ;main.c: 115: if(((CPS_PreData[chan]-CPS_Data[chan])>50)&&!mTouch_Interval[chan])
  4830  0703  0827               	movf	mTouch_Read@chan,w
  4831  0704  3EA0               	addlw	(low (_CPS_Data| 0))& (0+255)
  4832  0705  0086               	movwf	6
  4833  0706  0187               	clrf	7
  4834  0707  0801               	movf	1,w
  4835  0708  00A2               	movwf	??_mTouch_Read
  4836  0709  01A3               	clrf	??_mTouch_Read+1
  4837  070A  09A2               	comf	??_mTouch_Read,f
  4838  070B  09A3               	comf	??_mTouch_Read+1,f
  4839  070C  0AA2               	incf	??_mTouch_Read,f
  4840  070D  1903               	skipnz
  4841  070E  0AA3               	incf	??_mTouch_Read+1,f
  4842  070F  0827               	movf	mTouch_Read@chan,w
  4843  0710  3EA3               	addlw	(low (_CPS_PreData| 0))& (0+255)
  4844  0711  0086               	movwf	6
  4845  0712  0187               	clrf	7
  4846  0713  0801               	movf	1,w
  4847  0714  0722               	addwf	??_mTouch_Read,w
  4848  0715  00A4               	movwf	??_mTouch_Read+2
  4849  0716  0823               	movf	??_mTouch_Read+1,w
  4850  0717  1803               	skipnc
  4851  0718  0A23               	incf	??_mTouch_Read+1,w
  4852  0719  00A5               	movwf	??_mTouch_Read+3
  4853  071A  0825               	movf	??_mTouch_Read+3,w
  4854  071B  3A80               	xorlw	128
  4855  071C  00A6               	movwf	??_mTouch_Read+4
  4856  071D  3080               	movlw	128
  4857  071E  0226               	subwf	??_mTouch_Read+4,w
  4858  071F  1D03               	skipz
  4859  0720  2F23               	goto	u4235
  4860  0721  3033               	movlw	51
  4861  0722  0224               	subwf	??_mTouch_Read+2,w
  4862  0723                     u4235:	
  4863  0723  1C03               	skipc
  4864  0724  2F3D               	goto	l4328
  4865  0725  0020               	movlb	0	; select bank0
  4866  0726  0827               	movf	mTouch_Read@chan,w
  4867  0727  3E67               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4868  0728  0086               	movwf	6
  4869  0729  0187               	clrf	7
  4870  072A  0801               	movf	1,w
  4871  072B  1D03               	btfss	3,2
  4872  072C  2F3D               	goto	l4328
  4873                           
  4874                           ;main.c: 116: {
  4875                           ;main.c: 117: mTouch_Interval[chan] = 100;
  4876  072D  3064               	movlw	100
  4877  072E  00A2               	movwf	??_mTouch_Read
  4878  072F  0827               	movf	mTouch_Read@chan,w
  4879  0730  3E67               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4880  0731  0086               	movwf	6
  4881  0732  0187               	clrf	7
  4882  0733  0822               	movf	??_mTouch_Read,w
  4883  0734  0081               	movwf	1
  4884                           
  4885                           ;main.c: 118: Buzzer_MiliSecond(100);
  4886  0735  3064               	movlw	100
  4887  0736  00A0               	movwf	Buzzer_MiliSecond@time
  4888  0737  3000               	movlw	0
  4889  0738  00A1               	movwf	Buzzer_MiliSecond@time+1
  4890  0739  318D  253B         	fcall	_Buzzer_MiliSecond
  4891                           
  4892                           ;main.c: 119: return 1;
  4893  073B  3001               	movlw	1
  4894  073C  0008               	return
  4895  073D                     l4328:	
  4896                           
  4897                           ;main.c: 120: }
  4898                           ;main.c: 121: return 0;
  4899  073D  3000               	movlw	0
  4900  073E  0008               	return
  4901  073F                     __end_of_mTouch_Read:	
  4902                           
  4903                           	psect	text10
  4904  0D3B                     __ptext10:	
  4905 ;; *************** function _Buzzer_MiliSecond *****************
  4906 ;; Defined at:
  4907 ;;		line 38 in file "Buzzer.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  time            2    0[BANK0 ] unsigned int 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		wreg, status,2, status,0
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4921 ;;      Params:         0       2       0       0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0
  4924 ;;      Totals:         0       2       0       0       0       0
  4925 ;;Total ram usage:        2 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    3
  4928 ;; This function calls:
  4929 ;;		Nothing
  4930 ;; This function is called by:
  4931 ;;		_mTouch_Read
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           
  4936                           ;psect for function _Buzzer_MiliSecond
  4937  0D3B                     _Buzzer_MiliSecond:	
  4938                           
  4939                           ;Buzzer.c: 40: if(count==0)
  4940                           
  4941                           ;incstack = 0
  4942                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  4943  0D3B  0878               	movf	_count,w
  4944  0D3C  0479               	iorwf	_count+1,w
  4945  0D3D  1D03               	btfss	3,2
  4946  0D3E  0008               	return
  4947                           
  4948                           ;Buzzer.c: 41: count = time;
  4949  0D3F  0020               	movlb	0	; select bank0
  4950  0D40  0821               	movf	Buzzer_MiliSecond@time+1,w
  4951  0D41  00F9               	movwf	_count+1
  4952  0D42  0820               	movf	Buzzer_MiliSecond@time,w
  4953  0D43  00F8               	movwf	_count
  4954  0D44  0008               	return
  4955  0D45                     __end_of_Buzzer_MiliSecond:	
  4956                           
  4957                           	psect	text11
  4958  0DC0                     __ptext11:	
  4959 ;; *************** function _mTouch_Init *****************
  4960 ;; Defined at:
  4961 ;;		line 12 in file "mTouch.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg, status,2, status,0, pclath, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4975 ;;      Params:         0       0       0       0       0       0
  4976 ;;      Locals:         0       0       0       0       0       0
  4977 ;;      Temps:          0       1       0       0       0       0
  4978 ;;      Totals:         0       1       0       0       0       0
  4979 ;;Total ram usage:        1 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; Hardware stack levels required when called:    4
  4982 ;; This function calls:
  4983 ;;		_mTouch_PortInit
  4984 ;; This function is called by:
  4985 ;;		_main
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           
  4990                           ;psect for function _mTouch_Init
  4991  0DC0                     _mTouch_Init:	
  4992                           
  4993                           ;mTouch.c: 14: mTouch_PortInit();
  4994                           
  4995                           ;incstack = 0
  4996                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4997  0DC0  318D  255F         	fcall	_mTouch_PortInit
  4998                           
  4999                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  5000  0DC2  0021               	movlb	1	; select bank1
  5001  0DC3  0815               	movf	21,w	;volatile
  5002                           
  5003                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  5004  0DC4  1595               	bsf	21,3	;volatile
  5005                           
  5006                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  5007  0DC5  1695               	bsf	21,5	;volatile
  5008                           
  5009                           ;mTouch.c: 20: TMR0 = 0x00;
  5010  0DC6  0020               	movlb	0	; select bank0
  5011  0DC7  0195               	clrf	21	;volatile
  5012                           
  5013                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  5014  0DC8  141E               	bsf	30,0	;volatile
  5015                           
  5016                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  5017  0DC9  300C               	movlw	12
  5018  0DCA  00A1               	movwf	??_mTouch_Init
  5019  0DCB  0821               	movf	??_mTouch_Init,w
  5020  0DCC  049E               	iorwf	30,f	;volatile
  5021                           
  5022                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  5023  0DCD  307F               	movlw	127
  5024  0DCE  00A1               	movwf	??_mTouch_Init
  5025  0DCF  0821               	movf	??_mTouch_Init,w
  5026  0DD0  059E               	andwf	30,f	;volatile
  5027                           
  5028                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  5029  0DD1  019F               	clrf	31	;volatile
  5030  0DD2  0008               	return
  5031  0DD3                     __end_of_mTouch_Init:	
  5032                           
  5033                           	psect	text12
  5034  0D5F                     __ptext12:	
  5035 ;; *************** function _mTouch_PortInit *****************
  5036 ;; Defined at:
  5037 ;;		line 6 in file "mTouch.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		wreg, status,2, status,0
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5051 ;;      Params:         0       0       0       0       0       0
  5052 ;;      Locals:         0       0       0       0       0       0
  5053 ;;      Temps:          0       1       0       0       0       0
  5054 ;;      Totals:         0       1       0       0       0       0
  5055 ;;Total ram usage:        1 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    3
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_mTouch_Init
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           
  5066                           ;psect for function _mTouch_PortInit
  5067  0D5F                     _mTouch_PortInit:	
  5068                           
  5069                           ;mTouch.c: 8: TRISA |= (0x07);
  5070                           
  5071                           ;incstack = 0
  5072                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  5073  0D5F  3007               	movlw	7
  5074  0D60  0020               	movlb	0	; select bank0
  5075  0D61  00A0               	movwf	??_mTouch_PortInit
  5076  0D62  0820               	movf	??_mTouch_PortInit,w
  5077  0D63  0021               	movlb	1	; select bank1
  5078  0D64  048C               	iorwf	12,f	;volatile
  5079                           
  5080                           ;mTouch.c: 9: ANSELA |= (0x07);
  5081  0D65  3007               	movlw	7
  5082  0D66  0020               	movlb	0	; select bank0
  5083  0D67  00A0               	movwf	??_mTouch_PortInit
  5084  0D68  0820               	movf	??_mTouch_PortInit,w
  5085  0D69  0023               	movlb	3	; select bank3
  5086  0D6A  048C               	iorwf	12,f	;volatile
  5087  0D6B  0008               	return
  5088  0D6C                     __end_of_mTouch_PortInit:	
  5089                           
  5090                           	psect	text13
  5091  0DAD                     __ptext13:	
  5092 ;; *************** function _Timer4_Init *****************
  5093 ;; Defined at:
  5094 ;;		line 3 in file "Timer4.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5108 ;;      Params:         0       0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0
  5110 ;;      Temps:          0       1       0       0       0       0
  5111 ;;      Totals:         0       1       0       0       0       0
  5112 ;;Total ram usage:        1 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    3
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_main
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           
  5123                           ;psect for function _Timer4_Init
  5124  0DAD                     _Timer4_Init:	
  5125                           
  5126                           ;Timer4.c: 5: PR4 = 0x7D;
  5127                           
  5128                           ;incstack = 0
  5129                           ; Regs used in _Timer4_Init: [wreg+status,2+status,0]
  5130  0DAD  307D               	movlw	125
  5131  0DAE  0028               	movlb	8	; select bank8
  5132  0DAF  0096               	movwf	22	;volatile
  5133                           
  5134                           ;Timer4.c: 6: TMR4 = 0x00;
  5135  0DB0  0195               	clrf	21	;volatile
  5136                           
  5137                           ;Timer4.c: 7: T4CON |= (0x03<<0);
  5138  0DB1  3003               	movlw	3
  5139  0DB2  0020               	movlb	0	; select bank0
  5140  0DB3  00A0               	movwf	??_Timer4_Init
  5141  0DB4  0820               	movf	??_Timer4_Init,w
  5142  0DB5  0028               	movlb	8	; select bank8
  5143  0DB6  0497               	iorwf	23,f	;volatile
  5144                           
  5145                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  5146  0DB7  0817               	movf	23,w	;volatile
  5147                           
  5148                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  5149  0DB8  1517               	bsf	23,2	;volatile
  5150                           
  5151                           ;Timer4.c: 11: TMR4IF = 0;
  5152  0DB9  0020               	movlb	0	; select bank0
  5153  0DBA  1093               	bcf	19,1	;volatile
  5154                           
  5155                           ;Timer4.c: 12: TMR4IE = 1;
  5156  0DBB  0021               	movlb	1	; select bank1
  5157  0DBC  1493               	bsf	19,1	;volatile
  5158                           
  5159                           ;Timer4.c: 13: PEIE = 1;
  5160  0DBD  170B               	bsf	11,6	;volatile
  5161                           
  5162                           ;Timer4.c: 14: GIE = 1;
  5163  0DBE  178B               	bsf	11,7	;volatile
  5164  0DBF  0008               	return
  5165  0DC0                     __end_of_Timer4_Init:	
  5166                           
  5167                           	psect	text14
  5168  0E12                     __ptext14:	
  5169 ;; *************** function _Timer1_Init *****************
  5170 ;; Defined at:
  5171 ;;		line 3 in file "Timer1.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;		None
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;		None
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5185 ;;      Params:         0       0       0       0       0       0
  5186 ;;      Locals:         0       0       0       0       0       0
  5187 ;;      Temps:          0       1       0       0       0       0
  5188 ;;      Totals:         0       1       0       0       0       0
  5189 ;;Total ram usage:        1 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    3
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_main
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           
  5200                           ;psect for function _Timer1_Init
  5201  0E12                     _Timer1_Init:	
  5202                           
  5203                           ;Timer1.c: 5: TRISB |= (1<<6);
  5204                           
  5205                           ;incstack = 0
  5206                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  5207  0E12  0021               	movlb	1	; select bank1
  5208  0E13  170D               	bsf	13,6	;volatile
  5209                           
  5210                           ;Timer1.c: 6: ANSELB &= ~(1<<6);
  5211  0E14  30BF               	movlw	191
  5212  0E15  0020               	movlb	0	; select bank0
  5213  0E16  00A0               	movwf	??_Timer1_Init
  5214  0E17  0820               	movf	??_Timer1_Init,w
  5215  0E18  0023               	movlb	3	; select bank3
  5216  0E19  058D               	andwf	13,f	;volatile
  5217                           
  5218                           ;Timer1.c: 8: T1CON |= (0x01<<2);
  5219  0E1A  0020               	movlb	0	; select bank0
  5220  0E1B  1518               	bsf	24,2	;volatile
  5221                           
  5222                           ;Timer1.c: 9: T1CON &= ~(0x01<<3);
  5223  0E1C  30F7               	movlw	247
  5224  0E1D  00A0               	movwf	??_Timer1_Init
  5225  0E1E  0820               	movf	??_Timer1_Init,w
  5226  0E1F  0598               	andwf	24,f	;volatile
  5227                           
  5228                           ;Timer1.c: 10: T1CON |= (0x00<<4);
  5229  0E20  0818               	movf	24,w	;volatile
  5230                           
  5231                           ;Timer1.c: 11: T1CON |= (0x02<<6);
  5232  0E21  1798               	bsf	24,7	;volatile
  5233                           
  5234                           ;Timer1.c: 13: T1GCON = 0x00;
  5235  0E22  0199               	clrf	25	;volatile
  5236                           
  5237                           ;Timer1.c: 15: TMR1 = 0x0000;
  5238  0E23  0196               	clrf	22	;volatile
  5239  0E24  0197               	clrf	23	;volatile
  5240                           
  5241                           ;Timer1.c: 17: TMR1IE = 1;
  5242  0E25  0021               	movlb	1	; select bank1
  5243  0E26  1411               	bsf	17,0	;volatile
  5244                           
  5245                           ;Timer1.c: 18: TMR1IF = 0;
  5246  0E27  0020               	movlb	0	; select bank0
  5247  0E28  1011               	bcf	17,0	;volatile
  5248                           
  5249                           ;Timer1.c: 19: PEIE = 1;
  5250  0E29  170B               	bsf	11,6	;volatile
  5251                           
  5252                           ;Timer1.c: 20: GIE = 1;
  5253  0E2A  178B               	bsf	11,7	;volatile
  5254  0E2B  0008               	return
  5255  0E2C                     __end_of_Timer1_Init:	
  5256                           
  5257                           	psect	text15
  5258  0591                     __ptext15:	
  5259 ;; *************** function _LCD_Init *****************
  5260 ;; Defined at:
  5261 ;;		line 28 in file "LCD.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;		None
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;		None
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  1    wreg      void 
  5268 ;; Registers used:
  5269 ;;		wreg, status,2, status,0, pclath, cstack
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5275 ;;      Params:         0       0       0       0       0       0
  5276 ;;      Locals:         0       0       0       0       0       0
  5277 ;;      Temps:          0       2       0       0       0       0
  5278 ;;      Totals:         0       2       0       0       0       0
  5279 ;;Total ram usage:        2 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    5
  5282 ;; This function calls:
  5283 ;;		_LCD_DisplayClear
  5284 ;;		_LCD_WriteData
  5285 ;; This function is called by:
  5286 ;;		_main
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function _LCD_Init
  5292  0591                     _LCD_Init:	
  5293                           
  5294                           ;LCD.c: 30: LATA3 = 0;
  5295                           
  5296                           ;incstack = 0
  5297                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5298  0591  0022               	movlb	2	; select bank2
  5299  0592  118C               	bcf	12,3	;volatile
  5300                           
  5301                           ;LCD.c: 31: LATA4 = 0;
  5302  0593  120C               	bcf	12,4	;volatile
  5303                           
  5304                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  5305  0594  3002               	movlw	2
  5306  0595  0020               	movlb	0	; select bank0
  5307  0596  00A5               	movwf	??_LCD_Init+1
  5308  0597  3038               	movlw	56
  5309  0598  00A4               	movwf	??_LCD_Init
  5310  0599  30AD               	movlw	173
  5311  059A                     u4987:	
  5312  059A  0B89               	decfsz	9,f
  5313  059B  2D9A               	goto	u4987
  5314  059C  0BA4               	decfsz	??_LCD_Init,f
  5315  059D  2D9A               	goto	u4987
  5316  059E  0BA5               	decfsz	??_LCD_Init+1,f
  5317  059F  2D9A               	goto	u4987
  5318                           
  5319                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  5320  05A0  3003               	movlw	3
  5321  05A1  0020               	movlb	0	; select bank0
  5322  05A2  008D               	movwf	13	;volatile
  5323                           
  5324                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5325  05A3  0022               	movlb	2	; select bank2
  5326  05A4  160C               	bsf	12,4	;volatile
  5327  05A5  3200               	nop2	;2 cycle nop
  5328  05A6  3200               	nop2	;2 cycle nop
  5329  05A7  3200               	nop2	;2 cycle nop
  5330  05A8  3200               	nop2	;2 cycle nop
  5331  05A9  0022               	movlb	2	; select bank2
  5332  05AA  120C               	bcf	12,4	;volatile
  5333  05AB  3200               	nop2	;2 cycle nop
  5334  05AC  3200               	nop2	;2 cycle nop
  5335  05AD  3200               	nop2	;2 cycle nop
  5336  05AE  3200               	nop2	;2 cycle nop
  5337                           
  5338                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  5339  05AF  3034               	movlw	52
  5340  05B0  0020               	movlb	0	; select bank0
  5341  05B1  00A4               	movwf	??_LCD_Init
  5342  05B2  30F1               	movlw	241
  5343  05B3                     u4997:	
  5344  05B3  0B89               	decfsz	9,f
  5345  05B4  2DB3               	goto	u4997
  5346  05B5  0BA4               	decfsz	??_LCD_Init,f
  5347  05B6  2DB3               	goto	u4997
  5348  05B7  3200               	nop2
  5349                           
  5350                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5351  05B8  0022               	movlb	2	; select bank2
  5352  05B9  160C               	bsf	12,4	;volatile
  5353  05BA  3200               	nop2	;2 cycle nop
  5354  05BB  3200               	nop2	;2 cycle nop
  5355  05BC  3200               	nop2	;2 cycle nop
  5356  05BD  3200               	nop2	;2 cycle nop
  5357  05BE  0022               	movlb	2	; select bank2
  5358  05BF  120C               	bcf	12,4	;volatile
  5359  05C0  3200               	nop2	;2 cycle nop
  5360  05C1  3200               	nop2	;2 cycle nop
  5361  05C2  3200               	nop2	;2 cycle nop
  5362  05C3  3200               	nop2	;2 cycle nop
  5363                           
  5364                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5365  05C4  3005               	movlw	5
  5366  05C5  0020               	movlb	0	; select bank0
  5367  05C6  00A4               	movwf	??_LCD_Init
  5368  05C7  3026               	movlw	38
  5369  05C8                     u5007:	
  5370  05C8  0B89               	decfsz	9,f
  5371  05C9  2DC8               	goto	u5007
  5372  05CA  0BA4               	decfsz	??_LCD_Init,f
  5373  05CB  2DC8               	goto	u5007
  5374  05CC  0000               	nop
  5375                           
  5376                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5377  05CD  0022               	movlb	2	; select bank2
  5378  05CE  160C               	bsf	12,4	;volatile
  5379  05CF  3200               	nop2	;2 cycle nop
  5380  05D0  3200               	nop2	;2 cycle nop
  5381  05D1  3200               	nop2	;2 cycle nop
  5382  05D2  3200               	nop2	;2 cycle nop
  5383  05D3  0022               	movlb	2	; select bank2
  5384  05D4  120C               	bcf	12,4	;volatile
  5385  05D5  3200               	nop2	;2 cycle nop
  5386  05D6  3200               	nop2	;2 cycle nop
  5387  05D7  3200               	nop2	;2 cycle nop
  5388  05D8  3200               	nop2	;2 cycle nop
  5389                           
  5390                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5391  05D9  3005               	movlw	5
  5392  05DA  0020               	movlb	0	; select bank0
  5393  05DB  00A4               	movwf	??_LCD_Init
  5394  05DC  3026               	movlw	38
  5395  05DD                     u5017:	
  5396  05DD  0B89               	decfsz	9,f
  5397  05DE  2DDD               	goto	u5017
  5398  05DF  0BA4               	decfsz	??_LCD_Init,f
  5399  05E0  2DDD               	goto	u5017
  5400  05E1  0000               	nop
  5401                           
  5402                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  5403  05E2  3002               	movlw	2
  5404  05E3  0020               	movlb	0	; select bank0
  5405  05E4  008D               	movwf	13	;volatile
  5406                           
  5407                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5408  05E5  0022               	movlb	2	; select bank2
  5409  05E6  160C               	bsf	12,4	;volatile
  5410  05E7  3200               	nop2	;2 cycle nop
  5411  05E8  3200               	nop2	;2 cycle nop
  5412  05E9  3200               	nop2	;2 cycle nop
  5413  05EA  3200               	nop2	;2 cycle nop
  5414  05EB  0022               	movlb	2	; select bank2
  5415  05EC  120C               	bcf	12,4	;volatile
  5416  05ED  3200               	nop2	;2 cycle nop
  5417  05EE  3200               	nop2	;2 cycle nop
  5418  05EF  3200               	nop2	;2 cycle nop
  5419  05F0  3200               	nop2	;2 cycle nop
  5420                           
  5421                           ;LCD.c: 44: LCD_WriteData(0x28);
  5422  05F1  3028               	movlw	40
  5423  05F2  318F  2780  3185   	fcall	_LCD_WriteData
  5424                           
  5425                           ;LCD.c: 45: LCD_WriteData(0x0c);
  5426  05F5  300C               	movlw	12
  5427  05F6  318F  2780  3185   	fcall	_LCD_WriteData
  5428                           
  5429                           ;LCD.c: 46: LCD_DisplayClear();
  5430  05F9  318D  257C  3185   	fcall	_LCD_DisplayClear
  5431                           
  5432                           ;LCD.c: 47: LCD_WriteData(0x06);
  5433  05FC  3006               	movlw	6
  5434  05FD  318F  2780         	fcall	_LCD_WriteData
  5435  05FF  0008               	return
  5436  0600                     __end_of_LCD_Init:	
  5437                           
  5438                           	psect	text16
  5439  0D7C                     __ptext16:	
  5440 ;; *************** function _LCD_DisplayClear *****************
  5441 ;; Defined at:
  5442 ;;		line 64 in file "LCD.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;		None
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;		None
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  1    wreg      void 
  5449 ;; Registers used:
  5450 ;;		wreg, status,2, status,0, pclath, cstack
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5456 ;;      Params:         0       0       0       0       0       0
  5457 ;;      Locals:         0       0       0       0       0       0
  5458 ;;      Temps:          0       1       0       0       0       0
  5459 ;;      Totals:         0       1       0       0       0       0
  5460 ;;Total ram usage:        1 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:    4
  5463 ;; This function calls:
  5464 ;;		_LCD_WriteData
  5465 ;; This function is called by:
  5466 ;;		_LCD_Init
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           
  5471                           ;psect for function _LCD_DisplayClear
  5472  0D7C                     _LCD_DisplayClear:	
  5473                           
  5474                           ;LCD.c: 66: LATA3 = 0;
  5475                           
  5476                           ;incstack = 0
  5477                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  5478  0D7C  0022               	movlb	2	; select bank2
  5479  0D7D  118C               	bcf	12,3	;volatile
  5480                           
  5481                           ;LCD.c: 67: LCD_WriteData(0x01);
  5482  0D7E  3001               	movlw	1
  5483  0D7F  318F  2780  318D   	fcall	_LCD_WriteData
  5484                           
  5485                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  5486  0D82  3015               	movlw	21
  5487  0D83  0020               	movlb	0	; select bank0
  5488  0D84  00A3               	movwf	??_LCD_DisplayClear
  5489  0D85  30C6               	movlw	198
  5490  0D86                     u5027:	
  5491  0D86  0B89               	decfsz	9,f
  5492  0D87  2D86               	goto	u5027
  5493  0D88  0BA3               	decfsz	??_LCD_DisplayClear,f
  5494  0D89  2D86               	goto	u5027
  5495  0D8A  0000               	nop
  5496  0D8B  0008               	return
  5497  0D8C                     __end_of_LCD_DisplayClear:	
  5498                           
  5499                           	psect	text17
  5500  0D6C                     __ptext17:	
  5501 ;; *************** function _LCD_CursorHome *****************
  5502 ;; Defined at:
  5503 ;;		line 75 in file "LCD.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      void 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0, pclath, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5517 ;;      Params:         0       0       0       0       0       0
  5518 ;;      Locals:         0       0       0       0       0       0
  5519 ;;      Temps:          0       1       0       0       0       0
  5520 ;;      Totals:         0       1       0       0       0       0
  5521 ;;Total ram usage:        1 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    4
  5524 ;; This function calls:
  5525 ;;		_LCD_WriteData
  5526 ;; This function is called by:
  5527 ;;		_main
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           
  5532                           ;psect for function _LCD_CursorHome
  5533  0D6C                     _LCD_CursorHome:	
  5534                           
  5535                           ;LCD.c: 77: LATA3 = 0;
  5536                           
  5537                           ;incstack = 0
  5538                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  5539  0D6C  0022               	movlb	2	; select bank2
  5540  0D6D  118C               	bcf	12,3	;volatile
  5541                           
  5542                           ;LCD.c: 78: LCD_WriteData(0x02);
  5543  0D6E  3002               	movlw	2
  5544  0D6F  318F  2780  318D   	fcall	_LCD_WriteData
  5545                           
  5546                           ;LCD.c: 79: _delay((unsigned long)((2)*(32000000/4000.0)));
  5547  0D72  3015               	movlw	21
  5548  0D73  0020               	movlb	0	; select bank0
  5549  0D74  00A3               	movwf	??_LCD_CursorHome
  5550  0D75  30C6               	movlw	198
  5551  0D76                     u5037:	
  5552  0D76  0B89               	decfsz	9,f
  5553  0D77  2D76               	goto	u5037
  5554  0D78  0BA3               	decfsz	??_LCD_CursorHome,f
  5555  0D79  2D76               	goto	u5037
  5556  0D7A  0000               	nop
  5557  0D7B  0008               	return
  5558  0D7C                     __end_of_LCD_CursorHome:	
  5559                           
  5560                           	psect	text18
  5561  0F80                     __ptext18:	
  5562 ;; *************** function _LCD_WriteData *****************
  5563 ;; Defined at:
  5564 ;;		line 15 in file "LCD.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  point           1    wreg     char 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  point           1    2[BANK0 ] char 
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      void 
  5571 ;; Registers used:
  5572 ;;		wreg, status,2, status,0
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5578 ;;      Params:         0       0       0       0       0       0
  5579 ;;      Locals:         0       1       0       0       0       0
  5580 ;;      Temps:          0       2       0       0       0       0
  5581 ;;      Totals:         0       3       0       0       0       0
  5582 ;;Total ram usage:        3 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; Hardware stack levels required when called:    3
  5585 ;; This function calls:
  5586 ;;		Nothing
  5587 ;; This function is called by:
  5588 ;;		_LCD_Init
  5589 ;;		_LCD_Put
  5590 ;;		_LCD_DisplayClear
  5591 ;;		_LCD_CursorHome
  5592 ;;		_LCD_CursorPosition
  5593 ;;		_LCD_CursorShift
  5594 ;;		_LCD_DispShift
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           
  5599                           ;psect for function _LCD_WriteData
  5600  0F80                     _LCD_WriteData:	
  5601                           
  5602                           ;incstack = 0
  5603                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  5604                           ;LCD_WriteData@point stored from wreg
  5605  0F80  0020               	movlb	0	; select bank0
  5606  0F81  00A2               	movwf	LCD_WriteData@point
  5607                           
  5608                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  5609  0F82  30D5               	movlw	213
  5610  0F83                     u5047:	
  5611  0F83  0B89               	decfsz	9,f
  5612  0F84  2F83               	goto	u5047
  5613  0F85  0000               	nop
  5614                           
  5615                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  5616  0F86  0020               	movlb	0	; select bank0
  5617  0F87  0822               	movf	LCD_WriteData@point,w
  5618  0F88  00A0               	movwf	??_LCD_WriteData
  5619  0F89  3004               	movlw	4
  5620  0F8A                     u3435:	
  5621  0F8A  1003               	clrc
  5622  0F8B  1BA0               	btfsc	??_LCD_WriteData,7
  5623  0F8C  1403               	setc
  5624  0F8D  0CA0               	rrf	??_LCD_WriteData,f
  5625  0F8E  0B89               	decfsz	9,f
  5626  0F8F  2F8A               	goto	u3435
  5627  0F90  3003               	movlw	3
  5628  0F91  0520               	andwf	??_LCD_WriteData,w
  5629  0F92  00A1               	movwf	??_LCD_WriteData+1
  5630  0F93  0E22               	swapf	LCD_WriteData@point,w
  5631  0F94  390F               	andlw	15
  5632  0F95  1989               	btfsc	9,3
  5633  0F96  38F0               	iorlw	240
  5634  0F97  390C               	andlw	12
  5635  0F98  0709               	addwf	9,w
  5636  0F99  0421               	iorwf	??_LCD_WriteData+1,w
  5637  0F9A  008D               	movwf	13	;volatile
  5638                           
  5639                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5640  0F9B  0022               	movlb	2	; select bank2
  5641  0F9C  160C               	bsf	12,4	;volatile
  5642  0F9D  3200               	nop2	;2 cycle nop
  5643  0F9E  3200               	nop2	;2 cycle nop
  5644  0F9F  3200               	nop2	;2 cycle nop
  5645  0FA0  3200               	nop2	;2 cycle nop
  5646  0FA1  0022               	movlb	2	; select bank2
  5647  0FA2  120C               	bcf	12,4	;volatile
  5648  0FA3  3200               	nop2	;2 cycle nop
  5649  0FA4  3200               	nop2	;2 cycle nop
  5650  0FA5  3200               	nop2	;2 cycle nop
  5651  0FA6  3200               	nop2	;2 cycle nop
  5652                           
  5653                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  5654  0FA7  3003               	movlw	3
  5655  0FA8  0020               	movlb	0	; select bank0
  5656  0FA9  0522               	andwf	LCD_WriteData@point,w
  5657  0FAA  00A0               	movwf	??_LCD_WriteData
  5658  0FAB  0822               	movf	LCD_WriteData@point,w
  5659  0FAC  390C               	andlw	12
  5660  0FAD  0709               	addwf	9,w
  5661  0FAE  0420               	iorwf	??_LCD_WriteData,w
  5662  0FAF  008D               	movwf	13	;volatile
  5663                           
  5664                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5665  0FB0  0022               	movlb	2	; select bank2
  5666  0FB1  160C               	bsf	12,4	;volatile
  5667  0FB2  3200               	nop2	;2 cycle nop
  5668  0FB3  3200               	nop2	;2 cycle nop
  5669  0FB4  3200               	nop2	;2 cycle nop
  5670  0FB5  3200               	nop2	;2 cycle nop
  5671  0FB6  0022               	movlb	2	; select bank2
  5672  0FB7  120C               	bcf	12,4	;volatile
  5673  0FB8  3200               	nop2	;2 cycle nop
  5674  0FB9  3200               	nop2	;2 cycle nop
  5675  0FBA  3200               	nop2	;2 cycle nop
  5676  0FBB  3200               	nop2	;2 cycle nop
  5677  0FBC  0008               	return
  5678  0FBD                     __end_of_LCD_WriteData:	
  5679                           
  5680                           	psect	text19
  5681  0E82                     __ptext19:	
  5682 ;; *************** function _DAC_Initialize *****************
  5683 ;; Defined at:
  5684 ;;		line 14 in file "MCP4726.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;		None
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;		None
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  1    wreg      void 
  5691 ;; Registers used:
  5692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5698 ;;      Params:         0       0       0       0       0       0
  5699 ;;      Locals:         0       0       0       0       0       0
  5700 ;;      Temps:          0       2       0       0       0       0
  5701 ;;      Totals:         0       2       0       0       0       0
  5702 ;;Total ram usage:        2 bytes
  5703 ;; Hardware stack levels used:    1
  5704 ;; Hardware stack levels required when called:    6
  5705 ;; This function calls:
  5706 ;;		_I2C_Init
  5707 ;;		_I2C_Transmit
  5708 ;; This function is called by:
  5709 ;;		_main
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           
  5714                           ;psect for function _DAC_Initialize
  5715  0E82                     _DAC_Initialize:	
  5716                           
  5717                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  5718                           
  5719                           ;incstack = 0
  5720                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5721  0E82  0020               	movlb	0	; select bank0
  5722  0E83  01A5               	clrf	I2C_Init@address
  5723  0E84  01A6               	clrf	I2C_Init@mode
  5724  0E85  01A7               	clrf	I2C_Init@Speed
  5725  0E86  3001               	movlw	1
  5726  0E87  318E  26EF  318E   	fcall	_I2C_Init
  5727                           
  5728                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  5729  0E8A  0020               	movlb	0	; select bank0
  5730  0E8B  086F               	movf	_ConfigReg,w
  5731  0E8C  391F               	andlw	-225
  5732  0E8D  3880               	iorlw	128
  5733  0E8E  00EF               	movwf	_ConfigReg
  5734                           
  5735                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  5736  0E8F  106F               	bcf	_ConfigReg,0
  5737                           
  5738                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  5739  0E90  30F9               	movlw	-7
  5740  0E91  05EF               	andwf	_ConfigReg,f
  5741                           
  5742                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  5743  0E92  30E7               	movlw	-25
  5744  0E93  05EF               	andwf	_ConfigReg,f
  5745                           
  5746                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  5747  0E94  3060               	movlw	96
  5748  0E95  00B0               	movwf	??_DAC_Initialize
  5749  0E96  0830               	movf	??_DAC_Initialize,w
  5750  0E97  00A8               	movwf	I2C_Transmit@address
  5751  0E98  306F               	movlw	(low (_ConfigReg| 0))& (0+255)
  5752  0E99  00B1               	movwf	??_DAC_Initialize+1
  5753  0E9A  0831               	movf	??_DAC_Initialize+1,w
  5754  0E9B  00A9               	movwf	I2C_Transmit@pData
  5755  0E9C  01AA               	clrf	I2C_Transmit@size
  5756  0E9D  0AAA               	incf	I2C_Transmit@size,f
  5757  0E9E  3001               	movlw	1
  5758  0E9F  318F  2719         	fcall	_I2C_Transmit
  5759  0EA1  0008               	return
  5760  0EA2                     __end_of_DAC_Initialize:	
  5761                           
  5762                           	psect	text20
  5763  0F19                     __ptext20:	
  5764 ;; *************** function _I2C_Transmit *****************
  5765 ;; Defined at:
  5766 ;;		line 23 in file "I2C_Common.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  I2Cx            1    wreg     enum E3075
  5769 ;;  address         1    8[BANK0 ] unsigned char 
  5770 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  5771 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5772 ;;  size            1   10[BANK0 ] unsigned char 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  I2Cx            1   14[BANK0 ] enum E3075
  5775 ;;  result          1   15[BANK0 ] char 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      char 
  5778 ;; Registers used:
  5779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5785 ;;      Params:         0       3       0       0       0       0
  5786 ;;      Locals:         0       2       0       0       0       0
  5787 ;;      Temps:          0       3       0       0       0       0
  5788 ;;      Totals:         0       8       0       0       0       0
  5789 ;;Total ram usage:        8 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    4
  5792 ;; This function calls:
  5793 ;;		_I2C1_Transmit
  5794 ;;		_I2C2_Transmit
  5795 ;; This function is called by:
  5796 ;;		_DAC_Initialize
  5797 ;;		_DAC_WriteVoltage
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           
  5802                           ;psect for function _I2C_Transmit
  5803  0F19                     _I2C_Transmit:	
  5804                           
  5805                           ;incstack = 0
  5806                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5807                           ;I2C_Transmit@I2Cx stored from wreg
  5808  0F19  0020               	movlb	0	; select bank0
  5809  0F1A  00AE               	movwf	I2C_Transmit@I2Cx
  5810                           
  5811                           ;I2C_Common.c: 25: int8_t result;
  5812                           ;I2C_Common.c: 27: switch(I2Cx)
  5813  0F1B  2F3A               	goto	l3984
  5814  0F1C                     l3978:	
  5815                           ;I2C_Common.c: 28: {
  5816                           ;I2C_Common.c: 29: case I2C1_MODULE:
  5817                           
  5818                           
  5819                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  5820  0F1C  0829               	movf	I2C_Transmit@pData,w
  5821  0F1D  00AB               	movwf	??_I2C_Transmit
  5822  0F1E  082B               	movf	??_I2C_Transmit,w
  5823  0F1F  00A0               	movwf	I2C1_Transmit@pData
  5824  0F20  082A               	movf	I2C_Transmit@size,w
  5825  0F21  00AC               	movwf	??_I2C_Transmit+1
  5826  0F22  082C               	movf	??_I2C_Transmit+1,w
  5827  0F23  00A1               	movwf	I2C1_Transmit@size
  5828  0F24  0828               	movf	I2C_Transmit@address,w
  5829  0F25  3184  2484  318F   	fcall	_I2C1_Transmit
  5830  0F28  2F35               	goto	L7
  5831  0F29                     l3980:	
  5832                           ;I2C_Common.c: 33: case I2C2_MODULE:
  5833                           
  5834                           ;I2C_Common.c: 31: break;
  5835                           
  5836                           
  5837                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  5838  0F29  0829               	movf	I2C_Transmit@pData,w
  5839  0F2A  00AB               	movwf	??_I2C_Transmit
  5840  0F2B  082B               	movf	??_I2C_Transmit,w
  5841  0F2C  00A0               	movwf	I2C2_Transmit@pData
  5842  0F2D  082A               	movf	I2C_Transmit@size,w
  5843  0F2E  00AC               	movwf	??_I2C_Transmit+1
  5844  0F2F  082C               	movf	??_I2C_Transmit+1,w
  5845  0F30  00A1               	movwf	I2C2_Transmit@size
  5846  0F31  0828               	movf	I2C_Transmit@address,w
  5847  0F32  3183  23EC  318F   	fcall	_I2C2_Transmit
  5848  0F35                     L7:	
  5849  0F35  0020               	movlb	0	; select bank0
  5850  0F36  00AD               	movwf	??_I2C_Transmit+2
  5851  0F37  082D               	movf	??_I2C_Transmit+2,w
  5852  0F38  00AF               	movwf	I2C_Transmit@result
  5853                           
  5854                           ;I2C_Common.c: 36: }
  5855                           
  5856                           ;I2C_Common.c: 35: break;
  5857  0F39  2F42               	goto	l3986
  5858  0F3A                     l3984:	
  5859  0F3A  082E               	movf	I2C_Transmit@I2Cx,w
  5860                           
  5861                           ; Switch size 1, requested type "space"
  5862                           ; Number of cases is 2, Range of values is 0 to 1
  5863                           ; switch strategies available:
  5864                           ; Name         Instructions Cycles
  5865                           ; simple_byte            7     4 (average)
  5866                           ; direct_byte           10     6 (fixed)
  5867                           ; jumptable            260     6 (fixed)
  5868                           ;	Chosen strategy is simple_byte
  5869  0F3B  3A00               	xorlw	0	; case 0
  5870  0F3C  1903               	skipnz
  5871  0F3D  2F1C               	goto	l3978
  5872  0F3E  3A01               	xorlw	1	; case 1
  5873  0F3F  1903               	skipnz
  5874  0F40  2F29               	goto	l3980
  5875  0F41  2F42               	goto	l3986
  5876  0F42                     l3986:	
  5877                           
  5878                           ;I2C_Common.c: 37: return result;
  5879  0F42  082F               	movf	I2C_Transmit@result,w
  5880  0F43  0008               	return
  5881  0F44                     __end_of_I2C_Transmit:	
  5882                           
  5883                           	psect	text21
  5884  03EC                     __ptext21:	
  5885 ;; *************** function _I2C2_Transmit *****************
  5886 ;; Defined at:
  5887 ;;		line 52 in file "I2C2.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;  address         1    wreg     unsigned char 
  5890 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  5891 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5892 ;;  size            1    1[BANK0 ] unsigned char 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  address         1    4[BANK0 ] unsigned char 
  5895 ;;  i               1    6[BANK0 ] unsigned char 
  5896 ;;  i               1    5[BANK0 ] unsigned char 
  5897 ;;  result          1    7[BANK0 ] char 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1    wreg      char 
  5900 ;; Registers used:
  5901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5907 ;;      Params:         0       2       0       0       0       0
  5908 ;;      Locals:         0       4       0       0       0       0
  5909 ;;      Temps:          0       2       0       0       0       0
  5910 ;;      Totals:         0       8       0       0       0       0
  5911 ;;Total ram usage:        8 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    3
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_I2C_Transmit
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           
  5922                           ;psect for function _I2C2_Transmit
  5923  03EC                     _I2C2_Transmit:	
  5924                           
  5925                           ;incstack = 0
  5926                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  5927                           ;I2C2_Transmit@address stored from wreg
  5928  03EC  0020               	movlb	0	; select bank0
  5929  03ED  00A4               	movwf	I2C2_Transmit@address
  5930                           
  5931                           ;I2C2.c: 54: int8_t result = 0;
  5932  03EE  01A7               	clrf	I2C2_Transmit@result
  5933                           
  5934                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  5935  03EF  2C78               	goto	l3890
  5936  03F0                     l3846:	
  5937                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5938                           
  5939                           ;I2C2.c: 57: {
  5940                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  5941                           
  5942  03F0  3005               	movlw	5
  5943  03F1  0024               	movlb	4	; select bank4
  5944  03F2  051C               	andwf	28,w	;volatile
  5945  03F3  0020               	movlb	0	; select bank0
  5946  03F4  00A2               	movwf	??_I2C2_Transmit
  5947  03F5  0024               	movlb	4	; select bank4
  5948  03F6  081E               	movf	30,w	;volatile
  5949  03F7  391F               	andlw	31
  5950  03F8  0020               	movlb	0	; select bank0
  5951  03F9  0422               	iorwf	??_I2C2_Transmit,w
  5952  03FA  1D03               	btfss	3,2
  5953  03FB  2BF0               	goto	l3846
  5954                           
  5955                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  5956  03FC  0024               	movlb	4	; select bank4
  5957  03FD  141E               	bsf	30,0	;volatile
  5958  03FE                     l3848:	
  5959                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5960                           
  5961  03FE  3005               	movlw	5
  5962  03FF  0024               	movlb	4	; select bank4
  5963  0400  051C               	andwf	28,w	;volatile
  5964  0401  0020               	movlb	0	; select bank0
  5965  0402  00A2               	movwf	??_I2C2_Transmit
  5966  0403  0024               	movlb	4	; select bank4
  5967  0404  081E               	movf	30,w	;volatile
  5968  0405  391F               	andlw	31
  5969  0406  0020               	movlb	0	; select bank0
  5970  0407  0422               	iorwf	??_I2C2_Transmit,w
  5971  0408  1D03               	btfss	3,2
  5972  0409  2BFE               	goto	l3848
  5973                           
  5974                           ;I2C2.c: 63: SSP2BUF = address << 1;
  5975  040A  3524               	lslf	I2C2_Transmit@address,w
  5976  040B  0024               	movlb	4	; select bank4
  5977  040C  0099               	movwf	25	;volatile
  5978  040D                     l228:	
  5979                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  5980                           
  5981  040D  191C               	btfsc	28,2	;volatile
  5982  040E  2C0D               	goto	l228
  5983                           
  5984                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  5985  040F  3000               	movlw	0
  5986  0410  1B1E               	btfsc	30,6	;volatile
  5987  0411  3001               	movlw	1
  5988  0412  0020               	movlb	0	; select bank0
  5989  0413  00A7               	movwf	I2C2_Transmit@result
  5990                           
  5991                           ;I2C2.c: 67: if (!result)
  5992  0414  0827               	movf	I2C2_Transmit@result,w
  5993  0415  1D03               	btfss	3,2
  5994  0416  2C44               	goto	l3872
  5995                           
  5996                           ;I2C2.c: 68: {
  5997                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  5998  0417  01A5               	clrf	I2C2_Transmit@i
  5999  0418  2C1D               	goto	l3870
  6000  0419                     l3868:	
  6001                           ;I2C2.c: 79: break;
  6002                           
  6003  0419  3001               	movlw	1
  6004  041A  00A2               	movwf	??_I2C2_Transmit
  6005  041B  0822               	movf	??_I2C2_Transmit,w
  6006  041C  07A5               	addwf	I2C2_Transmit@i,f
  6007  041D                     l3870:	
  6008  041D  0821               	movf	I2C2_Transmit@size,w
  6009  041E  0225               	subwf	I2C2_Transmit@i,w
  6010  041F  1803               	btfsc	3,0
  6011  0420  2C44               	goto	l3872
  6012  0421                     l3858:	
  6013                           ;I2C2.c: 70: {
  6014                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6015                           
  6016  0421  3005               	movlw	5
  6017  0422  0024               	movlb	4	; select bank4
  6018  0423  051C               	andwf	28,w	;volatile
  6019  0424  0020               	movlb	0	; select bank0
  6020  0425  00A2               	movwf	??_I2C2_Transmit
  6021  0426  0024               	movlb	4	; select bank4
  6022  0427  081E               	movf	30,w	;volatile
  6023  0428  391F               	andlw	31
  6024  0429  0020               	movlb	0	; select bank0
  6025  042A  0422               	iorwf	??_I2C2_Transmit,w
  6026  042B  1D03               	btfss	3,2
  6027  042C  2C21               	goto	l3858
  6028                           
  6029                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  6030  042D  0825               	movf	I2C2_Transmit@i,w
  6031  042E  0720               	addwf	I2C2_Transmit@pData,w
  6032  042F  00A2               	movwf	??_I2C2_Transmit
  6033  0430  0822               	movf	??_I2C2_Transmit,w
  6034  0431  0086               	movwf	6
  6035  0432  0187               	clrf	7
  6036  0433  0801               	movf	1,w
  6037  0434  0024               	movlb	4	; select bank4
  6038  0435  0099               	movwf	25	;volatile
  6039  0436                     l237:	
  6040                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  6041                           
  6042  0436  191C               	btfsc	28,2	;volatile
  6043  0437  2C36               	goto	l237
  6044                           
  6045                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  6046  0438  3000               	movlw	0
  6047  0439  1B1E               	btfsc	30,6	;volatile
  6048  043A  3001               	movlw	1
  6049  043B  0020               	movlb	0	; select bank0
  6050  043C  00A7               	movwf	I2C2_Transmit@result
  6051                           
  6052                           ;I2C2.c: 76: if (result)
  6053  043D  0827               	movf	I2C2_Transmit@result,w
  6054  043E  1903               	btfsc	3,2
  6055  043F  2C19               	goto	l3868
  6056                           
  6057                           ;I2C2.c: 77: {
  6058                           ;I2C2.c: 78: result = 2;
  6059  0440  3002               	movlw	2
  6060  0441  00A2               	movwf	??_I2C2_Transmit
  6061  0442  0822               	movf	??_I2C2_Transmit,w
  6062  0443  00A7               	movwf	I2C2_Transmit@result
  6063  0444                     l3872:	
  6064                           ;I2C2.c: 80: }
  6065                           ;I2C2.c: 81: }
  6066                           ;I2C2.c: 82: }
  6067                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6068                           
  6069  0444  3005               	movlw	5
  6070  0445  0024               	movlb	4	; select bank4
  6071  0446  051C               	andwf	28,w	;volatile
  6072  0447  0020               	movlb	0	; select bank0
  6073  0448  00A2               	movwf	??_I2C2_Transmit
  6074  0449  0024               	movlb	4	; select bank4
  6075  044A  081E               	movf	30,w	;volatile
  6076  044B  391F               	andlw	31
  6077  044C  0020               	movlb	0	; select bank0
  6078  044D  0422               	iorwf	??_I2C2_Transmit,w
  6079  044E  1D03               	btfss	3,2
  6080  044F  2C44               	goto	l3872
  6081                           
  6082                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  6083  0450  0024               	movlb	4	; select bank4
  6084  0451  151E               	bsf	30,2	;volatile
  6085                           
  6086                           ;I2C2.c: 86: break;
  6087  0452  2C81               	goto	l3892
  6088  0453                     l246:	
  6089                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  6090                           
  6091                           
  6092                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  6093  0453  0024               	movlb	4	; select bank4
  6094  0454  1D9C               	btfss	28,3	;volatile
  6095  0455  1E1C               	btfss	28,4	;volatile
  6096  0456  2C75               	goto	l3886
  6097                           
  6098                           ;I2C2.c: 90: {
  6099                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  6100  0457  0020               	movlb	0	; select bank0
  6101  0458  01A6               	clrf	I2C2_Transmit@i_316
  6102  0459                     l3882:	
  6103  0459  0821               	movf	I2C2_Transmit@size,w
  6104  045A  0226               	subwf	I2C2_Transmit@i_316,w
  6105  045B  1803               	btfsc	3,0
  6106  045C  2C70               	goto	l3884
  6107                           
  6108                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  6109  045D  0826               	movf	I2C2_Transmit@i_316,w
  6110  045E  0720               	addwf	I2C2_Transmit@pData,w
  6111  045F  00A2               	movwf	??_I2C2_Transmit
  6112  0460  0822               	movf	??_I2C2_Transmit,w
  6113  0461  0086               	movwf	6
  6114  0462  0187               	clrf	7
  6115  0463  0801               	movf	1,w
  6116  0464  00A3               	movwf	??_I2C2_Transmit+1
  6117  0465  0826               	movf	I2C2_Transmit@i_316,w
  6118  0466  3EA9               	addlw	(low (_I2C2_Config| 0))& (0+255)
  6119  0467  0086               	movwf	6
  6120  0468  0187               	clrf	7
  6121  0469  0823               	movf	??_I2C2_Transmit+1,w
  6122  046A  0081               	movwf	1
  6123  046B  3001               	movlw	1
  6124  046C  00A2               	movwf	??_I2C2_Transmit
  6125  046D  0822               	movf	??_I2C2_Transmit,w
  6126  046E  07A6               	addwf	I2C2_Transmit@i_316,f
  6127  046F  2C59               	goto	l3882
  6128  0470                     l3884:	
  6129                           
  6130                           ;I2C2.c: 93: result = size;
  6131  0470  0821               	movf	I2C2_Transmit@size,w
  6132  0471  00A2               	movwf	??_I2C2_Transmit
  6133  0472  0822               	movf	??_I2C2_Transmit,w
  6134  0473  00A7               	movwf	I2C2_Transmit@result
  6135                           
  6136                           ;I2C2.c: 94: }
  6137  0474  2C81               	goto	l3892
  6138  0475                     l3886:	
  6139                           
  6140                           ;I2C2.c: 95: else
  6141                           ;I2C2.c: 96: result = 0;
  6142  0475  0020               	movlb	0	; select bank0
  6143  0476  01A7               	clrf	I2C2_Transmit@result
  6144                           
  6145                           ;I2C2.c: 98: }
  6146                           
  6147                           ;I2C2.c: 97: break;
  6148  0477  2C81               	goto	l3892
  6149  0478                     l3890:	
  6150  0478  0021               	movlb	1	; select bank1
  6151  0479  083B               	movf	(_I2C2_Config^(0+128)+18),w
  6152                           
  6153                           ; Switch size 1, requested type "space"
  6154                           ; Number of cases is 2, Range of values is 0 to 1
  6155                           ; switch strategies available:
  6156                           ; Name         Instructions Cycles
  6157                           ; simple_byte            7     4 (average)
  6158                           ; direct_byte           10     6 (fixed)
  6159                           ; jumptable            260     6 (fixed)
  6160                           ;	Chosen strategy is simple_byte
  6161  047A  3A00               	xorlw	0	; case 0
  6162  047B  1903               	skipnz
  6163  047C  2BF0               	goto	l3846
  6164  047D  3A01               	xorlw	1	; case 1
  6165  047E  1903               	skipnz
  6166  047F  2C53               	goto	l246
  6167  0480  2C81               	goto	l3892
  6168  0481                     l3892:	
  6169                           
  6170                           ;I2C2.c: 100: return result;
  6171  0481  0020               	movlb	0	; select bank0
  6172  0482  0827               	movf	I2C2_Transmit@result,w
  6173  0483  0008               	return
  6174  0484                     __end_of_I2C2_Transmit:	
  6175                           
  6176                           	psect	text22
  6177  0484                     __ptext22:	
  6178 ;; *************** function _I2C1_Transmit *****************
  6179 ;; Defined at:
  6180 ;;		line 52 in file "I2C1.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;  address         1    wreg     unsigned char 
  6183 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  6184 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6185 ;;  size            1    1[BANK0 ] unsigned char 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  address         1    4[BANK0 ] unsigned char 
  6188 ;;  i               1    6[BANK0 ] unsigned char 
  6189 ;;  i               1    5[BANK0 ] unsigned char 
  6190 ;;  result          1    7[BANK0 ] char 
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  1    wreg      char 
  6193 ;; Registers used:
  6194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6200 ;;      Params:         0       2       0       0       0       0
  6201 ;;      Locals:         0       4       0       0       0       0
  6202 ;;      Temps:          0       2       0       0       0       0
  6203 ;;      Totals:         0       8       0       0       0       0
  6204 ;;Total ram usage:        8 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; Hardware stack levels required when called:    3
  6207 ;; This function calls:
  6208 ;;		Nothing
  6209 ;; This function is called by:
  6210 ;;		_I2C_Transmit
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           
  6215                           ;psect for function _I2C1_Transmit
  6216  0484                     _I2C1_Transmit:	
  6217                           
  6218                           ;incstack = 0
  6219                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  6220                           ;I2C1_Transmit@address stored from wreg
  6221  0484  0020               	movlb	0	; select bank0
  6222  0485  00A4               	movwf	I2C1_Transmit@address
  6223                           
  6224                           ;I2C1.c: 54: int8_t result;
  6225                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  6226  0486  2D0F               	goto	l3804
  6227  0487                     l3760:	
  6228                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6229                           
  6230                           ;I2C1.c: 57: {
  6231                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  6232                           
  6233  0487  3005               	movlw	5
  6234  0488  0024               	movlb	4	; select bank4
  6235  0489  0514               	andwf	20,w	;volatile
  6236  048A  0020               	movlb	0	; select bank0
  6237  048B  00A2               	movwf	??_I2C1_Transmit
  6238  048C  0024               	movlb	4	; select bank4
  6239  048D  0816               	movf	22,w	;volatile
  6240  048E  391F               	andlw	31
  6241  048F  0020               	movlb	0	; select bank0
  6242  0490  0422               	iorwf	??_I2C1_Transmit,w
  6243  0491  1D03               	btfss	3,2
  6244  0492  2C87               	goto	l3760
  6245                           
  6246                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  6247  0493  0024               	movlb	4	; select bank4
  6248  0494  1416               	bsf	22,0	;volatile
  6249  0495                     l3762:	
  6250                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6251                           
  6252  0495  3005               	movlw	5
  6253  0496  0024               	movlb	4	; select bank4
  6254  0497  0514               	andwf	20,w	;volatile
  6255  0498  0020               	movlb	0	; select bank0
  6256  0499  00A2               	movwf	??_I2C1_Transmit
  6257  049A  0024               	movlb	4	; select bank4
  6258  049B  0816               	movf	22,w	;volatile
  6259  049C  391F               	andlw	31
  6260  049D  0020               	movlb	0	; select bank0
  6261  049E  0422               	iorwf	??_I2C1_Transmit,w
  6262  049F  1D03               	btfss	3,2
  6263  04A0  2C95               	goto	l3762
  6264                           
  6265                           ;I2C1.c: 63: SSP1BUF = address << 1;
  6266  04A1  3524               	lslf	I2C1_Transmit@address,w
  6267  04A2  0024               	movlb	4	; select bank4
  6268  04A3  0091               	movwf	17	;volatile
  6269  04A4                     l91:	
  6270                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  6271                           
  6272  04A4  1914               	btfsc	20,2	;volatile
  6273  04A5  2CA4               	goto	l91
  6274                           
  6275                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  6276  04A6  3000               	movlw	0
  6277  04A7  1B16               	btfsc	22,6	;volatile
  6278  04A8  3001               	movlw	1
  6279  04A9  0020               	movlb	0	; select bank0
  6280  04AA  00A7               	movwf	I2C1_Transmit@result
  6281                           
  6282                           ;I2C1.c: 67: if (!result)
  6283  04AB  0827               	movf	I2C1_Transmit@result,w
  6284  04AC  1D03               	btfss	3,2
  6285  04AD  2CDB               	goto	l3786
  6286                           
  6287                           ;I2C1.c: 68: {
  6288                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  6289  04AE  01A5               	clrf	I2C1_Transmit@i
  6290  04AF  2CB4               	goto	l3784
  6291  04B0                     l3782:	
  6292                           ;I2C1.c: 79: break;
  6293                           
  6294  04B0  3001               	movlw	1
  6295  04B1  00A2               	movwf	??_I2C1_Transmit
  6296  04B2  0822               	movf	??_I2C1_Transmit,w
  6297  04B3  07A5               	addwf	I2C1_Transmit@i,f
  6298  04B4                     l3784:	
  6299  04B4  0821               	movf	I2C1_Transmit@size,w
  6300  04B5  0225               	subwf	I2C1_Transmit@i,w
  6301  04B6  1803               	btfsc	3,0
  6302  04B7  2CDB               	goto	l3786
  6303  04B8                     l3772:	
  6304                           ;I2C1.c: 70: {
  6305                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6306                           
  6307  04B8  3005               	movlw	5
  6308  04B9  0024               	movlb	4	; select bank4
  6309  04BA  0514               	andwf	20,w	;volatile
  6310  04BB  0020               	movlb	0	; select bank0
  6311  04BC  00A2               	movwf	??_I2C1_Transmit
  6312  04BD  0024               	movlb	4	; select bank4
  6313  04BE  0816               	movf	22,w	;volatile
  6314  04BF  391F               	andlw	31
  6315  04C0  0020               	movlb	0	; select bank0
  6316  04C1  0422               	iorwf	??_I2C1_Transmit,w
  6317  04C2  1D03               	btfss	3,2
  6318  04C3  2CB8               	goto	l3772
  6319                           
  6320                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  6321  04C4  0825               	movf	I2C1_Transmit@i,w
  6322  04C5  0720               	addwf	I2C1_Transmit@pData,w
  6323  04C6  00A2               	movwf	??_I2C1_Transmit
  6324  04C7  0822               	movf	??_I2C1_Transmit,w
  6325  04C8  0086               	movwf	6
  6326  04C9  0187               	clrf	7
  6327  04CA  0801               	movf	1,w
  6328  04CB  0024               	movlb	4	; select bank4
  6329  04CC  0091               	movwf	17	;volatile
  6330  04CD                     l100:	
  6331                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  6332                           
  6333  04CD  1914               	btfsc	20,2	;volatile
  6334  04CE  2CCD               	goto	l100
  6335                           
  6336                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  6337  04CF  3000               	movlw	0
  6338  04D0  1B16               	btfsc	22,6	;volatile
  6339  04D1  3001               	movlw	1
  6340  04D2  0020               	movlb	0	; select bank0
  6341  04D3  00A7               	movwf	I2C1_Transmit@result
  6342                           
  6343                           ;I2C1.c: 76: if (result)
  6344  04D4  0827               	movf	I2C1_Transmit@result,w
  6345  04D5  1903               	btfsc	3,2
  6346  04D6  2CB0               	goto	l3782
  6347                           
  6348                           ;I2C1.c: 77: {
  6349                           ;I2C1.c: 78: result = 2;
  6350  04D7  3002               	movlw	2
  6351  04D8  00A2               	movwf	??_I2C1_Transmit
  6352  04D9  0822               	movf	??_I2C1_Transmit,w
  6353  04DA  00A7               	movwf	I2C1_Transmit@result
  6354  04DB                     l3786:	
  6355                           ;I2C1.c: 80: }
  6356                           ;I2C1.c: 81: }
  6357                           ;I2C1.c: 82: }
  6358                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6359                           
  6360  04DB  3005               	movlw	5
  6361  04DC  0024               	movlb	4	; select bank4
  6362  04DD  0514               	andwf	20,w	;volatile
  6363  04DE  0020               	movlb	0	; select bank0
  6364  04DF  00A2               	movwf	??_I2C1_Transmit
  6365  04E0  0024               	movlb	4	; select bank4
  6366  04E1  0816               	movf	22,w	;volatile
  6367  04E2  391F               	andlw	31
  6368  04E3  0020               	movlb	0	; select bank0
  6369  04E4  0422               	iorwf	??_I2C1_Transmit,w
  6370  04E5  1D03               	btfss	3,2
  6371  04E6  2CDB               	goto	l3786
  6372                           
  6373                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  6374  04E7  0024               	movlb	4	; select bank4
  6375  04E8  1516               	bsf	22,2	;volatile
  6376                           
  6377                           ;I2C1.c: 86: break;
  6378  04E9  2D18               	goto	l3806
  6379  04EA                     l109:	
  6380                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  6381                           
  6382                           
  6383                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  6384  04EA  0024               	movlb	4	; select bank4
  6385  04EB  1D94               	btfss	20,3	;volatile
  6386  04EC  1E14               	btfss	20,4	;volatile
  6387  04ED  2D0C               	goto	l3800
  6388                           
  6389                           ;I2C1.c: 90: {
  6390                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  6391  04EE  0020               	movlb	0	; select bank0
  6392  04EF  01A6               	clrf	I2C1_Transmit@i_172
  6393  04F0                     l3796:	
  6394  04F0  0821               	movf	I2C1_Transmit@size,w
  6395  04F1  0226               	subwf	I2C1_Transmit@i_172,w
  6396  04F2  1803               	btfsc	3,0
  6397  04F3  2D07               	goto	l3798
  6398                           
  6399                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  6400  04F4  0826               	movf	I2C1_Transmit@i_172,w
  6401  04F5  0720               	addwf	I2C1_Transmit@pData,w
  6402  04F6  00A2               	movwf	??_I2C1_Transmit
  6403  04F7  0822               	movf	??_I2C1_Transmit,w
  6404  04F8  0086               	movwf	6
  6405  04F9  0187               	clrf	7
  6406  04FA  0801               	movf	1,w
  6407  04FB  00A3               	movwf	??_I2C1_Transmit+1
  6408  04FC  0826               	movf	I2C1_Transmit@i_172,w
  6409  04FD  3EBC               	addlw	(low (_I2C1_Config| 0))& (0+255)
  6410  04FE  0086               	movwf	6
  6411  04FF  0187               	clrf	7
  6412  0500  0823               	movf	??_I2C1_Transmit+1,w
  6413  0501  0081               	movwf	1
  6414  0502  3001               	movlw	1
  6415  0503  00A2               	movwf	??_I2C1_Transmit
  6416  0504  0822               	movf	??_I2C1_Transmit,w
  6417  0505  07A6               	addwf	I2C1_Transmit@i_172,f
  6418  0506  2CF0               	goto	l3796
  6419  0507                     l3798:	
  6420                           
  6421                           ;I2C1.c: 93: result = size;
  6422  0507  0821               	movf	I2C1_Transmit@size,w
  6423  0508  00A2               	movwf	??_I2C1_Transmit
  6424  0509  0822               	movf	??_I2C1_Transmit,w
  6425  050A  00A7               	movwf	I2C1_Transmit@result
  6426                           
  6427                           ;I2C1.c: 94: }
  6428  050B  2D18               	goto	l3806
  6429  050C                     l3800:	
  6430                           
  6431                           ;I2C1.c: 95: else
  6432                           ;I2C1.c: 96: result = 0;
  6433  050C  0020               	movlb	0	; select bank0
  6434  050D  01A7               	clrf	I2C1_Transmit@result
  6435                           
  6436                           ;I2C1.c: 98: }
  6437                           
  6438                           ;I2C1.c: 97: break;
  6439  050E  2D18               	goto	l3806
  6440  050F                     l3804:	
  6441  050F  0021               	movlb	1	; select bank1
  6442  0510  084E               	movf	(_I2C1_Config^(0+128)+18),w
  6443                           
  6444                           ; Switch size 1, requested type "space"
  6445                           ; Number of cases is 2, Range of values is 0 to 1
  6446                           ; switch strategies available:
  6447                           ; Name         Instructions Cycles
  6448                           ; simple_byte            7     4 (average)
  6449                           ; direct_byte           10     6 (fixed)
  6450                           ; jumptable            260     6 (fixed)
  6451                           ;	Chosen strategy is simple_byte
  6452  0511  3A00               	xorlw	0	; case 0
  6453  0512  1903               	skipnz
  6454  0513  2C87               	goto	l3760
  6455  0514  3A01               	xorlw	1	; case 1
  6456  0515  1903               	skipnz
  6457  0516  2CEA               	goto	l109
  6458  0517  2D18               	goto	l3806
  6459  0518                     l3806:	
  6460                           
  6461                           ;I2C1.c: 100: return result;
  6462  0518  0020               	movlb	0	; select bank0
  6463  0519  0827               	movf	I2C1_Transmit@result,w
  6464  051A  0008               	return
  6465  051B                     __end_of_I2C1_Transmit:	
  6466                           
  6467                           	psect	text23
  6468  0EEF                     __ptext23:	
  6469 ;; *************** function _I2C_Init *****************
  6470 ;; Defined at:
  6471 ;;		line 6 in file "I2C_Common.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;  I2Cx            1    wreg     enum E3075
  6474 ;;  address         1    5[BANK0 ] unsigned char 
  6475 ;;  mode            1    6[BANK0 ] enum E3066
  6476 ;;  Speed           1    7[BANK0 ] enum E3070
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;  I2Cx            1   10[BANK0 ] enum E3075
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      void 
  6481 ;; Registers used:
  6482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6488 ;;      Params:         0       3       0       0       0       0
  6489 ;;      Locals:         0       1       0       0       0       0
  6490 ;;      Temps:          0       2       0       0       0       0
  6491 ;;      Totals:         0       6       0       0       0       0
  6492 ;;Total ram usage:        6 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    5
  6495 ;; This function calls:
  6496 ;;		_I2C1_Setting
  6497 ;;		_I2C2_Setting
  6498 ;; This function is called by:
  6499 ;;		_DAC_Initialize
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           
  6504                           ;psect for function _I2C_Init
  6505  0EEF                     _I2C_Init:	
  6506                           
  6507                           ;incstack = 0
  6508                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6509                           ;I2C_Init@I2Cx stored from wreg
  6510  0EEF  0020               	movlb	0	; select bank0
  6511  0EF0  00AA               	movwf	I2C_Init@I2Cx
  6512                           
  6513                           ;I2C_Common.c: 8: switch(I2Cx)
  6514  0EF1  2F0D               	goto	l3974
  6515  0EF2                     l3968:	
  6516                           ;I2C_Common.c: 9: {
  6517                           ;I2C_Common.c: 10: case I2C1_MODULE:
  6518                           
  6519                           
  6520                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  6521  0EF2  0826               	movf	I2C_Init@mode,w
  6522  0EF3  00A8               	movwf	??_I2C_Init
  6523  0EF4  0828               	movf	??_I2C_Init,w
  6524  0EF5  00A1               	movwf	I2C1_Setting@mode
  6525  0EF6  0827               	movf	I2C_Init@Speed,w
  6526  0EF7  00A9               	movwf	??_I2C_Init+1
  6527  0EF8  0829               	movf	??_I2C_Init+1,w
  6528  0EF9  00A2               	movwf	I2C1_Setting@Speed
  6529  0EFA  0825               	movf	I2C_Init@address,w
  6530  0EFB  3187  2783  318E   	fcall	_I2C1_Setting
  6531                           
  6532                           ;I2C_Common.c: 12: break;
  6533  0EFE  2F16               	goto	l338
  6534  0EFF                     l3970:	
  6535                           ;I2C_Common.c: 14: case I2C2_MODULE:
  6536                           
  6537                           
  6538                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  6539  0EFF  0020               	movlb	0	; select bank0
  6540  0F00  0826               	movf	I2C_Init@mode,w
  6541  0F01  00A8               	movwf	??_I2C_Init
  6542  0F02  0828               	movf	??_I2C_Init,w
  6543  0F03  00A1               	movwf	I2C2_Setting@mode
  6544  0F04  0827               	movf	I2C_Init@Speed,w
  6545  0F05  00A9               	movwf	??_I2C_Init+1
  6546  0F06  0829               	movf	??_I2C_Init+1,w
  6547  0F07  00A2               	movwf	I2C2_Setting@Speed
  6548  0F08  0825               	movf	I2C_Init@address,w
  6549  0F09  3187  273F  318E   	fcall	_I2C2_Setting
  6550                           
  6551                           ;I2C_Common.c: 17: }
  6552                           
  6553                           ;I2C_Common.c: 16: break;
  6554  0F0C  2F16               	goto	l338
  6555  0F0D                     l3974:	
  6556  0F0D  0020               	movlb	0	; select bank0
  6557  0F0E  082A               	movf	I2C_Init@I2Cx,w
  6558                           
  6559                           ; Switch size 1, requested type "space"
  6560                           ; Number of cases is 2, Range of values is 0 to 1
  6561                           ; switch strategies available:
  6562                           ; Name         Instructions Cycles
  6563                           ; simple_byte            7     4 (average)
  6564                           ; direct_byte           10     6 (fixed)
  6565                           ; jumptable            260     6 (fixed)
  6566                           ;	Chosen strategy is simple_byte
  6567  0F0F  3A00               	xorlw	0	; case 0
  6568  0F10  1903               	skipnz
  6569  0F11  2EF2               	goto	l3968
  6570  0F12  3A01               	xorlw	1	; case 1
  6571  0F13  1903               	skipnz
  6572  0F14  2EFF               	goto	l3970
  6573  0F15  2F16               	goto	l338
  6574  0F16                     l338:	
  6575                           
  6576                           ;I2C_Common.c: 19: PEIE = 1;
  6577  0F16  170B               	bsf	11,6	;volatile
  6578                           
  6579                           ;I2C_Common.c: 20: GIE = 1;
  6580  0F17  178B               	bsf	11,7	;volatile
  6581  0F18  0008               	return
  6582  0F19                     __end_of_I2C_Init:	
  6583                           
  6584                           	psect	text24
  6585  073F                     __ptext24:	
  6586 ;; *************** function _I2C2_Setting *****************
  6587 ;; Defined at:
  6588 ;;		line 15 in file "I2C2.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;  address         1    wreg     unsigned char 
  6591 ;;  mode            1    1[BANK0 ] enum E3066
  6592 ;;  Speed           1    2[BANK0 ] enum E3070
  6593 ;; Auto vars:     Size  Location     Type
  6594 ;;  address         1    4[BANK0 ] unsigned char 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  1    wreg      void 
  6597 ;; Registers used:
  6598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6604 ;;      Params:         0       2       0       0       0       0
  6605 ;;      Locals:         0       1       0       0       0       0
  6606 ;;      Temps:          0       1       0       0       0       0
  6607 ;;      Totals:         0       4       0       0       0       0
  6608 ;;Total ram usage:        4 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; Hardware stack levels required when called:    4
  6611 ;; This function calls:
  6612 ;;		_I2C2_PinInit
  6613 ;; This function is called by:
  6614 ;;		_I2C_Init
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           
  6619                           ;psect for function _I2C2_Setting
  6620  073F                     _I2C2_Setting:	
  6621                           
  6622                           ;incstack = 0
  6623                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6624                           ;I2C2_Setting@address stored from wreg
  6625  073F  0020               	movlb	0	; select bank0
  6626  0740  00A4               	movwf	I2C2_Setting@address
  6627                           
  6628                           ;I2C2.c: 17: I2C2_PinInit();
  6629  0741  318D  2552  3187   	fcall	_I2C2_PinInit
  6630                           
  6631                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  6632  0744  0020               	movlb	0	; select bank0
  6633  0745  0821               	movf	I2C2_Setting@mode,w
  6634  0746  00A3               	movwf	??_I2C2_Setting
  6635  0747  0823               	movf	??_I2C2_Setting,w
  6636  0748  0021               	movlb	1	; select bank1
  6637  0749  00BB               	movwf	(_I2C2_Config^(0+128)+18)
  6638                           
  6639                           ;I2C2.c: 20: switch(mode)
  6640  074A  2F73               	goto	l3842
  6641  074B                     l211:	
  6642                           ;I2C2.c: 21: {
  6643                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  6644                           
  6645                           
  6646                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  6647  074B  0024               	movlb	4	; select bank4
  6648  074C  159D               	bsf	29,3	;volatile
  6649                           
  6650                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6651  074D  0020               	movlb	0	; select bank0
  6652  074E  0822               	movf	I2C2_Setting@Speed,w
  6653  074F  1D03               	btfss	3,2
  6654  0750  2F55               	goto	l3820
  6655                           
  6656                           ;I2C2.c: 25: {
  6657                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  6658  0751  0024               	movlb	4	; select bank4
  6659  0752  179C               	bsf	28,7	;volatile
  6660                           
  6661                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  6662  0753  304F               	movlw	79
  6663  0754  2F5F               	goto	L8
  6664  0755                     l3820:	
  6665                           ;I2C2.c: 28: }
  6666                           
  6667                           
  6668                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6669  0755  0020               	movlb	0	; select bank0
  6670  0756  0322               	decf	I2C2_Setting@Speed,w
  6671  0757  1D03               	btfss	3,2
  6672  0758  2F60               	goto	l3826
  6673                           
  6674                           ;I2C2.c: 30: {
  6675                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  6676  0759  307F               	movlw	127
  6677  075A  00A3               	movwf	??_I2C2_Setting
  6678  075B  0823               	movf	??_I2C2_Setting,w
  6679  075C  0024               	movlb	4	; select bank4
  6680  075D  059C               	andwf	28,f	;volatile
  6681                           
  6682                           ;I2C2.c: 32: SSP2ADD = 0x13;
  6683  075E  3013               	movlw	19
  6684  075F                     L8:	
  6685  075F  009A               	movwf	26	;volatile
  6686  0760                     l3826:	
  6687                           
  6688                           ;I2C2.c: 33: }
  6689                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  6690  0760  0024               	movlb	4	; select bank4
  6691  0761  2F71               	goto	l3838
  6692  0762                     l3828:	
  6693                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  6694                           
  6695                           ;I2C2.c: 35: break;
  6696                           
  6697                           
  6698                           ;I2C2.c: 38: SSP2STAT = 0x00;
  6699  0762  0024               	movlb	4	; select bank4
  6700  0763  019C               	clrf	28	;volatile
  6701                           
  6702                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  6703  0764  3006               	movlw	6
  6704  0765  0020               	movlb	0	; select bank0
  6705  0766  00A3               	movwf	??_I2C2_Setting
  6706  0767  0823               	movf	??_I2C2_Setting,w
  6707  0768  0024               	movlb	4	; select bank4
  6708  0769  049D               	iorwf	29,f	;volatile
  6709                           
  6710                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  6711  076A  141E               	bsf	30,0	;volatile
  6712                           
  6713                           ;I2C2.c: 41: SSP2ADD = address << 1;
  6714  076B  0020               	movlb	0	; select bank0
  6715  076C  3524               	lslf	I2C2_Setting@address,w
  6716  076D  0024               	movlb	4	; select bank4
  6717  076E  009A               	movwf	26	;volatile
  6718                           
  6719                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  6720  076F  30FE               	movlw	254
  6721  0770  009B               	movwf	27	;volatile
  6722  0771                     l3838:	
  6723                           
  6724                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  6725  0771  169D               	bsf	29,5	;volatile
  6726                           
  6727                           ;I2C2.c: 45: }
  6728                           
  6729                           ;I2C2.c: 44: break;
  6730  0772  2F7C               	goto	l215
  6731  0773                     l3842:	
  6732  0773  0020               	movlb	0	; select bank0
  6733  0774  0821               	movf	I2C2_Setting@mode,w
  6734                           
  6735                           ; Switch size 1, requested type "space"
  6736                           ; Number of cases is 2, Range of values is 0 to 1
  6737                           ; switch strategies available:
  6738                           ; Name         Instructions Cycles
  6739                           ; simple_byte            7     4 (average)
  6740                           ; direct_byte           10     6 (fixed)
  6741                           ; jumptable            260     6 (fixed)
  6742                           ;	Chosen strategy is simple_byte
  6743  0775  3A00               	xorlw	0	; case 0
  6744  0776  1903               	skipnz
  6745  0777  2F4B               	goto	l211
  6746  0778  3A01               	xorlw	1	; case 1
  6747  0779  1903               	skipnz
  6748  077A  2F62               	goto	l3828
  6749  077B  2F7C               	goto	l215
  6750  077C                     l215:	
  6751                           
  6752                           ;I2C2.c: 46: SSP2IE = 1;
  6753  077C  0021               	movlb	1	; select bank1
  6754  077D  1414               	bsf	20,0	;volatile
  6755                           
  6756                           ;I2C2.c: 47: BCL2IE = 1;
  6757  077E  1494               	bsf	20,1	;volatile
  6758                           
  6759                           ;I2C2.c: 48: SSP2IF = 0;
  6760  077F  0020               	movlb	0	; select bank0
  6761  0780  1014               	bcf	20,0	;volatile
  6762                           
  6763                           ;I2C2.c: 49: BCL2IF = 0;
  6764  0781  1094               	bcf	20,1	;volatile
  6765  0782  0008               	return
  6766  0783                     __end_of_I2C2_Setting:	
  6767                           
  6768                           	psect	text25
  6769  0D52                     __ptext25:	
  6770 ;; *************** function _I2C2_PinInit *****************
  6771 ;; Defined at:
  6772 ;;		line 9 in file "I2C2.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;		None
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      void 
  6779 ;; Registers used:
  6780 ;;		wreg, status,2, status,0
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6786 ;;      Params:         0       0       0       0       0       0
  6787 ;;      Locals:         0       0       0       0       0       0
  6788 ;;      Temps:          0       1       0       0       0       0
  6789 ;;      Totals:         0       1       0       0       0       0
  6790 ;;Total ram usage:        1 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; Hardware stack levels required when called:    3
  6793 ;; This function calls:
  6794 ;;		Nothing
  6795 ;; This function is called by:
  6796 ;;		_I2C2_Setting
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           
  6801                           ;psect for function _I2C2_PinInit
  6802  0D52                     _I2C2_PinInit:	
  6803                           
  6804                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  6805                           
  6806                           ;incstack = 0
  6807                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  6808  0D52  3024               	movlw	36
  6809  0D53  0020               	movlb	0	; select bank0
  6810  0D54  00A0               	movwf	??_I2C2_PinInit
  6811  0D55  0820               	movf	??_I2C2_PinInit,w
  6812  0D56  0021               	movlb	1	; select bank1
  6813  0D57  048D               	iorwf	13,f	;volatile
  6814                           
  6815                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  6816  0D58  30DB               	movlw	219
  6817  0D59  0020               	movlb	0	; select bank0
  6818  0D5A  00A0               	movwf	??_I2C2_PinInit
  6819  0D5B  0820               	movf	??_I2C2_PinInit,w
  6820  0D5C  0023               	movlb	3	; select bank3
  6821  0D5D  058D               	andwf	13,f	;volatile
  6822  0D5E  0008               	return
  6823  0D5F                     __end_of_I2C2_PinInit:	
  6824                           
  6825                           	psect	text26
  6826  0783                     __ptext26:	
  6827 ;; *************** function _I2C1_Setting *****************
  6828 ;; Defined at:
  6829 ;;		line 15 in file "I2C1.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  address         1    wreg     unsigned char 
  6832 ;;  mode            1    1[BANK0 ] enum E3066
  6833 ;;  Speed           1    2[BANK0 ] enum E3070
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;  address         1    4[BANK0 ] unsigned char 
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  1    wreg      void 
  6838 ;; Registers used:
  6839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6845 ;;      Params:         0       2       0       0       0       0
  6846 ;;      Locals:         0       1       0       0       0       0
  6847 ;;      Temps:          0       1       0       0       0       0
  6848 ;;      Totals:         0       4       0       0       0       0
  6849 ;;Total ram usage:        4 bytes
  6850 ;; Hardware stack levels used:    1
  6851 ;; Hardware stack levels required when called:    4
  6852 ;; This function calls:
  6853 ;;		_I2C1_PinInit
  6854 ;; This function is called by:
  6855 ;;		_I2C_Init
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           
  6859                           
  6860                           ;psect for function _I2C1_Setting
  6861  0783                     _I2C1_Setting:	
  6862                           
  6863                           ;incstack = 0
  6864                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6865                           ;I2C1_Setting@address stored from wreg
  6866  0783  0020               	movlb	0	; select bank0
  6867  0784  00A4               	movwf	I2C1_Setting@address
  6868                           
  6869                           ;I2C1.c: 17: I2C1_PinInit();
  6870  0785  318D  2545  3187   	fcall	_I2C1_PinInit
  6871                           
  6872                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  6873  0788  0020               	movlb	0	; select bank0
  6874  0789  0821               	movf	I2C1_Setting@mode,w
  6875  078A  00A3               	movwf	??_I2C1_Setting
  6876  078B  0823               	movf	??_I2C1_Setting,w
  6877  078C  0021               	movlb	1	; select bank1
  6878  078D  00CE               	movwf	(_I2C1_Config^(0+128)+18)
  6879                           
  6880                           ;I2C1.c: 20: switch(mode)
  6881  078E  2FB7               	goto	l3756
  6882  078F                     l74:	
  6883                           ;I2C1.c: 21: {
  6884                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  6885                           
  6886                           
  6887                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  6888  078F  0024               	movlb	4	; select bank4
  6889  0790  1595               	bsf	21,3	;volatile
  6890                           
  6891                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6892  0791  0020               	movlb	0	; select bank0
  6893  0792  0822               	movf	I2C1_Setting@Speed,w
  6894  0793  1D03               	btfss	3,2
  6895  0794  2F99               	goto	l3734
  6896                           
  6897                           ;I2C1.c: 25: {
  6898                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  6899  0795  0024               	movlb	4	; select bank4
  6900  0796  1794               	bsf	20,7	;volatile
  6901                           
  6902                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  6903  0797  304F               	movlw	79
  6904  0798  2FA3               	goto	L9
  6905  0799                     l3734:	
  6906                           ;I2C1.c: 28: }
  6907                           
  6908                           
  6909                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6910  0799  0020               	movlb	0	; select bank0
  6911  079A  0322               	decf	I2C1_Setting@Speed,w
  6912  079B  1D03               	btfss	3,2
  6913  079C  2FA4               	goto	l3740
  6914                           
  6915                           ;I2C1.c: 30: {
  6916                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  6917  079D  307F               	movlw	127
  6918  079E  00A3               	movwf	??_I2C1_Setting
  6919  079F  0823               	movf	??_I2C1_Setting,w
  6920  07A0  0024               	movlb	4	; select bank4
  6921  07A1  0594               	andwf	20,f	;volatile
  6922                           
  6923                           ;I2C1.c: 32: SSP1ADD = 0x13;
  6924  07A2  3013               	movlw	19
  6925  07A3                     L9:	
  6926  07A3  0092               	movwf	18	;volatile
  6927  07A4                     l3740:	
  6928                           
  6929                           ;I2C1.c: 33: }
  6930                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  6931  07A4  0024               	movlb	4	; select bank4
  6932  07A5  2FB5               	goto	l3752
  6933  07A6                     l3742:	
  6934                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  6935                           
  6936                           ;I2C1.c: 35: break;
  6937                           
  6938                           
  6939                           ;I2C1.c: 38: SSP1STAT = 0x00;
  6940  07A6  0024               	movlb	4	; select bank4
  6941  07A7  0194               	clrf	20	;volatile
  6942                           
  6943                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  6944  07A8  3006               	movlw	6
  6945  07A9  0020               	movlb	0	; select bank0
  6946  07AA  00A3               	movwf	??_I2C1_Setting
  6947  07AB  0823               	movf	??_I2C1_Setting,w
  6948  07AC  0024               	movlb	4	; select bank4
  6949  07AD  0495               	iorwf	21,f	;volatile
  6950                           
  6951                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  6952  07AE  1416               	bsf	22,0	;volatile
  6953                           
  6954                           ;I2C1.c: 41: SSP1ADD = address << 1;
  6955  07AF  0020               	movlb	0	; select bank0
  6956  07B0  3524               	lslf	I2C1_Setting@address,w
  6957  07B1  0024               	movlb	4	; select bank4
  6958  07B2  0092               	movwf	18	;volatile
  6959                           
  6960                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  6961  07B3  30FE               	movlw	254
  6962  07B4  0093               	movwf	19	;volatile
  6963  07B5                     l3752:	
  6964                           
  6965                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  6966  07B5  1695               	bsf	21,5	;volatile
  6967                           
  6968                           ;I2C1.c: 45: }
  6969                           
  6970                           ;I2C1.c: 44: break;
  6971  07B6  2FC0               	goto	l78
  6972  07B7                     l3756:	
  6973  07B7  0020               	movlb	0	; select bank0
  6974  07B8  0821               	movf	I2C1_Setting@mode,w
  6975                           
  6976                           ; Switch size 1, requested type "space"
  6977                           ; Number of cases is 2, Range of values is 0 to 1
  6978                           ; switch strategies available:
  6979                           ; Name         Instructions Cycles
  6980                           ; simple_byte            7     4 (average)
  6981                           ; direct_byte           10     6 (fixed)
  6982                           ; jumptable            260     6 (fixed)
  6983                           ;	Chosen strategy is simple_byte
  6984  07B9  3A00               	xorlw	0	; case 0
  6985  07BA  1903               	skipnz
  6986  07BB  2F8F               	goto	l74
  6987  07BC  3A01               	xorlw	1	; case 1
  6988  07BD  1903               	skipnz
  6989  07BE  2FA6               	goto	l3742
  6990  07BF  2FC0               	goto	l78
  6991  07C0                     l78:	
  6992                           
  6993                           ;I2C1.c: 46: SSP1IE = 1;
  6994  07C0  0021               	movlb	1	; select bank1
  6995  07C1  1591               	bsf	17,3	;volatile
  6996                           
  6997                           ;I2C1.c: 47: BCL1IE = 1;
  6998  07C2  1592               	bsf	18,3	;volatile
  6999                           
  7000                           ;I2C1.c: 48: SSP1IF = 0;
  7001  07C3  0020               	movlb	0	; select bank0
  7002  07C4  1191               	bcf	17,3	;volatile
  7003                           
  7004                           ;I2C1.c: 49: BCL1IF = 0;
  7005  07C5  1192               	bcf	18,3	;volatile
  7006  07C6  0008               	return
  7007  07C7                     __end_of_I2C1_Setting:	
  7008                           
  7009                           	psect	text27
  7010  0D45                     __ptext27:	
  7011 ;; *************** function _I2C1_PinInit *****************
  7012 ;; Defined at:
  7013 ;;		line 9 in file "I2C1.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;		None
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, status,2, status,0
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7027 ;;      Params:         0       0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0
  7029 ;;      Temps:          0       1       0       0       0       0
  7030 ;;      Totals:         0       1       0       0       0       0
  7031 ;;Total ram usage:        1 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; Hardware stack levels required when called:    3
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_I2C1_Setting
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           
  7042                           ;psect for function _I2C1_PinInit
  7043  0D45                     _I2C1_PinInit:	
  7044                           
  7045                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  7046                           
  7047                           ;incstack = 0
  7048                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  7049  0D45  3012               	movlw	18
  7050  0D46  0020               	movlb	0	; select bank0
  7051  0D47  00A0               	movwf	??_I2C1_PinInit
  7052  0D48  0820               	movf	??_I2C1_PinInit,w
  7053  0D49  0021               	movlb	1	; select bank1
  7054  0D4A  048D               	iorwf	13,f	;volatile
  7055                           
  7056                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  7057  0D4B  30ED               	movlw	237
  7058  0D4C  0020               	movlb	0	; select bank0
  7059  0D4D  00A0               	movwf	??_I2C1_PinInit
  7060  0D4E  0820               	movf	??_I2C1_PinInit,w
  7061  0D4F  0023               	movlb	3	; select bank3
  7062  0D50  058D               	andwf	13,f	;volatile
  7063  0D51  0008               	return
  7064  0D52                     __end_of_I2C1_PinInit:	
  7065                           
  7066                           	psect	text28
  7067  0EC7                     __ptext28:	
  7068 ;; *************** function _Buzzer_Init *****************
  7069 ;; Defined at:
  7070 ;;		line 11 in file "Buzzer.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;		None
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;		None
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  1    wreg      void 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7084 ;;      Params:         0       0       0       0       0       0
  7085 ;;      Locals:         0       0       0       0       0       0
  7086 ;;      Temps:          0       1       0       0       0       0
  7087 ;;      Totals:         0       1       0       0       0       0
  7088 ;;Total ram usage:        1 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; Hardware stack levels required when called:    3
  7091 ;; This function calls:
  7092 ;;		Nothing
  7093 ;; This function is called by:
  7094 ;;		_main
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           
  7099                           ;psect for function _Buzzer_Init
  7100  0EC7                     _Buzzer_Init:	
  7101                           
  7102                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  7103                           
  7104                           ;incstack = 0
  7105                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  7106  0EC7  307F               	movlw	127
  7107  0EC8  0020               	movlb	0	; select bank0
  7108  0EC9  00A0               	movwf	??_Buzzer_Init
  7109  0ECA  0820               	movf	??_Buzzer_Init,w
  7110  0ECB  0021               	movlb	1	; select bank1
  7111  0ECC  058C               	andwf	12,f	;volatile
  7112                           
  7113                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  7114  0ECD  307F               	movlw	127
  7115  0ECE  0020               	movlb	0	; select bank0
  7116  0ECF  00A0               	movwf	??_Buzzer_Init
  7117  0ED0  0820               	movf	??_Buzzer_Init,w
  7118  0ED1  0023               	movlb	3	; select bank3
  7119  0ED2  058C               	andwf	12,f	;volatile
  7120                           
  7121                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  7122  0ED3  0022               	movlb	2	; select bank2
  7123  0ED4  159D               	bsf	29,3	;volatile
  7124                           
  7125                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  7126  0ED5  0020               	movlb	0	; select bank0
  7127  0ED6  081C               	movf	28,w	;volatile
  7128                           
  7129                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  7130  0ED7  149C               	bsf	28,1	;volatile
  7131                           
  7132                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  7133  0ED8  151C               	bsf	28,2	;volatile
  7134                           
  7135                           ;Buzzer.c: 21: TMR2 = 0x00;
  7136  0ED9  019A               	clrf	26	;volatile
  7137                           
  7138                           ;Buzzer.c: 22: PR2 = 0xFF;
  7139  0EDA  30FF               	movlw	255
  7140  0EDB  009B               	movwf	27	;volatile
  7141                           
  7142                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  7143  0EDC  303F               	movlw	63
  7144  0EDD  00A0               	movwf	??_Buzzer_Init
  7145  0EDE  0820               	movf	??_Buzzer_Init,w
  7146  0EDF  0025               	movlb	5	; select bank5
  7147  0EE0  059A               	andwf	26,f	;volatile
  7148                           
  7149                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  7150  0EE1  300C               	movlw	12
  7151  0EE2  0020               	movlb	0	; select bank0
  7152  0EE3  00A0               	movwf	??_Buzzer_Init
  7153  0EE4  0820               	movf	??_Buzzer_Init,w
  7154  0EE5  0025               	movlb	5	; select bank5
  7155  0EE6  049A               	iorwf	26,f	;volatile
  7156                           
  7157                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  7158  0EE7  30F3               	movlw	243
  7159  0EE8  0020               	movlb	0	; select bank0
  7160  0EE9  00A0               	movwf	??_Buzzer_Init
  7161  0EEA  0820               	movf	??_Buzzer_Init,w
  7162  0EEB  0025               	movlb	5	; select bank5
  7163  0EEC  059E               	andwf	30,f	;volatile
  7164                           
  7165                           ;Buzzer.c: 28: CCPR2L = 0x00;
  7166  0EED  0198               	clrf	24	;volatile
  7167  0EEE  0008               	return
  7168  0EEF                     __end_of_Buzzer_Init:	
  7169                           
  7170                           	psect	text29
  7171  0DE8                     __ptext29:	
  7172 ;; *************** function _Basic_Init *****************
  7173 ;; Defined at:
  7174 ;;		line 67 in file "main.c"
  7175 ;; Parameters:    Size  Location     Type
  7176 ;;		None
  7177 ;; Auto vars:     Size  Location     Type
  7178 ;;		None
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  1    wreg      char 
  7181 ;; Registers used:
  7182 ;;		wreg, status,2
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7188 ;;      Params:         0       0       0       0       0       0
  7189 ;;      Locals:         0       0       0       0       0       0
  7190 ;;      Temps:          0       0       0       0       0       0
  7191 ;;      Totals:         0       0       0       0       0       0
  7192 ;;Total ram usage:        0 bytes
  7193 ;; Hardware stack levels used:    1
  7194 ;; Hardware stack levels required when called:    3
  7195 ;; This function calls:
  7196 ;;		Nothing
  7197 ;; This function is called by:
  7198 ;;		_main
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           
  7203                           ;psect for function _Basic_Init
  7204  0DE8                     _Basic_Init:	
  7205                           
  7206                           ;main.c: 69: OSCCON = 0xF0;
  7207                           
  7208                           ;incstack = 0
  7209                           ; Regs used in _Basic_Init: [wreg+status,2]
  7210  0DE8  30F0               	movlw	240
  7211  0DE9  0021               	movlb	1	; select bank1
  7212  0DEA  0099               	movwf	25	;volatile
  7213                           
  7214                           ;main.c: 73: TRISA = 0x07;
  7215  0DEB  3007               	movlw	7
  7216  0DEC  008C               	movwf	12	;volatile
  7217                           
  7218                           ;main.c: 74: ANSELA = 0x07;
  7219  0DED  3007               	movlw	7
  7220  0DEE  0023               	movlb	3	; select bank3
  7221  0DEF  008C               	movwf	12	;volatile
  7222                           
  7223                           ;main.c: 76: TRISB = 0x40;
  7224  0DF0  3040               	movlw	64
  7225  0DF1  0021               	movlb	1	; select bank1
  7226  0DF2  008D               	movwf	13	;volatile
  7227                           
  7228                           ;main.c: 77: ANSELB = 0x00;
  7229  0DF3  0023               	movlb	3	; select bank3
  7230  0DF4  018D               	clrf	13	;volatile
  7231                           
  7232                           ;main.c: 79: APFCON0 = 0x08;
  7233  0DF5  3008               	movlw	8
  7234  0DF6  0022               	movlb	2	; select bank2
  7235  0DF7  009D               	movwf	29	;volatile
  7236                           
  7237                           ;main.c: 80: APFCON1 = 0x00;
  7238  0DF8  019E               	clrf	30	;volatile
  7239                           
  7240                           ;main.c: 82: PORTA = 0x00;
  7241  0DF9  0020               	movlb	0	; select bank0
  7242  0DFA  018C               	clrf	12	;volatile
  7243                           
  7244                           ;main.c: 83: PORTB = 0x00;
  7245  0DFB  018D               	clrf	13	;volatile
  7246  0DFC  0008               	return
  7247  0DFD                     __end_of_Basic_Init:	
  7248                           ;main.c: 85: return 0;
  7249                           ;	Return value of _Basic_Init is never used
  7250                           
  7251                           
  7252                           	psect	intentry
  7253  0004                     __pintentry:	
  7254 ;; *************** function _Handler *****************
  7255 ;; Defined at:
  7256 ;;		line 88 in file "main.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;		None
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7270 ;;      Params:         0       0       0       0       0       0
  7271 ;;      Locals:         0       0       0       0       0       0
  7272 ;;      Temps:          1       0       0       0       0       0
  7273 ;;      Totals:         1       0       0       0       0       0
  7274 ;;Total ram usage:        1 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:    2
  7277 ;; This function calls:
  7278 ;;		_Buzzer_Handler
  7279 ;;		_CPSx_Read
  7280 ;;		_I2C_CommonInterrupt
  7281 ;;		_Timer1_Handler
  7282 ;;		_Timer4_Handler
  7283 ;;		_mTouch_IntervalIncrement
  7284 ;; This function is called by:
  7285 ;;		Interrupt level 1
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289  0004                     _Handler:	
  7290                           
  7291                           ;incstack = 0
  7292  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7293                           
  7294                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7295  0005  3180               	pagesel	$
  7296  0006  0020               	movlb	0	; select bank0
  7297  0007  087F               	movf	127,w
  7298  0008  00F5               	movwf	??_Handler
  7299                           
  7300                           ;main.c: 90: if(Timer4_Handler())
  7301  0009  3187  27F4  3180   	fcall	_Timer4_Handler
  7302  000C  3A00               	xorlw	0
  7303  000D  1903               	skipnz
  7304  000E  2818               	goto	i1l3586
  7305                           
  7306                           ;main.c: 91: {
  7307                           ;main.c: 92: CPSx_Read();
  7308  000F  318E  26A2  3180   	fcall	_CPSx_Read
  7309                           
  7310                           ;main.c: 93: Buzzer_Handler();
  7311  0012  318D  25D3  3180   	fcall	_Buzzer_Handler
  7312                           
  7313                           ;main.c: 94: mTouch_IntervalIncrement();
  7314  0015  318D  259C  3180   	fcall	_mTouch_IntervalIncrement
  7315  0018                     i1l3586:	
  7316                           
  7317                           ;main.c: 95: }
  7318                           ;main.c: 97: Timer1_Handler();
  7319  0018  318D  2532  3180   	fcall	_Timer1_Handler
  7320                           
  7321                           ;main.c: 98: I2C_CommonInterrupt();
  7322  001B  318D  2519         	fcall	_I2C_CommonInterrupt
  7323  001D  0875               	movf	??_Handler,w
  7324  001E  0020               	movlb	0	; select bank0
  7325  001F  00FF               	movwf	127
  7326  0020  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7327  0021  0009               	retfie
  7328  0022                     __end_of_Handler:	
  7329                           
  7330                           	psect	text31
  7331  0D9C                     __ptext31:	
  7332 ;; *************** function _mTouch_IntervalIncrement *****************
  7333 ;; Defined at:
  7334 ;;		line 101 in file "main.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;		None
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;		None
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  1    wreg      void 
  7341 ;; Registers used:
  7342 ;;		wreg, status,2, status,0
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7348 ;;      Params:         0       0       0       0       0       0
  7349 ;;      Locals:         0       0       0       0       0       0
  7350 ;;      Temps:          0       0       0       0       0       0
  7351 ;;      Totals:         0       0       0       0       0       0
  7352 ;;Total ram usage:        0 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; This function calls:
  7355 ;;		Nothing
  7356 ;; This function is called by:
  7357 ;;		_Handler
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           
  7362                           ;psect for function _mTouch_IntervalIncrement
  7363  0D9C                     _mTouch_IntervalIncrement:	
  7364                           
  7365                           ;main.c: 103: if(mTouch_Interval[0]>0)
  7366                           
  7367                           ;incstack = 0
  7368                           ; Regs used in _mTouch_IntervalIncrement: [wreg+status,2+status,0]
  7369  0D9C  0020               	movlb	0	; select bank0
  7370  0D9D  0867               	movf	_mTouch_Interval,w
  7371  0D9E  1903               	btfsc	3,2
  7372  0D9F  2DA2               	goto	i1l603
  7373                           
  7374                           ;main.c: 104: mTouch_Interval[0]--;
  7375  0DA0  3001               	movlw	1
  7376  0DA1  02E7               	subwf	_mTouch_Interval,f
  7377  0DA2                     i1l603:	
  7378                           
  7379                           ;main.c: 105: if(mTouch_Interval[1]>0)
  7380  0DA2  0868               	movf	_mTouch_Interval+1,w
  7381  0DA3  1903               	btfsc	3,2
  7382  0DA4  2DA7               	goto	i1l604
  7383                           
  7384                           ;main.c: 106: mTouch_Interval[1]--;
  7385  0DA5  3001               	movlw	1
  7386  0DA6  02E8               	subwf	_mTouch_Interval+1,f
  7387  0DA7                     i1l604:	
  7388                           
  7389                           ;main.c: 107: if(mTouch_Interval[2]>0)
  7390  0DA7  0869               	movf	_mTouch_Interval+2,w
  7391  0DA8  1903               	btfsc	3,2
  7392  0DA9  0008               	return
  7393                           
  7394                           ;main.c: 108: mTouch_Interval[2]--;
  7395  0DAA  3001               	movlw	1
  7396  0DAB  02E9               	subwf	_mTouch_Interval+2,f
  7397  0DAC  0008               	return
  7398  0DAD                     __end_of_mTouch_IntervalIncrement:	
  7399                           
  7400                           	psect	text32
  7401  07F4                     __ptext32:	
  7402 ;; *************** function _Timer4_Handler *****************
  7403 ;; Defined at:
  7404 ;;		line 17 in file "Timer4.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;		None
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;		None
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  1    wreg      unsigned char 
  7411 ;; Registers used:
  7412 ;;		wreg
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7418 ;;      Params:         0       0       0       0       0       0
  7419 ;;      Locals:         0       0       0       0       0       0
  7420 ;;      Temps:          0       0       0       0       0       0
  7421 ;;      Totals:         0       0       0       0       0       0
  7422 ;;Total ram usage:        0 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_Handler
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           
  7432                           ;psect for function _Timer4_Handler
  7433  07F4                     _Timer4_Handler:	
  7434                           
  7435                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  7436                           
  7437                           ;incstack = 0
  7438                           ; Regs used in _Timer4_Handler: [wreg]
  7439  07F4  0021               	movlb	1	; select bank1
  7440  07F5  1C93               	btfss	19,1	;volatile
  7441  07F6  2FFD               	goto	i1l2140
  7442  07F7  0020               	movlb	0	; select bank0
  7443  07F8  1C93               	btfss	19,1	;volatile
  7444  07F9  2FFD               	goto	i1l2140
  7445                           
  7446                           ;Timer4.c: 20: {
  7447                           ;Timer4.c: 21: TMR4IF = 0;
  7448  07FA  1093               	bcf	19,1	;volatile
  7449                           
  7450                           ;Timer4.c: 22: return 1;
  7451  07FB  3001               	movlw	1
  7452  07FC  0008               	return
  7453  07FD                     i1l2140:	
  7454                           
  7455                           ;Timer4.c: 23: }
  7456                           ;Timer4.c: 24: return 0;
  7457  07FD  3000               	movlw	0
  7458  07FE  0008               	return
  7459  07FF                     __end_of_Timer4_Handler:	
  7460                           
  7461                           	psect	text33
  7462  0D32                     __ptext33:	
  7463 ;; *************** function _Timer1_Handler *****************
  7464 ;; Defined at:
  7465 ;;		line 33 in file "Timer1.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;		None
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;		None
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  1    wreg      unsigned char 
  7472 ;; Registers used:
  7473 ;;		None
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7479 ;;      Params:         0       0       0       0       0       0
  7480 ;;      Locals:         0       0       0       0       0       0
  7481 ;;      Temps:          0       0       0       0       0       0
  7482 ;;      Totals:         0       0       0       0       0       0
  7483 ;;Total ram usage:        0 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; This function calls:
  7486 ;;		Nothing
  7487 ;; This function is called by:
  7488 ;;		_Handler
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           
  7493                           ;psect for function _Timer1_Handler
  7494  0D32                     _Timer1_Handler:	
  7495                           
  7496                           ;Timer1.c: 35: if(TMR1IF&&TMR1IE)
  7497                           
  7498                           ;incstack = 0
  7499                           ; Regs used in _Timer1_Handler: []
  7500  0D32  0020               	movlb	0	; select bank0
  7501  0D33  1C11               	btfss	17,0	;volatile
  7502  0D34  0008               	return
  7503  0D35  0021               	movlb	1	; select bank1
  7504  0D36  1C11               	btfss	17,0	;volatile
  7505  0D37  0008               	return
  7506                           
  7507                           ;Timer1.c: 36: {
  7508                           ;Timer1.c: 37: TMR1IF = 0;
  7509  0D38  0020               	movlb	0	; select bank0
  7510  0D39  1011               	bcf	17,0	;volatile
  7511                           
  7512                           ;Timer1.c: 38: return 1;
  7513                           ;	Return value of _Timer1_Handler is never used
  7514  0D3A  0008               	return
  7515  0D3B                     __end_of_Timer1_Handler:	
  7516                           ;Timer1.c: 39: }
  7517                           ;Timer1.c: 40: return 0;
  7518                           ;	Return value of _Timer1_Handler is never used
  7519                           
  7520                           
  7521                           	psect	text34
  7522  0D19                     __ptext34:	
  7523 ;; *************** function _I2C_CommonInterrupt *****************
  7524 ;; Defined at:
  7525 ;;		line 58 in file "I2C_Common.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;		None
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;		None
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  1    wreg      void 
  7532 ;; Registers used:
  7533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7539 ;;      Params:         0       0       0       0       0       0
  7540 ;;      Locals:         0       0       0       0       0       0
  7541 ;;      Temps:          0       0       0       0       0       0
  7542 ;;      Totals:         0       0       0       0       0       0
  7543 ;;Total ram usage:        0 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:    1
  7546 ;; This function calls:
  7547 ;;		_I2C1_Interrupt
  7548 ;;		_I2C2_Interrupt
  7549 ;; This function is called by:
  7550 ;;		_Handler
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           
  7554                           
  7555                           ;psect for function _I2C_CommonInterrupt
  7556  0D19                     _I2C_CommonInterrupt:	
  7557                           
  7558                           ;I2C_Common.c: 60: I2C1_Interrupt();
  7559                           
  7560                           ;incstack = 0
  7561                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7562  0D19  3186  2654  318D   	fcall	_I2C1_Interrupt
  7563                           
  7564                           ;I2C_Common.c: 61: I2C2_Interrupt();
  7565  0D1C  3186  2600         	fcall	_I2C2_Interrupt
  7566  0D1E  0008               	return
  7567  0D1F                     __end_of_I2C_CommonInterrupt:	
  7568                           
  7569                           	psect	text35
  7570  0600                     __ptext35:	
  7571 ;; *************** function _I2C2_Interrupt *****************
  7572 ;; Defined at:
  7573 ;;		line 152 in file "I2C2.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;		None
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;		None
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  1    wreg      void 
  7580 ;; Registers used:
  7581 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7587 ;;      Params:         0       0       0       0       0       0
  7588 ;;      Locals:         0       0       0       0       0       0
  7589 ;;      Temps:          1       0       0       0       0       0
  7590 ;;      Totals:         1       0       0       0       0       0
  7591 ;;Total ram usage:        1 bytes
  7592 ;; Hardware stack levels used:    1
  7593 ;; This function calls:
  7594 ;;		Nothing
  7595 ;; This function is called by:
  7596 ;;		_I2C_CommonInterrupt
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           
  7601                           ;psect for function _I2C2_Interrupt
  7602  0600                     _I2C2_Interrupt:	
  7603                           
  7604                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  7605                           
  7606                           ;incstack = 0
  7607                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7608  0600  0020               	movlb	0	; select bank0
  7609  0601  1C14               	btfss	20,0	;volatile
  7610  0602  2E4C               	goto	i1l2940
  7611  0603  0021               	movlb	1	; select bank1
  7612  0604  1C14               	btfss	20,0	;volatile
  7613  0605  2E4C               	goto	i1l2940
  7614                           
  7615                           ;I2C2.c: 155: {
  7616                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  7617  0606  0024               	movlb	4	; select bank4
  7618  0607  1E9C               	btfss	28,5	;volatile
  7619  0608  2E23               	goto	i1l294
  7620                           
  7621                           ;I2C2.c: 157: {
  7622                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  7623  0609  1D1C               	btfss	28,2	;volatile
  7624  060A  2E16               	goto	i1l2916
  7625                           
  7626                           ;I2C2.c: 159: {
  7627                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  7628  060B  1B1E               	btfsc	30,6	;volatile
  7629  060C  2E4A               	goto	i1l2938
  7630  060D                     i1l2908:	
  7631                           ;I2C2.c: 161: {
  7632                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7633                           
  7634  060D  081C               	movf	28,w	;volatile
  7635  060E  3901               	andlw	1
  7636  060F  00F0               	movwf	??_I2C2_Interrupt
  7637  0610  0E1D               	swapf	29,w	;volatile
  7638  0611  3901               	andlw	1
  7639  0612  0470               	iorwf	??_I2C2_Interrupt,w
  7640  0613  1D03               	btfss	3,2
  7641  0614  2E0D               	goto	i1l2908
  7642  0615  2E36               	goto	L10
  7643  0616                     i1l2916:	
  7644                           ;I2C2.c: 166: }
  7645                           ;I2C2.c: 167: }
  7646                           
  7647                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  7648                           
  7649                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  7650                           
  7651                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  7652                           
  7653                           
  7654                           ;I2C2.c: 168: else
  7655                           ;I2C2.c: 169: {
  7656                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  7657  0616  0819               	movf	25,w	;volatile
  7658  0617  00F0               	movwf	??_I2C2_Interrupt
  7659  0618  0021               	movlb	1	; select bank1
  7660  0619  083A               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  7661  061A  0086               	movwf	6
  7662  061B  0187               	clrf	7
  7663  061C  0870               	movf	??_I2C2_Interrupt,w
  7664  061D  0081               	movwf	1
  7665                           
  7666                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  7667  061E  3001               	movlw	1
  7668  061F  00F0               	movwf	??_I2C2_Interrupt
  7669  0620  0870               	movf	??_I2C2_Interrupt,w
  7670  0621  07BA               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  7671  0622  2E48               	goto	i1l2936
  7672  0623                     i1l294:	
  7673                           ;I2C2.c: 173: }
  7674                           ;I2C2.c: 174: }
  7675                           
  7676                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  7677                           
  7678                           
  7679                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  7680  0623  1A9C               	btfsc	28,5	;volatile
  7681  0624  2E4A               	goto	i1l2938
  7682                           
  7683                           ;I2C2.c: 176: {
  7684                           ;I2C2.c: 177: SSP2BUF;
  7685  0625  0819               	movf	25,w	;volatile
  7686                           
  7687                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  7688  0626  1D1C               	btfss	28,2	;volatile
  7689  0627  2E43               	goto	i1l2934
  7690                           
  7691                           ;I2C2.c: 180: {
  7692                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  7693  0628  30A9               	movlw	(low (_I2C2_Config| 0))& (0+255)
  7694  0629  00F0               	movwf	??_I2C2_Interrupt
  7695  062A  0870               	movf	??_I2C2_Interrupt,w
  7696  062B  0021               	movlb	1	; select bank1
  7697  062C  00B9               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  7698  062D                     i1l2928:	
  7699                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7700                           
  7701  062D  0024               	movlb	4	; select bank4
  7702  062E  081C               	movf	28,w	;volatile
  7703  062F  3901               	andlw	1
  7704  0630  00F0               	movwf	??_I2C2_Interrupt
  7705  0631  0E1D               	swapf	29,w	;volatile
  7706  0632  3901               	andlw	1
  7707  0633  0470               	iorwf	??_I2C2_Interrupt,w
  7708  0634  1D03               	btfss	3,2
  7709  0635  2E2D               	goto	i1l2928
  7710  0636                     L10:	
  7711                           
  7712                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  7713  0636  0021               	movlb	1	; select bank1
  7714  0637  0839               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  7715  0638  0086               	movwf	6
  7716  0639  0187               	clrf	7
  7717  063A  0801               	movf	1,w
  7718  063B  0024               	movlb	4	; select bank4
  7719  063C  0099               	movwf	25	;volatile
  7720                           
  7721                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  7722  063D  3001               	movlw	1
  7723  063E  00F0               	movwf	??_I2C2_Interrupt
  7724  063F  0870               	movf	??_I2C2_Interrupt,w
  7725  0640  0021               	movlb	1	; select bank1
  7726  0641  07B9               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  7727                           
  7728                           ;I2C2.c: 186: }
  7729  0642  2E48               	goto	i1l2936
  7730  0643                     i1l2934:	
  7731                           
  7732                           ;I2C2.c: 187: else
  7733                           ;I2C2.c: 188: {
  7734                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  7735  0643  30B1               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  7736  0644  00F0               	movwf	??_I2C2_Interrupt
  7737  0645  0870               	movf	??_I2C2_Interrupt,w
  7738  0646  0021               	movlb	1	; select bank1
  7739  0647  00BA               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  7740  0648                     i1l2936:	
  7741                           
  7742                           ;I2C2.c: 190: }
  7743                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  7744  0648  0024               	movlb	4	; select bank4
  7745  0649  161D               	bsf	29,4	;volatile
  7746  064A                     i1l2938:	
  7747                           
  7748                           ;I2C2.c: 192: }
  7749                           ;I2C2.c: 193: SSP2IF = 0;
  7750  064A  0020               	movlb	0	; select bank0
  7751  064B  1014               	bcf	20,0	;volatile
  7752  064C                     i1l2940:	
  7753                           
  7754                           ;I2C2.c: 194: }
  7755                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  7756  064C  0021               	movlb	1	; select bank1
  7757  064D  1C94               	btfss	20,1	;volatile
  7758  064E  0008               	return
  7759  064F  0020               	movlb	0	; select bank0
  7760  0650  1C94               	btfss	20,1	;volatile
  7761  0651  0008               	return
  7762                           
  7763                           ;I2C2.c: 197: BCL2IF = 0;
  7764  0652  1094               	bcf	20,1	;volatile
  7765  0653  0008               	return
  7766  0654                     __end_of_I2C2_Interrupt:	
  7767                           
  7768                           	psect	text36
  7769  0654                     __ptext36:	
  7770 ;; *************** function _I2C1_Interrupt *****************
  7771 ;; Defined at:
  7772 ;;		line 152 in file "I2C1.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;		None
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;		None
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  1    wreg      void 
  7779 ;; Registers used:
  7780 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7786 ;;      Params:         0       0       0       0       0       0
  7787 ;;      Locals:         0       0       0       0       0       0
  7788 ;;      Temps:          1       0       0       0       0       0
  7789 ;;      Totals:         1       0       0       0       0       0
  7790 ;;Total ram usage:        1 bytes
  7791 ;; Hardware stack levels used:    1
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_I2C_CommonInterrupt
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           
  7800                           ;psect for function _I2C1_Interrupt
  7801  0654                     _I2C1_Interrupt:	
  7802                           
  7803                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  7804                           
  7805                           ;incstack = 0
  7806                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7807  0654  0020               	movlb	0	; select bank0
  7808  0655  1D91               	btfss	17,3	;volatile
  7809  0656  2EA0               	goto	i1l2890
  7810  0657  0021               	movlb	1	; select bank1
  7811  0658  1D91               	btfss	17,3	;volatile
  7812  0659  2EA0               	goto	i1l2890
  7813                           
  7814                           ;I2C1.c: 155: {
  7815                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  7816  065A  0024               	movlb	4	; select bank4
  7817  065B  1E94               	btfss	20,5	;volatile
  7818  065C  2E77               	goto	i1l157
  7819                           
  7820                           ;I2C1.c: 157: {
  7821                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  7822  065D  1D14               	btfss	20,2	;volatile
  7823  065E  2E6A               	goto	i1l2866
  7824                           
  7825                           ;I2C1.c: 159: {
  7826                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  7827  065F  1B16               	btfsc	22,6	;volatile
  7828  0660  2E9E               	goto	i1l2888
  7829  0661                     i1l2858:	
  7830                           ;I2C1.c: 161: {
  7831                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  7832                           
  7833  0661  0814               	movf	20,w	;volatile
  7834  0662  3901               	andlw	1
  7835  0663  00F0               	movwf	??_I2C1_Interrupt
  7836  0664  0E15               	swapf	21,w	;volatile
  7837  0665  3901               	andlw	1
  7838  0666  0470               	iorwf	??_I2C1_Interrupt,w
  7839  0667  1D03               	btfss	3,2
  7840  0668  2E61               	goto	i1l2858
  7841  0669  2E8A               	goto	L11
  7842  066A                     i1l2866:	
  7843                           ;I2C1.c: 166: }
  7844                           ;I2C1.c: 167: }
  7845                           
  7846                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  7847                           
  7848                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  7849                           
  7850                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  7851                           
  7852                           
  7853                           ;I2C1.c: 168: else
  7854                           ;I2C1.c: 169: {
  7855                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  7856  066A  0811               	movf	17,w	;volatile
  7857  066B  00F0               	movwf	??_I2C1_Interrupt
  7858  066C  0021               	movlb	1	; select bank1
  7859  066D  084D               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  7860  066E  0086               	movwf	6
  7861  066F  0187               	clrf	7
  7862  0670  0870               	movf	??_I2C1_Interrupt,w
  7863  0671  0081               	movwf	1
  7864                           
  7865                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  7866  0672  3001               	movlw	1
  7867  0673  00F0               	movwf	??_I2C1_Interrupt
  7868  0674  0870               	movf	??_I2C1_Interrupt,w
  7869  0675  07CD               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  7870  0676  2E9C               	goto	i1l2886
  7871  0677                     i1l157:	
  7872                           ;I2C1.c: 173: }
  7873                           ;I2C1.c: 174: }
  7874                           
  7875                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  7876                           
  7877                           
  7878                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  7879  0677  1A94               	btfsc	20,5	;volatile
  7880  0678  2E9E               	goto	i1l2888
  7881                           
  7882                           ;I2C1.c: 176: {
  7883                           ;I2C1.c: 177: SSP1BUF;
  7884  0679  0811               	movf	17,w	;volatile
  7885                           
  7886                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  7887  067A  1D14               	btfss	20,2	;volatile
  7888  067B  2E97               	goto	i1l2884
  7889                           
  7890                           ;I2C1.c: 180: {
  7891                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  7892  067C  30BC               	movlw	(low (_I2C1_Config| 0))& (0+255)
  7893  067D  00F0               	movwf	??_I2C1_Interrupt
  7894  067E  0870               	movf	??_I2C1_Interrupt,w
  7895  067F  0021               	movlb	1	; select bank1
  7896  0680  00CC               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  7897  0681                     i1l2878:	
  7898                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  7899                           
  7900  0681  0024               	movlb	4	; select bank4
  7901  0682  0814               	movf	20,w	;volatile
  7902  0683  3901               	andlw	1
  7903  0684  00F0               	movwf	??_I2C1_Interrupt
  7904  0685  0E15               	swapf	21,w	;volatile
  7905  0686  3901               	andlw	1
  7906  0687  0470               	iorwf	??_I2C1_Interrupt,w
  7907  0688  1D03               	btfss	3,2
  7908  0689  2E81               	goto	i1l2878
  7909  068A                     L11:	
  7910                           
  7911                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  7912  068A  0021               	movlb	1	; select bank1
  7913  068B  084C               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  7914  068C  0086               	movwf	6
  7915  068D  0187               	clrf	7
  7916  068E  0801               	movf	1,w
  7917  068F  0024               	movlb	4	; select bank4
  7918  0690  0091               	movwf	17	;volatile
  7919                           
  7920                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  7921  0691  3001               	movlw	1
  7922  0692  00F0               	movwf	??_I2C1_Interrupt
  7923  0693  0870               	movf	??_I2C1_Interrupt,w
  7924  0694  0021               	movlb	1	; select bank1
  7925  0695  07CC               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  7926                           
  7927                           ;I2C1.c: 186: }
  7928  0696  2E9C               	goto	i1l2886
  7929  0697                     i1l2884:	
  7930                           
  7931                           ;I2C1.c: 187: else
  7932                           ;I2C1.c: 188: {
  7933                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  7934  0697  30C4               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  7935  0698  00F0               	movwf	??_I2C1_Interrupt
  7936  0699  0870               	movf	??_I2C1_Interrupt,w
  7937  069A  0021               	movlb	1	; select bank1
  7938  069B  00CD               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  7939  069C                     i1l2886:	
  7940                           
  7941                           ;I2C1.c: 190: }
  7942                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  7943  069C  0024               	movlb	4	; select bank4
  7944  069D  1615               	bsf	21,4	;volatile
  7945  069E                     i1l2888:	
  7946                           
  7947                           ;I2C1.c: 192: }
  7948                           ;I2C1.c: 193: SSP1IF = 0;
  7949  069E  0020               	movlb	0	; select bank0
  7950  069F  1191               	bcf	17,3	;volatile
  7951  06A0                     i1l2890:	
  7952                           
  7953                           ;I2C1.c: 194: }
  7954                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  7955  06A0  0021               	movlb	1	; select bank1
  7956  06A1  1D92               	btfss	18,3	;volatile
  7957  06A2  0008               	return
  7958  06A3  0020               	movlb	0	; select bank0
  7959  06A4  1D92               	btfss	18,3	;volatile
  7960  06A5  0008               	return
  7961                           
  7962                           ;I2C1.c: 197: BCL1IF = 0;
  7963  06A6  1192               	bcf	18,3	;volatile
  7964  06A7  0008               	return
  7965  06A8                     __end_of_I2C1_Interrupt:	
  7966                           
  7967                           	psect	text37
  7968  0EA2                     __ptext37:	
  7969 ;; *************** function _CPSx_Read *****************
  7970 ;; Defined at:
  7971 ;;		line 29 in file "mTouch.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;		None
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;		None
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  1    wreg      void 
  7978 ;; Registers used:
  7979 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7985 ;;      Params:         0       0       0       0       0       0
  7986 ;;      Locals:         0       0       0       0       0       0
  7987 ;;      Temps:          1       0       0       0       0       0
  7988 ;;      Totals:         1       0       0       0       0       0
  7989 ;;Total ram usage:        1 bytes
  7990 ;; Hardware stack levels used:    1
  7991 ;; This function calls:
  7992 ;;		Nothing
  7993 ;; This function is called by:
  7994 ;;		_Handler
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           
  7999                           ;psect for function _CPSx_Read
  8000  0EA2                     _CPSx_Read:	
  8001                           
  8002                           ;mTouch.c: 31: static uint8_t channel=0;
  8003                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  8004                           
  8005                           ;incstack = 0
  8006                           ; Regs used in _CPSx_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  8007  0EA2  087A               	movf	CPSx_Read@channel,w
  8008  0EA3  3EA0               	addlw	(low (_CPS_Data| 0))& (0+255)
  8009  0EA4  0086               	movwf	6
  8010  0EA5  0187               	clrf	7
  8011  0EA6  0801               	movf	1,w
  8012  0EA7  00F0               	movwf	??_CPSx_Read
  8013  0EA8  087A               	movf	CPSx_Read@channel,w
  8014  0EA9  3EA3               	addlw	(low (_CPS_PreData| 0))& (0+255)
  8015  0EAA  0086               	movwf	6
  8016  0EAB  0187               	clrf	7
  8017  0EAC  0870               	movf	??_CPSx_Read,w
  8018  0EAD  0081               	movwf	1
  8019                           
  8020                           ;mTouch.c: 34: CPSCON0 &= ~(0x01<<7);;
  8021  0EAE  307F               	movlw	127
  8022  0EAF  00F0               	movwf	??_CPSx_Read
  8023  0EB0  0870               	movf	??_CPSx_Read,w
  8024  0EB1  0020               	movlb	0	; select bank0
  8025  0EB2  059E               	andwf	30,f	;volatile
  8026                           
  8027                           ;mTouch.c: 35: CPS_Data[channel] = TMR0;
  8028  0EB3  0815               	movf	21,w	;volatile
  8029  0EB4  00F0               	movwf	??_CPSx_Read
  8030  0EB5  087A               	movf	CPSx_Read@channel,w
  8031  0EB6  3EA0               	addlw	(low (_CPS_Data| 0))& (0+255)
  8032  0EB7  0086               	movwf	6
  8033  0EB8  0187               	clrf	7
  8034  0EB9  0870               	movf	??_CPSx_Read,w
  8035  0EBA  0081               	movwf	1
  8036                           
  8037                           ;mTouch.c: 36: TMR0 = 0x00;
  8038  0EBB  0195               	clrf	21	;volatile
  8039                           
  8040                           ;mTouch.c: 37: CPSCON0 |= (0x01<<7);;
  8041  0EBC  179E               	bsf	30,7	;volatile
  8042                           
  8043                           ;mTouch.c: 39: if(channel++>2)channel = 0;
  8044  0EBD  087A               	movf	CPSx_Read@channel,w
  8045  0EBE  0AFA               	incf	CPSx_Read@channel,f
  8046  0EBF  00F0               	movwf	??_CPSx_Read
  8047  0EC0  3003               	movlw	3
  8048  0EC1  0270               	subwf	??_CPSx_Read,w
  8049  0EC2  1803               	btfsc	3,0
  8050  0EC3  01FA               	clrf	CPSx_Read@channel
  8051                           
  8052                           ;mTouch.c: 40: CPSCON1 = (uint8_t)channel;
  8053  0EC4  087A               	movf	CPSx_Read@channel,w
  8054  0EC5  009F               	movwf	31	;volatile
  8055  0EC6  0008               	return
  8056  0EC7                     __end_of_CPSx_Read:	
  8057                           
  8058                           	psect	text38
  8059  0DD3                     __ptext38:	
  8060 ;; *************** function _Buzzer_Handler *****************
  8061 ;; Defined at:
  8062 ;;		line 44 in file "Buzzer.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;		None
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;		None
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  1    wreg      void 
  8069 ;; Registers used:
  8070 ;;		wreg, status,2, status,0, pclath, cstack
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8076 ;;      Params:         0       0       0       0       0       0
  8077 ;;      Locals:         0       0       0       0       0       0
  8078 ;;      Temps:          0       0       0       0       0       0
  8079 ;;      Totals:         0       0       0       0       0       0
  8080 ;;Total ram usage:        0 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    1
  8083 ;; This function calls:
  8084 ;;		_Buzzer_SetDuty
  8085 ;; This function is called by:
  8086 ;;		_Handler
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           
  8091                           ;psect for function _Buzzer_Handler
  8092  0DD3                     _Buzzer_Handler:	
  8093                           
  8094                           ;Buzzer.c: 46: if(count>0)
  8095                           
  8096                           ;incstack = 0
  8097                           ; Regs used in _Buzzer_Handler: [wreg+status,2+status,0+pclath+cstack]
  8098  0DD3  0878               	movf	_count,w
  8099  0DD4  0479               	iorwf	_count+1,w
  8100  0DD5  1903               	btfsc	3,2
  8101  0DD6  2DE2               	goto	i1l3168
  8102                           
  8103                           ;Buzzer.c: 47: {
  8104                           ;Buzzer.c: 48: count--;
  8105  0DD7  3001               	movlw	1
  8106  0DD8  02F8               	subwf	_count,f
  8107  0DD9  3000               	movlw	0
  8108  0DDA  3BF9               	subwfb	_count+1,f
  8109                           
  8110                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  8111  0DDB  30FF               	movlw	255
  8112  0DDC  00F0               	movwf	Buzzer_SetDuty@duty
  8113  0DDD  3001               	movlw	1
  8114  0DDE  00F1               	movwf	Buzzer_SetDuty@duty+1
  8115  0DDF  318E  262C         	fcall	_Buzzer_SetDuty
  8116                           
  8117                           ;Buzzer.c: 50: }
  8118  0DE1  0008               	return
  8119  0DE2                     i1l3168:	
  8120                           
  8121                           ;Buzzer.c: 51: else
  8122                           ;Buzzer.c: 52: {
  8123                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  8124  0DE2  3000               	movlw	0
  8125  0DE3  00F0               	movwf	Buzzer_SetDuty@duty
  8126  0DE4  00F1               	movwf	Buzzer_SetDuty@duty+1
  8127  0DE5  318E  262C         	fcall	_Buzzer_SetDuty
  8128  0DE7  0008               	return
  8129  0DE8                     __end_of_Buzzer_Handler:	
  8130                           
  8131                           	psect	text39
  8132  0E2C                     __ptext39:	
  8133 ;; *************** function _Buzzer_SetDuty *****************
  8134 ;; Defined at:
  8135 ;;		line 31 in file "Buzzer.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  duty            2    0[COMMON] unsigned int 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, status,0
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8149 ;;      Params:         2       0       0       0       0       0
  8150 ;;      Locals:         1       0       0       0       0       0
  8151 ;;      Temps:          2       0       0       0       0       0
  8152 ;;      Totals:         5       0       0       0       0       0
  8153 ;;Total ram usage:        5 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; This function calls:
  8156 ;;		Nothing
  8157 ;; This function is called by:
  8158 ;;		_Buzzer_Handler
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           
  8163                           ;psect for function _Buzzer_SetDuty
  8164  0E2C                     _Buzzer_SetDuty:	
  8165                           
  8166                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  8167                           
  8168                           ;incstack = 0
  8169                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  8170  0E2C  0025               	movlb	5	; select bank5
  8171  0E2D  081A               	movf	26,w	;volatile
  8172  0E2E  39CF               	andlw	207
  8173  0E2F  00F2               	movwf	??_Buzzer_SetDuty
  8174  0E30  0872               	movf	??_Buzzer_SetDuty,w
  8175  0E31  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  8176                           
  8177                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  8178  0E32  0871               	movf	Buzzer_SetDuty@duty+1,w
  8179  0E33  00F3               	movwf	??_Buzzer_SetDuty+1
  8180  0E34  0870               	movf	Buzzer_SetDuty@duty,w
  8181  0E35  00F2               	movwf	??_Buzzer_SetDuty
  8182  0E36  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8183  0E37  0CF2               	rrf	??_Buzzer_SetDuty,f
  8184  0E38  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8185  0E39  0CF2               	rrf	??_Buzzer_SetDuty,f
  8186  0E3A  0872               	movf	??_Buzzer_SetDuty,w
  8187  0E3B  0098               	movwf	24	;volatile
  8188                           
  8189                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  8190  0E3C  0870               	movf	Buzzer_SetDuty@duty,w
  8191  0E3D  3903               	andlw	3
  8192  0E3E  00F2               	movwf	??_Buzzer_SetDuty
  8193  0E3F  3003               	movlw	3
  8194  0E40                     u233_25:	
  8195  0E40  35F2               	lslf	??_Buzzer_SetDuty,f
  8196  0E41  3EFF               	addlw	-1
  8197  0E42  1D03               	skipz
  8198  0E43  2E40               	goto	u233_25
  8199  0E44  3572               	lslf	??_Buzzer_SetDuty,w
  8200  0E45  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  8201  0E46  009A               	movwf	26	;volatile
  8202  0E47  0008               	return
  8203  0E48                     __end_of_Buzzer_SetDuty:	
  8204  007E                     btemp	set	126	;btemp
  8205  007E                     int$flags	set	126
  8206  007E                     wtemp0	set	126


Data Sizes:
    Strings     336
    Constant    30
    Data        90
    BSS         63
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     71      80
    BANK1            80      0      79
    BANK2            80      0      60
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_54(CODE[7]), STR_53(CODE[6]), STR_52(CODE[6]), STR_51(CODE[7]), 
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[6]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_54(CODE[7]), STR_53(CODE[6]), STR_52(CODE[6]), STR_51(CODE[7]), 
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[6]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_49(CODE[7]), STR_48(CODE[7]), STR_47(CODE[7]), STR_46(CODE[7]), 
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[7]), STR_42(CODE[6]), 
		 -> STR_41(CODE[6]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[5]), 
		 -> STR_37(CODE[5]), STR_36(CODE[5]), STR_35(CODE[5]), 

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_34(CODE[8]), STR_33(CODE[8]), STR_32(CODE[8]), STR_31(CODE[7]), 
		 -> STR_30(CODE[7]), STR_29(CODE[7]), STR_28(CODE[7]), STR_27(CODE[7]), 
		 -> STR_26(CODE[6]), STR_25(CODE[6]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 

    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[6]), 
		 -> STR_15(CODE[5]), STR_14(CODE[6]), STR_13(CODE[5]), STR_12(CODE[6]), 
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[5]), STR_8(CODE[6]), 
		 -> STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[5]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK1[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK1[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK1[2]), ConfigReg(BANK0[1]), 

    S46$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S46$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Handler->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _mTouch_Read->_Buzzer_MiliSecond
    _mTouch_Init->_mTouch_PortInit
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10219
                                             70 BANK0      1     1      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                     _LCD_CursorHome
                           _LCD_Init
                        _Timer1_Init
                        _Timer4_Init
                        _mTouch_Init
                        _mTouch_Read
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                              8     2      6    6569
                                             62 BANK0      8     2      6
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    5683
                                             14 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     515
                                              6 BANK0      2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     389
                                              4 BANK0      2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     263
                                              3 BANK0      1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _mTouch_Read                                          6     6      0     263
                                              2 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              4 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                             16 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              8 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              5 BANK0      6     3      3
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0     195
                                              5 COMMON     1     1      0
                     _Buzzer_Handler
                          _CPSx_Read
                _I2C_CommonInterrupt
                     _Timer1_Handler
                     _Timer4_Handler
           _mTouch_IntervalIncrement
 ---------------------------------------------------------------------------------
 (8) _mTouch_IntervalIncrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer4_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer1_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CPSx_Read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Buzzer_Handler                                       0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (9) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_Init
   _Timer4_Init
   _mTouch_Init
     _mTouch_PortInit
   _mTouch_Read
     _Buzzer_MiliSecond
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Handler
     _Buzzer_SetDuty
   _CPSx_Read
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Handler
   _Timer4_Handler
   _mTouch_IntervalIncrement

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     47      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      E6      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May 16 13:19:39 2017

                   _LCD_CursorHome 0D6C                        __CFG_CP$OFF 0000  
                               l74 078F                                 l91 04A4  
                               l78 07C0                     I2C2_Transmit@i 0025  
            ??_I2C_CommonInterrupt 0071                ___wmul@multiplicand 0022  
                              l100 04CD                                l211 074B  
                              l109 04EA                                l215 077C  
                              l228 040D                                l237 0436  
                              l246 0453                                l338 0F16  
                              l704 0222                                l663 00D0  
                              l648 0054                                l681 016B  
                              l926 0E51                                _GIE 005F  
                              _PR2 001B                                _PR4 0416  
                     __CFG_CPD$OFF 0000                       __CFG_BORV$LO 0000  
                              wreg 0009                         _Basic_Init 0DE8  
                     __CFG_LVP$OFF 0000                    __end_of_LCD_Put 0D32  
                             l4316 0703                               l3800 050C  
                             l4328 073D                               l3740 07A4  
                             l3820 0755                               l3804 050F  
                             l4700 0208                               l4612 00C0  
                             l4604 0096                               l3742 07A6  
                             l3734 0799                               l3806 0518  
                             l4550 07D6                               l4606 0099  
                             l3752 07B5                               l3760 0487  
                             l4720 0241                               l4712 0230  
                             l4640 0106                               l4632 00EB  
                             l4624 00DD                               l4616 00C8  
                             l3826 0760                               l3842 0773  
                             l3762 0495                               l3906 0E4B  
                             l4730 0269                               l4722 0245  
                             l4650 0120                               l4642 010A  
                             l4810 055D                               l4802 054C  
                             l3756 07B7                               l3828 0762  
                             l3772 04B8                               l3924 06B9  
                             l4732 026D                               l4660 0149  
                             l4652 0135                               l4812 0566  
                             l4820 0581                               l3838 0771  
                             l3782 04B0                               l3870 041D  
                             l3846 03F0                               l3934 06E7  
                             l3926 06C7                               l3950 0FD4  
                             l4558 07E6                               l4726 0257  
                             l4718 0238                               l4662 014E  
                             l4654 0142                               l4646 011C  
                             l4638 00F8                               l4582 006D  
                             l4814 056F                               l3784 04B4  
                             l3872 0444                               l3848 03FE  
                             l4568 0DFF                               l4672 0185  
                             l4656 0145                               l4816 0578  
                             l4808 0559                               l3970 0EFF  
                             l3786 04DB                               l3882 0459  
                             l3858 0421                               l3890 0478  
                             l3938 06F2                               l3954 0FEC  
                             l4674 019A                               l4658 0147  
                             l4666 0153                               l3796 04F0  
                             l3884 0470                               l3892 0481  
                             l3868 0419                               l3980 0F29  
                             l3948 0FC6                               l4684 01C4  
                             l4676 01A3                               l4596 0082  
                             l3974 0F0D                               l3798 0507  
                             l3886 0475                               l3958 0FF7  
                             l4686 01C6                               l4678 01B3  
                             l3968 0EF2                               l3984 0F3A  
                             l4696 0200                               l3986 0F42  
                             l3978 0F1C                               l4796 053B  
                             STR_1 0399                               STR_2 029C  
                             STR_3 02C9                               STR_4 02A7  
                             STR_5 03D1                               STR_6 037B  
                             STR_7 03D6                               STR_8 0381  
                             STR_9 03DB                               u5007 05C8  
                             u5017 05DD                               u3435 0F8A  
                             u5027 0D86                               u4235 0723  
                             u5037 0D76                               u5047 0F83  
                             _PEIE 005E                               u3815 06BC  
                             u3905 0FE2                               u3835 06C8  
                             u3915 0FED                               u3845 06DC  
                             u4645 011A                               u3855 06E8  
                             u3775 0E52                               u4655 012E  
                             u3785 0E57                               u3885 0FC9  
                             u4775 0255                               u4795 027B  
                             u4987 059A                               u4997 05B3  
            Buzzer_MiliSecond@time 0020                               _TMR0 0015  
                             _TMR1 0016                               _TMR2 001A  
                             _TMR4 0415                    ??_I2C1_Transmit 0022  
                     __CFG_WRT$OFF 0000                               _main 051B  
                             _mode 006A                   __end_of_I2C_Init 0F19  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                      __CFG_BOREN$ON 0000  
                  ??_I2C2_Transmit 0022                   ??_I2C1_Interrupt 0070  
                             start 0022                      __CFG_IESO$OFF 0000  
                  __end_of_Handler 0022             __end_of_LCD_CursorHome 0D7C  
                    _LCD_WriteData 0F80                      __CFG_MCLRE$ON 0000  
                 ??_I2C2_Interrupt 0070                 __size_of_CPSx_Read 0025  
         __end_of_LCD_DisplayClear 0D8C              __size_of_I2C_Transmit 002B  
                 __end_of_LCD_Init 0600                      __CFG_PLLEN$ON 0000  
                      LCD_Put@word 0023                              ?_main 0070  
                            STR_10 0387                              STR_11 03E0  
                            STR_20 03B3                              STR_12 038D  
                            STR_21 03AE                              STR_13 03E5  
                            STR_30 02DF                              STR_22 03BD  
                            STR_14 0393                              STR_31 0325  
                            STR_23 0369                              STR_15 03C2  
                            STR_32 02C1                              STR_24 033F  
                            STR_40 0357                              STR_16 036F  
                            STR_33 02B9                              STR_25 034B  
                            STR_41 035D                              STR_17 03C7  
                    __CFG_WDTE$OFF 0000                              STR_50 03EA  
                            STR_34 02B1                              STR_26 0363  
                            STR_42 0345                              STR_18 0375  
                            STR_51 02D1                              STR_27 0310  
                            STR_43 02F4                              STR_35 039F  
                            STR_19 03CC                              STR_52 0333  
                            STR_28 0309                              STR_44 031E  
                            STR_36 03A4                              STR_53 0339  
                            STR_29 0317                              STR_45 02FB  
                            STR_37 03B8                              STR_54 02D8  
                            STR_46 0302                              STR_38 03A9  
                            STR_47 032C                              STR_39 0351  
                            STR_48 02E6                              STR_49 02ED  
                  __end_of___lldiv 06FB                              _T1CON 0018  
                  __end_of___llmod 1000                              _T2CON 001C  
                            _LATA3 0863                              _LATA4 0864  
                            _LATA6 0866                              _T4CON 0417  
                            i1l157 0677                              i1l603 0DA2  
                            i1l604 0DA7                              i1l294 0623  
                            _PORTA 000C                              _PORTB 000D  
                            _TRISA 008C                              _TRISB 008D  
                I2C2_Transmit@size 0021                      __CFG_PWRTE$ON 0000  
                   __CFG_FCMEN$OFF 0000                              _count 0078  
                    ??_Buzzer_Init 0020                              _xputc 07C7  
                            _xputs 0DFD                              pclath 000A  
                            status 0003                              wtemp0 007E  
                _Buzzer_MiliSecond 0D3B                    __end_of_xprintf 0D9C  
                     _I2C_Transmit 0F19                     ?_LCD_WriteData 0070  
               ?_Buzzer_MiliSecond 0020                   ??_DAC_Initialize 0030  
                  ?_LCD_CursorHome 0070                    __initialization 0024  
                     __end_of_main 0591                ??_Buzzer_MiliSecond 0022  
                           ??_main 0066                          ??_LCD_Put 0024  
                 CPSx_Read@channel 007A                        ?_Basic_Init 0070  
                           _BCL1IE 0493                             _BCL1IF 0093  
                           _BCL2IE 04A1                             _BCL2IF 00A1  
                   _Timer1_Handler 0D32                   ___llmod@dividend 0024  
             __size_of_mTouch_Init 0013               __size_of_mTouch_Read 0044  
                           _CCPR2L 0298                             _ANSELA 018C  
                           _ANSELB 018D                             _T1GCON 0019  
                __end_of_CPSx_Read 0EC7                             ?_xputc 0070  
                           ?_xputs 0070                             i1l2140 07FD  
                           i1l3168 0DE2                             i1l2908 060D  
                           i1l2916 0616                             i1l2940 064C  
               I2C2_Transmit@i_316 0026                             i1l2934 0643  
                           i1l2936 0648                             i1l2928 062D  
                           i1l2858 0661                             i1l2866 066A  
                           i1l2890 06A0                             i1l2938 064A  
                           i1l3586 0018                             i1l2884 0697  
                           i1l2886 069C                             i1l2878 0681  
                  _mTouch_Interval 0067                             i1l2888 069E  
        __end_of_Buzzer_MiliSecond 0D45                             u233_25 0E40  
                           _OSCCON 0099                 I2C2_Transmit@pData 0020  
                   _Timer4_Handler 07F4                             _TMR1IE 0488  
                           _TMR1IF 0088                          ??_Handler 0075  
                           _TMR4IE 0499                             _TMR4IF 0099  
                           _TMR1ON 00C0                             _SSP1IE 048B  
                           _SSP1IF 008B                             _SSP2IE 04A0  
                           _SSP2IF 00A0                    _mTouch_PortInit 0D5F  
                    ??_Timer1_Init 0020                      ??_Timer4_Init 0020  
              __end_of_Buzzer_Init 0EEF                             ___wmul 0E48  
                        ??___lldiv 0028                          ??___llmod 0028  
                           _outptr 006E                   I2C_Transmit@I2Cx 002E  
                        ?_I2C_Init 0025           _mTouch_IntervalIncrement 0D9C  
           __end_of_Timer1_Handler 0D3B                   I2C_Transmit@size 002A  
           __end_of_Timer4_Handler 07FF                             xputc@c 0025  
                        ??_xprintf 0064            __end_of__initialization 0050  
                        ?_LCD_Init 0070                    ??_LCD_WriteData 0020  
                 __end_of_xvprintf 027E                         _VoltageReg 00CF  
               Buzzer_SetDuty@duty 0070                     __pcstackCOMMON 0070  
              __size_of_Basic_Init 0015                       __pidataBANK1 0E64  
                     __pidataBANK2 0F44                __end_of_Timer1_Init 0E2C  
              __end_of_Timer4_Init 0DC0                      __end_of_xputc 07F4  
                    __end_of_xputs 0E12          Buzzer_SetDuty@CCP2CON_Pre 0074  
                       ??_I2C_Init 0028                    ?_Timer1_Handler 0070  
              I2C1_Transmit@result 0027            __size_of_Buzzer_Handler 0015  
                  ?_Timer4_Handler 0070            __end_of_mTouch_PortInit 0D6C  
                          ??_xputc 0024                            ??_xputs 0026  
                       __pbssBANK0 0067                         __pbssBANK1 00A0  
       __size_of_Buzzer_MiliSecond 000A                        _Buzzer_Init 0EC7  
                       ??_LCD_Init 0024            __size_of_Buzzer_SetDuty 001C  
                    _DAC_DataTable 027E                       I2C_Init@I2Cx 002A  
      __end_of_I2C_CommonInterrupt 0D1F                       I2C_Init@mode 0026  
                       __pmaintext 051B                            ?___wmul 0020  
                       __pintentry 0004                            _CCP2CON 029A  
                ?_LCD_DisplayClear 0070                            _APFCON0 011D  
                          _APFCON1 011E                            _CCPTMRS 029E  
               ??_LCD_DisplayClear 0023                            _CPSCON0 001E  
                          _CPSCON1 001F                            _LCD_Put 0D2B  
                     _xvprintf$740 0045                       _xvprintf$741 0049  
                     _xvprintf$742 004B                            _SSP1ADD 0212  
                          _SSP2ADD 021A                            _SSP1BUF 0211  
                          _SSP2BUF 0219                            _SSP1MSK 0213  
                          _SSP2MSK 021B                I2C2_Transmit@result 0027  
                 ??_LCD_CursorHome 0023                            _Handler 0004  
            __end_of_I2C1_Transmit 051B              __end_of_I2C2_Transmit 0484  
                      _Timer1_Init 0E12                        _Timer4_Init 0DAD  
                          ___lldiv 06A8                    __size_of___wmul 001C  
                          ___llmod 0FBD                    __CFG_STVREN$OFF 0000  
                          __ptext1 0D8C                            __ptext2 0054  
                          __ptext3 0DFD                            __ptext4 07C7  
                          __ptext5 0D2B                            __ptext6 0E48  
                          __ptext7 0FBD                            __ptext8 06A8  
                          __ptext9 06FB                    mTouch_Read@chan 0027  
                        ?_xvprintf 002E                       ??_Basic_Init 0020  
                          clrloop0 0D20               end_of_initialization 0050  
                 ?_mTouch_PortInit 0070                            _xprintf 0D8C  
                    ?_I2C1_PinInit 0070                            init_ram 0D25  
                          initloop 0D26                      ?_I2C2_PinInit 0070  
                      _I2C1_Config 00BC                          _CPSx_Read 0EA2  
                      _I2C2_Config 00A9                      ?_I2C1_Setting 0021  
                  ___lldiv@divisor 0020                      ?_I2C2_Setting 0021  
                  ___lldiv@counter 002D                  I2C_Transmit@pData 0029  
               __end_of_Basic_Init 0DFD                   _DAC_VoltageTable 00D1  
                     __pstringtext 027E         ??_mTouch_IntervalIncrement 0070  
          __size_of_I2C1_Interrupt 0054                   __CFG_FOSC$INTOSC 0000  
                    ??_mTouch_Init 0021                      ??_mTouch_Read 0022  
                       ??_xvprintf 0031            __size_of_I2C2_Interrupt 0054  
                __size_of_I2C_Init 002A                I2C1_Setting@address 0024  
                   _Buzzer_Handler 0DD3                     ??_I2C1_PinInit 0020  
                   ??_I2C2_PinInit 0020                     _Buzzer_SetDuty 0E2C  
                   ??_I2C1_Setting 0023                         ?_CPSx_Read 0070  
                   ??_I2C2_Setting 0023                      _H7826_01_Gain 0120  
                __size_of_LCD_Init 006F                     __end_of___wmul 0E64  
                        _ConfigReg 006F                   ??_Timer1_Handler 0070  
          __size_of_DAC_Initialize 0020                   ??_Timer4_Handler 0070  
              start_initialization 0024             __end_of_Buzzer_Handler 0DE8  
             I2C1_Transmit@address 0024                          _MemoryReg 00A6  
           __end_of_Buzzer_SetDuty 0E48                       ?_Buzzer_Init 0070  
              __end_of_mTouch_Init 0DD3                __end_of_mTouch_Read 073F  
              I2C2_Setting@address 0024                    ___llmod@divisor 0020  
                  ___llmod@counter 0029              __end_of_LCD_WriteData 0FBD  
                         ??___wmul 0024                        __pdataBANK1 00D1  
                      __pdataBANK2 0120                  I2C1_Setting@Speed 0022  
                         ?_LCD_Put 0023                        __pbssCOMMON 0076  
                        ___latbits 0001                      __pcstackBANK0 0020  
                  ?_Buzzer_Handler 0070                 I2C1_Transmit@i_172 0026  
               I2C1_Transmit@pData 0020          __size_of_LCD_DisplayClear 0010  
                  ?_Buzzer_SetDuty 0070                    I2C_Init@address 0025  
                         ?_Handler 0070                        ??_CPSx_Read 0070  
                    ?_I2C_Transmit 0028                      I2C_Init@Speed 0027  
                     ?_Timer1_Init 0070                       ?_Timer4_Init 0070  
 __end_of_mTouch_IntervalIncrement 0DAD                           ?___lldiv 0020  
                         ?___llmod 0020                     _I2C1_Interrupt 0654  
             __end_of_I2C1_PinInit 0D52       __size_of_I2C_CommonInterrupt 0006  
             __end_of_I2C2_PinInit 0D5F               __end_of_I2C1_Setting 07C7  
                         _I2C_Init 0EEF               __end_of_I2C2_Setting 0783  
                   _I2C2_Interrupt 0600                         _H7826_Gain 013E  
                      _mTouch_Init 0DC0                        _mTouch_Read 06FB  
                __size_of_xvprintf 022A                           ?_xprintf 005E  
                   __size_of_xputc 002D                     __size_of_xputs 0015  
                         _LCD_Init 0591                     ___wmul@product 0024  
                         _CPS_Data 00A0                     ??_I2C_Transmit 002B  
                        clear_ram0 0D1F             __end_of_I2C1_Interrupt 06A8  
                         _SSP1CON1 0215                           _SSP1CON2 0216  
             I2C2_Transmit@address 0024                           _SSP2CON1 021D  
                         _SSP2CON2 021E                           _SSP1STAT 0214  
                         _SSP2STAT 021C                  ___wmul@multiplier 0020  
                   _DAC_Initialize 0E82             __end_of_I2C2_Interrupt 0654  
           __size_of_I2C1_Transmit 0097                          _xfunc_out 006C  
                 __size_of_LCD_Put 0007             __size_of_I2C2_Transmit 0098  
                      _CPS_PreData 00A3                   __size_of_Handler 001E  
             __size_of_Buzzer_Init 0028           __size_of_mTouch_PortInit 000D  
                  ?_I2C1_Interrupt 0070            __size_of_LCD_CursorHome 0010  
           __end_of_DAC_Initialize 0EA2                   __size_of___lldiv 0053  
                 __size_of___llmod 0043                   I2C1_Setting@mode 0021  
               LCD_WriteData@point 0022                    ?_I2C2_Interrupt 0070  
                I2C1_Transmit@size 0021                           __ptext10 0D3B  
                         __ptext11 0DC0                           __ptext20 0F19  
                         __ptext12 0D5F                           __ptext21 03EC  
                         __ptext13 0DAD                           __ptext22 0484  
                         __ptext14 0E12                           __ptext31 0D9C  
                         __ptext23 0EEF                           __ptext15 0591  
                         __ptext32 07F4                           __ptext24 073F  
                         __ptext16 0D7C                           __ptext33 0D32  
                         __ptext25 0D52                           __ptext17 0D6C  
                         __ptext34 0D19                           __ptext26 0783  
                         __ptext18 0F80                           __ptext35 0600  
                         __ptext27 0D45                           __ptext19 0E82  
                         __ptext36 0654                           __ptext28 0EC7  
                         __ptext37 0EA2                           __ptext29 0DE8  
                         __ptext38 0DD3                           __ptext39 0E2C  
                     _SSP1CON1bits 0215                       _SSP1CON2bits 0216  
__size_of_mTouch_IntervalIncrement 0011          ?_mTouch_IntervalIncrement 0070  
                 _LCD_DisplayClear 0D7C                       _SSP2CON1bits 021D  
                     _SSP2CON2bits 021E                   __size_of_xprintf 0010  
            __end_of_DAC_DataTable 029C                      __size_of_main 0076  
                    _I2C1_Transmit 0484                      _I2C2_Transmit 03EC  
            __size_of_I2C1_PinInit 000D               __size_of_Timer1_Init 001A  
                         int$flags 007E              __size_of_I2C2_PinInit 000D  
             __size_of_Timer4_Init 0013                I2C_Transmit@address 0028  
            __size_of_I2C1_Setting 0044                    ?_DAC_Initialize 0070  
                     _SSP1STATbits 0214                           _xfunc_in 0076  
            __size_of_I2C2_Setting 0044                       _SSP2STATbits 021C  
                 ??_Buzzer_Handler 0075               __end_of_I2C_Transmit 0F44  
                I2C2_Setting@Speed 0022                   ??_Buzzer_SetDuty 0072  
                         _xvprintf 0054                         xprintf@arp 0065  
                       xprintf@fmt 005E                           intlevel1 0000  
              _I2C_CommonInterrupt 0D19                       _I2C1_PinInit 0D45  
                 ___lldiv@dividend 0024                     ?_I2C1_Transmit 0020  
                __CFG_CLKOUTEN$OFF 0000                       _I2C2_PinInit 0D52  
                     _I2C1_Setting 0783                     ?_I2C2_Transmit 0020  
                     _I2C2_Setting 073F                        xvprintf@arp 0030  
                      xvprintf@fmt 002E                 I2C_Transmit@result 002F  
                ??_mTouch_PortInit 0020                   I2C2_Setting@mode 0021  
             ?_I2C_CommonInterrupt 0070                         _OPTION_REG 0095  
                 ___lldiv@quotient 0029                       ?_mTouch_Init 0070  
                     ?_mTouch_Read 0070             __size_of_LCD_WriteData 003D  
          __size_of_Timer1_Handler 0009                     I2C1_Transmit@i 0025  
                         xputs@str 0027                          xvprintf@c 005D  
                        xvprintf@d 005C                          xvprintf@f 0058  
                        xvprintf@i 005A                          xvprintf@j 0052  
                        xvprintf@p 004D                          xvprintf@r 004E  
                        xvprintf@s 0035                          xvprintf@v 0054  
                        xvprintf@w 0050            __size_of_Timer4_Handler 000B  
