

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat May 13 11:47:40 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 1.41
    59                           ; Generated 25/01/2017 GMT
    60                           ; 
    61                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F1827 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  0111                     	;# 
   141  0112                     	;# 
   142  0113                     	;# 
   143  0114                     	;# 
   144  0115                     	;# 
   145  0116                     	;# 
   146  0117                     	;# 
   147  0118                     	;# 
   148  0119                     	;# 
   149  011A                     	;# 
   150  011B                     	;# 
   151  011D                     	;# 
   152  011E                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0191                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0194                     	;# 
   162  0195                     	;# 
   163  0196                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020D                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0219                     	;# 
   193  021A                     	;# 
   194  021B                     	;# 
   195  021C                     	;# 
   196  021D                     	;# 
   197  021E                     	;# 
   198  021F                     	;# 
   199  0291                     	;# 
   200  0291                     	;# 
   201  0292                     	;# 
   202  0293                     	;# 
   203  0294                     	;# 
   204  0295                     	;# 
   205  0295                     	;# 
   206  0296                     	;# 
   207  0298                     	;# 
   208  0298                     	;# 
   209  0299                     	;# 
   210  029A                     	;# 
   211  029B                     	;# 
   212  029C                     	;# 
   213  029C                     	;# 
   214  029D                     	;# 
   215  029E                     	;# 
   216  029E                     	;# 
   217  0311                     	;# 
   218  0311                     	;# 
   219  0312                     	;# 
   220  0313                     	;# 
   221  0318                     	;# 
   222  0318                     	;# 
   223  0319                     	;# 
   224  031A                     	;# 
   225  0394                     	;# 
   226  0395                     	;# 
   227  0396                     	;# 
   228  039A                     	;# 
   229  039C                     	;# 
   230  039D                     	;# 
   231  039E                     	;# 
   232  039F                     	;# 
   233  0415                     	;# 
   234  0416                     	;# 
   235  0417                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  0FE4                     	;# 
   240  0FE5                     	;# 
   241  0FE6                     	;# 
   242  0FE7                     	;# 
   243  0FE8                     	;# 
   244  0FE9                     	;# 
   245  0FEA                     	;# 
   246  0FEB                     	;# 
   247  0FED                     	;# 
   248  0FEE                     	;# 
   249  0FEF                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  0111                     	;# 
   299  0112                     	;# 
   300  0113                     	;# 
   301  0114                     	;# 
   302  0115                     	;# 
   303  0116                     	;# 
   304  0117                     	;# 
   305  0118                     	;# 
   306  0119                     	;# 
   307  011A                     	;# 
   308  011B                     	;# 
   309  011D                     	;# 
   310  011E                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0191                     	;# 
   314  0191                     	;# 
   315  0192                     	;# 
   316  0193                     	;# 
   317  0193                     	;# 
   318  0193                     	;# 
   319  0194                     	;# 
   320  0195                     	;# 
   321  0196                     	;# 
   322  0199                     	;# 
   323  019A                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019C                     	;# 
   329  019C                     	;# 
   330  019D                     	;# 
   331  019E                     	;# 
   332  019F                     	;# 
   333  020C                     	;# 
   334  020D                     	;# 
   335  0211                     	;# 
   336  0211                     	;# 
   337  0212                     	;# 
   338  0212                     	;# 
   339  0213                     	;# 
   340  0213                     	;# 
   341  0214                     	;# 
   342  0214                     	;# 
   343  0215                     	;# 
   344  0215                     	;# 
   345  0215                     	;# 
   346  0216                     	;# 
   347  0216                     	;# 
   348  0217                     	;# 
   349  0217                     	;# 
   350  0219                     	;# 
   351  021A                     	;# 
   352  021B                     	;# 
   353  021C                     	;# 
   354  021D                     	;# 
   355  021E                     	;# 
   356  021F                     	;# 
   357  0291                     	;# 
   358  0291                     	;# 
   359  0292                     	;# 
   360  0293                     	;# 
   361  0294                     	;# 
   362  0295                     	;# 
   363  0295                     	;# 
   364  0296                     	;# 
   365  0298                     	;# 
   366  0298                     	;# 
   367  0299                     	;# 
   368  029A                     	;# 
   369  029B                     	;# 
   370  029C                     	;# 
   371  029C                     	;# 
   372  029D                     	;# 
   373  029E                     	;# 
   374  029E                     	;# 
   375  0311                     	;# 
   376  0311                     	;# 
   377  0312                     	;# 
   378  0313                     	;# 
   379  0318                     	;# 
   380  0318                     	;# 
   381  0319                     	;# 
   382  031A                     	;# 
   383  0394                     	;# 
   384  0395                     	;# 
   385  0396                     	;# 
   386  039A                     	;# 
   387  039C                     	;# 
   388  039D                     	;# 
   389  039E                     	;# 
   390  039F                     	;# 
   391  0415                     	;# 
   392  0416                     	;# 
   393  0417                     	;# 
   394  041C                     	;# 
   395  041D                     	;# 
   396  041E                     	;# 
   397  0FE4                     	;# 
   398  0FE5                     	;# 
   399  0FE6                     	;# 
   400  0FE7                     	;# 
   401  0FE8                     	;# 
   402  0FE9                     	;# 
   403  0FEA                     	;# 
   404  0FEB                     	;# 
   405  0FED                     	;# 
   406  0FEE                     	;# 
   407  0FEF                     	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0008                     	;# 
   417  0009                     	;# 
   418  000A                     	;# 
   419  000B                     	;# 
   420  000C                     	;# 
   421  000D                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  008C                     	;# 
   438  008D                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0093                     	;# 
   442  0094                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  0111                     	;# 
   457  0112                     	;# 
   458  0113                     	;# 
   459  0114                     	;# 
   460  0115                     	;# 
   461  0116                     	;# 
   462  0117                     	;# 
   463  0118                     	;# 
   464  0119                     	;# 
   465  011A                     	;# 
   466  011B                     	;# 
   467  011D                     	;# 
   468  011E                     	;# 
   469  018C                     	;# 
   470  018D                     	;# 
   471  0191                     	;# 
   472  0191                     	;# 
   473  0192                     	;# 
   474  0193                     	;# 
   475  0193                     	;# 
   476  0193                     	;# 
   477  0194                     	;# 
   478  0195                     	;# 
   479  0196                     	;# 
   480  0199                     	;# 
   481  019A                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019C                     	;# 
   487  019C                     	;# 
   488  019D                     	;# 
   489  019E                     	;# 
   490  019F                     	;# 
   491  020C                     	;# 
   492  020D                     	;# 
   493  0211                     	;# 
   494  0211                     	;# 
   495  0212                     	;# 
   496  0212                     	;# 
   497  0213                     	;# 
   498  0213                     	;# 
   499  0214                     	;# 
   500  0214                     	;# 
   501  0215                     	;# 
   502  0215                     	;# 
   503  0215                     	;# 
   504  0216                     	;# 
   505  0216                     	;# 
   506  0217                     	;# 
   507  0217                     	;# 
   508  0219                     	;# 
   509  021A                     	;# 
   510  021B                     	;# 
   511  021C                     	;# 
   512  021D                     	;# 
   513  021E                     	;# 
   514  021F                     	;# 
   515  0291                     	;# 
   516  0291                     	;# 
   517  0292                     	;# 
   518  0293                     	;# 
   519  0294                     	;# 
   520  0295                     	;# 
   521  0295                     	;# 
   522  0296                     	;# 
   523  0298                     	;# 
   524  0298                     	;# 
   525  0299                     	;# 
   526  029A                     	;# 
   527  029B                     	;# 
   528  029C                     	;# 
   529  029C                     	;# 
   530  029D                     	;# 
   531  029E                     	;# 
   532  029E                     	;# 
   533  0311                     	;# 
   534  0311                     	;# 
   535  0312                     	;# 
   536  0313                     	;# 
   537  0318                     	;# 
   538  0318                     	;# 
   539  0319                     	;# 
   540  031A                     	;# 
   541  0394                     	;# 
   542  0395                     	;# 
   543  0396                     	;# 
   544  039A                     	;# 
   545  039C                     	;# 
   546  039D                     	;# 
   547  039E                     	;# 
   548  039F                     	;# 
   549  0415                     	;# 
   550  0416                     	;# 
   551  0417                     	;# 
   552  041C                     	;# 
   553  041D                     	;# 
   554  041E                     	;# 
   555  0FE4                     	;# 
   556  0FE5                     	;# 
   557  0FE6                     	;# 
   558  0FE7                     	;# 
   559  0FE8                     	;# 
   560  0FE9                     	;# 
   561  0FEA                     	;# 
   562  0FEB                     	;# 
   563  0FED                     	;# 
   564  0FEE                     	;# 
   565  0FEF                     	;# 
   566  0000                     	;# 
   567  0001                     	;# 
   568  0002                     	;# 
   569  0003                     	;# 
   570  0004                     	;# 
   571  0005                     	;# 
   572  0006                     	;# 
   573  0007                     	;# 
   574  0008                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  0011                     	;# 
   581  0012                     	;# 
   582  0013                     	;# 
   583  0014                     	;# 
   584  0015                     	;# 
   585  0016                     	;# 
   586  0016                     	;# 
   587  0017                     	;# 
   588  0018                     	;# 
   589  0019                     	;# 
   590  001A                     	;# 
   591  001B                     	;# 
   592  001C                     	;# 
   593  001E                     	;# 
   594  001F                     	;# 
   595  008C                     	;# 
   596  008D                     	;# 
   597  0091                     	;# 
   598  0092                     	;# 
   599  0093                     	;# 
   600  0094                     	;# 
   601  0095                     	;# 
   602  0096                     	;# 
   603  0097                     	;# 
   604  0098                     	;# 
   605  0099                     	;# 
   606  009A                     	;# 
   607  009B                     	;# 
   608  009B                     	;# 
   609  009C                     	;# 
   610  009D                     	;# 
   611  009E                     	;# 
   612  010C                     	;# 
   613  010D                     	;# 
   614  0111                     	;# 
   615  0112                     	;# 
   616  0113                     	;# 
   617  0114                     	;# 
   618  0115                     	;# 
   619  0116                     	;# 
   620  0117                     	;# 
   621  0118                     	;# 
   622  0119                     	;# 
   623  011A                     	;# 
   624  011B                     	;# 
   625  011D                     	;# 
   626  011E                     	;# 
   627  018C                     	;# 
   628  018D                     	;# 
   629  0191                     	;# 
   630  0191                     	;# 
   631  0192                     	;# 
   632  0193                     	;# 
   633  0193                     	;# 
   634  0193                     	;# 
   635  0194                     	;# 
   636  0195                     	;# 
   637  0196                     	;# 
   638  0199                     	;# 
   639  019A                     	;# 
   640  019B                     	;# 
   641  019B                     	;# 
   642  019B                     	;# 
   643  019B                     	;# 
   644  019C                     	;# 
   645  019C                     	;# 
   646  019D                     	;# 
   647  019E                     	;# 
   648  019F                     	;# 
   649  020C                     	;# 
   650  020D                     	;# 
   651  0211                     	;# 
   652  0211                     	;# 
   653  0212                     	;# 
   654  0212                     	;# 
   655  0213                     	;# 
   656  0213                     	;# 
   657  0214                     	;# 
   658  0214                     	;# 
   659  0215                     	;# 
   660  0215                     	;# 
   661  0215                     	;# 
   662  0216                     	;# 
   663  0216                     	;# 
   664  0217                     	;# 
   665  0217                     	;# 
   666  0219                     	;# 
   667  021A                     	;# 
   668  021B                     	;# 
   669  021C                     	;# 
   670  021D                     	;# 
   671  021E                     	;# 
   672  021F                     	;# 
   673  0291                     	;# 
   674  0291                     	;# 
   675  0292                     	;# 
   676  0293                     	;# 
   677  0294                     	;# 
   678  0295                     	;# 
   679  0295                     	;# 
   680  0296                     	;# 
   681  0298                     	;# 
   682  0298                     	;# 
   683  0299                     	;# 
   684  029A                     	;# 
   685  029B                     	;# 
   686  029C                     	;# 
   687  029C                     	;# 
   688  029D                     	;# 
   689  029E                     	;# 
   690  029E                     	;# 
   691  0311                     	;# 
   692  0311                     	;# 
   693  0312                     	;# 
   694  0313                     	;# 
   695  0318                     	;# 
   696  0318                     	;# 
   697  0319                     	;# 
   698  031A                     	;# 
   699  0394                     	;# 
   700  0395                     	;# 
   701  0396                     	;# 
   702  039A                     	;# 
   703  039C                     	;# 
   704  039D                     	;# 
   705  039E                     	;# 
   706  039F                     	;# 
   707  0415                     	;# 
   708  0416                     	;# 
   709  0417                     	;# 
   710  041C                     	;# 
   711  041D                     	;# 
   712  041E                     	;# 
   713  0FE4                     	;# 
   714  0FE5                     	;# 
   715  0FE6                     	;# 
   716  0FE7                     	;# 
   717  0FE8                     	;# 
   718  0FE9                     	;# 
   719  0FEA                     	;# 
   720  0FEB                     	;# 
   721  0FED                     	;# 
   722  0FEE                     	;# 
   723  0FEF                     	;# 
   724  0000                     	;# 
   725  0001                     	;# 
   726  0002                     	;# 
   727  0003                     	;# 
   728  0004                     	;# 
   729  0005                     	;# 
   730  0006                     	;# 
   731  0007                     	;# 
   732  0008                     	;# 
   733  0009                     	;# 
   734  000A                     	;# 
   735  000B                     	;# 
   736  000C                     	;# 
   737  000D                     	;# 
   738  0011                     	;# 
   739  0012                     	;# 
   740  0013                     	;# 
   741  0014                     	;# 
   742  0015                     	;# 
   743  0016                     	;# 
   744  0016                     	;# 
   745  0017                     	;# 
   746  0018                     	;# 
   747  0019                     	;# 
   748  001A                     	;# 
   749  001B                     	;# 
   750  001C                     	;# 
   751  001E                     	;# 
   752  001F                     	;# 
   753  008C                     	;# 
   754  008D                     	;# 
   755  0091                     	;# 
   756  0092                     	;# 
   757  0093                     	;# 
   758  0094                     	;# 
   759  0095                     	;# 
   760  0096                     	;# 
   761  0097                     	;# 
   762  0098                     	;# 
   763  0099                     	;# 
   764  009A                     	;# 
   765  009B                     	;# 
   766  009B                     	;# 
   767  009C                     	;# 
   768  009D                     	;# 
   769  009E                     	;# 
   770  010C                     	;# 
   771  010D                     	;# 
   772  0111                     	;# 
   773  0112                     	;# 
   774  0113                     	;# 
   775  0114                     	;# 
   776  0115                     	;# 
   777  0116                     	;# 
   778  0117                     	;# 
   779  0118                     	;# 
   780  0119                     	;# 
   781  011A                     	;# 
   782  011B                     	;# 
   783  011D                     	;# 
   784  011E                     	;# 
   785  018C                     	;# 
   786  018D                     	;# 
   787  0191                     	;# 
   788  0191                     	;# 
   789  0192                     	;# 
   790  0193                     	;# 
   791  0193                     	;# 
   792  0193                     	;# 
   793  0194                     	;# 
   794  0195                     	;# 
   795  0196                     	;# 
   796  0199                     	;# 
   797  019A                     	;# 
   798  019B                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019C                     	;# 
   803  019C                     	;# 
   804  019D                     	;# 
   805  019E                     	;# 
   806  019F                     	;# 
   807  020C                     	;# 
   808  020D                     	;# 
   809  0211                     	;# 
   810  0211                     	;# 
   811  0212                     	;# 
   812  0212                     	;# 
   813  0213                     	;# 
   814  0213                     	;# 
   815  0214                     	;# 
   816  0214                     	;# 
   817  0215                     	;# 
   818  0215                     	;# 
   819  0215                     	;# 
   820  0216                     	;# 
   821  0216                     	;# 
   822  0217                     	;# 
   823  0217                     	;# 
   824  0219                     	;# 
   825  021A                     	;# 
   826  021B                     	;# 
   827  021C                     	;# 
   828  021D                     	;# 
   829  021E                     	;# 
   830  021F                     	;# 
   831  0291                     	;# 
   832  0291                     	;# 
   833  0292                     	;# 
   834  0293                     	;# 
   835  0294                     	;# 
   836  0295                     	;# 
   837  0295                     	;# 
   838  0296                     	;# 
   839  0298                     	;# 
   840  0298                     	;# 
   841  0299                     	;# 
   842  029A                     	;# 
   843  029B                     	;# 
   844  029C                     	;# 
   845  029C                     	;# 
   846  029D                     	;# 
   847  029E                     	;# 
   848  029E                     	;# 
   849  0311                     	;# 
   850  0311                     	;# 
   851  0312                     	;# 
   852  0313                     	;# 
   853  0318                     	;# 
   854  0318                     	;# 
   855  0319                     	;# 
   856  031A                     	;# 
   857  0394                     	;# 
   858  0395                     	;# 
   859  0396                     	;# 
   860  039A                     	;# 
   861  039C                     	;# 
   862  039D                     	;# 
   863  039E                     	;# 
   864  039F                     	;# 
   865  0415                     	;# 
   866  0416                     	;# 
   867  0417                     	;# 
   868  041C                     	;# 
   869  041D                     	;# 
   870  041E                     	;# 
   871  0FE4                     	;# 
   872  0FE5                     	;# 
   873  0FE6                     	;# 
   874  0FE7                     	;# 
   875  0FE8                     	;# 
   876  0FE9                     	;# 
   877  0FEA                     	;# 
   878  0FEB                     	;# 
   879  0FED                     	;# 
   880  0FEE                     	;# 
   881  0FEF                     	;# 
   882  0000                     	;# 
   883  0001                     	;# 
   884  0002                     	;# 
   885  0003                     	;# 
   886  0004                     	;# 
   887  0005                     	;# 
   888  0006                     	;# 
   889  0007                     	;# 
   890  0008                     	;# 
   891  0009                     	;# 
   892  000A                     	;# 
   893  000B                     	;# 
   894  000C                     	;# 
   895  000D                     	;# 
   896  0011                     	;# 
   897  0012                     	;# 
   898  0013                     	;# 
   899  0014                     	;# 
   900  0015                     	;# 
   901  0016                     	;# 
   902  0016                     	;# 
   903  0017                     	;# 
   904  0018                     	;# 
   905  0019                     	;# 
   906  001A                     	;# 
   907  001B                     	;# 
   908  001C                     	;# 
   909  001E                     	;# 
   910  001F                     	;# 
   911  008C                     	;# 
   912  008D                     	;# 
   913  0091                     	;# 
   914  0092                     	;# 
   915  0093                     	;# 
   916  0094                     	;# 
   917  0095                     	;# 
   918  0096                     	;# 
   919  0097                     	;# 
   920  0098                     	;# 
   921  0099                     	;# 
   922  009A                     	;# 
   923  009B                     	;# 
   924  009B                     	;# 
   925  009C                     	;# 
   926  009D                     	;# 
   927  009E                     	;# 
   928  010C                     	;# 
   929  010D                     	;# 
   930  0111                     	;# 
   931  0112                     	;# 
   932  0113                     	;# 
   933  0114                     	;# 
   934  0115                     	;# 
   935  0116                     	;# 
   936  0117                     	;# 
   937  0118                     	;# 
   938  0119                     	;# 
   939  011A                     	;# 
   940  011B                     	;# 
   941  011D                     	;# 
   942  011E                     	;# 
   943  018C                     	;# 
   944  018D                     	;# 
   945  0191                     	;# 
   946  0191                     	;# 
   947  0192                     	;# 
   948  0193                     	;# 
   949  0193                     	;# 
   950  0193                     	;# 
   951  0194                     	;# 
   952  0195                     	;# 
   953  0196                     	;# 
   954  0199                     	;# 
   955  019A                     	;# 
   956  019B                     	;# 
   957  019B                     	;# 
   958  019B                     	;# 
   959  019B                     	;# 
   960  019C                     	;# 
   961  019C                     	;# 
   962  019D                     	;# 
   963  019E                     	;# 
   964  019F                     	;# 
   965  020C                     	;# 
   966  020D                     	;# 
   967  0211                     	;# 
   968  0211                     	;# 
   969  0212                     	;# 
   970  0212                     	;# 
   971  0213                     	;# 
   972  0213                     	;# 
   973  0214                     	;# 
   974  0214                     	;# 
   975  0215                     	;# 
   976  0215                     	;# 
   977  0215                     	;# 
   978  0216                     	;# 
   979  0216                     	;# 
   980  0217                     	;# 
   981  0217                     	;# 
   982  0219                     	;# 
   983  021A                     	;# 
   984  021B                     	;# 
   985  021C                     	;# 
   986  021D                     	;# 
   987  021E                     	;# 
   988  021F                     	;# 
   989  0291                     	;# 
   990  0291                     	;# 
   991  0292                     	;# 
   992  0293                     	;# 
   993  0294                     	;# 
   994  0295                     	;# 
   995  0295                     	;# 
   996  0296                     	;# 
   997  0298                     	;# 
   998  0298                     	;# 
   999  0299                     	;# 
  1000  029A                     	;# 
  1001  029B                     	;# 
  1002  029C                     	;# 
  1003  029C                     	;# 
  1004  029D                     	;# 
  1005  029E                     	;# 
  1006  029E                     	;# 
  1007  0311                     	;# 
  1008  0311                     	;# 
  1009  0312                     	;# 
  1010  0313                     	;# 
  1011  0318                     	;# 
  1012  0318                     	;# 
  1013  0319                     	;# 
  1014  031A                     	;# 
  1015  0394                     	;# 
  1016  0395                     	;# 
  1017  0396                     	;# 
  1018  039A                     	;# 
  1019  039C                     	;# 
  1020  039D                     	;# 
  1021  039E                     	;# 
  1022  039F                     	;# 
  1023  0415                     	;# 
  1024  0416                     	;# 
  1025  0417                     	;# 
  1026  041C                     	;# 
  1027  041D                     	;# 
  1028  041E                     	;# 
  1029  0FE4                     	;# 
  1030  0FE5                     	;# 
  1031  0FE6                     	;# 
  1032  0FE7                     	;# 
  1033  0FE8                     	;# 
  1034  0FE9                     	;# 
  1035  0FEA                     	;# 
  1036  0FEB                     	;# 
  1037  0FED                     	;# 
  1038  0FEE                     	;# 
  1039  0FEF                     	;# 
  1040  0000                     	;# 
  1041  0001                     	;# 
  1042  0002                     	;# 
  1043  0003                     	;# 
  1044  0004                     	;# 
  1045  0005                     	;# 
  1046  0006                     	;# 
  1047  0007                     	;# 
  1048  0008                     	;# 
  1049  0009                     	;# 
  1050  000A                     	;# 
  1051  000B                     	;# 
  1052  000C                     	;# 
  1053  000D                     	;# 
  1054  0011                     	;# 
  1055  0012                     	;# 
  1056  0013                     	;# 
  1057  0014                     	;# 
  1058  0015                     	;# 
  1059  0016                     	;# 
  1060  0016                     	;# 
  1061  0017                     	;# 
  1062  0018                     	;# 
  1063  0019                     	;# 
  1064  001A                     	;# 
  1065  001B                     	;# 
  1066  001C                     	;# 
  1067  001E                     	;# 
  1068  001F                     	;# 
  1069  008C                     	;# 
  1070  008D                     	;# 
  1071  0091                     	;# 
  1072  0092                     	;# 
  1073  0093                     	;# 
  1074  0094                     	;# 
  1075  0095                     	;# 
  1076  0096                     	;# 
  1077  0097                     	;# 
  1078  0098                     	;# 
  1079  0099                     	;# 
  1080  009A                     	;# 
  1081  009B                     	;# 
  1082  009B                     	;# 
  1083  009C                     	;# 
  1084  009D                     	;# 
  1085  009E                     	;# 
  1086  010C                     	;# 
  1087  010D                     	;# 
  1088  0111                     	;# 
  1089  0112                     	;# 
  1090  0113                     	;# 
  1091  0114                     	;# 
  1092  0115                     	;# 
  1093  0116                     	;# 
  1094  0117                     	;# 
  1095  0118                     	;# 
  1096  0119                     	;# 
  1097  011A                     	;# 
  1098  011B                     	;# 
  1099  011D                     	;# 
  1100  011E                     	;# 
  1101  018C                     	;# 
  1102  018D                     	;# 
  1103  0191                     	;# 
  1104  0191                     	;# 
  1105  0192                     	;# 
  1106  0193                     	;# 
  1107  0193                     	;# 
  1108  0193                     	;# 
  1109  0194                     	;# 
  1110  0195                     	;# 
  1111  0196                     	;# 
  1112  0199                     	;# 
  1113  019A                     	;# 
  1114  019B                     	;# 
  1115  019B                     	;# 
  1116  019B                     	;# 
  1117  019B                     	;# 
  1118  019C                     	;# 
  1119  019C                     	;# 
  1120  019D                     	;# 
  1121  019E                     	;# 
  1122  019F                     	;# 
  1123  020C                     	;# 
  1124  020D                     	;# 
  1125  0211                     	;# 
  1126  0211                     	;# 
  1127  0212                     	;# 
  1128  0212                     	;# 
  1129  0213                     	;# 
  1130  0213                     	;# 
  1131  0214                     	;# 
  1132  0214                     	;# 
  1133  0215                     	;# 
  1134  0215                     	;# 
  1135  0215                     	;# 
  1136  0216                     	;# 
  1137  0216                     	;# 
  1138  0217                     	;# 
  1139  0217                     	;# 
  1140  0219                     	;# 
  1141  021A                     	;# 
  1142  021B                     	;# 
  1143  021C                     	;# 
  1144  021D                     	;# 
  1145  021E                     	;# 
  1146  021F                     	;# 
  1147  0291                     	;# 
  1148  0291                     	;# 
  1149  0292                     	;# 
  1150  0293                     	;# 
  1151  0294                     	;# 
  1152  0295                     	;# 
  1153  0295                     	;# 
  1154  0296                     	;# 
  1155  0298                     	;# 
  1156  0298                     	;# 
  1157  0299                     	;# 
  1158  029A                     	;# 
  1159  029B                     	;# 
  1160  029C                     	;# 
  1161  029C                     	;# 
  1162  029D                     	;# 
  1163  029E                     	;# 
  1164  029E                     	;# 
  1165  0311                     	;# 
  1166  0311                     	;# 
  1167  0312                     	;# 
  1168  0313                     	;# 
  1169  0318                     	;# 
  1170  0318                     	;# 
  1171  0319                     	;# 
  1172  031A                     	;# 
  1173  0394                     	;# 
  1174  0395                     	;# 
  1175  0396                     	;# 
  1176  039A                     	;# 
  1177  039C                     	;# 
  1178  039D                     	;# 
  1179  039E                     	;# 
  1180  039F                     	;# 
  1181  0415                     	;# 
  1182  0416                     	;# 
  1183  0417                     	;# 
  1184  041C                     	;# 
  1185  041D                     	;# 
  1186  041E                     	;# 
  1187  0FE4                     	;# 
  1188  0FE5                     	;# 
  1189  0FE6                     	;# 
  1190  0FE7                     	;# 
  1191  0FE8                     	;# 
  1192  0FE9                     	;# 
  1193  0FEA                     	;# 
  1194  0FEB                     	;# 
  1195  0FED                     	;# 
  1196  0FEE                     	;# 
  1197  0FEF                     	;# 
  1198  0000                     	;# 
  1199  0001                     	;# 
  1200  0002                     	;# 
  1201  0003                     	;# 
  1202  0004                     	;# 
  1203  0005                     	;# 
  1204  0006                     	;# 
  1205  0007                     	;# 
  1206  0008                     	;# 
  1207  0009                     	;# 
  1208  000A                     	;# 
  1209  000B                     	;# 
  1210  000C                     	;# 
  1211  000D                     	;# 
  1212  0011                     	;# 
  1213  0012                     	;# 
  1214  0013                     	;# 
  1215  0014                     	;# 
  1216  0015                     	;# 
  1217  0016                     	;# 
  1218  0016                     	;# 
  1219  0017                     	;# 
  1220  0018                     	;# 
  1221  0019                     	;# 
  1222  001A                     	;# 
  1223  001B                     	;# 
  1224  001C                     	;# 
  1225  001E                     	;# 
  1226  001F                     	;# 
  1227  008C                     	;# 
  1228  008D                     	;# 
  1229  0091                     	;# 
  1230  0092                     	;# 
  1231  0093                     	;# 
  1232  0094                     	;# 
  1233  0095                     	;# 
  1234  0096                     	;# 
  1235  0097                     	;# 
  1236  0098                     	;# 
  1237  0099                     	;# 
  1238  009A                     	;# 
  1239  009B                     	;# 
  1240  009B                     	;# 
  1241  009C                     	;# 
  1242  009D                     	;# 
  1243  009E                     	;# 
  1244  010C                     	;# 
  1245  010D                     	;# 
  1246  0111                     	;# 
  1247  0112                     	;# 
  1248  0113                     	;# 
  1249  0114                     	;# 
  1250  0115                     	;# 
  1251  0116                     	;# 
  1252  0117                     	;# 
  1253  0118                     	;# 
  1254  0119                     	;# 
  1255  011A                     	;# 
  1256  011B                     	;# 
  1257  011D                     	;# 
  1258  011E                     	;# 
  1259  018C                     	;# 
  1260  018D                     	;# 
  1261  0191                     	;# 
  1262  0191                     	;# 
  1263  0192                     	;# 
  1264  0193                     	;# 
  1265  0193                     	;# 
  1266  0193                     	;# 
  1267  0194                     	;# 
  1268  0195                     	;# 
  1269  0196                     	;# 
  1270  0199                     	;# 
  1271  019A                     	;# 
  1272  019B                     	;# 
  1273  019B                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019C                     	;# 
  1277  019C                     	;# 
  1278  019D                     	;# 
  1279  019E                     	;# 
  1280  019F                     	;# 
  1281  020C                     	;# 
  1282  020D                     	;# 
  1283  0211                     	;# 
  1284  0211                     	;# 
  1285  0212                     	;# 
  1286  0212                     	;# 
  1287  0213                     	;# 
  1288  0213                     	;# 
  1289  0214                     	;# 
  1290  0214                     	;# 
  1291  0215                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0216                     	;# 
  1295  0216                     	;# 
  1296  0217                     	;# 
  1297  0217                     	;# 
  1298  0219                     	;# 
  1299  021A                     	;# 
  1300  021B                     	;# 
  1301  021C                     	;# 
  1302  021D                     	;# 
  1303  021E                     	;# 
  1304  021F                     	;# 
  1305  0291                     	;# 
  1306  0291                     	;# 
  1307  0292                     	;# 
  1308  0293                     	;# 
  1309  0294                     	;# 
  1310  0295                     	;# 
  1311  0295                     	;# 
  1312  0296                     	;# 
  1313  0298                     	;# 
  1314  0298                     	;# 
  1315  0299                     	;# 
  1316  029A                     	;# 
  1317  029B                     	;# 
  1318  029C                     	;# 
  1319  029C                     	;# 
  1320  029D                     	;# 
  1321  029E                     	;# 
  1322  029E                     	;# 
  1323  0311                     	;# 
  1324  0311                     	;# 
  1325  0312                     	;# 
  1326  0313                     	;# 
  1327  0318                     	;# 
  1328  0318                     	;# 
  1329  0319                     	;# 
  1330  031A                     	;# 
  1331  0394                     	;# 
  1332  0395                     	;# 
  1333  0396                     	;# 
  1334  039A                     	;# 
  1335  039C                     	;# 
  1336  039D                     	;# 
  1337  039E                     	;# 
  1338  039F                     	;# 
  1339  0415                     	;# 
  1340  0416                     	;# 
  1341  0417                     	;# 
  1342  041C                     	;# 
  1343  041D                     	;# 
  1344  041E                     	;# 
  1345  0FE4                     	;# 
  1346  0FE5                     	;# 
  1347  0FE6                     	;# 
  1348  0FE7                     	;# 
  1349  0FE8                     	;# 
  1350  0FE9                     	;# 
  1351  0FEA                     	;# 
  1352  0FEB                     	;# 
  1353  0FED                     	;# 
  1354  0FEE                     	;# 
  1355  0FEF                     	;# 
  1356  0000                     	;# 
  1357  0001                     	;# 
  1358  0002                     	;# 
  1359  0003                     	;# 
  1360  0004                     	;# 
  1361  0005                     	;# 
  1362  0006                     	;# 
  1363  0007                     	;# 
  1364  0008                     	;# 
  1365  0009                     	;# 
  1366  000A                     	;# 
  1367  000B                     	;# 
  1368  000C                     	;# 
  1369  000D                     	;# 
  1370  0011                     	;# 
  1371  0012                     	;# 
  1372  0013                     	;# 
  1373  0014                     	;# 
  1374  0015                     	;# 
  1375  0016                     	;# 
  1376  0016                     	;# 
  1377  0017                     	;# 
  1378  0018                     	;# 
  1379  0019                     	;# 
  1380  001A                     	;# 
  1381  001B                     	;# 
  1382  001C                     	;# 
  1383  001E                     	;# 
  1384  001F                     	;# 
  1385  008C                     	;# 
  1386  008D                     	;# 
  1387  0091                     	;# 
  1388  0092                     	;# 
  1389  0093                     	;# 
  1390  0094                     	;# 
  1391  0095                     	;# 
  1392  0096                     	;# 
  1393  0097                     	;# 
  1394  0098                     	;# 
  1395  0099                     	;# 
  1396  009A                     	;# 
  1397  009B                     	;# 
  1398  009B                     	;# 
  1399  009C                     	;# 
  1400  009D                     	;# 
  1401  009E                     	;# 
  1402  010C                     	;# 
  1403  010D                     	;# 
  1404  0111                     	;# 
  1405  0112                     	;# 
  1406  0113                     	;# 
  1407  0114                     	;# 
  1408  0115                     	;# 
  1409  0116                     	;# 
  1410  0117                     	;# 
  1411  0118                     	;# 
  1412  0119                     	;# 
  1413  011A                     	;# 
  1414  011B                     	;# 
  1415  011D                     	;# 
  1416  011E                     	;# 
  1417  018C                     	;# 
  1418  018D                     	;# 
  1419  0191                     	;# 
  1420  0191                     	;# 
  1421  0192                     	;# 
  1422  0193                     	;# 
  1423  0193                     	;# 
  1424  0193                     	;# 
  1425  0194                     	;# 
  1426  0195                     	;# 
  1427  0196                     	;# 
  1428  0199                     	;# 
  1429  019A                     	;# 
  1430  019B                     	;# 
  1431  019B                     	;# 
  1432  019B                     	;# 
  1433  019B                     	;# 
  1434  019C                     	;# 
  1435  019C                     	;# 
  1436  019D                     	;# 
  1437  019E                     	;# 
  1438  019F                     	;# 
  1439  020C                     	;# 
  1440  020D                     	;# 
  1441  0211                     	;# 
  1442  0211                     	;# 
  1443  0212                     	;# 
  1444  0212                     	;# 
  1445  0213                     	;# 
  1446  0213                     	;# 
  1447  0214                     	;# 
  1448  0214                     	;# 
  1449  0215                     	;# 
  1450  0215                     	;# 
  1451  0215                     	;# 
  1452  0216                     	;# 
  1453  0216                     	;# 
  1454  0217                     	;# 
  1455  0217                     	;# 
  1456  0219                     	;# 
  1457  021A                     	;# 
  1458  021B                     	;# 
  1459  021C                     	;# 
  1460  021D                     	;# 
  1461  021E                     	;# 
  1462  021F                     	;# 
  1463  0291                     	;# 
  1464  0291                     	;# 
  1465  0292                     	;# 
  1466  0293                     	;# 
  1467  0294                     	;# 
  1468  0295                     	;# 
  1469  0295                     	;# 
  1470  0296                     	;# 
  1471  0298                     	;# 
  1472  0298                     	;# 
  1473  0299                     	;# 
  1474  029A                     	;# 
  1475  029B                     	;# 
  1476  029C                     	;# 
  1477  029C                     	;# 
  1478  029D                     	;# 
  1479  029E                     	;# 
  1480  029E                     	;# 
  1481  0311                     	;# 
  1482  0311                     	;# 
  1483  0312                     	;# 
  1484  0313                     	;# 
  1485  0318                     	;# 
  1486  0318                     	;# 
  1487  0319                     	;# 
  1488  031A                     	;# 
  1489  0394                     	;# 
  1490  0395                     	;# 
  1491  0396                     	;# 
  1492  039A                     	;# 
  1493  039C                     	;# 
  1494  039D                     	;# 
  1495  039E                     	;# 
  1496  039F                     	;# 
  1497  0415                     	;# 
  1498  0416                     	;# 
  1499  0417                     	;# 
  1500  041C                     	;# 
  1501  041D                     	;# 
  1502  041E                     	;# 
  1503  0FE4                     	;# 
  1504  0FE5                     	;# 
  1505  0FE6                     	;# 
  1506  0FE7                     	;# 
  1507  0FE8                     	;# 
  1508  0FE9                     	;# 
  1509  0FEA                     	;# 
  1510  0FEB                     	;# 
  1511  0FED                     	;# 
  1512  0FEE                     	;# 
  1513  0FEF                     	;# 
  1514  0000                     	;# 
  1515  0001                     	;# 
  1516  0002                     	;# 
  1517  0003                     	;# 
  1518  0004                     	;# 
  1519  0005                     	;# 
  1520  0006                     	;# 
  1521  0007                     	;# 
  1522  0008                     	;# 
  1523  0009                     	;# 
  1524  000A                     	;# 
  1525  000B                     	;# 
  1526  000C                     	;# 
  1527  000D                     	;# 
  1528  0011                     	;# 
  1529  0012                     	;# 
  1530  0013                     	;# 
  1531  0014                     	;# 
  1532  0015                     	;# 
  1533  0016                     	;# 
  1534  0016                     	;# 
  1535  0017                     	;# 
  1536  0018                     	;# 
  1537  0019                     	;# 
  1538  001A                     	;# 
  1539  001B                     	;# 
  1540  001C                     	;# 
  1541  001E                     	;# 
  1542  001F                     	;# 
  1543  008C                     	;# 
  1544  008D                     	;# 
  1545  0091                     	;# 
  1546  0092                     	;# 
  1547  0093                     	;# 
  1548  0094                     	;# 
  1549  0095                     	;# 
  1550  0096                     	;# 
  1551  0097                     	;# 
  1552  0098                     	;# 
  1553  0099                     	;# 
  1554  009A                     	;# 
  1555  009B                     	;# 
  1556  009B                     	;# 
  1557  009C                     	;# 
  1558  009D                     	;# 
  1559  009E                     	;# 
  1560  010C                     	;# 
  1561  010D                     	;# 
  1562  0111                     	;# 
  1563  0112                     	;# 
  1564  0113                     	;# 
  1565  0114                     	;# 
  1566  0115                     	;# 
  1567  0116                     	;# 
  1568  0117                     	;# 
  1569  0118                     	;# 
  1570  0119                     	;# 
  1571  011A                     	;# 
  1572  011B                     	;# 
  1573  011D                     	;# 
  1574  011E                     	;# 
  1575  018C                     	;# 
  1576  018D                     	;# 
  1577  0191                     	;# 
  1578  0191                     	;# 
  1579  0192                     	;# 
  1580  0193                     	;# 
  1581  0193                     	;# 
  1582  0193                     	;# 
  1583  0194                     	;# 
  1584  0195                     	;# 
  1585  0196                     	;# 
  1586  0199                     	;# 
  1587  019A                     	;# 
  1588  019B                     	;# 
  1589  019B                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019C                     	;# 
  1593  019C                     	;# 
  1594  019D                     	;# 
  1595  019E                     	;# 
  1596  019F                     	;# 
  1597  020C                     	;# 
  1598  020D                     	;# 
  1599  0211                     	;# 
  1600  0211                     	;# 
  1601  0212                     	;# 
  1602  0212                     	;# 
  1603  0213                     	;# 
  1604  0213                     	;# 
  1605  0214                     	;# 
  1606  0214                     	;# 
  1607  0215                     	;# 
  1608  0215                     	;# 
  1609  0215                     	;# 
  1610  0216                     	;# 
  1611  0216                     	;# 
  1612  0217                     	;# 
  1613  0217                     	;# 
  1614  0219                     	;# 
  1615  021A                     	;# 
  1616  021B                     	;# 
  1617  021C                     	;# 
  1618  021D                     	;# 
  1619  021E                     	;# 
  1620  021F                     	;# 
  1621  0291                     	;# 
  1622  0291                     	;# 
  1623  0292                     	;# 
  1624  0293                     	;# 
  1625  0294                     	;# 
  1626  0295                     	;# 
  1627  0295                     	;# 
  1628  0296                     	;# 
  1629  0298                     	;# 
  1630  0298                     	;# 
  1631  0299                     	;# 
  1632  029A                     	;# 
  1633  029B                     	;# 
  1634  029C                     	;# 
  1635  029C                     	;# 
  1636  029D                     	;# 
  1637  029E                     	;# 
  1638  029E                     	;# 
  1639  0311                     	;# 
  1640  0311                     	;# 
  1641  0312                     	;# 
  1642  0313                     	;# 
  1643  0318                     	;# 
  1644  0318                     	;# 
  1645  0319                     	;# 
  1646  031A                     	;# 
  1647  0394                     	;# 
  1648  0395                     	;# 
  1649  0396                     	;# 
  1650  039A                     	;# 
  1651  039C                     	;# 
  1652  039D                     	;# 
  1653  039E                     	;# 
  1654  039F                     	;# 
  1655  0415                     	;# 
  1656  0416                     	;# 
  1657  0417                     	;# 
  1658  041C                     	;# 
  1659  041D                     	;# 
  1660  041E                     	;# 
  1661  0FE4                     	;# 
  1662  0FE5                     	;# 
  1663  0FE6                     	;# 
  1664  0FE7                     	;# 
  1665  0FE8                     	;# 
  1666  0FE9                     	;# 
  1667  0FEA                     	;# 
  1668  0FEB                     	;# 
  1669  0FED                     	;# 
  1670  0FEE                     	;# 
  1671  0FEF                     	;# 
  1672  0000                     	;# 
  1673  0001                     	;# 
  1674  0002                     	;# 
  1675  0003                     	;# 
  1676  0004                     	;# 
  1677  0005                     	;# 
  1678  0006                     	;# 
  1679  0007                     	;# 
  1680  0008                     	;# 
  1681  0009                     	;# 
  1682  000A                     	;# 
  1683  000B                     	;# 
  1684  000C                     	;# 
  1685  000D                     	;# 
  1686  0011                     	;# 
  1687  0012                     	;# 
  1688  0013                     	;# 
  1689  0014                     	;# 
  1690  0015                     	;# 
  1691  0016                     	;# 
  1692  0016                     	;# 
  1693  0017                     	;# 
  1694  0018                     	;# 
  1695  0019                     	;# 
  1696  001A                     	;# 
  1697  001B                     	;# 
  1698  001C                     	;# 
  1699  001E                     	;# 
  1700  001F                     	;# 
  1701  008C                     	;# 
  1702  008D                     	;# 
  1703  0091                     	;# 
  1704  0092                     	;# 
  1705  0093                     	;# 
  1706  0094                     	;# 
  1707  0095                     	;# 
  1708  0096                     	;# 
  1709  0097                     	;# 
  1710  0098                     	;# 
  1711  0099                     	;# 
  1712  009A                     	;# 
  1713  009B                     	;# 
  1714  009B                     	;# 
  1715  009C                     	;# 
  1716  009D                     	;# 
  1717  009E                     	;# 
  1718  010C                     	;# 
  1719  010D                     	;# 
  1720  0111                     	;# 
  1721  0112                     	;# 
  1722  0113                     	;# 
  1723  0114                     	;# 
  1724  0115                     	;# 
  1725  0116                     	;# 
  1726  0117                     	;# 
  1727  0118                     	;# 
  1728  0119                     	;# 
  1729  011A                     	;# 
  1730  011B                     	;# 
  1731  011D                     	;# 
  1732  011E                     	;# 
  1733  018C                     	;# 
  1734  018D                     	;# 
  1735  0191                     	;# 
  1736  0191                     	;# 
  1737  0192                     	;# 
  1738  0193                     	;# 
  1739  0193                     	;# 
  1740  0193                     	;# 
  1741  0194                     	;# 
  1742  0195                     	;# 
  1743  0196                     	;# 
  1744  0199                     	;# 
  1745  019A                     	;# 
  1746  019B                     	;# 
  1747  019B                     	;# 
  1748  019B                     	;# 
  1749  019B                     	;# 
  1750  019C                     	;# 
  1751  019C                     	;# 
  1752  019D                     	;# 
  1753  019E                     	;# 
  1754  019F                     	;# 
  1755  020C                     	;# 
  1756  020D                     	;# 
  1757  0211                     	;# 
  1758  0211                     	;# 
  1759  0212                     	;# 
  1760  0212                     	;# 
  1761  0213                     	;# 
  1762  0213                     	;# 
  1763  0214                     	;# 
  1764  0214                     	;# 
  1765  0215                     	;# 
  1766  0215                     	;# 
  1767  0215                     	;# 
  1768  0216                     	;# 
  1769  0216                     	;# 
  1770  0217                     	;# 
  1771  0217                     	;# 
  1772  0219                     	;# 
  1773  021A                     	;# 
  1774  021B                     	;# 
  1775  021C                     	;# 
  1776  021D                     	;# 
  1777  021E                     	;# 
  1778  021F                     	;# 
  1779  0291                     	;# 
  1780  0291                     	;# 
  1781  0292                     	;# 
  1782  0293                     	;# 
  1783  0294                     	;# 
  1784  0295                     	;# 
  1785  0295                     	;# 
  1786  0296                     	;# 
  1787  0298                     	;# 
  1788  0298                     	;# 
  1789  0299                     	;# 
  1790  029A                     	;# 
  1791  029B                     	;# 
  1792  029C                     	;# 
  1793  029C                     	;# 
  1794  029D                     	;# 
  1795  029E                     	;# 
  1796  029E                     	;# 
  1797  0311                     	;# 
  1798  0311                     	;# 
  1799  0312                     	;# 
  1800  0313                     	;# 
  1801  0318                     	;# 
  1802  0318                     	;# 
  1803  0319                     	;# 
  1804  031A                     	;# 
  1805  0394                     	;# 
  1806  0395                     	;# 
  1807  0396                     	;# 
  1808  039A                     	;# 
  1809  039C                     	;# 
  1810  039D                     	;# 
  1811  039E                     	;# 
  1812  039F                     	;# 
  1813  0415                     	;# 
  1814  0416                     	;# 
  1815  0417                     	;# 
  1816  041C                     	;# 
  1817  041D                     	;# 
  1818  041E                     	;# 
  1819  0FE4                     	;# 
  1820  0FE5                     	;# 
  1821  0FE6                     	;# 
  1822  0FE7                     	;# 
  1823  0FE8                     	;# 
  1824  0FE9                     	;# 
  1825  0FEA                     	;# 
  1826  0FEB                     	;# 
  1827  0FED                     	;# 
  1828  0FEE                     	;# 
  1829  0FEF                     	;# 
  1830  0000                     	;# 
  1831  0001                     	;# 
  1832  0002                     	;# 
  1833  0003                     	;# 
  1834  0004                     	;# 
  1835  0005                     	;# 
  1836  0006                     	;# 
  1837  0007                     	;# 
  1838  0008                     	;# 
  1839  0009                     	;# 
  1840  000A                     	;# 
  1841  000B                     	;# 
  1842  000C                     	;# 
  1843  000D                     	;# 
  1844  0011                     	;# 
  1845  0012                     	;# 
  1846  0013                     	;# 
  1847  0014                     	;# 
  1848  0015                     	;# 
  1849  0016                     	;# 
  1850  0016                     	;# 
  1851  0017                     	;# 
  1852  0018                     	;# 
  1853  0019                     	;# 
  1854  001A                     	;# 
  1855  001B                     	;# 
  1856  001C                     	;# 
  1857  001E                     	;# 
  1858  001F                     	;# 
  1859  008C                     	;# 
  1860  008D                     	;# 
  1861  0091                     	;# 
  1862  0092                     	;# 
  1863  0093                     	;# 
  1864  0094                     	;# 
  1865  0095                     	;# 
  1866  0096                     	;# 
  1867  0097                     	;# 
  1868  0098                     	;# 
  1869  0099                     	;# 
  1870  009A                     	;# 
  1871  009B                     	;# 
  1872  009B                     	;# 
  1873  009C                     	;# 
  1874  009D                     	;# 
  1875  009E                     	;# 
  1876  010C                     	;# 
  1877  010D                     	;# 
  1878  0111                     	;# 
  1879  0112                     	;# 
  1880  0113                     	;# 
  1881  0114                     	;# 
  1882  0115                     	;# 
  1883  0116                     	;# 
  1884  0117                     	;# 
  1885  0118                     	;# 
  1886  0119                     	;# 
  1887  011A                     	;# 
  1888  011B                     	;# 
  1889  011D                     	;# 
  1890  011E                     	;# 
  1891  018C                     	;# 
  1892  018D                     	;# 
  1893  0191                     	;# 
  1894  0191                     	;# 
  1895  0192                     	;# 
  1896  0193                     	;# 
  1897  0193                     	;# 
  1898  0193                     	;# 
  1899  0194                     	;# 
  1900  0195                     	;# 
  1901  0196                     	;# 
  1902  0199                     	;# 
  1903  019A                     	;# 
  1904  019B                     	;# 
  1905  019B                     	;# 
  1906  019B                     	;# 
  1907  019B                     	;# 
  1908  019C                     	;# 
  1909  019C                     	;# 
  1910  019D                     	;# 
  1911  019E                     	;# 
  1912  019F                     	;# 
  1913  020C                     	;# 
  1914  020D                     	;# 
  1915  0211                     	;# 
  1916  0211                     	;# 
  1917  0212                     	;# 
  1918  0212                     	;# 
  1919  0213                     	;# 
  1920  0213                     	;# 
  1921  0214                     	;# 
  1922  0214                     	;# 
  1923  0215                     	;# 
  1924  0215                     	;# 
  1925  0215                     	;# 
  1926  0216                     	;# 
  1927  0216                     	;# 
  1928  0217                     	;# 
  1929  0217                     	;# 
  1930  0219                     	;# 
  1931  021A                     	;# 
  1932  021B                     	;# 
  1933  021C                     	;# 
  1934  021D                     	;# 
  1935  021E                     	;# 
  1936  021F                     	;# 
  1937  0291                     	;# 
  1938  0291                     	;# 
  1939  0292                     	;# 
  1940  0293                     	;# 
  1941  0294                     	;# 
  1942  0295                     	;# 
  1943  0295                     	;# 
  1944  0296                     	;# 
  1945  0298                     	;# 
  1946  0298                     	;# 
  1947  0299                     	;# 
  1948  029A                     	;# 
  1949  029B                     	;# 
  1950  029C                     	;# 
  1951  029C                     	;# 
  1952  029D                     	;# 
  1953  029E                     	;# 
  1954  029E                     	;# 
  1955  0311                     	;# 
  1956  0311                     	;# 
  1957  0312                     	;# 
  1958  0313                     	;# 
  1959  0318                     	;# 
  1960  0318                     	;# 
  1961  0319                     	;# 
  1962  031A                     	;# 
  1963  0394                     	;# 
  1964  0395                     	;# 
  1965  0396                     	;# 
  1966  039A                     	;# 
  1967  039C                     	;# 
  1968  039D                     	;# 
  1969  039E                     	;# 
  1970  039F                     	;# 
  1971  0415                     	;# 
  1972  0416                     	;# 
  1973  0417                     	;# 
  1974  041C                     	;# 
  1975  041D                     	;# 
  1976  041E                     	;# 
  1977  0FE4                     	;# 
  1978  0FE5                     	;# 
  1979  0FE6                     	;# 
  1980  0FE7                     	;# 
  1981  0FE8                     	;# 
  1982  0FE9                     	;# 
  1983  0FEA                     	;# 
  1984  0FEB                     	;# 
  1985  0FED                     	;# 
  1986  0FEE                     	;# 
  1987  0FEF                     	;# 
  1988                           
  1989                           	psect	idataBANK1
  1990  07E1                     __pidataBANK1:	
  1991                           
  1992                           ;initializer for _DAC_VoltageTable
  1993  07E1  34BA               	retlw	low (STR_4| (0+32768))
  1994  07E2  3483               	retlw	high (STR_4| (0+32768))
  1995  07E3  346A               	retlw	low (STR_5| (0+32768))
  1996  07E4  3483               	retlw	high (STR_5| (0+32768))
  1997  07E5  34BF               	retlw	low (STR_6| (0+32768))
  1998  07E6  3483               	retlw	high (STR_6| (0+32768))
  1999  07E7  3470               	retlw	low (STR_7| (0+32768))
  2000  07E8  3483               	retlw	high (STR_7| (0+32768))
  2001  07E9  34C4               	retlw	low (STR_8| (0+32768))
  2002  07EA  3483               	retlw	high (STR_8| (0+32768))
  2003  07EB  3476               	retlw	low (STR_9| (0+32768))
  2004  07EC  3483               	retlw	high (STR_9| (0+32768))
  2005  07ED  34C9               	retlw	low (STR_10| (0+32768))
  2006  07EE  3483               	retlw	high (STR_10| (0+32768))
  2007  07EF  347C               	retlw	low (STR_11| (0+32768))
  2008  07F0  3483               	retlw	high (STR_11| (0+32768))
  2009  07F1  34CE               	retlw	low (STR_12| (0+32768))
  2010  07F2  3483               	retlw	high (STR_12| (0+32768))
  2011  07F3  3482               	retlw	low (STR_13| (0+32768))
  2012  07F4  3483               	retlw	high (STR_13| (0+32768))
  2013  07F5  34AB               	retlw	low (STR_14| (0+32768))
  2014  07F6  3483               	retlw	high (STR_14| (0+32768))
  2015  07F7  345E               	retlw	low (STR_15| (0+32768))
  2016  07F8  3483               	retlw	high (STR_15| (0+32768))
  2017  07F9  34B0               	retlw	low (STR_16| (0+32768))
  2018  07FA  3483               	retlw	high (STR_16| (0+32768))
  2019  07FB  3464               	retlw	low (STR_17| (0+32768))
  2020  07FC  3483               	retlw	high (STR_17| (0+32768))
  2021  07FD  34B5               	retlw	low (STR_18| (0+32768))
  2022  07FE  3483               	retlw	high (STR_18| (0+32768))
  2023                           
  2024                           	psect	idataBANK2
  2025  0F87                     __pidataBANK2:	
  2026                           
  2027                           ;initializer for _H7826_01_Gain
  2028  0F87  3488               	retlw	low (STR_34| (0+32768))
  2029  0F88  3483               	retlw	high (STR_34| (0+32768))
  2030  0F89  348D               	retlw	low (STR_35| (0+32768))
  2031  0F8A  3483               	retlw	high (STR_35| (0+32768))
  2032  0F8B  34A1               	retlw	low (STR_36| (0+32768))
  2033  0F8C  3483               	retlw	high (STR_36| (0+32768))
  2034  0F8D  3492               	retlw	low (STR_37| (0+32768))
  2035  0F8E  3483               	retlw	high (STR_37| (0+32768))
  2036  0F8F  3440               	retlw	low (STR_38| (0+32768))
  2037  0F90  3483               	retlw	high (STR_38| (0+32768))
  2038  0F91  3446               	retlw	low (STR_39| (0+32768))
  2039  0F92  3483               	retlw	high (STR_39| (0+32768))
  2040  0F93  344C               	retlw	low (STR_40| (0+32768))
  2041  0F94  3483               	retlw	high (STR_40| (0+32768))
  2042  0F95  3434               	retlw	low (STR_41| (0+32768))
  2043  0F96  3483               	retlw	high (STR_41| (0+32768))
  2044  0F97  34E3               	retlw	low (STR_42| (0+32768))
  2045  0F98  3482               	retlw	high (STR_42| (0+32768))
  2046  0F99  340D               	retlw	low (STR_43| (0+32768))
  2047  0F9A  3483               	retlw	high (STR_43| (0+32768))
  2048  0F9B  34EA               	retlw	low (STR_44| (0+32768))
  2049  0F9C  3482               	retlw	high (STR_44| (0+32768))
  2050  0F9D  34F1               	retlw	low (STR_45| (0+32768))
  2051  0F9E  3482               	retlw	high (STR_45| (0+32768))
  2052  0F9F  341B               	retlw	low (STR_46| (0+32768))
  2053  0FA0  3483               	retlw	high (STR_46| (0+32768))
  2054  0FA1  34D5               	retlw	low (STR_47| (0+32768))
  2055  0FA2  3482               	retlw	high (STR_47| (0+32768))
  2056  0FA3  34DC               	retlw	low (STR_48| (0+32768))
  2057  0FA4  3482               	retlw	high (STR_48| (0+32768))
  2058                           
  2059                           ;initializer for _H7826_Gain
  2060  0FA5  349C               	retlw	low (STR_19| (0+32768))
  2061  0FA6  3483               	retlw	high (STR_19| (0+32768))
  2062  0FA7  3497               	retlw	low (STR_20| (0+32768))
  2063  0FA8  3483               	retlw	high (STR_20| (0+32768))
  2064  0FA9  34A6               	retlw	low (STR_21| (0+32768))
  2065  0FAA  3483               	retlw	high (STR_21| (0+32768))
  2066  0FAB  3458               	retlw	low (STR_22| (0+32768))
  2067  0FAC  3483               	retlw	high (STR_22| (0+32768))
  2068  0FAD  342E               	retlw	low (STR_23| (0+32768))
  2069  0FAE  3483               	retlw	high (STR_23| (0+32768))
  2070  0FAF  343A               	retlw	low (STR_24| (0+32768))
  2071  0FB0  3483               	retlw	high (STR_24| (0+32768))
  2072  0FB1  3452               	retlw	low (STR_25| (0+32768))
  2073  0FB2  3483               	retlw	high (STR_25| (0+32768))
  2074  0FB3  34FF               	retlw	low (STR_26| (0+32768))
  2075  0FB4  3482               	retlw	high (STR_26| (0+32768))
  2076  0FB5  34F8               	retlw	low (STR_27| (0+32768))
  2077  0FB6  3482               	retlw	high (STR_27| (0+32768))
  2078  0FB7  3406               	retlw	low (STR_28| (0+32768))
  2079  0FB8  3483               	retlw	high (STR_28| (0+32768))
  2080  0FB9  34CE               	retlw	low (STR_29| (0+32768))
  2081  0FBA  3482               	retlw	high (STR_29| (0+32768))
  2082  0FBB  3414               	retlw	low (STR_30| (0+32768))
  2083  0FBC  3483               	retlw	high (STR_30| (0+32768))
  2084  0FBD  34B8               	retlw	low (STR_31| (0+32768))
  2085  0FBE  3482               	retlw	high (STR_31| (0+32768))
  2086  0FBF  34B0               	retlw	low (STR_32| (0+32768))
  2087  0FC0  3482               	retlw	high (STR_32| (0+32768))
  2088  0FC1  34A8               	retlw	low (STR_33| (0+32768))
  2089  0FC2  3482               	retlw	high (STR_33| (0+32768))
  2090                           
  2091                           	psect	stringtext
  2092  028A                     __pstringtext:	
  2093  028A                     _DAC_DataTable:	
  2094  028A  3499               	retlw	153
  2095  028B  3401               	retlw	1
  2096  028C  34C2               	retlw	194
  2097  028D  3401               	retlw	1
  2098  028E  34EB               	retlw	235
  2099  028F  3401               	retlw	1
  2100  0290  3414               	retlw	20
  2101  0291  3402               	retlw	2
  2102  0292  343D               	retlw	61
  2103  0293  3402               	retlw	2
  2104  0294  3466               	retlw	102
  2105  0295  3402               	retlw	2
  2106  0296  348F               	retlw	143
  2107  0297  3402               	retlw	2
  2108  0298  34B8               	retlw	184
  2109  0299  3402               	retlw	2
  2110  029A  34E1               	retlw	225
  2111  029B  3402               	retlw	2
  2112  029C  340A               	retlw	10
  2113  029D  3403               	retlw	3
  2114  029E  3433               	retlw	51
  2115  029F  3403               	retlw	3
  2116  02A0  345B               	retlw	91
  2117  02A1  3403               	retlw	3
  2118  02A2  3484               	retlw	132
  2119  02A3  3403               	retlw	3
  2120  02A4  34AD               	retlw	173
  2121  02A5  3403               	retlw	3
  2122  02A6  34D6               	retlw	214
  2123  02A7  3403               	retlw	3
  2124  02A8                     __end_of_DAC_DataTable:	
  2125  0016                     _TMR1	set	22
  2126  000C                     _PORTA	set	12
  2127  001F                     _CPSCON1	set	31
  2128  001E                     _CPSCON0	set	30
  2129  0015                     _TMR0	set	21
  2130  0019                     _T1GCON	set	25
  2131  0018                     _T1CON	set	24
  2132  000D                     _PORTB	set	13
  2133  001B                     _PR2	set	27
  2134  001A                     _TMR2	set	26
  2135  001C                     _T2CON	set	28
  2136  0099                     _TMR4IF	set	153
  2137  00C0                     _TMR1ON	set	192
  2138  0088                     _TMR1IF	set	136
  2139  005F                     _GIE	set	95
  2140  005E                     _PEIE	set	94
  2141  00A1                     _BCL2IF	set	161
  2142  00A0                     _SSP2IF	set	160
  2143  0093                     _BCL1IF	set	147
  2144  008B                     _SSP1IF	set	139
  2145  0099                     _OSCCON	set	153
  2146  0095                     _OPTION_REG	set	149
  2147  008D                     _TRISB	set	141
  2148  008C                     _TRISA	set	140
  2149  0499                     _TMR4IE	set	1177
  2150  0488                     _TMR1IE	set	1160
  2151  04A1                     _BCL2IE	set	1185
  2152  04A0                     _SSP2IE	set	1184
  2153  0493                     _BCL1IE	set	1171
  2154  048B                     _SSP1IE	set	1163
  2155  011E                     _APFCON1	set	286
  2156  011D                     _APFCON0	set	285
  2157  0866                     _LATA6	set	2150
  2158  0863                     _LATA3	set	2147
  2159  0864                     _LATA4	set	2148
  2160  018D                     _ANSELB	set	397
  2161  018C                     _ANSELA	set	396
  2162  021C                     _SSP2STATbits	set	540
  2163  0219                     _SSP2BUF	set	537
  2164  021E                     _SSP2CON2	set	542
  2165  021B                     _SSP2MSK	set	539
  2166  021E                     _SSP2CON2bits	set	542
  2167  021D                     _SSP2CON1bits	set	541
  2168  021A                     _SSP2ADD	set	538
  2169  021C                     _SSP2STAT	set	540
  2170  021D                     _SSP2CON1	set	541
  2171  0214                     _SSP1STATbits	set	532
  2172  0211                     _SSP1BUF	set	529
  2173  0216                     _SSP1CON2	set	534
  2174  0213                     _SSP1MSK	set	531
  2175  0216                     _SSP1CON2bits	set	534
  2176  0215                     _SSP1CON1bits	set	533
  2177  0212                     _SSP1ADD	set	530
  2178  0214                     _SSP1STAT	set	532
  2179  0215                     _SSP1CON1	set	533
  2180  0298                     _CCPR2L	set	664
  2181  029E                     _CCPTMRS	set	670
  2182  029A                     _CCP2CON	set	666
  2183  0417                     _T4CON	set	1047
  2184  0415                     _TMR4	set	1045
  2185  0416                     _PR4	set	1046
  2186  02A8                     STR_33:	
  2187  02A8  3432               	retlw	50	;'2'
  2188  02A9  3437               	retlw	55	;'7'
  2189  02AA  3437               	retlw	55	;'7'
  2190  02AB  3434               	retlw	52	;'4'
  2191  02AC  3435               	retlw	53	;'5'
  2192  02AD  3436               	retlw	54	;'6'
  2193  02AE  3432               	retlw	50	;'2'
  2194  02AF  3400               	retlw	0
  2195  02B0                     STR_32:	
  2196  02B0  3431               	retlw	49	;'1'
  2197  02B1  3439               	retlw	57	;'9'
  2198  02B2  3434               	retlw	52	;'4'
  2199  02B3  3430               	retlw	48	;'0'
  2200  02B4  3436               	retlw	54	;'6'
  2201  02B5  3437               	retlw	55	;'7'
  2202  02B6  3433               	retlw	51	;'3'
  2203  02B7  3400               	retlw	0
  2204  02B8                     STR_31:	
  2205  02B8  3431               	retlw	49	;'1'
  2206  02B9  3433               	retlw	51	;'3'
  2207  02BA  3433               	retlw	51	;'3'
  2208  02BB  3436               	retlw	54	;'6'
  2209  02BC  3430               	retlw	48	;'0'
  2210  02BD  3430               	retlw	48	;'0'
  2211  02BE  3436               	retlw	54	;'6'
  2212  02BF  3400               	retlw	0
  2213  02C0                     STR_50:	
  2214  02C0  3425               	retlw	37	;'%'
  2215  02C1  3430               	retlw	48	;'0'
  2216  02C2  3438               	retlw	56	;'8'
  2217  02C3  346C               	retlw	108	;'l'
  2218  02C4  3458               	retlw	88	;'X'
  2219  02C5  3420               	retlw	32	;' '
  2220  02C6  3400               	retlw	0
  2221  02C7                     STR_53:	
  2222  02C7  3420               	retlw	32	;' '
  2223  02C8  3425               	retlw	37	;'%'
  2224  02C9  3430               	retlw	48	;'0'
  2225  02CA  3438               	retlw	56	;'8'
  2226  02CB  344C               	retlw	76	;'L'
  2227  02CC  3458               	retlw	88	;'X'
  2228  02CD  3400               	retlw	0
  2229  02CE                     STR_29:	
  2230  02CE  3436               	retlw	54	;'6'
  2231  02CF  3430               	retlw	48	;'0'
  2232  02D0  3430               	retlw	48	;'0'
  2233  02D1  3430               	retlw	48	;'0'
  2234  02D2  3430               	retlw	48	;'0'
  2235  02D3  3430               	retlw	48	;'0'
  2236  02D4  3400               	retlw	0
  2237  02D5                     STR_47:	
  2238  02D5  3437               	retlw	55	;'7'
  2239  02D6  3430               	retlw	48	;'0'
  2240  02D7  3430               	retlw	48	;'0'
  2241  02D8  3438               	retlw	56	;'8'
  2242  02D9  3439               	retlw	57	;'9'
  2243  02DA  3430               	retlw	48	;'0'
  2244  02DB  3400               	retlw	0
  2245  02DC                     STR_48:	
  2246  02DC  3439               	retlw	57	;'9'
  2247  02DD  3436               	retlw	54	;'6'
  2248  02DE  3438               	retlw	56	;'8'
  2249  02DF  3434               	retlw	52	;'4'
  2250  02E0  3437               	retlw	55	;'7'
  2251  02E1  3432               	retlw	50	;'2'
  2252  02E2  3400               	retlw	0
  2253  02E3                     STR_42:	
  2254  02E3  3431               	retlw	49	;'1'
  2255  02E4  3430               	retlw	48	;'0'
  2256  02E5  3438               	retlw	56	;'8'
  2257  02E6  3438               	retlw	56	;'8'
  2258  02E7  3434               	retlw	52	;'4'
  2259  02E8  3433               	retlw	51	;'3'
  2260  02E9  3400               	retlw	0
  2261  02EA                     STR_44:	
  2262  02EA  3432               	retlw	50	;'2'
  2263  02EB  3434               	retlw	52	;'4'
  2264  02EC  3432               	retlw	50	;'2'
  2265  02ED  3433               	retlw	51	;'3'
  2266  02EE  3436               	retlw	54	;'6'
  2267  02EF  3434               	retlw	52	;'4'
  2268  02F0  3400               	retlw	0
  2269  02F1                     STR_45:	
  2270  02F1  3433               	retlw	51	;'3'
  2271  02F2  3435               	retlw	53	;'5'
  2272  02F3  3431               	retlw	49	;'1'
  2273  02F4  3431               	retlw	49	;'1'
  2274  02F5  3432               	retlw	50	;'2'
  2275  02F6  3437               	retlw	55	;'7'
  2276  02F7  3400               	retlw	0
  2277  02F8                     STR_27:	
  2278  02F8  3432               	retlw	50	;'2'
  2279  02F9  3434               	retlw	52	;'4'
  2280  02FA  3437               	retlw	55	;'7'
  2281  02FB  3436               	retlw	54	;'6'
  2282  02FC  3434               	retlw	52	;'4'
  2283  02FD  3437               	retlw	55	;'7'
  2284  02FE  3400               	retlw	0
  2285  02FF                     STR_26:	
  2286  02FF  3431               	retlw	49	;'1'
  2287  0300  3435               	retlw	53	;'5'
  2288  0301  3433               	retlw	51	;'3'
  2289  0302  3432               	retlw	50	;'2'
  2290  0303  3432               	retlw	50	;'2'
  2291  0304  3438               	retlw	56	;'8'
  2292  0305  3400               	retlw	0
  2293  0306                     STR_28:	
  2294  0306  3433               	retlw	51	;'3'
  2295  0307  3438               	retlw	56	;'8'
  2296  0308  3439               	retlw	57	;'9'
  2297  0309  3439               	retlw	57	;'9'
  2298  030A  3438               	retlw	56	;'8'
  2299  030B  3438               	retlw	56	;'8'
  2300  030C  3400               	retlw	0
  2301  030D                     STR_43:	
  2302  030D  3431               	retlw	49	;'1'
  2303  030E  3436               	retlw	54	;'6'
  2304  030F  3434               	retlw	52	;'4'
  2305  0310  3431               	retlw	49	;'1'
  2306  0311  3433               	retlw	51	;'3'
  2307  0312  3439               	retlw	57	;'9'
  2308  0313  3400               	retlw	0
  2309  0314                     STR_30:	
  2310  0314  3439               	retlw	57	;'9'
  2311  0315  3430               	retlw	48	;'0'
  2312  0316  3433               	retlw	51	;'3'
  2313  0317  3438               	retlw	56	;'8'
  2314  0318  3439               	retlw	57	;'9'
  2315  0319  3439               	retlw	57	;'9'
  2316  031A  3400               	retlw	0
  2317  031B                     STR_46:	
  2318  031B  3434               	retlw	52	;'4'
  2319  031C  3439               	retlw	57	;'9'
  2320  031D  3439               	retlw	57	;'9'
  2321  031E  3439               	retlw	57	;'9'
  2322  031F  3439               	retlw	57	;'9'
  2323  0320  3439               	retlw	57	;'9'
  2324  0321  3400               	retlw	0
  2325  0322                     STR_51:	
  2326  0322  3420               	retlw	32	;' '
  2327  0323  3425               	retlw	37	;'%'
  2328  0324  3430               	retlw	48	;'0'
  2329  0325  3432               	retlw	50	;'2'
  2330  0326  3458               	retlw	88	;'X'
  2331  0327  3400               	retlw	0
  2332  0328                     STR_52:	
  2333  0328  3420               	retlw	32	;' '
  2334  0329  3425               	retlw	37	;'%'
  2335  032A  3430               	retlw	48	;'0'
  2336  032B  3434               	retlw	52	;'4'
  2337  032C  3458               	retlw	88	;'X'
  2338  032D  3400               	retlw	0
  2339  032E                     STR_23:	
  2340  032E  3433               	retlw	51	;'3'
  2341  032F  3430               	retlw	48	;'0'
  2342  0330  3430               	retlw	48	;'0'
  2343  0331  3430               	retlw	48	;'0'
  2344  0332  3430               	retlw	48	;'0'
  2345  0333  3400               	retlw	0
  2346  0334                     STR_41:	
  2347  0334  3437               	retlw	55	;'7'
  2348  0335  3430               	retlw	48	;'0'
  2349  0336  3435               	retlw	53	;'5'
  2350  0337  3430               	retlw	48	;'0'
  2351  0338  3430               	retlw	48	;'0'
  2352  0339  3400               	retlw	0
  2353  033A                     STR_24:	
  2354  033A  3435               	retlw	53	;'5'
  2355  033B  3433               	retlw	51	;'3'
  2356  033C  3435               	retlw	53	;'5'
  2357  033D  3435               	retlw	53	;'5'
  2358  033E  3433               	retlw	51	;'3'
  2359  033F  3400               	retlw	0
  2360  0340                     STR_38:	
  2361  0340  3431               	retlw	49	;'1'
  2362  0341  3436               	retlw	54	;'6'
  2363  0342  3431               	retlw	49	;'1'
  2364  0343  3432               	retlw	50	;'2'
  2365  0344  3435               	retlw	53	;'5'
  2366  0345  3400               	retlw	0
  2367  0346                     STR_39:	
  2368  0346  3432               	retlw	50	;'2'
  2369  0347  3437               	retlw	55	;'7'
  2370  0348  3432               	retlw	50	;'2'
  2371  0349  3433               	retlw	51	;'3'
  2372  034A  3438               	retlw	56	;'8'
  2373  034B  3400               	retlw	0
  2374  034C                     STR_40:	
  2375  034C  3434               	retlw	52	;'4'
  2376  034D  3434               	retlw	52	;'4'
  2377  034E  3434               	retlw	52	;'4'
  2378  034F  3437               	retlw	55	;'7'
  2379  0350  3438               	retlw	56	;'8'
  2380  0351  3400               	retlw	0
  2381  0352                     STR_25:	
  2382  0352  3439               	retlw	57	;'9'
  2383  0353  3432               	retlw	50	;'2'
  2384  0354  3430               	retlw	48	;'0'
  2385  0355  3438               	retlw	56	;'8'
  2386  0356  3438               	retlw	56	;'8'
  2387  0357  3400               	retlw	0
  2388  0358                     STR_22:	
  2389  0358  3431               	retlw	49	;'1'
  2390  0359  3436               	retlw	54	;'6'
  2391  035A  3430               	retlw	48	;'0'
  2392  035B  3439               	retlw	57	;'9'
  2393  035C  3439               	retlw	57	;'9'
  2394  035D  3400               	retlw	0
  2395  035E                     STR_15:	
  2396  035E  3431               	retlw	49	;'1'
  2397  035F  342E               	retlw	46	;'.'
  2398  0360  3430               	retlw	48	;'0'
  2399  0361  3435               	retlw	53	;'5'
  2400  0362  3456               	retlw	86	;'V'
  2401  0363  3400               	retlw	0
  2402  0364                     STR_17:	
  2403  0364  3431               	retlw	49	;'1'
  2404  0365  342E               	retlw	46	;'.'
  2405  0366  3431               	retlw	49	;'1'
  2406  0367  3435               	retlw	53	;'5'
  2407  0368  3456               	retlw	86	;'V'
  2408  0369  3400               	retlw	0
  2409  036A                     STR_5:	
  2410  036A  3430               	retlw	48	;'0'
  2411  036B  342E               	retlw	46	;'.'
  2412  036C  3435               	retlw	53	;'5'
  2413  036D  3435               	retlw	53	;'5'
  2414  036E  3456               	retlw	86	;'V'
  2415  036F  3400               	retlw	0
  2416  0370                     STR_7:	
  2417  0370  3430               	retlw	48	;'0'
  2418  0371  342E               	retlw	46	;'.'
  2419  0372  3436               	retlw	54	;'6'
  2420  0373  3435               	retlw	53	;'5'
  2421  0374  3456               	retlw	86	;'V'
  2422  0375  3400               	retlw	0
  2423  0376                     STR_9:	
  2424  0376  3430               	retlw	48	;'0'
  2425  0377  342E               	retlw	46	;'.'
  2426  0378  3437               	retlw	55	;'7'
  2427  0379  3435               	retlw	53	;'5'
  2428  037A  3456               	retlw	86	;'V'
  2429  037B  3400               	retlw	0
  2430  037C                     STR_11:	
  2431  037C  3430               	retlw	48	;'0'
  2432  037D  342E               	retlw	46	;'.'
  2433  037E  3438               	retlw	56	;'8'
  2434  037F  3435               	retlw	53	;'5'
  2435  0380  3456               	retlw	86	;'V'
  2436  0381  3400               	retlw	0
  2437  0382                     STR_13:	
  2438  0382  3430               	retlw	48	;'0'
  2439  0383  342E               	retlw	46	;'.'
  2440  0384  3439               	retlw	57	;'9'
  2441  0385  3435               	retlw	53	;'5'
  2442  0386  3456               	retlw	86	;'V'
  2443  0387  3400               	retlw	0
  2444  0388                     STR_34:	
  2445  0388  3431               	retlw	49	;'1'
  2446  0389  3432               	retlw	50	;'2'
  2447  038A  3435               	retlw	53	;'5'
  2448  038B  3430               	retlw	48	;'0'
  2449  038C  3400               	retlw	0
  2450  038D                     STR_35:	
  2451  038D  3432               	retlw	50	;'2'
  2452  038E  3435               	retlw	53	;'5'
  2453  038F  3438               	retlw	56	;'8'
  2454  0390  3430               	retlw	48	;'0'
  2455  0391  3400               	retlw	0
  2456  0392                     STR_37:	
  2457  0392  3439               	retlw	57	;'9'
  2458  0393  3431               	retlw	49	;'1'
  2459  0394  3438               	retlw	56	;'8'
  2460  0395  3432               	retlw	50	;'2'
  2461  0396  3400               	retlw	0
  2462  0397                     STR_20:	
  2463  0397  3433               	retlw	51	;'3'
  2464  0398  3439               	retlw	57	;'9'
  2465  0399  3435               	retlw	53	;'5'
  2466  039A  3437               	retlw	55	;'7'
  2467  039B  3400               	retlw	0
  2468  039C                     STR_19:	
  2469  039C  3431               	retlw	49	;'1'
  2470  039D  3437               	retlw	55	;'7'
  2471  039E  3437               	retlw	55	;'7'
  2472  039F  3437               	retlw	55	;'7'
  2473  03A0  3400               	retlw	0
  2474  03A1                     STR_36:	
  2475  03A1  3434               	retlw	52	;'4'
  2476  03A2  3439               	retlw	57	;'9'
  2477  03A3  3439               	retlw	57	;'9'
  2478  03A4  3438               	retlw	56	;'8'
  2479  03A5  3400               	retlw	0
  2480  03A6                     STR_21:	
  2481  03A6  3438               	retlw	56	;'8'
  2482  03A7  3432               	retlw	50	;'2'
  2483  03A8  3431               	retlw	49	;'1'
  2484  03A9  3439               	retlw	57	;'9'
  2485  03AA  3400               	retlw	0
  2486  03AB                     STR_14:	
  2487  03AB  3431               	retlw	49	;'1'
  2488  03AC  342E               	retlw	46	;'.'
  2489  03AD  3430               	retlw	48	;'0'
  2490  03AE  3456               	retlw	86	;'V'
  2491  03AF  3400               	retlw	0
  2492  03B0                     STR_16:	
  2493  03B0  3431               	retlw	49	;'1'
  2494  03B1  342E               	retlw	46	;'.'
  2495  03B2  3431               	retlw	49	;'1'
  2496  03B3  3456               	retlw	86	;'V'
  2497  03B4  3400               	retlw	0
  2498  03B5                     STR_18:	
  2499  03B5  3431               	retlw	49	;'1'
  2500  03B6  342E               	retlw	46	;'.'
  2501  03B7  3432               	retlw	50	;'2'
  2502  03B8  3456               	retlw	86	;'V'
  2503  03B9  3400               	retlw	0
  2504  03BA                     STR_4:	
  2505  03BA  3430               	retlw	48	;'0'
  2506  03BB  342E               	retlw	46	;'.'
  2507  03BC  3435               	retlw	53	;'5'
  2508  03BD  3456               	retlw	86	;'V'
  2509  03BE  3400               	retlw	0
  2510  03BF                     STR_6:	
  2511  03BF  3430               	retlw	48	;'0'
  2512  03C0  342E               	retlw	46	;'.'
  2513  03C1  3436               	retlw	54	;'6'
  2514  03C2  3456               	retlw	86	;'V'
  2515  03C3  3400               	retlw	0
  2516  03C4                     STR_8:	
  2517  03C4  3430               	retlw	48	;'0'
  2518  03C5  342E               	retlw	46	;'.'
  2519  03C6  3437               	retlw	55	;'7'
  2520  03C7  3456               	retlw	86	;'V'
  2521  03C8  3400               	retlw	0
  2522  03C9                     STR_10:	
  2523  03C9  3430               	retlw	48	;'0'
  2524  03CA  342E               	retlw	46	;'.'
  2525  03CB  3438               	retlw	56	;'8'
  2526  03CC  3456               	retlw	86	;'V'
  2527  03CD  3400               	retlw	0
  2528  03CE                     STR_12:	
  2529  03CE  3430               	retlw	48	;'0'
  2530  03CF  342E               	retlw	46	;'.'
  2531  03D0  3439               	retlw	57	;'9'
  2532  03D1  3456               	retlw	86	;'V'
  2533  03D2  3400               	retlw	0
  2534  03D3                     STR_1:	
  2535  03D3  3443               	retlw	67	;'C'
  2536  03D4  3450               	retlw	80	;'P'
  2537  03D5  3453               	retlw	83	;'S'
  2538  03D6  3431               	retlw	49	;'1'
  2539  03D7  3400               	retlw	0
  2540  03D8                     STR_2:	
  2541  03D8  3443               	retlw	67	;'C'
  2542  03D9  3450               	retlw	80	;'P'
  2543  03DA  3453               	retlw	83	;'S'
  2544  03DB  3432               	retlw	50	;'2'
  2545  03DC  3400               	retlw	0
  2546  03DD                     STR_3:	
  2547  03DD  3443               	retlw	67	;'C'
  2548  03DE  3450               	retlw	80	;'P'
  2549  03DF  3453               	retlw	83	;'S'
  2550  03E0  3433               	retlw	51	;'3'
  2551  03E1  3400               	retlw	0
  2552  03E2                     STR_49:	
  2553  03E2  340D               	retlw	13
  2554  03E3  3400               	retlw	0
  2555                           
  2556                           ; #config settings
  2557  0000                     
  2558                           	psect	cinit
  2559  0032                     start_initialization:	
  2560  0032                     __initialization:	
  2561                           
  2562                           ; Initialize objects allocated to BANK1
  2563  0032  30E1               	movlw	low __pidataBANK1
  2564  0033  0084               	movwf	4
  2565  0034  3087               	movlw	(high __pidataBANK1)| (0+128)
  2566  0035  0085               	movwf	5
  2567  0036  30D1               	movlw	low __pdataBANK1
  2568  0037  0086               	movwf	6
  2569  0038  3000               	movlw	high __pdataBANK1
  2570  0039  0087               	movwf	7
  2571  003A  301E               	movlw	30
  2572  003B  318D  2558  3180   	fcall	init_ram
  2573                           
  2574                           ; Initialize objects allocated to BANK2
  2575  003E  3087               	movlw	low __pidataBANK2
  2576  003F  0084               	movwf	4
  2577  0040  308F               	movlw	(high __pidataBANK2)| (0+128)
  2578  0041  0085               	movwf	5
  2579  0042  3020               	movlw	low __pdataBANK2
  2580  0043  0086               	movwf	6
  2581  0044  3001               	movlw	high __pdataBANK2
  2582  0045  0087               	movwf	7
  2583  0046  303C               	movlw	60
  2584  0047  318D  2558  3180   	fcall	init_ram
  2585                           
  2586                           ; Clear objects allocated to COMMON
  2587  004A  01F6               	clrf	__pbssCOMMON& (0+127)
  2588  004B  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2589  004C  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2590  004D  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2591  004E  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  2592                           
  2593                           ; Clear objects allocated to BANK0
  2594  004F  01E6               	clrf	__pbssBANK0& (0+127)
  2595  0050  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  2596  0051  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  2597  0052  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  2598  0053  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  2599  0054  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  2600                           
  2601                           ; Clear objects allocated to BANK1
  2602  0055  30A0               	movlw	low __pbssBANK1
  2603  0056  0084               	movwf	4
  2604  0057  3000               	movlw	high __pbssBANK1
  2605  0058  0085               	movwf	5
  2606  0059  3031               	movlw	49
  2607  005A  318D  2552         	fcall	clear_ram0
  2608  005C                     end_of_initialization:	
  2609                           ;End of C runtime variable initialization code
  2610                           
  2611  005C                     __end_of__initialization:	
  2612  005C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2613  005D  0020               	movlb	0
  2614  005E  3183  2BE4         	ljmp	_main	;jump to C main() function
  2615                           
  2616                           	psect	bssCOMMON
  2617  0076                     __pbssCOMMON:	
  2618  0076                     _xfunc_in:	
  2619  0076                     	ds	2
  2620  0078                     _count:	
  2621  0078                     	ds	2
  2622  007A                     CPSx_Read@channel:	
  2623  007A                     	ds	1
  2624                           
  2625                           	psect	bssBANK0
  2626  0066                     __pbssBANK0:	
  2627  0066                     _xfunc_out:	
  2628  0066                     	ds	2
  2629  0068                     _outptr:	
  2630  0068                     	ds	1
  2631  0069                     _VoltageReg:	
  2632  0069                     	ds	2
  2633  006B                     _ConfigReg:	
  2634  006B                     	ds	1
  2635                           
  2636                           	psect	bssBANK1
  2637  00A0                     __pbssBANK1:	
  2638  00A0                     _CPS_Data:	
  2639  00A0                     	ds	3
  2640  00A3                     _CPS_PreData:	
  2641  00A3                     	ds	3
  2642  00A6                     _MemoryReg:	
  2643  00A6                     	ds	3
  2644  00A9                     Handler@count:	
  2645  00A9                     	ds	2
  2646  00AB                     _I2C2_Config:	
  2647  00AB                     	ds	19
  2648  00BE                     _I2C1_Config:	
  2649  00BE                     	ds	19
  2650                           
  2651                           	psect	dataBANK1
  2652  00D1                     __pdataBANK1:	
  2653  00D1                     _DAC_VoltageTable:	
  2654  00D1                     	ds	30
  2655                           
  2656                           	psect	dataBANK2
  2657  0120                     __pdataBANK2:	
  2658  0120                     _H7826_01_Gain:	
  2659  0120                     	ds	30
  2660  013E                     _H7826_Gain:	
  2661  013E                     	ds	30
  2662                           
  2663                           	psect	inittext
  2664  0D58                     init_ram:	
  2665  0D58  00FE               	movwf	126
  2666  0D59                     initloop:	
  2667  0D59  0012               	moviw fsr0++
  2668  0D5A  001E               	movwi fsr1++
  2669  0D5B  0BFE               	decfsz	126,f
  2670  0D5C  2D59               	goto	initloop
  2671  0D5D  3400               	retlw	0
  2672                           
  2673                           	psect	clrtext
  2674  0D52                     clear_ram0:	
  2675                           ;	Called with FSR0 containing the base address, and
  2676                           ;	WREG with the size to clear
  2677                           
  2678  0D52  0064               	clrwdt	;clear the watchdog before getting into this loop
  2679  0D53                     clrloop0:	
  2680  0D53  0180               	clrf	0	;clear RAM location pointed to by FSR
  2681  0D54  3101               	addfsr 0,1
  2682  0D55  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2683  0D56  2D53               	goto	clrloop0	;have we reached the end yet?
  2684  0D57  3400               	retlw	0	;all done for this memory range, return
  2685                           
  2686                           	psect	cstackBANK2
  2687  015C                     __pcstackBANK2:	
  2688  015C                     ??_main:	
  2689                           
  2690                           ; 1 bytes @ 0x0
  2691  015C                     	ds	5
  2692                           
  2693                           	psect	cstackCOMMON
  2694  0070                     __pcstackCOMMON:	
  2695  0070                     ?_LCD_DisplayClear:	
  2696  0070                     ?_Basic_Init:	
  2697                           ; 1 bytes @ 0x0
  2698                           
  2699  0070                     ?_Buzzer_Init:	
  2700                           ; 1 bytes @ 0x0
  2701                           
  2702  0070                     ?_Buzzer_SetDuty:	
  2703                           ; 1 bytes @ 0x0
  2704                           
  2705  0070                     ?_Buzzer_Handler:	
  2706                           ; 1 bytes @ 0x0
  2707                           
  2708  0070                     ?_I2C1_PinInit:	
  2709                           ; 1 bytes @ 0x0
  2710                           
  2711  0070                     ?_I2C1_Interrupt:	
  2712                           ; 1 bytes @ 0x0
  2713                           
  2714  0070                     ??_I2C1_Interrupt:	
  2715                           ; 1 bytes @ 0x0
  2716                           
  2717  0070                     ?_I2C2_PinInit:	
  2718                           ; 1 bytes @ 0x0
  2719                           
  2720  0070                     ?_I2C2_Interrupt:	
  2721                           ; 1 bytes @ 0x0
  2722                           
  2723  0070                     ??_I2C2_Interrupt:	
  2724                           ; 1 bytes @ 0x0
  2725                           
  2726  0070                     ?_I2C_CommonInterrupt:	
  2727                           ; 1 bytes @ 0x0
  2728                           
  2729  0070                     ?_LCD_WriteData:	
  2730                           ; 1 bytes @ 0x0
  2731                           
  2732  0070                     ?_LCD_Init:	
  2733                           ; 1 bytes @ 0x0
  2734                           
  2735  0070                     ?_DAC_Initialize:	
  2736                           ; 1 bytes @ 0x0
  2737                           
  2738  0070                     ?_Timer1_Init:	
  2739                           ; 1 bytes @ 0x0
  2740                           
  2741  0070                     ?_Timer1_Handler:	
  2742                           ; 1 bytes @ 0x0
  2743                           
  2744  0070                     ??_Timer1_Handler:	
  2745                           ; 1 bytes @ 0x0
  2746                           
  2747  0070                     ?_Timer4_Init:	
  2748                           ; 1 bytes @ 0x0
  2749                           
  2750  0070                     ?_Timer4_Handler:	
  2751                           ; 1 bytes @ 0x0
  2752                           
  2753  0070                     ??_Timer4_Handler:	
  2754                           ; 1 bytes @ 0x0
  2755                           
  2756  0070                     ?_mTouch_PortInit:	
  2757                           ; 1 bytes @ 0x0
  2758                           
  2759  0070                     ?_mTouch_Init:	
  2760                           ; 1 bytes @ 0x0
  2761                           
  2762  0070                     ?_CPSx_Read:	
  2763                           ; 1 bytes @ 0x0
  2764                           
  2765  0070                     ??_CPSx_Read:	
  2766                           ; 1 bytes @ 0x0
  2767                           
  2768  0070                     ?_main:	
  2769                           ; 1 bytes @ 0x0
  2770                           
  2771  0070                     ?_Handler:	
  2772                           ; 1 bytes @ 0x0
  2773                           
  2774  0070                     ?_xputc:	
  2775                           ; 1 bytes @ 0x0
  2776                           
  2777  0070                     ?_xputs:	
  2778                           ; 1 bytes @ 0x0
  2779                           
  2780  0070                     Buzzer_SetDuty@duty:	
  2781                           ; 1 bytes @ 0x0
  2782                           
  2783                           
  2784                           ; 2 bytes @ 0x0
  2785  0070                     	ds	1
  2786  0071                     ??_I2C_CommonInterrupt:	
  2787                           
  2788                           ; 1 bytes @ 0x1
  2789  0071                     	ds	1
  2790  0072                     ??_Buzzer_SetDuty:	
  2791                           
  2792                           ; 1 bytes @ 0x2
  2793  0072                     	ds	2
  2794  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
  2795                           
  2796                           ; 1 bytes @ 0x4
  2797  0074                     	ds	1
  2798  0075                     ??_Buzzer_Handler:	
  2799  0075                     ??_Handler:	
  2800                           ; 1 bytes @ 0x5
  2801                           
  2802                           
  2803                           ; 1 bytes @ 0x5
  2804  0075                     	ds	1
  2805                           
  2806                           	psect	cstackBANK0
  2807  0020                     __pcstackBANK0:	
  2808  0020                     ??_Basic_Init:	
  2809  0020                     ??_Buzzer_Init:	
  2810                           ; 1 bytes @ 0x0
  2811                           
  2812  0020                     ?_Buzzer_MiliSecond:	
  2813                           ; 1 bytes @ 0x0
  2814                           
  2815  0020                     ??_I2C1_PinInit:	
  2816                           ; 1 bytes @ 0x0
  2817                           
  2818  0020                     ?_I2C1_Transmit:	
  2819                           ; 1 bytes @ 0x0
  2820                           
  2821  0020                     ??_I2C2_PinInit:	
  2822                           ; 1 bytes @ 0x0
  2823                           
  2824  0020                     ?_I2C2_Transmit:	
  2825                           ; 1 bytes @ 0x0
  2826                           
  2827  0020                     ??_LCD_WriteData:	
  2828                           ; 1 bytes @ 0x0
  2829                           
  2830  0020                     ??_Timer1_Init:	
  2831                           ; 1 bytes @ 0x0
  2832                           
  2833  0020                     ??_Timer4_Init:	
  2834                           ; 1 bytes @ 0x0
  2835                           
  2836  0020                     ??_mTouch_PortInit:	
  2837                           ; 1 bytes @ 0x0
  2838                           
  2839  0020                     ?___wmul:	
  2840                           ; 1 bytes @ 0x0
  2841                           
  2842  0020                     ?___lldiv:	
  2843                           ; 2 bytes @ 0x0
  2844                           
  2845  0020                     ?___llmod:	
  2846                           ; 4 bytes @ 0x0
  2847                           
  2848  0020                     I2C1_Transmit@pData:	
  2849                           ; 4 bytes @ 0x0
  2850                           
  2851  0020                     I2C2_Transmit@pData:	
  2852                           ; 1 bytes @ 0x0
  2853                           
  2854  0020                     Buzzer_MiliSecond@time:	
  2855                           ; 1 bytes @ 0x0
  2856                           
  2857  0020                     ___wmul@multiplier:	
  2858                           ; 2 bytes @ 0x0
  2859                           
  2860  0020                     ___lldiv@divisor:	
  2861                           ; 2 bytes @ 0x0
  2862                           
  2863  0020                     ___llmod@divisor:	
  2864                           ; 4 bytes @ 0x0
  2865                           
  2866                           
  2867                           ; 4 bytes @ 0x0
  2868  0020                     	ds	1
  2869  0021                     ?_I2C1_Setting:	
  2870  0021                     ?_I2C2_Setting:	
  2871                           ; 1 bytes @ 0x1
  2872                           
  2873  0021                     ??_mTouch_Init:	
  2874                           ; 1 bytes @ 0x1
  2875                           
  2876  0021                     I2C1_Setting@mode:	
  2877                           ; 1 bytes @ 0x1
  2878                           
  2879  0021                     I2C1_Transmit@size:	
  2880                           ; 1 bytes @ 0x1
  2881                           
  2882  0021                     I2C2_Setting@mode:	
  2883                           ; 1 bytes @ 0x1
  2884                           
  2885  0021                     I2C2_Transmit@size:	
  2886                           ; 1 bytes @ 0x1
  2887                           
  2888                           
  2889                           ; 1 bytes @ 0x1
  2890  0021                     	ds	1
  2891  0022                     ??_Buzzer_MiliSecond:	
  2892  0022                     ??_I2C1_Transmit:	
  2893                           ; 1 bytes @ 0x2
  2894                           
  2895  0022                     ??_I2C2_Transmit:	
  2896                           ; 1 bytes @ 0x2
  2897                           
  2898  0022                     I2C1_Setting@Speed:	
  2899                           ; 1 bytes @ 0x2
  2900                           
  2901  0022                     I2C2_Setting@Speed:	
  2902                           ; 1 bytes @ 0x2
  2903                           
  2904  0022                     LCD_WriteData@point:	
  2905                           ; 1 bytes @ 0x2
  2906                           
  2907  0022                     ___wmul@multiplicand:	
  2908                           ; 1 bytes @ 0x2
  2909                           
  2910                           
  2911                           ; 2 bytes @ 0x2
  2912  0022                     	ds	1
  2913  0023                     ??_LCD_DisplayClear:	
  2914  0023                     ??_I2C1_Setting:	
  2915                           ; 1 bytes @ 0x3
  2916                           
  2917  0023                     ??_I2C2_Setting:	
  2918                           ; 1 bytes @ 0x3
  2919                           
  2920  0023                     ?_LCD_Put:	
  2921                           ; 1 bytes @ 0x3
  2922                           
  2923  0023                     ?_LCD_CursorPosition:	
  2924                           ; 1 bytes @ 0x3
  2925                           
  2926  0023                     LCD_Put@word:	
  2927                           ; 1 bytes @ 0x3
  2928                           
  2929  0023                     LCD_CursorPosition@ty:	
  2930                           ; 1 bytes @ 0x3
  2931                           
  2932                           
  2933                           ; 1 bytes @ 0x3
  2934  0023                     	ds	1
  2935  0024                     ??_LCD_Init:	
  2936  0024                     ??_LCD_Put:	
  2937                           ; 1 bytes @ 0x4
  2938                           
  2939  0024                     ??_LCD_CursorPosition:	
  2940                           ; 1 bytes @ 0x4
  2941                           
  2942  0024                     ??_xputc:	
  2943                           ; 1 bytes @ 0x4
  2944                           
  2945  0024                     ??___wmul:	
  2946                           ; 1 bytes @ 0x4
  2947                           
  2948  0024                     I2C1_Setting@address:	
  2949                           ; 1 bytes @ 0x4
  2950                           
  2951  0024                     I2C1_Transmit@address:	
  2952                           ; 1 bytes @ 0x4
  2953                           
  2954  0024                     I2C2_Setting@address:	
  2955                           ; 1 bytes @ 0x4
  2956                           
  2957  0024                     I2C2_Transmit@address:	
  2958                           ; 1 bytes @ 0x4
  2959                           
  2960  0024                     ___wmul@product:	
  2961                           ; 1 bytes @ 0x4
  2962                           
  2963  0024                     ___lldiv@dividend:	
  2964                           ; 2 bytes @ 0x4
  2965                           
  2966  0024                     ___llmod@dividend:	
  2967                           ; 4 bytes @ 0x4
  2968                           
  2969                           
  2970                           ; 4 bytes @ 0x4
  2971  0024                     	ds	1
  2972  0025                     ?_I2C_Init:	
  2973  0025                     I2C1_Transmit@i:	
  2974                           ; 1 bytes @ 0x5
  2975                           
  2976  0025                     I2C2_Transmit@i:	
  2977                           ; 1 bytes @ 0x5
  2978                           
  2979  0025                     I2C_Init@address:	
  2980                           ; 1 bytes @ 0x5
  2981                           
  2982  0025                     LCD_CursorPosition@tx:	
  2983                           ; 1 bytes @ 0x5
  2984                           
  2985  0025                     xputc@c:	
  2986                           ; 1 bytes @ 0x5
  2987                           
  2988                           
  2989                           ; 1 bytes @ 0x5
  2990  0025                     	ds	1
  2991  0026                     ??_xputs:	
  2992  0026                     I2C1_Transmit@i_172:	
  2993                           ; 1 bytes @ 0x6
  2994                           
  2995  0026                     I2C2_Transmit@i_316:	
  2996                           ; 1 bytes @ 0x6
  2997                           
  2998  0026                     I2C_Init@mode:	
  2999                           ; 1 bytes @ 0x6
  3000                           
  3001                           
  3002                           ; 1 bytes @ 0x6
  3003  0026                     	ds	1
  3004  0027                     I2C1_Transmit@result:	
  3005  0027                     I2C2_Transmit@result:	
  3006                           ; 1 bytes @ 0x7
  3007                           
  3008  0027                     I2C_Init@Speed:	
  3009                           ; 1 bytes @ 0x7
  3010                           
  3011  0027                     xputs@str:	
  3012                           ; 1 bytes @ 0x7
  3013                           
  3014                           
  3015                           ; 1 bytes @ 0x7
  3016  0027                     	ds	1
  3017  0028                     ??_I2C_Init:	
  3018  0028                     ?_I2C_Transmit:	
  3019                           ; 1 bytes @ 0x8
  3020                           
  3021  0028                     ??___lldiv:	
  3022                           ; 1 bytes @ 0x8
  3023                           
  3024  0028                     ??___llmod:	
  3025                           ; 1 bytes @ 0x8
  3026                           
  3027  0028                     I2C_Transmit@address:	
  3028                           ; 1 bytes @ 0x8
  3029                           
  3030                           
  3031                           ; 1 bytes @ 0x8
  3032  0028                     	ds	1
  3033  0029                     I2C_Transmit@pData:	
  3034  0029                     ___llmod@counter:	
  3035                           ; 1 bytes @ 0x9
  3036                           
  3037  0029                     ___lldiv@quotient:	
  3038                           ; 1 bytes @ 0x9
  3039                           
  3040                           
  3041                           ; 4 bytes @ 0x9
  3042  0029                     	ds	1
  3043  002A                     I2C_Init@I2Cx:	
  3044  002A                     I2C_Transmit@size:	
  3045                           ; 1 bytes @ 0xA
  3046                           
  3047                           
  3048                           ; 1 bytes @ 0xA
  3049  002A                     	ds	1
  3050  002B                     ??_I2C_Transmit:	
  3051                           
  3052                           ; 1 bytes @ 0xB
  3053  002B                     	ds	2
  3054  002D                     ___lldiv@counter:	
  3055                           
  3056                           ; 1 bytes @ 0xD
  3057  002D                     	ds	1
  3058  002E                     ?_xvprintf:	
  3059  002E                     I2C_Transmit@I2Cx:	
  3060                           ; 1 bytes @ 0xE
  3061                           
  3062  002E                     xvprintf@fmt:	
  3063                           ; 1 bytes @ 0xE
  3064                           
  3065                           
  3066                           ; 2 bytes @ 0xE
  3067  002E                     	ds	1
  3068  002F                     I2C_Transmit@result:	
  3069                           
  3070                           ; 1 bytes @ 0xF
  3071  002F                     	ds	1
  3072  0030                     ??_DAC_Initialize:	
  3073  0030                     xvprintf@arp:	
  3074                           ; 1 bytes @ 0x10
  3075                           
  3076                           
  3077                           ; 1 bytes @ 0x10
  3078  0030                     	ds	1
  3079  0031                     ??_xvprintf:	
  3080                           
  3081                           ; 1 bytes @ 0x11
  3082  0031                     	ds	4
  3083  0035                     xvprintf@s:	
  3084                           
  3085                           ; 16 bytes @ 0x15
  3086  0035                     	ds	16
  3087  0045                     _xvprintf$716:	
  3088                           
  3089                           ; 4 bytes @ 0x25
  3090  0045                     	ds	4
  3091  0049                     _xvprintf$717:	
  3092                           
  3093                           ; 2 bytes @ 0x29
  3094  0049                     	ds	2
  3095  004B                     _xvprintf$718:	
  3096                           
  3097                           ; 2 bytes @ 0x2B
  3098  004B                     	ds	2
  3099  004D                     xvprintf@p:	
  3100                           
  3101                           ; 1 bytes @ 0x2D
  3102  004D                     	ds	1
  3103  004E                     xvprintf@r:	
  3104                           
  3105                           ; 2 bytes @ 0x2E
  3106  004E                     	ds	2
  3107  0050                     xvprintf@w:	
  3108                           
  3109                           ; 2 bytes @ 0x30
  3110  0050                     	ds	2
  3111  0052                     xvprintf@j:	
  3112                           
  3113                           ; 2 bytes @ 0x32
  3114  0052                     	ds	2
  3115  0054                     xvprintf@v:	
  3116                           
  3117                           ; 4 bytes @ 0x34
  3118  0054                     	ds	4
  3119  0058                     xvprintf@f:	
  3120                           
  3121                           ; 2 bytes @ 0x38
  3122  0058                     	ds	2
  3123  005A                     xvprintf@i:	
  3124                           
  3125                           ; 2 bytes @ 0x3A
  3126  005A                     	ds	2
  3127  005C                     xvprintf@d:	
  3128                           
  3129                           ; 1 bytes @ 0x3C
  3130  005C                     	ds	1
  3131  005D                     xvprintf@c:	
  3132                           
  3133                           ; 1 bytes @ 0x3D
  3134  005D                     	ds	1
  3135  005E                     ?_xprintf:	
  3136  005E                     xprintf@fmt:	
  3137                           ; 1 bytes @ 0x3E
  3138                           
  3139                           
  3140                           ; 2 bytes @ 0x3E
  3141  005E                     	ds	6
  3142  0064                     ??_xprintf:	
  3143                           
  3144                           ; 1 bytes @ 0x44
  3145  0064                     	ds	1
  3146  0065                     xprintf@arp:	
  3147                           
  3148                           ; 1 bytes @ 0x45
  3149  0065                     	ds	1
  3150                           
  3151                           	psect	maintext
  3152  03E4                     __pmaintext:	
  3153 ;;
  3154 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  3155 ;;
  3156 ;; *************** function _main *****************
  3157 ;; Defined at:
  3158 ;;		line 13 in file "main.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      char 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : B1F/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3172 ;;      Params:         0       0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0
  3174 ;;      Temps:          0       0       0       5       0       0
  3175 ;;      Totals:         0       0       0       5       0       0
  3176 ;;Total ram usage:        5 bytes
  3177 ;; Hardware stack levels required when called:    9
  3178 ;; This function calls:
  3179 ;;		_Basic_Init
  3180 ;;		_Buzzer_Init
  3181 ;;		_Buzzer_MiliSecond
  3182 ;;		_DAC_Initialize
  3183 ;;		_LCD_CursorPosition
  3184 ;;		_LCD_Init
  3185 ;;		_Timer1_Init
  3186 ;;		_Timer4_Init
  3187 ;;		_mTouch_Init
  3188 ;;		_xprintf
  3189 ;; This function is called by:
  3190 ;;		Startup code after reset
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function _main
  3196  03E4                     _main:	
  3197                           
  3198                           ;main.c: 15: Basic_Init();
  3199                           
  3200                           ;incstack = 0
  3201                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3202  03E4  318E  2605  3183   	fcall	_Basic_Init
  3203                           
  3204                           ;main.c: 17: LATA6 = 1;
  3205  03E7  0022               	movlb	2	; select bank2
  3206  03E8  170C               	bsf	12,6	;volatile
  3207                           
  3208                           ;main.c: 19: Buzzer_Init();
  3209  03E9  318E  26DD  3183   	fcall	_Buzzer_Init
  3210                           
  3211                           ;main.c: 21: LCD_Init();
  3212  03EC  3185  25AC  3183   	fcall	_LCD_Init
  3213                           
  3214                           ;main.c: 22: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  3215  03EF  305E               	movlw	low _LCD_Put
  3216  03F0  0020               	movlb	0	; select bank0
  3217  03F1  00E6               	movwf	_xfunc_out
  3218  03F2  300D               	movlw	high _LCD_Put
  3219  03F3  00E7               	movwf	_xfunc_out+1
  3220                           
  3221                           ;main.c: 24: Timer1_Init();
  3222  03F4  318E  2646  3183   	fcall	_Timer1_Init
  3223                           
  3224                           ;main.c: 25: TMR1ON = 1;;
  3225  03F7  0020               	movlb	0	; select bank0
  3226  03F8  1418               	bsf	24,0	;volatile
  3227                           
  3228                           ;main.c: 27: mTouch_Init();
  3229  03F9  318D  25DD  3183   	fcall	_mTouch_Init
  3230                           
  3231                           ;main.c: 29: Timer4_Init();
  3232  03FC  318D  25CA  3183   	fcall	_Timer4_Init
  3233                           
  3234                           ;main.c: 31: DAC_Initialize();
  3235  03FF  318E  2698  3183   	fcall	_DAC_Initialize
  3236  0402  2C18               	goto	l4688
  3237  0403                     l4692:	
  3238                           
  3239                           ;main.c: 38: {
  3240                           ;main.c: 39: Buzzer_MiliSecond(100);
  3241  0403  3064               	movlw	100
  3242  0404  0020               	movlb	0	; select bank0
  3243  0405  00A0               	movwf	Buzzer_MiliSecond@time
  3244  0406  3000               	movlw	0
  3245  0407  00A1               	movwf	Buzzer_MiliSecond@time+1
  3246  0408  318D  256E  3183   	fcall	_Buzzer_MiliSecond
  3247                           
  3248                           ;main.c: 40: xprintf("CPS1");
  3249  040B  30D3               	movlw	low (STR_1| (0+32768))
  3250  040C  0020               	movlb	0	; select bank0
  3251  040D  00DE               	movwf	xprintf@fmt
  3252  040E  3083               	movlw	high (STR_1| (0+32768))
  3253  040F  2C14               	goto	L1
  3254  0410                     l4698:	
  3255                           ;main.c: 41: }
  3256                           
  3257                           
  3258                           ;main.c: 43: xprintf("CPS2");
  3259  0410  30D8               	movlw	low (STR_2| (0+32768))
  3260  0411  0020               	movlb	0	; select bank0
  3261  0412  00DE               	movwf	xprintf@fmt
  3262  0413  3083               	movlw	high (STR_2| (0+32768))
  3263  0414                     L1:	
  3264  0414  00DF               	movwf	xprintf@fmt+1
  3265  0415  318D  25BA  3183   	fcall	_xprintf
  3266  0418                     l4688:	
  3267                           ;main.c: 33: while(1)
  3268                           
  3269                           
  3270                           ;main.c: 34: {
  3271                           ;main.c: 36: LCD_CursorPosition(0,0);
  3272  0418  0020               	movlb	0	; select bank0
  3273  0419  01A3               	clrf	LCD_CursorPosition@ty
  3274  041A  3000               	movlw	0
  3275  041B  318E  262F  3183   	fcall	_LCD_CursorPosition
  3276                           
  3277                           ;main.c: 37: if((CPS_PreData[0]-CPS_Data[0])>100)
  3278  041E  0021               	movlb	1	; select bank1
  3279  041F  0820               	movf	_CPS_Data^(0+128),w
  3280  0420  0022               	movlb	2	; select bank2
  3281  0421  00DC               	movwf	??_main^(0+256)
  3282  0422  01DD               	clrf	(??_main^(0+256)+1)
  3283  0423  09DC               	comf	??_main^(0+256),f
  3284  0424  09DD               	comf	(??_main^(0+256)+1),f
  3285  0425  0ADC               	incf	??_main^(0+256),f
  3286  0426  1903               	skipnz
  3287  0427  0ADD               	incf	(??_main^(0+256)+1),f
  3288  0428  0021               	movlb	1	; select bank1
  3289  0429  0823               	movf	_CPS_PreData^(0+128),w
  3290  042A  0022               	movlb	2	; select bank2
  3291  042B  075C               	addwf	??_main^(0+256),w
  3292  042C  00DE               	movwf	(??_main+2)^(0+256)
  3293  042D  085D               	movf	(??_main+1)^(0+256),w
  3294  042E  1803               	skipnc
  3295  042F  0A5D               	incf	(??_main+1)^(0+256),w
  3296  0430  00DF               	movwf	((??_main+2)^(0+256)+1)
  3297  0431  085F               	movf	(??_main+3)^(0+256),w
  3298  0432  3A80               	xorlw	128
  3299  0433  00E0               	movwf	(??_main+4)^(0+256)
  3300  0434  3080               	movlw	128
  3301  0435  0260               	subwf	(??_main+4)^(0+256),w
  3302  0436  1D03               	skipz
  3303  0437  2C3A               	goto	u4755
  3304  0438  3065               	movlw	101
  3305  0439  025E               	subwf	(??_main+2)^(0+256),w
  3306  043A                     u4755:	
  3307  043A  1803               	btfsc	3,0
  3308  043B  2C03               	goto	l4692
  3309                           
  3310                           ;main.c: 42: else if((CPS_PreData[1]-CPS_Data[1])>100)
  3311  043C  0021               	movlb	1	; select bank1
  3312  043D  0821               	movf	(_CPS_Data^(0+128)+1),w
  3313  043E  0022               	movlb	2	; select bank2
  3314  043F  00DC               	movwf	??_main^(0+256)
  3315  0440  01DD               	clrf	(??_main^(0+256)+1)
  3316  0441  09DC               	comf	??_main^(0+256),f
  3317  0442  09DD               	comf	(??_main^(0+256)+1),f
  3318  0443  0ADC               	incf	??_main^(0+256),f
  3319  0444  1903               	skipnz
  3320  0445  0ADD               	incf	(??_main^(0+256)+1),f
  3321  0446  0021               	movlb	1	; select bank1
  3322  0447  0824               	movf	(_CPS_PreData^(0+128)+1),w
  3323  0448  0022               	movlb	2	; select bank2
  3324  0449  075C               	addwf	??_main^(0+256),w
  3325  044A  00DE               	movwf	(??_main+2)^(0+256)
  3326  044B  085D               	movf	(??_main+1)^(0+256),w
  3327  044C  1803               	skipnc
  3328  044D  0A5D               	incf	(??_main+1)^(0+256),w
  3329  044E  00DF               	movwf	((??_main+2)^(0+256)+1)
  3330  044F  085F               	movf	(??_main+3)^(0+256),w
  3331  0450  3A80               	xorlw	128
  3332  0451  00E0               	movwf	(??_main+4)^(0+256)
  3333  0452  3080               	movlw	128
  3334  0453  0260               	subwf	(??_main+4)^(0+256),w
  3335  0454  1D03               	skipz
  3336  0455  2C58               	goto	u4765
  3337  0456  3065               	movlw	101
  3338  0457  025E               	subwf	(??_main+2)^(0+256),w
  3339  0458                     u4765:	
  3340  0458  1803               	btfsc	3,0
  3341  0459  2C10               	goto	l4698
  3342                           
  3343                           ;main.c: 44: else if((CPS_PreData[2]-CPS_Data[2])>100)
  3344  045A  0021               	movlb	1	; select bank1
  3345  045B  0822               	movf	(_CPS_Data^(0+128)+2),w
  3346  045C  0022               	movlb	2	; select bank2
  3347  045D  00DC               	movwf	??_main^(0+256)
  3348  045E  01DD               	clrf	(??_main^(0+256)+1)
  3349  045F  09DC               	comf	??_main^(0+256),f
  3350  0460  09DD               	comf	(??_main^(0+256)+1),f
  3351  0461  0ADC               	incf	??_main^(0+256),f
  3352  0462  1903               	skipnz
  3353  0463  0ADD               	incf	(??_main^(0+256)+1),f
  3354  0464  0021               	movlb	1	; select bank1
  3355  0465  0825               	movf	(_CPS_PreData^(0+128)+2),w
  3356  0466  0022               	movlb	2	; select bank2
  3357  0467  075C               	addwf	??_main^(0+256),w
  3358  0468  00DE               	movwf	(??_main+2)^(0+256)
  3359  0469  085D               	movf	(??_main+1)^(0+256),w
  3360  046A  1803               	skipnc
  3361  046B  0A5D               	incf	(??_main+1)^(0+256),w
  3362  046C  00DF               	movwf	((??_main+2)^(0+256)+1)
  3363  046D  085F               	movf	(??_main+3)^(0+256),w
  3364  046E  3A80               	xorlw	128
  3365  046F  00E0               	movwf	(??_main+4)^(0+256)
  3366  0470  3080               	movlw	128
  3367  0471  0260               	subwf	(??_main+4)^(0+256),w
  3368  0472  1D03               	skipz
  3369  0473  2C76               	goto	u4775
  3370  0474  3065               	movlw	101
  3371  0475  025E               	subwf	(??_main+2)^(0+256),w
  3372  0476                     u4775:	
  3373  0476  1C03               	skipc
  3374  0477  2C18               	goto	l4688
  3375                           
  3376                           ;main.c: 45: xprintf("CPS3");
  3377  0478  30DD               	movlw	low (STR_3| (0+32768))
  3378  0479  0020               	movlb	0	; select bank0
  3379  047A  00DE               	movwf	xprintf@fmt
  3380  047B  3083               	movlw	high (STR_3| (0+32768))
  3381  047C  2C14               	goto	L1
  3382  047D                     __end_of_main:	
  3383                           ;main.c: 46: }
  3384                           ;main.c: 48: return 0;
  3385                           ;	Return value of _main is never used
  3386                           
  3387                           
  3388                           	psect	text1
  3389  0DBA                     __ptext1:	
  3390 ;; *************** function _xprintf *****************
  3391 ;; Defined at:
  3392 ;;		line 165 in file "xprintf.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  3395 ;;		 -> STR_53(7), STR_52(6), STR_51(6), STR_50(7), 
  3396 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  arp             1   69[BANK0 ] PTR void [1]
  3399 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3409 ;;      Params:         0       6       0       0       0       0
  3410 ;;      Locals:         0       1       0       0       0       0
  3411 ;;      Temps:          0       1       0       0       0       0
  3412 ;;      Totals:         0       8       0       0       0       0
  3413 ;;Total ram usage:        8 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    8
  3416 ;; This function calls:
  3417 ;;		_xvprintf
  3418 ;; This function is called by:
  3419 ;;		_main
  3420 ;;		_put_dump
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function _xprintf
  3426  0DBA                     _xprintf:	
  3427                           
  3428                           ;xprintf.c: 170: va_list arp;
  3429                           ;xprintf.c: 173: *arp = __va_start();
  3430                           
  3431                           ;incstack = 0
  3432                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3433  0DBA  3060               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  3434  0DBB  0020               	movlb	0	; select bank0
  3435  0DBC  00E4               	movwf	??_xprintf
  3436  0DBD  0864               	movf	??_xprintf,w
  3437  0DBE  00E5               	movwf	xprintf@arp
  3438                           
  3439                           ;xprintf.c: 174: xvprintf(fmt, arp);
  3440  0DBF  085F               	movf	xprintf@fmt+1,w
  3441  0DC0  00AF               	movwf	xvprintf@fmt+1
  3442  0DC1  085E               	movf	xprintf@fmt,w
  3443  0DC2  00AE               	movwf	xvprintf@fmt
  3444  0DC3  3065               	movlw	(low (xprintf@arp| 0))& (0+255)
  3445  0DC4  00E4               	movwf	??_xprintf
  3446  0DC5  0864               	movf	??_xprintf,w
  3447  0DC6  00B0               	movwf	xvprintf@arp
  3448  0DC7  3180  2060         	fcall	_xvprintf
  3449  0DC9  0008               	return
  3450  0DCA                     __end_of_xprintf:	
  3451                           
  3452                           	psect	text2
  3453  0060                     __ptext2:	
  3454 ;; *************** function _xvprintf *****************
  3455 ;; Defined at:
  3456 ;;		line 88 in file "xprintf.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3459 ;;		 -> STR_53(7), STR_52(6), STR_51(6), STR_50(7), 
  3460 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  3461 ;;  arp             1   16[BANK0 ] PTR PTR void 
  3462 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  s              16   21[BANK0 ] unsigned char [16]
  3465 ;;  v               4   52[BANK0 ] unsigned long 
  3466 ;;  i               2   58[BANK0 ] unsigned int 
  3467 ;;  f               2   56[BANK0 ] unsigned int 
  3468 ;;  j               2   50[BANK0 ] unsigned int 
  3469 ;;  w               2   48[BANK0 ] unsigned int 
  3470 ;;  r               2   46[BANK0 ] unsigned int 
  3471 ;;  c               1   61[BANK0 ] unsigned char 
  3472 ;;  d               1   60[BANK0 ] unsigned char 
  3473 ;;  p               1   45[BANK0 ] PTR unsigned char 
  3474 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3484 ;;      Params:         0       3       0       0       0       0
  3485 ;;      Locals:         0      41       0       0       0       0
  3486 ;;      Temps:          0       4       0       0       0       0
  3487 ;;      Totals:         0      48       0       0       0       0
  3488 ;;Total ram usage:       48 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    7
  3491 ;; This function calls:
  3492 ;;		___lldiv
  3493 ;;		___llmod
  3494 ;;		___wmul
  3495 ;;		_xputc
  3496 ;;		_xputs
  3497 ;; This function is called by:
  3498 ;;		_xprintf
  3499 ;;		_xsprintf
  3500 ;;		_xfprintf
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _xvprintf
  3506  0060                     _xvprintf:	
  3507  0060                     l628:	
  3508                           ;incstack = 0
  3509                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3510                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  3511                           ;xprintf.c: 94: unsigned long v;
  3512                           ;xprintf.c: 95: char s[16], c, d, *p;
  3513                           ;xprintf.c: 98: for (;;) {
  3514                           
  3515                           
  3516                           ;xprintf.c: 99: c = *fmt++;
  3517  0060  0020               	movlb	0	; select bank0
  3518  0061  082E               	movf	xvprintf@fmt,w
  3519  0062  0084               	movwf	4
  3520  0063  082F               	movf	xvprintf@fmt+1,w
  3521  0064  0085               	movwf	5
  3522  0065  0800               	movf	0,w	;code access
  3523  0066  00B1               	movwf	??_xvprintf
  3524  0067  0831               	movf	??_xvprintf,w
  3525  0068  00DD               	movwf	xvprintf@c
  3526  0069  3001               	movlw	1
  3527  006A  07AE               	addwf	xvprintf@fmt,f
  3528  006B  3000               	movlw	0
  3529  006C  3DAF               	addwfc	xvprintf@fmt+1,f
  3530                           
  3531                           ;xprintf.c: 100: if (!c) break;
  3532  006D  085D               	movf	xvprintf@c,w
  3533  006E  1903               	btfsc	3,2
  3534  006F  0008               	return
  3535                           
  3536                           ;xprintf.c: 101: if (c != '%') {
  3537  0070  3025               	movlw	37
  3538  0071  065D               	xorwf	xvprintf@c,w
  3539  0072  1903               	btfsc	3,2
  3540  0073  2879               	goto	l4476
  3541                           
  3542                           ;xprintf.c: 102: xputc(c); continue;
  3543  0074  085D               	movf	xvprintf@c,w
  3544  0075  318F  275A  3180   	fcall	_xputc
  3545  0078  2860               	goto	l628
  3546  0079                     l4476:	
  3547                           
  3548                           ;xprintf.c: 103: }
  3549                           ;xprintf.c: 104: f = 0;
  3550  0079  0020               	movlb	0	; select bank0
  3551  007A  01D8               	clrf	xvprintf@f
  3552  007B  01D9               	clrf	xvprintf@f+1
  3553                           
  3554                           ;xprintf.c: 105: c = *fmt++;
  3555  007C  082E               	movf	xvprintf@fmt,w
  3556  007D  0084               	movwf	4
  3557  007E  082F               	movf	xvprintf@fmt+1,w
  3558  007F  0085               	movwf	5
  3559  0080  0800               	movf	0,w	;code access
  3560  0081  00B1               	movwf	??_xvprintf
  3561  0082  0831               	movf	??_xvprintf,w
  3562  0083  00DD               	movwf	xvprintf@c
  3563  0084  3001               	movlw	1
  3564  0085  07AE               	addwf	xvprintf@fmt,f
  3565  0086  3000               	movlw	0
  3566  0087  3DAF               	addwfc	xvprintf@fmt+1,f
  3567                           
  3568                           ;xprintf.c: 106: if (c == '0') {
  3569  0088  3030               	movlw	48
  3570  0089  065D               	xorwf	xvprintf@c,w
  3571  008A  1D03               	btfss	3,2
  3572  008B  288E               	goto	l4490
  3573                           
  3574                           ;xprintf.c: 107: f = 1; c = *fmt++;
  3575  008C  3001               	movlw	1
  3576  008D  2893               	goto	L7
  3577  008E                     l4490:	
  3578                           ;xprintf.c: 108: } else {
  3579                           
  3580                           
  3581                           ;xprintf.c: 109: if (c == '-') {
  3582  008E  302D               	movlw	45
  3583  008F  065D               	xorwf	xvprintf@c,w
  3584  0090  1D03               	btfss	3,2
  3585  0091  28A2               	goto	l4498
  3586                           
  3587                           ;xprintf.c: 110: f = 2; c = *fmt++;
  3588  0092  3002               	movlw	2
  3589  0093                     L7:	
  3590  0093  00D8               	movwf	xvprintf@f
  3591  0094  3000               	movlw	0
  3592  0095  00D9               	movwf	xvprintf@f+1
  3593  0096  082E               	movf	xvprintf@fmt,w
  3594  0097  0084               	movwf	4
  3595  0098  082F               	movf	xvprintf@fmt+1,w
  3596  0099  0085               	movwf	5
  3597  009A  0800               	movf	0,w	;code access
  3598  009B  00B1               	movwf	??_xvprintf
  3599  009C  0831               	movf	??_xvprintf,w
  3600  009D  00DD               	movwf	xvprintf@c
  3601  009E  3001               	movlw	1
  3602  009F  07AE               	addwf	xvprintf@fmt,f
  3603  00A0  3000               	movlw	0
  3604  00A1  3DAF               	addwfc	xvprintf@fmt+1,f
  3605  00A2                     l4498:	
  3606                           
  3607                           ;xprintf.c: 111: }
  3608                           ;xprintf.c: 112: }
  3609                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  3610  00A2  01D0               	clrf	xvprintf@w
  3611  00A3  01D1               	clrf	xvprintf@w+1
  3612  00A4  28CC               	goto	l4506
  3613  00A5                     l4500:	
  3614                           
  3615                           ;xprintf.c: 114: w = w * 10 + c - '0';
  3616  00A5  085D               	movf	xvprintf@c,w
  3617  00A6  00B1               	movwf	??_xvprintf
  3618  00A7  01B2               	clrf	??_xvprintf+1
  3619  00A8  0851               	movf	xvprintf@w+1,w
  3620  00A9  00A1               	movwf	___wmul@multiplier+1
  3621  00AA  0850               	movf	xvprintf@w,w
  3622  00AB  00A0               	movwf	___wmul@multiplier
  3623  00AC  300A               	movlw	10
  3624  00AD  00A2               	movwf	___wmul@multiplicand
  3625  00AE  3000               	movlw	0
  3626  00AF  00A3               	movwf	___wmul@multiplicand+1
  3627  00B0  318E  267C  3180   	fcall	___wmul
  3628  00B3  0020               	movlb	0	; select bank0
  3629  00B4  0831               	movf	??_xvprintf,w
  3630  00B5  0720               	addwf	?___wmul,w
  3631  00B6  00B3               	movwf	??_xvprintf+2
  3632  00B7  0832               	movf	??_xvprintf+1,w
  3633  00B8  3D21               	addwfc	?___wmul+1,w
  3634  00B9  00B4               	movwf	??_xvprintf+3
  3635  00BA  0833               	movf	??_xvprintf+2,w
  3636  00BB  3ED0               	addlw	208
  3637  00BC  00D0               	movwf	xvprintf@w
  3638  00BD  30FF               	movlw	255
  3639  00BE  3D34               	addwfc	??_xvprintf+3,w
  3640  00BF  00D1               	movwf	xvprintf@w+1
  3641  00C0  082E               	movf	xvprintf@fmt,w
  3642  00C1  0084               	movwf	4
  3643  00C2  082F               	movf	xvprintf@fmt+1,w
  3644  00C3  0085               	movwf	5
  3645  00C4  0800               	movf	0,w	;code access
  3646  00C5  00B1               	movwf	??_xvprintf
  3647  00C6  0831               	movf	??_xvprintf,w
  3648  00C7  00DD               	movwf	xvprintf@c
  3649  00C8  3001               	movlw	1
  3650  00C9  07AE               	addwf	xvprintf@fmt,f
  3651  00CA  3000               	movlw	0
  3652  00CB  3DAF               	addwfc	xvprintf@fmt+1,f
  3653  00CC                     l4506:	
  3654  00CC  3030               	movlw	48
  3655  00CD  025D               	subwf	xvprintf@c,w
  3656  00CE  1C03               	skipc
  3657  00CF  28D4               	goto	l4510
  3658  00D0  303A               	movlw	58
  3659  00D1  025D               	subwf	xvprintf@c,w
  3660  00D2  1C03               	skipc
  3661  00D3  28A5               	goto	l4500
  3662  00D4                     l4510:	
  3663                           
  3664                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  3665  00D4  306C               	movlw	108
  3666  00D5  065D               	xorwf	xvprintf@c,w
  3667  00D6  1903               	btfsc	3,2
  3668  00D7  28DC               	goto	l643
  3669  00D8  304C               	movlw	76
  3670  00D9  065D               	xorwf	xvprintf@c,w
  3671  00DA  1D03               	btfss	3,2
  3672  00DB  28E9               	goto	l4518
  3673  00DC                     l643:	
  3674                           
  3675                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  3676  00DC  1558               	bsf	xvprintf@f,2
  3677  00DD  082E               	movf	xvprintf@fmt,w
  3678  00DE  0084               	movwf	4
  3679  00DF  082F               	movf	xvprintf@fmt+1,w
  3680  00E0  0085               	movwf	5
  3681  00E1  0800               	movf	0,w	;code access
  3682  00E2  00B1               	movwf	??_xvprintf
  3683  00E3  0831               	movf	??_xvprintf,w
  3684  00E4  00DD               	movwf	xvprintf@c
  3685  00E5  3001               	movlw	1
  3686  00E6  07AE               	addwf	xvprintf@fmt,f
  3687  00E7  3000               	movlw	0
  3688  00E8  3DAF               	addwfc	xvprintf@fmt+1,f
  3689  00E9                     l4518:	
  3690                           
  3691                           ;xprintf.c: 117: }
  3692                           ;xprintf.c: 118: if (!c) break;
  3693  00E9  085D               	movf	xvprintf@c,w
  3694  00EA  1903               	btfsc	3,2
  3695  00EB  0008               	return
  3696                           
  3697                           ;xprintf.c: 119: d = c;
  3698  00EC  085D               	movf	xvprintf@c,w
  3699  00ED  00B1               	movwf	??_xvprintf
  3700  00EE  0831               	movf	??_xvprintf,w
  3701  00EF  00DC               	movwf	xvprintf@d
  3702                           
  3703                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  3704  00F0  3061               	movlw	97
  3705  00F1  025C               	subwf	xvprintf@d,w
  3706  00F2  1C03               	skipc
  3707  00F3  295F               	goto	l4560
  3708  00F4  3020               	movlw	32
  3709  00F5  02DC               	subwf	xvprintf@d,f
  3710                           
  3711                           ;xprintf.c: 121: switch (d) {
  3712  00F6  295F               	goto	l4560
  3713  00F7                     l4526:	
  3714                           ;xprintf.c: 122: case 'S' :
  3715                           
  3716                           
  3717                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  3718  00F7  0830               	movf	xvprintf@arp,w
  3719  00F8  0086               	movwf	6
  3720  00F9  0187               	clrf	7
  3721  00FA  3F40               	moviw [0]fsr1
  3722  00FB  0084               	movwf	4
  3723  00FC  0185               	clrf	5
  3724  00FD  0A81               	incf	1,f
  3725  00FE  0800               	movf	0,w
  3726  00FF  00B1               	movwf	??_xvprintf
  3727  0100  0831               	movf	??_xvprintf,w
  3728  0101  00CD               	movwf	xvprintf@p
  3729                           
  3730                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  3731  0102  01D2               	clrf	xvprintf@j
  3732  0103  01D3               	clrf	xvprintf@j+1
  3733  0104                     l4532:	
  3734  0104  0852               	movf	xvprintf@j,w
  3735  0105  074D               	addwf	xvprintf@p,w
  3736  0106  00B1               	movwf	??_xvprintf
  3737  0107  0831               	movf	??_xvprintf,w
  3738  0108  0086               	movwf	6
  3739  0109  0187               	clrf	7
  3740  010A  0801               	movf	1,w
  3741  010B  1903               	btfsc	3,2
  3742  010C  2916               	goto	l4536
  3743  010D  3001               	movlw	1
  3744  010E  07D2               	addwf	xvprintf@j,f
  3745  010F  3000               	movlw	0
  3746  0110  3DD3               	addwfc	xvprintf@j+1,f
  3747  0111  2904               	goto	l4532
  3748  0112                     l4534:	
  3749                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  3750                           
  3751  0112  3020               	movlw	32
  3752  0113  318F  275A  3180   	fcall	_xputc
  3753  0116                     l4536:	
  3754  0116  0020               	movlb	0	; select bank0
  3755  0117  18D8               	btfsc	xvprintf@f,1
  3756  0118  2928               	goto	l4540
  3757  0119  0853               	movf	xvprintf@j+1,w
  3758  011A  00B2               	movwf	??_xvprintf+1
  3759  011B  0852               	movf	xvprintf@j,w
  3760  011C  00B1               	movwf	??_xvprintf
  3761  011D  0AD2               	incf	xvprintf@j,f
  3762  011E  1903               	skipnz
  3763  011F  0AD3               	incf	xvprintf@j+1,f
  3764  0120  0851               	movf	xvprintf@w+1,w
  3765  0121  0232               	subwf	??_xvprintf+1,w
  3766  0122  1D03               	skipz
  3767  0123  2926               	goto	u4525
  3768  0124  0850               	movf	xvprintf@w,w
  3769  0125  0231               	subwf	??_xvprintf,w
  3770  0126                     u4525:	
  3771  0126  1C03               	skipc
  3772  0127  2912               	goto	l4534
  3773  0128                     l4540:	
  3774                           
  3775                           ;xprintf.c: 126: xputs(p);
  3776  0128  084D               	movf	xvprintf@p,w
  3777  0129  318E  261A  3180   	fcall	_xputs
  3778  012C                     l4544:	
  3779                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  3780                           
  3781  012C  0020               	movlb	0	; select bank0
  3782  012D  0853               	movf	xvprintf@j+1,w
  3783  012E  00B2               	movwf	??_xvprintf+1
  3784  012F  0852               	movf	xvprintf@j,w
  3785  0130  00B1               	movwf	??_xvprintf
  3786  0131  0AD2               	incf	xvprintf@j,f
  3787  0132  1903               	skipnz
  3788  0133  0AD3               	incf	xvprintf@j+1,f
  3789  0134  0851               	movf	xvprintf@w+1,w
  3790  0135  0232               	subwf	??_xvprintf+1,w
  3791  0136  1D03               	skipz
  3792  0137  293A               	goto	u4535
  3793  0138  0850               	movf	xvprintf@w,w
  3794  0139  0231               	subwf	??_xvprintf,w
  3795  013A                     u4535:	
  3796  013A  1803               	btfsc	3,0
  3797  013B  2860               	goto	l628
  3798  013C  3020               	movlw	32
  3799  013D  318F  275A  3180   	fcall	_xputc
  3800  0140  292C               	goto	l4544
  3801  0141                     l4546:	
  3802                           ;xprintf.c: 129: case 'C' :
  3803                           
  3804                           ;xprintf.c: 128: continue;
  3805                           
  3806                           
  3807                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  3808  0141  0830               	movf	xvprintf@arp,w
  3809  0142  0086               	movwf	6
  3810  0143  0187               	clrf	7
  3811  0144  0801               	movf	1,w
  3812  0145  0084               	movwf	4
  3813  0146  0185               	clrf	5
  3814  0147  3002               	movlw	2
  3815  0148  0781               	addwf	1,f
  3816  0149  0800               	movf	0,w
  3817  014A  318F  275A  3180   	fcall	_xputc
  3818  014D  2860               	goto	l628
  3819  014E                     l4548:	
  3820                           ;xprintf.c: 131: case 'B' :
  3821                           
  3822                           
  3823                           ;xprintf.c: 132: r = 2; break;
  3824  014E  3002               	movlw	2
  3825  014F  0020               	movlb	0	; select bank0
  3826  0150  2956               	goto	L4
  3827  0151                     l4550:	
  3828                           ;xprintf.c: 133: case 'O' :
  3829                           
  3830                           
  3831                           ;xprintf.c: 134: r = 8; break;
  3832  0151  3008               	movlw	8
  3833  0152  2956               	goto	L4
  3834  0153                     l4552:	
  3835                           ;xprintf.c: 135: case 'D' :
  3836                           
  3837                           
  3838                           ;xprintf.c: 136: case 'U' :
  3839                           ;xprintf.c: 137: r = 10; break;
  3840  0153  300A               	movlw	10
  3841  0154  2956               	goto	L4
  3842  0155                     l4554:	
  3843                           ;xprintf.c: 138: case 'X' :
  3844                           
  3845                           
  3846                           ;xprintf.c: 139: r = 16; break;
  3847  0155  3010               	movlw	16
  3848  0156                     L4:	
  3849  0156  00CE               	movwf	xvprintf@r
  3850  0157  3000               	movlw	0
  3851  0158  00CF               	movwf	xvprintf@r+1
  3852  0159  2977               	goto	l661
  3853  015A                     l4556:	
  3854                           ;xprintf.c: 140: default:
  3855                           
  3856                           
  3857                           ;xprintf.c: 141: xputc(c); continue;
  3858  015A  085D               	movf	xvprintf@c,w
  3859  015B  318F  275A  3180   	fcall	_xputc
  3860  015E  2860               	goto	l628
  3861  015F                     l4560:	
  3862                           ;xprintf.c: 142: }
  3863                           
  3864  015F  0020               	movlb	0	; select bank0
  3865  0160  085C               	movf	xvprintf@d,w
  3866                           
  3867                           ; Switch size 1, requested type "space"
  3868                           ; Number of cases is 7, Range of values is 66 to 88
  3869                           ; switch strategies available:
  3870                           ; Name         Instructions Cycles
  3871                           ; simple_byte           22    12 (average)
  3872                           ; direct_byte           55     9 (fixed)
  3873                           ; jumptable            263     9 (fixed)
  3874                           ;	Chosen strategy is simple_byte
  3875  0161  3A42               	xorlw	66	; case 66
  3876  0162  1903               	skipnz
  3877  0163  294E               	goto	l4548
  3878  0164  3A01               	xorlw	1	; case 67
  3879  0165  1903               	skipnz
  3880  0166  2941               	goto	l4546
  3881  0167  3A07               	xorlw	7	; case 68
  3882  0168  1903               	skipnz
  3883  0169  2953               	goto	l4552
  3884  016A  3A0B               	xorlw	11	; case 79
  3885  016B  1903               	skipnz
  3886  016C  2951               	goto	l4550
  3887  016D  3A1C               	xorlw	28	; case 83
  3888  016E  1903               	skipnz
  3889  016F  28F7               	goto	l4526
  3890  0170  3A06               	xorlw	6	; case 85
  3891  0171  1903               	skipnz
  3892  0172  2953               	goto	l4552
  3893  0173  3A0D               	xorlw	13	; case 88
  3894  0174  1903               	skipnz
  3895  0175  2955               	goto	l4554
  3896  0176  295A               	goto	l4556
  3897  0177                     l661:	
  3898                           
  3899                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  3900  0177  0020               	movlb	0	; select bank0
  3901  0178  1958               	btfsc	xvprintf@f,2
  3902  0179  29AF               	goto	l4570
  3903  017A  3044               	movlw	68
  3904  017B  065C               	xorwf	xvprintf@d,w
  3905  017C  1903               	btfsc	3,2
  3906  017D  2991               	goto	l4566
  3907  017E  0830               	movf	xvprintf@arp,w
  3908  017F  0086               	movwf	6
  3909  0180  0187               	clrf	7
  3910  0181  0801               	movf	1,w
  3911  0182  0084               	movwf	4
  3912  0183  0185               	clrf	5
  3913  0184  3002               	movlw	2
  3914  0185  0781               	addwf	1,f
  3915  0186  3F00               	moviw [0]fsr0
  3916  0187  00B1               	movwf	??_xvprintf
  3917  0188  3F01               	moviw [1]fsr0
  3918  0189  00B2               	movwf	??_xvprintf+1
  3919  018A  0831               	movf	??_xvprintf,w
  3920  018B  00C5               	movwf	_xvprintf$716
  3921  018C  0832               	movf	??_xvprintf+1,w
  3922  018D  00C6               	movwf	_xvprintf$716+1
  3923  018E  01C7               	clrf	_xvprintf$716+2
  3924  018F  01C8               	clrf	_xvprintf$716+3
  3925  0190  29A6               	goto	l4568
  3926  0191                     l4566:	
  3927  0191  0830               	movf	xvprintf@arp,w
  3928  0192  0086               	movwf	6
  3929  0193  0187               	clrf	7
  3930  0194  0801               	movf	1,w
  3931  0195  0084               	movwf	4
  3932  0196  0185               	clrf	5
  3933  0197  3002               	movlw	2
  3934  0198  0781               	addwf	1,f
  3935  0199  3F00               	moviw [0]fsr0
  3936  019A  00B1               	movwf	??_xvprintf
  3937  019B  3F01               	moviw [1]fsr0
  3938  019C  00B2               	movwf	??_xvprintf+1
  3939  019D  0831               	movf	??_xvprintf,w
  3940  019E  00C5               	movwf	_xvprintf$716
  3941  019F  0832               	movf	??_xvprintf+1,w
  3942  01A0  00C6               	movwf	_xvprintf$716+1
  3943  01A1  0D89               	rlf	9,f
  3944  01A2  3B89               	subwfb	9,f
  3945  01A3  0989               	comf	9,f
  3946  01A4  00C7               	movwf	_xvprintf$716+2
  3947  01A5  00C8               	movwf	_xvprintf$716+3
  3948  01A6                     l4568:	
  3949  01A6  0848               	movf	_xvprintf$716+3,w
  3950  01A7  00D7               	movwf	xvprintf@v+3
  3951  01A8  0847               	movf	_xvprintf$716+2,w
  3952  01A9  00D6               	movwf	xvprintf@v+2
  3953  01AA  0846               	movf	_xvprintf$716+1,w
  3954  01AB  00D5               	movwf	xvprintf@v+1
  3955  01AC  0845               	movf	_xvprintf$716,w
  3956  01AD  00D4               	movwf	xvprintf@v
  3957  01AE  29BF               	goto	l4572
  3958  01AF                     l4570:	
  3959  01AF  0830               	movf	xvprintf@arp,w
  3960  01B0  0086               	movwf	6
  3961  01B1  0187               	clrf	7
  3962  01B2  0801               	movf	1,w
  3963  01B3  0084               	movwf	4
  3964  01B4  0185               	clrf	5
  3965  01B5  3004               	movlw	4
  3966  01B6  0781               	addwf	1,f
  3967  01B7  3F00               	moviw [0]fsr0
  3968  01B8  00D4               	movwf	xvprintf@v
  3969  01B9  3F01               	moviw [1]fsr0
  3970  01BA  00D5               	movwf	xvprintf@v+1
  3971  01BB  3F02               	moviw [2]fsr0
  3972  01BC  00D6               	movwf	xvprintf@v+2
  3973  01BD  3F03               	moviw [3]fsr0
  3974  01BE  00D7               	movwf	xvprintf@v+3
  3975  01BF                     l4572:	
  3976                           
  3977                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  3978  01BF  3044               	movlw	68
  3979  01C0  065C               	xorwf	xvprintf@d,w
  3980  01C1  1903               	btfsc	3,2
  3981  01C2  1FD7               	btfss	xvprintf@v+3,7
  3982  01C3  29D0               	goto	l4578
  3983                           
  3984                           ;xprintf.c: 147: v = 0 - v;
  3985  01C4  09D4               	comf	xvprintf@v,f
  3986  01C5  09D5               	comf	xvprintf@v+1,f
  3987  01C6  09D6               	comf	xvprintf@v+2,f
  3988  01C7  09D7               	comf	xvprintf@v+3,f
  3989  01C8  0AD4               	incf	xvprintf@v,f
  3990  01C9  1903               	skipnz
  3991  01CA  0AD5               	incf	xvprintf@v+1,f
  3992  01CB  1903               	skipnz
  3993  01CC  0AD6               	incf	xvprintf@v+2,f
  3994  01CD  1903               	skipnz
  3995  01CE  0AD7               	incf	xvprintf@v+3,f
  3996                           
  3997                           ;xprintf.c: 148: f |= 8;
  3998  01CF  15D8               	bsf	xvprintf@f,3
  3999  01D0                     l4578:	
  4000                           
  4001                           ;xprintf.c: 149: }
  4002                           ;xprintf.c: 150: i = 0;
  4003  01D0  01DA               	clrf	xvprintf@i
  4004  01D1  01DB               	clrf	xvprintf@i+1
  4005  01D2                     l4580:	
  4006                           ;xprintf.c: 151: do {
  4007                           
  4008                           
  4009                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  4010  01D2  084E               	movf	xvprintf@r,w
  4011  01D3  00A0               	movwf	___llmod@divisor
  4012  01D4  084F               	movf	xvprintf@r+1,w
  4013  01D5  00A1               	movwf	___llmod@divisor+1
  4014  01D6  01A2               	clrf	___llmod@divisor+2
  4015  01D7  01A3               	clrf	___llmod@divisor+3
  4016  01D8  0857               	movf	xvprintf@v+3,w
  4017  01D9  00A7               	movwf	___llmod@dividend+3
  4018  01DA  0856               	movf	xvprintf@v+2,w
  4019  01DB  00A6               	movwf	___llmod@dividend+2
  4020  01DC  0855               	movf	xvprintf@v+1,w
  4021  01DD  00A5               	movwf	___llmod@dividend+1
  4022  01DE  0854               	movf	xvprintf@v,w
  4023  01DF  00A4               	movwf	___llmod@dividend
  4024  01E0  3187  279E  3180   	fcall	___llmod
  4025  01E3  0020               	movlb	0	; select bank0
  4026  01E4  0820               	movf	?___llmod,w
  4027  01E5  00B1               	movwf	??_xvprintf
  4028  01E6  0831               	movf	??_xvprintf,w
  4029  01E7  00DC               	movwf	xvprintf@d
  4030  01E8  084E               	movf	xvprintf@r,w
  4031  01E9  00A0               	movwf	___lldiv@divisor
  4032  01EA  084F               	movf	xvprintf@r+1,w
  4033  01EB  00A1               	movwf	___lldiv@divisor+1
  4034  01EC  01A2               	clrf	___lldiv@divisor+2
  4035  01ED  01A3               	clrf	___lldiv@divisor+3
  4036  01EE  0857               	movf	xvprintf@v+3,w
  4037  01EF  00A7               	movwf	___lldiv@dividend+3
  4038  01F0  0856               	movf	xvprintf@v+2,w
  4039  01F1  00A6               	movwf	___lldiv@dividend+2
  4040  01F2  0855               	movf	xvprintf@v+1,w
  4041  01F3  00A5               	movwf	___lldiv@dividend+1
  4042  01F4  0854               	movf	xvprintf@v,w
  4043  01F5  00A4               	movwf	___lldiv@dividend
  4044  01F6  3186  26C3  3180   	fcall	___lldiv
  4045  01F9  0020               	movlb	0	; select bank0
  4046  01FA  0823               	movf	?___lldiv+3,w
  4047  01FB  00D7               	movwf	xvprintf@v+3
  4048  01FC  0822               	movf	?___lldiv+2,w
  4049  01FD  00D6               	movwf	xvprintf@v+2
  4050  01FE  0821               	movf	?___lldiv+1,w
  4051  01FF  00D5               	movwf	xvprintf@v+1
  4052  0200  0820               	movf	?___lldiv,w
  4053  0201  00D4               	movwf	xvprintf@v
  4054                           
  4055                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  4056  0202  300A               	movlw	10
  4057  0203  025C               	subwf	xvprintf@d,w
  4058  0204  1C03               	skipc
  4059  0205  2A14               	goto	l4594
  4060  0206  3078               	movlw	120
  4061  0207  065D               	xorwf	xvprintf@c,w
  4062  0208  1903               	btfsc	3,2
  4063  0209  2A0C               	goto	l4590
  4064  020A  3007               	movlw	7
  4065  020B  2A0D               	goto	L5
  4066  020C                     l4590:	
  4067  020C  3027               	movlw	39
  4068  020D                     L5:	
  4069  020D  00C9               	movwf	_xvprintf$717
  4070  020E  3000               	movlw	0
  4071  020F  00CA               	movwf	_xvprintf$717+1
  4072  0210  0849               	movf	_xvprintf$717,w
  4073  0211  00B1               	movwf	??_xvprintf
  4074  0212  0831               	movf	??_xvprintf,w
  4075  0213  07DC               	addwf	xvprintf@d,f
  4076  0214                     l4594:	
  4077                           
  4078                           ;xprintf.c: 154: s[i++] = d + '0';
  4079  0214  085C               	movf	xvprintf@d,w
  4080  0215  3E30               	addlw	48
  4081  0216  00B1               	movwf	??_xvprintf
  4082  0217  085A               	movf	xvprintf@i,w
  4083  0218  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  4084  0219  0086               	movwf	6
  4085  021A  0187               	clrf	7
  4086  021B  0831               	movf	??_xvprintf,w
  4087  021C  0081               	movwf	1
  4088  021D  3001               	movlw	1
  4089  021E  07DA               	addwf	xvprintf@i,f
  4090  021F  3000               	movlw	0
  4091  0220  3DDB               	addwfc	xvprintf@i+1,f
  4092                           
  4093                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  4094  0221  0857               	movf	xvprintf@v+3,w
  4095  0222  0456               	iorwf	xvprintf@v+2,w
  4096  0223  0455               	iorwf	xvprintf@v+1,w
  4097  0224  0454               	iorwf	xvprintf@v,w
  4098  0225  1903               	skipnz
  4099  0226  2A2E               	goto	l684
  4100  0227  3000               	movlw	0
  4101  0228  025B               	subwf	xvprintf@i+1,w
  4102  0229  3010               	movlw	16
  4103  022A  1903               	skipnz
  4104  022B  025A               	subwf	xvprintf@i,w
  4105  022C  1C03               	skipc
  4106  022D  29D2               	goto	l4580
  4107  022E                     l684:	
  4108                           
  4109                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  4110  022E  1DD8               	btfss	xvprintf@f,3
  4111  022F  2A3C               	goto	l4606
  4112  0230  302D               	movlw	45
  4113  0231  00B1               	movwf	??_xvprintf
  4114  0232  085A               	movf	xvprintf@i,w
  4115  0233  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  4116  0234  0086               	movwf	6
  4117  0235  0187               	clrf	7
  4118  0236  0831               	movf	??_xvprintf,w
  4119  0237  0081               	movwf	1
  4120  0238  3001               	movlw	1
  4121  0239  07DA               	addwf	xvprintf@i,f
  4122  023A  3000               	movlw	0
  4123  023B  3DDB               	addwfc	xvprintf@i+1,f
  4124  023C                     l4606:	
  4125                           
  4126                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  4127  023C  085B               	movf	xvprintf@i+1,w
  4128  023D  00D3               	movwf	xvprintf@j+1
  4129  023E  085A               	movf	xvprintf@i,w
  4130  023F  00D2               	movwf	xvprintf@j
  4131  0240  1858               	btfsc	xvprintf@f,0
  4132  0241  2A44               	goto	l4612
  4133  0242  3020               	movlw	32
  4134  0243  2A45               	goto	L6
  4135  0244                     l4612:	
  4136  0244  3030               	movlw	48
  4137  0245                     L6:	
  4138  0245  00CB               	movwf	_xvprintf$718
  4139  0246  3000               	movlw	0
  4140  0247  00CC               	movwf	_xvprintf$718+1
  4141  0248  084B               	movf	_xvprintf$718,w
  4142  0249  00B1               	movwf	??_xvprintf
  4143  024A  0831               	movf	??_xvprintf,w
  4144  024B  00DC               	movwf	xvprintf@d
  4145                           
  4146                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  4147  024C  2A51               	goto	l4616
  4148  024D                     l4614:	
  4149  024D  085C               	movf	xvprintf@d,w
  4150  024E  318F  275A  3180   	fcall	_xputc
  4151  0251                     l4616:	
  4152  0251  0020               	movlb	0	; select bank0
  4153  0252  18D8               	btfsc	xvprintf@f,1
  4154  0253  2A63               	goto	l4620
  4155  0254  0853               	movf	xvprintf@j+1,w
  4156  0255  00B2               	movwf	??_xvprintf+1
  4157  0256  0852               	movf	xvprintf@j,w
  4158  0257  00B1               	movwf	??_xvprintf
  4159  0258  0AD2               	incf	xvprintf@j,f
  4160  0259  1903               	skipnz
  4161  025A  0AD3               	incf	xvprintf@j+1,f
  4162  025B  0851               	movf	xvprintf@w+1,w
  4163  025C  0232               	subwf	??_xvprintf+1,w
  4164  025D  1D03               	skipz
  4165  025E  2A61               	goto	u4655
  4166  025F  0850               	movf	xvprintf@w,w
  4167  0260  0231               	subwf	??_xvprintf,w
  4168  0261                     u4655:	
  4169  0261  1C03               	skipc
  4170  0262  2A4D               	goto	l4614
  4171  0263                     l4620:	
  4172                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  4173                           
  4174  0263  3001               	movlw	1
  4175  0264  02DA               	subwf	xvprintf@i,f
  4176  0265  3000               	movlw	0
  4177  0266  3BDB               	subwfb	xvprintf@i+1,f
  4178  0267  085A               	movf	xvprintf@i,w
  4179  0268  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  4180  0269  0086               	movwf	6
  4181  026A  0187               	clrf	7
  4182  026B  0801               	movf	1,w
  4183  026C  318F  275A  3180   	fcall	_xputc
  4184  026F  0020               	movlb	0	; select bank0
  4185  0270  085A               	movf	xvprintf@i,w
  4186  0271  045B               	iorwf	xvprintf@i+1,w
  4187  0272  1903               	btfsc	3,2
  4188  0273  2A79               	goto	l4626
  4189  0274  2A63               	goto	l4620
  4190  0275                     l4624:	
  4191                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  4192                           
  4193  0275  3020               	movlw	32
  4194  0276  318F  275A  3180   	fcall	_xputc
  4195  0279                     l4626:	
  4196  0279  0020               	movlb	0	; select bank0
  4197  027A  0853               	movf	xvprintf@j+1,w
  4198  027B  00B2               	movwf	??_xvprintf+1
  4199  027C  0852               	movf	xvprintf@j,w
  4200  027D  00B1               	movwf	??_xvprintf
  4201  027E  0AD2               	incf	xvprintf@j,f
  4202  027F  1903               	skipnz
  4203  0280  0AD3               	incf	xvprintf@j+1,f
  4204  0281  0851               	movf	xvprintf@w+1,w
  4205  0282  0232               	subwf	??_xvprintf+1,w
  4206  0283  1D03               	skipz
  4207  0284  2A87               	goto	u4675
  4208  0285  0850               	movf	xvprintf@w,w
  4209  0286  0231               	subwf	??_xvprintf,w
  4210  0287                     u4675:	
  4211  0287  1803               	btfsc	3,0
  4212  0288  2860               	goto	l628
  4213  0289  2A75               	goto	l4624
  4214  028A                     __end_of_xvprintf:	
  4215                           ;xprintf.c: 161: }
  4216                           
  4217                           
  4218                           	psect	text3
  4219  0E1A                     __ptext3:	
  4220 ;; *************** function _xputs *****************
  4221 ;; Defined at:
  4222 ;;		line 44 in file "xprintf.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  str             1    wreg     PTR const unsigned char 
  4225 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  str             1    7[BANK0 ] PTR const unsigned char 
  4228 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      void 
  4231 ;; Registers used:
  4232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4238 ;;      Params:         0       0       0       0       0       0
  4239 ;;      Locals:         0       1       0       0       0       0
  4240 ;;      Temps:          0       1       0       0       0       0
  4241 ;;      Totals:         0       2       0       0       0       0
  4242 ;;Total ram usage:        2 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    6
  4245 ;; This function calls:
  4246 ;;		_xputc
  4247 ;; This function is called by:
  4248 ;;		_xvprintf
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           
  4253                           ;psect for function _xputs
  4254  0E1A                     _xputs:	
  4255                           
  4256                           ;incstack = 0
  4257                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4258                           ;xputs@str stored from wreg
  4259  0E1A  0020               	movlb	0	; select bank0
  4260  0E1B  00A7               	movwf	xputs@str
  4261  0E1C                     l4462:	
  4262                           ;xprintf.c: 48: while (*str)
  4263                           
  4264  0E1C  0827               	movf	xputs@str,w
  4265  0E1D  0086               	movwf	6
  4266  0E1E  0187               	clrf	7
  4267  0E1F  0801               	movf	1,w
  4268  0E20  1903               	btfsc	3,2
  4269  0E21  0008               	return
  4270                           
  4271                           ;xprintf.c: 49: xputc(*str++);
  4272  0E22  0827               	movf	xputs@str,w
  4273  0E23  0086               	movwf	6
  4274  0E24  0187               	clrf	7
  4275  0E25  0801               	movf	1,w
  4276  0E26  318F  275A  318E   	fcall	_xputc
  4277  0E29  3001               	movlw	1
  4278  0E2A  0020               	movlb	0	; select bank0
  4279  0E2B  00A6               	movwf	??_xputs
  4280  0E2C  0826               	movf	??_xputs,w
  4281  0E2D  07A7               	addwf	xputs@str,f
  4282  0E2E  2E1C               	goto	l4462
  4283  0E2F                     __end_of_xputs:	
  4284                           
  4285                           	psect	text4
  4286  0F5A                     __ptext4:	
  4287 ;; *************** function _xputc *****************
  4288 ;; Defined at:
  4289 ;;		line 26 in file "xprintf.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  c               1    wreg     unsigned char 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  c               1    5[BANK0 ] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4303 ;;      Params:         0       0       0       0       0       0
  4304 ;;      Locals:         0       1       0       0       0       0
  4305 ;;      Temps:          0       1       0       0       0       0
  4306 ;;      Totals:         0       2       0       0       0       0
  4307 ;;Total ram usage:        2 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    5
  4310 ;; This function calls:
  4311 ;;		Absolute function
  4312 ;;		_LCD_Put
  4313 ;; This function is called by:
  4314 ;;		_xputs
  4315 ;;		_xvprintf
  4316 ;;		_xfputs
  4317 ;;		_put_dump
  4318 ;;		_xgets
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           
  4323                           ;psect for function _xputc
  4324  0F5A                     _xputc:	
  4325                           
  4326                           ;incstack = 0
  4327                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4328                           ;xputc@c stored from wreg
  4329  0F5A  0020               	movlb	0	; select bank0
  4330  0F5B  00A5               	movwf	xputc@c
  4331  0F5C  300A               	movlw	10
  4332  0F5D  0625               	xorwf	xputc@c,w
  4333  0F5E  1D03               	btfss	3,2
  4334  0F5F  2F69               	goto	l4444
  4335  0F60  30E2               	movlw	(low (STR_49| (0+32768)))& (0+255)
  4336  0F61  00A4               	movwf	??_xputc
  4337  0F62  0824               	movf	??_xputc,w
  4338  0F63  00A3               	movwf	LCD_Put@word
  4339  0F64  0867               	movf	_xfunc_out+1,w
  4340  0F65  008A               	movwf	10
  4341  0F66  0866               	movf	_xfunc_out,w
  4342  0F67  000A               	callw
  4343  0F68  318F               	pagesel	$
  4344  0F69                     l4444:	
  4345                           
  4346                           ;xprintf.c: 30: if (outptr) {
  4347  0F69  0020               	movlb	0	; select bank0
  4348  0F6A  0868               	movf	_outptr,w
  4349  0F6B  1903               	btfsc	3,2
  4350  0F6C  2F79               	goto	l4452
  4351                           
  4352                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  4353  0F6D  0825               	movf	xputc@c,w
  4354  0F6E  00A4               	movwf	??_xputc
  4355  0F6F  0868               	movf	_outptr,w
  4356  0F70  0086               	movwf	6
  4357  0F71  0187               	clrf	7
  4358  0F72  0824               	movf	??_xputc,w
  4359  0F73  0081               	movwf	1
  4360  0F74  3001               	movlw	1
  4361  0F75  00A4               	movwf	??_xputc
  4362  0F76  0824               	movf	??_xputc,w
  4363  0F77  07E8               	addwf	_outptr,f
  4364                           
  4365                           ;xprintf.c: 32: return;
  4366  0F78  0008               	return
  4367  0F79                     l4452:	
  4368                           
  4369                           ;xprintf.c: 33: }
  4370                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  4371  0F79  0866               	movf	_xfunc_out,w
  4372  0F7A  0467               	iorwf	_xfunc_out+1,w
  4373  0F7B  1903               	btfsc	3,2
  4374  0F7C  0008               	return
  4375  0F7D  0825               	movf	xputc@c,w
  4376  0F7E  00A4               	movwf	??_xputc
  4377  0F7F  0824               	movf	??_xputc,w
  4378  0F80  00A3               	movwf	LCD_Put@word
  4379  0F81  0867               	movf	_xfunc_out+1,w
  4380  0F82  008A               	movwf	10
  4381  0F83  0866               	movf	_xfunc_out,w
  4382  0F84  000A               	callw
  4383  0F85  318F               	pagesel	$
  4384  0F86  0008               	return
  4385  0F87                     __end_of_xputc:	
  4386                           
  4387                           	psect	text5
  4388  0D5E                     __ptext5:	
  4389 ;; *************** function _LCD_Put *****************
  4390 ;; Defined at:
  4391 ;;		line 54 in file "LCD.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  word            1    3[BANK0 ] char 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      void 
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0, pclath, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4405 ;;      Params:         0       1       0       0       0       0
  4406 ;;      Locals:         0       0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0
  4408 ;;      Totals:         0       1       0       0       0       0
  4409 ;;Total ram usage:        1 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    4
  4412 ;; This function calls:
  4413 ;;		_LCD_WriteData
  4414 ;; This function is called by:
  4415 ;;		_main
  4416 ;;		_xputc
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           
  4421                           ;psect for function _LCD_Put
  4422  0D5E                     _LCD_Put:	
  4423                           
  4424                           ;LCD.c: 56: LATA3 = 1;
  4425                           
  4426                           ;incstack = 0
  4427                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  4428  0D5E  0022               	movlb	2	; select bank2
  4429  0D5F  158C               	bsf	12,3	;volatile
  4430                           
  4431                           ;LCD.c: 57: LCD_WriteData(word);
  4432  0D60  0020               	movlb	0	; select bank0
  4433  0D61  0823               	movf	LCD_Put@word,w
  4434  0D62  318F  27C3         	fcall	_LCD_WriteData
  4435  0D64  0008               	return
  4436  0D65                     __end_of_LCD_Put:	
  4437                           
  4438                           	psect	text6
  4439  0E7C                     __ptext6:	
  4440 ;; *************** function ___wmul *****************
  4441 ;; Defined at:
  4442 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4445 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  product         2    4[BANK0 ] unsigned int 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  2    0[BANK0 ] unsigned int 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4457 ;;      Params:         0       4       0       0       0       0
  4458 ;;      Locals:         0       2       0       0       0       0
  4459 ;;      Temps:          0       0       0       0       0       0
  4460 ;;      Totals:         0       6       0       0       0       0
  4461 ;;Total ram usage:        6 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    3
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_xvprintf
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           
  4472                           ;psect for function ___wmul
  4473  0E7C                     ___wmul:	
  4474                           
  4475                           ;incstack = 0
  4476                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4477  0E7C  0020               	movlb	0	; select bank0
  4478  0E7D  01A4               	clrf	___wmul@product
  4479  0E7E  01A5               	clrf	___wmul@product+1
  4480  0E7F                     l3834:	
  4481  0E7F  1C20               	btfss	___wmul@multiplier,0
  4482  0E80  2E85               	goto	l906
  4483  0E81  0822               	movf	___wmul@multiplicand,w
  4484  0E82  07A4               	addwf	___wmul@product,f
  4485  0E83  0823               	movf	___wmul@multiplicand+1,w
  4486  0E84  3DA5               	addwfc	___wmul@product+1,f
  4487  0E85                     l906:	
  4488  0E85  3001               	movlw	1
  4489  0E86                     u3695:	
  4490  0E86  35A2               	lslf	___wmul@multiplicand,f
  4491  0E87  0DA3               	rlf	___wmul@multiplicand+1,f
  4492  0E88  0B89               	decfsz	9,f
  4493  0E89  2E86               	goto	u3695
  4494  0E8A  3001               	movlw	1
  4495  0E8B                     u3705:	
  4496  0E8B  36A1               	lsrf	___wmul@multiplier+1,f
  4497  0E8C  0CA0               	rrf	___wmul@multiplier,f
  4498  0E8D  0B89               	decfsz	9,f
  4499  0E8E  2E8B               	goto	u3705
  4500  0E8F  0820               	movf	___wmul@multiplier,w
  4501  0E90  0421               	iorwf	___wmul@multiplier+1,w
  4502  0E91  1D03               	btfss	3,2
  4503  0E92  2E7F               	goto	l3834
  4504  0E93  0825               	movf	___wmul@product+1,w
  4505  0E94  00A1               	movwf	?___wmul+1
  4506  0E95  0824               	movf	___wmul@product,w
  4507  0E96  00A0               	movwf	?___wmul
  4508  0E97  0008               	return
  4509  0E98                     __end_of___wmul:	
  4510                           
  4511                           	psect	text7
  4512  079E                     __ptext7:	
  4513 ;; *************** function ___llmod *****************
  4514 ;; Defined at:
  4515 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  divisor         4    0[BANK0 ] unsigned long 
  4518 ;;  dividend        4    4[BANK0 ] unsigned long 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  counter         1    9[BANK0 ] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  4    0[BANK0 ] unsigned long 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4530 ;;      Params:         0       8       0       0       0       0
  4531 ;;      Locals:         0       1       0       0       0       0
  4532 ;;      Temps:          0       1       0       0       0       0
  4533 ;;      Totals:         0      10       0       0       0       0
  4534 ;;Total ram usage:       10 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    3
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_xvprintf
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           
  4545                           ;psect for function ___llmod
  4546  079E                     ___llmod:	
  4547                           
  4548                           ;incstack = 0
  4549                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4550  079E  0020               	movlb	0	; select bank0
  4551  079F  0823               	movf	___llmod@divisor+3,w
  4552  07A0  0422               	iorwf	___llmod@divisor+2,w
  4553  07A1  0421               	iorwf	___llmod@divisor+1,w
  4554  07A2  0420               	iorwf	___llmod@divisor,w
  4555  07A3  1903               	skipnz
  4556  07A4  2FD8               	goto	l3886
  4557  07A5  01A9               	clrf	___llmod@counter
  4558  07A6  0AA9               	incf	___llmod@counter,f
  4559  07A7                     l3876:	
  4560  07A7  1BA3               	btfsc	___llmod@divisor+3,7
  4561  07A8  2FB5               	goto	l3878
  4562  07A9  3001               	movlw	1
  4563  07AA                     u3805:	
  4564  07AA  35A0               	lslf	___llmod@divisor,f
  4565  07AB  0DA1               	rlf	___llmod@divisor+1,f
  4566  07AC  0DA2               	rlf	___llmod@divisor+2,f
  4567  07AD  0DA3               	rlf	___llmod@divisor+3,f
  4568  07AE  0B89               	decfsz	9,f
  4569  07AF  2FAA               	goto	u3805
  4570  07B0  3001               	movlw	1
  4571  07B1  00A8               	movwf	??___llmod
  4572  07B2  0828               	movf	??___llmod,w
  4573  07B3  07A9               	addwf	___llmod@counter,f
  4574  07B4  2FA7               	goto	l3876
  4575  07B5                     l3878:	
  4576  07B5  0823               	movf	___llmod@divisor+3,w
  4577  07B6  0227               	subwf	___llmod@dividend+3,w
  4578  07B7  1D03               	skipz
  4579  07B8  2FC3               	goto	u3825
  4580  07B9  0822               	movf	___llmod@divisor+2,w
  4581  07BA  0226               	subwf	___llmod@dividend+2,w
  4582  07BB  1D03               	skipz
  4583  07BC  2FC3               	goto	u3825
  4584  07BD  0821               	movf	___llmod@divisor+1,w
  4585  07BE  0225               	subwf	___llmod@dividend+1,w
  4586  07BF  1D03               	skipz
  4587  07C0  2FC3               	goto	u3825
  4588  07C1  0820               	movf	___llmod@divisor,w
  4589  07C2  0224               	subwf	___llmod@dividend,w
  4590  07C3                     u3825:	
  4591  07C3  1C03               	skipc
  4592  07C4  2FCD               	goto	l3882
  4593  07C5  0820               	movf	___llmod@divisor,w
  4594  07C6  02A4               	subwf	___llmod@dividend,f
  4595  07C7  0821               	movf	___llmod@divisor+1,w
  4596  07C8  3BA5               	subwfb	___llmod@dividend+1,f
  4597  07C9  0822               	movf	___llmod@divisor+2,w
  4598  07CA  3BA6               	subwfb	___llmod@dividend+2,f
  4599  07CB  0823               	movf	___llmod@divisor+3,w
  4600  07CC  3BA7               	subwfb	___llmod@dividend+3,f
  4601  07CD                     l3882:	
  4602  07CD  3001               	movlw	1
  4603  07CE                     u3835:	
  4604  07CE  36A3               	lsrf	___llmod@divisor+3,f
  4605  07CF  0CA2               	rrf	___llmod@divisor+2,f
  4606  07D0  0CA1               	rrf	___llmod@divisor+1,f
  4607  07D1  0CA0               	rrf	___llmod@divisor,f
  4608  07D2  0B89               	decfsz	9,f
  4609  07D3  2FCE               	goto	u3835
  4610  07D4  3001               	movlw	1
  4611  07D5  02A9               	subwf	___llmod@counter,f
  4612  07D6  1D03               	btfss	3,2
  4613  07D7  2FB5               	goto	l3878
  4614  07D8                     l3886:	
  4615  07D8  0827               	movf	___llmod@dividend+3,w
  4616  07D9  00A3               	movwf	?___llmod+3
  4617  07DA  0826               	movf	___llmod@dividend+2,w
  4618  07DB  00A2               	movwf	?___llmod+2
  4619  07DC  0825               	movf	___llmod@dividend+1,w
  4620  07DD  00A1               	movwf	?___llmod+1
  4621  07DE  0824               	movf	___llmod@dividend,w
  4622  07DF  00A0               	movwf	?___llmod
  4623  07E0  0008               	return
  4624  07E1                     __end_of___llmod:	
  4625                           
  4626                           	psect	text8
  4627  06C3                     __ptext8:	
  4628 ;; *************** function ___lldiv *****************
  4629 ;; Defined at:
  4630 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  divisor         4    0[BANK0 ] unsigned long 
  4633 ;;  dividend        4    4[BANK0 ] unsigned long 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  quotient        4    9[BANK0 ] unsigned long 
  4636 ;;  counter         1   13[BANK0 ] unsigned char 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  4    0[BANK0 ] unsigned long 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4646 ;;      Params:         0       8       0       0       0       0
  4647 ;;      Locals:         0       5       0       0       0       0
  4648 ;;      Temps:          0       1       0       0       0       0
  4649 ;;      Totals:         0      14       0       0       0       0
  4650 ;;Total ram usage:       14 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    3
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_xvprintf
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function ___lldiv
  4662  06C3                     ___lldiv:	
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4666  06C3  3000               	movlw	0
  4667  06C4  0020               	movlb	0	; select bank0
  4668  06C5  00AC               	movwf	___lldiv@quotient+3
  4669  06C6  3000               	movlw	0
  4670  06C7  00AB               	movwf	___lldiv@quotient+2
  4671  06C8  3000               	movlw	0
  4672  06C9  00AA               	movwf	___lldiv@quotient+1
  4673  06CA  3000               	movlw	0
  4674  06CB  00A9               	movwf	___lldiv@quotient
  4675  06CC  0823               	movf	___lldiv@divisor+3,w
  4676  06CD  0422               	iorwf	___lldiv@divisor+2,w
  4677  06CE  0421               	iorwf	___lldiv@divisor+1,w
  4678  06CF  0420               	iorwf	___lldiv@divisor,w
  4679  06D0  1903               	skipnz
  4680  06D1  2F0D               	goto	l3866
  4681  06D2  01AD               	clrf	___lldiv@counter
  4682  06D3  0AAD               	incf	___lldiv@counter,f
  4683  06D4                     l3852:	
  4684  06D4  1BA3               	btfsc	___lldiv@divisor+3,7
  4685  06D5  2EE2               	goto	l3854
  4686  06D6  3001               	movlw	1
  4687  06D7                     u3735:	
  4688  06D7  35A0               	lslf	___lldiv@divisor,f
  4689  06D8  0DA1               	rlf	___lldiv@divisor+1,f
  4690  06D9  0DA2               	rlf	___lldiv@divisor+2,f
  4691  06DA  0DA3               	rlf	___lldiv@divisor+3,f
  4692  06DB  0B89               	decfsz	9,f
  4693  06DC  2ED7               	goto	u3735
  4694  06DD  3001               	movlw	1
  4695  06DE  00A8               	movwf	??___lldiv
  4696  06DF  0828               	movf	??___lldiv,w
  4697  06E0  07AD               	addwf	___lldiv@counter,f
  4698  06E1  2ED4               	goto	l3852
  4699  06E2                     l3854:	
  4700  06E2  3001               	movlw	1
  4701  06E3                     u3755:	
  4702  06E3  35A9               	lslf	___lldiv@quotient,f
  4703  06E4  0DAA               	rlf	___lldiv@quotient+1,f
  4704  06E5  0DAB               	rlf	___lldiv@quotient+2,f
  4705  06E6  0DAC               	rlf	___lldiv@quotient+3,f
  4706  06E7  0B89               	decfsz	9,f
  4707  06E8  2EE3               	goto	u3755
  4708  06E9  0823               	movf	___lldiv@divisor+3,w
  4709  06EA  0227               	subwf	___lldiv@dividend+3,w
  4710  06EB  1D03               	skipz
  4711  06EC  2EF7               	goto	u3765
  4712  06ED  0822               	movf	___lldiv@divisor+2,w
  4713  06EE  0226               	subwf	___lldiv@dividend+2,w
  4714  06EF  1D03               	skipz
  4715  06F0  2EF7               	goto	u3765
  4716  06F1  0821               	movf	___lldiv@divisor+1,w
  4717  06F2  0225               	subwf	___lldiv@dividend+1,w
  4718  06F3  1D03               	skipz
  4719  06F4  2EF7               	goto	u3765
  4720  06F5  0820               	movf	___lldiv@divisor,w
  4721  06F6  0224               	subwf	___lldiv@dividend,w
  4722  06F7                     u3765:	
  4723  06F7  1C03               	skipc
  4724  06F8  2F02               	goto	l3862
  4725  06F9  0820               	movf	___lldiv@divisor,w
  4726  06FA  02A4               	subwf	___lldiv@dividend,f
  4727  06FB  0821               	movf	___lldiv@divisor+1,w
  4728  06FC  3BA5               	subwfb	___lldiv@dividend+1,f
  4729  06FD  0822               	movf	___lldiv@divisor+2,w
  4730  06FE  3BA6               	subwfb	___lldiv@dividend+2,f
  4731  06FF  0823               	movf	___lldiv@divisor+3,w
  4732  0700  3BA7               	subwfb	___lldiv@dividend+3,f
  4733  0701  1429               	bsf	___lldiv@quotient,0
  4734  0702                     l3862:	
  4735  0702  3001               	movlw	1
  4736  0703                     u3775:	
  4737  0703  36A3               	lsrf	___lldiv@divisor+3,f
  4738  0704  0CA2               	rrf	___lldiv@divisor+2,f
  4739  0705  0CA1               	rrf	___lldiv@divisor+1,f
  4740  0706  0CA0               	rrf	___lldiv@divisor,f
  4741  0707  0B89               	decfsz	9,f
  4742  0708  2F03               	goto	u3775
  4743  0709  3001               	movlw	1
  4744  070A  02AD               	subwf	___lldiv@counter,f
  4745  070B  1D03               	btfss	3,2
  4746  070C  2EE2               	goto	l3854
  4747  070D                     l3866:	
  4748  070D  082C               	movf	___lldiv@quotient+3,w
  4749  070E  00A3               	movwf	?___lldiv+3
  4750  070F  082B               	movf	___lldiv@quotient+2,w
  4751  0710  00A2               	movwf	?___lldiv+2
  4752  0711  082A               	movf	___lldiv@quotient+1,w
  4753  0712  00A1               	movwf	?___lldiv+1
  4754  0713  0829               	movf	___lldiv@quotient,w
  4755  0714  00A0               	movwf	?___lldiv
  4756  0715  0008               	return
  4757  0716                     __end_of___lldiv:	
  4758                           
  4759                           	psect	text9
  4760  0DDD                     __ptext9:	
  4761 ;; *************** function _mTouch_Init *****************
  4762 ;; Defined at:
  4763 ;;		line 12 in file "mTouch.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;		None
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2, status,0, pclath, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4777 ;;      Params:         0       0       0       0       0       0
  4778 ;;      Locals:         0       0       0       0       0       0
  4779 ;;      Temps:          0       1       0       0       0       0
  4780 ;;      Totals:         0       1       0       0       0       0
  4781 ;;Total ram usage:        1 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; Hardware stack levels required when called:    4
  4784 ;; This function calls:
  4785 ;;		_mTouch_PortInit
  4786 ;; This function is called by:
  4787 ;;		_main
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           
  4792                           ;psect for function _mTouch_Init
  4793  0DDD                     _mTouch_Init:	
  4794                           
  4795                           ;mTouch.c: 14: mTouch_PortInit();
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4799  0DDD  318D  259D         	fcall	_mTouch_PortInit
  4800                           
  4801                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4802  0DDF  0021               	movlb	1	; select bank1
  4803  0DE0  0815               	movf	21,w	;volatile
  4804                           
  4805                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4806  0DE1  1595               	bsf	21,3	;volatile
  4807                           
  4808                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4809  0DE2  1695               	bsf	21,5	;volatile
  4810                           
  4811                           ;mTouch.c: 20: TMR0 = 0x00;
  4812  0DE3  0020               	movlb	0	; select bank0
  4813  0DE4  0195               	clrf	21	;volatile
  4814                           
  4815                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4816  0DE5  141E               	bsf	30,0	;volatile
  4817                           
  4818                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4819  0DE6  300C               	movlw	12
  4820  0DE7  00A1               	movwf	??_mTouch_Init
  4821  0DE8  0821               	movf	??_mTouch_Init,w
  4822  0DE9  049E               	iorwf	30,f	;volatile
  4823                           
  4824                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4825  0DEA  307F               	movlw	127
  4826  0DEB  00A1               	movwf	??_mTouch_Init
  4827  0DEC  0821               	movf	??_mTouch_Init,w
  4828  0DED  059E               	andwf	30,f	;volatile
  4829                           
  4830                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4831  0DEE  019F               	clrf	31	;volatile
  4832  0DEF  0008               	return
  4833  0DF0                     __end_of_mTouch_Init:	
  4834                           
  4835                           	psect	text10
  4836  0D9D                     __ptext10:	
  4837 ;; *************** function _mTouch_PortInit *****************
  4838 ;; Defined at:
  4839 ;;		line 6 in file "mTouch.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;		None
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;		None
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4853 ;;      Params:         0       0       0       0       0       0
  4854 ;;      Locals:         0       0       0       0       0       0
  4855 ;;      Temps:          0       1       0       0       0       0
  4856 ;;      Totals:         0       1       0       0       0       0
  4857 ;;Total ram usage:        1 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; Hardware stack levels required when called:    3
  4860 ;; This function calls:
  4861 ;;		Nothing
  4862 ;; This function is called by:
  4863 ;;		_mTouch_Init
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           
  4868                           ;psect for function _mTouch_PortInit
  4869  0D9D                     _mTouch_PortInit:	
  4870                           
  4871                           ;mTouch.c: 8: TRISA |= (0x07);
  4872                           
  4873                           ;incstack = 0
  4874                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4875  0D9D  3007               	movlw	7
  4876  0D9E  0020               	movlb	0	; select bank0
  4877  0D9F  00A0               	movwf	??_mTouch_PortInit
  4878  0DA0  0820               	movf	??_mTouch_PortInit,w
  4879  0DA1  0021               	movlb	1	; select bank1
  4880  0DA2  048C               	iorwf	12,f	;volatile
  4881                           
  4882                           ;mTouch.c: 9: ANSELA |= (0x07);
  4883  0DA3  3007               	movlw	7
  4884  0DA4  0020               	movlb	0	; select bank0
  4885  0DA5  00A0               	movwf	??_mTouch_PortInit
  4886  0DA6  0820               	movf	??_mTouch_PortInit,w
  4887  0DA7  0023               	movlb	3	; select bank3
  4888  0DA8  048C               	iorwf	12,f	;volatile
  4889  0DA9  0008               	return
  4890  0DAA                     __end_of_mTouch_PortInit:	
  4891                           
  4892                           	psect	text11
  4893  0DCA                     __ptext11:	
  4894 ;; *************** function _Timer4_Init *****************
  4895 ;; Defined at:
  4896 ;;		line 3 in file "Timer4.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4910 ;;      Params:         0       0       0       0       0       0
  4911 ;;      Locals:         0       0       0       0       0       0
  4912 ;;      Temps:          0       1       0       0       0       0
  4913 ;;      Totals:         0       1       0       0       0       0
  4914 ;;Total ram usage:        1 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:    3
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_main
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           
  4925                           ;psect for function _Timer4_Init
  4926  0DCA                     _Timer4_Init:	
  4927                           
  4928                           ;Timer4.c: 5: PR4 = 0x7D;
  4929                           
  4930                           ;incstack = 0
  4931                           ; Regs used in _Timer4_Init: [wreg+status,2+status,0]
  4932  0DCA  307D               	movlw	125
  4933  0DCB  0028               	movlb	8	; select bank8
  4934  0DCC  0096               	movwf	22	;volatile
  4935                           
  4936                           ;Timer4.c: 6: TMR4 = 0x00;
  4937  0DCD  0195               	clrf	21	;volatile
  4938                           
  4939                           ;Timer4.c: 7: T4CON |= (0x03<<0);
  4940  0DCE  3003               	movlw	3
  4941  0DCF  0020               	movlb	0	; select bank0
  4942  0DD0  00A0               	movwf	??_Timer4_Init
  4943  0DD1  0820               	movf	??_Timer4_Init,w
  4944  0DD2  0028               	movlb	8	; select bank8
  4945  0DD3  0497               	iorwf	23,f	;volatile
  4946                           
  4947                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  4948  0DD4  0817               	movf	23,w	;volatile
  4949                           
  4950                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  4951  0DD5  1517               	bsf	23,2	;volatile
  4952                           
  4953                           ;Timer4.c: 11: TMR4IF = 0;
  4954  0DD6  0020               	movlb	0	; select bank0
  4955  0DD7  1093               	bcf	19,1	;volatile
  4956                           
  4957                           ;Timer4.c: 12: TMR4IE = 1;
  4958  0DD8  0021               	movlb	1	; select bank1
  4959  0DD9  1493               	bsf	19,1	;volatile
  4960                           
  4961                           ;Timer4.c: 13: PEIE = 1;
  4962  0DDA  170B               	bsf	11,6	;volatile
  4963                           
  4964                           ;Timer4.c: 14: GIE = 1;
  4965  0DDB  178B               	bsf	11,7	;volatile
  4966  0DDC  0008               	return
  4967  0DDD                     __end_of_Timer4_Init:	
  4968                           
  4969                           	psect	text12
  4970  0E46                     __ptext12:	
  4971 ;; *************** function _Timer1_Init *****************
  4972 ;; Defined at:
  4973 ;;		line 3 in file "Timer1.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      void 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4987 ;;      Params:         0       0       0       0       0       0
  4988 ;;      Locals:         0       0       0       0       0       0
  4989 ;;      Temps:          0       1       0       0       0       0
  4990 ;;      Totals:         0       1       0       0       0       0
  4991 ;;Total ram usage:        1 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    3
  4994 ;; This function calls:
  4995 ;;		Nothing
  4996 ;; This function is called by:
  4997 ;;		_main
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           
  5002                           ;psect for function _Timer1_Init
  5003  0E46                     _Timer1_Init:	
  5004                           
  5005                           ;Timer1.c: 5: TRISB |= (1<<6);
  5006                           
  5007                           ;incstack = 0
  5008                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  5009  0E46  0021               	movlb	1	; select bank1
  5010  0E47  170D               	bsf	13,6	;volatile
  5011                           
  5012                           ;Timer1.c: 6: ANSELB &= ~(1<<6);
  5013  0E48  30BF               	movlw	191
  5014  0E49  0020               	movlb	0	; select bank0
  5015  0E4A  00A0               	movwf	??_Timer1_Init
  5016  0E4B  0820               	movf	??_Timer1_Init,w
  5017  0E4C  0023               	movlb	3	; select bank3
  5018  0E4D  058D               	andwf	13,f	;volatile
  5019                           
  5020                           ;Timer1.c: 8: T1CON |= (0x01<<2);
  5021  0E4E  0020               	movlb	0	; select bank0
  5022  0E4F  1518               	bsf	24,2	;volatile
  5023                           
  5024                           ;Timer1.c: 9: T1CON &= ~(0x01<<3);
  5025  0E50  30F7               	movlw	247
  5026  0E51  00A0               	movwf	??_Timer1_Init
  5027  0E52  0820               	movf	??_Timer1_Init,w
  5028  0E53  0598               	andwf	24,f	;volatile
  5029                           
  5030                           ;Timer1.c: 10: T1CON |= (0x00<<4);
  5031  0E54  0818               	movf	24,w	;volatile
  5032                           
  5033                           ;Timer1.c: 11: T1CON |= (0x02<<6);
  5034  0E55  1798               	bsf	24,7	;volatile
  5035                           
  5036                           ;Timer1.c: 13: T1GCON = 0x00;
  5037  0E56  0199               	clrf	25	;volatile
  5038                           
  5039                           ;Timer1.c: 15: TMR1 = 0x0000;
  5040  0E57  0196               	clrf	22	;volatile
  5041  0E58  0197               	clrf	23	;volatile
  5042                           
  5043                           ;Timer1.c: 17: TMR1IE = 1;
  5044  0E59  0021               	movlb	1	; select bank1
  5045  0E5A  1411               	bsf	17,0	;volatile
  5046                           
  5047                           ;Timer1.c: 18: TMR1IF = 0;
  5048  0E5B  0020               	movlb	0	; select bank0
  5049  0E5C  1011               	bcf	17,0	;volatile
  5050                           
  5051                           ;Timer1.c: 19: PEIE = 1;
  5052  0E5D  170B               	bsf	11,6	;volatile
  5053                           
  5054                           ;Timer1.c: 20: GIE = 1;
  5055  0E5E  178B               	bsf	11,7	;volatile
  5056  0E5F  0008               	return
  5057  0E60                     __end_of_Timer1_Init:	
  5058                           
  5059                           	psect	text13
  5060  05AC                     __ptext13:	
  5061 ;; *************** function _LCD_Init *****************
  5062 ;; Defined at:
  5063 ;;		line 28 in file "LCD.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;		None
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      void 
  5070 ;; Registers used:
  5071 ;;		wreg, status,2, status,0, pclath, cstack
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5077 ;;      Params:         0       0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0
  5079 ;;      Temps:          0       2       0       0       0       0
  5080 ;;      Totals:         0       2       0       0       0       0
  5081 ;;Total ram usage:        2 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:    5
  5084 ;; This function calls:
  5085 ;;		_LCD_DisplayClear
  5086 ;;		_LCD_WriteData
  5087 ;; This function is called by:
  5088 ;;		_main
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           
  5093                           ;psect for function _LCD_Init
  5094  05AC                     _LCD_Init:	
  5095                           
  5096                           ;LCD.c: 30: LATA3 = 0;
  5097                           
  5098                           ;incstack = 0
  5099                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5100  05AC  0022               	movlb	2	; select bank2
  5101  05AD  118C               	bcf	12,3	;volatile
  5102                           
  5103                           ;LCD.c: 31: LATA4 = 0;
  5104  05AE  120C               	bcf	12,4	;volatile
  5105                           
  5106                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  5107  05AF  3002               	movlw	2
  5108  05B0  0020               	movlb	0	; select bank0
  5109  05B1  00A5               	movwf	??_LCD_Init+1
  5110  05B2  3038               	movlw	56
  5111  05B3  00A4               	movwf	??_LCD_Init
  5112  05B4  30AD               	movlw	173
  5113  05B5                     u4857:	
  5114  05B5  0B89               	decfsz	9,f
  5115  05B6  2DB5               	goto	u4857
  5116  05B7  0BA4               	decfsz	??_LCD_Init,f
  5117  05B8  2DB5               	goto	u4857
  5118  05B9  0BA5               	decfsz	??_LCD_Init+1,f
  5119  05BA  2DB5               	goto	u4857
  5120                           
  5121                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  5122  05BB  3003               	movlw	3
  5123  05BC  0020               	movlb	0	; select bank0
  5124  05BD  008D               	movwf	13	;volatile
  5125                           
  5126                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5127  05BE  0022               	movlb	2	; select bank2
  5128  05BF  160C               	bsf	12,4	;volatile
  5129  05C0  3200               	nop2	;2 cycle nop
  5130  05C1  3200               	nop2	;2 cycle nop
  5131  05C2  3200               	nop2	;2 cycle nop
  5132  05C3  3200               	nop2	;2 cycle nop
  5133  05C4  0022               	movlb	2	; select bank2
  5134  05C5  120C               	bcf	12,4	;volatile
  5135  05C6  3200               	nop2	;2 cycle nop
  5136  05C7  3200               	nop2	;2 cycle nop
  5137  05C8  3200               	nop2	;2 cycle nop
  5138  05C9  3200               	nop2	;2 cycle nop
  5139                           
  5140                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  5141  05CA  3034               	movlw	52
  5142  05CB  0020               	movlb	0	; select bank0
  5143  05CC  00A4               	movwf	??_LCD_Init
  5144  05CD  30F1               	movlw	241
  5145  05CE                     u4867:	
  5146  05CE  0B89               	decfsz	9,f
  5147  05CF  2DCE               	goto	u4867
  5148  05D0  0BA4               	decfsz	??_LCD_Init,f
  5149  05D1  2DCE               	goto	u4867
  5150  05D2  3200               	nop2
  5151                           
  5152                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5153  05D3  0022               	movlb	2	; select bank2
  5154  05D4  160C               	bsf	12,4	;volatile
  5155  05D5  3200               	nop2	;2 cycle nop
  5156  05D6  3200               	nop2	;2 cycle nop
  5157  05D7  3200               	nop2	;2 cycle nop
  5158  05D8  3200               	nop2	;2 cycle nop
  5159  05D9  0022               	movlb	2	; select bank2
  5160  05DA  120C               	bcf	12,4	;volatile
  5161  05DB  3200               	nop2	;2 cycle nop
  5162  05DC  3200               	nop2	;2 cycle nop
  5163  05DD  3200               	nop2	;2 cycle nop
  5164  05DE  3200               	nop2	;2 cycle nop
  5165                           
  5166                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5167  05DF  3005               	movlw	5
  5168  05E0  0020               	movlb	0	; select bank0
  5169  05E1  00A4               	movwf	??_LCD_Init
  5170  05E2  3026               	movlw	38
  5171  05E3                     u4877:	
  5172  05E3  0B89               	decfsz	9,f
  5173  05E4  2DE3               	goto	u4877
  5174  05E5  0BA4               	decfsz	??_LCD_Init,f
  5175  05E6  2DE3               	goto	u4877
  5176  05E7  0000               	nop
  5177                           
  5178                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5179  05E8  0022               	movlb	2	; select bank2
  5180  05E9  160C               	bsf	12,4	;volatile
  5181  05EA  3200               	nop2	;2 cycle nop
  5182  05EB  3200               	nop2	;2 cycle nop
  5183  05EC  3200               	nop2	;2 cycle nop
  5184  05ED  3200               	nop2	;2 cycle nop
  5185  05EE  0022               	movlb	2	; select bank2
  5186  05EF  120C               	bcf	12,4	;volatile
  5187  05F0  3200               	nop2	;2 cycle nop
  5188  05F1  3200               	nop2	;2 cycle nop
  5189  05F2  3200               	nop2	;2 cycle nop
  5190  05F3  3200               	nop2	;2 cycle nop
  5191                           
  5192                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5193  05F4  3005               	movlw	5
  5194  05F5  0020               	movlb	0	; select bank0
  5195  05F6  00A4               	movwf	??_LCD_Init
  5196  05F7  3026               	movlw	38
  5197  05F8                     u4887:	
  5198  05F8  0B89               	decfsz	9,f
  5199  05F9  2DF8               	goto	u4887
  5200  05FA  0BA4               	decfsz	??_LCD_Init,f
  5201  05FB  2DF8               	goto	u4887
  5202  05FC  0000               	nop
  5203                           
  5204                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  5205  05FD  3002               	movlw	2
  5206  05FE  0020               	movlb	0	; select bank0
  5207  05FF  008D               	movwf	13	;volatile
  5208                           
  5209                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5210  0600  0022               	movlb	2	; select bank2
  5211  0601  160C               	bsf	12,4	;volatile
  5212  0602  3200               	nop2	;2 cycle nop
  5213  0603  3200               	nop2	;2 cycle nop
  5214  0604  3200               	nop2	;2 cycle nop
  5215  0605  3200               	nop2	;2 cycle nop
  5216  0606  0022               	movlb	2	; select bank2
  5217  0607  120C               	bcf	12,4	;volatile
  5218  0608  3200               	nop2	;2 cycle nop
  5219  0609  3200               	nop2	;2 cycle nop
  5220  060A  3200               	nop2	;2 cycle nop
  5221  060B  3200               	nop2	;2 cycle nop
  5222                           
  5223                           ;LCD.c: 44: LCD_WriteData(0x28);
  5224  060C  3028               	movlw	40
  5225  060D  318F  27C3  3185   	fcall	_LCD_WriteData
  5226                           
  5227                           ;LCD.c: 45: LCD_WriteData(0x0c);
  5228  0610  300C               	movlw	12
  5229  0611  318F  27C3  3185   	fcall	_LCD_WriteData
  5230                           
  5231                           ;LCD.c: 46: LCD_DisplayClear();
  5232  0614  318D  25AA  3185   	fcall	_LCD_DisplayClear
  5233                           
  5234                           ;LCD.c: 47: LCD_WriteData(0x06);
  5235  0617  3006               	movlw	6
  5236  0618  318F  27C3         	fcall	_LCD_WriteData
  5237  061A  0008               	return
  5238  061B                     __end_of_LCD_Init:	
  5239                           
  5240                           	psect	text14
  5241  0DAA                     __ptext14:	
  5242 ;; *************** function _LCD_DisplayClear *****************
  5243 ;; Defined at:
  5244 ;;		line 64 in file "LCD.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;		None
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		wreg, status,2, status,0, pclath, cstack
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5258 ;;      Params:         0       0       0       0       0       0
  5259 ;;      Locals:         0       0       0       0       0       0
  5260 ;;      Temps:          0       1       0       0       0       0
  5261 ;;      Totals:         0       1       0       0       0       0
  5262 ;;Total ram usage:        1 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; Hardware stack levels required when called:    4
  5265 ;; This function calls:
  5266 ;;		_LCD_WriteData
  5267 ;; This function is called by:
  5268 ;;		_LCD_Init
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           
  5273                           ;psect for function _LCD_DisplayClear
  5274  0DAA                     _LCD_DisplayClear:	
  5275                           
  5276                           ;LCD.c: 66: LATA3 = 0;
  5277                           
  5278                           ;incstack = 0
  5279                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  5280  0DAA  0022               	movlb	2	; select bank2
  5281  0DAB  118C               	bcf	12,3	;volatile
  5282                           
  5283                           ;LCD.c: 67: LCD_WriteData(0x01);
  5284  0DAC  3001               	movlw	1
  5285  0DAD  318F  27C3  318D   	fcall	_LCD_WriteData
  5286                           
  5287                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  5288  0DB0  3015               	movlw	21
  5289  0DB1  0020               	movlb	0	; select bank0
  5290  0DB2  00A3               	movwf	??_LCD_DisplayClear
  5291  0DB3  30C6               	movlw	198
  5292  0DB4                     u4897:	
  5293  0DB4  0B89               	decfsz	9,f
  5294  0DB5  2DB4               	goto	u4897
  5295  0DB6  0BA3               	decfsz	??_LCD_DisplayClear,f
  5296  0DB7  2DB4               	goto	u4897
  5297  0DB8  0000               	nop
  5298  0DB9  0008               	return
  5299  0DBA                     __end_of_LCD_DisplayClear:	
  5300                           
  5301                           	psect	text15
  5302  0E2F                     __ptext15:	
  5303 ;; *************** function _LCD_CursorPosition *****************
  5304 ;; Defined at:
  5305 ;;		line 86 in file "LCD.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  tx              1    wreg     unsigned char 
  5308 ;;  ty              1    3[BANK0 ] unsigned char 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  tx              1    5[BANK0 ] unsigned char 
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  1    wreg      void 
  5313 ;; Registers used:
  5314 ;;		wreg, status,2, status,0, pclath, cstack
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5320 ;;      Params:         0       1       0       0       0       0
  5321 ;;      Locals:         0       1       0       0       0       0
  5322 ;;      Temps:          0       1       0       0       0       0
  5323 ;;      Totals:         0       3       0       0       0       0
  5324 ;;Total ram usage:        3 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:    4
  5327 ;; This function calls:
  5328 ;;		_LCD_WriteData
  5329 ;; This function is called by:
  5330 ;;		_main
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           
  5335                           ;psect for function _LCD_CursorPosition
  5336  0E2F                     _LCD_CursorPosition:	
  5337                           
  5338                           ;incstack = 0
  5339                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  5340                           ;LCD_CursorPosition@tx stored from wreg
  5341  0E2F  0020               	movlb	0	; select bank0
  5342  0E30  00A5               	movwf	LCD_CursorPosition@tx
  5343                           
  5344                           ;LCD.c: 88: LATA3 = 0;
  5345  0E31  0022               	movlb	2	; select bank2
  5346  0E32  118C               	bcf	12,3	;volatile
  5347                           
  5348                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  5349  0E33  0020               	movlb	0	; select bank0
  5350  0E34  0823               	movf	LCD_CursorPosition@ty,w
  5351  0E35  00A4               	movwf	??_LCD_CursorPosition
  5352  0E36  3005               	movlw	5
  5353  0E37                     u4145:	
  5354  0E37  35A4               	lslf	??_LCD_CursorPosition,f
  5355  0E38  3EFF               	addlw	-1
  5356  0E39  1D03               	skipz
  5357  0E3A  2E37               	goto	u4145
  5358  0E3B  3524               	lslf	??_LCD_CursorPosition,w
  5359  0E3C  0425               	iorwf	LCD_CursorPosition@tx,w
  5360  0E3D  3880               	iorlw	-128
  5361  0E3E  318F  27C3  318E   	fcall	_LCD_WriteData
  5362                           
  5363                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  5364  0E41  306A               	movlw	106
  5365  0E42                     u4907:	
  5366  0E42  0B89               	decfsz	9,f
  5367  0E43  2E42               	goto	u4907
  5368  0E44  3200               	nop2
  5369  0E45  0008               	return
  5370  0E46                     __end_of_LCD_CursorPosition:	
  5371                           
  5372                           	psect	text16
  5373  0FC3                     __ptext16:	
  5374 ;; *************** function _LCD_WriteData *****************
  5375 ;; Defined at:
  5376 ;;		line 15 in file "LCD.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  point           1    wreg     char 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;  point           1    2[BANK0 ] char 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  1    wreg      void 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5390 ;;      Params:         0       0       0       0       0       0
  5391 ;;      Locals:         0       1       0       0       0       0
  5392 ;;      Temps:          0       2       0       0       0       0
  5393 ;;      Totals:         0       3       0       0       0       0
  5394 ;;Total ram usage:        3 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    3
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_LCD_Init
  5401 ;;		_LCD_Put
  5402 ;;		_LCD_DisplayClear
  5403 ;;		_LCD_CursorPosition
  5404 ;;		_LCD_CursorHome
  5405 ;;		_LCD_CursorShift
  5406 ;;		_LCD_DispShift
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           
  5411                           ;psect for function _LCD_WriteData
  5412  0FC3                     _LCD_WriteData:	
  5413                           
  5414                           ;incstack = 0
  5415                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  5416                           ;LCD_WriteData@point stored from wreg
  5417  0FC3  0020               	movlb	0	; select bank0
  5418  0FC4  00A2               	movwf	LCD_WriteData@point
  5419                           
  5420                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  5421  0FC5  30D5               	movlw	213
  5422  0FC6                     u4917:	
  5423  0FC6  0B89               	decfsz	9,f
  5424  0FC7  2FC6               	goto	u4917
  5425  0FC8  0000               	nop
  5426                           
  5427                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  5428  0FC9  0020               	movlb	0	; select bank0
  5429  0FCA  0822               	movf	LCD_WriteData@point,w
  5430  0FCB  00A0               	movwf	??_LCD_WriteData
  5431  0FCC  3004               	movlw	4
  5432  0FCD                     u3355:	
  5433  0FCD  1003               	clrc
  5434  0FCE  1BA0               	btfsc	??_LCD_WriteData,7
  5435  0FCF  1403               	setc
  5436  0FD0  0CA0               	rrf	??_LCD_WriteData,f
  5437  0FD1  0B89               	decfsz	9,f
  5438  0FD2  2FCD               	goto	u3355
  5439  0FD3  3003               	movlw	3
  5440  0FD4  0520               	andwf	??_LCD_WriteData,w
  5441  0FD5  00A1               	movwf	??_LCD_WriteData+1
  5442  0FD6  0E22               	swapf	LCD_WriteData@point,w
  5443  0FD7  390F               	andlw	15
  5444  0FD8  1989               	btfsc	9,3
  5445  0FD9  38F0               	iorlw	240
  5446  0FDA  390C               	andlw	12
  5447  0FDB  0709               	addwf	9,w
  5448  0FDC  0421               	iorwf	??_LCD_WriteData+1,w
  5449  0FDD  008D               	movwf	13	;volatile
  5450                           
  5451                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5452  0FDE  0022               	movlb	2	; select bank2
  5453  0FDF  160C               	bsf	12,4	;volatile
  5454  0FE0  3200               	nop2	;2 cycle nop
  5455  0FE1  3200               	nop2	;2 cycle nop
  5456  0FE2  3200               	nop2	;2 cycle nop
  5457  0FE3  3200               	nop2	;2 cycle nop
  5458  0FE4  0022               	movlb	2	; select bank2
  5459  0FE5  120C               	bcf	12,4	;volatile
  5460  0FE6  3200               	nop2	;2 cycle nop
  5461  0FE7  3200               	nop2	;2 cycle nop
  5462  0FE8  3200               	nop2	;2 cycle nop
  5463  0FE9  3200               	nop2	;2 cycle nop
  5464                           
  5465                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  5466  0FEA  3003               	movlw	3
  5467  0FEB  0020               	movlb	0	; select bank0
  5468  0FEC  0522               	andwf	LCD_WriteData@point,w
  5469  0FED  00A0               	movwf	??_LCD_WriteData
  5470  0FEE  0822               	movf	LCD_WriteData@point,w
  5471  0FEF  390C               	andlw	12
  5472  0FF0  0709               	addwf	9,w
  5473  0FF1  0420               	iorwf	??_LCD_WriteData,w
  5474  0FF2  008D               	movwf	13	;volatile
  5475                           
  5476                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5477  0FF3  0022               	movlb	2	; select bank2
  5478  0FF4  160C               	bsf	12,4	;volatile
  5479  0FF5  3200               	nop2	;2 cycle nop
  5480  0FF6  3200               	nop2	;2 cycle nop
  5481  0FF7  3200               	nop2	;2 cycle nop
  5482  0FF8  3200               	nop2	;2 cycle nop
  5483  0FF9  0022               	movlb	2	; select bank2
  5484  0FFA  120C               	bcf	12,4	;volatile
  5485  0FFB  3200               	nop2	;2 cycle nop
  5486  0FFC  3200               	nop2	;2 cycle nop
  5487  0FFD  3200               	nop2	;2 cycle nop
  5488  0FFE  3200               	nop2	;2 cycle nop
  5489  0FFF  0008               	return
  5490  1000                     __end_of_LCD_WriteData:	
  5491                           
  5492                           	psect	text17
  5493  0E98                     __ptext17:	
  5494 ;; *************** function _DAC_Initialize *****************
  5495 ;; Defined at:
  5496 ;;		line 14 in file "MCP4726.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;		None
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;		None
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5510 ;;      Params:         0       0       0       0       0       0
  5511 ;;      Locals:         0       0       0       0       0       0
  5512 ;;      Temps:          0       2       0       0       0       0
  5513 ;;      Totals:         0       2       0       0       0       0
  5514 ;;Total ram usage:        2 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:    6
  5517 ;; This function calls:
  5518 ;;		_I2C_Init
  5519 ;;		_I2C_Transmit
  5520 ;; This function is called by:
  5521 ;;		_main
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           
  5526                           ;psect for function _DAC_Initialize
  5527  0E98                     _DAC_Initialize:	
  5528                           
  5529                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  5530                           
  5531                           ;incstack = 0
  5532                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5533  0E98  0020               	movlb	0	; select bank0
  5534  0E99  01A5               	clrf	I2C_Init@address
  5535  0E9A  01A6               	clrf	I2C_Init@mode
  5536  0E9B  01A7               	clrf	I2C_Init@Speed
  5537  0E9C  3001               	movlw	1
  5538  0E9D  318F  2705  318E   	fcall	_I2C_Init
  5539                           
  5540                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  5541  0EA0  0020               	movlb	0	; select bank0
  5542  0EA1  086B               	movf	_ConfigReg,w
  5543  0EA2  391F               	andlw	-225
  5544  0EA3  3880               	iorlw	128
  5545  0EA4  00EB               	movwf	_ConfigReg
  5546                           
  5547                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  5548  0EA5  106B               	bcf	_ConfigReg,0
  5549                           
  5550                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  5551  0EA6  30F9               	movlw	-7
  5552  0EA7  05EB               	andwf	_ConfigReg,f
  5553                           
  5554                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  5555  0EA8  30E7               	movlw	-25
  5556  0EA9  05EB               	andwf	_ConfigReg,f
  5557                           
  5558                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  5559  0EAA  3060               	movlw	96
  5560  0EAB  00B0               	movwf	??_DAC_Initialize
  5561  0EAC  0830               	movf	??_DAC_Initialize,w
  5562  0EAD  00A8               	movwf	I2C_Transmit@address
  5563  0EAE  306B               	movlw	(low (_ConfigReg| 0))& (0+255)
  5564  0EAF  00B1               	movwf	??_DAC_Initialize+1
  5565  0EB0  0831               	movf	??_DAC_Initialize+1,w
  5566  0EB1  00A9               	movwf	I2C_Transmit@pData
  5567  0EB2  01AA               	clrf	I2C_Transmit@size
  5568  0EB3  0AAA               	incf	I2C_Transmit@size,f
  5569  0EB4  3001               	movlw	1
  5570  0EB5  318F  272F         	fcall	_I2C_Transmit
  5571  0EB7  0008               	return
  5572  0EB8                     __end_of_DAC_Initialize:	
  5573                           
  5574                           	psect	text18
  5575  0F2F                     __ptext18:	
  5576 ;; *************** function _I2C_Transmit *****************
  5577 ;; Defined at:
  5578 ;;		line 23 in file "I2C_Common.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;  I2Cx            1    wreg     enum E3066
  5581 ;;  address         1    8[BANK0 ] unsigned char 
  5582 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  5583 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5584 ;;  size            1   10[BANK0 ] unsigned char 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  I2Cx            1   14[BANK0 ] enum E3066
  5587 ;;  result          1   15[BANK0 ] char 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  1    wreg      char 
  5590 ;; Registers used:
  5591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5597 ;;      Params:         0       3       0       0       0       0
  5598 ;;      Locals:         0       2       0       0       0       0
  5599 ;;      Temps:          0       3       0       0       0       0
  5600 ;;      Totals:         0       8       0       0       0       0
  5601 ;;Total ram usage:        8 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    4
  5604 ;; This function calls:
  5605 ;;		_I2C1_Transmit
  5606 ;;		_I2C2_Transmit
  5607 ;; This function is called by:
  5608 ;;		_DAC_Initialize
  5609 ;;		_DAC_WriteVoltage
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           
  5614                           ;psect for function _I2C_Transmit
  5615  0F2F                     _I2C_Transmit:	
  5616                           
  5617                           ;incstack = 0
  5618                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5619                           ;I2C_Transmit@I2Cx stored from wreg
  5620  0F2F  0020               	movlb	0	; select bank0
  5621  0F30  00AE               	movwf	I2C_Transmit@I2Cx
  5622                           
  5623                           ;I2C_Common.c: 25: int8_t result;
  5624                           ;I2C_Common.c: 27: switch(I2Cx)
  5625  0F31  2F50               	goto	l3908
  5626  0F32                     l3902:	
  5627                           ;I2C_Common.c: 28: {
  5628                           ;I2C_Common.c: 29: case I2C1_MODULE:
  5629                           
  5630                           
  5631                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  5632  0F32  0829               	movf	I2C_Transmit@pData,w
  5633  0F33  00AB               	movwf	??_I2C_Transmit
  5634  0F34  082B               	movf	??_I2C_Transmit,w
  5635  0F35  00A0               	movwf	I2C1_Transmit@pData
  5636  0F36  082A               	movf	I2C_Transmit@size,w
  5637  0F37  00AC               	movwf	??_I2C_Transmit+1
  5638  0F38  082C               	movf	??_I2C_Transmit+1,w
  5639  0F39  00A1               	movwf	I2C1_Transmit@size
  5640  0F3A  0828               	movf	I2C_Transmit@address,w
  5641  0F3B  3185  2515  318F   	fcall	_I2C1_Transmit
  5642  0F3E  2F4B               	goto	L8
  5643  0F3F                     l3904:	
  5644                           ;I2C_Common.c: 33: case I2C2_MODULE:
  5645                           
  5646                           ;I2C_Common.c: 31: break;
  5647                           
  5648                           
  5649                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  5650  0F3F  0829               	movf	I2C_Transmit@pData,w
  5651  0F40  00AB               	movwf	??_I2C_Transmit
  5652  0F41  082B               	movf	??_I2C_Transmit,w
  5653  0F42  00A0               	movwf	I2C2_Transmit@pData
  5654  0F43  082A               	movf	I2C_Transmit@size,w
  5655  0F44  00AC               	movwf	??_I2C_Transmit+1
  5656  0F45  082C               	movf	??_I2C_Transmit+1,w
  5657  0F46  00A1               	movwf	I2C2_Transmit@size
  5658  0F47  0828               	movf	I2C_Transmit@address,w
  5659  0F48  3184  247D  318F   	fcall	_I2C2_Transmit
  5660  0F4B                     L8:	
  5661  0F4B  0020               	movlb	0	; select bank0
  5662  0F4C  00AD               	movwf	??_I2C_Transmit+2
  5663  0F4D  082D               	movf	??_I2C_Transmit+2,w
  5664  0F4E  00AF               	movwf	I2C_Transmit@result
  5665                           
  5666                           ;I2C_Common.c: 36: }
  5667                           
  5668                           ;I2C_Common.c: 35: break;
  5669  0F4F  2F58               	goto	l3910
  5670  0F50                     l3908:	
  5671  0F50  082E               	movf	I2C_Transmit@I2Cx,w
  5672                           
  5673                           ; Switch size 1, requested type "space"
  5674                           ; Number of cases is 2, Range of values is 0 to 1
  5675                           ; switch strategies available:
  5676                           ; Name         Instructions Cycles
  5677                           ; simple_byte            7     4 (average)
  5678                           ; direct_byte           10     6 (fixed)
  5679                           ; jumptable            260     6 (fixed)
  5680                           ;	Chosen strategy is simple_byte
  5681  0F51  3A00               	xorlw	0	; case 0
  5682  0F52  1903               	skipnz
  5683  0F53  2F32               	goto	l3902
  5684  0F54  3A01               	xorlw	1	; case 1
  5685  0F55  1903               	skipnz
  5686  0F56  2F3F               	goto	l3904
  5687  0F57  2F58               	goto	l3910
  5688  0F58                     l3910:	
  5689                           
  5690                           ;I2C_Common.c: 37: return result;
  5691  0F58  082F               	movf	I2C_Transmit@result,w
  5692  0F59  0008               	return
  5693  0F5A                     __end_of_I2C_Transmit:	
  5694                           
  5695                           	psect	text19
  5696  047D                     __ptext19:	
  5697 ;; *************** function _I2C2_Transmit *****************
  5698 ;; Defined at:
  5699 ;;		line 52 in file "I2C2.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  address         1    wreg     unsigned char 
  5702 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  5703 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5704 ;;  size            1    1[BANK0 ] unsigned char 
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;  address         1    4[BANK0 ] unsigned char 
  5707 ;;  i               1    6[BANK0 ] unsigned char 
  5708 ;;  i               1    5[BANK0 ] unsigned char 
  5709 ;;  result          1    7[BANK0 ] char 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      char 
  5712 ;; Registers used:
  5713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5719 ;;      Params:         0       2       0       0       0       0
  5720 ;;      Locals:         0       4       0       0       0       0
  5721 ;;      Temps:          0       2       0       0       0       0
  5722 ;;      Totals:         0       8       0       0       0       0
  5723 ;;Total ram usage:        8 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    3
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		_I2C_Transmit
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           
  5734                           ;psect for function _I2C2_Transmit
  5735  047D                     _I2C2_Transmit:	
  5736                           
  5737                           ;incstack = 0
  5738                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  5739                           ;I2C2_Transmit@address stored from wreg
  5740  047D  0020               	movlb	0	; select bank0
  5741  047E  00A4               	movwf	I2C2_Transmit@address
  5742                           
  5743                           ;I2C2.c: 54: int8_t result = 0;
  5744  047F  01A7               	clrf	I2C2_Transmit@result
  5745                           
  5746                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  5747  0480  2D09               	goto	l3818
  5748  0481                     l3774:	
  5749                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5750                           
  5751                           ;I2C2.c: 57: {
  5752                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  5753                           
  5754  0481  3005               	movlw	5
  5755  0482  0024               	movlb	4	; select bank4
  5756  0483  051C               	andwf	28,w	;volatile
  5757  0484  0020               	movlb	0	; select bank0
  5758  0485  00A2               	movwf	??_I2C2_Transmit
  5759  0486  0024               	movlb	4	; select bank4
  5760  0487  081E               	movf	30,w	;volatile
  5761  0488  391F               	andlw	31
  5762  0489  0020               	movlb	0	; select bank0
  5763  048A  0422               	iorwf	??_I2C2_Transmit,w
  5764  048B  1D03               	btfss	3,2
  5765  048C  2C81               	goto	l3774
  5766                           
  5767                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  5768  048D  0024               	movlb	4	; select bank4
  5769  048E  141E               	bsf	30,0	;volatile
  5770  048F                     l3776:	
  5771                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5772                           
  5773  048F  3005               	movlw	5
  5774  0490  0024               	movlb	4	; select bank4
  5775  0491  051C               	andwf	28,w	;volatile
  5776  0492  0020               	movlb	0	; select bank0
  5777  0493  00A2               	movwf	??_I2C2_Transmit
  5778  0494  0024               	movlb	4	; select bank4
  5779  0495  081E               	movf	30,w	;volatile
  5780  0496  391F               	andlw	31
  5781  0497  0020               	movlb	0	; select bank0
  5782  0498  0422               	iorwf	??_I2C2_Transmit,w
  5783  0499  1D03               	btfss	3,2
  5784  049A  2C8F               	goto	l3776
  5785                           
  5786                           ;I2C2.c: 63: SSP2BUF = address << 1;
  5787  049B  3524               	lslf	I2C2_Transmit@address,w
  5788  049C  0024               	movlb	4	; select bank4
  5789  049D  0099               	movwf	25	;volatile
  5790  049E                     l228:	
  5791                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  5792                           
  5793  049E  191C               	btfsc	28,2	;volatile
  5794  049F  2C9E               	goto	l228
  5795                           
  5796                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  5797  04A0  3000               	movlw	0
  5798  04A1  1B1E               	btfsc	30,6	;volatile
  5799  04A2  3001               	movlw	1
  5800  04A3  0020               	movlb	0	; select bank0
  5801  04A4  00A7               	movwf	I2C2_Transmit@result
  5802                           
  5803                           ;I2C2.c: 67: if (!result)
  5804  04A5  0827               	movf	I2C2_Transmit@result,w
  5805  04A6  1D03               	btfss	3,2
  5806  04A7  2CD5               	goto	l3800
  5807                           
  5808                           ;I2C2.c: 68: {
  5809                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  5810  04A8  01A5               	clrf	I2C2_Transmit@i
  5811  04A9  2CAE               	goto	l3798
  5812  04AA                     l3796:	
  5813                           ;I2C2.c: 79: break;
  5814                           
  5815  04AA  3001               	movlw	1
  5816  04AB  00A2               	movwf	??_I2C2_Transmit
  5817  04AC  0822               	movf	??_I2C2_Transmit,w
  5818  04AD  07A5               	addwf	I2C2_Transmit@i,f
  5819  04AE                     l3798:	
  5820  04AE  0821               	movf	I2C2_Transmit@size,w
  5821  04AF  0225               	subwf	I2C2_Transmit@i,w
  5822  04B0  1803               	btfsc	3,0
  5823  04B1  2CD5               	goto	l3800
  5824  04B2                     l3786:	
  5825                           ;I2C2.c: 70: {
  5826                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5827                           
  5828  04B2  3005               	movlw	5
  5829  04B3  0024               	movlb	4	; select bank4
  5830  04B4  051C               	andwf	28,w	;volatile
  5831  04B5  0020               	movlb	0	; select bank0
  5832  04B6  00A2               	movwf	??_I2C2_Transmit
  5833  04B7  0024               	movlb	4	; select bank4
  5834  04B8  081E               	movf	30,w	;volatile
  5835  04B9  391F               	andlw	31
  5836  04BA  0020               	movlb	0	; select bank0
  5837  04BB  0422               	iorwf	??_I2C2_Transmit,w
  5838  04BC  1D03               	btfss	3,2
  5839  04BD  2CB2               	goto	l3786
  5840                           
  5841                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  5842  04BE  0825               	movf	I2C2_Transmit@i,w
  5843  04BF  0720               	addwf	I2C2_Transmit@pData,w
  5844  04C0  00A2               	movwf	??_I2C2_Transmit
  5845  04C1  0822               	movf	??_I2C2_Transmit,w
  5846  04C2  0086               	movwf	6
  5847  04C3  0187               	clrf	7
  5848  04C4  0801               	movf	1,w
  5849  04C5  0024               	movlb	4	; select bank4
  5850  04C6  0099               	movwf	25	;volatile
  5851  04C7                     l237:	
  5852                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  5853                           
  5854  04C7  191C               	btfsc	28,2	;volatile
  5855  04C8  2CC7               	goto	l237
  5856                           
  5857                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  5858  04C9  3000               	movlw	0
  5859  04CA  1B1E               	btfsc	30,6	;volatile
  5860  04CB  3001               	movlw	1
  5861  04CC  0020               	movlb	0	; select bank0
  5862  04CD  00A7               	movwf	I2C2_Transmit@result
  5863                           
  5864                           ;I2C2.c: 76: if (result)
  5865  04CE  0827               	movf	I2C2_Transmit@result,w
  5866  04CF  1903               	btfsc	3,2
  5867  04D0  2CAA               	goto	l3796
  5868                           
  5869                           ;I2C2.c: 77: {
  5870                           ;I2C2.c: 78: result = 2;
  5871  04D1  3002               	movlw	2
  5872  04D2  00A2               	movwf	??_I2C2_Transmit
  5873  04D3  0822               	movf	??_I2C2_Transmit,w
  5874  04D4  00A7               	movwf	I2C2_Transmit@result
  5875  04D5                     l3800:	
  5876                           ;I2C2.c: 80: }
  5877                           ;I2C2.c: 81: }
  5878                           ;I2C2.c: 82: }
  5879                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5880                           
  5881  04D5  3005               	movlw	5
  5882  04D6  0024               	movlb	4	; select bank4
  5883  04D7  051C               	andwf	28,w	;volatile
  5884  04D8  0020               	movlb	0	; select bank0
  5885  04D9  00A2               	movwf	??_I2C2_Transmit
  5886  04DA  0024               	movlb	4	; select bank4
  5887  04DB  081E               	movf	30,w	;volatile
  5888  04DC  391F               	andlw	31
  5889  04DD  0020               	movlb	0	; select bank0
  5890  04DE  0422               	iorwf	??_I2C2_Transmit,w
  5891  04DF  1D03               	btfss	3,2
  5892  04E0  2CD5               	goto	l3800
  5893                           
  5894                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  5895  04E1  0024               	movlb	4	; select bank4
  5896  04E2  151E               	bsf	30,2	;volatile
  5897                           
  5898                           ;I2C2.c: 86: break;
  5899  04E3  2D12               	goto	l3820
  5900  04E4                     l246:	
  5901                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  5902                           
  5903                           
  5904                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  5905  04E4  0024               	movlb	4	; select bank4
  5906  04E5  1D9C               	btfss	28,3	;volatile
  5907  04E6  1E1C               	btfss	28,4	;volatile
  5908  04E7  2D06               	goto	l3814
  5909                           
  5910                           ;I2C2.c: 90: {
  5911                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  5912  04E8  0020               	movlb	0	; select bank0
  5913  04E9  01A6               	clrf	I2C2_Transmit@i_316
  5914  04EA                     l3810:	
  5915  04EA  0821               	movf	I2C2_Transmit@size,w
  5916  04EB  0226               	subwf	I2C2_Transmit@i_316,w
  5917  04EC  1803               	btfsc	3,0
  5918  04ED  2D01               	goto	l3812
  5919                           
  5920                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  5921  04EE  0826               	movf	I2C2_Transmit@i_316,w
  5922  04EF  0720               	addwf	I2C2_Transmit@pData,w
  5923  04F0  00A2               	movwf	??_I2C2_Transmit
  5924  04F1  0822               	movf	??_I2C2_Transmit,w
  5925  04F2  0086               	movwf	6
  5926  04F3  0187               	clrf	7
  5927  04F4  0801               	movf	1,w
  5928  04F5  00A3               	movwf	??_I2C2_Transmit+1
  5929  04F6  0826               	movf	I2C2_Transmit@i_316,w
  5930  04F7  3EAB               	addlw	(low (_I2C2_Config| 0))& (0+255)
  5931  04F8  0086               	movwf	6
  5932  04F9  0187               	clrf	7
  5933  04FA  0823               	movf	??_I2C2_Transmit+1,w
  5934  04FB  0081               	movwf	1
  5935  04FC  3001               	movlw	1
  5936  04FD  00A2               	movwf	??_I2C2_Transmit
  5937  04FE  0822               	movf	??_I2C2_Transmit,w
  5938  04FF  07A6               	addwf	I2C2_Transmit@i_316,f
  5939  0500  2CEA               	goto	l3810
  5940  0501                     l3812:	
  5941                           
  5942                           ;I2C2.c: 93: result = size;
  5943  0501  0821               	movf	I2C2_Transmit@size,w
  5944  0502  00A2               	movwf	??_I2C2_Transmit
  5945  0503  0822               	movf	??_I2C2_Transmit,w
  5946  0504  00A7               	movwf	I2C2_Transmit@result
  5947                           
  5948                           ;I2C2.c: 94: }
  5949  0505  2D12               	goto	l3820
  5950  0506                     l3814:	
  5951                           
  5952                           ;I2C2.c: 95: else
  5953                           ;I2C2.c: 96: result = 0;
  5954  0506  0020               	movlb	0	; select bank0
  5955  0507  01A7               	clrf	I2C2_Transmit@result
  5956                           
  5957                           ;I2C2.c: 98: }
  5958                           
  5959                           ;I2C2.c: 97: break;
  5960  0508  2D12               	goto	l3820
  5961  0509                     l3818:	
  5962  0509  0021               	movlb	1	; select bank1
  5963  050A  083D               	movf	(_I2C2_Config^(0+128)+18),w
  5964                           
  5965                           ; Switch size 1, requested type "space"
  5966                           ; Number of cases is 2, Range of values is 0 to 1
  5967                           ; switch strategies available:
  5968                           ; Name         Instructions Cycles
  5969                           ; simple_byte            7     4 (average)
  5970                           ; direct_byte           10     6 (fixed)
  5971                           ; jumptable            260     6 (fixed)
  5972                           ;	Chosen strategy is simple_byte
  5973  050B  3A00               	xorlw	0	; case 0
  5974  050C  1903               	skipnz
  5975  050D  2C81               	goto	l3774
  5976  050E  3A01               	xorlw	1	; case 1
  5977  050F  1903               	skipnz
  5978  0510  2CE4               	goto	l246
  5979  0511  2D12               	goto	l3820
  5980  0512                     l3820:	
  5981                           
  5982                           ;I2C2.c: 100: return result;
  5983  0512  0020               	movlb	0	; select bank0
  5984  0513  0827               	movf	I2C2_Transmit@result,w
  5985  0514  0008               	return
  5986  0515                     __end_of_I2C2_Transmit:	
  5987                           
  5988                           	psect	text20
  5989  0515                     __ptext20:	
  5990 ;; *************** function _I2C1_Transmit *****************
  5991 ;; Defined at:
  5992 ;;		line 52 in file "I2C1.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  address         1    wreg     unsigned char 
  5995 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  5996 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5997 ;;  size            1    1[BANK0 ] unsigned char 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  address         1    4[BANK0 ] unsigned char 
  6000 ;;  i               1    6[BANK0 ] unsigned char 
  6001 ;;  i               1    5[BANK0 ] unsigned char 
  6002 ;;  result          1    7[BANK0 ] char 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  1    wreg      char 
  6005 ;; Registers used:
  6006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6012 ;;      Params:         0       2       0       0       0       0
  6013 ;;      Locals:         0       4       0       0       0       0
  6014 ;;      Temps:          0       2       0       0       0       0
  6015 ;;      Totals:         0       8       0       0       0       0
  6016 ;;Total ram usage:        8 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; Hardware stack levels required when called:    3
  6019 ;; This function calls:
  6020 ;;		Nothing
  6021 ;; This function is called by:
  6022 ;;		_I2C_Transmit
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           
  6027                           ;psect for function _I2C1_Transmit
  6028  0515                     _I2C1_Transmit:	
  6029                           
  6030                           ;incstack = 0
  6031                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  6032                           ;I2C1_Transmit@address stored from wreg
  6033  0515  0020               	movlb	0	; select bank0
  6034  0516  00A4               	movwf	I2C1_Transmit@address
  6035                           
  6036                           ;I2C1.c: 54: int8_t result;
  6037                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  6038  0517  2DA0               	goto	l3732
  6039  0518                     l3688:	
  6040                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6041                           
  6042                           ;I2C1.c: 57: {
  6043                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  6044                           
  6045  0518  3005               	movlw	5
  6046  0519  0024               	movlb	4	; select bank4
  6047  051A  0514               	andwf	20,w	;volatile
  6048  051B  0020               	movlb	0	; select bank0
  6049  051C  00A2               	movwf	??_I2C1_Transmit
  6050  051D  0024               	movlb	4	; select bank4
  6051  051E  0816               	movf	22,w	;volatile
  6052  051F  391F               	andlw	31
  6053  0520  0020               	movlb	0	; select bank0
  6054  0521  0422               	iorwf	??_I2C1_Transmit,w
  6055  0522  1D03               	btfss	3,2
  6056  0523  2D18               	goto	l3688
  6057                           
  6058                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  6059  0524  0024               	movlb	4	; select bank4
  6060  0525  1416               	bsf	22,0	;volatile
  6061  0526                     l3690:	
  6062                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6063                           
  6064  0526  3005               	movlw	5
  6065  0527  0024               	movlb	4	; select bank4
  6066  0528  0514               	andwf	20,w	;volatile
  6067  0529  0020               	movlb	0	; select bank0
  6068  052A  00A2               	movwf	??_I2C1_Transmit
  6069  052B  0024               	movlb	4	; select bank4
  6070  052C  0816               	movf	22,w	;volatile
  6071  052D  391F               	andlw	31
  6072  052E  0020               	movlb	0	; select bank0
  6073  052F  0422               	iorwf	??_I2C1_Transmit,w
  6074  0530  1D03               	btfss	3,2
  6075  0531  2D26               	goto	l3690
  6076                           
  6077                           ;I2C1.c: 63: SSP1BUF = address << 1;
  6078  0532  3524               	lslf	I2C1_Transmit@address,w
  6079  0533  0024               	movlb	4	; select bank4
  6080  0534  0091               	movwf	17	;volatile
  6081  0535                     l91:	
  6082                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  6083                           
  6084  0535  1914               	btfsc	20,2	;volatile
  6085  0536  2D35               	goto	l91
  6086                           
  6087                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  6088  0537  3000               	movlw	0
  6089  0538  1B16               	btfsc	22,6	;volatile
  6090  0539  3001               	movlw	1
  6091  053A  0020               	movlb	0	; select bank0
  6092  053B  00A7               	movwf	I2C1_Transmit@result
  6093                           
  6094                           ;I2C1.c: 67: if (!result)
  6095  053C  0827               	movf	I2C1_Transmit@result,w
  6096  053D  1D03               	btfss	3,2
  6097  053E  2D6C               	goto	l3714
  6098                           
  6099                           ;I2C1.c: 68: {
  6100                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  6101  053F  01A5               	clrf	I2C1_Transmit@i
  6102  0540  2D45               	goto	l3712
  6103  0541                     l3710:	
  6104                           ;I2C1.c: 79: break;
  6105                           
  6106  0541  3001               	movlw	1
  6107  0542  00A2               	movwf	??_I2C1_Transmit
  6108  0543  0822               	movf	??_I2C1_Transmit,w
  6109  0544  07A5               	addwf	I2C1_Transmit@i,f
  6110  0545                     l3712:	
  6111  0545  0821               	movf	I2C1_Transmit@size,w
  6112  0546  0225               	subwf	I2C1_Transmit@i,w
  6113  0547  1803               	btfsc	3,0
  6114  0548  2D6C               	goto	l3714
  6115  0549                     l3700:	
  6116                           ;I2C1.c: 70: {
  6117                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6118                           
  6119  0549  3005               	movlw	5
  6120  054A  0024               	movlb	4	; select bank4
  6121  054B  0514               	andwf	20,w	;volatile
  6122  054C  0020               	movlb	0	; select bank0
  6123  054D  00A2               	movwf	??_I2C1_Transmit
  6124  054E  0024               	movlb	4	; select bank4
  6125  054F  0816               	movf	22,w	;volatile
  6126  0550  391F               	andlw	31
  6127  0551  0020               	movlb	0	; select bank0
  6128  0552  0422               	iorwf	??_I2C1_Transmit,w
  6129  0553  1D03               	btfss	3,2
  6130  0554  2D49               	goto	l3700
  6131                           
  6132                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  6133  0555  0825               	movf	I2C1_Transmit@i,w
  6134  0556  0720               	addwf	I2C1_Transmit@pData,w
  6135  0557  00A2               	movwf	??_I2C1_Transmit
  6136  0558  0822               	movf	??_I2C1_Transmit,w
  6137  0559  0086               	movwf	6
  6138  055A  0187               	clrf	7
  6139  055B  0801               	movf	1,w
  6140  055C  0024               	movlb	4	; select bank4
  6141  055D  0091               	movwf	17	;volatile
  6142  055E                     l100:	
  6143                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  6144                           
  6145  055E  1914               	btfsc	20,2	;volatile
  6146  055F  2D5E               	goto	l100
  6147                           
  6148                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  6149  0560  3000               	movlw	0
  6150  0561  1B16               	btfsc	22,6	;volatile
  6151  0562  3001               	movlw	1
  6152  0563  0020               	movlb	0	; select bank0
  6153  0564  00A7               	movwf	I2C1_Transmit@result
  6154                           
  6155                           ;I2C1.c: 76: if (result)
  6156  0565  0827               	movf	I2C1_Transmit@result,w
  6157  0566  1903               	btfsc	3,2
  6158  0567  2D41               	goto	l3710
  6159                           
  6160                           ;I2C1.c: 77: {
  6161                           ;I2C1.c: 78: result = 2;
  6162  0568  3002               	movlw	2
  6163  0569  00A2               	movwf	??_I2C1_Transmit
  6164  056A  0822               	movf	??_I2C1_Transmit,w
  6165  056B  00A7               	movwf	I2C1_Transmit@result
  6166  056C                     l3714:	
  6167                           ;I2C1.c: 80: }
  6168                           ;I2C1.c: 81: }
  6169                           ;I2C1.c: 82: }
  6170                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6171                           
  6172  056C  3005               	movlw	5
  6173  056D  0024               	movlb	4	; select bank4
  6174  056E  0514               	andwf	20,w	;volatile
  6175  056F  0020               	movlb	0	; select bank0
  6176  0570  00A2               	movwf	??_I2C1_Transmit
  6177  0571  0024               	movlb	4	; select bank4
  6178  0572  0816               	movf	22,w	;volatile
  6179  0573  391F               	andlw	31
  6180  0574  0020               	movlb	0	; select bank0
  6181  0575  0422               	iorwf	??_I2C1_Transmit,w
  6182  0576  1D03               	btfss	3,2
  6183  0577  2D6C               	goto	l3714
  6184                           
  6185                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  6186  0578  0024               	movlb	4	; select bank4
  6187  0579  1516               	bsf	22,2	;volatile
  6188                           
  6189                           ;I2C1.c: 86: break;
  6190  057A  2DA9               	goto	l3734
  6191  057B                     l109:	
  6192                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  6193                           
  6194                           
  6195                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  6196  057B  0024               	movlb	4	; select bank4
  6197  057C  1D94               	btfss	20,3	;volatile
  6198  057D  1E14               	btfss	20,4	;volatile
  6199  057E  2D9D               	goto	l3728
  6200                           
  6201                           ;I2C1.c: 90: {
  6202                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  6203  057F  0020               	movlb	0	; select bank0
  6204  0580  01A6               	clrf	I2C1_Transmit@i_172
  6205  0581                     l3724:	
  6206  0581  0821               	movf	I2C1_Transmit@size,w
  6207  0582  0226               	subwf	I2C1_Transmit@i_172,w
  6208  0583  1803               	btfsc	3,0
  6209  0584  2D98               	goto	l3726
  6210                           
  6211                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  6212  0585  0826               	movf	I2C1_Transmit@i_172,w
  6213  0586  0720               	addwf	I2C1_Transmit@pData,w
  6214  0587  00A2               	movwf	??_I2C1_Transmit
  6215  0588  0822               	movf	??_I2C1_Transmit,w
  6216  0589  0086               	movwf	6
  6217  058A  0187               	clrf	7
  6218  058B  0801               	movf	1,w
  6219  058C  00A3               	movwf	??_I2C1_Transmit+1
  6220  058D  0826               	movf	I2C1_Transmit@i_172,w
  6221  058E  3EBE               	addlw	(low (_I2C1_Config| 0))& (0+255)
  6222  058F  0086               	movwf	6
  6223  0590  0187               	clrf	7
  6224  0591  0823               	movf	??_I2C1_Transmit+1,w
  6225  0592  0081               	movwf	1
  6226  0593  3001               	movlw	1
  6227  0594  00A2               	movwf	??_I2C1_Transmit
  6228  0595  0822               	movf	??_I2C1_Transmit,w
  6229  0596  07A6               	addwf	I2C1_Transmit@i_172,f
  6230  0597  2D81               	goto	l3724
  6231  0598                     l3726:	
  6232                           
  6233                           ;I2C1.c: 93: result = size;
  6234  0598  0821               	movf	I2C1_Transmit@size,w
  6235  0599  00A2               	movwf	??_I2C1_Transmit
  6236  059A  0822               	movf	??_I2C1_Transmit,w
  6237  059B  00A7               	movwf	I2C1_Transmit@result
  6238                           
  6239                           ;I2C1.c: 94: }
  6240  059C  2DA9               	goto	l3734
  6241  059D                     l3728:	
  6242                           
  6243                           ;I2C1.c: 95: else
  6244                           ;I2C1.c: 96: result = 0;
  6245  059D  0020               	movlb	0	; select bank0
  6246  059E  01A7               	clrf	I2C1_Transmit@result
  6247                           
  6248                           ;I2C1.c: 98: }
  6249                           
  6250                           ;I2C1.c: 97: break;
  6251  059F  2DA9               	goto	l3734
  6252  05A0                     l3732:	
  6253  05A0  0021               	movlb	1	; select bank1
  6254  05A1  0850               	movf	(_I2C1_Config^(0+128)+18),w
  6255                           
  6256                           ; Switch size 1, requested type "space"
  6257                           ; Number of cases is 2, Range of values is 0 to 1
  6258                           ; switch strategies available:
  6259                           ; Name         Instructions Cycles
  6260                           ; simple_byte            7     4 (average)
  6261                           ; direct_byte           10     6 (fixed)
  6262                           ; jumptable            260     6 (fixed)
  6263                           ;	Chosen strategy is simple_byte
  6264  05A2  3A00               	xorlw	0	; case 0
  6265  05A3  1903               	skipnz
  6266  05A4  2D18               	goto	l3688
  6267  05A5  3A01               	xorlw	1	; case 1
  6268  05A6  1903               	skipnz
  6269  05A7  2D7B               	goto	l109
  6270  05A8  2DA9               	goto	l3734
  6271  05A9                     l3734:	
  6272                           
  6273                           ;I2C1.c: 100: return result;
  6274  05A9  0020               	movlb	0	; select bank0
  6275  05AA  0827               	movf	I2C1_Transmit@result,w
  6276  05AB  0008               	return
  6277  05AC                     __end_of_I2C1_Transmit:	
  6278                           
  6279                           	psect	text21
  6280  0F05                     __ptext21:	
  6281 ;; *************** function _I2C_Init *****************
  6282 ;; Defined at:
  6283 ;;		line 6 in file "I2C_Common.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  I2Cx            1    wreg     enum E3066
  6286 ;;  address         1    5[BANK0 ] unsigned char 
  6287 ;;  mode            1    6[BANK0 ] enum E3057
  6288 ;;  Speed           1    7[BANK0 ] enum E3061
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  I2Cx            1   10[BANK0 ] enum E3066
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  1    wreg      void 
  6293 ;; Registers used:
  6294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6300 ;;      Params:         0       3       0       0       0       0
  6301 ;;      Locals:         0       1       0       0       0       0
  6302 ;;      Temps:          0       2       0       0       0       0
  6303 ;;      Totals:         0       6       0       0       0       0
  6304 ;;Total ram usage:        6 bytes
  6305 ;; Hardware stack levels used:    1
  6306 ;; Hardware stack levels required when called:    5
  6307 ;; This function calls:
  6308 ;;		_I2C1_Setting
  6309 ;;		_I2C2_Setting
  6310 ;; This function is called by:
  6311 ;;		_DAC_Initialize
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           
  6316                           ;psect for function _I2C_Init
  6317  0F05                     _I2C_Init:	
  6318                           
  6319                           ;incstack = 0
  6320                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6321                           ;I2C_Init@I2Cx stored from wreg
  6322  0F05  0020               	movlb	0	; select bank0
  6323  0F06  00AA               	movwf	I2C_Init@I2Cx
  6324                           
  6325                           ;I2C_Common.c: 8: switch(I2Cx)
  6326  0F07  2F23               	goto	l3898
  6327  0F08                     l3892:	
  6328                           ;I2C_Common.c: 9: {
  6329                           ;I2C_Common.c: 10: case I2C1_MODULE:
  6330                           
  6331                           
  6332                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  6333  0F08  0826               	movf	I2C_Init@mode,w
  6334  0F09  00A8               	movwf	??_I2C_Init
  6335  0F0A  0828               	movf	??_I2C_Init,w
  6336  0F0B  00A1               	movwf	I2C1_Setting@mode
  6337  0F0C  0827               	movf	I2C_Init@Speed,w
  6338  0F0D  00A9               	movwf	??_I2C_Init+1
  6339  0F0E  0829               	movf	??_I2C_Init+1,w
  6340  0F0F  00A2               	movwf	I2C1_Setting@Speed
  6341  0F10  0825               	movf	I2C_Init@address,w
  6342  0F11  3187  275A  318F   	fcall	_I2C1_Setting
  6343                           
  6344                           ;I2C_Common.c: 12: break;
  6345  0F14  2F2C               	goto	l338
  6346  0F15                     l3894:	
  6347                           ;I2C_Common.c: 14: case I2C2_MODULE:
  6348                           
  6349                           
  6350                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  6351  0F15  0020               	movlb	0	; select bank0
  6352  0F16  0826               	movf	I2C_Init@mode,w
  6353  0F17  00A8               	movwf	??_I2C_Init
  6354  0F18  0828               	movf	??_I2C_Init,w
  6355  0F19  00A1               	movwf	I2C2_Setting@mode
  6356  0F1A  0827               	movf	I2C_Init@Speed,w
  6357  0F1B  00A9               	movwf	??_I2C_Init+1
  6358  0F1C  0829               	movf	??_I2C_Init+1,w
  6359  0F1D  00A2               	movwf	I2C2_Setting@Speed
  6360  0F1E  0825               	movf	I2C_Init@address,w
  6361  0F1F  3187  2716  318F   	fcall	_I2C2_Setting
  6362                           
  6363                           ;I2C_Common.c: 17: }
  6364                           
  6365                           ;I2C_Common.c: 16: break;
  6366  0F22  2F2C               	goto	l338
  6367  0F23                     l3898:	
  6368  0F23  0020               	movlb	0	; select bank0
  6369  0F24  082A               	movf	I2C_Init@I2Cx,w
  6370                           
  6371                           ; Switch size 1, requested type "space"
  6372                           ; Number of cases is 2, Range of values is 0 to 1
  6373                           ; switch strategies available:
  6374                           ; Name         Instructions Cycles
  6375                           ; simple_byte            7     4 (average)
  6376                           ; direct_byte           10     6 (fixed)
  6377                           ; jumptable            260     6 (fixed)
  6378                           ;	Chosen strategy is simple_byte
  6379  0F25  3A00               	xorlw	0	; case 0
  6380  0F26  1903               	skipnz
  6381  0F27  2F08               	goto	l3892
  6382  0F28  3A01               	xorlw	1	; case 1
  6383  0F29  1903               	skipnz
  6384  0F2A  2F15               	goto	l3894
  6385  0F2B  2F2C               	goto	l338
  6386  0F2C                     l338:	
  6387                           
  6388                           ;I2C_Common.c: 19: PEIE = 1;
  6389  0F2C  170B               	bsf	11,6	;volatile
  6390                           
  6391                           ;I2C_Common.c: 20: GIE = 1;
  6392  0F2D  178B               	bsf	11,7	;volatile
  6393  0F2E  0008               	return
  6394  0F2F                     __end_of_I2C_Init:	
  6395                           
  6396                           	psect	text22
  6397  0716                     __ptext22:	
  6398 ;; *************** function _I2C2_Setting *****************
  6399 ;; Defined at:
  6400 ;;		line 15 in file "I2C2.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  address         1    wreg     unsigned char 
  6403 ;;  mode            1    1[BANK0 ] enum E3057
  6404 ;;  Speed           1    2[BANK0 ] enum E3061
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;  address         1    4[BANK0 ] unsigned char 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6416 ;;      Params:         0       2       0       0       0       0
  6417 ;;      Locals:         0       1       0       0       0       0
  6418 ;;      Temps:          0       1       0       0       0       0
  6419 ;;      Totals:         0       4       0       0       0       0
  6420 ;;Total ram usage:        4 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    4
  6423 ;; This function calls:
  6424 ;;		_I2C2_PinInit
  6425 ;; This function is called by:
  6426 ;;		_I2C_Init
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           
  6431                           ;psect for function _I2C2_Setting
  6432  0716                     _I2C2_Setting:	
  6433                           
  6434                           ;incstack = 0
  6435                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6436                           ;I2C2_Setting@address stored from wreg
  6437  0716  0020               	movlb	0	; select bank0
  6438  0717  00A4               	movwf	I2C2_Setting@address
  6439                           
  6440                           ;I2C2.c: 17: I2C2_PinInit();
  6441  0718  318D  2590  3187   	fcall	_I2C2_PinInit
  6442                           
  6443                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  6444  071B  0020               	movlb	0	; select bank0
  6445  071C  0821               	movf	I2C2_Setting@mode,w
  6446  071D  00A3               	movwf	??_I2C2_Setting
  6447  071E  0823               	movf	??_I2C2_Setting,w
  6448  071F  0021               	movlb	1	; select bank1
  6449  0720  00BD               	movwf	(_I2C2_Config^(0+128)+18)
  6450                           
  6451                           ;I2C2.c: 20: switch(mode)
  6452  0721  2F4A               	goto	l3770
  6453  0722                     l211:	
  6454                           ;I2C2.c: 21: {
  6455                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  6456                           
  6457                           
  6458                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  6459  0722  0024               	movlb	4	; select bank4
  6460  0723  159D               	bsf	29,3	;volatile
  6461                           
  6462                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6463  0724  0020               	movlb	0	; select bank0
  6464  0725  0822               	movf	I2C2_Setting@Speed,w
  6465  0726  1D03               	btfss	3,2
  6466  0727  2F2C               	goto	l3748
  6467                           
  6468                           ;I2C2.c: 25: {
  6469                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  6470  0728  0024               	movlb	4	; select bank4
  6471  0729  179C               	bsf	28,7	;volatile
  6472                           
  6473                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  6474  072A  304F               	movlw	79
  6475  072B  2F36               	goto	L9
  6476  072C                     l3748:	
  6477                           ;I2C2.c: 28: }
  6478                           
  6479                           
  6480                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6481  072C  0020               	movlb	0	; select bank0
  6482  072D  0322               	decf	I2C2_Setting@Speed,w
  6483  072E  1D03               	btfss	3,2
  6484  072F  2F37               	goto	l3754
  6485                           
  6486                           ;I2C2.c: 30: {
  6487                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  6488  0730  307F               	movlw	127
  6489  0731  00A3               	movwf	??_I2C2_Setting
  6490  0732  0823               	movf	??_I2C2_Setting,w
  6491  0733  0024               	movlb	4	; select bank4
  6492  0734  059C               	andwf	28,f	;volatile
  6493                           
  6494                           ;I2C2.c: 32: SSP2ADD = 0x13;
  6495  0735  3013               	movlw	19
  6496  0736                     L9:	
  6497  0736  009A               	movwf	26	;volatile
  6498  0737                     l3754:	
  6499                           
  6500                           ;I2C2.c: 33: }
  6501                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  6502  0737  0024               	movlb	4	; select bank4
  6503  0738  2F48               	goto	l3766
  6504  0739                     l3756:	
  6505                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  6506                           
  6507                           ;I2C2.c: 35: break;
  6508                           
  6509                           
  6510                           ;I2C2.c: 38: SSP2STAT = 0x00;
  6511  0739  0024               	movlb	4	; select bank4
  6512  073A  019C               	clrf	28	;volatile
  6513                           
  6514                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  6515  073B  3006               	movlw	6
  6516  073C  0020               	movlb	0	; select bank0
  6517  073D  00A3               	movwf	??_I2C2_Setting
  6518  073E  0823               	movf	??_I2C2_Setting,w
  6519  073F  0024               	movlb	4	; select bank4
  6520  0740  049D               	iorwf	29,f	;volatile
  6521                           
  6522                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  6523  0741  141E               	bsf	30,0	;volatile
  6524                           
  6525                           ;I2C2.c: 41: SSP2ADD = address << 1;
  6526  0742  0020               	movlb	0	; select bank0
  6527  0743  3524               	lslf	I2C2_Setting@address,w
  6528  0744  0024               	movlb	4	; select bank4
  6529  0745  009A               	movwf	26	;volatile
  6530                           
  6531                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  6532  0746  30FE               	movlw	254
  6533  0747  009B               	movwf	27	;volatile
  6534  0748                     l3766:	
  6535                           
  6536                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  6537  0748  169D               	bsf	29,5	;volatile
  6538                           
  6539                           ;I2C2.c: 45: }
  6540                           
  6541                           ;I2C2.c: 44: break;
  6542  0749  2F53               	goto	l215
  6543  074A                     l3770:	
  6544  074A  0020               	movlb	0	; select bank0
  6545  074B  0821               	movf	I2C2_Setting@mode,w
  6546                           
  6547                           ; Switch size 1, requested type "space"
  6548                           ; Number of cases is 2, Range of values is 0 to 1
  6549                           ; switch strategies available:
  6550                           ; Name         Instructions Cycles
  6551                           ; simple_byte            7     4 (average)
  6552                           ; direct_byte           10     6 (fixed)
  6553                           ; jumptable            260     6 (fixed)
  6554                           ;	Chosen strategy is simple_byte
  6555  074C  3A00               	xorlw	0	; case 0
  6556  074D  1903               	skipnz
  6557  074E  2F22               	goto	l211
  6558  074F  3A01               	xorlw	1	; case 1
  6559  0750  1903               	skipnz
  6560  0751  2F39               	goto	l3756
  6561  0752  2F53               	goto	l215
  6562  0753                     l215:	
  6563                           
  6564                           ;I2C2.c: 46: SSP2IE = 1;
  6565  0753  0021               	movlb	1	; select bank1
  6566  0754  1414               	bsf	20,0	;volatile
  6567                           
  6568                           ;I2C2.c: 47: BCL2IE = 1;
  6569  0755  1494               	bsf	20,1	;volatile
  6570                           
  6571                           ;I2C2.c: 48: SSP2IF = 0;
  6572  0756  0020               	movlb	0	; select bank0
  6573  0757  1014               	bcf	20,0	;volatile
  6574                           
  6575                           ;I2C2.c: 49: BCL2IF = 0;
  6576  0758  1094               	bcf	20,1	;volatile
  6577  0759  0008               	return
  6578  075A                     __end_of_I2C2_Setting:	
  6579                           
  6580                           	psect	text23
  6581  0D90                     __ptext23:	
  6582 ;; *************** function _I2C2_PinInit *****************
  6583 ;; Defined at:
  6584 ;;		line 9 in file "I2C2.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;		None
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;		None
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1    wreg      void 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2, status,0
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6598 ;;      Params:         0       0       0       0       0       0
  6599 ;;      Locals:         0       0       0       0       0       0
  6600 ;;      Temps:          0       1       0       0       0       0
  6601 ;;      Totals:         0       1       0       0       0       0
  6602 ;;Total ram usage:        1 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    3
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_I2C2_Setting
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           
  6613                           ;psect for function _I2C2_PinInit
  6614  0D90                     _I2C2_PinInit:	
  6615                           
  6616                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  6617                           
  6618                           ;incstack = 0
  6619                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  6620  0D90  3024               	movlw	36
  6621  0D91  0020               	movlb	0	; select bank0
  6622  0D92  00A0               	movwf	??_I2C2_PinInit
  6623  0D93  0820               	movf	??_I2C2_PinInit,w
  6624  0D94  0021               	movlb	1	; select bank1
  6625  0D95  048D               	iorwf	13,f	;volatile
  6626                           
  6627                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  6628  0D96  30DB               	movlw	219
  6629  0D97  0020               	movlb	0	; select bank0
  6630  0D98  00A0               	movwf	??_I2C2_PinInit
  6631  0D99  0820               	movf	??_I2C2_PinInit,w
  6632  0D9A  0023               	movlb	3	; select bank3
  6633  0D9B  058D               	andwf	13,f	;volatile
  6634  0D9C  0008               	return
  6635  0D9D                     __end_of_I2C2_PinInit:	
  6636                           
  6637                           	psect	text24
  6638  075A                     __ptext24:	
  6639 ;; *************** function _I2C1_Setting *****************
  6640 ;; Defined at:
  6641 ;;		line 15 in file "I2C1.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  address         1    wreg     unsigned char 
  6644 ;;  mode            1    1[BANK0 ] enum E3057
  6645 ;;  Speed           1    2[BANK0 ] enum E3061
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;  address         1    4[BANK0 ] unsigned char 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      void 
  6650 ;; Registers used:
  6651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6657 ;;      Params:         0       2       0       0       0       0
  6658 ;;      Locals:         0       1       0       0       0       0
  6659 ;;      Temps:          0       1       0       0       0       0
  6660 ;;      Totals:         0       4       0       0       0       0
  6661 ;;Total ram usage:        4 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; Hardware stack levels required when called:    4
  6664 ;; This function calls:
  6665 ;;		_I2C1_PinInit
  6666 ;; This function is called by:
  6667 ;;		_I2C_Init
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           
  6672                           ;psect for function _I2C1_Setting
  6673  075A                     _I2C1_Setting:	
  6674                           
  6675                           ;incstack = 0
  6676                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6677                           ;I2C1_Setting@address stored from wreg
  6678  075A  0020               	movlb	0	; select bank0
  6679  075B  00A4               	movwf	I2C1_Setting@address
  6680                           
  6681                           ;I2C1.c: 17: I2C1_PinInit();
  6682  075C  318D  2583  3187   	fcall	_I2C1_PinInit
  6683                           
  6684                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  6685  075F  0020               	movlb	0	; select bank0
  6686  0760  0821               	movf	I2C1_Setting@mode,w
  6687  0761  00A3               	movwf	??_I2C1_Setting
  6688  0762  0823               	movf	??_I2C1_Setting,w
  6689  0763  0021               	movlb	1	; select bank1
  6690  0764  00D0               	movwf	(_I2C1_Config^(0+128)+18)
  6691                           
  6692                           ;I2C1.c: 20: switch(mode)
  6693  0765  2F8E               	goto	l3684
  6694  0766                     l74:	
  6695                           ;I2C1.c: 21: {
  6696                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  6697                           
  6698                           
  6699                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  6700  0766  0024               	movlb	4	; select bank4
  6701  0767  1595               	bsf	21,3	;volatile
  6702                           
  6703                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6704  0768  0020               	movlb	0	; select bank0
  6705  0769  0822               	movf	I2C1_Setting@Speed,w
  6706  076A  1D03               	btfss	3,2
  6707  076B  2F70               	goto	l3662
  6708                           
  6709                           ;I2C1.c: 25: {
  6710                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  6711  076C  0024               	movlb	4	; select bank4
  6712  076D  1794               	bsf	20,7	;volatile
  6713                           
  6714                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  6715  076E  304F               	movlw	79
  6716  076F  2F7A               	goto	L10
  6717  0770                     l3662:	
  6718                           ;I2C1.c: 28: }
  6719                           
  6720                           
  6721                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6722  0770  0020               	movlb	0	; select bank0
  6723  0771  0322               	decf	I2C1_Setting@Speed,w
  6724  0772  1D03               	btfss	3,2
  6725  0773  2F7B               	goto	l3668
  6726                           
  6727                           ;I2C1.c: 30: {
  6728                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  6729  0774  307F               	movlw	127
  6730  0775  00A3               	movwf	??_I2C1_Setting
  6731  0776  0823               	movf	??_I2C1_Setting,w
  6732  0777  0024               	movlb	4	; select bank4
  6733  0778  0594               	andwf	20,f	;volatile
  6734                           
  6735                           ;I2C1.c: 32: SSP1ADD = 0x13;
  6736  0779  3013               	movlw	19
  6737  077A                     L10:	
  6738  077A  0092               	movwf	18	;volatile
  6739  077B                     l3668:	
  6740                           
  6741                           ;I2C1.c: 33: }
  6742                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  6743  077B  0024               	movlb	4	; select bank4
  6744  077C  2F8C               	goto	l3680
  6745  077D                     l3670:	
  6746                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  6747                           
  6748                           ;I2C1.c: 35: break;
  6749                           
  6750                           
  6751                           ;I2C1.c: 38: SSP1STAT = 0x00;
  6752  077D  0024               	movlb	4	; select bank4
  6753  077E  0194               	clrf	20	;volatile
  6754                           
  6755                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  6756  077F  3006               	movlw	6
  6757  0780  0020               	movlb	0	; select bank0
  6758  0781  00A3               	movwf	??_I2C1_Setting
  6759  0782  0823               	movf	??_I2C1_Setting,w
  6760  0783  0024               	movlb	4	; select bank4
  6761  0784  0495               	iorwf	21,f	;volatile
  6762                           
  6763                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  6764  0785  1416               	bsf	22,0	;volatile
  6765                           
  6766                           ;I2C1.c: 41: SSP1ADD = address << 1;
  6767  0786  0020               	movlb	0	; select bank0
  6768  0787  3524               	lslf	I2C1_Setting@address,w
  6769  0788  0024               	movlb	4	; select bank4
  6770  0789  0092               	movwf	18	;volatile
  6771                           
  6772                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  6773  078A  30FE               	movlw	254
  6774  078B  0093               	movwf	19	;volatile
  6775  078C                     l3680:	
  6776                           
  6777                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  6778  078C  1695               	bsf	21,5	;volatile
  6779                           
  6780                           ;I2C1.c: 45: }
  6781                           
  6782                           ;I2C1.c: 44: break;
  6783  078D  2F97               	goto	l78
  6784  078E                     l3684:	
  6785  078E  0020               	movlb	0	; select bank0
  6786  078F  0821               	movf	I2C1_Setting@mode,w
  6787                           
  6788                           ; Switch size 1, requested type "space"
  6789                           ; Number of cases is 2, Range of values is 0 to 1
  6790                           ; switch strategies available:
  6791                           ; Name         Instructions Cycles
  6792                           ; simple_byte            7     4 (average)
  6793                           ; direct_byte           10     6 (fixed)
  6794                           ; jumptable            260     6 (fixed)
  6795                           ;	Chosen strategy is simple_byte
  6796  0790  3A00               	xorlw	0	; case 0
  6797  0791  1903               	skipnz
  6798  0792  2F66               	goto	l74
  6799  0793  3A01               	xorlw	1	; case 1
  6800  0794  1903               	skipnz
  6801  0795  2F7D               	goto	l3670
  6802  0796  2F97               	goto	l78
  6803  0797                     l78:	
  6804                           
  6805                           ;I2C1.c: 46: SSP1IE = 1;
  6806  0797  0021               	movlb	1	; select bank1
  6807  0798  1591               	bsf	17,3	;volatile
  6808                           
  6809                           ;I2C1.c: 47: BCL1IE = 1;
  6810  0799  1592               	bsf	18,3	;volatile
  6811                           
  6812                           ;I2C1.c: 48: SSP1IF = 0;
  6813  079A  0020               	movlb	0	; select bank0
  6814  079B  1191               	bcf	17,3	;volatile
  6815                           
  6816                           ;I2C1.c: 49: BCL1IF = 0;
  6817  079C  1192               	bcf	18,3	;volatile
  6818  079D  0008               	return
  6819  079E                     __end_of_I2C1_Setting:	
  6820                           
  6821                           	psect	text25
  6822  0D83                     __ptext25:	
  6823 ;; *************** function _I2C1_PinInit *****************
  6824 ;; Defined at:
  6825 ;;		line 9 in file "I2C1.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;		None
  6830 ;; Return value:  Size  Location     Type
  6831 ;;                  1    wreg      void 
  6832 ;; Registers used:
  6833 ;;		wreg, status,2, status,0
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6839 ;;      Params:         0       0       0       0       0       0
  6840 ;;      Locals:         0       0       0       0       0       0
  6841 ;;      Temps:          0       1       0       0       0       0
  6842 ;;      Totals:         0       1       0       0       0       0
  6843 ;;Total ram usage:        1 bytes
  6844 ;; Hardware stack levels used:    1
  6845 ;; Hardware stack levels required when called:    3
  6846 ;; This function calls:
  6847 ;;		Nothing
  6848 ;; This function is called by:
  6849 ;;		_I2C1_Setting
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           
  6853                           
  6854                           ;psect for function _I2C1_PinInit
  6855  0D83                     _I2C1_PinInit:	
  6856                           
  6857                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  6858                           
  6859                           ;incstack = 0
  6860                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  6861  0D83  3012               	movlw	18
  6862  0D84  0020               	movlb	0	; select bank0
  6863  0D85  00A0               	movwf	??_I2C1_PinInit
  6864  0D86  0820               	movf	??_I2C1_PinInit,w
  6865  0D87  0021               	movlb	1	; select bank1
  6866  0D88  048D               	iorwf	13,f	;volatile
  6867                           
  6868                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  6869  0D89  30ED               	movlw	237
  6870  0D8A  0020               	movlb	0	; select bank0
  6871  0D8B  00A0               	movwf	??_I2C1_PinInit
  6872  0D8C  0820               	movf	??_I2C1_PinInit,w
  6873  0D8D  0023               	movlb	3	; select bank3
  6874  0D8E  058D               	andwf	13,f	;volatile
  6875  0D8F  0008               	return
  6876  0D90                     __end_of_I2C1_PinInit:	
  6877                           
  6878                           	psect	text26
  6879  0D6E                     __ptext26:	
  6880 ;; *************** function _Buzzer_MiliSecond *****************
  6881 ;; Defined at:
  6882 ;;		line 38 in file "Buzzer.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  time            2    0[BANK0 ] unsigned int 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;		None
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  1    wreg      void 
  6889 ;; Registers used:
  6890 ;;		wreg, status,2, status,0
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6896 ;;      Params:         0       2       0       0       0       0
  6897 ;;      Locals:         0       0       0       0       0       0
  6898 ;;      Temps:          0       0       0       0       0       0
  6899 ;;      Totals:         0       2       0       0       0       0
  6900 ;;Total ram usage:        2 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; Hardware stack levels required when called:    3
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_main
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           
  6911                           ;psect for function _Buzzer_MiliSecond
  6912  0D6E                     _Buzzer_MiliSecond:	
  6913                           
  6914                           ;Buzzer.c: 40: if(count==0)
  6915                           
  6916                           ;incstack = 0
  6917                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  6918  0D6E  0878               	movf	_count,w
  6919  0D6F  0479               	iorwf	_count+1,w
  6920  0D70  1D03               	btfss	3,2
  6921  0D71  0008               	return
  6922                           
  6923                           ;Buzzer.c: 41: count = time;
  6924  0D72  0020               	movlb	0	; select bank0
  6925  0D73  0821               	movf	Buzzer_MiliSecond@time+1,w
  6926  0D74  00F9               	movwf	_count+1
  6927  0D75  0820               	movf	Buzzer_MiliSecond@time,w
  6928  0D76  00F8               	movwf	_count
  6929  0D77  0008               	return
  6930  0D78                     __end_of_Buzzer_MiliSecond:	
  6931                           
  6932                           	psect	text27
  6933  0EDD                     __ptext27:	
  6934 ;; *************** function _Buzzer_Init *****************
  6935 ;; Defined at:
  6936 ;;		line 11 in file "Buzzer.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2, status,0
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6950 ;;      Params:         0       0       0       0       0       0
  6951 ;;      Locals:         0       0       0       0       0       0
  6952 ;;      Temps:          0       1       0       0       0       0
  6953 ;;      Totals:         0       1       0       0       0       0
  6954 ;;Total ram usage:        1 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    3
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_main
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function _Buzzer_Init
  6966  0EDD                     _Buzzer_Init:	
  6967                           
  6968                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  6969                           
  6970                           ;incstack = 0
  6971                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  6972  0EDD  307F               	movlw	127
  6973  0EDE  0020               	movlb	0	; select bank0
  6974  0EDF  00A0               	movwf	??_Buzzer_Init
  6975  0EE0  0820               	movf	??_Buzzer_Init,w
  6976  0EE1  0021               	movlb	1	; select bank1
  6977  0EE2  058C               	andwf	12,f	;volatile
  6978                           
  6979                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  6980  0EE3  307F               	movlw	127
  6981  0EE4  0020               	movlb	0	; select bank0
  6982  0EE5  00A0               	movwf	??_Buzzer_Init
  6983  0EE6  0820               	movf	??_Buzzer_Init,w
  6984  0EE7  0023               	movlb	3	; select bank3
  6985  0EE8  058C               	andwf	12,f	;volatile
  6986                           
  6987                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  6988  0EE9  0022               	movlb	2	; select bank2
  6989  0EEA  159D               	bsf	29,3	;volatile
  6990                           
  6991                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  6992  0EEB  0020               	movlb	0	; select bank0
  6993  0EEC  081C               	movf	28,w	;volatile
  6994                           
  6995                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  6996  0EED  149C               	bsf	28,1	;volatile
  6997                           
  6998                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  6999  0EEE  151C               	bsf	28,2	;volatile
  7000                           
  7001                           ;Buzzer.c: 21: TMR2 = 0x00;
  7002  0EEF  019A               	clrf	26	;volatile
  7003                           
  7004                           ;Buzzer.c: 22: PR2 = 0xFF;
  7005  0EF0  30FF               	movlw	255
  7006  0EF1  009B               	movwf	27	;volatile
  7007                           
  7008                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  7009  0EF2  303F               	movlw	63
  7010  0EF3  00A0               	movwf	??_Buzzer_Init
  7011  0EF4  0820               	movf	??_Buzzer_Init,w
  7012  0EF5  0025               	movlb	5	; select bank5
  7013  0EF6  059A               	andwf	26,f	;volatile
  7014                           
  7015                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  7016  0EF7  300C               	movlw	12
  7017  0EF8  0020               	movlb	0	; select bank0
  7018  0EF9  00A0               	movwf	??_Buzzer_Init
  7019  0EFA  0820               	movf	??_Buzzer_Init,w
  7020  0EFB  0025               	movlb	5	; select bank5
  7021  0EFC  049A               	iorwf	26,f	;volatile
  7022                           
  7023                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  7024  0EFD  30F3               	movlw	243
  7025  0EFE  0020               	movlb	0	; select bank0
  7026  0EFF  00A0               	movwf	??_Buzzer_Init
  7027  0F00  0820               	movf	??_Buzzer_Init,w
  7028  0F01  0025               	movlb	5	; select bank5
  7029  0F02  059E               	andwf	30,f	;volatile
  7030                           
  7031                           ;Buzzer.c: 28: CCPR2L = 0x00;
  7032  0F03  0198               	clrf	24	;volatile
  7033  0F04  0008               	return
  7034  0F05                     __end_of_Buzzer_Init:	
  7035                           
  7036                           	psect	text28
  7037  0E05                     __ptext28:	
  7038 ;; *************** function _Basic_Init *****************
  7039 ;; Defined at:
  7040 ;;		line 51 in file "main.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;		None
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;		None
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  1    wreg      char 
  7047 ;; Registers used:
  7048 ;;		wreg, status,2
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7054 ;;      Params:         0       0       0       0       0       0
  7055 ;;      Locals:         0       0       0       0       0       0
  7056 ;;      Temps:          0       0       0       0       0       0
  7057 ;;      Totals:         0       0       0       0       0       0
  7058 ;;Total ram usage:        0 bytes
  7059 ;; Hardware stack levels used:    1
  7060 ;; Hardware stack levels required when called:    3
  7061 ;; This function calls:
  7062 ;;		Nothing
  7063 ;; This function is called by:
  7064 ;;		_main
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           
  7069                           ;psect for function _Basic_Init
  7070  0E05                     _Basic_Init:	
  7071                           
  7072                           ;main.c: 53: OSCCON = 0xF0;
  7073                           
  7074                           ;incstack = 0
  7075                           ; Regs used in _Basic_Init: [wreg+status,2]
  7076  0E05  30F0               	movlw	240
  7077  0E06  0021               	movlb	1	; select bank1
  7078  0E07  0099               	movwf	25	;volatile
  7079                           
  7080                           ;main.c: 57: TRISA = 0x07;
  7081  0E08  3007               	movlw	7
  7082  0E09  008C               	movwf	12	;volatile
  7083                           
  7084                           ;main.c: 58: ANSELA = 0x07;
  7085  0E0A  3007               	movlw	7
  7086  0E0B  0023               	movlb	3	; select bank3
  7087  0E0C  008C               	movwf	12	;volatile
  7088                           
  7089                           ;main.c: 60: TRISB = 0x40;
  7090  0E0D  3040               	movlw	64
  7091  0E0E  0021               	movlb	1	; select bank1
  7092  0E0F  008D               	movwf	13	;volatile
  7093                           
  7094                           ;main.c: 61: ANSELB = 0x00;
  7095  0E10  0023               	movlb	3	; select bank3
  7096  0E11  018D               	clrf	13	;volatile
  7097                           
  7098                           ;main.c: 63: APFCON0 = 0x08;
  7099  0E12  3008               	movlw	8
  7100  0E13  0022               	movlb	2	; select bank2
  7101  0E14  009D               	movwf	29	;volatile
  7102                           
  7103                           ;main.c: 64: APFCON1 = 0x00;
  7104  0E15  019E               	clrf	30	;volatile
  7105                           
  7106                           ;main.c: 66: PORTA = 0x00;
  7107  0E16  0020               	movlb	0	; select bank0
  7108  0E17  018C               	clrf	12	;volatile
  7109                           
  7110                           ;main.c: 67: PORTB = 0x00;
  7111  0E18  018D               	clrf	13	;volatile
  7112  0E19  0008               	return
  7113  0E1A                     __end_of_Basic_Init:	
  7114                           ;main.c: 69: return 0;
  7115                           ;	Return value of _Basic_Init is never used
  7116                           
  7117                           
  7118                           	psect	intentry
  7119  0004                     __pintentry:	
  7120 ;; *************** function _Handler *****************
  7121 ;; Defined at:
  7122 ;;		line 72 in file "main.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;		None
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;		None
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  1    wreg      void 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7136 ;;      Params:         0       0       0       0       0       0
  7137 ;;      Locals:         0       0       0       0       0       0
  7138 ;;      Temps:          1       0       0       0       0       0
  7139 ;;      Totals:         1       0       0       0       0       0
  7140 ;;Total ram usage:        1 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:    2
  7143 ;; This function calls:
  7144 ;;		_Buzzer_Handler
  7145 ;;		_CPSx_Read
  7146 ;;		_I2C_CommonInterrupt
  7147 ;;		_Timer1_Handler
  7148 ;;		_Timer4_Handler
  7149 ;; This function is called by:
  7150 ;;		Interrupt level 1
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154  0004                     _Handler:	
  7155                           
  7156                           ;incstack = 0
  7157  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7158                           
  7159                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7160  0005  3180               	pagesel	$
  7161  0006  0020               	movlb	0	; select bank0
  7162  0007  087F               	movf	127,w
  7163  0008  00F5               	movwf	??_Handler
  7164                           
  7165                           ;main.c: 74: static uint16_t count = 0;
  7166                           ;main.c: 75: if(Timer4_Handler())
  7167  0009  318D  2578  3180   	fcall	_Timer4_Handler
  7168  000C  3A00               	xorlw	0
  7169  000D  1903               	skipnz
  7170  000E  2826               	goto	i1l3514
  7171                           
  7172                           ;main.c: 76: {
  7173                           ;main.c: 77: CPSx_Read();
  7174  000F  318E  26B8  3180   	fcall	_CPSx_Read
  7175                           
  7176                           ;main.c: 78: Buzzer_Handler();
  7177  0012  318D  25F0  3180   	fcall	_Buzzer_Handler
  7178                           
  7179                           ;main.c: 79: count++;
  7180  0015  3001               	movlw	1
  7181  0016  0021               	movlb	1	; select bank1
  7182  0017  07A9               	addwf	Handler@count^(0+128),f
  7183  0018  3000               	movlw	0
  7184  0019  3DAA               	addwfc	(Handler@count+1)^(0+128),f
  7185                           
  7186                           ;main.c: 80: if(count>1000)
  7187  001A  3003               	movlw	3
  7188  001B  022A               	subwf	(Handler@count+1)^(0+128),w
  7189  001C  30E9               	movlw	233
  7190  001D  1903               	skipnz
  7191  001E  0229               	subwf	Handler@count^(0+128),w
  7192  001F  1C03               	skipc
  7193  0020  2826               	goto	i1l3514
  7194                           
  7195                           ;main.c: 81: {
  7196                           ;main.c: 82: count = 0;
  7197  0021  01A9               	clrf	Handler@count^(0+128)
  7198  0022  01AA               	clrf	(Handler@count+1)^(0+128)
  7199                           
  7200                           ;main.c: 83: LATA6 ^= 1;
  7201  0023  0022               	movlb	2	; select bank2
  7202  0024  3040               	movlw	64
  7203  0025  068C               	xorwf	12,f
  7204  0026                     i1l3514:	
  7205                           
  7206                           ;main.c: 84: }
  7207                           ;main.c: 85: }
  7208                           ;main.c: 87: Timer1_Handler();
  7209  0026  318D  2565  3180   	fcall	_Timer1_Handler
  7210                           
  7211                           ;main.c: 88: I2C_CommonInterrupt();
  7212  0029  318D  254C         	fcall	_I2C_CommonInterrupt
  7213  002B  0875               	movf	??_Handler,w
  7214  002C  0020               	movlb	0	; select bank0
  7215  002D  00FF               	movwf	127
  7216  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7217  002F  0009               	retfie
  7218  0030                     __end_of_Handler:	
  7219                           
  7220                           	psect	text30
  7221  0D78                     __ptext30:	
  7222 ;; *************** function _Timer4_Handler *****************
  7223 ;; Defined at:
  7224 ;;		line 17 in file "Timer4.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;		None
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;		None
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  1    wreg      unsigned char 
  7231 ;; Registers used:
  7232 ;;		wreg
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7238 ;;      Params:         0       0       0       0       0       0
  7239 ;;      Locals:         0       0       0       0       0       0
  7240 ;;      Temps:          0       0       0       0       0       0
  7241 ;;      Totals:         0       0       0       0       0       0
  7242 ;;Total ram usage:        0 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; This function calls:
  7245 ;;		Nothing
  7246 ;; This function is called by:
  7247 ;;		_Handler
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           
  7252                           ;psect for function _Timer4_Handler
  7253  0D78                     _Timer4_Handler:	
  7254                           
  7255                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  7256                           
  7257                           ;incstack = 0
  7258                           ; Regs used in _Timer4_Handler: [wreg]
  7259  0D78  0021               	movlb	1	; select bank1
  7260  0D79  1C93               	btfss	19,1	;volatile
  7261  0D7A  2D81               	goto	i1l3330
  7262  0D7B  0020               	movlb	0	; select bank0
  7263  0D7C  1C93               	btfss	19,1	;volatile
  7264  0D7D  2D81               	goto	i1l3330
  7265                           
  7266                           ;Timer4.c: 20: {
  7267                           ;Timer4.c: 21: TMR4IF = 0;
  7268  0D7E  1093               	bcf	19,1	;volatile
  7269                           
  7270                           ;Timer4.c: 22: return 1;
  7271  0D7F  3001               	movlw	1
  7272  0D80  0008               	return
  7273  0D81                     i1l3330:	
  7274                           
  7275                           ;Timer4.c: 23: }
  7276                           ;Timer4.c: 24: return 0;
  7277  0D81  3000               	movlw	0
  7278  0D82  0008               	return
  7279  0D83                     __end_of_Timer4_Handler:	
  7280                           
  7281                           	psect	text31
  7282  0D65                     __ptext31:	
  7283 ;; *************** function _Timer1_Handler *****************
  7284 ;; Defined at:
  7285 ;;		line 33 in file "Timer1.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;		None
  7288 ;; Auto vars:     Size  Location     Type
  7289 ;;		None
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  1    wreg      void 
  7292 ;; Registers used:
  7293 ;;		None
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7299 ;;      Params:         0       0       0       0       0       0
  7300 ;;      Locals:         0       0       0       0       0       0
  7301 ;;      Temps:          0       0       0       0       0       0
  7302 ;;      Totals:         0       0       0       0       0       0
  7303 ;;Total ram usage:        0 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; This function calls:
  7306 ;;		Nothing
  7307 ;; This function is called by:
  7308 ;;		_Handler
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           
  7313                           ;psect for function _Timer1_Handler
  7314  0D65                     _Timer1_Handler:	
  7315                           
  7316                           ;Timer1.c: 35: if(TMR1IF&&TMR1IE)
  7317                           
  7318                           ;incstack = 0
  7319                           ; Regs used in _Timer1_Handler: []
  7320  0D65  0020               	movlb	0	; select bank0
  7321  0D66  1C11               	btfss	17,0	;volatile
  7322  0D67  0008               	return
  7323  0D68  0021               	movlb	1	; select bank1
  7324  0D69  1C11               	btfss	17,0	;volatile
  7325  0D6A  0008               	return
  7326                           
  7327                           ;Timer1.c: 36: {
  7328                           ;Timer1.c: 37: TMR1IF = 0;
  7329  0D6B  0020               	movlb	0	; select bank0
  7330  0D6C  1011               	bcf	17,0	;volatile
  7331  0D6D  0008               	return
  7332  0D6E                     __end_of_Timer1_Handler:	
  7333                           
  7334                           	psect	text32
  7335  0D4C                     __ptext32:	
  7336 ;; *************** function _I2C_CommonInterrupt *****************
  7337 ;; Defined at:
  7338 ;;		line 58 in file "I2C_Common.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;		None
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;		None
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      void 
  7345 ;; Registers used:
  7346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7352 ;;      Params:         0       0       0       0       0       0
  7353 ;;      Locals:         0       0       0       0       0       0
  7354 ;;      Temps:          0       0       0       0       0       0
  7355 ;;      Totals:         0       0       0       0       0       0
  7356 ;;Total ram usage:        0 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; Hardware stack levels required when called:    1
  7359 ;; This function calls:
  7360 ;;		_I2C1_Interrupt
  7361 ;;		_I2C2_Interrupt
  7362 ;; This function is called by:
  7363 ;;		_Handler
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           
  7368                           ;psect for function _I2C_CommonInterrupt
  7369  0D4C                     _I2C_CommonInterrupt:	
  7370                           
  7371                           ;I2C_Common.c: 60: I2C1_Interrupt();
  7372                           
  7373                           ;incstack = 0
  7374                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7375  0D4C  3186  266F  318D   	fcall	_I2C1_Interrupt
  7376                           
  7377                           ;I2C_Common.c: 61: I2C2_Interrupt();
  7378  0D4F  3186  261B         	fcall	_I2C2_Interrupt
  7379  0D51  0008               	return
  7380  0D52                     __end_of_I2C_CommonInterrupt:	
  7381                           
  7382                           	psect	text33
  7383  061B                     __ptext33:	
  7384 ;; *************** function _I2C2_Interrupt *****************
  7385 ;; Defined at:
  7386 ;;		line 152 in file "I2C2.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;		None
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;		None
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  1    wreg      void 
  7393 ;; Registers used:
  7394 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7400 ;;      Params:         0       0       0       0       0       0
  7401 ;;      Locals:         0       0       0       0       0       0
  7402 ;;      Temps:          1       0       0       0       0       0
  7403 ;;      Totals:         1       0       0       0       0       0
  7404 ;;Total ram usage:        1 bytes
  7405 ;; Hardware stack levels used:    1
  7406 ;; This function calls:
  7407 ;;		Nothing
  7408 ;; This function is called by:
  7409 ;;		_I2C_CommonInterrupt
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           
  7414                           ;psect for function _I2C2_Interrupt
  7415  061B                     _I2C2_Interrupt:	
  7416                           
  7417                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  7418                           
  7419                           ;incstack = 0
  7420                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7421  061B  0020               	movlb	0	; select bank0
  7422  061C  1C14               	btfss	20,0	;volatile
  7423  061D  2E67               	goto	i1l2880
  7424  061E  0021               	movlb	1	; select bank1
  7425  061F  1C14               	btfss	20,0	;volatile
  7426  0620  2E67               	goto	i1l2880
  7427                           
  7428                           ;I2C2.c: 155: {
  7429                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  7430  0621  0024               	movlb	4	; select bank4
  7431  0622  1E9C               	btfss	28,5	;volatile
  7432  0623  2E3E               	goto	i1l294
  7433                           
  7434                           ;I2C2.c: 157: {
  7435                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  7436  0624  1D1C               	btfss	28,2	;volatile
  7437  0625  2E31               	goto	i1l2856
  7438                           
  7439                           ;I2C2.c: 159: {
  7440                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  7441  0626  1B1E               	btfsc	30,6	;volatile
  7442  0627  2E65               	goto	i1l2878
  7443  0628                     i1l2848:	
  7444                           ;I2C2.c: 161: {
  7445                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7446                           
  7447  0628  081C               	movf	28,w	;volatile
  7448  0629  3901               	andlw	1
  7449  062A  00F0               	movwf	??_I2C2_Interrupt
  7450  062B  0E1D               	swapf	29,w	;volatile
  7451  062C  3901               	andlw	1
  7452  062D  0470               	iorwf	??_I2C2_Interrupt,w
  7453  062E  1D03               	btfss	3,2
  7454  062F  2E28               	goto	i1l2848
  7455  0630  2E51               	goto	L11
  7456  0631                     i1l2856:	
  7457                           ;I2C2.c: 166: }
  7458                           ;I2C2.c: 167: }
  7459                           
  7460                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  7461                           
  7462                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  7463                           
  7464                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  7465                           
  7466                           
  7467                           ;I2C2.c: 168: else
  7468                           ;I2C2.c: 169: {
  7469                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  7470  0631  0819               	movf	25,w	;volatile
  7471  0632  00F0               	movwf	??_I2C2_Interrupt
  7472  0633  0021               	movlb	1	; select bank1
  7473  0634  083C               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  7474  0635  0086               	movwf	6
  7475  0636  0187               	clrf	7
  7476  0637  0870               	movf	??_I2C2_Interrupt,w
  7477  0638  0081               	movwf	1
  7478                           
  7479                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  7480  0639  3001               	movlw	1
  7481  063A  00F0               	movwf	??_I2C2_Interrupt
  7482  063B  0870               	movf	??_I2C2_Interrupt,w
  7483  063C  07BC               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  7484  063D  2E63               	goto	i1l2876
  7485  063E                     i1l294:	
  7486                           ;I2C2.c: 173: }
  7487                           ;I2C2.c: 174: }
  7488                           
  7489                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  7490                           
  7491                           
  7492                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  7493  063E  1A9C               	btfsc	28,5	;volatile
  7494  063F  2E65               	goto	i1l2878
  7495                           
  7496                           ;I2C2.c: 176: {
  7497                           ;I2C2.c: 177: SSP2BUF;
  7498  0640  0819               	movf	25,w	;volatile
  7499                           
  7500                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  7501  0641  1D1C               	btfss	28,2	;volatile
  7502  0642  2E5E               	goto	i1l2874
  7503                           
  7504                           ;I2C2.c: 180: {
  7505                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  7506  0643  30AB               	movlw	(low (_I2C2_Config| 0))& (0+255)
  7507  0644  00F0               	movwf	??_I2C2_Interrupt
  7508  0645  0870               	movf	??_I2C2_Interrupt,w
  7509  0646  0021               	movlb	1	; select bank1
  7510  0647  00BB               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  7511  0648                     i1l2868:	
  7512                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  7513                           
  7514  0648  0024               	movlb	4	; select bank4
  7515  0649  081C               	movf	28,w	;volatile
  7516  064A  3901               	andlw	1
  7517  064B  00F0               	movwf	??_I2C2_Interrupt
  7518  064C  0E1D               	swapf	29,w	;volatile
  7519  064D  3901               	andlw	1
  7520  064E  0470               	iorwf	??_I2C2_Interrupt,w
  7521  064F  1D03               	btfss	3,2
  7522  0650  2E48               	goto	i1l2868
  7523  0651                     L11:	
  7524                           
  7525                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  7526  0651  0021               	movlb	1	; select bank1
  7527  0652  083B               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  7528  0653  0086               	movwf	6
  7529  0654  0187               	clrf	7
  7530  0655  0801               	movf	1,w
  7531  0656  0024               	movlb	4	; select bank4
  7532  0657  0099               	movwf	25	;volatile
  7533                           
  7534                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  7535  0658  3001               	movlw	1
  7536  0659  00F0               	movwf	??_I2C2_Interrupt
  7537  065A  0870               	movf	??_I2C2_Interrupt,w
  7538  065B  0021               	movlb	1	; select bank1
  7539  065C  07BB               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  7540                           
  7541                           ;I2C2.c: 186: }
  7542  065D  2E63               	goto	i1l2876
  7543  065E                     i1l2874:	
  7544                           
  7545                           ;I2C2.c: 187: else
  7546                           ;I2C2.c: 188: {
  7547                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  7548  065E  30B3               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  7549  065F  00F0               	movwf	??_I2C2_Interrupt
  7550  0660  0870               	movf	??_I2C2_Interrupt,w
  7551  0661  0021               	movlb	1	; select bank1
  7552  0662  00BC               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  7553  0663                     i1l2876:	
  7554                           
  7555                           ;I2C2.c: 190: }
  7556                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  7557  0663  0024               	movlb	4	; select bank4
  7558  0664  161D               	bsf	29,4	;volatile
  7559  0665                     i1l2878:	
  7560                           
  7561                           ;I2C2.c: 192: }
  7562                           ;I2C2.c: 193: SSP2IF = 0;
  7563  0665  0020               	movlb	0	; select bank0
  7564  0666  1014               	bcf	20,0	;volatile
  7565  0667                     i1l2880:	
  7566                           
  7567                           ;I2C2.c: 194: }
  7568                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  7569  0667  0021               	movlb	1	; select bank1
  7570  0668  1C94               	btfss	20,1	;volatile
  7571  0669  0008               	return
  7572  066A  0020               	movlb	0	; select bank0
  7573  066B  1C94               	btfss	20,1	;volatile
  7574  066C  0008               	return
  7575                           
  7576                           ;I2C2.c: 197: BCL2IF = 0;
  7577  066D  1094               	bcf	20,1	;volatile
  7578  066E  0008               	return
  7579  066F                     __end_of_I2C2_Interrupt:	
  7580                           
  7581                           	psect	text34
  7582  066F                     __ptext34:	
  7583 ;; *************** function _I2C1_Interrupt *****************
  7584 ;; Defined at:
  7585 ;;		line 152 in file "I2C1.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;		None
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;		None
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  1    wreg      void 
  7592 ;; Registers used:
  7593 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7599 ;;      Params:         0       0       0       0       0       0
  7600 ;;      Locals:         0       0       0       0       0       0
  7601 ;;      Temps:          1       0       0       0       0       0
  7602 ;;      Totals:         1       0       0       0       0       0
  7603 ;;Total ram usage:        1 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_I2C_CommonInterrupt
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           
  7613                           ;psect for function _I2C1_Interrupt
  7614  066F                     _I2C1_Interrupt:	
  7615                           
  7616                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  7617                           
  7618                           ;incstack = 0
  7619                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  7620  066F  0020               	movlb	0	; select bank0
  7621  0670  1D91               	btfss	17,3	;volatile
  7622  0671  2EBB               	goto	i1l2830
  7623  0672  0021               	movlb	1	; select bank1
  7624  0673  1D91               	btfss	17,3	;volatile
  7625  0674  2EBB               	goto	i1l2830
  7626                           
  7627                           ;I2C1.c: 155: {
  7628                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  7629  0675  0024               	movlb	4	; select bank4
  7630  0676  1E94               	btfss	20,5	;volatile
  7631  0677  2E92               	goto	i1l157
  7632                           
  7633                           ;I2C1.c: 157: {
  7634                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  7635  0678  1D14               	btfss	20,2	;volatile
  7636  0679  2E85               	goto	i1l2806
  7637                           
  7638                           ;I2C1.c: 159: {
  7639                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  7640  067A  1B16               	btfsc	22,6	;volatile
  7641  067B  2EB9               	goto	i1l2828
  7642  067C                     i1l2798:	
  7643                           ;I2C1.c: 161: {
  7644                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  7645                           
  7646  067C  0814               	movf	20,w	;volatile
  7647  067D  3901               	andlw	1
  7648  067E  00F0               	movwf	??_I2C1_Interrupt
  7649  067F  0E15               	swapf	21,w	;volatile
  7650  0680  3901               	andlw	1
  7651  0681  0470               	iorwf	??_I2C1_Interrupt,w
  7652  0682  1D03               	btfss	3,2
  7653  0683  2E7C               	goto	i1l2798
  7654  0684  2EA5               	goto	L12
  7655  0685                     i1l2806:	
  7656                           ;I2C1.c: 166: }
  7657                           ;I2C1.c: 167: }
  7658                           
  7659                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  7660                           
  7661                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  7662                           
  7663                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  7664                           
  7665                           
  7666                           ;I2C1.c: 168: else
  7667                           ;I2C1.c: 169: {
  7668                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  7669  0685  0811               	movf	17,w	;volatile
  7670  0686  00F0               	movwf	??_I2C1_Interrupt
  7671  0687  0021               	movlb	1	; select bank1
  7672  0688  084F               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  7673  0689  0086               	movwf	6
  7674  068A  0187               	clrf	7
  7675  068B  0870               	movf	??_I2C1_Interrupt,w
  7676  068C  0081               	movwf	1
  7677                           
  7678                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  7679  068D  3001               	movlw	1
  7680  068E  00F0               	movwf	??_I2C1_Interrupt
  7681  068F  0870               	movf	??_I2C1_Interrupt,w
  7682  0690  07CF               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  7683  0691  2EB7               	goto	i1l2826
  7684  0692                     i1l157:	
  7685                           ;I2C1.c: 173: }
  7686                           ;I2C1.c: 174: }
  7687                           
  7688                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  7689                           
  7690                           
  7691                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  7692  0692  1A94               	btfsc	20,5	;volatile
  7693  0693  2EB9               	goto	i1l2828
  7694                           
  7695                           ;I2C1.c: 176: {
  7696                           ;I2C1.c: 177: SSP1BUF;
  7697  0694  0811               	movf	17,w	;volatile
  7698                           
  7699                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  7700  0695  1D14               	btfss	20,2	;volatile
  7701  0696  2EB2               	goto	i1l2824
  7702                           
  7703                           ;I2C1.c: 180: {
  7704                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  7705  0697  30BE               	movlw	(low (_I2C1_Config| 0))& (0+255)
  7706  0698  00F0               	movwf	??_I2C1_Interrupt
  7707  0699  0870               	movf	??_I2C1_Interrupt,w
  7708  069A  0021               	movlb	1	; select bank1
  7709  069B  00CE               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  7710  069C                     i1l2818:	
  7711                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  7712                           
  7713  069C  0024               	movlb	4	; select bank4
  7714  069D  0814               	movf	20,w	;volatile
  7715  069E  3901               	andlw	1
  7716  069F  00F0               	movwf	??_I2C1_Interrupt
  7717  06A0  0E15               	swapf	21,w	;volatile
  7718  06A1  3901               	andlw	1
  7719  06A2  0470               	iorwf	??_I2C1_Interrupt,w
  7720  06A3  1D03               	btfss	3,2
  7721  06A4  2E9C               	goto	i1l2818
  7722  06A5                     L12:	
  7723                           
  7724                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  7725  06A5  0021               	movlb	1	; select bank1
  7726  06A6  084E               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  7727  06A7  0086               	movwf	6
  7728  06A8  0187               	clrf	7
  7729  06A9  0801               	movf	1,w
  7730  06AA  0024               	movlb	4	; select bank4
  7731  06AB  0091               	movwf	17	;volatile
  7732                           
  7733                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  7734  06AC  3001               	movlw	1
  7735  06AD  00F0               	movwf	??_I2C1_Interrupt
  7736  06AE  0870               	movf	??_I2C1_Interrupt,w
  7737  06AF  0021               	movlb	1	; select bank1
  7738  06B0  07CE               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  7739                           
  7740                           ;I2C1.c: 186: }
  7741  06B1  2EB7               	goto	i1l2826
  7742  06B2                     i1l2824:	
  7743                           
  7744                           ;I2C1.c: 187: else
  7745                           ;I2C1.c: 188: {
  7746                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  7747  06B2  30C6               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  7748  06B3  00F0               	movwf	??_I2C1_Interrupt
  7749  06B4  0870               	movf	??_I2C1_Interrupt,w
  7750  06B5  0021               	movlb	1	; select bank1
  7751  06B6  00CF               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  7752  06B7                     i1l2826:	
  7753                           
  7754                           ;I2C1.c: 190: }
  7755                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  7756  06B7  0024               	movlb	4	; select bank4
  7757  06B8  1615               	bsf	21,4	;volatile
  7758  06B9                     i1l2828:	
  7759                           
  7760                           ;I2C1.c: 192: }
  7761                           ;I2C1.c: 193: SSP1IF = 0;
  7762  06B9  0020               	movlb	0	; select bank0
  7763  06BA  1191               	bcf	17,3	;volatile
  7764  06BB                     i1l2830:	
  7765                           
  7766                           ;I2C1.c: 194: }
  7767                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  7768  06BB  0021               	movlb	1	; select bank1
  7769  06BC  1D92               	btfss	18,3	;volatile
  7770  06BD  0008               	return
  7771  06BE  0020               	movlb	0	; select bank0
  7772  06BF  1D92               	btfss	18,3	;volatile
  7773  06C0  0008               	return
  7774                           
  7775                           ;I2C1.c: 197: BCL1IF = 0;
  7776  06C1  1192               	bcf	18,3	;volatile
  7777  06C2  0008               	return
  7778  06C3                     __end_of_I2C1_Interrupt:	
  7779                           
  7780                           	psect	text35
  7781  0EB8                     __ptext35:	
  7782 ;; *************** function _CPSx_Read *****************
  7783 ;; Defined at:
  7784 ;;		line 29 in file "mTouch.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;		None
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;		None
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1    wreg      void 
  7791 ;; Registers used:
  7792 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7798 ;;      Params:         0       0       0       0       0       0
  7799 ;;      Locals:         0       0       0       0       0       0
  7800 ;;      Temps:          1       0       0       0       0       0
  7801 ;;      Totals:         1       0       0       0       0       0
  7802 ;;Total ram usage:        1 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; This function calls:
  7805 ;;		Nothing
  7806 ;; This function is called by:
  7807 ;;		_Handler
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           
  7812                           ;psect for function _CPSx_Read
  7813  0EB8                     _CPSx_Read:	
  7814                           
  7815                           ;mTouch.c: 31: static uint8_t channel=0;
  7816                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  7817                           
  7818                           ;incstack = 0
  7819                           ; Regs used in _CPSx_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7820  0EB8  087A               	movf	CPSx_Read@channel,w
  7821  0EB9  3EA0               	addlw	(low (_CPS_Data| 0))& (0+255)
  7822  0EBA  0086               	movwf	6
  7823  0EBB  0187               	clrf	7
  7824  0EBC  0801               	movf	1,w
  7825  0EBD  00F0               	movwf	??_CPSx_Read
  7826  0EBE  087A               	movf	CPSx_Read@channel,w
  7827  0EBF  3EA3               	addlw	(low (_CPS_PreData| 0))& (0+255)
  7828  0EC0  0086               	movwf	6
  7829  0EC1  0187               	clrf	7
  7830  0EC2  0870               	movf	??_CPSx_Read,w
  7831  0EC3  0081               	movwf	1
  7832                           
  7833                           ;mTouch.c: 34: CPSCON0 &= ~(0x01<<7);;
  7834  0EC4  307F               	movlw	127
  7835  0EC5  00F0               	movwf	??_CPSx_Read
  7836  0EC6  0870               	movf	??_CPSx_Read,w
  7837  0EC7  0020               	movlb	0	; select bank0
  7838  0EC8  059E               	andwf	30,f	;volatile
  7839                           
  7840                           ;mTouch.c: 35: CPS_Data[channel] = TMR0;
  7841  0EC9  0815               	movf	21,w	;volatile
  7842  0ECA  00F0               	movwf	??_CPSx_Read
  7843  0ECB  087A               	movf	CPSx_Read@channel,w
  7844  0ECC  3EA0               	addlw	(low (_CPS_Data| 0))& (0+255)
  7845  0ECD  0086               	movwf	6
  7846  0ECE  0187               	clrf	7
  7847  0ECF  0870               	movf	??_CPSx_Read,w
  7848  0ED0  0081               	movwf	1
  7849                           
  7850                           ;mTouch.c: 36: TMR0 = 0x00;
  7851  0ED1  0195               	clrf	21	;volatile
  7852                           
  7853                           ;mTouch.c: 37: CPSCON0 |= (0x01<<7);;
  7854  0ED2  179E               	bsf	30,7	;volatile
  7855                           
  7856                           ;mTouch.c: 39: if(channel++>2)channel = 0;
  7857  0ED3  087A               	movf	CPSx_Read@channel,w
  7858  0ED4  0AFA               	incf	CPSx_Read@channel,f
  7859  0ED5  00F0               	movwf	??_CPSx_Read
  7860  0ED6  3003               	movlw	3
  7861  0ED7  0270               	subwf	??_CPSx_Read,w
  7862  0ED8  1803               	btfsc	3,0
  7863  0ED9  01FA               	clrf	CPSx_Read@channel
  7864                           
  7865                           ;mTouch.c: 40: CPSCON1 = (uint8_t)channel;
  7866  0EDA  087A               	movf	CPSx_Read@channel,w
  7867  0EDB  009F               	movwf	31	;volatile
  7868  0EDC  0008               	return
  7869  0EDD                     __end_of_CPSx_Read:	
  7870                           
  7871                           	psect	text36
  7872  0DF0                     __ptext36:	
  7873 ;; *************** function _Buzzer_Handler *****************
  7874 ;; Defined at:
  7875 ;;		line 44 in file "Buzzer.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;		None
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;		None
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  1    wreg      void 
  7882 ;; Registers used:
  7883 ;;		wreg, status,2, status,0, pclath, cstack
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7889 ;;      Params:         0       0       0       0       0       0
  7890 ;;      Locals:         0       0       0       0       0       0
  7891 ;;      Temps:          0       0       0       0       0       0
  7892 ;;      Totals:         0       0       0       0       0       0
  7893 ;;Total ram usage:        0 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; Hardware stack levels required when called:    1
  7896 ;; This function calls:
  7897 ;;		_Buzzer_SetDuty
  7898 ;; This function is called by:
  7899 ;;		_Handler
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           
  7903                           
  7904                           ;psect for function _Buzzer_Handler
  7905  0DF0                     _Buzzer_Handler:	
  7906                           
  7907                           ;Buzzer.c: 46: if(count>0)
  7908                           
  7909                           ;incstack = 0
  7910                           ; Regs used in _Buzzer_Handler: [wreg+status,2+status,0+pclath+cstack]
  7911  0DF0  0878               	movf	_count,w
  7912  0DF1  0479               	iorwf	_count+1,w
  7913  0DF2  1903               	btfsc	3,2
  7914  0DF3  2DFF               	goto	i1l3112
  7915                           
  7916                           ;Buzzer.c: 47: {
  7917                           ;Buzzer.c: 48: count--;
  7918  0DF4  3001               	movlw	1
  7919  0DF5  02F8               	subwf	_count,f
  7920  0DF6  3000               	movlw	0
  7921  0DF7  3BF9               	subwfb	_count+1,f
  7922                           
  7923                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  7924  0DF8  30FF               	movlw	255
  7925  0DF9  00F0               	movwf	Buzzer_SetDuty@duty
  7926  0DFA  3001               	movlw	1
  7927  0DFB  00F1               	movwf	Buzzer_SetDuty@duty+1
  7928  0DFC  318E  2660         	fcall	_Buzzer_SetDuty
  7929                           
  7930                           ;Buzzer.c: 50: }
  7931  0DFE  0008               	return
  7932  0DFF                     i1l3112:	
  7933                           
  7934                           ;Buzzer.c: 51: else
  7935                           ;Buzzer.c: 52: {
  7936                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  7937  0DFF  3000               	movlw	0
  7938  0E00  00F0               	movwf	Buzzer_SetDuty@duty
  7939  0E01  00F1               	movwf	Buzzer_SetDuty@duty+1
  7940  0E02  318E  2660         	fcall	_Buzzer_SetDuty
  7941  0E04  0008               	return
  7942  0E05                     __end_of_Buzzer_Handler:	
  7943                           
  7944                           	psect	text37
  7945  0E60                     __ptext37:	
  7946 ;; *************** function _Buzzer_SetDuty *****************
  7947 ;; Defined at:
  7948 ;;		line 31 in file "Buzzer.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  duty            2    0[COMMON] unsigned int 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  1    wreg      void 
  7955 ;; Registers used:
  7956 ;;		wreg, status,2, status,0
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7962 ;;      Params:         2       0       0       0       0       0
  7963 ;;      Locals:         1       0       0       0       0       0
  7964 ;;      Temps:          2       0       0       0       0       0
  7965 ;;      Totals:         5       0       0       0       0       0
  7966 ;;Total ram usage:        5 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; This function calls:
  7969 ;;		Nothing
  7970 ;; This function is called by:
  7971 ;;		_Buzzer_Handler
  7972 ;; This function uses a non-reentrant model
  7973 ;;
  7974                           
  7975                           
  7976                           ;psect for function _Buzzer_SetDuty
  7977  0E60                     _Buzzer_SetDuty:	
  7978                           
  7979                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  7980                           
  7981                           ;incstack = 0
  7982                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  7983  0E60  0025               	movlb	5	; select bank5
  7984  0E61  081A               	movf	26,w	;volatile
  7985  0E62  39CF               	andlw	207
  7986  0E63  00F2               	movwf	??_Buzzer_SetDuty
  7987  0E64  0872               	movf	??_Buzzer_SetDuty,w
  7988  0E65  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  7989                           
  7990                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  7991  0E66  0871               	movf	Buzzer_SetDuty@duty+1,w
  7992  0E67  00F3               	movwf	??_Buzzer_SetDuty+1
  7993  0E68  0870               	movf	Buzzer_SetDuty@duty,w
  7994  0E69  00F2               	movwf	??_Buzzer_SetDuty
  7995  0E6A  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  7996  0E6B  0CF2               	rrf	??_Buzzer_SetDuty,f
  7997  0E6C  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  7998  0E6D  0CF2               	rrf	??_Buzzer_SetDuty,f
  7999  0E6E  0872               	movf	??_Buzzer_SetDuty,w
  8000  0E6F  0098               	movwf	24	;volatile
  8001                           
  8002                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  8003  0E70  0870               	movf	Buzzer_SetDuty@duty,w
  8004  0E71  3903               	andlw	3
  8005  0E72  00F2               	movwf	??_Buzzer_SetDuty
  8006  0E73  3003               	movlw	3
  8007  0E74                     u227_25:	
  8008  0E74  35F2               	lslf	??_Buzzer_SetDuty,f
  8009  0E75  3EFF               	addlw	-1
  8010  0E76  1D03               	skipz
  8011  0E77  2E74               	goto	u227_25
  8012  0E78  3572               	lslf	??_Buzzer_SetDuty,w
  8013  0E79  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  8014  0E7A  009A               	movwf	26	;volatile
  8015  0E7B  0008               	return
  8016  0E7C                     __end_of_Buzzer_SetDuty:	
  8017  007E                     btemp	set	126	;btemp
  8018  007E                     int$flags	set	126
  8019  007E                     wtemp0	set	126


Data Sizes:
    Strings     316
    Constant    30
    Data        90
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     70      76
    BANK1            80      0      79
    BANK2            80      5      65
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_53(CODE[7]), STR_52(CODE[6]), STR_51(CODE[6]), STR_50(CODE[7]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_53(CODE[7]), STR_52(CODE[6]), STR_51(CODE[6]), STR_50(CODE[7]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_48(CODE[7]), STR_47(CODE[7]), STR_46(CODE[7]), STR_45(CODE[7]), 
		 -> STR_44(CODE[7]), STR_43(CODE[7]), STR_42(CODE[7]), STR_41(CODE[6]), 
		 -> STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[6]), STR_37(CODE[5]), 
		 -> STR_36(CODE[5]), STR_35(CODE[5]), STR_34(CODE[5]), 

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_33(CODE[8]), STR_32(CODE[8]), STR_31(CODE[8]), STR_30(CODE[7]), 
		 -> STR_29(CODE[7]), STR_28(CODE[7]), STR_27(CODE[7]), STR_26(CODE[7]), 
		 -> STR_25(CODE[6]), STR_24(CODE[6]), STR_23(CODE[6]), STR_22(CODE[6]), 
		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_19(CODE[5]), 

    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_18(CODE[5]), STR_17(CODE[6]), STR_16(CODE[5]), STR_15(CODE[6]), 
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_12(CODE[5]), STR_11(CODE[6]), 
		 -> STR_10(CODE[5]), STR_9(CODE[6]), STR_8(CODE[5]), STR_7(CODE[6]), 
		 -> STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[5]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S46$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S46$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Handler->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _mTouch_Init->_mTouch_PortInit
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   10111
                                              0 BANK2      5     5      0
                         _Basic_Init
                        _Buzzer_Init
                  _Buzzer_MiliSecond
                     _DAC_Initialize
                 _LCD_CursorPosition
                           _LCD_Init
                        _Timer1_Init
                        _Timer4_Init
                        _mTouch_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                              8     2      6    6477
                                             62 BANK0      8     2      6
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    5683
                                             14 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     515
                                              6 BANK0      2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     389
                                              4 BANK0      2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     263
                                              3 BANK0      1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              4 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     263
                                              3 BANK0      3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                             16 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              8 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              5 BANK0      6     3      3
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_MiliSecond                                    2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0     195
                                              5 COMMON     1     1      0
                     _Buzzer_Handler
                          _CPSx_Read
                _I2C_CommonInterrupt
                     _Timer1_Handler
                     _Timer4_Handler
 ---------------------------------------------------------------------------------
 (8) _Timer4_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer1_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CPSx_Read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Buzzer_Handler                                       0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (9) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _Buzzer_MiliSecond
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_Init
   _Timer4_Init
   _mTouch_Init
     _mTouch_PortInit
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Handler
     _Buzzer_SetDuty
   _CPSx_Read
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Handler
   _Timer4_Handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     46      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      5      41      10       81.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      E7      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat May 13 11:47:40 2017

                 __CFG_CP$OFF 0000                            l74 0766                            l91 0535  
                          l78 0797                I2C2_Transmit@i 0025         ??_I2C_CommonInterrupt 0071  
         ___wmul@multiplicand 0022                           l100 055E                           l211 0722  
                         l109 057B                           l215 0753                           l228 049E  
                         l237 04C7                           l246 04E4                           l338 0F2C  
                         l643 00DC                           l628 0060                           l661 0177  
                         l906 0E85                           l684 022E                           _GIE 005F  
                         _PR2 001B                           _PR4 0416                  __CFG_CPD$OFF 0000  
                __CFG_BORV$LO 0000                           wreg 0009                    _Basic_Init 0E05  
                __CFG_LVP$OFF 0000               __end_of_LCD_Put 0D65                          l3700 0549  
                        l4500 00A5                          l3710 0541                          l4510 00D4  
                        l3712 0545                          l3800 04D5                          l3714 056C  
                        l3810 04EA                          l4506 00CC                          l3724 0581  
                        l3732 05A0                          l3812 0501                          l3820 0512  
                        l4452 0F79                          l4444 0F69                          l4620 0263  
                        l4612 0244                          l4540 0128                          l4532 0104  
                        l3670 077D                          l3662 0770                          l3726 0598  
                        l3734 05A9                          l3814 0506                          l3910 0F58  
                        l3902 0F32                          l4462 0E1C                          l4614 024D  
                        l4606 023C                          l4550 0151                          l4534 0112  
                        l4526 00F7                          l4518 00E9                          l3680 078C  
                        l3728 059D                          l3904 0F3F                          l4624 0275  
                        l4616 0251                          l4552 0153                          l4544 012C  
                        l4536 0116                          l4560 015F                          l3754 0737  
                        l3770 074A                          l3690 0526                          l3818 0509  
                        l3834 0E7F                          l4626 0279                          l4570 01AF  
                        l4554 0155                          l4546 0141                          l4490 008E  
                        l3668 077B                          l3684 078E                          l3756 0739  
                        l3748 072C                          l3908 0F50                          l3852 06D4  
                        l4580 01D2                          l4572 01BF                          l4556 015A  
                        l4548 014E                          l4476 0079                          l3766 0748  
                        l3774 0481                          l3862 0702                          l3854 06E2  
                        l4590 020C                          l4566 0191                          l3688 0518  
                        l3776 048F                          l4568 01A6                          l3786 04B2  
                        l3866 070D                          l3882 07CD                          l4594 0214  
                        l4578 01D0                          l4498 00A2                          l3892 0F08  
                        l3796 04AA                          l3876 07A7                          l4692 0403  
                        l3894 0F15                          l3798 04AE                          l3878 07B5  
                        l3886 07D8                          l4688 0418                          l3898 0F23  
                        l4698 0410                          STR_1 03D3                          STR_2 03D8  
                        STR_3 03DD                          STR_4 03BA                          STR_5 036A  
                        STR_6 03BF                          STR_7 0370                          STR_8 03C4  
                        STR_9 0376                          u4145 0E37                          u3355 0FCD  
                        u3705 0E8B                          _PEIE 005E                          u3805 07AA  
                        u4525 0126                          u3735 06D7                          u4535 013A  
                        u3825 07C3                          u3755 06E3                          u3835 07CE  
                        u3765 06F7                          u3775 0703                          u3695 0E86  
                        u4655 0261                          u4907 0E42                          u4675 0287  
                        u4755 043A                          u4917 0FC6                          u4765 0458  
                        u4775 0476                          u4857 05B5                          u4867 05CE  
                        u4877 05E3                          u4887 05F8                          u4897 0DB4  
       Buzzer_MiliSecond@time 0020                          _TMR0 0015                          _TMR1 0016  
                        _TMR2 001A                          _TMR4 0415               ??_I2C1_Transmit 0022  
                __CFG_WRT$OFF 0000                          _main 03E4              __end_of_I2C_Init 0F2F  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0022  
            ??_I2C1_Interrupt 0070                          start 0030                 __CFG_IESO$OFF 0000  
             __end_of_Handler 0030                 _LCD_WriteData 0FC3                 __CFG_MCLRE$ON 0000  
            ??_I2C2_Interrupt 0070            __size_of_CPSx_Read 0025      __end_of_LCD_DisplayClear 0DBA  
       __size_of_I2C_Transmit 002B              __end_of_LCD_Init 061B                 __CFG_PLLEN$ON 0000  
                 LCD_Put@word 0023                         ?_main 0070                         STR_10 03C9  
                       STR_11 037C                         STR_20 0397                         STR_12 03CE  
                       STR_21 03A6                         STR_13 0382                         STR_30 0314  
                       STR_22 0358                         STR_14 03AB                         STR_31 02B8  
                       STR_23 032E                         STR_15 035E                         STR_32 02B0  
                       STR_24 033A                         STR_40 034C                         STR_16 03B0  
                       STR_33 02A8                         STR_25 0352                         STR_41 0334  
                       STR_17 0364                 __CFG_WDTE$OFF 0000                         STR_50 02C0  
                       STR_26 02FF                         STR_42 02E3                         STR_34 0388  
                       STR_18 03B5                         STR_51 0322                         STR_27 02F8  
                       STR_19 039C                         STR_43 030D                         STR_35 038D  
                       STR_52 0328                         STR_28 0306                         STR_44 02EA  
                       STR_36 03A1                         STR_53 02C7                         STR_29 02CE  
                       STR_45 02F1                         STR_37 0392                         STR_46 031B  
                       STR_38 0340                         STR_47 02D5                         STR_39 0346  
                       STR_48 02DC                         STR_49 03E2               __end_of___lldiv 0716  
                       _T1CON 0018               __end_of___llmod 07E1                         _T2CON 001C  
                       _LATA3 0863                         _LATA4 0864                         _LATA6 0866  
                       _T4CON 0417                         i1l157 0692                         i1l294 063E  
                       _PORTA 000C                         _PORTB 000D                         _TRISA 008C  
                       _TRISB 008D             I2C2_Transmit@size 0021                 __CFG_PWRTE$ON 0000  
              __CFG_FCMEN$OFF 0000                         _count 0078                 ??_Buzzer_Init 0020  
                       _xputc 0F5A                         _xputs 0E1A                         pclath 000A  
                       status 0003                         wtemp0 007E             _Buzzer_MiliSecond 0D6E  
             __end_of_xprintf 0DCA                  _I2C_Transmit 0F2F            _LCD_CursorPosition 0E2F  
              ?_LCD_WriteData 0070            ?_Buzzer_MiliSecond 0020              ??_DAC_Initialize 0030  
             __initialization 0032                  __end_of_main 047D           ?_LCD_CursorPosition 0023  
         ??_Buzzer_MiliSecond 0022                        ??_main 015C                     ??_LCD_Put 0024  
            CPSx_Read@channel 007A                   ?_Basic_Init 0070                        _BCL1IE 0493  
                      _BCL1IF 0093                        _BCL2IE 04A1                        _BCL2IF 00A1  
              _Timer1_Handler 0D65              ___llmod@dividend 0024          __size_of_mTouch_Init 0013  
                      _CCPR2L 0298          ??_LCD_CursorPosition 0024                        _ANSELA 018C  
                      _ANSELB 018D                        _T1GCON 0019             __end_of_CPSx_Read 0EDD  
                      ?_xputc 0070                        ?_xputs 0070                        i1l3112 0DFF  
                      i1l3330 0D81                        i1l3514 0026                        i1l2806 0685  
                      i1l2830 06BB                        i1l2824 06B2                        i1l2826 06B7  
                      i1l2818 069C                        i1l2828 06B9            I2C2_Transmit@i_316 0026  
                      i1l2848 0628                        i1l2856 0631                        i1l2880 0667  
                      i1l2874 065E                        i1l2876 0663                        i1l2868 0648  
                      i1l2798 067C                        i1l2878 0665     __end_of_Buzzer_MiliSecond 0D78  
                      u227_25 0E74                        _OSCCON 0099            I2C2_Transmit@pData 0020  
              _Timer4_Handler 0D78                        _TMR1IE 0488                        _TMR1IF 0088  
                   ??_Handler 0075                        _TMR4IE 0499                        _TMR4IF 0099  
                      _TMR1ON 00C0                        _SSP1IE 048B                        _SSP1IF 008B  
                      _SSP2IE 04A0                        _SSP2IF 00A0               _mTouch_PortInit 0D9D  
               ??_Timer1_Init 0020                 ??_Timer4_Init 0020           __end_of_Buzzer_Init 0F05  
                      ___wmul 0E7C                     ??___lldiv 0028                     ??___llmod 0028  
                      _outptr 0068              I2C_Transmit@I2Cx 002E                     ?_I2C_Init 0025  
      __end_of_Timer1_Handler 0D6E              I2C_Transmit@size 002A        __end_of_Timer4_Handler 0D83  
                      xputc@c 0025                     ??_xprintf 0064       __end_of__initialization 005C  
                   ?_LCD_Init 0070               ??_LCD_WriteData 0020              __end_of_xvprintf 028A  
                  _VoltageReg 0069            Buzzer_SetDuty@duty 0070                __pcstackCOMMON 0070  
         __size_of_Basic_Init 0015                  __pidataBANK1 07E1                  __pidataBANK2 0F87  
         __end_of_Timer1_Init 0E60           __end_of_Timer4_Init 0DDD                 __end_of_xputc 0F87  
               __end_of_xputs 0E2F     Buzzer_SetDuty@CCP2CON_Pre 0074                    ??_I2C_Init 0028  
             ?_Timer1_Handler 0070           I2C1_Transmit@result 0027       __size_of_Buzzer_Handler 0015  
             ?_Timer4_Handler 0070       __end_of_mTouch_PortInit 0DAA                       ??_xputc 0024  
                     ??_xputs 0026                    __pbssBANK0 0066                    __pbssBANK1 00A0  
  __size_of_Buzzer_MiliSecond 000A                   _Buzzer_Init 0EDD                    ??_LCD_Init 0024  
     __size_of_Buzzer_SetDuty 001C                 _DAC_DataTable 028A                  I2C_Init@I2Cx 002A  
 __end_of_I2C_CommonInterrupt 0D52                  I2C_Init@mode 0026                    __pmaintext 03E4  
                     ?___wmul 0020                    __pintentry 0004                       _CCP2CON 029A  
           ?_LCD_DisplayClear 0070                       _APFCON0 011D                       _APFCON1 011E  
                     _CCPTMRS 029E            ??_LCD_DisplayClear 0023                       _CPSCON0 001E  
                     _CPSCON1 001F                       _LCD_Put 0D5E                  _xvprintf$716 0045  
                _xvprintf$717 0049                  _xvprintf$718 004B                       _SSP1ADD 0212  
                     _SSP2ADD 021A                       _SSP1BUF 0211                       _SSP2BUF 0219  
                     _SSP1MSK 0213                       _SSP2MSK 021B           I2C2_Transmit@result 0027  
                     _Handler 0004         __end_of_I2C1_Transmit 05AC         __end_of_I2C2_Transmit 0515  
                 _Timer1_Init 0E46                   _Timer4_Init 0DCA                       ___lldiv 06C3  
             __size_of___wmul 001C                       ___llmod 079E               __CFG_STVREN$OFF 0000  
                     __ptext1 0DBA                       __ptext2 0060                       __ptext3 0E1A  
                     __ptext4 0F5A                       __ptext5 0D5E                       __ptext6 0E7C  
                     __ptext7 079E                       __ptext8 06C3                       __ptext9 0DDD  
                   ?_xvprintf 002E                  ??_Basic_Init 0020                       clrloop0 0D53  
        end_of_initialization 005C              ?_mTouch_PortInit 0070                       _xprintf 0DBA  
               ?_I2C1_PinInit 0070                       init_ram 0D58                       initloop 0D59  
               ?_I2C2_PinInit 0070                   _I2C1_Config 00BE                     _CPSx_Read 0EB8  
                 _I2C2_Config 00AB                 ?_I2C1_Setting 0021               ___lldiv@divisor 0020  
               ?_I2C2_Setting 0021               ___lldiv@counter 002D             I2C_Transmit@pData 0029  
          __end_of_Basic_Init 0E1A              _DAC_VoltageTable 00D1                  __pstringtext 028A  
     __size_of_I2C1_Interrupt 0054              __CFG_FOSC$INTOSC 0000                 ??_mTouch_Init 0021  
                  ??_xvprintf 0031       __size_of_I2C2_Interrupt 0054             __size_of_I2C_Init 002A  
         I2C1_Setting@address 0024                _Buzzer_Handler 0DF0   __size_of_LCD_CursorPosition 0017  
              ??_I2C1_PinInit 0020                ??_I2C2_PinInit 0020                _Buzzer_SetDuty 0E60  
              ??_I2C1_Setting 0023                    ?_CPSx_Read 0070                ??_I2C2_Setting 0023  
               _H7826_01_Gain 0120             __size_of_LCD_Init 006F                __end_of___wmul 0E98  
                   _ConfigReg 006B              ??_Timer1_Handler 0070       __size_of_DAC_Initialize 0020  
            ??_Timer4_Handler 0070           start_initialization 0032        __end_of_Buzzer_Handler 0E05  
        I2C1_Transmit@address 0024                     _MemoryReg 00A6        __end_of_Buzzer_SetDuty 0E7C  
                ?_Buzzer_Init 0070           __end_of_mTouch_Init 0DF0           I2C2_Setting@address 0024  
             ___llmod@divisor 0020               ___llmod@counter 0029          LCD_CursorPosition@tx 0025  
        LCD_CursorPosition@ty 0023         __end_of_LCD_WriteData 1000                      ??___wmul 0024  
                 __pdataBANK1 00D1                   __pdataBANK2 0120             I2C1_Setting@Speed 0022  
                    ?_LCD_Put 0023                   __pbssCOMMON 0076                     ___latbits 0001  
               __pcstackBANK0 0020                 __pcstackBANK2 015C               ?_Buzzer_Handler 0070  
          I2C1_Transmit@i_172 0026            I2C1_Transmit@pData 0020     __size_of_LCD_DisplayClear 0010  
             ?_Buzzer_SetDuty 0070               I2C_Init@address 0025                      ?_Handler 0070  
                 ??_CPSx_Read 0070                 ?_I2C_Transmit 0028                 I2C_Init@Speed 0027  
                ?_Timer1_Init 0070                  ?_Timer4_Init 0070                      ?___lldiv 0020  
                    ?___llmod 0020                _I2C1_Interrupt 066F          __end_of_I2C1_PinInit 0D90  
__size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 0D9D          __end_of_I2C1_Setting 079E  
                    _I2C_Init 0F05          __end_of_I2C2_Setting 075A                _I2C2_Interrupt 061B  
                  _H7826_Gain 013E                   _mTouch_Init 0DDD             __size_of_xvprintf 022A  
                    ?_xprintf 005E                __size_of_xputc 002D                __size_of_xputs 0015  
                    _LCD_Init 05AC                ___wmul@product 0024                      _CPS_Data 00A0  
              ??_I2C_Transmit 002B                     clear_ram0 0D52        __end_of_I2C1_Interrupt 06C3  
                    _SSP1CON1 0215                      _SSP1CON2 0216          I2C2_Transmit@address 0024  
                    _SSP2CON1 021D                      _SSP2CON2 021E                      _SSP1STAT 0214  
                    _SSP2STAT 021C                  Handler@count 00A9             ___wmul@multiplier 0020  
              _DAC_Initialize 0E98        __end_of_I2C2_Interrupt 066F        __size_of_I2C1_Transmit 0097  
                   _xfunc_out 0066              __size_of_LCD_Put 0007        __size_of_I2C2_Transmit 0098  
                 _CPS_PreData 00A3              __size_of_Handler 002C          __size_of_Buzzer_Init 0028  
    __size_of_mTouch_PortInit 000D               ?_I2C1_Interrupt 0070        __end_of_DAC_Initialize 0EB8  
            __size_of___lldiv 0053              __size_of___llmod 0043              I2C1_Setting@mode 0021  
          LCD_WriteData@point 0022               ?_I2C2_Interrupt 0070             I2C1_Transmit@size 0021  
  __end_of_LCD_CursorPosition 0E46                      __ptext10 0D9D                      __ptext11 0DCA  
                    __ptext20 0515                      __ptext12 0E46                      __ptext21 0F05  
                    __ptext13 05AC                      __ptext30 0D78                      __ptext22 0716  
                    __ptext14 0DAA                      __ptext31 0D65                      __ptext23 0D90  
                    __ptext15 0E2F                      __ptext32 0D4C                      __ptext24 075A  
                    __ptext16 0FC3                      __ptext33 061B                      __ptext25 0D83  
                    __ptext17 0E98                      __ptext34 066F                      __ptext26 0D6E  
                    __ptext18 0F2F                      __ptext35 0EB8                      __ptext27 0EDD  
                    __ptext19 047D                      __ptext36 0DF0                      __ptext28 0E05  
                    __ptext37 0E60                  _SSP1CON1bits 0215                  _SSP1CON2bits 0216  
            _LCD_DisplayClear 0DAA                  _SSP2CON1bits 021D                  _SSP2CON2bits 021E  
            __size_of_xprintf 0010         __end_of_DAC_DataTable 02A8                 __size_of_main 0099  
               _I2C1_Transmit 0515                 _I2C2_Transmit 047D         __size_of_I2C1_PinInit 000D  
        __size_of_Timer1_Init 001A                      int$flags 007E         __size_of_I2C2_PinInit 000D  
        __size_of_Timer4_Init 0013           I2C_Transmit@address 0028         __size_of_I2C1_Setting 0044  
             ?_DAC_Initialize 0070                  _SSP1STATbits 0214                      _xfunc_in 0076  
       __size_of_I2C2_Setting 0044                  _SSP2STATbits 021C              ??_Buzzer_Handler 0075  
        __end_of_I2C_Transmit 0F5A             I2C2_Setting@Speed 0022              ??_Buzzer_SetDuty 0072  
                    _xvprintf 0060                    xprintf@arp 0065                    xprintf@fmt 005E  
                    intlevel1 0000           _I2C_CommonInterrupt 0D4C                  _I2C1_PinInit 0D83  
            ___lldiv@dividend 0024                ?_I2C1_Transmit 0020             __CFG_CLKOUTEN$OFF 0000  
                _I2C2_PinInit 0D90                  _I2C1_Setting 075A                ?_I2C2_Transmit 0020  
                _I2C2_Setting 0716                   xvprintf@arp 0030                   xvprintf@fmt 002E  
          I2C_Transmit@result 002F             ??_mTouch_PortInit 0020              I2C2_Setting@mode 0021  
        ?_I2C_CommonInterrupt 0070                    _OPTION_REG 0095              ___lldiv@quotient 0029  
                ?_mTouch_Init 0070        __size_of_LCD_WriteData 003D       __size_of_Timer1_Handler 0009  
              I2C1_Transmit@i 0025                      xputs@str 0027                     xvprintf@c 005D  
                   xvprintf@d 005C                     xvprintf@f 0058                     xvprintf@i 005A  
                   xvprintf@j 0052                     xvprintf@p 004D                     xvprintf@r 004E  
                   xvprintf@s 0035                     xvprintf@v 0054                     xvprintf@w 0050  
     __size_of_Timer4_Handler 000B  
