

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Apr 15 04:42:43 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 1.41
    50                           ; Generated 25/01/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1827 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  0111                     	;# 
   132  0112                     	;# 
   133  0113                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011B                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0191                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0199                     	;# 
   156  019A                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0219                     	;# 
   184  021A                     	;# 
   185  021B                     	;# 
   186  021C                     	;# 
   187  021D                     	;# 
   188  021E                     	;# 
   189  021F                     	;# 
   190  0291                     	;# 
   191  0291                     	;# 
   192  0292                     	;# 
   193  0293                     	;# 
   194  0294                     	;# 
   195  0295                     	;# 
   196  0295                     	;# 
   197  0296                     	;# 
   198  0298                     	;# 
   199  0298                     	;# 
   200  0299                     	;# 
   201  029A                     	;# 
   202  029B                     	;# 
   203  029C                     	;# 
   204  029C                     	;# 
   205  029D                     	;# 
   206  029E                     	;# 
   207  029E                     	;# 
   208  0311                     	;# 
   209  0311                     	;# 
   210  0312                     	;# 
   211  0313                     	;# 
   212  0318                     	;# 
   213  0318                     	;# 
   214  0319                     	;# 
   215  031A                     	;# 
   216  0394                     	;# 
   217  0395                     	;# 
   218  0396                     	;# 
   219  039A                     	;# 
   220  039C                     	;# 
   221  039D                     	;# 
   222  039E                     	;# 
   223  039F                     	;# 
   224  0415                     	;# 
   225  0416                     	;# 
   226  0417                     	;# 
   227  041C                     	;# 
   228  041D                     	;# 
   229  041E                     	;# 
   230  0FE4                     	;# 
   231  0FE5                     	;# 
   232  0FE6                     	;# 
   233  0FE7                     	;# 
   234  0FE8                     	;# 
   235  0FE9                     	;# 
   236  0FEA                     	;# 
   237  0FEB                     	;# 
   238  0FED                     	;# 
   239  0FEE                     	;# 
   240  0FEF                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  0111                     	;# 
   290  0112                     	;# 
   291  0113                     	;# 
   292  0114                     	;# 
   293  0115                     	;# 
   294  0116                     	;# 
   295  0117                     	;# 
   296  0118                     	;# 
   297  0119                     	;# 
   298  011A                     	;# 
   299  011B                     	;# 
   300  011D                     	;# 
   301  011E                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0191                     	;# 
   305  0191                     	;# 
   306  0192                     	;# 
   307  0193                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0194                     	;# 
   311  0195                     	;# 
   312  0196                     	;# 
   313  0199                     	;# 
   314  019A                     	;# 
   315  019B                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019C                     	;# 
   320  019C                     	;# 
   321  019D                     	;# 
   322  019E                     	;# 
   323  019F                     	;# 
   324  020C                     	;# 
   325  020D                     	;# 
   326  0211                     	;# 
   327  0211                     	;# 
   328  0212                     	;# 
   329  0212                     	;# 
   330  0213                     	;# 
   331  0213                     	;# 
   332  0214                     	;# 
   333  0214                     	;# 
   334  0215                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0216                     	;# 
   338  0216                     	;# 
   339  0217                     	;# 
   340  0217                     	;# 
   341  0219                     	;# 
   342  021A                     	;# 
   343  021B                     	;# 
   344  021C                     	;# 
   345  021D                     	;# 
   346  021E                     	;# 
   347  021F                     	;# 
   348  0291                     	;# 
   349  0291                     	;# 
   350  0292                     	;# 
   351  0293                     	;# 
   352  0294                     	;# 
   353  0295                     	;# 
   354  0295                     	;# 
   355  0296                     	;# 
   356  0298                     	;# 
   357  0298                     	;# 
   358  0299                     	;# 
   359  029A                     	;# 
   360  029B                     	;# 
   361  029C                     	;# 
   362  029C                     	;# 
   363  029D                     	;# 
   364  029E                     	;# 
   365  029E                     	;# 
   366  0311                     	;# 
   367  0311                     	;# 
   368  0312                     	;# 
   369  0313                     	;# 
   370  0318                     	;# 
   371  0318                     	;# 
   372  0319                     	;# 
   373  031A                     	;# 
   374  0394                     	;# 
   375  0395                     	;# 
   376  0396                     	;# 
   377  039A                     	;# 
   378  039C                     	;# 
   379  039D                     	;# 
   380  039E                     	;# 
   381  039F                     	;# 
   382  0415                     	;# 
   383  0416                     	;# 
   384  0417                     	;# 
   385  041C                     	;# 
   386  041D                     	;# 
   387  041E                     	;# 
   388  0FE4                     	;# 
   389  0FE5                     	;# 
   390  0FE6                     	;# 
   391  0FE7                     	;# 
   392  0FE8                     	;# 
   393  0FE9                     	;# 
   394  0FEA                     	;# 
   395  0FEB                     	;# 
   396  0FED                     	;# 
   397  0FEE                     	;# 
   398  0FEF                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0008                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000D                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0013                     	;# 
   416  0014                     	;# 
   417  0015                     	;# 
   418  0016                     	;# 
   419  0016                     	;# 
   420  0017                     	;# 
   421  0018                     	;# 
   422  0019                     	;# 
   423  001A                     	;# 
   424  001B                     	;# 
   425  001C                     	;# 
   426  001E                     	;# 
   427  001F                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  0111                     	;# 
   448  0112                     	;# 
   449  0113                     	;# 
   450  0114                     	;# 
   451  0115                     	;# 
   452  0116                     	;# 
   453  0117                     	;# 
   454  0118                     	;# 
   455  0119                     	;# 
   456  011A                     	;# 
   457  011B                     	;# 
   458  011D                     	;# 
   459  011E                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  0191                     	;# 
   463  0191                     	;# 
   464  0192                     	;# 
   465  0193                     	;# 
   466  0193                     	;# 
   467  0193                     	;# 
   468  0194                     	;# 
   469  0195                     	;# 
   470  0196                     	;# 
   471  0199                     	;# 
   472  019A                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019C                     	;# 
   478  019C                     	;# 
   479  019D                     	;# 
   480  019E                     	;# 
   481  019F                     	;# 
   482  020C                     	;# 
   483  020D                     	;# 
   484  0211                     	;# 
   485  0211                     	;# 
   486  0212                     	;# 
   487  0212                     	;# 
   488  0213                     	;# 
   489  0213                     	;# 
   490  0214                     	;# 
   491  0214                     	;# 
   492  0215                     	;# 
   493  0215                     	;# 
   494  0215                     	;# 
   495  0216                     	;# 
   496  0216                     	;# 
   497  0217                     	;# 
   498  0217                     	;# 
   499  0219                     	;# 
   500  021A                     	;# 
   501  021B                     	;# 
   502  021C                     	;# 
   503  021D                     	;# 
   504  021E                     	;# 
   505  021F                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0294                     	;# 
   511  0295                     	;# 
   512  0295                     	;# 
   513  0296                     	;# 
   514  0298                     	;# 
   515  0298                     	;# 
   516  0299                     	;# 
   517  029A                     	;# 
   518  029B                     	;# 
   519  029C                     	;# 
   520  029C                     	;# 
   521  029D                     	;# 
   522  029E                     	;# 
   523  029E                     	;# 
   524  0311                     	;# 
   525  0311                     	;# 
   526  0312                     	;# 
   527  0313                     	;# 
   528  0318                     	;# 
   529  0318                     	;# 
   530  0319                     	;# 
   531  031A                     	;# 
   532  0394                     	;# 
   533  0395                     	;# 
   534  0396                     	;# 
   535  039A                     	;# 
   536  039C                     	;# 
   537  039D                     	;# 
   538  039E                     	;# 
   539  039F                     	;# 
   540  0415                     	;# 
   541  0416                     	;# 
   542  0417                     	;# 
   543  041C                     	;# 
   544  041D                     	;# 
   545  041E                     	;# 
   546  0FE4                     	;# 
   547  0FE5                     	;# 
   548  0FE6                     	;# 
   549  0FE7                     	;# 
   550  0FE8                     	;# 
   551  0FE9                     	;# 
   552  0FEA                     	;# 
   553  0FEB                     	;# 
   554  0FED                     	;# 
   555  0FEE                     	;# 
   556  0FEF                     	;# 
   557  0000                     	;# 
   558  0001                     	;# 
   559  0002                     	;# 
   560  0003                     	;# 
   561  0004                     	;# 
   562  0005                     	;# 
   563  0006                     	;# 
   564  0007                     	;# 
   565  0008                     	;# 
   566  0009                     	;# 
   567  000A                     	;# 
   568  000B                     	;# 
   569  000C                     	;# 
   570  000D                     	;# 
   571  0011                     	;# 
   572  0012                     	;# 
   573  0013                     	;# 
   574  0014                     	;# 
   575  0015                     	;# 
   576  0016                     	;# 
   577  0016                     	;# 
   578  0017                     	;# 
   579  0018                     	;# 
   580  0019                     	;# 
   581  001A                     	;# 
   582  001B                     	;# 
   583  001C                     	;# 
   584  001E                     	;# 
   585  001F                     	;# 
   586  008C                     	;# 
   587  008D                     	;# 
   588  0091                     	;# 
   589  0092                     	;# 
   590  0093                     	;# 
   591  0094                     	;# 
   592  0095                     	;# 
   593  0096                     	;# 
   594  0097                     	;# 
   595  0098                     	;# 
   596  0099                     	;# 
   597  009A                     	;# 
   598  009B                     	;# 
   599  009B                     	;# 
   600  009C                     	;# 
   601  009D                     	;# 
   602  009E                     	;# 
   603  010C                     	;# 
   604  010D                     	;# 
   605  0111                     	;# 
   606  0112                     	;# 
   607  0113                     	;# 
   608  0114                     	;# 
   609  0115                     	;# 
   610  0116                     	;# 
   611  0117                     	;# 
   612  0118                     	;# 
   613  0119                     	;# 
   614  011A                     	;# 
   615  011B                     	;# 
   616  011D                     	;# 
   617  011E                     	;# 
   618  018C                     	;# 
   619  018D                     	;# 
   620  0191                     	;# 
   621  0191                     	;# 
   622  0192                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0193                     	;# 
   626  0194                     	;# 
   627  0195                     	;# 
   628  0196                     	;# 
   629  0199                     	;# 
   630  019A                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019C                     	;# 
   636  019C                     	;# 
   637  019D                     	;# 
   638  019E                     	;# 
   639  019F                     	;# 
   640  020C                     	;# 
   641  020D                     	;# 
   642  0211                     	;# 
   643  0211                     	;# 
   644  0212                     	;# 
   645  0212                     	;# 
   646  0213                     	;# 
   647  0213                     	;# 
   648  0214                     	;# 
   649  0214                     	;# 
   650  0215                     	;# 
   651  0215                     	;# 
   652  0215                     	;# 
   653  0216                     	;# 
   654  0216                     	;# 
   655  0217                     	;# 
   656  0217                     	;# 
   657  0219                     	;# 
   658  021A                     	;# 
   659  021B                     	;# 
   660  021C                     	;# 
   661  021D                     	;# 
   662  021E                     	;# 
   663  021F                     	;# 
   664  0291                     	;# 
   665  0291                     	;# 
   666  0292                     	;# 
   667  0293                     	;# 
   668  0294                     	;# 
   669  0295                     	;# 
   670  0295                     	;# 
   671  0296                     	;# 
   672  0298                     	;# 
   673  0298                     	;# 
   674  0299                     	;# 
   675  029A                     	;# 
   676  029B                     	;# 
   677  029C                     	;# 
   678  029C                     	;# 
   679  029D                     	;# 
   680  029E                     	;# 
   681  029E                     	;# 
   682  0311                     	;# 
   683  0311                     	;# 
   684  0312                     	;# 
   685  0313                     	;# 
   686  0318                     	;# 
   687  0318                     	;# 
   688  0319                     	;# 
   689  031A                     	;# 
   690  0394                     	;# 
   691  0395                     	;# 
   692  0396                     	;# 
   693  039A                     	;# 
   694  039C                     	;# 
   695  039D                     	;# 
   696  039E                     	;# 
   697  039F                     	;# 
   698  0415                     	;# 
   699  0416                     	;# 
   700  0417                     	;# 
   701  041C                     	;# 
   702  041D                     	;# 
   703  041E                     	;# 
   704  0FE4                     	;# 
   705  0FE5                     	;# 
   706  0FE6                     	;# 
   707  0FE7                     	;# 
   708  0FE8                     	;# 
   709  0FE9                     	;# 
   710  0FEA                     	;# 
   711  0FEB                     	;# 
   712  0FED                     	;# 
   713  0FEE                     	;# 
   714  0FEF                     	;# 
   715  0000                     	;# 
   716  0001                     	;# 
   717  0002                     	;# 
   718  0003                     	;# 
   719  0004                     	;# 
   720  0005                     	;# 
   721  0006                     	;# 
   722  0007                     	;# 
   723  0008                     	;# 
   724  0009                     	;# 
   725  000A                     	;# 
   726  000B                     	;# 
   727  000C                     	;# 
   728  000D                     	;# 
   729  0011                     	;# 
   730  0012                     	;# 
   731  0013                     	;# 
   732  0014                     	;# 
   733  0015                     	;# 
   734  0016                     	;# 
   735  0016                     	;# 
   736  0017                     	;# 
   737  0018                     	;# 
   738  0019                     	;# 
   739  001A                     	;# 
   740  001B                     	;# 
   741  001C                     	;# 
   742  001E                     	;# 
   743  001F                     	;# 
   744  008C                     	;# 
   745  008D                     	;# 
   746  0091                     	;# 
   747  0092                     	;# 
   748  0093                     	;# 
   749  0094                     	;# 
   750  0095                     	;# 
   751  0096                     	;# 
   752  0097                     	;# 
   753  0098                     	;# 
   754  0099                     	;# 
   755  009A                     	;# 
   756  009B                     	;# 
   757  009B                     	;# 
   758  009C                     	;# 
   759  009D                     	;# 
   760  009E                     	;# 
   761  010C                     	;# 
   762  010D                     	;# 
   763  0111                     	;# 
   764  0112                     	;# 
   765  0113                     	;# 
   766  0114                     	;# 
   767  0115                     	;# 
   768  0116                     	;# 
   769  0117                     	;# 
   770  0118                     	;# 
   771  0119                     	;# 
   772  011A                     	;# 
   773  011B                     	;# 
   774  011D                     	;# 
   775  011E                     	;# 
   776  018C                     	;# 
   777  018D                     	;# 
   778  0191                     	;# 
   779  0191                     	;# 
   780  0192                     	;# 
   781  0193                     	;# 
   782  0193                     	;# 
   783  0193                     	;# 
   784  0194                     	;# 
   785  0195                     	;# 
   786  0196                     	;# 
   787  0199                     	;# 
   788  019A                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019B                     	;# 
   793  019C                     	;# 
   794  019C                     	;# 
   795  019D                     	;# 
   796  019E                     	;# 
   797  019F                     	;# 
   798  020C                     	;# 
   799  020D                     	;# 
   800  0211                     	;# 
   801  0211                     	;# 
   802  0212                     	;# 
   803  0212                     	;# 
   804  0213                     	;# 
   805  0213                     	;# 
   806  0214                     	;# 
   807  0214                     	;# 
   808  0215                     	;# 
   809  0215                     	;# 
   810  0215                     	;# 
   811  0216                     	;# 
   812  0216                     	;# 
   813  0217                     	;# 
   814  0217                     	;# 
   815  0219                     	;# 
   816  021A                     	;# 
   817  021B                     	;# 
   818  021C                     	;# 
   819  021D                     	;# 
   820  021E                     	;# 
   821  021F                     	;# 
   822  0291                     	;# 
   823  0291                     	;# 
   824  0292                     	;# 
   825  0293                     	;# 
   826  0294                     	;# 
   827  0295                     	;# 
   828  0295                     	;# 
   829  0296                     	;# 
   830  0298                     	;# 
   831  0298                     	;# 
   832  0299                     	;# 
   833  029A                     	;# 
   834  029B                     	;# 
   835  029C                     	;# 
   836  029C                     	;# 
   837  029D                     	;# 
   838  029E                     	;# 
   839  029E                     	;# 
   840  0311                     	;# 
   841  0311                     	;# 
   842  0312                     	;# 
   843  0313                     	;# 
   844  0318                     	;# 
   845  0318                     	;# 
   846  0319                     	;# 
   847  031A                     	;# 
   848  0394                     	;# 
   849  0395                     	;# 
   850  0396                     	;# 
   851  039A                     	;# 
   852  039C                     	;# 
   853  039D                     	;# 
   854  039E                     	;# 
   855  039F                     	;# 
   856  0415                     	;# 
   857  0416                     	;# 
   858  0417                     	;# 
   859  041C                     	;# 
   860  041D                     	;# 
   861  041E                     	;# 
   862  0FE4                     	;# 
   863  0FE5                     	;# 
   864  0FE6                     	;# 
   865  0FE7                     	;# 
   866  0FE8                     	;# 
   867  0FE9                     	;# 
   868  0FEA                     	;# 
   869  0FEB                     	;# 
   870  0FED                     	;# 
   871  0FEE                     	;# 
   872  0FEF                     	;# 
   873  0000                     	;# 
   874  0001                     	;# 
   875  0002                     	;# 
   876  0003                     	;# 
   877  0004                     	;# 
   878  0005                     	;# 
   879  0006                     	;# 
   880  0007                     	;# 
   881  0008                     	;# 
   882  0009                     	;# 
   883  000A                     	;# 
   884  000B                     	;# 
   885  000C                     	;# 
   886  000D                     	;# 
   887  0011                     	;# 
   888  0012                     	;# 
   889  0013                     	;# 
   890  0014                     	;# 
   891  0015                     	;# 
   892  0016                     	;# 
   893  0016                     	;# 
   894  0017                     	;# 
   895  0018                     	;# 
   896  0019                     	;# 
   897  001A                     	;# 
   898  001B                     	;# 
   899  001C                     	;# 
   900  001E                     	;# 
   901  001F                     	;# 
   902  008C                     	;# 
   903  008D                     	;# 
   904  0091                     	;# 
   905  0092                     	;# 
   906  0093                     	;# 
   907  0094                     	;# 
   908  0095                     	;# 
   909  0096                     	;# 
   910  0097                     	;# 
   911  0098                     	;# 
   912  0099                     	;# 
   913  009A                     	;# 
   914  009B                     	;# 
   915  009B                     	;# 
   916  009C                     	;# 
   917  009D                     	;# 
   918  009E                     	;# 
   919  010C                     	;# 
   920  010D                     	;# 
   921  0111                     	;# 
   922  0112                     	;# 
   923  0113                     	;# 
   924  0114                     	;# 
   925  0115                     	;# 
   926  0116                     	;# 
   927  0117                     	;# 
   928  0118                     	;# 
   929  0119                     	;# 
   930  011A                     	;# 
   931  011B                     	;# 
   932  011D                     	;# 
   933  011E                     	;# 
   934  018C                     	;# 
   935  018D                     	;# 
   936  0191                     	;# 
   937  0191                     	;# 
   938  0192                     	;# 
   939  0193                     	;# 
   940  0193                     	;# 
   941  0193                     	;# 
   942  0194                     	;# 
   943  0195                     	;# 
   944  0196                     	;# 
   945  0199                     	;# 
   946  019A                     	;# 
   947  019B                     	;# 
   948  019B                     	;# 
   949  019B                     	;# 
   950  019B                     	;# 
   951  019C                     	;# 
   952  019C                     	;# 
   953  019D                     	;# 
   954  019E                     	;# 
   955  019F                     	;# 
   956  020C                     	;# 
   957  020D                     	;# 
   958  0211                     	;# 
   959  0211                     	;# 
   960  0212                     	;# 
   961  0212                     	;# 
   962  0213                     	;# 
   963  0213                     	;# 
   964  0214                     	;# 
   965  0214                     	;# 
   966  0215                     	;# 
   967  0215                     	;# 
   968  0215                     	;# 
   969  0216                     	;# 
   970  0216                     	;# 
   971  0217                     	;# 
   972  0217                     	;# 
   973  0219                     	;# 
   974  021A                     	;# 
   975  021B                     	;# 
   976  021C                     	;# 
   977  021D                     	;# 
   978  021E                     	;# 
   979  021F                     	;# 
   980  0291                     	;# 
   981  0291                     	;# 
   982  0292                     	;# 
   983  0293                     	;# 
   984  0294                     	;# 
   985  0295                     	;# 
   986  0295                     	;# 
   987  0296                     	;# 
   988  0298                     	;# 
   989  0298                     	;# 
   990  0299                     	;# 
   991  029A                     	;# 
   992  029B                     	;# 
   993  029C                     	;# 
   994  029C                     	;# 
   995  029D                     	;# 
   996  029E                     	;# 
   997  029E                     	;# 
   998  0311                     	;# 
   999  0311                     	;# 
  1000  0312                     	;# 
  1001  0313                     	;# 
  1002  0318                     	;# 
  1003  0318                     	;# 
  1004  0319                     	;# 
  1005  031A                     	;# 
  1006  0394                     	;# 
  1007  0395                     	;# 
  1008  0396                     	;# 
  1009  039A                     	;# 
  1010  039C                     	;# 
  1011  039D                     	;# 
  1012  039E                     	;# 
  1013  039F                     	;# 
  1014  0415                     	;# 
  1015  0416                     	;# 
  1016  0417                     	;# 
  1017  041C                     	;# 
  1018  041D                     	;# 
  1019  041E                     	;# 
  1020  0FE4                     	;# 
  1021  0FE5                     	;# 
  1022  0FE6                     	;# 
  1023  0FE7                     	;# 
  1024  0FE8                     	;# 
  1025  0FE9                     	;# 
  1026  0FEA                     	;# 
  1027  0FEB                     	;# 
  1028  0FED                     	;# 
  1029  0FEE                     	;# 
  1030  0FEF                     	;# 
  1031  0000                     	;# 
  1032  0001                     	;# 
  1033  0002                     	;# 
  1034  0003                     	;# 
  1035  0004                     	;# 
  1036  0005                     	;# 
  1037  0006                     	;# 
  1038  0007                     	;# 
  1039  0008                     	;# 
  1040  0009                     	;# 
  1041  000A                     	;# 
  1042  000B                     	;# 
  1043  000C                     	;# 
  1044  000D                     	;# 
  1045  0011                     	;# 
  1046  0012                     	;# 
  1047  0013                     	;# 
  1048  0014                     	;# 
  1049  0015                     	;# 
  1050  0016                     	;# 
  1051  0016                     	;# 
  1052  0017                     	;# 
  1053  0018                     	;# 
  1054  0019                     	;# 
  1055  001A                     	;# 
  1056  001B                     	;# 
  1057  001C                     	;# 
  1058  001E                     	;# 
  1059  001F                     	;# 
  1060  008C                     	;# 
  1061  008D                     	;# 
  1062  0091                     	;# 
  1063  0092                     	;# 
  1064  0093                     	;# 
  1065  0094                     	;# 
  1066  0095                     	;# 
  1067  0096                     	;# 
  1068  0097                     	;# 
  1069  0098                     	;# 
  1070  0099                     	;# 
  1071  009A                     	;# 
  1072  009B                     	;# 
  1073  009B                     	;# 
  1074  009C                     	;# 
  1075  009D                     	;# 
  1076  009E                     	;# 
  1077  010C                     	;# 
  1078  010D                     	;# 
  1079  0111                     	;# 
  1080  0112                     	;# 
  1081  0113                     	;# 
  1082  0114                     	;# 
  1083  0115                     	;# 
  1084  0116                     	;# 
  1085  0117                     	;# 
  1086  0118                     	;# 
  1087  0119                     	;# 
  1088  011A                     	;# 
  1089  011B                     	;# 
  1090  011D                     	;# 
  1091  011E                     	;# 
  1092  018C                     	;# 
  1093  018D                     	;# 
  1094  0191                     	;# 
  1095  0191                     	;# 
  1096  0192                     	;# 
  1097  0193                     	;# 
  1098  0193                     	;# 
  1099  0193                     	;# 
  1100  0194                     	;# 
  1101  0195                     	;# 
  1102  0196                     	;# 
  1103  0199                     	;# 
  1104  019A                     	;# 
  1105  019B                     	;# 
  1106  019B                     	;# 
  1107  019B                     	;# 
  1108  019B                     	;# 
  1109  019C                     	;# 
  1110  019C                     	;# 
  1111  019D                     	;# 
  1112  019E                     	;# 
  1113  019F                     	;# 
  1114  020C                     	;# 
  1115  020D                     	;# 
  1116  0211                     	;# 
  1117  0211                     	;# 
  1118  0212                     	;# 
  1119  0212                     	;# 
  1120  0213                     	;# 
  1121  0213                     	;# 
  1122  0214                     	;# 
  1123  0214                     	;# 
  1124  0215                     	;# 
  1125  0215                     	;# 
  1126  0215                     	;# 
  1127  0216                     	;# 
  1128  0216                     	;# 
  1129  0217                     	;# 
  1130  0217                     	;# 
  1131  0219                     	;# 
  1132  021A                     	;# 
  1133  021B                     	;# 
  1134  021C                     	;# 
  1135  021D                     	;# 
  1136  021E                     	;# 
  1137  021F                     	;# 
  1138  0291                     	;# 
  1139  0291                     	;# 
  1140  0292                     	;# 
  1141  0293                     	;# 
  1142  0294                     	;# 
  1143  0295                     	;# 
  1144  0295                     	;# 
  1145  0296                     	;# 
  1146  0298                     	;# 
  1147  0298                     	;# 
  1148  0299                     	;# 
  1149  029A                     	;# 
  1150  029B                     	;# 
  1151  029C                     	;# 
  1152  029C                     	;# 
  1153  029D                     	;# 
  1154  029E                     	;# 
  1155  029E                     	;# 
  1156  0311                     	;# 
  1157  0311                     	;# 
  1158  0312                     	;# 
  1159  0313                     	;# 
  1160  0318                     	;# 
  1161  0318                     	;# 
  1162  0319                     	;# 
  1163  031A                     	;# 
  1164  0394                     	;# 
  1165  0395                     	;# 
  1166  0396                     	;# 
  1167  039A                     	;# 
  1168  039C                     	;# 
  1169  039D                     	;# 
  1170  039E                     	;# 
  1171  039F                     	;# 
  1172  0415                     	;# 
  1173  0416                     	;# 
  1174  0417                     	;# 
  1175  041C                     	;# 
  1176  041D                     	;# 
  1177  041E                     	;# 
  1178  0FE4                     	;# 
  1179  0FE5                     	;# 
  1180  0FE6                     	;# 
  1181  0FE7                     	;# 
  1182  0FE8                     	;# 
  1183  0FE9                     	;# 
  1184  0FEA                     	;# 
  1185  0FEB                     	;# 
  1186  0FED                     	;# 
  1187  0FEE                     	;# 
  1188  0FEF                     	;# 
  1189  0000                     	;# 
  1190  0001                     	;# 
  1191  0002                     	;# 
  1192  0003                     	;# 
  1193  0004                     	;# 
  1194  0005                     	;# 
  1195  0006                     	;# 
  1196  0007                     	;# 
  1197  0008                     	;# 
  1198  0009                     	;# 
  1199  000A                     	;# 
  1200  000B                     	;# 
  1201  000C                     	;# 
  1202  000D                     	;# 
  1203  0011                     	;# 
  1204  0012                     	;# 
  1205  0013                     	;# 
  1206  0014                     	;# 
  1207  0015                     	;# 
  1208  0016                     	;# 
  1209  0016                     	;# 
  1210  0017                     	;# 
  1211  0018                     	;# 
  1212  0019                     	;# 
  1213  001A                     	;# 
  1214  001B                     	;# 
  1215  001C                     	;# 
  1216  001E                     	;# 
  1217  001F                     	;# 
  1218  008C                     	;# 
  1219  008D                     	;# 
  1220  0091                     	;# 
  1221  0092                     	;# 
  1222  0093                     	;# 
  1223  0094                     	;# 
  1224  0095                     	;# 
  1225  0096                     	;# 
  1226  0097                     	;# 
  1227  0098                     	;# 
  1228  0099                     	;# 
  1229  009A                     	;# 
  1230  009B                     	;# 
  1231  009B                     	;# 
  1232  009C                     	;# 
  1233  009D                     	;# 
  1234  009E                     	;# 
  1235  010C                     	;# 
  1236  010D                     	;# 
  1237  0111                     	;# 
  1238  0112                     	;# 
  1239  0113                     	;# 
  1240  0114                     	;# 
  1241  0115                     	;# 
  1242  0116                     	;# 
  1243  0117                     	;# 
  1244  0118                     	;# 
  1245  0119                     	;# 
  1246  011A                     	;# 
  1247  011B                     	;# 
  1248  011D                     	;# 
  1249  011E                     	;# 
  1250  018C                     	;# 
  1251  018D                     	;# 
  1252  0191                     	;# 
  1253  0191                     	;# 
  1254  0192                     	;# 
  1255  0193                     	;# 
  1256  0193                     	;# 
  1257  0193                     	;# 
  1258  0194                     	;# 
  1259  0195                     	;# 
  1260  0196                     	;# 
  1261  0199                     	;# 
  1262  019A                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019C                     	;# 
  1268  019C                     	;# 
  1269  019D                     	;# 
  1270  019E                     	;# 
  1271  019F                     	;# 
  1272  020C                     	;# 
  1273  020D                     	;# 
  1274  0211                     	;# 
  1275  0211                     	;# 
  1276  0212                     	;# 
  1277  0212                     	;# 
  1278  0213                     	;# 
  1279  0213                     	;# 
  1280  0214                     	;# 
  1281  0214                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0215                     	;# 
  1285  0216                     	;# 
  1286  0216                     	;# 
  1287  0217                     	;# 
  1288  0217                     	;# 
  1289  0219                     	;# 
  1290  021A                     	;# 
  1291  021B                     	;# 
  1292  021C                     	;# 
  1293  021D                     	;# 
  1294  021E                     	;# 
  1295  021F                     	;# 
  1296  0291                     	;# 
  1297  0291                     	;# 
  1298  0292                     	;# 
  1299  0293                     	;# 
  1300  0294                     	;# 
  1301  0295                     	;# 
  1302  0295                     	;# 
  1303  0296                     	;# 
  1304  0298                     	;# 
  1305  0298                     	;# 
  1306  0299                     	;# 
  1307  029A                     	;# 
  1308  029B                     	;# 
  1309  029C                     	;# 
  1310  029C                     	;# 
  1311  029D                     	;# 
  1312  029E                     	;# 
  1313  029E                     	;# 
  1314  0311                     	;# 
  1315  0311                     	;# 
  1316  0312                     	;# 
  1317  0313                     	;# 
  1318  0318                     	;# 
  1319  0318                     	;# 
  1320  0319                     	;# 
  1321  031A                     	;# 
  1322  0394                     	;# 
  1323  0395                     	;# 
  1324  0396                     	;# 
  1325  039A                     	;# 
  1326  039C                     	;# 
  1327  039D                     	;# 
  1328  039E                     	;# 
  1329  039F                     	;# 
  1330  0415                     	;# 
  1331  0416                     	;# 
  1332  0417                     	;# 
  1333  041C                     	;# 
  1334  041D                     	;# 
  1335  041E                     	;# 
  1336  0FE4                     	;# 
  1337  0FE5                     	;# 
  1338  0FE6                     	;# 
  1339  0FE7                     	;# 
  1340  0FE8                     	;# 
  1341  0FE9                     	;# 
  1342  0FEA                     	;# 
  1343  0FEB                     	;# 
  1344  0FED                     	;# 
  1345  0FEE                     	;# 
  1346  0FEF                     	;# 
  1347  0000                     	;# 
  1348  0001                     	;# 
  1349  0002                     	;# 
  1350  0003                     	;# 
  1351  0004                     	;# 
  1352  0005                     	;# 
  1353  0006                     	;# 
  1354  0007                     	;# 
  1355  0008                     	;# 
  1356  0009                     	;# 
  1357  000A                     	;# 
  1358  000B                     	;# 
  1359  000C                     	;# 
  1360  000D                     	;# 
  1361  0011                     	;# 
  1362  0012                     	;# 
  1363  0013                     	;# 
  1364  0014                     	;# 
  1365  0015                     	;# 
  1366  0016                     	;# 
  1367  0016                     	;# 
  1368  0017                     	;# 
  1369  0018                     	;# 
  1370  0019                     	;# 
  1371  001A                     	;# 
  1372  001B                     	;# 
  1373  001C                     	;# 
  1374  001E                     	;# 
  1375  001F                     	;# 
  1376  008C                     	;# 
  1377  008D                     	;# 
  1378  0091                     	;# 
  1379  0092                     	;# 
  1380  0093                     	;# 
  1381  0094                     	;# 
  1382  0095                     	;# 
  1383  0096                     	;# 
  1384  0097                     	;# 
  1385  0098                     	;# 
  1386  0099                     	;# 
  1387  009A                     	;# 
  1388  009B                     	;# 
  1389  009B                     	;# 
  1390  009C                     	;# 
  1391  009D                     	;# 
  1392  009E                     	;# 
  1393  010C                     	;# 
  1394  010D                     	;# 
  1395  0111                     	;# 
  1396  0112                     	;# 
  1397  0113                     	;# 
  1398  0114                     	;# 
  1399  0115                     	;# 
  1400  0116                     	;# 
  1401  0117                     	;# 
  1402  0118                     	;# 
  1403  0119                     	;# 
  1404  011A                     	;# 
  1405  011B                     	;# 
  1406  011D                     	;# 
  1407  011E                     	;# 
  1408  018C                     	;# 
  1409  018D                     	;# 
  1410  0191                     	;# 
  1411  0191                     	;# 
  1412  0192                     	;# 
  1413  0193                     	;# 
  1414  0193                     	;# 
  1415  0193                     	;# 
  1416  0194                     	;# 
  1417  0195                     	;# 
  1418  0196                     	;# 
  1419  0199                     	;# 
  1420  019A                     	;# 
  1421  019B                     	;# 
  1422  019B                     	;# 
  1423  019B                     	;# 
  1424  019B                     	;# 
  1425  019C                     	;# 
  1426  019C                     	;# 
  1427  019D                     	;# 
  1428  019E                     	;# 
  1429  019F                     	;# 
  1430  020C                     	;# 
  1431  020D                     	;# 
  1432  0211                     	;# 
  1433  0211                     	;# 
  1434  0212                     	;# 
  1435  0212                     	;# 
  1436  0213                     	;# 
  1437  0213                     	;# 
  1438  0214                     	;# 
  1439  0214                     	;# 
  1440  0215                     	;# 
  1441  0215                     	;# 
  1442  0215                     	;# 
  1443  0216                     	;# 
  1444  0216                     	;# 
  1445  0217                     	;# 
  1446  0217                     	;# 
  1447  0219                     	;# 
  1448  021A                     	;# 
  1449  021B                     	;# 
  1450  021C                     	;# 
  1451  021D                     	;# 
  1452  021E                     	;# 
  1453  021F                     	;# 
  1454  0291                     	;# 
  1455  0291                     	;# 
  1456  0292                     	;# 
  1457  0293                     	;# 
  1458  0294                     	;# 
  1459  0295                     	;# 
  1460  0295                     	;# 
  1461  0296                     	;# 
  1462  0298                     	;# 
  1463  0298                     	;# 
  1464  0299                     	;# 
  1465  029A                     	;# 
  1466  029B                     	;# 
  1467  029C                     	;# 
  1468  029C                     	;# 
  1469  029D                     	;# 
  1470  029E                     	;# 
  1471  029E                     	;# 
  1472  0311                     	;# 
  1473  0311                     	;# 
  1474  0312                     	;# 
  1475  0313                     	;# 
  1476  0318                     	;# 
  1477  0318                     	;# 
  1478  0319                     	;# 
  1479  031A                     	;# 
  1480  0394                     	;# 
  1481  0395                     	;# 
  1482  0396                     	;# 
  1483  039A                     	;# 
  1484  039C                     	;# 
  1485  039D                     	;# 
  1486  039E                     	;# 
  1487  039F                     	;# 
  1488  0415                     	;# 
  1489  0416                     	;# 
  1490  0417                     	;# 
  1491  041C                     	;# 
  1492  041D                     	;# 
  1493  041E                     	;# 
  1494  0FE4                     	;# 
  1495  0FE5                     	;# 
  1496  0FE6                     	;# 
  1497  0FE7                     	;# 
  1498  0FE8                     	;# 
  1499  0FE9                     	;# 
  1500  0FEA                     	;# 
  1501  0FEB                     	;# 
  1502  0FED                     	;# 
  1503  0FEE                     	;# 
  1504  0FEF                     	;# 
  1505  0000                     	;# 
  1506  0001                     	;# 
  1507  0002                     	;# 
  1508  0003                     	;# 
  1509  0004                     	;# 
  1510  0005                     	;# 
  1511  0006                     	;# 
  1512  0007                     	;# 
  1513  0008                     	;# 
  1514  0009                     	;# 
  1515  000A                     	;# 
  1516  000B                     	;# 
  1517  000C                     	;# 
  1518  000D                     	;# 
  1519  0011                     	;# 
  1520  0012                     	;# 
  1521  0013                     	;# 
  1522  0014                     	;# 
  1523  0015                     	;# 
  1524  0016                     	;# 
  1525  0016                     	;# 
  1526  0017                     	;# 
  1527  0018                     	;# 
  1528  0019                     	;# 
  1529  001A                     	;# 
  1530  001B                     	;# 
  1531  001C                     	;# 
  1532  001E                     	;# 
  1533  001F                     	;# 
  1534  008C                     	;# 
  1535  008D                     	;# 
  1536  0091                     	;# 
  1537  0092                     	;# 
  1538  0093                     	;# 
  1539  0094                     	;# 
  1540  0095                     	;# 
  1541  0096                     	;# 
  1542  0097                     	;# 
  1543  0098                     	;# 
  1544  0099                     	;# 
  1545  009A                     	;# 
  1546  009B                     	;# 
  1547  009B                     	;# 
  1548  009C                     	;# 
  1549  009D                     	;# 
  1550  009E                     	;# 
  1551  010C                     	;# 
  1552  010D                     	;# 
  1553  0111                     	;# 
  1554  0112                     	;# 
  1555  0113                     	;# 
  1556  0114                     	;# 
  1557  0115                     	;# 
  1558  0116                     	;# 
  1559  0117                     	;# 
  1560  0118                     	;# 
  1561  0119                     	;# 
  1562  011A                     	;# 
  1563  011B                     	;# 
  1564  011D                     	;# 
  1565  011E                     	;# 
  1566  018C                     	;# 
  1567  018D                     	;# 
  1568  0191                     	;# 
  1569  0191                     	;# 
  1570  0192                     	;# 
  1571  0193                     	;# 
  1572  0193                     	;# 
  1573  0193                     	;# 
  1574  0194                     	;# 
  1575  0195                     	;# 
  1576  0196                     	;# 
  1577  0199                     	;# 
  1578  019A                     	;# 
  1579  019B                     	;# 
  1580  019B                     	;# 
  1581  019B                     	;# 
  1582  019B                     	;# 
  1583  019C                     	;# 
  1584  019C                     	;# 
  1585  019D                     	;# 
  1586  019E                     	;# 
  1587  019F                     	;# 
  1588  020C                     	;# 
  1589  020D                     	;# 
  1590  0211                     	;# 
  1591  0211                     	;# 
  1592  0212                     	;# 
  1593  0212                     	;# 
  1594  0213                     	;# 
  1595  0213                     	;# 
  1596  0214                     	;# 
  1597  0214                     	;# 
  1598  0215                     	;# 
  1599  0215                     	;# 
  1600  0215                     	;# 
  1601  0216                     	;# 
  1602  0216                     	;# 
  1603  0217                     	;# 
  1604  0217                     	;# 
  1605  0219                     	;# 
  1606  021A                     	;# 
  1607  021B                     	;# 
  1608  021C                     	;# 
  1609  021D                     	;# 
  1610  021E                     	;# 
  1611  021F                     	;# 
  1612  0291                     	;# 
  1613  0291                     	;# 
  1614  0292                     	;# 
  1615  0293                     	;# 
  1616  0294                     	;# 
  1617  0295                     	;# 
  1618  0295                     	;# 
  1619  0296                     	;# 
  1620  0298                     	;# 
  1621  0298                     	;# 
  1622  0299                     	;# 
  1623  029A                     	;# 
  1624  029B                     	;# 
  1625  029C                     	;# 
  1626  029C                     	;# 
  1627  029D                     	;# 
  1628  029E                     	;# 
  1629  029E                     	;# 
  1630  0311                     	;# 
  1631  0311                     	;# 
  1632  0312                     	;# 
  1633  0313                     	;# 
  1634  0318                     	;# 
  1635  0318                     	;# 
  1636  0319                     	;# 
  1637  031A                     	;# 
  1638  0394                     	;# 
  1639  0395                     	;# 
  1640  0396                     	;# 
  1641  039A                     	;# 
  1642  039C                     	;# 
  1643  039D                     	;# 
  1644  039E                     	;# 
  1645  039F                     	;# 
  1646  0415                     	;# 
  1647  0416                     	;# 
  1648  0417                     	;# 
  1649  041C                     	;# 
  1650  041D                     	;# 
  1651  041E                     	;# 
  1652  0FE4                     	;# 
  1653  0FE5                     	;# 
  1654  0FE6                     	;# 
  1655  0FE7                     	;# 
  1656  0FE8                     	;# 
  1657  0FE9                     	;# 
  1658  0FEA                     	;# 
  1659  0FEB                     	;# 
  1660  0FED                     	;# 
  1661  0FEE                     	;# 
  1662  0FEF                     	;# 
  1663  0000                     	;# 
  1664  0001                     	;# 
  1665  0002                     	;# 
  1666  0003                     	;# 
  1667  0004                     	;# 
  1668  0005                     	;# 
  1669  0006                     	;# 
  1670  0007                     	;# 
  1671  0008                     	;# 
  1672  0009                     	;# 
  1673  000A                     	;# 
  1674  000B                     	;# 
  1675  000C                     	;# 
  1676  000D                     	;# 
  1677  0011                     	;# 
  1678  0012                     	;# 
  1679  0013                     	;# 
  1680  0014                     	;# 
  1681  0015                     	;# 
  1682  0016                     	;# 
  1683  0016                     	;# 
  1684  0017                     	;# 
  1685  0018                     	;# 
  1686  0019                     	;# 
  1687  001A                     	;# 
  1688  001B                     	;# 
  1689  001C                     	;# 
  1690  001E                     	;# 
  1691  001F                     	;# 
  1692  008C                     	;# 
  1693  008D                     	;# 
  1694  0091                     	;# 
  1695  0092                     	;# 
  1696  0093                     	;# 
  1697  0094                     	;# 
  1698  0095                     	;# 
  1699  0096                     	;# 
  1700  0097                     	;# 
  1701  0098                     	;# 
  1702  0099                     	;# 
  1703  009A                     	;# 
  1704  009B                     	;# 
  1705  009B                     	;# 
  1706  009C                     	;# 
  1707  009D                     	;# 
  1708  009E                     	;# 
  1709  010C                     	;# 
  1710  010D                     	;# 
  1711  0111                     	;# 
  1712  0112                     	;# 
  1713  0113                     	;# 
  1714  0114                     	;# 
  1715  0115                     	;# 
  1716  0116                     	;# 
  1717  0117                     	;# 
  1718  0118                     	;# 
  1719  0119                     	;# 
  1720  011A                     	;# 
  1721  011B                     	;# 
  1722  011D                     	;# 
  1723  011E                     	;# 
  1724  018C                     	;# 
  1725  018D                     	;# 
  1726  0191                     	;# 
  1727  0191                     	;# 
  1728  0192                     	;# 
  1729  0193                     	;# 
  1730  0193                     	;# 
  1731  0193                     	;# 
  1732  0194                     	;# 
  1733  0195                     	;# 
  1734  0196                     	;# 
  1735  0199                     	;# 
  1736  019A                     	;# 
  1737  019B                     	;# 
  1738  019B                     	;# 
  1739  019B                     	;# 
  1740  019B                     	;# 
  1741  019C                     	;# 
  1742  019C                     	;# 
  1743  019D                     	;# 
  1744  019E                     	;# 
  1745  019F                     	;# 
  1746  020C                     	;# 
  1747  020D                     	;# 
  1748  0211                     	;# 
  1749  0211                     	;# 
  1750  0212                     	;# 
  1751  0212                     	;# 
  1752  0213                     	;# 
  1753  0213                     	;# 
  1754  0214                     	;# 
  1755  0214                     	;# 
  1756  0215                     	;# 
  1757  0215                     	;# 
  1758  0215                     	;# 
  1759  0216                     	;# 
  1760  0216                     	;# 
  1761  0217                     	;# 
  1762  0217                     	;# 
  1763  0219                     	;# 
  1764  021A                     	;# 
  1765  021B                     	;# 
  1766  021C                     	;# 
  1767  021D                     	;# 
  1768  021E                     	;# 
  1769  021F                     	;# 
  1770  0291                     	;# 
  1771  0291                     	;# 
  1772  0292                     	;# 
  1773  0293                     	;# 
  1774  0294                     	;# 
  1775  0295                     	;# 
  1776  0295                     	;# 
  1777  0296                     	;# 
  1778  0298                     	;# 
  1779  0298                     	;# 
  1780  0299                     	;# 
  1781  029A                     	;# 
  1782  029B                     	;# 
  1783  029C                     	;# 
  1784  029C                     	;# 
  1785  029D                     	;# 
  1786  029E                     	;# 
  1787  029E                     	;# 
  1788  0311                     	;# 
  1789  0311                     	;# 
  1790  0312                     	;# 
  1791  0313                     	;# 
  1792  0318                     	;# 
  1793  0318                     	;# 
  1794  0319                     	;# 
  1795  031A                     	;# 
  1796  0394                     	;# 
  1797  0395                     	;# 
  1798  0396                     	;# 
  1799  039A                     	;# 
  1800  039C                     	;# 
  1801  039D                     	;# 
  1802  039E                     	;# 
  1803  039F                     	;# 
  1804  0415                     	;# 
  1805  0416                     	;# 
  1806  0417                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  0FE4                     	;# 
  1811  0FE5                     	;# 
  1812  0FE6                     	;# 
  1813  0FE7                     	;# 
  1814  0FE8                     	;# 
  1815  0FE9                     	;# 
  1816  0FEA                     	;# 
  1817  0FEB                     	;# 
  1818  0FED                     	;# 
  1819  0FEE                     	;# 
  1820  0FEF                     	;# 
  1821  0016                     _TMR1	set	22
  1822  001F                     _CPSCON1	set	31
  1823  001E                     _CPSCON0	set	30
  1824  0015                     _TMR0	set	21
  1825  0019                     _T1GCON	set	25
  1826  0018                     _T1CON	set	24
  1827  001B                     _PR2	set	27
  1828  001A                     _TMR2	set	26
  1829  001C                     _T2CON	set	28
  1830  000D                     _PORTB	set	13
  1831  000C                     _PORTA	set	12
  1832  0099                     _TMR4IF	set	153
  1833  0088                     _TMR1IF	set	136
  1834  005F                     _GIE	set	95
  1835  005E                     _PEIE	set	94
  1836  00A1                     _BCL2IF	set	161
  1837  00A0                     _SSP2IF	set	160
  1838  0093                     _BCL1IF	set	147
  1839  008B                     _SSP1IF	set	139
  1840  00C0                     _TMR1ON	set	192
  1841  0095                     _OPTION_REG	set	149
  1842  008D                     _TRISB	set	141
  1843  008C                     _TRISA	set	140
  1844  0099                     _OSCCON	set	153
  1845  0499                     _TMR4IE	set	1177
  1846  0488                     _TMR1IE	set	1160
  1847  04A1                     _BCL2IE	set	1185
  1848  04A0                     _SSP2IE	set	1184
  1849  0493                     _BCL1IE	set	1171
  1850  048B                     _SSP1IE	set	1163
  1851  011E                     _APFCON1	set	286
  1852  011D                     _APFCON0	set	285
  1853  0863                     _LATA3	set	2147
  1854  0864                     _LATA4	set	2148
  1855  0866                     _LATA6	set	2150
  1856  018D                     _ANSELB	set	397
  1857  018C                     _ANSELA	set	396
  1858  021C                     _SSP2STATbits	set	540
  1859  0219                     _SSP2BUF	set	537
  1860  021E                     _SSP2CON2	set	542
  1861  021B                     _SSP2MSK	set	539
  1862  021E                     _SSP2CON2bits	set	542
  1863  021D                     _SSP2CON1bits	set	541
  1864  021A                     _SSP2ADD	set	538
  1865  021C                     _SSP2STAT	set	540
  1866  021D                     _SSP2CON1	set	541
  1867  0214                     _SSP1STATbits	set	532
  1868  0211                     _SSP1BUF	set	529
  1869  0216                     _SSP1CON2	set	534
  1870  0213                     _SSP1MSK	set	531
  1871  0216                     _SSP1CON2bits	set	534
  1872  0215                     _SSP1CON1bits	set	533
  1873  0212                     _SSP1ADD	set	530
  1874  0214                     _SSP1STAT	set	532
  1875  0215                     _SSP1CON1	set	533
  1876  0298                     _CCPR2L	set	664
  1877  029E                     _CCPTMRS	set	670
  1878  029A                     _CCP2CON	set	666
  1879  0417                     _T4CON	set	1047
  1880  0415                     _TMR4	set	1045
  1881  0416                     _PR4	set	1046
  1882                           
  1883                           	psect	stringtext
  1884  0680                     __pstringtext:	
  1885  0680                     STR_5:	
  1886  0680  3425               	retlw	37	;'%'
  1887  0681  3430               	retlw	48	;'0'
  1888  0682  3438               	retlw	56	;'8'
  1889  0683  346C               	retlw	108	;'l'
  1890  0684  3458               	retlw	88	;'X'
  1891  0685  3420               	retlw	32	;' '
  1892  0686  3400               	retlw	0
  1893  0687                     STR_8:	
  1894  0687  3420               	retlw	32	;' '
  1895  0688  3425               	retlw	37	;'%'
  1896  0689  3430               	retlw	48	;'0'
  1897  068A  3438               	retlw	56	;'8'
  1898  068B  344C               	retlw	76	;'L'
  1899  068C  3458               	retlw	88	;'X'
  1900  068D  3400               	retlw	0
  1901  068E                     STR_6:	
  1902  068E  3420               	retlw	32	;' '
  1903  068F  3425               	retlw	37	;'%'
  1904  0690  3430               	retlw	48	;'0'
  1905  0691  3432               	retlw	50	;'2'
  1906  0692  3458               	retlw	88	;'X'
  1907  0693  3400               	retlw	0
  1908  0694                     STR_7:	
  1909  0694  3420               	retlw	32	;' '
  1910  0695  3425               	retlw	37	;'%'
  1911  0696  3430               	retlw	48	;'0'
  1912  0697  3434               	retlw	52	;'4'
  1913  0698  3458               	retlw	88	;'X'
  1914  0699  3400               	retlw	0
  1915  069A                     STR_1:	
  1916  069A  3443               	retlw	67	;'C'
  1917  069B  3450               	retlw	80	;'P'
  1918  069C  3453               	retlw	83	;'S'
  1919  069D  3431               	retlw	49	;'1'
  1920  069E  3400               	retlw	0
  1921  069F                     STR_2:	
  1922  069F  3443               	retlw	67	;'C'
  1923  06A0  3450               	retlw	80	;'P'
  1924  06A1  3453               	retlw	83	;'S'
  1925  06A2  3432               	retlw	50	;'2'
  1926  06A3  3400               	retlw	0
  1927  06A4                     STR_3:	
  1928  06A4  3443               	retlw	67	;'C'
  1929  06A5  3450               	retlw	80	;'P'
  1930  06A6  3453               	retlw	83	;'S'
  1931  06A7  3433               	retlw	51	;'3'
  1932  06A8  3400               	retlw	0
  1933  06A9                     STR_4:	
  1934  06A9  340D               	retlw	13
  1935  06AA  3400               	retlw	0
  1936                           
  1937                           ; #config settings
  1938  0000                     
  1939                           	psect	cinit
  1940  002F                     start_initialization:	
  1941  002F                     __initialization:	
  1942                           
  1943                           ; Clear objects allocated to COMMON
  1944  002F  01FA               	clrf	__pbssCOMMON& (0+127)
  1945  0030  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1946                           
  1947                           ; Clear objects allocated to BANK0
  1948  0031  3063               	movlw	low __pbssBANK0
  1949  0032  0084               	movwf	4
  1950  0033  3000               	movlw	high __pbssBANK0
  1951  0034  0085               	movwf	5
  1952  0035  300C               	movlw	12
  1953  0036  318F  27A6  3180   	fcall	clear_ram0
  1954                           
  1955                           ; Clear objects allocated to BANK1
  1956  0039  30A0               	movlw	low __pbssBANK1
  1957  003A  0084               	movwf	4
  1958  003B  3000               	movlw	high __pbssBANK1
  1959  003C  0085               	movwf	5
  1960  003D  302C               	movlw	44
  1961  003E  318F  27A6         	fcall	clear_ram0
  1962  0040                     end_of_initialization:	
  1963                           ;End of C runtime variable initialization code
  1964                           
  1965  0040                     __end_of__initialization:	
  1966  0040  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1967  0041  0020               	movlb	0
  1968  0042  3182  2A6E         	ljmp	_main	;jump to C main() function
  1969                           
  1970                           	psect	bssCOMMON
  1971  007A                     __pbssCOMMON:	
  1972  007A                     CPSx_Read@channel:	
  1973  007A                     	ds	1
  1974  007B                     _outptr:	
  1975  007B                     	ds	1
  1976                           
  1977                           	psect	bssBANK0
  1978  0063                     __pbssBANK0:	
  1979  0063                     _CPS_Data:	
  1980  0063                     	ds	3
  1981  0066                     _xfunc_in:	
  1982  0066                     	ds	2
  1983  0068                     Handler@count:	
  1984  0068                     	ds	2
  1985  006A                     _xfunc_out:	
  1986  006A                     	ds	2
  1987  006C                     _VoltageReg:	
  1988  006C                     	ds	2
  1989  006E                     _ConfigReg:	
  1990  006E                     	ds	1
  1991                           
  1992                           	psect	bssBANK1
  1993  00A0                     __pbssBANK1:	
  1994  00A0                     _MemoryReg:	
  1995  00A0                     	ds	3
  1996  00A3                     _CPS_PreData:	
  1997  00A3                     	ds	3
  1998  00A6                     _I2C2_Config:	
  1999  00A6                     	ds	19
  2000  00B9                     _I2C1_Config:	
  2001  00B9                     	ds	19
  2002                           
  2003                           	psect	clrtext
  2004  0FA6                     clear_ram0:	
  2005                           ;	Called with FSR0 containing the base address, and
  2006                           ;	WREG with the size to clear
  2007                           
  2008  0FA6  0064               	clrwdt	;clear the watchdog before getting into this loop
  2009  0FA7                     clrloop0:	
  2010  0FA7  0180               	clrf	0	;clear RAM location pointed to by FSR
  2011  0FA8  3101               	addfsr 0,1
  2012  0FA9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2013  0FAA  2FA7               	goto	clrloop0	;have we reached the end yet?
  2014  0FAB  3400               	retlw	0	;all done for this memory range, return
  2015                           
  2016                           	psect	cstackCOMMON
  2017  0070                     __pcstackCOMMON:	
  2018  0070                     ?_Basic_Init:	
  2019  0070                     ?_LCD_Init:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022  0070                     ?_Timer1_Init:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025  0070                     ?_mTouch_Init:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028  0070                     ?_Timer4_Init:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031  0070                     ?_Buzer_Init:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034  0070                     ?_DAC_Initialize:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037  0070                     ?_Timer4_Handler:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040  0070                     ??_Timer4_Handler:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043  0070                     ?_CPSx_Read:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046  0070                     ??_CPSx_Read:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049  0070                     ?_Timer1_Handler:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052  0070                     ??_Timer1_Handler:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0070                     ?_I2C_CommonInterrupt:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0070                     ?_LCD_DisplayClear:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0070                     ?_main:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0070                     ?_Handler:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0070                     ?_LCD_WriteData:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0070                     ?_xputc:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0070                     ?_xputs:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0070                     ?_I2C1_PinInit:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0070                     ?_I2C1_Interrupt:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0070                     ??_I2C1_Interrupt:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0070                     ?_I2C2_PinInit:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0070                     ?_I2C2_Interrupt:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0070                     ??_I2C2_Interrupt:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0070                     ?_mTouch_PortInit:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097                           
  2098                           ; 1 bytes @ 0x0
  2099  0070                     	ds	1
  2100  0071                     ??_I2C_CommonInterrupt:	
  2101  0071                     ??_Handler:	
  2102                           ; 1 bytes @ 0x1
  2103                           
  2104                           
  2105                           ; 1 bytes @ 0x1
  2106  0071                     	ds	1
  2107  0072                     ??_Basic_Init:	
  2108  0072                     ??_Timer1_Init:	
  2109                           ; 1 bytes @ 0x2
  2110                           
  2111  0072                     ??_Timer4_Init:	
  2112                           ; 1 bytes @ 0x2
  2113                           
  2114  0072                     ??_Buzer_Init:	
  2115                           ; 1 bytes @ 0x2
  2116                           
  2117  0072                     ??_LCD_WriteData:	
  2118                           ; 1 bytes @ 0x2
  2119                           
  2120  0072                     ??_I2C1_PinInit:	
  2121                           ; 1 bytes @ 0x2
  2122                           
  2123  0072                     ?_I2C1_Transmit:	
  2124                           ; 1 bytes @ 0x2
  2125                           
  2126  0072                     ??_I2C2_PinInit:	
  2127                           ; 1 bytes @ 0x2
  2128                           
  2129  0072                     ?_I2C2_Transmit:	
  2130                           ; 1 bytes @ 0x2
  2131                           
  2132  0072                     ??_mTouch_PortInit:	
  2133                           ; 1 bytes @ 0x2
  2134                           
  2135  0072                     ?___wmul:	
  2136                           ; 1 bytes @ 0x2
  2137                           
  2138  0072                     ?___lldiv:	
  2139                           ; 2 bytes @ 0x2
  2140                           
  2141  0072                     ?___llmod:	
  2142                           ; 4 bytes @ 0x2
  2143                           
  2144  0072                     I2C1_Transmit@pData:	
  2145                           ; 4 bytes @ 0x2
  2146                           
  2147  0072                     I2C2_Transmit@pData:	
  2148                           ; 1 bytes @ 0x2
  2149                           
  2150  0072                     ___wmul@multiplier:	
  2151                           ; 1 bytes @ 0x2
  2152                           
  2153  0072                     ___lldiv@divisor:	
  2154                           ; 2 bytes @ 0x2
  2155                           
  2156  0072                     ___llmod@divisor:	
  2157                           ; 4 bytes @ 0x2
  2158                           
  2159                           
  2160                           ; 4 bytes @ 0x2
  2161  0072                     	ds	1
  2162  0073                     ??_mTouch_Init:	
  2163  0073                     ?_I2C1_Setting:	
  2164                           ; 1 bytes @ 0x3
  2165                           
  2166  0073                     ?_I2C2_Setting:	
  2167                           ; 1 bytes @ 0x3
  2168                           
  2169  0073                     I2C1_Setting@mode:	
  2170                           ; 1 bytes @ 0x3
  2171                           
  2172  0073                     I2C1_Transmit@size:	
  2173                           ; 1 bytes @ 0x3
  2174                           
  2175  0073                     I2C2_Setting@mode:	
  2176                           ; 1 bytes @ 0x3
  2177                           
  2178  0073                     I2C2_Transmit@size:	
  2179                           ; 1 bytes @ 0x3
  2180                           
  2181                           
  2182                           ; 1 bytes @ 0x3
  2183  0073                     	ds	1
  2184  0074                     ??_I2C1_Transmit:	
  2185  0074                     ??_I2C2_Transmit:	
  2186                           ; 1 bytes @ 0x4
  2187                           
  2188  0074                     LCD_WriteData@point:	
  2189                           ; 1 bytes @ 0x4
  2190                           
  2191  0074                     I2C1_Setting@Speed:	
  2192                           ; 1 bytes @ 0x4
  2193                           
  2194  0074                     I2C2_Setting@Speed:	
  2195                           ; 1 bytes @ 0x4
  2196                           
  2197  0074                     ___wmul@multiplicand:	
  2198                           ; 1 bytes @ 0x4
  2199                           
  2200                           
  2201                           ; 2 bytes @ 0x4
  2202  0074                     	ds	1
  2203  0075                     ?_LCD_Put:	
  2204  0075                     ?_LCD_CursorPosition:	
  2205                           ; 1 bytes @ 0x5
  2206                           
  2207  0075                     ??_LCD_DisplayClear:	
  2208                           ; 1 bytes @ 0x5
  2209                           
  2210  0075                     ??_I2C1_Setting:	
  2211                           ; 1 bytes @ 0x5
  2212                           
  2213  0075                     ??_I2C2_Setting:	
  2214                           ; 1 bytes @ 0x5
  2215                           
  2216  0075                     LCD_Put@word:	
  2217                           ; 1 bytes @ 0x5
  2218                           
  2219  0075                     LCD_CursorPosition@ty:	
  2220                           ; 1 bytes @ 0x5
  2221                           
  2222                           
  2223                           ; 1 bytes @ 0x5
  2224  0075                     	ds	1
  2225  0076                     ??_LCD_Init:	
  2226  0076                     ??_LCD_Put:	
  2227                           ; 1 bytes @ 0x6
  2228                           
  2229  0076                     ??_LCD_CursorPosition:	
  2230                           ; 1 bytes @ 0x6
  2231                           
  2232  0076                     ??_xputc:	
  2233                           ; 1 bytes @ 0x6
  2234                           
  2235  0076                     ??___wmul:	
  2236                           ; 1 bytes @ 0x6
  2237                           
  2238  0076                     I2C1_Setting@address:	
  2239                           ; 1 bytes @ 0x6
  2240                           
  2241  0076                     I2C1_Transmit@address:	
  2242                           ; 1 bytes @ 0x6
  2243                           
  2244  0076                     I2C2_Setting@address:	
  2245                           ; 1 bytes @ 0x6
  2246                           
  2247  0076                     I2C2_Transmit@address:	
  2248                           ; 1 bytes @ 0x6
  2249                           
  2250  0076                     ___wmul@product:	
  2251                           ; 1 bytes @ 0x6
  2252                           
  2253  0076                     ___lldiv@dividend:	
  2254                           ; 2 bytes @ 0x6
  2255                           
  2256  0076                     ___llmod@dividend:	
  2257                           ; 4 bytes @ 0x6
  2258                           
  2259                           
  2260                           ; 4 bytes @ 0x6
  2261  0076                     	ds	1
  2262  0077                     ?_I2C_Init:	
  2263  0077                     LCD_CursorPosition@tx:	
  2264                           ; 1 bytes @ 0x7
  2265                           
  2266  0077                     xputc@c:	
  2267                           ; 1 bytes @ 0x7
  2268                           
  2269  0077                     I2C1_Transmit@i:	
  2270                           ; 1 bytes @ 0x7
  2271                           
  2272  0077                     I2C2_Transmit@i:	
  2273                           ; 1 bytes @ 0x7
  2274                           
  2275  0077                     I2C_Init@address:	
  2276                           ; 1 bytes @ 0x7
  2277                           
  2278                           
  2279                           ; 1 bytes @ 0x7
  2280  0077                     	ds	1
  2281  0078                     ??_xputs:	
  2282  0078                     I2C1_Transmit@i_416:	
  2283                           ; 1 bytes @ 0x8
  2284                           
  2285  0078                     I2C2_Transmit@i_560:	
  2286                           ; 1 bytes @ 0x8
  2287                           
  2288  0078                     I2C_Init@mode:	
  2289                           ; 1 bytes @ 0x8
  2290                           
  2291                           
  2292                           ; 1 bytes @ 0x8
  2293  0078                     	ds	1
  2294  0079                     xputs@str:	
  2295  0079                     I2C1_Transmit@result:	
  2296                           ; 1 bytes @ 0x9
  2297                           
  2298  0079                     I2C2_Transmit@result:	
  2299                           ; 1 bytes @ 0x9
  2300                           
  2301  0079                     I2C_Init@Speed:	
  2302                           ; 1 bytes @ 0x9
  2303                           
  2304                           
  2305                           ; 1 bytes @ 0x9
  2306  0079                     	ds	1
  2307                           
  2308                           	psect	cstackBANK0
  2309  0020                     __pcstackBANK0:	
  2310  0020                     ??_I2C_Init:	
  2311  0020                     ?_I2C_Transmit:	
  2312                           ; 1 bytes @ 0x0
  2313                           
  2314  0020                     ??___lldiv:	
  2315                           ; 1 bytes @ 0x0
  2316                           
  2317  0020                     ??___llmod:	
  2318                           ; 1 bytes @ 0x0
  2319                           
  2320  0020                     I2C_Transmit@address:	
  2321                           ; 1 bytes @ 0x0
  2322                           
  2323                           
  2324                           ; 1 bytes @ 0x0
  2325  0020                     	ds	1
  2326  0021                     I2C_Transmit@pData:	
  2327  0021                     ___llmod@counter:	
  2328                           ; 1 bytes @ 0x1
  2329                           
  2330  0021                     ___lldiv@quotient:	
  2331                           ; 1 bytes @ 0x1
  2332                           
  2333                           
  2334                           ; 4 bytes @ 0x1
  2335  0021                     	ds	1
  2336  0022                     I2C_Init@I2Cx:	
  2337  0022                     I2C_Transmit@size:	
  2338                           ; 1 bytes @ 0x2
  2339                           
  2340                           
  2341                           ; 1 bytes @ 0x2
  2342  0022                     	ds	1
  2343  0023                     ??_I2C_Transmit:	
  2344                           
  2345                           ; 1 bytes @ 0x3
  2346  0023                     	ds	2
  2347  0025                     ___lldiv@counter:	
  2348                           
  2349                           ; 1 bytes @ 0x5
  2350  0025                     	ds	1
  2351  0026                     ?_xvprintf:	
  2352  0026                     I2C_Transmit@I2Cx:	
  2353                           ; 1 bytes @ 0x6
  2354                           
  2355  0026                     xvprintf@fmt:	
  2356                           ; 1 bytes @ 0x6
  2357                           
  2358                           
  2359                           ; 2 bytes @ 0x6
  2360  0026                     	ds	1
  2361  0027                     I2C_Transmit@result:	
  2362                           
  2363                           ; 1 bytes @ 0x7
  2364  0027                     	ds	1
  2365  0028                     ??_DAC_Initialize:	
  2366  0028                     xvprintf@arp:	
  2367                           ; 1 bytes @ 0x8
  2368                           
  2369                           
  2370                           ; 1 bytes @ 0x8
  2371  0028                     	ds	1
  2372  0029                     ??_xvprintf:	
  2373                           
  2374                           ; 1 bytes @ 0x9
  2375  0029                     	ds	4
  2376  002D                     xvprintf@s:	
  2377                           
  2378                           ; 16 bytes @ 0xD
  2379  002D                     	ds	16
  2380  003D                     _xvprintf$199:	
  2381                           
  2382                           ; 4 bytes @ 0x1D
  2383  003D                     	ds	4
  2384  0041                     _xvprintf$200:	
  2385                           
  2386                           ; 2 bytes @ 0x21
  2387  0041                     	ds	2
  2388  0043                     _xvprintf$201:	
  2389                           
  2390                           ; 2 bytes @ 0x23
  2391  0043                     	ds	2
  2392  0045                     xvprintf@p:	
  2393                           
  2394                           ; 1 bytes @ 0x25
  2395  0045                     	ds	1
  2396  0046                     xvprintf@r:	
  2397                           
  2398                           ; 2 bytes @ 0x26
  2399  0046                     	ds	2
  2400  0048                     xvprintf@w:	
  2401                           
  2402                           ; 2 bytes @ 0x28
  2403  0048                     	ds	2
  2404  004A                     xvprintf@j:	
  2405                           
  2406                           ; 2 bytes @ 0x2A
  2407  004A                     	ds	2
  2408  004C                     xvprintf@v:	
  2409                           
  2410                           ; 4 bytes @ 0x2C
  2411  004C                     	ds	4
  2412  0050                     xvprintf@f:	
  2413                           
  2414                           ; 2 bytes @ 0x30
  2415  0050                     	ds	2
  2416  0052                     xvprintf@i:	
  2417                           
  2418                           ; 2 bytes @ 0x32
  2419  0052                     	ds	2
  2420  0054                     xvprintf@d:	
  2421                           
  2422                           ; 1 bytes @ 0x34
  2423  0054                     	ds	1
  2424  0055                     xvprintf@c:	
  2425                           
  2426                           ; 1 bytes @ 0x35
  2427  0055                     	ds	1
  2428  0056                     ?_xprintf:	
  2429  0056                     xprintf@fmt:	
  2430                           ; 1 bytes @ 0x36
  2431                           
  2432                           
  2433                           ; 2 bytes @ 0x36
  2434  0056                     	ds	6
  2435  005C                     ??_xprintf:	
  2436                           
  2437                           ; 1 bytes @ 0x3C
  2438  005C                     	ds	1
  2439  005D                     xprintf@arp:	
  2440                           
  2441                           ; 1 bytes @ 0x3D
  2442  005D                     	ds	1
  2443  005E                     ??_main:	
  2444                           
  2445                           ; 1 bytes @ 0x3E
  2446  005E                     	ds	5
  2447                           
  2448                           	psect	maintext
  2449  026E                     __pmaintext:	
  2450 ;;
  2451 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  2452 ;;
  2453 ;; *************** function _main *****************
  2454 ;; Defined at:
  2455 ;;		line 13 in file "main.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      char 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : B1F/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2469 ;;      Params:         0       0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0
  2471 ;;      Temps:          0       5       0       0       0       0
  2472 ;;      Totals:         0       5       0       0       0       0
  2473 ;;Total ram usage:        5 bytes
  2474 ;; Hardware stack levels required when called:    9
  2475 ;; This function calls:
  2476 ;;		_Basic_Init
  2477 ;;		_Buzer_Init
  2478 ;;		_DAC_Initialize
  2479 ;;		_LCD_CursorPosition
  2480 ;;		_LCD_Init
  2481 ;;		_Timer1_Init
  2482 ;;		_Timer4_Init
  2483 ;;		_mTouch_Init
  2484 ;;		_xprintf
  2485 ;; This function is called by:
  2486 ;;		Startup code after reset
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           
  2491                           ;psect for function _main
  2492  026E                     _main:	
  2493                           
  2494                           ;main.c: 15: Basic_Init();
  2495                           
  2496                           ;incstack = 0
  2497                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2498  026E  3187  27AF  3182   	fcall	_Basic_Init
  2499                           
  2500                           ;main.c: 17: LATA6 = 1;
  2501  0271  0022               	movlb	2	; select bank2
  2502  0272  170C               	bsf	12,6	;volatile
  2503                           
  2504                           ;main.c: 19: LCD_Init();
  2505  0273  3183  23FE  3182   	fcall	_LCD_Init
  2506                           
  2507                           ;main.c: 20: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  2508  0276  30A0               	movlw	low _LCD_Put
  2509  0277  0020               	movlb	0	; select bank0
  2510  0278  00EA               	movwf	_xfunc_out
  2511  0279  300F               	movlw	high _LCD_Put
  2512  027A  00EB               	movwf	_xfunc_out+1
  2513                           
  2514                           ;main.c: 22: Timer1_Init();
  2515  027B  3187  2781  3182   	fcall	_Timer1_Init
  2516                           
  2517                           ;main.c: 23: TMR1ON = 1;;
  2518  027E  0020               	movlb	0	; select bank0
  2519  027F  1418               	bsf	24,0	;volatile
  2520                           
  2521                           ;main.c: 25: mTouch_Init();
  2522  0280  3187  27D7  3182   	fcall	_mTouch_Init
  2523                           
  2524                           ;main.c: 27: Timer4_Init();
  2525  0283  3187  27EA  3182   	fcall	_Timer4_Init
  2526                           
  2527                           ;main.c: 29: Buzer_Init();
  2528  0286  3187  2725  3182   	fcall	_Buzer_Init
  2529                           
  2530                           ;main.c: 31: DAC_Initialize();
  2531  0289  3187  2747  3182   	fcall	_DAC_Initialize
  2532  028C                     l3917:	
  2533                           ;main.c: 33: while(1)
  2534                           
  2535                           
  2536                           ;main.c: 34: {
  2537                           ;main.c: 35: LCD_CursorPosition(0,0);
  2538  028C  01F5               	clrf	LCD_CursorPosition@ty
  2539  028D  3000               	movlw	0
  2540  028E  3187  279A  3182   	fcall	_LCD_CursorPosition
  2541                           
  2542                           ;main.c: 36: if((CPS_PreData[0]-CPS_Data[0])>150)
  2543  0291  0020               	movlb	0	; select bank0
  2544  0292  0863               	movf	_CPS_Data,w
  2545  0293  00DE               	movwf	??_main
  2546  0294  01DF               	clrf	??_main+1
  2547  0295  09DE               	comf	??_main,f
  2548  0296  09DF               	comf	??_main+1,f
  2549  0297  0ADE               	incf	??_main,f
  2550  0298  1903               	skipnz
  2551  0299  0ADF               	incf	??_main+1,f
  2552  029A  0021               	movlb	1	; select bank1
  2553  029B  0823               	movf	_CPS_PreData^(0+128),w
  2554  029C  0020               	movlb	0	; select bank0
  2555  029D  075E               	addwf	??_main,w
  2556  029E  00E0               	movwf	??_main+2
  2557  029F  085F               	movf	??_main+1,w
  2558  02A0  1803               	skipnc
  2559  02A1  0A5F               	incf	??_main+1,w
  2560  02A2  00E1               	movwf	??_main+3
  2561  02A3  0861               	movf	??_main+3,w
  2562  02A4  3A80               	xorlw	128
  2563  02A5  00E2               	movwf	??_main+4
  2564  02A6  3080               	movlw	128
  2565  02A7  0262               	subwf	??_main+4,w
  2566  02A8  1D03               	skipz
  2567  02A9  2AAC               	goto	u3955
  2568  02AA  3097               	movlw	151
  2569  02AB  0260               	subwf	??_main+2,w
  2570  02AC                     u3955:	
  2571  02AC  1C03               	skipc
  2572  02AD  2AB6               	goto	l3923
  2573                           
  2574                           ;main.c: 37: xprintf("CPS1");
  2575  02AE  309A               	movlw	low (STR_1| (0+32768))
  2576  02AF  0020               	movlb	0	; select bank0
  2577  02B0  00D6               	movwf	xprintf@fmt
  2578  02B1  3086               	movlw	high (STR_1| (0+32768))
  2579  02B2  00D7               	movwf	xprintf@fmt+1
  2580  02B3  318F  27F0  3182   	fcall	_xprintf
  2581  02B6                     l3923:	
  2582                           
  2583                           ;main.c: 38: if((CPS_PreData[1]-CPS_Data[1])>150)
  2584  02B6  0020               	movlb	0	; select bank0
  2585  02B7  0864               	movf	_CPS_Data+1,w
  2586  02B8  00DE               	movwf	??_main
  2587  02B9  01DF               	clrf	??_main+1
  2588  02BA  09DE               	comf	??_main,f
  2589  02BB  09DF               	comf	??_main+1,f
  2590  02BC  0ADE               	incf	??_main,f
  2591  02BD  1903               	skipnz
  2592  02BE  0ADF               	incf	??_main+1,f
  2593  02BF  0021               	movlb	1	; select bank1
  2594  02C0  0824               	movf	(_CPS_PreData^(0+128)+1),w
  2595  02C1  0020               	movlb	0	; select bank0
  2596  02C2  075E               	addwf	??_main,w
  2597  02C3  00E0               	movwf	??_main+2
  2598  02C4  085F               	movf	??_main+1,w
  2599  02C5  1803               	skipnc
  2600  02C6  0A5F               	incf	??_main+1,w
  2601  02C7  00E1               	movwf	??_main+3
  2602  02C8  0861               	movf	??_main+3,w
  2603  02C9  3A80               	xorlw	128
  2604  02CA  00E2               	movwf	??_main+4
  2605  02CB  3080               	movlw	128
  2606  02CC  0262               	subwf	??_main+4,w
  2607  02CD  1D03               	skipz
  2608  02CE  2AD1               	goto	u3965
  2609  02CF  3097               	movlw	151
  2610  02D0  0260               	subwf	??_main+2,w
  2611  02D1                     u3965:	
  2612  02D1  1C03               	skipc
  2613  02D2  2ADB               	goto	l3927
  2614                           
  2615                           ;main.c: 39: xprintf("CPS2");
  2616  02D3  309F               	movlw	low (STR_2| (0+32768))
  2617  02D4  0020               	movlb	0	; select bank0
  2618  02D5  00D6               	movwf	xprintf@fmt
  2619  02D6  3086               	movlw	high (STR_2| (0+32768))
  2620  02D7  00D7               	movwf	xprintf@fmt+1
  2621  02D8  318F  27F0  3182   	fcall	_xprintf
  2622  02DB                     l3927:	
  2623                           
  2624                           ;main.c: 40: if((CPS_PreData[2]-CPS_Data[2])>150)
  2625  02DB  0020               	movlb	0	; select bank0
  2626  02DC  0865               	movf	_CPS_Data+2,w
  2627  02DD  00DE               	movwf	??_main
  2628  02DE  01DF               	clrf	??_main+1
  2629  02DF  09DE               	comf	??_main,f
  2630  02E0  09DF               	comf	??_main+1,f
  2631  02E1  0ADE               	incf	??_main,f
  2632  02E2  1903               	skipnz
  2633  02E3  0ADF               	incf	??_main+1,f
  2634  02E4  0021               	movlb	1	; select bank1
  2635  02E5  0825               	movf	(_CPS_PreData^(0+128)+2),w
  2636  02E6  0020               	movlb	0	; select bank0
  2637  02E7  075E               	addwf	??_main,w
  2638  02E8  00E0               	movwf	??_main+2
  2639  02E9  085F               	movf	??_main+1,w
  2640  02EA  1803               	skipnc
  2641  02EB  0A5F               	incf	??_main+1,w
  2642  02EC  00E1               	movwf	??_main+3
  2643  02ED  0861               	movf	??_main+3,w
  2644  02EE  3A80               	xorlw	128
  2645  02EF  00E2               	movwf	??_main+4
  2646  02F0  3080               	movlw	128
  2647  02F1  0262               	subwf	??_main+4,w
  2648  02F2  1D03               	skipz
  2649  02F3  2AF6               	goto	u3975
  2650  02F4  3097               	movlw	151
  2651  02F5  0260               	subwf	??_main+2,w
  2652  02F6                     u3975:	
  2653  02F6  1C03               	skipc
  2654  02F7  2A8C               	goto	l3917
  2655                           
  2656                           ;main.c: 41: xprintf("CPS3");
  2657  02F8  30A4               	movlw	low (STR_3| (0+32768))
  2658  02F9  0020               	movlb	0	; select bank0
  2659  02FA  00D6               	movwf	xprintf@fmt
  2660  02FB  3086               	movlw	high (STR_3| (0+32768))
  2661  02FC  00D7               	movwf	xprintf@fmt+1
  2662  02FD  318F  27F0  3182   	fcall	_xprintf
  2663  0300  2A8C               	goto	l3917
  2664  0301                     __end_of_main:	
  2665                           ;main.c: 42: }
  2666                           ;main.c: 44: return 0;
  2667                           ;	Return value of _main is never used
  2668                           
  2669                           
  2670                           	psect	text1
  2671  0FF0                     __ptext1:	
  2672 ;; *************** function _xprintf *****************
  2673 ;; Defined at:
  2674 ;;		line 165 in file "xprintf.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  fmt             2   54[BANK0 ] PTR const unsigned char 
  2677 ;;		 -> STR_8(7), STR_7(6), STR_6(6), STR_5(7), 
  2678 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  arp             1   61[BANK0 ] PTR void [1]
  2681 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2691 ;;      Params:         0       6       0       0       0       0
  2692 ;;      Locals:         0       1       0       0       0       0
  2693 ;;      Temps:          0       1       0       0       0       0
  2694 ;;      Totals:         0       8       0       0       0       0
  2695 ;;Total ram usage:        8 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    8
  2698 ;; This function calls:
  2699 ;;		_xvprintf
  2700 ;; This function is called by:
  2701 ;;		_main
  2702 ;;		_put_dump
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           
  2707                           ;psect for function _xprintf
  2708  0FF0                     _xprintf:	
  2709                           
  2710                           ;xprintf.c: 170: va_list arp;
  2711                           ;xprintf.c: 173: *arp = __va_start();
  2712                           
  2713                           ;incstack = 0
  2714                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2715  0FF0  3058               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  2716  0FF1  0020               	movlb	0	; select bank0
  2717  0FF2  00DC               	movwf	??_xprintf
  2718  0FF3  085C               	movf	??_xprintf,w
  2719  0FF4  00DD               	movwf	xprintf@arp
  2720                           
  2721                           ;xprintf.c: 174: xvprintf(fmt, arp);
  2722  0FF5  0857               	movf	xprintf@fmt+1,w
  2723  0FF6  00A7               	movwf	xvprintf@fmt+1
  2724  0FF7  0856               	movf	xprintf@fmt,w
  2725  0FF8  00A6               	movwf	xvprintf@fmt
  2726  0FF9  305D               	movlw	(low (xprintf@arp| 0))& (0+255)
  2727  0FFA  00DC               	movwf	??_xprintf
  2728  0FFB  085C               	movf	??_xprintf,w
  2729  0FFC  00A8               	movwf	xvprintf@arp
  2730  0FFD  3180  2044         	fcall	_xvprintf
  2731  0FFF  0008               	return
  2732  1000                     __end_of_xprintf:	
  2733                           
  2734                           	psect	text2
  2735  0044                     __ptext2:	
  2736 ;; *************** function _xvprintf *****************
  2737 ;; Defined at:
  2738 ;;		line 88 in file "xprintf.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  fmt             2    6[BANK0 ] PTR const unsigned char 
  2741 ;;		 -> STR_8(7), STR_7(6), STR_6(6), STR_5(7), 
  2742 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2743 ;;  arp             1    8[BANK0 ] PTR PTR void 
  2744 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  s              16   13[BANK0 ] unsigned char [16]
  2747 ;;  v               4   44[BANK0 ] unsigned long 
  2748 ;;  i               2   50[BANK0 ] unsigned int 
  2749 ;;  f               2   48[BANK0 ] unsigned int 
  2750 ;;  j               2   42[BANK0 ] unsigned int 
  2751 ;;  w               2   40[BANK0 ] unsigned int 
  2752 ;;  r               2   38[BANK0 ] unsigned int 
  2753 ;;  c               1   53[BANK0 ] unsigned char 
  2754 ;;  d               1   52[BANK0 ] unsigned char 
  2755 ;;  p               1   37[BANK0 ] PTR unsigned char 
  2756 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2766 ;;      Params:         0       3       0       0       0       0
  2767 ;;      Locals:         0      41       0       0       0       0
  2768 ;;      Temps:          0       4       0       0       0       0
  2769 ;;      Totals:         0      48       0       0       0       0
  2770 ;;Total ram usage:       48 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    7
  2773 ;; This function calls:
  2774 ;;		___lldiv
  2775 ;;		___llmod
  2776 ;;		___wmul
  2777 ;;		_xputc
  2778 ;;		_xputs
  2779 ;; This function is called by:
  2780 ;;		_xprintf
  2781 ;;		_xsprintf
  2782 ;;		_xfprintf
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _xvprintf
  2788  0044                     _xvprintf:	
  2789  0044                     l144:	
  2790                           ;incstack = 0
  2791                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2792                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  2793                           ;xprintf.c: 94: unsigned long v;
  2794                           ;xprintf.c: 95: char s[16], c, d, *p;
  2795                           ;xprintf.c: 98: for (;;) {
  2796                           
  2797                           
  2798                           ;xprintf.c: 99: c = *fmt++;
  2799  0044  0020               	movlb	0	; select bank0
  2800  0045  0826               	movf	xvprintf@fmt,w
  2801  0046  0084               	movwf	4
  2802  0047  0827               	movf	xvprintf@fmt+1,w
  2803  0048  0085               	movwf	5
  2804  0049  0800               	movf	0,w	;code access
  2805  004A  00A9               	movwf	??_xvprintf
  2806  004B  0829               	movf	??_xvprintf,w
  2807  004C  00D5               	movwf	xvprintf@c
  2808  004D  3001               	movlw	1
  2809  004E  07A6               	addwf	xvprintf@fmt,f
  2810  004F  3000               	movlw	0
  2811  0050  3DA7               	addwfc	xvprintf@fmt+1,f
  2812                           
  2813                           ;xprintf.c: 100: if (!c) break;
  2814  0051  0855               	movf	xvprintf@c,w
  2815  0052  1903               	btfsc	3,2
  2816  0053  0008               	return
  2817                           
  2818                           ;xprintf.c: 101: if (c != '%') {
  2819  0054  3025               	movlw	37
  2820  0055  0655               	xorwf	xvprintf@c,w
  2821  0056  1903               	btfsc	3,2
  2822  0057  285D               	goto	l3707
  2823                           
  2824                           ;xprintf.c: 102: xputc(c); continue;
  2825  0058  0855               	movf	xvprintf@c,w
  2826  0059  3186  2653  3180   	fcall	_xputc
  2827  005C  2844               	goto	l144
  2828  005D                     l3707:	
  2829                           
  2830                           ;xprintf.c: 103: }
  2831                           ;xprintf.c: 104: f = 0;
  2832  005D  0020               	movlb	0	; select bank0
  2833  005E  01D0               	clrf	xvprintf@f
  2834  005F  01D1               	clrf	xvprintf@f+1
  2835                           
  2836                           ;xprintf.c: 105: c = *fmt++;
  2837  0060  0826               	movf	xvprintf@fmt,w
  2838  0061  0084               	movwf	4
  2839  0062  0827               	movf	xvprintf@fmt+1,w
  2840  0063  0085               	movwf	5
  2841  0064  0800               	movf	0,w	;code access
  2842  0065  00A9               	movwf	??_xvprintf
  2843  0066  0829               	movf	??_xvprintf,w
  2844  0067  00D5               	movwf	xvprintf@c
  2845  0068  3001               	movlw	1
  2846  0069  07A6               	addwf	xvprintf@fmt,f
  2847  006A  3000               	movlw	0
  2848  006B  3DA7               	addwfc	xvprintf@fmt+1,f
  2849                           
  2850                           ;xprintf.c: 106: if (c == '0') {
  2851  006C  3030               	movlw	48
  2852  006D  0655               	xorwf	xvprintf@c,w
  2853  006E  1D03               	btfss	3,2
  2854  006F  2872               	goto	l3721
  2855                           
  2856                           ;xprintf.c: 107: f = 1; c = *fmt++;
  2857  0070  3001               	movlw	1
  2858  0071  2877               	goto	L6
  2859  0072                     l3721:	
  2860                           ;xprintf.c: 108: } else {
  2861                           
  2862                           
  2863                           ;xprintf.c: 109: if (c == '-') {
  2864  0072  302D               	movlw	45
  2865  0073  0655               	xorwf	xvprintf@c,w
  2866  0074  1D03               	btfss	3,2
  2867  0075  2886               	goto	l3729
  2868                           
  2869                           ;xprintf.c: 110: f = 2; c = *fmt++;
  2870  0076  3002               	movlw	2
  2871  0077                     L6:	
  2872  0077  00D0               	movwf	xvprintf@f
  2873  0078  3000               	movlw	0
  2874  0079  00D1               	movwf	xvprintf@f+1
  2875  007A  0826               	movf	xvprintf@fmt,w
  2876  007B  0084               	movwf	4
  2877  007C  0827               	movf	xvprintf@fmt+1,w
  2878  007D  0085               	movwf	5
  2879  007E  0800               	movf	0,w	;code access
  2880  007F  00A9               	movwf	??_xvprintf
  2881  0080  0829               	movf	??_xvprintf,w
  2882  0081  00D5               	movwf	xvprintf@c
  2883  0082  3001               	movlw	1
  2884  0083  07A6               	addwf	xvprintf@fmt,f
  2885  0084  3000               	movlw	0
  2886  0085  3DA7               	addwfc	xvprintf@fmt+1,f
  2887  0086                     l3729:	
  2888                           
  2889                           ;xprintf.c: 111: }
  2890                           ;xprintf.c: 112: }
  2891                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  2892  0086  01C8               	clrf	xvprintf@w
  2893  0087  01C9               	clrf	xvprintf@w+1
  2894  0088  28B0               	goto	l3737
  2895  0089                     l3731:	
  2896                           
  2897                           ;xprintf.c: 114: w = w * 10 + c - '0';
  2898  0089  0855               	movf	xvprintf@c,w
  2899  008A  00A9               	movwf	??_xvprintf
  2900  008B  01AA               	clrf	??_xvprintf+1
  2901  008C  0849               	movf	xvprintf@w+1,w
  2902  008D  00F3               	movwf	___wmul@multiplier+1
  2903  008E  0848               	movf	xvprintf@w,w
  2904  008F  00F2               	movwf	___wmul@multiplier
  2905  0090  300A               	movlw	10
  2906  0091  00F4               	movwf	___wmul@multiplicand
  2907  0092  3000               	movlw	0
  2908  0093  00F5               	movwf	___wmul@multiplicand+1
  2909  0094  3187  2766  3180   	fcall	___wmul
  2910  0097  0020               	movlb	0	; select bank0
  2911  0098  0829               	movf	??_xvprintf,w
  2912  0099  0772               	addwf	?___wmul,w
  2913  009A  00AB               	movwf	??_xvprintf+2
  2914  009B  082A               	movf	??_xvprintf+1,w
  2915  009C  3D73               	addwfc	?___wmul+1,w
  2916  009D  00AC               	movwf	??_xvprintf+3
  2917  009E  082B               	movf	??_xvprintf+2,w
  2918  009F  3ED0               	addlw	208
  2919  00A0  00C8               	movwf	xvprintf@w
  2920  00A1  30FF               	movlw	255
  2921  00A2  3D2C               	addwfc	??_xvprintf+3,w
  2922  00A3  00C9               	movwf	xvprintf@w+1
  2923  00A4  0826               	movf	xvprintf@fmt,w
  2924  00A5  0084               	movwf	4
  2925  00A6  0827               	movf	xvprintf@fmt+1,w
  2926  00A7  0085               	movwf	5
  2927  00A8  0800               	movf	0,w	;code access
  2928  00A9  00A9               	movwf	??_xvprintf
  2929  00AA  0829               	movf	??_xvprintf,w
  2930  00AB  00D5               	movwf	xvprintf@c
  2931  00AC  3001               	movlw	1
  2932  00AD  07A6               	addwf	xvprintf@fmt,f
  2933  00AE  3000               	movlw	0
  2934  00AF  3DA7               	addwfc	xvprintf@fmt+1,f
  2935  00B0                     l3737:	
  2936  00B0  3030               	movlw	48
  2937  00B1  0255               	subwf	xvprintf@c,w
  2938  00B2  1C03               	skipc
  2939  00B3  28B8               	goto	l3741
  2940  00B4  303A               	movlw	58
  2941  00B5  0255               	subwf	xvprintf@c,w
  2942  00B6  1C03               	skipc
  2943  00B7  2889               	goto	l3731
  2944  00B8                     l3741:	
  2945                           
  2946                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  2947  00B8  306C               	movlw	108
  2948  00B9  0655               	xorwf	xvprintf@c,w
  2949  00BA  1903               	btfsc	3,2
  2950  00BB  28C0               	goto	l159
  2951  00BC  304C               	movlw	76
  2952  00BD  0655               	xorwf	xvprintf@c,w
  2953  00BE  1D03               	btfss	3,2
  2954  00BF  28CD               	goto	l3749
  2955  00C0                     l159:	
  2956                           
  2957                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  2958  00C0  1550               	bsf	xvprintf@f,2
  2959  00C1  0826               	movf	xvprintf@fmt,w
  2960  00C2  0084               	movwf	4
  2961  00C3  0827               	movf	xvprintf@fmt+1,w
  2962  00C4  0085               	movwf	5
  2963  00C5  0800               	movf	0,w	;code access
  2964  00C6  00A9               	movwf	??_xvprintf
  2965  00C7  0829               	movf	??_xvprintf,w
  2966  00C8  00D5               	movwf	xvprintf@c
  2967  00C9  3001               	movlw	1
  2968  00CA  07A6               	addwf	xvprintf@fmt,f
  2969  00CB  3000               	movlw	0
  2970  00CC  3DA7               	addwfc	xvprintf@fmt+1,f
  2971  00CD                     l3749:	
  2972                           
  2973                           ;xprintf.c: 117: }
  2974                           ;xprintf.c: 118: if (!c) break;
  2975  00CD  0855               	movf	xvprintf@c,w
  2976  00CE  1903               	btfsc	3,2
  2977  00CF  0008               	return
  2978                           
  2979                           ;xprintf.c: 119: d = c;
  2980  00D0  0855               	movf	xvprintf@c,w
  2981  00D1  00A9               	movwf	??_xvprintf
  2982  00D2  0829               	movf	??_xvprintf,w
  2983  00D3  00D4               	movwf	xvprintf@d
  2984                           
  2985                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  2986  00D4  3061               	movlw	97
  2987  00D5  0254               	subwf	xvprintf@d,w
  2988  00D6  1C03               	skipc
  2989  00D7  2943               	goto	l3791
  2990  00D8  3020               	movlw	32
  2991  00D9  02D4               	subwf	xvprintf@d,f
  2992                           
  2993                           ;xprintf.c: 121: switch (d) {
  2994  00DA  2943               	goto	l3791
  2995  00DB                     l3757:	
  2996                           ;xprintf.c: 122: case 'S' :
  2997                           
  2998                           
  2999                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  3000  00DB  0828               	movf	xvprintf@arp,w
  3001  00DC  0086               	movwf	6
  3002  00DD  0187               	clrf	7
  3003  00DE  3F40               	moviw [0]fsr1
  3004  00DF  0084               	movwf	4
  3005  00E0  0185               	clrf	5
  3006  00E1  0A81               	incf	1,f
  3007  00E2  0800               	movf	0,w
  3008  00E3  00A9               	movwf	??_xvprintf
  3009  00E4  0829               	movf	??_xvprintf,w
  3010  00E5  00C5               	movwf	xvprintf@p
  3011                           
  3012                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  3013  00E6  01CA               	clrf	xvprintf@j
  3014  00E7  01CB               	clrf	xvprintf@j+1
  3015  00E8                     l3763:	
  3016  00E8  084A               	movf	xvprintf@j,w
  3017  00E9  0745               	addwf	xvprintf@p,w
  3018  00EA  00A9               	movwf	??_xvprintf
  3019  00EB  0829               	movf	??_xvprintf,w
  3020  00EC  0086               	movwf	6
  3021  00ED  0187               	clrf	7
  3022  00EE  0801               	movf	1,w
  3023  00EF  1903               	btfsc	3,2
  3024  00F0  28FA               	goto	l3767
  3025  00F1  3001               	movlw	1
  3026  00F2  07CA               	addwf	xvprintf@j,f
  3027  00F3  3000               	movlw	0
  3028  00F4  3DCB               	addwfc	xvprintf@j+1,f
  3029  00F5  28E8               	goto	l3763
  3030  00F6                     l3765:	
  3031                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  3032                           
  3033  00F6  3020               	movlw	32
  3034  00F7  3186  2653  3180   	fcall	_xputc
  3035  00FA                     l3767:	
  3036  00FA  0020               	movlb	0	; select bank0
  3037  00FB  18D0               	btfsc	xvprintf@f,1
  3038  00FC  290C               	goto	l3771
  3039  00FD  084B               	movf	xvprintf@j+1,w
  3040  00FE  00AA               	movwf	??_xvprintf+1
  3041  00FF  084A               	movf	xvprintf@j,w
  3042  0100  00A9               	movwf	??_xvprintf
  3043  0101  0ACA               	incf	xvprintf@j,f
  3044  0102  1903               	skipnz
  3045  0103  0ACB               	incf	xvprintf@j+1,f
  3046  0104  0849               	movf	xvprintf@w+1,w
  3047  0105  022A               	subwf	??_xvprintf+1,w
  3048  0106  1D03               	skipz
  3049  0107  290A               	goto	u3795
  3050  0108  0848               	movf	xvprintf@w,w
  3051  0109  0229               	subwf	??_xvprintf,w
  3052  010A                     u3795:	
  3053  010A  1C03               	skipc
  3054  010B  28F6               	goto	l3765
  3055  010C                     l3771:	
  3056                           
  3057                           ;xprintf.c: 126: xputs(p);
  3058  010C  0845               	movf	xvprintf@p,w
  3059  010D  3187  27C4  3180   	fcall	_xputs
  3060  0110                     l3775:	
  3061                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  3062                           
  3063  0110  0020               	movlb	0	; select bank0
  3064  0111  084B               	movf	xvprintf@j+1,w
  3065  0112  00AA               	movwf	??_xvprintf+1
  3066  0113  084A               	movf	xvprintf@j,w
  3067  0114  00A9               	movwf	??_xvprintf
  3068  0115  0ACA               	incf	xvprintf@j,f
  3069  0116  1903               	skipnz
  3070  0117  0ACB               	incf	xvprintf@j+1,f
  3071  0118  0849               	movf	xvprintf@w+1,w
  3072  0119  022A               	subwf	??_xvprintf+1,w
  3073  011A  1D03               	skipz
  3074  011B  291E               	goto	u3805
  3075  011C  0848               	movf	xvprintf@w,w
  3076  011D  0229               	subwf	??_xvprintf,w
  3077  011E                     u3805:	
  3078  011E  1803               	btfsc	3,0
  3079  011F  2844               	goto	l144
  3080  0120  3020               	movlw	32
  3081  0121  3186  2653  3180   	fcall	_xputc
  3082  0124  2910               	goto	l3775
  3083  0125                     l3777:	
  3084                           ;xprintf.c: 129: case 'C' :
  3085                           
  3086                           ;xprintf.c: 128: continue;
  3087                           
  3088                           
  3089                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  3090  0125  0828               	movf	xvprintf@arp,w
  3091  0126  0086               	movwf	6
  3092  0127  0187               	clrf	7
  3093  0128  0801               	movf	1,w
  3094  0129  0084               	movwf	4
  3095  012A  0185               	clrf	5
  3096  012B  3002               	movlw	2
  3097  012C  0781               	addwf	1,f
  3098  012D  0800               	movf	0,w
  3099  012E  3186  2653  3180   	fcall	_xputc
  3100  0131  2844               	goto	l144
  3101  0132                     l3779:	
  3102                           ;xprintf.c: 131: case 'B' :
  3103                           
  3104                           
  3105                           ;xprintf.c: 132: r = 2; break;
  3106  0132  3002               	movlw	2
  3107  0133  0020               	movlb	0	; select bank0
  3108  0134  293A               	goto	L3
  3109  0135                     l3781:	
  3110                           ;xprintf.c: 133: case 'O' :
  3111                           
  3112                           
  3113                           ;xprintf.c: 134: r = 8; break;
  3114  0135  3008               	movlw	8
  3115  0136  293A               	goto	L3
  3116  0137                     l3783:	
  3117                           ;xprintf.c: 135: case 'D' :
  3118                           
  3119                           
  3120                           ;xprintf.c: 136: case 'U' :
  3121                           ;xprintf.c: 137: r = 10; break;
  3122  0137  300A               	movlw	10
  3123  0138  293A               	goto	L3
  3124  0139                     l3785:	
  3125                           ;xprintf.c: 138: case 'X' :
  3126                           
  3127                           
  3128                           ;xprintf.c: 139: r = 16; break;
  3129  0139  3010               	movlw	16
  3130  013A                     L3:	
  3131  013A  00C6               	movwf	xvprintf@r
  3132  013B  3000               	movlw	0
  3133  013C  00C7               	movwf	xvprintf@r+1
  3134  013D  295B               	goto	l177
  3135  013E                     l3787:	
  3136                           ;xprintf.c: 140: default:
  3137                           
  3138                           
  3139                           ;xprintf.c: 141: xputc(c); continue;
  3140  013E  0855               	movf	xvprintf@c,w
  3141  013F  3186  2653  3180   	fcall	_xputc
  3142  0142  2844               	goto	l144
  3143  0143                     l3791:	
  3144                           ;xprintf.c: 142: }
  3145                           
  3146  0143  0020               	movlb	0	; select bank0
  3147  0144  0854               	movf	xvprintf@d,w
  3148                           
  3149                           ; Switch size 1, requested type "space"
  3150                           ; Number of cases is 7, Range of values is 66 to 88
  3151                           ; switch strategies available:
  3152                           ; Name         Instructions Cycles
  3153                           ; simple_byte           22    12 (average)
  3154                           ; direct_byte           55     9 (fixed)
  3155                           ; jumptable            263     9 (fixed)
  3156                           ;	Chosen strategy is simple_byte
  3157  0145  3A42               	xorlw	66	; case 66
  3158  0146  1903               	skipnz
  3159  0147  2932               	goto	l3779
  3160  0148  3A01               	xorlw	1	; case 67
  3161  0149  1903               	skipnz
  3162  014A  2925               	goto	l3777
  3163  014B  3A07               	xorlw	7	; case 68
  3164  014C  1903               	skipnz
  3165  014D  2937               	goto	l3783
  3166  014E  3A0B               	xorlw	11	; case 79
  3167  014F  1903               	skipnz
  3168  0150  2935               	goto	l3781
  3169  0151  3A1C               	xorlw	28	; case 83
  3170  0152  1903               	skipnz
  3171  0153  28DB               	goto	l3757
  3172  0154  3A06               	xorlw	6	; case 85
  3173  0155  1903               	skipnz
  3174  0156  2937               	goto	l3783
  3175  0157  3A0D               	xorlw	13	; case 88
  3176  0158  1903               	skipnz
  3177  0159  2939               	goto	l3785
  3178  015A  293E               	goto	l3787
  3179  015B                     l177:	
  3180                           
  3181                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  3182  015B  0020               	movlb	0	; select bank0
  3183  015C  1950               	btfsc	xvprintf@f,2
  3184  015D  2993               	goto	l3801
  3185  015E  3044               	movlw	68
  3186  015F  0654               	xorwf	xvprintf@d,w
  3187  0160  1903               	btfsc	3,2
  3188  0161  2975               	goto	l3797
  3189  0162  0828               	movf	xvprintf@arp,w
  3190  0163  0086               	movwf	6
  3191  0164  0187               	clrf	7
  3192  0165  0801               	movf	1,w
  3193  0166  0084               	movwf	4
  3194  0167  0185               	clrf	5
  3195  0168  3002               	movlw	2
  3196  0169  0781               	addwf	1,f
  3197  016A  3F00               	moviw [0]fsr0
  3198  016B  00A9               	movwf	??_xvprintf
  3199  016C  3F01               	moviw [1]fsr0
  3200  016D  00AA               	movwf	??_xvprintf+1
  3201  016E  0829               	movf	??_xvprintf,w
  3202  016F  00BD               	movwf	_xvprintf$199
  3203  0170  082A               	movf	??_xvprintf+1,w
  3204  0171  00BE               	movwf	_xvprintf$199+1
  3205  0172  01BF               	clrf	_xvprintf$199+2
  3206  0173  01C0               	clrf	_xvprintf$199+3
  3207  0174  298A               	goto	l3799
  3208  0175                     l3797:	
  3209  0175  0828               	movf	xvprintf@arp,w
  3210  0176  0086               	movwf	6
  3211  0177  0187               	clrf	7
  3212  0178  0801               	movf	1,w
  3213  0179  0084               	movwf	4
  3214  017A  0185               	clrf	5
  3215  017B  3002               	movlw	2
  3216  017C  0781               	addwf	1,f
  3217  017D  3F00               	moviw [0]fsr0
  3218  017E  00A9               	movwf	??_xvprintf
  3219  017F  3F01               	moviw [1]fsr0
  3220  0180  00AA               	movwf	??_xvprintf+1
  3221  0181  0829               	movf	??_xvprintf,w
  3222  0182  00BD               	movwf	_xvprintf$199
  3223  0183  082A               	movf	??_xvprintf+1,w
  3224  0184  00BE               	movwf	_xvprintf$199+1
  3225  0185  0D89               	rlf	9,f
  3226  0186  3B89               	subwfb	9,f
  3227  0187  0989               	comf	9,f
  3228  0188  00BF               	movwf	_xvprintf$199+2
  3229  0189  00C0               	movwf	_xvprintf$199+3
  3230  018A                     l3799:	
  3231  018A  0840               	movf	_xvprintf$199+3,w
  3232  018B  00CF               	movwf	xvprintf@v+3
  3233  018C  083F               	movf	_xvprintf$199+2,w
  3234  018D  00CE               	movwf	xvprintf@v+2
  3235  018E  083E               	movf	_xvprintf$199+1,w
  3236  018F  00CD               	movwf	xvprintf@v+1
  3237  0190  083D               	movf	_xvprintf$199,w
  3238  0191  00CC               	movwf	xvprintf@v
  3239  0192  29A3               	goto	l3803
  3240  0193                     l3801:	
  3241  0193  0828               	movf	xvprintf@arp,w
  3242  0194  0086               	movwf	6
  3243  0195  0187               	clrf	7
  3244  0196  0801               	movf	1,w
  3245  0197  0084               	movwf	4
  3246  0198  0185               	clrf	5
  3247  0199  3004               	movlw	4
  3248  019A  0781               	addwf	1,f
  3249  019B  3F00               	moviw [0]fsr0
  3250  019C  00CC               	movwf	xvprintf@v
  3251  019D  3F01               	moviw [1]fsr0
  3252  019E  00CD               	movwf	xvprintf@v+1
  3253  019F  3F02               	moviw [2]fsr0
  3254  01A0  00CE               	movwf	xvprintf@v+2
  3255  01A1  3F03               	moviw [3]fsr0
  3256  01A2  00CF               	movwf	xvprintf@v+3
  3257  01A3                     l3803:	
  3258                           
  3259                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  3260  01A3  3044               	movlw	68
  3261  01A4  0654               	xorwf	xvprintf@d,w
  3262  01A5  1903               	btfsc	3,2
  3263  01A6  1FCF               	btfss	xvprintf@v+3,7
  3264  01A7  29B4               	goto	l3809
  3265                           
  3266                           ;xprintf.c: 147: v = 0 - v;
  3267  01A8  09CC               	comf	xvprintf@v,f
  3268  01A9  09CD               	comf	xvprintf@v+1,f
  3269  01AA  09CE               	comf	xvprintf@v+2,f
  3270  01AB  09CF               	comf	xvprintf@v+3,f
  3271  01AC  0ACC               	incf	xvprintf@v,f
  3272  01AD  1903               	skipnz
  3273  01AE  0ACD               	incf	xvprintf@v+1,f
  3274  01AF  1903               	skipnz
  3275  01B0  0ACE               	incf	xvprintf@v+2,f
  3276  01B1  1903               	skipnz
  3277  01B2  0ACF               	incf	xvprintf@v+3,f
  3278                           
  3279                           ;xprintf.c: 148: f |= 8;
  3280  01B3  15D0               	bsf	xvprintf@f,3
  3281  01B4                     l3809:	
  3282                           
  3283                           ;xprintf.c: 149: }
  3284                           ;xprintf.c: 150: i = 0;
  3285  01B4  01D2               	clrf	xvprintf@i
  3286  01B5  01D3               	clrf	xvprintf@i+1
  3287  01B6                     l3811:	
  3288                           ;xprintf.c: 151: do {
  3289                           
  3290                           
  3291                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  3292  01B6  0846               	movf	xvprintf@r,w
  3293  01B7  00F2               	movwf	___llmod@divisor
  3294  01B8  0847               	movf	xvprintf@r+1,w
  3295  01B9  00F3               	movwf	___llmod@divisor+1
  3296  01BA  01F4               	clrf	___llmod@divisor+2
  3297  01BB  01F5               	clrf	___llmod@divisor+3
  3298  01BC  084F               	movf	xvprintf@v+3,w
  3299  01BD  00F9               	movwf	___llmod@dividend+3
  3300  01BE  084E               	movf	xvprintf@v+2,w
  3301  01BF  00F8               	movwf	___llmod@dividend+2
  3302  01C0  084D               	movf	xvprintf@v+1,w
  3303  01C1  00F7               	movwf	___llmod@dividend+1
  3304  01C2  084C               	movf	xvprintf@v,w
  3305  01C3  00F6               	movwf	___llmod@dividend
  3306  01C4  3185  2564  3180   	fcall	___llmod
  3307  01C7  0872               	movf	?___llmod,w
  3308  01C8  0020               	movlb	0	; select bank0
  3309  01C9  00A9               	movwf	??_xvprintf
  3310  01CA  0829               	movf	??_xvprintf,w
  3311  01CB  00D4               	movwf	xvprintf@d
  3312  01CC  0846               	movf	xvprintf@r,w
  3313  01CD  00F2               	movwf	___lldiv@divisor
  3314  01CE  0847               	movf	xvprintf@r+1,w
  3315  01CF  00F3               	movwf	___lldiv@divisor+1
  3316  01D0  01F4               	clrf	___lldiv@divisor+2
  3317  01D1  01F5               	clrf	___lldiv@divisor+3
  3318  01D2  084F               	movf	xvprintf@v+3,w
  3319  01D3  00F9               	movwf	___lldiv@dividend+3
  3320  01D4  084E               	movf	xvprintf@v+2,w
  3321  01D5  00F8               	movwf	___lldiv@dividend+2
  3322  01D6  084D               	movf	xvprintf@v+1,w
  3323  01D7  00F7               	movwf	___lldiv@dividend+1
  3324  01D8  084C               	movf	xvprintf@v,w
  3325  01D9  00F6               	movwf	___lldiv@dividend
  3326  01DA  3185  2511  3180   	fcall	___lldiv
  3327  01DD  0875               	movf	?___lldiv+3,w
  3328  01DE  0020               	movlb	0	; select bank0
  3329  01DF  00CF               	movwf	xvprintf@v+3
  3330  01E0  0874               	movf	?___lldiv+2,w
  3331  01E1  00CE               	movwf	xvprintf@v+2
  3332  01E2  0873               	movf	?___lldiv+1,w
  3333  01E3  00CD               	movwf	xvprintf@v+1
  3334  01E4  0872               	movf	?___lldiv,w
  3335  01E5  00CC               	movwf	xvprintf@v
  3336                           
  3337                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  3338  01E6  300A               	movlw	10
  3339  01E7  0254               	subwf	xvprintf@d,w
  3340  01E8  1C03               	skipc
  3341  01E9  29F8               	goto	l3825
  3342  01EA  3078               	movlw	120
  3343  01EB  0655               	xorwf	xvprintf@c,w
  3344  01EC  1903               	btfsc	3,2
  3345  01ED  29F0               	goto	l3821
  3346  01EE  3007               	movlw	7
  3347  01EF  29F1               	goto	L4
  3348  01F0                     l3821:	
  3349  01F0  3027               	movlw	39
  3350  01F1                     L4:	
  3351  01F1  00C1               	movwf	_xvprintf$200
  3352  01F2  3000               	movlw	0
  3353  01F3  00C2               	movwf	_xvprintf$200+1
  3354  01F4  0841               	movf	_xvprintf$200,w
  3355  01F5  00A9               	movwf	??_xvprintf
  3356  01F6  0829               	movf	??_xvprintf,w
  3357  01F7  07D4               	addwf	xvprintf@d,f
  3358  01F8                     l3825:	
  3359                           
  3360                           ;xprintf.c: 154: s[i++] = d + '0';
  3361  01F8  0854               	movf	xvprintf@d,w
  3362  01F9  3E30               	addlw	48
  3363  01FA  00A9               	movwf	??_xvprintf
  3364  01FB  0852               	movf	xvprintf@i,w
  3365  01FC  3E2D               	addlw	(low (xvprintf@s| 0))& (0+255)
  3366  01FD  0086               	movwf	6
  3367  01FE  0187               	clrf	7
  3368  01FF  0829               	movf	??_xvprintf,w
  3369  0200  0081               	movwf	1
  3370  0201  3001               	movlw	1
  3371  0202  07D2               	addwf	xvprintf@i,f
  3372  0203  3000               	movlw	0
  3373  0204  3DD3               	addwfc	xvprintf@i+1,f
  3374                           
  3375                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  3376  0205  084F               	movf	xvprintf@v+3,w
  3377  0206  044E               	iorwf	xvprintf@v+2,w
  3378  0207  044D               	iorwf	xvprintf@v+1,w
  3379  0208  044C               	iorwf	xvprintf@v,w
  3380  0209  1903               	skipnz
  3381  020A  2A12               	goto	l200
  3382  020B  3000               	movlw	0
  3383  020C  0253               	subwf	xvprintf@i+1,w
  3384  020D  3010               	movlw	16
  3385  020E  1903               	skipnz
  3386  020F  0252               	subwf	xvprintf@i,w
  3387  0210  1C03               	skipc
  3388  0211  29B6               	goto	l3811
  3389  0212                     l200:	
  3390                           
  3391                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  3392  0212  1DD0               	btfss	xvprintf@f,3
  3393  0213  2A20               	goto	l3837
  3394  0214  302D               	movlw	45
  3395  0215  00A9               	movwf	??_xvprintf
  3396  0216  0852               	movf	xvprintf@i,w
  3397  0217  3E2D               	addlw	(low (xvprintf@s| 0))& (0+255)
  3398  0218  0086               	movwf	6
  3399  0219  0187               	clrf	7
  3400  021A  0829               	movf	??_xvprintf,w
  3401  021B  0081               	movwf	1
  3402  021C  3001               	movlw	1
  3403  021D  07D2               	addwf	xvprintf@i,f
  3404  021E  3000               	movlw	0
  3405  021F  3DD3               	addwfc	xvprintf@i+1,f
  3406  0220                     l3837:	
  3407                           
  3408                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  3409  0220  0853               	movf	xvprintf@i+1,w
  3410  0221  00CB               	movwf	xvprintf@j+1
  3411  0222  0852               	movf	xvprintf@i,w
  3412  0223  00CA               	movwf	xvprintf@j
  3413  0224  1850               	btfsc	xvprintf@f,0
  3414  0225  2A28               	goto	l3843
  3415  0226  3020               	movlw	32
  3416  0227  2A29               	goto	L5
  3417  0228                     l3843:	
  3418  0228  3030               	movlw	48
  3419  0229                     L5:	
  3420  0229  00C3               	movwf	_xvprintf$201
  3421  022A  3000               	movlw	0
  3422  022B  00C4               	movwf	_xvprintf$201+1
  3423  022C  0843               	movf	_xvprintf$201,w
  3424  022D  00A9               	movwf	??_xvprintf
  3425  022E  0829               	movf	??_xvprintf,w
  3426  022F  00D4               	movwf	xvprintf@d
  3427                           
  3428                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  3429  0230  2A35               	goto	l3847
  3430  0231                     l3845:	
  3431  0231  0854               	movf	xvprintf@d,w
  3432  0232  3186  2653  3180   	fcall	_xputc
  3433  0235                     l3847:	
  3434  0235  0020               	movlb	0	; select bank0
  3435  0236  18D0               	btfsc	xvprintf@f,1
  3436  0237  2A47               	goto	l3851
  3437  0238  084B               	movf	xvprintf@j+1,w
  3438  0239  00AA               	movwf	??_xvprintf+1
  3439  023A  084A               	movf	xvprintf@j,w
  3440  023B  00A9               	movwf	??_xvprintf
  3441  023C  0ACA               	incf	xvprintf@j,f
  3442  023D  1903               	skipnz
  3443  023E  0ACB               	incf	xvprintf@j+1,f
  3444  023F  0849               	movf	xvprintf@w+1,w
  3445  0240  022A               	subwf	??_xvprintf+1,w
  3446  0241  1D03               	skipz
  3447  0242  2A45               	goto	u3925
  3448  0243  0848               	movf	xvprintf@w,w
  3449  0244  0229               	subwf	??_xvprintf,w
  3450  0245                     u3925:	
  3451  0245  1C03               	skipc
  3452  0246  2A31               	goto	l3845
  3453  0247                     l3851:	
  3454                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  3455                           
  3456  0247  3001               	movlw	1
  3457  0248  02D2               	subwf	xvprintf@i,f
  3458  0249  3000               	movlw	0
  3459  024A  3BD3               	subwfb	xvprintf@i+1,f
  3460  024B  0852               	movf	xvprintf@i,w
  3461  024C  3E2D               	addlw	(low (xvprintf@s| 0))& (0+255)
  3462  024D  0086               	movwf	6
  3463  024E  0187               	clrf	7
  3464  024F  0801               	movf	1,w
  3465  0250  3186  2653  3180   	fcall	_xputc
  3466  0253  0020               	movlb	0	; select bank0
  3467  0254  0852               	movf	xvprintf@i,w
  3468  0255  0453               	iorwf	xvprintf@i+1,w
  3469  0256  1903               	btfsc	3,2
  3470  0257  2A5D               	goto	l3857
  3471  0258  2A47               	goto	l3851
  3472  0259                     l3855:	
  3473                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  3474                           
  3475  0259  3020               	movlw	32
  3476  025A  3186  2653  3180   	fcall	_xputc
  3477  025D                     l3857:	
  3478  025D  0020               	movlb	0	; select bank0
  3479  025E  084B               	movf	xvprintf@j+1,w
  3480  025F  00AA               	movwf	??_xvprintf+1
  3481  0260  084A               	movf	xvprintf@j,w
  3482  0261  00A9               	movwf	??_xvprintf
  3483  0262  0ACA               	incf	xvprintf@j,f
  3484  0263  1903               	skipnz
  3485  0264  0ACB               	incf	xvprintf@j+1,f
  3486  0265  0849               	movf	xvprintf@w+1,w
  3487  0266  022A               	subwf	??_xvprintf+1,w
  3488  0267  1D03               	skipz
  3489  0268  2A6B               	goto	u3945
  3490  0269  0848               	movf	xvprintf@w,w
  3491  026A  0229               	subwf	??_xvprintf,w
  3492  026B                     u3945:	
  3493  026B  1803               	btfsc	3,0
  3494  026C  2844               	goto	l144
  3495  026D  2A59               	goto	l3855
  3496  026E                     __end_of_xvprintf:	
  3497                           ;xprintf.c: 161: }
  3498                           
  3499                           
  3500                           	psect	text3
  3501  07C4                     __ptext3:	
  3502 ;; *************** function _xputs *****************
  3503 ;; Defined at:
  3504 ;;		line 44 in file "xprintf.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  str             1    wreg     PTR const unsigned char 
  3507 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  str             1    9[COMMON] PTR const unsigned char 
  3510 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3520 ;;      Params:         0       0       0       0       0       0
  3521 ;;      Locals:         1       0       0       0       0       0
  3522 ;;      Temps:          1       0       0       0       0       0
  3523 ;;      Totals:         2       0       0       0       0       0
  3524 ;;Total ram usage:        2 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    6
  3527 ;; This function calls:
  3528 ;;		_xputc
  3529 ;; This function is called by:
  3530 ;;		_xvprintf
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           
  3535                           ;psect for function _xputs
  3536  07C4                     _xputs:	
  3537                           
  3538                           ;incstack = 0
  3539                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3540                           ;xputs@str stored from wreg
  3541  07C4  00F9               	movwf	xputs@str
  3542  07C5                     l2509:	
  3543                           ;xprintf.c: 48: while (*str)
  3544                           
  3545  07C5  0879               	movf	xputs@str,w
  3546  07C6  0086               	movwf	6
  3547  07C7  0187               	clrf	7
  3548  07C8  0801               	movf	1,w
  3549  07C9  1903               	btfsc	3,2
  3550  07CA  0008               	return
  3551                           
  3552                           ;xprintf.c: 49: xputc(*str++);
  3553  07CB  0879               	movf	xputs@str,w
  3554  07CC  0086               	movwf	6
  3555  07CD  0187               	clrf	7
  3556  07CE  0801               	movf	1,w
  3557  07CF  3186  2653  3187   	fcall	_xputc
  3558  07D2  3001               	movlw	1
  3559  07D3  00F8               	movwf	??_xputs
  3560  07D4  0878               	movf	??_xputs,w
  3561  07D5  07F9               	addwf	xputs@str,f
  3562  07D6  2FC5               	goto	l2509
  3563  07D7                     __end_of_xputs:	
  3564                           
  3565                           	psect	text4
  3566  0653                     __ptext4:	
  3567 ;; *************** function _xputc *****************
  3568 ;; Defined at:
  3569 ;;		line 26 in file "xprintf.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  c               1    wreg     unsigned char 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  c               1    7[COMMON] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3583 ;;      Params:         0       0       0       0       0       0
  3584 ;;      Locals:         1       0       0       0       0       0
  3585 ;;      Temps:          1       0       0       0       0       0
  3586 ;;      Totals:         2       0       0       0       0       0
  3587 ;;Total ram usage:        2 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    5
  3590 ;; This function calls:
  3591 ;;		Absolute function
  3592 ;;		_LCD_Put
  3593 ;; This function is called by:
  3594 ;;		_xputs
  3595 ;;		_xvprintf
  3596 ;;		_xfputs
  3597 ;;		_put_dump
  3598 ;;		_xgets
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           
  3603                           ;psect for function _xputc
  3604  0653                     _xputc:	
  3605                           
  3606                           ;incstack = 0
  3607                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3608                           ;xputc@c stored from wreg
  3609  0653  00F7               	movwf	xputc@c
  3610  0654  300A               	movlw	10
  3611  0655  0677               	xorwf	xputc@c,w
  3612  0656  1D03               	btfss	3,2
  3613  0657  2E62               	goto	l2487
  3614  0658  30A9               	movlw	(low (STR_4| (0+32768)))& (0+255)
  3615  0659  00F6               	movwf	??_xputc
  3616  065A  0876               	movf	??_xputc,w
  3617  065B  00F5               	movwf	LCD_Put@word
  3618  065C  0020               	movlb	0	; select bank0
  3619  065D  086B               	movf	_xfunc_out+1,w
  3620  065E  008A               	movwf	10
  3621  065F  086A               	movf	_xfunc_out,w
  3622  0660  000A               	callw
  3623  0661  3186               	pagesel	$
  3624  0662                     l2487:	
  3625                           
  3626                           ;xprintf.c: 30: if (outptr) {
  3627  0662  087B               	movf	_outptr,w
  3628  0663  1903               	btfsc	3,2
  3629  0664  2E71               	goto	l2495
  3630                           
  3631                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  3632  0665  0877               	movf	xputc@c,w
  3633  0666  00F6               	movwf	??_xputc
  3634  0667  087B               	movf	_outptr,w
  3635  0668  0086               	movwf	6
  3636  0669  0187               	clrf	7
  3637  066A  0876               	movf	??_xputc,w
  3638  066B  0081               	movwf	1
  3639  066C  3001               	movlw	1
  3640  066D  00F6               	movwf	??_xputc
  3641  066E  0876               	movf	??_xputc,w
  3642  066F  07FB               	addwf	_outptr,f
  3643                           
  3644                           ;xprintf.c: 32: return;
  3645  0670  0008               	return
  3646  0671                     l2495:	
  3647                           
  3648                           ;xprintf.c: 33: }
  3649                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  3650  0671  0020               	movlb	0	; select bank0
  3651  0672  086A               	movf	_xfunc_out,w
  3652  0673  046B               	iorwf	_xfunc_out+1,w
  3653  0674  1903               	btfsc	3,2
  3654  0675  0008               	return
  3655  0676  0877               	movf	xputc@c,w
  3656  0677  00F6               	movwf	??_xputc
  3657  0678  0876               	movf	??_xputc,w
  3658  0679  00F5               	movwf	LCD_Put@word
  3659  067A  086B               	movf	_xfunc_out+1,w
  3660  067B  008A               	movwf	10
  3661  067C  086A               	movf	_xfunc_out,w
  3662  067D  000A               	callw
  3663  067E  3186               	pagesel	$
  3664  067F  0008               	return
  3665  0680                     __end_of_xputc:	
  3666                           
  3667                           	psect	text5
  3668  0FA0                     __ptext5:	
  3669 ;; *************** function _LCD_Put *****************
  3670 ;; Defined at:
  3671 ;;		line 54 in file "LCD.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  word            1    5[COMMON] char 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0, pclath, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3685 ;;      Params:         1       0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0
  3688 ;;      Totals:         1       0       0       0       0       0
  3689 ;;Total ram usage:        1 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    4
  3692 ;; This function calls:
  3693 ;;		_LCD_WriteData
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;;		_xputc
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           
  3701                           ;psect for function _LCD_Put
  3702  0FA0                     _LCD_Put:	
  3703                           
  3704                           ;LCD.c: 56: LATA3 = 1;
  3705                           
  3706                           ;incstack = 0
  3707                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  3708  0FA0  0022               	movlb	2	; select bank2
  3709  0FA1  158C               	bsf	12,3	;volatile
  3710                           
  3711                           ;LCD.c: 57: LCD_WriteData(word);
  3712  0FA2  0875               	movf	LCD_Put@word,w
  3713  0FA3  3185  25A7         	fcall	_LCD_WriteData
  3714  0FA5  0008               	return
  3715  0FA6                     __end_of_LCD_Put:	
  3716                           
  3717                           	psect	text6
  3718  0766                     __ptext6:	
  3719 ;; *************** function ___wmul *****************
  3720 ;; Defined at:
  3721 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  multiplier      2    2[COMMON] unsigned int 
  3724 ;;  multiplicand    2    4[COMMON] unsigned int 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  product         2    6[COMMON] unsigned int 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  2    2[COMMON] unsigned int 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3736 ;;      Params:         4       0       0       0       0       0
  3737 ;;      Locals:         2       0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0
  3739 ;;      Totals:         6       0       0       0       0       0
  3740 ;;Total ram usage:        6 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    3
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_xvprintf
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           
  3751                           ;psect for function ___wmul
  3752  0766                     ___wmul:	
  3753                           
  3754                           ;incstack = 0
  3755                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3756  0766  01F6               	clrf	___wmul@product
  3757  0767  01F7               	clrf	___wmul@product+1
  3758  0768                     l2685:	
  3759  0768  1C72               	btfss	___wmul@multiplier,0
  3760  0769  2F6E               	goto	l881
  3761  076A  0874               	movf	___wmul@multiplicand,w
  3762  076B  07F6               	addwf	___wmul@product,f
  3763  076C  0875               	movf	___wmul@multiplicand+1,w
  3764  076D  3DF7               	addwfc	___wmul@product+1,f
  3765  076E                     l881:	
  3766  076E  3001               	movlw	1
  3767  076F                     u2095:	
  3768  076F  35F4               	lslf	___wmul@multiplicand,f
  3769  0770  0DF5               	rlf	___wmul@multiplicand+1,f
  3770  0771  0B89               	decfsz	9,f
  3771  0772  2F6F               	goto	u2095
  3772  0773  3001               	movlw	1
  3773  0774                     u2105:	
  3774  0774  36F3               	lsrf	___wmul@multiplier+1,f
  3775  0775  0CF2               	rrf	___wmul@multiplier,f
  3776  0776  0B89               	decfsz	9,f
  3777  0777  2F74               	goto	u2105
  3778  0778  0872               	movf	___wmul@multiplier,w
  3779  0779  0473               	iorwf	___wmul@multiplier+1,w
  3780  077A  1D03               	btfss	3,2
  3781  077B  2F68               	goto	l2685
  3782  077C  0877               	movf	___wmul@product+1,w
  3783  077D  00F3               	movwf	?___wmul+1
  3784  077E  0876               	movf	___wmul@product,w
  3785  077F  00F2               	movwf	?___wmul
  3786  0780  0008               	return
  3787  0781                     __end_of___wmul:	
  3788                           
  3789                           	psect	text7
  3790  0564                     __ptext7:	
  3791 ;; *************** function ___llmod *****************
  3792 ;; Defined at:
  3793 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  divisor         4    2[COMMON] unsigned long 
  3796 ;;  dividend        4    6[COMMON] unsigned long 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  counter         1    1[BANK0 ] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  4    2[COMMON] unsigned long 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3808 ;;      Params:         8       0       0       0       0       0
  3809 ;;      Locals:         0       1       0       0       0       0
  3810 ;;      Temps:          0       1       0       0       0       0
  3811 ;;      Totals:         8       2       0       0       0       0
  3812 ;;Total ram usage:       10 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    3
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_xvprintf
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           
  3823                           ;psect for function ___llmod
  3824  0564                     ___llmod:	
  3825                           
  3826                           ;incstack = 0
  3827                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3828  0564  0875               	movf	___llmod@divisor+3,w
  3829  0565  0474               	iorwf	___llmod@divisor+2,w
  3830  0566  0473               	iorwf	___llmod@divisor+1,w
  3831  0567  0472               	iorwf	___llmod@divisor,w
  3832  0568  1903               	skipnz
  3833  0569  2D9E               	goto	l3691
  3834  056A  0020               	movlb	0	; select bank0
  3835  056B  01A1               	clrf	___llmod@counter
  3836  056C  0AA1               	incf	___llmod@counter,f
  3837  056D                     l3681:	
  3838  056D  1BF5               	btfsc	___llmod@divisor+3,7
  3839  056E  2D7B               	goto	l3683
  3840  056F  3001               	movlw	1
  3841  0570                     u3625:	
  3842  0570  35F2               	lslf	___llmod@divisor,f
  3843  0571  0DF3               	rlf	___llmod@divisor+1,f
  3844  0572  0DF4               	rlf	___llmod@divisor+2,f
  3845  0573  0DF5               	rlf	___llmod@divisor+3,f
  3846  0574  0B89               	decfsz	9,f
  3847  0575  2D70               	goto	u3625
  3848  0576  3001               	movlw	1
  3849  0577  00A0               	movwf	??___llmod
  3850  0578  0820               	movf	??___llmod,w
  3851  0579  07A1               	addwf	___llmod@counter,f
  3852  057A  2D6D               	goto	l3681
  3853  057B                     l3683:	
  3854  057B  0875               	movf	___llmod@divisor+3,w
  3855  057C  0279               	subwf	___llmod@dividend+3,w
  3856  057D  1D03               	skipz
  3857  057E  2D89               	goto	u3645
  3858  057F  0874               	movf	___llmod@divisor+2,w
  3859  0580  0278               	subwf	___llmod@dividend+2,w
  3860  0581  1D03               	skipz
  3861  0582  2D89               	goto	u3645
  3862  0583  0873               	movf	___llmod@divisor+1,w
  3863  0584  0277               	subwf	___llmod@dividend+1,w
  3864  0585  1D03               	skipz
  3865  0586  2D89               	goto	u3645
  3866  0587  0872               	movf	___llmod@divisor,w
  3867  0588  0276               	subwf	___llmod@dividend,w
  3868  0589                     u3645:	
  3869  0589  1C03               	skipc
  3870  058A  2D93               	goto	l3687
  3871  058B  0872               	movf	___llmod@divisor,w
  3872  058C  02F6               	subwf	___llmod@dividend,f
  3873  058D  0873               	movf	___llmod@divisor+1,w
  3874  058E  3BF7               	subwfb	___llmod@dividend+1,f
  3875  058F  0874               	movf	___llmod@divisor+2,w
  3876  0590  3BF8               	subwfb	___llmod@dividend+2,f
  3877  0591  0875               	movf	___llmod@divisor+3,w
  3878  0592  3BF9               	subwfb	___llmod@dividend+3,f
  3879  0593                     l3687:	
  3880  0593  3001               	movlw	1
  3881  0594                     u3655:	
  3882  0594  36F5               	lsrf	___llmod@divisor+3,f
  3883  0595  0CF4               	rrf	___llmod@divisor+2,f
  3884  0596  0CF3               	rrf	___llmod@divisor+1,f
  3885  0597  0CF2               	rrf	___llmod@divisor,f
  3886  0598  0B89               	decfsz	9,f
  3887  0599  2D94               	goto	u3655
  3888  059A  3001               	movlw	1
  3889  059B  02A1               	subwf	___llmod@counter,f
  3890  059C  1D03               	btfss	3,2
  3891  059D  2D7B               	goto	l3683
  3892  059E                     l3691:	
  3893  059E  0879               	movf	___llmod@dividend+3,w
  3894  059F  00F5               	movwf	?___llmod+3
  3895  05A0  0878               	movf	___llmod@dividend+2,w
  3896  05A1  00F4               	movwf	?___llmod+2
  3897  05A2  0877               	movf	___llmod@dividend+1,w
  3898  05A3  00F3               	movwf	?___llmod+1
  3899  05A4  0876               	movf	___llmod@dividend,w
  3900  05A5  00F2               	movwf	?___llmod
  3901  05A6  0008               	return
  3902  05A7                     __end_of___llmod:	
  3903                           
  3904                           	psect	text8
  3905  0511                     __ptext8:	
  3906 ;; *************** function ___lldiv *****************
  3907 ;; Defined at:
  3908 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  divisor         4    2[COMMON] unsigned long 
  3911 ;;  dividend        4    6[COMMON] unsigned long 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  quotient        4    1[BANK0 ] unsigned long 
  3914 ;;  counter         1    5[BANK0 ] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  4    2[COMMON] unsigned long 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3924 ;;      Params:         8       0       0       0       0       0
  3925 ;;      Locals:         0       5       0       0       0       0
  3926 ;;      Temps:          0       1       0       0       0       0
  3927 ;;      Totals:         8       6       0       0       0       0
  3928 ;;Total ram usage:       14 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    3
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_xvprintf
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function ___lldiv
  3940  0511                     ___lldiv:	
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3944  0511  3000               	movlw	0
  3945  0512  0020               	movlb	0	; select bank0
  3946  0513  00A4               	movwf	___lldiv@quotient+3
  3947  0514  3000               	movlw	0
  3948  0515  00A3               	movwf	___lldiv@quotient+2
  3949  0516  3000               	movlw	0
  3950  0517  00A2               	movwf	___lldiv@quotient+1
  3951  0518  3000               	movlw	0
  3952  0519  00A1               	movwf	___lldiv@quotient
  3953  051A  0875               	movf	___lldiv@divisor+3,w
  3954  051B  0474               	iorwf	___lldiv@divisor+2,w
  3955  051C  0473               	iorwf	___lldiv@divisor+1,w
  3956  051D  0472               	iorwf	___lldiv@divisor,w
  3957  051E  1903               	skipnz
  3958  051F  2D5B               	goto	l3671
  3959  0520  01A5               	clrf	___lldiv@counter
  3960  0521  0AA5               	incf	___lldiv@counter,f
  3961  0522                     l3657:	
  3962  0522  1BF5               	btfsc	___lldiv@divisor+3,7
  3963  0523  2D30               	goto	l3659
  3964  0524  3001               	movlw	1
  3965  0525                     u3555:	
  3966  0525  35F2               	lslf	___lldiv@divisor,f
  3967  0526  0DF3               	rlf	___lldiv@divisor+1,f
  3968  0527  0DF4               	rlf	___lldiv@divisor+2,f
  3969  0528  0DF5               	rlf	___lldiv@divisor+3,f
  3970  0529  0B89               	decfsz	9,f
  3971  052A  2D25               	goto	u3555
  3972  052B  3001               	movlw	1
  3973  052C  00A0               	movwf	??___lldiv
  3974  052D  0820               	movf	??___lldiv,w
  3975  052E  07A5               	addwf	___lldiv@counter,f
  3976  052F  2D22               	goto	l3657
  3977  0530                     l3659:	
  3978  0530  3001               	movlw	1
  3979  0531                     u3575:	
  3980  0531  35A1               	lslf	___lldiv@quotient,f
  3981  0532  0DA2               	rlf	___lldiv@quotient+1,f
  3982  0533  0DA3               	rlf	___lldiv@quotient+2,f
  3983  0534  0DA4               	rlf	___lldiv@quotient+3,f
  3984  0535  0B89               	decfsz	9,f
  3985  0536  2D31               	goto	u3575
  3986  0537  0875               	movf	___lldiv@divisor+3,w
  3987  0538  0279               	subwf	___lldiv@dividend+3,w
  3988  0539  1D03               	skipz
  3989  053A  2D45               	goto	u3585
  3990  053B  0874               	movf	___lldiv@divisor+2,w
  3991  053C  0278               	subwf	___lldiv@dividend+2,w
  3992  053D  1D03               	skipz
  3993  053E  2D45               	goto	u3585
  3994  053F  0873               	movf	___lldiv@divisor+1,w
  3995  0540  0277               	subwf	___lldiv@dividend+1,w
  3996  0541  1D03               	skipz
  3997  0542  2D45               	goto	u3585
  3998  0543  0872               	movf	___lldiv@divisor,w
  3999  0544  0276               	subwf	___lldiv@dividend,w
  4000  0545                     u3585:	
  4001  0545  1C03               	skipc
  4002  0546  2D50               	goto	l3667
  4003  0547  0872               	movf	___lldiv@divisor,w
  4004  0548  02F6               	subwf	___lldiv@dividend,f
  4005  0549  0873               	movf	___lldiv@divisor+1,w
  4006  054A  3BF7               	subwfb	___lldiv@dividend+1,f
  4007  054B  0874               	movf	___lldiv@divisor+2,w
  4008  054C  3BF8               	subwfb	___lldiv@dividend+2,f
  4009  054D  0875               	movf	___lldiv@divisor+3,w
  4010  054E  3BF9               	subwfb	___lldiv@dividend+3,f
  4011  054F  1421               	bsf	___lldiv@quotient,0
  4012  0550                     l3667:	
  4013  0550  3001               	movlw	1
  4014  0551                     u3595:	
  4015  0551  36F5               	lsrf	___lldiv@divisor+3,f
  4016  0552  0CF4               	rrf	___lldiv@divisor+2,f
  4017  0553  0CF3               	rrf	___lldiv@divisor+1,f
  4018  0554  0CF2               	rrf	___lldiv@divisor,f
  4019  0555  0B89               	decfsz	9,f
  4020  0556  2D51               	goto	u3595
  4021  0557  3001               	movlw	1
  4022  0558  02A5               	subwf	___lldiv@counter,f
  4023  0559  1D03               	btfss	3,2
  4024  055A  2D30               	goto	l3659
  4025  055B                     l3671:	
  4026  055B  0824               	movf	___lldiv@quotient+3,w
  4027  055C  00F5               	movwf	?___lldiv+3
  4028  055D  0823               	movf	___lldiv@quotient+2,w
  4029  055E  00F4               	movwf	?___lldiv+2
  4030  055F  0822               	movf	___lldiv@quotient+1,w
  4031  0560  00F3               	movwf	?___lldiv+1
  4032  0561  0821               	movf	___lldiv@quotient,w
  4033  0562  00F2               	movwf	?___lldiv
  4034  0563  0008               	return
  4035  0564                     __end_of___lldiv:	
  4036                           
  4037                           	psect	text9
  4038  07D7                     __ptext9:	
  4039 ;; *************** function _mTouch_Init *****************
  4040 ;; Defined at:
  4041 ;;		line 12 in file "mTouch.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0, pclath, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4055 ;;      Params:         0       0       0       0       0       0
  4056 ;;      Locals:         0       0       0       0       0       0
  4057 ;;      Temps:          1       0       0       0       0       0
  4058 ;;      Totals:         1       0       0       0       0       0
  4059 ;;Total ram usage:        1 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    4
  4062 ;; This function calls:
  4063 ;;		_mTouch_PortInit
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _mTouch_Init
  4071  07D7                     _mTouch_Init:	
  4072                           
  4073                           ;mTouch.c: 14: mTouch_PortInit();
  4074                           
  4075                           ;incstack = 0
  4076                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4077  07D7  318F  27D6         	fcall	_mTouch_PortInit
  4078                           
  4079                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4080  07D9  0021               	movlb	1	; select bank1
  4081  07DA  0815               	movf	21,w	;volatile
  4082                           
  4083                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4084  07DB  1595               	bsf	21,3	;volatile
  4085                           
  4086                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4087  07DC  1695               	bsf	21,5	;volatile
  4088                           
  4089                           ;mTouch.c: 20: TMR0 = 0x00;
  4090  07DD  0020               	movlb	0	; select bank0
  4091  07DE  0195               	clrf	21	;volatile
  4092                           
  4093                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4094  07DF  141E               	bsf	30,0	;volatile
  4095                           
  4096                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4097  07E0  300C               	movlw	12
  4098  07E1  00F3               	movwf	??_mTouch_Init
  4099  07E2  0873               	movf	??_mTouch_Init,w
  4100  07E3  049E               	iorwf	30,f	;volatile
  4101                           
  4102                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4103  07E4  307F               	movlw	127
  4104  07E5  00F3               	movwf	??_mTouch_Init
  4105  07E6  0873               	movf	??_mTouch_Init,w
  4106  07E7  059E               	andwf	30,f	;volatile
  4107                           
  4108                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4109  07E8  019F               	clrf	31	;volatile
  4110  07E9  0008               	return
  4111  07EA                     __end_of_mTouch_Init:	
  4112                           
  4113                           	psect	text10
  4114  0FD6                     __ptext10:	
  4115 ;; *************** function _mTouch_PortInit *****************
  4116 ;; Defined at:
  4117 ;;		line 6 in file "mTouch.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;		None
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg, status,2, status,0
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4131 ;;      Params:         0       0       0       0       0       0
  4132 ;;      Locals:         0       0       0       0       0       0
  4133 ;;      Temps:          1       0       0       0       0       0
  4134 ;;      Totals:         1       0       0       0       0       0
  4135 ;;Total ram usage:        1 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    3
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_mTouch_Init
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           
  4146                           ;psect for function _mTouch_PortInit
  4147  0FD6                     _mTouch_PortInit:	
  4148                           
  4149                           ;mTouch.c: 8: TRISA |= (0x07);
  4150                           
  4151                           ;incstack = 0
  4152                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4153  0FD6  3007               	movlw	7
  4154  0FD7  00F2               	movwf	??_mTouch_PortInit
  4155  0FD8  0872               	movf	??_mTouch_PortInit,w
  4156  0FD9  0021               	movlb	1	; select bank1
  4157  0FDA  048C               	iorwf	12,f	;volatile
  4158                           
  4159                           ;mTouch.c: 9: ANSELA |= (0x07);
  4160  0FDB  3007               	movlw	7
  4161  0FDC  00F2               	movwf	??_mTouch_PortInit
  4162  0FDD  0872               	movf	??_mTouch_PortInit,w
  4163  0FDE  0023               	movlb	3	; select bank3
  4164  0FDF  048C               	iorwf	12,f	;volatile
  4165  0FE0  0008               	return
  4166  0FE1                     __end_of_mTouch_PortInit:	
  4167                           
  4168                           	psect	text11
  4169  07EA                     __ptext11:	
  4170 ;; *************** function _Timer4_Init *****************
  4171 ;; Defined at:
  4172 ;;		line 3 in file "Timer4.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4186 ;;      Params:         0       0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0       0
  4188 ;;      Temps:          1       0       0       0       0       0
  4189 ;;      Totals:         1       0       0       0       0       0
  4190 ;;Total ram usage:        1 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    3
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_main
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           
  4201                           ;psect for function _Timer4_Init
  4202  07EA                     _Timer4_Init:	
  4203                           
  4204                           ;Timer4.c: 5: PR4 = 0x7D;
  4205                           
  4206                           ;incstack = 0
  4207                           ; Regs used in _Timer4_Init: [wreg+status,2+status,0]
  4208  07EA  307D               	movlw	125
  4209  07EB  0028               	movlb	8	; select bank8
  4210  07EC  0096               	movwf	22	;volatile
  4211                           
  4212                           ;Timer4.c: 6: TMR4 = 0x00;
  4213  07ED  0195               	clrf	21	;volatile
  4214                           
  4215                           ;Timer4.c: 7: T4CON |= (0x03<<0);
  4216  07EE  3003               	movlw	3
  4217  07EF  00F2               	movwf	??_Timer4_Init
  4218  07F0  0872               	movf	??_Timer4_Init,w
  4219  07F1  0497               	iorwf	23,f	;volatile
  4220                           
  4221                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  4222  07F2  0817               	movf	23,w	;volatile
  4223                           
  4224                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  4225  07F3  1517               	bsf	23,2	;volatile
  4226                           
  4227                           ;Timer4.c: 11: TMR4IF = 0;
  4228  07F4  0020               	movlb	0	; select bank0
  4229  07F5  1093               	bcf	19,1	;volatile
  4230                           
  4231                           ;Timer4.c: 12: TMR4IE = 1;
  4232  07F6  0021               	movlb	1	; select bank1
  4233  07F7  1493               	bsf	19,1	;volatile
  4234                           
  4235                           ;Timer4.c: 13: PEIE = 1;
  4236  07F8  170B               	bsf	11,6	;volatile
  4237                           
  4238                           ;Timer4.c: 14: GIE = 1;
  4239  07F9  178B               	bsf	11,7	;volatile
  4240  07FA  0008               	return
  4241  07FB                     __end_of_Timer4_Init:	
  4242                           
  4243                           	psect	text12
  4244  0781                     __ptext12:	
  4245 ;; *************** function _Timer1_Init *****************
  4246 ;; Defined at:
  4247 ;;		line 3 in file "Timer1.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		wreg, status,2, status,0
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4261 ;;      Params:         0       0       0       0       0       0
  4262 ;;      Locals:         0       0       0       0       0       0
  4263 ;;      Temps:          1       0       0       0       0       0
  4264 ;;      Totals:         1       0       0       0       0       0
  4265 ;;Total ram usage:        1 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    3
  4268 ;; This function calls:
  4269 ;;		Nothing
  4270 ;; This function is called by:
  4271 ;;		_main
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           
  4276                           ;psect for function _Timer1_Init
  4277  0781                     _Timer1_Init:	
  4278                           
  4279                           ;Timer1.c: 5: TRISB |= (1<<6);
  4280                           
  4281                           ;incstack = 0
  4282                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4283  0781  0021               	movlb	1	; select bank1
  4284  0782  170D               	bsf	13,6	;volatile
  4285                           
  4286                           ;Timer1.c: 6: ANSELB &= ~(1<<6);
  4287  0783  30BF               	movlw	191
  4288  0784  00F2               	movwf	??_Timer1_Init
  4289  0785  0872               	movf	??_Timer1_Init,w
  4290  0786  0023               	movlb	3	; select bank3
  4291  0787  058D               	andwf	13,f	;volatile
  4292                           
  4293                           ;Timer1.c: 8: T1CON |= (0x01<<2);
  4294  0788  0020               	movlb	0	; select bank0
  4295  0789  1518               	bsf	24,2	;volatile
  4296                           
  4297                           ;Timer1.c: 9: T1CON &= ~(0x01<<3);
  4298  078A  30F7               	movlw	247
  4299  078B  00F2               	movwf	??_Timer1_Init
  4300  078C  0872               	movf	??_Timer1_Init,w
  4301  078D  0598               	andwf	24,f	;volatile
  4302                           
  4303                           ;Timer1.c: 10: T1CON |= (0x00<<4);
  4304  078E  0818               	movf	24,w	;volatile
  4305                           
  4306                           ;Timer1.c: 11: T1CON |= (0x02<<6);
  4307  078F  1798               	bsf	24,7	;volatile
  4308                           
  4309                           ;Timer1.c: 13: T1GCON = 0x00;
  4310  0790  0199               	clrf	25	;volatile
  4311                           
  4312                           ;Timer1.c: 15: TMR1 = 0x0000;
  4313  0791  0196               	clrf	22	;volatile
  4314  0792  0197               	clrf	23	;volatile
  4315                           
  4316                           ;Timer1.c: 17: TMR1IE = 1;
  4317  0793  0021               	movlb	1	; select bank1
  4318  0794  1411               	bsf	17,0	;volatile
  4319                           
  4320                           ;Timer1.c: 18: TMR1IF = 0;
  4321  0795  0020               	movlb	0	; select bank0
  4322  0796  1011               	bcf	17,0	;volatile
  4323                           
  4324                           ;Timer1.c: 19: PEIE = 1;
  4325  0797  170B               	bsf	11,6	;volatile
  4326                           
  4327                           ;Timer1.c: 20: GIE = 1;
  4328  0798  178B               	bsf	11,7	;volatile
  4329  0799  0008               	return
  4330  079A                     __end_of_Timer1_Init:	
  4331                           
  4332                           	psect	text13
  4333  03FE                     __ptext13:	
  4334 ;; *************** function _LCD_Init *****************
  4335 ;; Defined at:
  4336 ;;		line 28 in file "LCD.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0, pclath, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4350 ;;      Params:         0       0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0
  4352 ;;      Temps:          2       0       0       0       0       0
  4353 ;;      Totals:         2       0       0       0       0       0
  4354 ;;Total ram usage:        2 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    5
  4357 ;; This function calls:
  4358 ;;		_LCD_DisplayClear
  4359 ;;		_LCD_WriteData
  4360 ;; This function is called by:
  4361 ;;		_main
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           
  4366                           ;psect for function _LCD_Init
  4367  03FE                     _LCD_Init:	
  4368                           
  4369                           ;LCD.c: 30: LATA3 = 0;
  4370                           
  4371                           ;incstack = 0
  4372                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4373  03FE  0022               	movlb	2	; select bank2
  4374  03FF  118C               	bcf	12,3	;volatile
  4375                           
  4376                           ;LCD.c: 31: LATA4 = 0;
  4377  0400  120C               	bcf	12,4	;volatile
  4378                           
  4379                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  4380  0401  3002               	movlw	2
  4381  0402  00F7               	movwf	??_LCD_Init+1
  4382  0403  3038               	movlw	56
  4383  0404  00F6               	movwf	??_LCD_Init
  4384  0405  30AD               	movlw	173
  4385  0406                     u4047:	
  4386  0406  0B89               	decfsz	9,f
  4387  0407  2C06               	goto	u4047
  4388  0408  0BF6               	decfsz	??_LCD_Init,f
  4389  0409  2C06               	goto	u4047
  4390  040A  0BF7               	decfsz	??_LCD_Init+1,f
  4391  040B  2C06               	goto	u4047
  4392  040C  0000               	nop
  4393                           
  4394                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  4395  040D  3003               	movlw	3
  4396  040E  0020               	movlb	0	; select bank0
  4397  040F  008D               	movwf	13	;volatile
  4398                           
  4399                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4400  0410  0022               	movlb	2	; select bank2
  4401  0411  160C               	bsf	12,4	;volatile
  4402  0412  3200               	nop2	;2 cycle nop
  4403  0413  3200               	nop2	;2 cycle nop
  4404  0414  3200               	nop2	;2 cycle nop
  4405  0415  3200               	nop2	;2 cycle nop
  4406  0416  0022               	movlb	2	; select bank2
  4407  0417  120C               	bcf	12,4	;volatile
  4408  0418  3200               	nop2	;2 cycle nop
  4409  0419  3200               	nop2	;2 cycle nop
  4410  041A  3200               	nop2	;2 cycle nop
  4411  041B  3200               	nop2	;2 cycle nop
  4412                           
  4413                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  4414  041C  3034               	movlw	52
  4415  041D  00F6               	movwf	??_LCD_Init
  4416  041E  30F2               	movlw	242
  4417  041F                     u4057:	
  4418  041F  0B89               	decfsz	9,f
  4419  0420  2C1F               	goto	u4057
  4420  0421  0BF6               	decfsz	??_LCD_Init,f
  4421  0422  2C1F               	goto	u4057
  4422                           
  4423                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4424  0423  0022               	movlb	2	; select bank2
  4425  0424  160C               	bsf	12,4	;volatile
  4426  0425  3200               	nop2	;2 cycle nop
  4427  0426  3200               	nop2	;2 cycle nop
  4428  0427  3200               	nop2	;2 cycle nop
  4429  0428  3200               	nop2	;2 cycle nop
  4430  0429  0022               	movlb	2	; select bank2
  4431  042A  120C               	bcf	12,4	;volatile
  4432  042B  3200               	nop2	;2 cycle nop
  4433  042C  3200               	nop2	;2 cycle nop
  4434  042D  3200               	nop2	;2 cycle nop
  4435  042E  3200               	nop2	;2 cycle nop
  4436                           
  4437                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  4438  042F  3005               	movlw	5
  4439  0430  00F6               	movwf	??_LCD_Init
  4440  0431  3026               	movlw	38
  4441  0432                     u4067:	
  4442  0432  0B89               	decfsz	9,f
  4443  0433  2C32               	goto	u4067
  4444  0434  0BF6               	decfsz	??_LCD_Init,f
  4445  0435  2C32               	goto	u4067
  4446  0436  3200               	nop2
  4447                           
  4448                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4449  0437  0022               	movlb	2	; select bank2
  4450  0438  160C               	bsf	12,4	;volatile
  4451  0439  3200               	nop2	;2 cycle nop
  4452  043A  3200               	nop2	;2 cycle nop
  4453  043B  3200               	nop2	;2 cycle nop
  4454  043C  3200               	nop2	;2 cycle nop
  4455  043D  0022               	movlb	2	; select bank2
  4456  043E  120C               	bcf	12,4	;volatile
  4457  043F  3200               	nop2	;2 cycle nop
  4458  0440  3200               	nop2	;2 cycle nop
  4459  0441  3200               	nop2	;2 cycle nop
  4460  0442  3200               	nop2	;2 cycle nop
  4461                           
  4462                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  4463  0443  3005               	movlw	5
  4464  0444  00F6               	movwf	??_LCD_Init
  4465  0445  3026               	movlw	38
  4466  0446                     u4077:	
  4467  0446  0B89               	decfsz	9,f
  4468  0447  2C46               	goto	u4077
  4469  0448  0BF6               	decfsz	??_LCD_Init,f
  4470  0449  2C46               	goto	u4077
  4471  044A  3200               	nop2
  4472                           
  4473                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  4474  044B  3002               	movlw	2
  4475  044C  0020               	movlb	0	; select bank0
  4476  044D  008D               	movwf	13	;volatile
  4477                           
  4478                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4479  044E  0022               	movlb	2	; select bank2
  4480  044F  160C               	bsf	12,4	;volatile
  4481  0450  3200               	nop2	;2 cycle nop
  4482  0451  3200               	nop2	;2 cycle nop
  4483  0452  3200               	nop2	;2 cycle nop
  4484  0453  3200               	nop2	;2 cycle nop
  4485  0454  0022               	movlb	2	; select bank2
  4486  0455  120C               	bcf	12,4	;volatile
  4487  0456  3200               	nop2	;2 cycle nop
  4488  0457  3200               	nop2	;2 cycle nop
  4489  0458  3200               	nop2	;2 cycle nop
  4490  0459  3200               	nop2	;2 cycle nop
  4491                           
  4492                           ;LCD.c: 44: LCD_WriteData(0x28);
  4493  045A  3028               	movlw	40
  4494  045B  3185  25A7  3183   	fcall	_LCD_WriteData
  4495                           
  4496                           ;LCD.c: 45: LCD_WriteData(0x0c);
  4497  045E  300C               	movlw	12
  4498  045F  3185  25A7  3183   	fcall	_LCD_WriteData
  4499                           
  4500                           ;LCD.c: 46: LCD_DisplayClear();
  4501  0462  318F  27E1  3183   	fcall	_LCD_DisplayClear
  4502                           
  4503                           ;LCD.c: 47: LCD_WriteData(0x06);
  4504  0465  3006               	movlw	6
  4505  0466  3185  25A7         	fcall	_LCD_WriteData
  4506  0468  0008               	return
  4507  0469                     __end_of_LCD_Init:	
  4508                           
  4509                           	psect	text14
  4510  0FE1                     __ptext14:	
  4511 ;; *************** function _LCD_DisplayClear *****************
  4512 ;; Defined at:
  4513 ;;		line 64 in file "LCD.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;		None
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		wreg, status,2, status,0, pclath, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4527 ;;      Params:         0       0       0       0       0       0
  4528 ;;      Locals:         0       0       0       0       0       0
  4529 ;;      Temps:          1       0       0       0       0       0
  4530 ;;      Totals:         1       0       0       0       0       0
  4531 ;;Total ram usage:        1 bytes
  4532 ;; Hardware stack levels used:    1
  4533 ;; Hardware stack levels required when called:    4
  4534 ;; This function calls:
  4535 ;;		_LCD_WriteData
  4536 ;; This function is called by:
  4537 ;;		_LCD_Init
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           
  4542                           ;psect for function _LCD_DisplayClear
  4543  0FE1                     _LCD_DisplayClear:	
  4544                           
  4545                           ;LCD.c: 66: LATA3 = 0;
  4546                           
  4547                           ;incstack = 0
  4548                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  4549  0FE1  0022               	movlb	2	; select bank2
  4550  0FE2  118C               	bcf	12,3	;volatile
  4551                           
  4552                           ;LCD.c: 67: LCD_WriteData(0x01);
  4553  0FE3  3001               	movlw	1
  4554  0FE4  3185  25A7  318F   	fcall	_LCD_WriteData
  4555                           
  4556                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  4557  0FE7  3015               	movlw	21
  4558  0FE8  00F5               	movwf	??_LCD_DisplayClear
  4559  0FE9  30C6               	movlw	198
  4560  0FEA                     u4087:	
  4561  0FEA  0B89               	decfsz	9,f
  4562  0FEB  2FEA               	goto	u4087
  4563  0FEC  0BF5               	decfsz	??_LCD_DisplayClear,f
  4564  0FED  2FEA               	goto	u4087
  4565  0FEE  3200               	nop2
  4566  0FEF  0008               	return
  4567  0FF0                     __end_of_LCD_DisplayClear:	
  4568                           
  4569                           	psect	text15
  4570  079A                     __ptext15:	
  4571 ;; *************** function _LCD_CursorPosition *****************
  4572 ;; Defined at:
  4573 ;;		line 86 in file "LCD.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;  tx              1    wreg     unsigned char 
  4576 ;;  ty              1    5[COMMON] unsigned char 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  tx              1    7[COMMON] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0, pclath, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4588 ;;      Params:         1       0       0       0       0       0
  4589 ;;      Locals:         1       0       0       0       0       0
  4590 ;;      Temps:          1       0       0       0       0       0
  4591 ;;      Totals:         3       0       0       0       0       0
  4592 ;;Total ram usage:        3 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    4
  4595 ;; This function calls:
  4596 ;;		_LCD_WriteData
  4597 ;; This function is called by:
  4598 ;;		_main
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           
  4603                           ;psect for function _LCD_CursorPosition
  4604  079A                     _LCD_CursorPosition:	
  4605                           
  4606                           ;incstack = 0
  4607                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  4608                           ;LCD_CursorPosition@tx stored from wreg
  4609  079A  00F7               	movwf	LCD_CursorPosition@tx
  4610                           
  4611                           ;LCD.c: 88: LATA3 = 0;
  4612  079B  0022               	movlb	2	; select bank2
  4613  079C  118C               	bcf	12,3	;volatile
  4614                           
  4615                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  4616  079D  0875               	movf	LCD_CursorPosition@ty,w
  4617  079E  00F6               	movwf	??_LCD_CursorPosition
  4618  079F  3005               	movlw	5
  4619  07A0                     u2755:	
  4620  07A0  35F6               	lslf	??_LCD_CursorPosition,f
  4621  07A1  3EFF               	addlw	-1
  4622  07A2  1D03               	skipz
  4623  07A3  2FA0               	goto	u2755
  4624  07A4  3576               	lslf	??_LCD_CursorPosition,w
  4625  07A5  0477               	iorwf	LCD_CursorPosition@tx,w
  4626  07A6  3880               	iorlw	-128
  4627  07A7  3185  25A7  3187   	fcall	_LCD_WriteData
  4628                           
  4629                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  4630  07AA  306A               	movlw	106
  4631  07AB                     u4097:	
  4632  07AB  0B89               	decfsz	9,f
  4633  07AC  2FAB               	goto	u4097
  4634  07AD  3200               	nop2
  4635  07AE  0008               	return
  4636  07AF                     __end_of_LCD_CursorPosition:	
  4637                           
  4638                           	psect	text16
  4639  05A7                     __ptext16:	
  4640 ;; *************** function _LCD_WriteData *****************
  4641 ;; Defined at:
  4642 ;;		line 15 in file "LCD.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  point           1    wreg     char 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  point           1    4[COMMON] char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4656 ;;      Params:         0       0       0       0       0       0
  4657 ;;      Locals:         1       0       0       0       0       0
  4658 ;;      Temps:          2       0       0       0       0       0
  4659 ;;      Totals:         3       0       0       0       0       0
  4660 ;;Total ram usage:        3 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    3
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_LCD_Init
  4667 ;;		_LCD_Put
  4668 ;;		_LCD_DisplayClear
  4669 ;;		_LCD_CursorPosition
  4670 ;;		_LCD_CursorHome
  4671 ;;		_LCD_CursorShift
  4672 ;;		_LCD_DispShift
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           
  4677                           ;psect for function _LCD_WriteData
  4678  05A7                     _LCD_WriteData:	
  4679                           
  4680                           ;incstack = 0
  4681                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  4682                           ;LCD_WriteData@point stored from wreg
  4683  05A7  00F4               	movwf	LCD_WriteData@point
  4684                           
  4685                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  4686  05A8  30D5               	movlw	213
  4687  05A9                     u4107:	
  4688  05A9  0B89               	decfsz	9,f
  4689  05AA  2DA9               	goto	u4107
  4690  05AB  0000               	nop
  4691                           
  4692                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  4693  05AC  0874               	movf	LCD_WriteData@point,w
  4694  05AD  00F2               	movwf	??_LCD_WriteData
  4695  05AE  3004               	movlw	4
  4696  05AF                     u1755:	
  4697  05AF  1003               	clrc
  4698  05B0  1BF2               	btfsc	??_LCD_WriteData,7
  4699  05B1  1403               	setc
  4700  05B2  0CF2               	rrf	??_LCD_WriteData,f
  4701  05B3  0B89               	decfsz	9,f
  4702  05B4  2DAF               	goto	u1755
  4703  05B5  3003               	movlw	3
  4704  05B6  0572               	andwf	??_LCD_WriteData,w
  4705  05B7  00F3               	movwf	??_LCD_WriteData+1
  4706  05B8  0E74               	swapf	LCD_WriteData@point,w
  4707  05B9  390F               	andlw	15
  4708  05BA  1989               	btfsc	9,3
  4709  05BB  38F0               	iorlw	240
  4710  05BC  390C               	andlw	12
  4711  05BD  0709               	addwf	9,w
  4712  05BE  0473               	iorwf	??_LCD_WriteData+1,w
  4713  05BF  0020               	movlb	0	; select bank0
  4714  05C0  008D               	movwf	13	;volatile
  4715                           
  4716                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4717  05C1  0022               	movlb	2	; select bank2
  4718  05C2  160C               	bsf	12,4	;volatile
  4719  05C3  3200               	nop2	;2 cycle nop
  4720  05C4  3200               	nop2	;2 cycle nop
  4721  05C5  3200               	nop2	;2 cycle nop
  4722  05C6  3200               	nop2	;2 cycle nop
  4723  05C7  0022               	movlb	2	; select bank2
  4724  05C8  120C               	bcf	12,4	;volatile
  4725  05C9  3200               	nop2	;2 cycle nop
  4726  05CA  3200               	nop2	;2 cycle nop
  4727  05CB  3200               	nop2	;2 cycle nop
  4728  05CC  3200               	nop2	;2 cycle nop
  4729                           
  4730                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  4731  05CD  3003               	movlw	3
  4732  05CE  0574               	andwf	LCD_WriteData@point,w
  4733  05CF  00F2               	movwf	??_LCD_WriteData
  4734  05D0  0874               	movf	LCD_WriteData@point,w
  4735  05D1  390C               	andlw	12
  4736  05D2  0709               	addwf	9,w
  4737  05D3  0472               	iorwf	??_LCD_WriteData,w
  4738  05D4  0020               	movlb	0	; select bank0
  4739  05D5  008D               	movwf	13	;volatile
  4740                           
  4741                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4742  05D6  0022               	movlb	2	; select bank2
  4743  05D7  160C               	bsf	12,4	;volatile
  4744  05D8  3200               	nop2	;2 cycle nop
  4745  05D9  3200               	nop2	;2 cycle nop
  4746  05DA  3200               	nop2	;2 cycle nop
  4747  05DB  3200               	nop2	;2 cycle nop
  4748  05DC  0022               	movlb	2	; select bank2
  4749  05DD  120C               	bcf	12,4	;volatile
  4750  05DE  3200               	nop2	;2 cycle nop
  4751  05DF  3200               	nop2	;2 cycle nop
  4752  05E0  3200               	nop2	;2 cycle nop
  4753  05E1  3200               	nop2	;2 cycle nop
  4754  05E2  0008               	return
  4755  05E3                     __end_of_LCD_WriteData:	
  4756                           
  4757                           	psect	text17
  4758  0747                     __ptext17:	
  4759 ;; *************** function _DAC_Initialize *****************
  4760 ;; Defined at:
  4761 ;;		line 14 in file "MCP4726.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      void 
  4768 ;; Registers used:
  4769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4775 ;;      Params:         0       0       0       0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0
  4777 ;;      Temps:          0       2       0       0       0       0
  4778 ;;      Totals:         0       2       0       0       0       0
  4779 ;;Total ram usage:        2 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    6
  4782 ;; This function calls:
  4783 ;;		_I2C_Init
  4784 ;;		_I2C_Transmit
  4785 ;; This function is called by:
  4786 ;;		_main
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           
  4791                           ;psect for function _DAC_Initialize
  4792  0747                     _DAC_Initialize:	
  4793                           
  4794                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  4795                           
  4796                           ;incstack = 0
  4797                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4798  0747  01F7               	clrf	I2C_Init@address
  4799  0748  01F8               	clrf	I2C_Init@mode
  4800  0749  01F9               	clrf	I2C_Init@Speed
  4801  074A  3001               	movlw	1
  4802  074B  3186  26D6  3187   	fcall	_I2C_Init
  4803                           
  4804                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  4805  074E  0020               	movlb	0	; select bank0
  4806  074F  086E               	movf	_ConfigReg,w
  4807  0750  391F               	andlw	-225
  4808  0751  3880               	iorlw	128
  4809  0752  00EE               	movwf	_ConfigReg
  4810                           
  4811                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  4812  0753  106E               	bcf	_ConfigReg,0
  4813                           
  4814                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  4815  0754  30F9               	movlw	-7
  4816  0755  05EE               	andwf	_ConfigReg,f
  4817                           
  4818                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  4819  0756  30E7               	movlw	-25
  4820  0757  05EE               	andwf	_ConfigReg,f
  4821                           
  4822                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  4823  0758  3060               	movlw	96
  4824  0759  00A8               	movwf	??_DAC_Initialize
  4825  075A  0828               	movf	??_DAC_Initialize,w
  4826  075B  00A0               	movwf	I2C_Transmit@address
  4827  075C  306E               	movlw	(low (_ConfigReg| 0))& (0+255)
  4828  075D  00A9               	movwf	??_DAC_Initialize+1
  4829  075E  0829               	movf	??_DAC_Initialize+1,w
  4830  075F  00A1               	movwf	I2C_Transmit@pData
  4831  0760  01A2               	clrf	I2C_Transmit@size
  4832  0761  0AA2               	incf	I2C_Transmit@size,f
  4833  0762  3001               	movlw	1
  4834  0763  3186  26AB         	fcall	_I2C_Transmit
  4835  0765  0008               	return
  4836  0766                     __end_of_DAC_Initialize:	
  4837                           
  4838                           	psect	text18
  4839  06AB                     __ptext18:	
  4840 ;; *************** function _I2C_Transmit *****************
  4841 ;; Defined at:
  4842 ;;		line 23 in file "I2C_Common.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  I2Cx            1    wreg     enum E3062
  4845 ;;  address         1    0[BANK0 ] unsigned char 
  4846 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  4847 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4848 ;;  size            1    2[BANK0 ] unsigned char 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  I2Cx            1    6[BANK0 ] enum E3062
  4851 ;;  result          1    7[BANK0 ] char 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      char 
  4854 ;; Registers used:
  4855 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4861 ;;      Params:         0       3       0       0       0       0
  4862 ;;      Locals:         0       2       0       0       0       0
  4863 ;;      Temps:          0       3       0       0       0       0
  4864 ;;      Totals:         0       8       0       0       0       0
  4865 ;;Total ram usage:        8 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; Hardware stack levels required when called:    4
  4868 ;; This function calls:
  4869 ;;		_I2C1_Transmit
  4870 ;;		_I2C2_Transmit
  4871 ;; This function is called by:
  4872 ;;		_DAC_Initialize
  4873 ;;		_DAC_WriteVoltage
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           
  4878                           ;psect for function _I2C_Transmit
  4879  06AB                     _I2C_Transmit:	
  4880                           
  4881                           ;incstack = 0
  4882                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4883                           ;I2C_Transmit@I2Cx stored from wreg
  4884  06AB  0020               	movlb	0	; select bank0
  4885  06AC  00A6               	movwf	I2C_Transmit@I2Cx
  4886                           
  4887                           ;I2C_Common.c: 25: int8_t result;
  4888                           ;I2C_Common.c: 27: switch(I2Cx)
  4889  06AD  2ECC               	goto	l3877
  4890  06AE                     l3871:	
  4891                           ;I2C_Common.c: 28: {
  4892                           ;I2C_Common.c: 29: case I2C1_MODULE:
  4893                           
  4894                           
  4895                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  4896  06AE  0821               	movf	I2C_Transmit@pData,w
  4897  06AF  00A3               	movwf	??_I2C_Transmit
  4898  06B0  0823               	movf	??_I2C_Transmit,w
  4899  06B1  00F2               	movwf	I2C1_Transmit@pData
  4900  06B2  0822               	movf	I2C_Transmit@size,w
  4901  06B3  00A4               	movwf	??_I2C_Transmit+1
  4902  06B4  0824               	movf	??_I2C_Transmit+1,w
  4903  06B5  00F3               	movwf	I2C1_Transmit@size
  4904  06B6  0820               	movf	I2C_Transmit@address,w
  4905  06B7  3183  2380  3186   	fcall	_I2C1_Transmit
  4906  06BA  2EC7               	goto	L7
  4907  06BB                     l3873:	
  4908                           ;I2C_Common.c: 33: case I2C2_MODULE:
  4909                           
  4910                           ;I2C_Common.c: 31: break;
  4911                           
  4912                           
  4913                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  4914  06BB  0821               	movf	I2C_Transmit@pData,w
  4915  06BC  00A3               	movwf	??_I2C_Transmit
  4916  06BD  0823               	movf	??_I2C_Transmit,w
  4917  06BE  00F2               	movwf	I2C2_Transmit@pData
  4918  06BF  0822               	movf	I2C_Transmit@size,w
  4919  06C0  00A4               	movwf	??_I2C_Transmit+1
  4920  06C1  0824               	movf	??_I2C_Transmit+1,w
  4921  06C2  00F3               	movwf	I2C2_Transmit@size
  4922  06C3  0820               	movf	I2C_Transmit@address,w
  4923  06C4  3183  2301  3186   	fcall	_I2C2_Transmit
  4924  06C7                     L7:	
  4925  06C7  0020               	movlb	0	; select bank0
  4926  06C8  00A5               	movwf	??_I2C_Transmit+2
  4927  06C9  0825               	movf	??_I2C_Transmit+2,w
  4928  06CA  00A7               	movwf	I2C_Transmit@result
  4929                           
  4930                           ;I2C_Common.c: 36: }
  4931                           
  4932                           ;I2C_Common.c: 35: break;
  4933  06CB  2ED4               	goto	l3879
  4934  06CC                     l3877:	
  4935  06CC  0826               	movf	I2C_Transmit@I2Cx,w
  4936                           
  4937                           ; Switch size 1, requested type "space"
  4938                           ; Number of cases is 2, Range of values is 0 to 1
  4939                           ; switch strategies available:
  4940                           ; Name         Instructions Cycles
  4941                           ; simple_byte            7     4 (average)
  4942                           ; direct_byte           10     6 (fixed)
  4943                           ; jumptable            260     6 (fixed)
  4944                           ;	Chosen strategy is simple_byte
  4945  06CD  3A00               	xorlw	0	; case 0
  4946  06CE  1903               	skipnz
  4947  06CF  2EAE               	goto	l3871
  4948  06D0  3A01               	xorlw	1	; case 1
  4949  06D1  1903               	skipnz
  4950  06D2  2EBB               	goto	l3873
  4951  06D3  2ED4               	goto	l3879
  4952  06D4                     l3879:	
  4953                           
  4954                           ;I2C_Common.c: 37: return result;
  4955  06D4  0827               	movf	I2C_Transmit@result,w
  4956  06D5  0008               	return
  4957  06D6                     __end_of_I2C_Transmit:	
  4958                           
  4959                           	psect	text19
  4960  0301                     __ptext19:	
  4961 ;; *************** function _I2C2_Transmit *****************
  4962 ;; Defined at:
  4963 ;;		line 52 in file "I2C2.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  address         1    wreg     unsigned char 
  4966 ;;  pData           1    2[COMMON] PTR unsigned char 
  4967 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4968 ;;  size            1    3[COMMON] unsigned char 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  address         1    6[COMMON] unsigned char 
  4971 ;;  i               1    8[COMMON] unsigned char 
  4972 ;;  i               1    7[COMMON] unsigned char 
  4973 ;;  result          1    9[COMMON] char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      char 
  4976 ;; Registers used:
  4977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4983 ;;      Params:         2       0       0       0       0       0
  4984 ;;      Locals:         4       0       0       0       0       0
  4985 ;;      Temps:          2       0       0       0       0       0
  4986 ;;      Totals:         8       0       0       0       0       0
  4987 ;;Total ram usage:        8 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:    3
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_I2C_Transmit
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           
  4998                           ;psect for function _I2C2_Transmit
  4999  0301                     _I2C2_Transmit:	
  5000                           
  5001                           ;incstack = 0
  5002                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  5003                           ;I2C2_Transmit@address stored from wreg
  5004  0301  00F6               	movwf	I2C2_Transmit@address
  5005                           
  5006                           ;I2C2.c: 54: int8_t result = 0;
  5007  0302  01F9               	clrf	I2C2_Transmit@result
  5008                           
  5009                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  5010  0303  2B75               	goto	l3645
  5011  0304                     l3601:	
  5012                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5013                           
  5014                           ;I2C2.c: 57: {
  5015                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  5016                           
  5017  0304  3005               	movlw	5
  5018  0305  0024               	movlb	4	; select bank4
  5019  0306  051C               	andwf	28,w	;volatile
  5020  0307  00F4               	movwf	??_I2C2_Transmit
  5021  0308  081E               	movf	30,w	;volatile
  5022  0309  391F               	andlw	31
  5023  030A  0474               	iorwf	??_I2C2_Transmit,w
  5024  030B  1D03               	btfss	3,2
  5025  030C  2B04               	goto	l3601
  5026                           
  5027                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  5028  030D  141E               	bsf	30,0	;volatile
  5029  030E                     l3603:	
  5030                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5031                           
  5032  030E  3005               	movlw	5
  5033  030F  051C               	andwf	28,w	;volatile
  5034  0310  00F4               	movwf	??_I2C2_Transmit
  5035  0311  081E               	movf	30,w	;volatile
  5036  0312  391F               	andlw	31
  5037  0313  0474               	iorwf	??_I2C2_Transmit,w
  5038  0314  1D03               	btfss	3,2
  5039  0315  2B0E               	goto	l3603
  5040                           
  5041                           ;I2C2.c: 63: SSP2BUF = address << 1;
  5042  0316  3576               	lslf	I2C2_Transmit@address,w
  5043  0317  0099               	movwf	25	;volatile
  5044  0318                     l514:	
  5045                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  5046                           
  5047  0318  191C               	btfsc	28,2	;volatile
  5048  0319  2B18               	goto	l514
  5049                           
  5050                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  5051  031A  3000               	movlw	0
  5052  031B  1B1E               	btfsc	30,6	;volatile
  5053  031C  3001               	movlw	1
  5054  031D  00F9               	movwf	I2C2_Transmit@result
  5055                           
  5056                           ;I2C2.c: 67: if (!result)
  5057  031E  0879               	movf	I2C2_Transmit@result,w
  5058  031F  1D03               	btfss	3,2
  5059  0320  2B48               	goto	l3627
  5060                           
  5061                           ;I2C2.c: 68: {
  5062                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  5063  0321  01F7               	clrf	I2C2_Transmit@i
  5064  0322  2B27               	goto	l3625
  5065  0323                     l3623:	
  5066                           ;I2C2.c: 79: break;
  5067                           
  5068  0323  3001               	movlw	1
  5069  0324  00F4               	movwf	??_I2C2_Transmit
  5070  0325  0874               	movf	??_I2C2_Transmit,w
  5071  0326  07F7               	addwf	I2C2_Transmit@i,f
  5072  0327                     l3625:	
  5073  0327  0873               	movf	I2C2_Transmit@size,w
  5074  0328  0277               	subwf	I2C2_Transmit@i,w
  5075  0329  1803               	btfsc	3,0
  5076  032A  2B48               	goto	l3627
  5077  032B                     l3613:	
  5078                           ;I2C2.c: 70: {
  5079                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5080                           
  5081  032B  3005               	movlw	5
  5082  032C  051C               	andwf	28,w	;volatile
  5083  032D  00F4               	movwf	??_I2C2_Transmit
  5084  032E  081E               	movf	30,w	;volatile
  5085  032F  391F               	andlw	31
  5086  0330  0474               	iorwf	??_I2C2_Transmit,w
  5087  0331  1D03               	btfss	3,2
  5088  0332  2B2B               	goto	l3613
  5089                           
  5090                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  5091  0333  0877               	movf	I2C2_Transmit@i,w
  5092  0334  0772               	addwf	I2C2_Transmit@pData,w
  5093  0335  00F4               	movwf	??_I2C2_Transmit
  5094  0336  0874               	movf	??_I2C2_Transmit,w
  5095  0337  0086               	movwf	6
  5096  0338  0187               	clrf	7
  5097  0339  0801               	movf	1,w
  5098  033A  0099               	movwf	25	;volatile
  5099  033B                     l523:	
  5100                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  5101                           
  5102  033B  191C               	btfsc	28,2	;volatile
  5103  033C  2B3B               	goto	l523
  5104                           
  5105                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  5106  033D  3000               	movlw	0
  5107  033E  1B1E               	btfsc	30,6	;volatile
  5108  033F  3001               	movlw	1
  5109  0340  00F9               	movwf	I2C2_Transmit@result
  5110                           
  5111                           ;I2C2.c: 76: if (result)
  5112  0341  0879               	movf	I2C2_Transmit@result,w
  5113  0342  1903               	btfsc	3,2
  5114  0343  2B23               	goto	l3623
  5115                           
  5116                           ;I2C2.c: 77: {
  5117                           ;I2C2.c: 78: result = 2;
  5118  0344  3002               	movlw	2
  5119  0345  00F4               	movwf	??_I2C2_Transmit
  5120  0346  0874               	movf	??_I2C2_Transmit,w
  5121  0347  00F9               	movwf	I2C2_Transmit@result
  5122  0348                     l3627:	
  5123                           ;I2C2.c: 80: }
  5124                           ;I2C2.c: 81: }
  5125                           ;I2C2.c: 82: }
  5126                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5127                           
  5128  0348  3005               	movlw	5
  5129  0349  051C               	andwf	28,w	;volatile
  5130  034A  00F4               	movwf	??_I2C2_Transmit
  5131  034B  081E               	movf	30,w	;volatile
  5132  034C  391F               	andlw	31
  5133  034D  0474               	iorwf	??_I2C2_Transmit,w
  5134  034E  1D03               	btfss	3,2
  5135  034F  2B48               	goto	l3627
  5136                           
  5137                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  5138  0350  151E               	bsf	30,2	;volatile
  5139                           
  5140                           ;I2C2.c: 86: break;
  5141  0351  2B7E               	goto	l3647
  5142  0352                     l532:	
  5143                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  5144                           
  5145                           
  5146                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  5147  0352  0024               	movlb	4	; select bank4
  5148  0353  1D9C               	btfss	28,3	;volatile
  5149  0354  1E1C               	btfss	28,4	;volatile
  5150  0355  2B73               	goto	l3641
  5151                           
  5152                           ;I2C2.c: 90: {
  5153                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  5154  0356  01F8               	clrf	I2C2_Transmit@i_560
  5155  0357                     l3637:	
  5156  0357  0873               	movf	I2C2_Transmit@size,w
  5157  0358  0278               	subwf	I2C2_Transmit@i_560,w
  5158  0359  1803               	btfsc	3,0
  5159  035A  2B6E               	goto	l3639
  5160                           
  5161                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  5162  035B  0878               	movf	I2C2_Transmit@i_560,w
  5163  035C  0772               	addwf	I2C2_Transmit@pData,w
  5164  035D  00F4               	movwf	??_I2C2_Transmit
  5165  035E  0874               	movf	??_I2C2_Transmit,w
  5166  035F  0086               	movwf	6
  5167  0360  0187               	clrf	7
  5168  0361  0801               	movf	1,w
  5169  0362  00F5               	movwf	??_I2C2_Transmit+1
  5170  0363  0878               	movf	I2C2_Transmit@i_560,w
  5171  0364  3EA6               	addlw	(low (_I2C2_Config| 0))& (0+255)
  5172  0365  0086               	movwf	6
  5173  0366  0187               	clrf	7
  5174  0367  0875               	movf	??_I2C2_Transmit+1,w
  5175  0368  0081               	movwf	1
  5176  0369  3001               	movlw	1
  5177  036A  00F4               	movwf	??_I2C2_Transmit
  5178  036B  0874               	movf	??_I2C2_Transmit,w
  5179  036C  07F8               	addwf	I2C2_Transmit@i_560,f
  5180  036D  2B57               	goto	l3637
  5181  036E                     l3639:	
  5182                           
  5183                           ;I2C2.c: 93: result = size;
  5184  036E  0873               	movf	I2C2_Transmit@size,w
  5185  036F  00F4               	movwf	??_I2C2_Transmit
  5186  0370  0874               	movf	??_I2C2_Transmit,w
  5187  0371  00F9               	movwf	I2C2_Transmit@result
  5188                           
  5189                           ;I2C2.c: 94: }
  5190  0372  2B7E               	goto	l3647
  5191  0373                     l3641:	
  5192                           
  5193                           ;I2C2.c: 95: else
  5194                           ;I2C2.c: 96: result = 0;
  5195  0373  01F9               	clrf	I2C2_Transmit@result
  5196                           
  5197                           ;I2C2.c: 98: }
  5198                           
  5199                           ;I2C2.c: 97: break;
  5200  0374  2B7E               	goto	l3647
  5201  0375                     l3645:	
  5202  0375  0021               	movlb	1	; select bank1
  5203  0376  0838               	movf	(_I2C2_Config^(0+128)+18),w
  5204                           
  5205                           ; Switch size 1, requested type "space"
  5206                           ; Number of cases is 2, Range of values is 0 to 1
  5207                           ; switch strategies available:
  5208                           ; Name         Instructions Cycles
  5209                           ; simple_byte            7     4 (average)
  5210                           ; direct_byte           10     6 (fixed)
  5211                           ; jumptable            260     6 (fixed)
  5212                           ;	Chosen strategy is simple_byte
  5213  0377  3A00               	xorlw	0	; case 0
  5214  0378  1903               	skipnz
  5215  0379  2B04               	goto	l3601
  5216  037A  3A01               	xorlw	1	; case 1
  5217  037B  1903               	skipnz
  5218  037C  2B52               	goto	l532
  5219  037D  2B7E               	goto	l3647
  5220  037E                     l3647:	
  5221                           
  5222                           ;I2C2.c: 100: return result;
  5223  037E  0879               	movf	I2C2_Transmit@result,w
  5224  037F  0008               	return
  5225  0380                     __end_of_I2C2_Transmit:	
  5226                           
  5227                           	psect	text20
  5228  0380                     __ptext20:	
  5229 ;; *************** function _I2C1_Transmit *****************
  5230 ;; Defined at:
  5231 ;;		line 52 in file "I2C1.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  address         1    wreg     unsigned char 
  5234 ;;  pData           1    2[COMMON] PTR unsigned char 
  5235 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5236 ;;  size            1    3[COMMON] unsigned char 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  address         1    6[COMMON] unsigned char 
  5239 ;;  i               1    8[COMMON] unsigned char 
  5240 ;;  i               1    7[COMMON] unsigned char 
  5241 ;;  result          1    9[COMMON] char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      char 
  5244 ;; Registers used:
  5245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5251 ;;      Params:         2       0       0       0       0       0
  5252 ;;      Locals:         4       0       0       0       0       0
  5253 ;;      Temps:          2       0       0       0       0       0
  5254 ;;      Totals:         8       0       0       0       0       0
  5255 ;;Total ram usage:        8 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    3
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_I2C_Transmit
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           
  5266                           ;psect for function _I2C1_Transmit
  5267  0380                     _I2C1_Transmit:	
  5268                           
  5269                           ;incstack = 0
  5270                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  5271                           ;I2C1_Transmit@address stored from wreg
  5272  0380  00F6               	movwf	I2C1_Transmit@address
  5273                           
  5274                           ;I2C1.c: 54: int8_t result;
  5275                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  5276  0381  2BF3               	goto	l3593
  5277  0382                     l3549:	
  5278                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5279                           
  5280                           ;I2C1.c: 57: {
  5281                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  5282                           
  5283  0382  3005               	movlw	5
  5284  0383  0024               	movlb	4	; select bank4
  5285  0384  0514               	andwf	20,w	;volatile
  5286  0385  00F4               	movwf	??_I2C1_Transmit
  5287  0386  0816               	movf	22,w	;volatile
  5288  0387  391F               	andlw	31
  5289  0388  0474               	iorwf	??_I2C1_Transmit,w
  5290  0389  1D03               	btfss	3,2
  5291  038A  2B82               	goto	l3549
  5292                           
  5293                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  5294  038B  1416               	bsf	22,0	;volatile
  5295  038C                     l3551:	
  5296                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5297                           
  5298  038C  3005               	movlw	5
  5299  038D  0514               	andwf	20,w	;volatile
  5300  038E  00F4               	movwf	??_I2C1_Transmit
  5301  038F  0816               	movf	22,w	;volatile
  5302  0390  391F               	andlw	31
  5303  0391  0474               	iorwf	??_I2C1_Transmit,w
  5304  0392  1D03               	btfss	3,2
  5305  0393  2B8C               	goto	l3551
  5306                           
  5307                           ;I2C1.c: 63: SSP1BUF = address << 1;
  5308  0394  3576               	lslf	I2C1_Transmit@address,w
  5309  0395  0091               	movwf	17	;volatile
  5310  0396                     l377:	
  5311                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  5312                           
  5313  0396  1914               	btfsc	20,2	;volatile
  5314  0397  2B96               	goto	l377
  5315                           
  5316                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  5317  0398  3000               	movlw	0
  5318  0399  1B16               	btfsc	22,6	;volatile
  5319  039A  3001               	movlw	1
  5320  039B  00F9               	movwf	I2C1_Transmit@result
  5321                           
  5322                           ;I2C1.c: 67: if (!result)
  5323  039C  0879               	movf	I2C1_Transmit@result,w
  5324  039D  1D03               	btfss	3,2
  5325  039E  2BC6               	goto	l3575
  5326                           
  5327                           ;I2C1.c: 68: {
  5328                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  5329  039F  01F7               	clrf	I2C1_Transmit@i
  5330  03A0  2BA5               	goto	l3573
  5331  03A1                     l3571:	
  5332                           ;I2C1.c: 79: break;
  5333                           
  5334  03A1  3001               	movlw	1
  5335  03A2  00F4               	movwf	??_I2C1_Transmit
  5336  03A3  0874               	movf	??_I2C1_Transmit,w
  5337  03A4  07F7               	addwf	I2C1_Transmit@i,f
  5338  03A5                     l3573:	
  5339  03A5  0873               	movf	I2C1_Transmit@size,w
  5340  03A6  0277               	subwf	I2C1_Transmit@i,w
  5341  03A7  1803               	btfsc	3,0
  5342  03A8  2BC6               	goto	l3575
  5343  03A9                     l3561:	
  5344                           ;I2C1.c: 70: {
  5345                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5346                           
  5347  03A9  3005               	movlw	5
  5348  03AA  0514               	andwf	20,w	;volatile
  5349  03AB  00F4               	movwf	??_I2C1_Transmit
  5350  03AC  0816               	movf	22,w	;volatile
  5351  03AD  391F               	andlw	31
  5352  03AE  0474               	iorwf	??_I2C1_Transmit,w
  5353  03AF  1D03               	btfss	3,2
  5354  03B0  2BA9               	goto	l3561
  5355                           
  5356                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  5357  03B1  0877               	movf	I2C1_Transmit@i,w
  5358  03B2  0772               	addwf	I2C1_Transmit@pData,w
  5359  03B3  00F4               	movwf	??_I2C1_Transmit
  5360  03B4  0874               	movf	??_I2C1_Transmit,w
  5361  03B5  0086               	movwf	6
  5362  03B6  0187               	clrf	7
  5363  03B7  0801               	movf	1,w
  5364  03B8  0091               	movwf	17	;volatile
  5365  03B9                     l386:	
  5366                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  5367                           
  5368  03B9  1914               	btfsc	20,2	;volatile
  5369  03BA  2BB9               	goto	l386
  5370                           
  5371                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  5372  03BB  3000               	movlw	0
  5373  03BC  1B16               	btfsc	22,6	;volatile
  5374  03BD  3001               	movlw	1
  5375  03BE  00F9               	movwf	I2C1_Transmit@result
  5376                           
  5377                           ;I2C1.c: 76: if (result)
  5378  03BF  0879               	movf	I2C1_Transmit@result,w
  5379  03C0  1903               	btfsc	3,2
  5380  03C1  2BA1               	goto	l3571
  5381                           
  5382                           ;I2C1.c: 77: {
  5383                           ;I2C1.c: 78: result = 2;
  5384  03C2  3002               	movlw	2
  5385  03C3  00F4               	movwf	??_I2C1_Transmit
  5386  03C4  0874               	movf	??_I2C1_Transmit,w
  5387  03C5  00F9               	movwf	I2C1_Transmit@result
  5388  03C6                     l3575:	
  5389                           ;I2C1.c: 80: }
  5390                           ;I2C1.c: 81: }
  5391                           ;I2C1.c: 82: }
  5392                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5393                           
  5394  03C6  3005               	movlw	5
  5395  03C7  0514               	andwf	20,w	;volatile
  5396  03C8  00F4               	movwf	??_I2C1_Transmit
  5397  03C9  0816               	movf	22,w	;volatile
  5398  03CA  391F               	andlw	31
  5399  03CB  0474               	iorwf	??_I2C1_Transmit,w
  5400  03CC  1D03               	btfss	3,2
  5401  03CD  2BC6               	goto	l3575
  5402                           
  5403                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  5404  03CE  1516               	bsf	22,2	;volatile
  5405                           
  5406                           ;I2C1.c: 86: break;
  5407  03CF  2BFC               	goto	l3595
  5408  03D0                     l395:	
  5409                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  5410                           
  5411                           
  5412                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  5413  03D0  0024               	movlb	4	; select bank4
  5414  03D1  1D94               	btfss	20,3	;volatile
  5415  03D2  1E14               	btfss	20,4	;volatile
  5416  03D3  2BF1               	goto	l3589
  5417                           
  5418                           ;I2C1.c: 90: {
  5419                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  5420  03D4  01F8               	clrf	I2C1_Transmit@i_416
  5421  03D5                     l3585:	
  5422  03D5  0873               	movf	I2C1_Transmit@size,w
  5423  03D6  0278               	subwf	I2C1_Transmit@i_416,w
  5424  03D7  1803               	btfsc	3,0
  5425  03D8  2BEC               	goto	l3587
  5426                           
  5427                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  5428  03D9  0878               	movf	I2C1_Transmit@i_416,w
  5429  03DA  0772               	addwf	I2C1_Transmit@pData,w
  5430  03DB  00F4               	movwf	??_I2C1_Transmit
  5431  03DC  0874               	movf	??_I2C1_Transmit,w
  5432  03DD  0086               	movwf	6
  5433  03DE  0187               	clrf	7
  5434  03DF  0801               	movf	1,w
  5435  03E0  00F5               	movwf	??_I2C1_Transmit+1
  5436  03E1  0878               	movf	I2C1_Transmit@i_416,w
  5437  03E2  3EB9               	addlw	(low (_I2C1_Config| 0))& (0+255)
  5438  03E3  0086               	movwf	6
  5439  03E4  0187               	clrf	7
  5440  03E5  0875               	movf	??_I2C1_Transmit+1,w
  5441  03E6  0081               	movwf	1
  5442  03E7  3001               	movlw	1
  5443  03E8  00F4               	movwf	??_I2C1_Transmit
  5444  03E9  0874               	movf	??_I2C1_Transmit,w
  5445  03EA  07F8               	addwf	I2C1_Transmit@i_416,f
  5446  03EB  2BD5               	goto	l3585
  5447  03EC                     l3587:	
  5448                           
  5449                           ;I2C1.c: 93: result = size;
  5450  03EC  0873               	movf	I2C1_Transmit@size,w
  5451  03ED  00F4               	movwf	??_I2C1_Transmit
  5452  03EE  0874               	movf	??_I2C1_Transmit,w
  5453  03EF  00F9               	movwf	I2C1_Transmit@result
  5454                           
  5455                           ;I2C1.c: 94: }
  5456  03F0  2BFC               	goto	l3595
  5457  03F1                     l3589:	
  5458                           
  5459                           ;I2C1.c: 95: else
  5460                           ;I2C1.c: 96: result = 0;
  5461  03F1  01F9               	clrf	I2C1_Transmit@result
  5462                           
  5463                           ;I2C1.c: 98: }
  5464                           
  5465                           ;I2C1.c: 97: break;
  5466  03F2  2BFC               	goto	l3595
  5467  03F3                     l3593:	
  5468  03F3  0021               	movlb	1	; select bank1
  5469  03F4  084B               	movf	(_I2C1_Config^(0+128)+18),w
  5470                           
  5471                           ; Switch size 1, requested type "space"
  5472                           ; Number of cases is 2, Range of values is 0 to 1
  5473                           ; switch strategies available:
  5474                           ; Name         Instructions Cycles
  5475                           ; simple_byte            7     4 (average)
  5476                           ; direct_byte           10     6 (fixed)
  5477                           ; jumptable            260     6 (fixed)
  5478                           ;	Chosen strategy is simple_byte
  5479  03F5  3A00               	xorlw	0	; case 0
  5480  03F6  1903               	skipnz
  5481  03F7  2B82               	goto	l3549
  5482  03F8  3A01               	xorlw	1	; case 1
  5483  03F9  1903               	skipnz
  5484  03FA  2BD0               	goto	l395
  5485  03FB  2BFC               	goto	l3595
  5486  03FC                     l3595:	
  5487                           
  5488                           ;I2C1.c: 100: return result;
  5489  03FC  0879               	movf	I2C1_Transmit@result,w
  5490  03FD  0008               	return
  5491  03FE                     __end_of_I2C1_Transmit:	
  5492                           
  5493                           	psect	text21
  5494  06D6                     __ptext21:	
  5495 ;; *************** function _I2C_Init *****************
  5496 ;; Defined at:
  5497 ;;		line 6 in file "I2C_Common.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;  I2Cx            1    wreg     enum E3062
  5500 ;;  address         1    7[COMMON] unsigned char 
  5501 ;;  mode            1    8[COMMON] enum E3053
  5502 ;;  Speed           1    9[COMMON] enum E3057
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  I2Cx            1    2[BANK0 ] enum E3062
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5514 ;;      Params:         3       0       0       0       0       0
  5515 ;;      Locals:         0       1       0       0       0       0
  5516 ;;      Temps:          0       2       0       0       0       0
  5517 ;;      Totals:         3       3       0       0       0       0
  5518 ;;Total ram usage:        6 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:    5
  5521 ;; This function calls:
  5522 ;;		_I2C1_Setting
  5523 ;;		_I2C2_Setting
  5524 ;; This function is called by:
  5525 ;;		_DAC_Initialize
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           
  5530                           ;psect for function _I2C_Init
  5531  06D6                     _I2C_Init:	
  5532                           
  5533                           ;incstack = 0
  5534                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5535                           ;I2C_Init@I2Cx stored from wreg
  5536  06D6  0020               	movlb	0	; select bank0
  5537  06D7  00A2               	movwf	I2C_Init@I2Cx
  5538                           
  5539                           ;I2C_Common.c: 8: switch(I2Cx)
  5540  06D8  2EF4               	goto	l3867
  5541  06D9                     l3861:	
  5542                           ;I2C_Common.c: 9: {
  5543                           ;I2C_Common.c: 10: case I2C1_MODULE:
  5544                           
  5545                           
  5546                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  5547  06D9  0878               	movf	I2C_Init@mode,w
  5548  06DA  00A0               	movwf	??_I2C_Init
  5549  06DB  0820               	movf	??_I2C_Init,w
  5550  06DC  00F3               	movwf	I2C1_Setting@mode
  5551  06DD  0879               	movf	I2C_Init@Speed,w
  5552  06DE  00A1               	movwf	??_I2C_Init+1
  5553  06DF  0821               	movf	??_I2C_Init+1,w
  5554  06E0  00F4               	movwf	I2C1_Setting@Speed
  5555  06E1  0877               	movf	I2C_Init@address,w
  5556  06E2  3186  261B  3186   	fcall	_I2C1_Setting
  5557                           
  5558                           ;I2C_Common.c: 12: break;
  5559  06E5  2EFD               	goto	l624
  5560  06E6                     l3863:	
  5561                           ;I2C_Common.c: 14: case I2C2_MODULE:
  5562                           
  5563                           
  5564                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  5565  06E6  0878               	movf	I2C_Init@mode,w
  5566  06E7  0020               	movlb	0	; select bank0
  5567  06E8  00A0               	movwf	??_I2C_Init
  5568  06E9  0820               	movf	??_I2C_Init,w
  5569  06EA  00F3               	movwf	I2C2_Setting@mode
  5570  06EB  0879               	movf	I2C_Init@Speed,w
  5571  06EC  00A1               	movwf	??_I2C_Init+1
  5572  06ED  0821               	movf	??_I2C_Init+1,w
  5573  06EE  00F4               	movwf	I2C2_Setting@Speed
  5574  06EF  0877               	movf	I2C_Init@address,w
  5575  06F0  3185  25E3  3186   	fcall	_I2C2_Setting
  5576                           
  5577                           ;I2C_Common.c: 17: }
  5578                           
  5579                           ;I2C_Common.c: 16: break;
  5580  06F3  2EFD               	goto	l624
  5581  06F4                     l3867:	
  5582  06F4  0020               	movlb	0	; select bank0
  5583  06F5  0822               	movf	I2C_Init@I2Cx,w
  5584                           
  5585                           ; Switch size 1, requested type "space"
  5586                           ; Number of cases is 2, Range of values is 0 to 1
  5587                           ; switch strategies available:
  5588                           ; Name         Instructions Cycles
  5589                           ; simple_byte            7     4 (average)
  5590                           ; direct_byte           10     6 (fixed)
  5591                           ; jumptable            260     6 (fixed)
  5592                           ;	Chosen strategy is simple_byte
  5593  06F6  3A00               	xorlw	0	; case 0
  5594  06F7  1903               	skipnz
  5595  06F8  2ED9               	goto	l3861
  5596  06F9  3A01               	xorlw	1	; case 1
  5597  06FA  1903               	skipnz
  5598  06FB  2EE6               	goto	l3863
  5599  06FC  2EFD               	goto	l624
  5600  06FD                     l624:	
  5601                           
  5602                           ;I2C_Common.c: 19: PEIE = 1;
  5603  06FD  170B               	bsf	11,6	;volatile
  5604                           
  5605                           ;I2C_Common.c: 20: GIE = 1;
  5606  06FE  178B               	bsf	11,7	;volatile
  5607  06FF  0008               	return
  5608  0700                     __end_of_I2C_Init:	
  5609                           
  5610                           	psect	text22
  5611  05E3                     __ptext22:	
  5612 ;; *************** function _I2C2_Setting *****************
  5613 ;; Defined at:
  5614 ;;		line 15 in file "I2C2.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  address         1    wreg     unsigned char 
  5617 ;;  mode            1    3[COMMON] enum E3053
  5618 ;;  Speed           1    4[COMMON] enum E3057
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  address         1    6[COMMON] unsigned char 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      void 
  5623 ;; Registers used:
  5624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5630 ;;      Params:         2       0       0       0       0       0
  5631 ;;      Locals:         1       0       0       0       0       0
  5632 ;;      Temps:          1       0       0       0       0       0
  5633 ;;      Totals:         4       0       0       0       0       0
  5634 ;;Total ram usage:        4 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; Hardware stack levels required when called:    4
  5637 ;; This function calls:
  5638 ;;		_I2C2_PinInit
  5639 ;; This function is called by:
  5640 ;;		_I2C_Init
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           
  5645                           ;psect for function _I2C2_Setting
  5646  05E3                     _I2C2_Setting:	
  5647                           
  5648                           ;incstack = 0
  5649                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5650                           ;I2C2_Setting@address stored from wreg
  5651  05E3  00F6               	movwf	I2C2_Setting@address
  5652                           
  5653                           ;I2C2.c: 17: I2C2_PinInit();
  5654  05E4  318F  27CB  3185   	fcall	_I2C2_PinInit
  5655                           
  5656                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  5657  05E7  0873               	movf	I2C2_Setting@mode,w
  5658  05E8  00F5               	movwf	??_I2C2_Setting
  5659  05E9  0875               	movf	??_I2C2_Setting,w
  5660  05EA  0021               	movlb	1	; select bank1
  5661  05EB  00B8               	movwf	(_I2C2_Config^(0+128)+18)
  5662                           
  5663                           ;I2C2.c: 20: switch(mode)
  5664  05EC  2E0C               	goto	l2629
  5665  05ED                     l497:	
  5666                           ;I2C2.c: 21: {
  5667                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  5668                           
  5669                           
  5670                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  5671  05ED  0024               	movlb	4	; select bank4
  5672  05EE  159D               	bsf	29,3	;volatile
  5673                           
  5674                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5675  05EF  0874               	movf	I2C2_Setting@Speed,w
  5676  05F0  1D03               	btfss	3,2
  5677  05F1  2DF5               	goto	l2607
  5678                           
  5679                           ;I2C2.c: 25: {
  5680                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  5681  05F2  179C               	bsf	28,7	;volatile
  5682                           
  5683                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  5684  05F3  304F               	movlw	79
  5685  05F4  2DFD               	goto	L8
  5686  05F5                     l2607:	
  5687                           ;I2C2.c: 28: }
  5688                           
  5689                           
  5690                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5691  05F5  0374               	decf	I2C2_Setting@Speed,w
  5692  05F6  1D03               	btfss	3,2
  5693  05F7  2E0A               	goto	l2625
  5694                           
  5695                           ;I2C2.c: 30: {
  5696                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  5697  05F8  307F               	movlw	127
  5698  05F9  00F5               	movwf	??_I2C2_Setting
  5699  05FA  0875               	movf	??_I2C2_Setting,w
  5700  05FB  059C               	andwf	28,f	;volatile
  5701                           
  5702                           ;I2C2.c: 32: SSP2ADD = 0x13;
  5703  05FC  3013               	movlw	19
  5704  05FD                     L8:	
  5705  05FD  009A               	movwf	26	;volatile
  5706  05FE  2E0A               	goto	l2625
  5707  05FF                     l2615:	
  5708                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  5709                           
  5710                           ;I2C2.c: 35: break;
  5711                           
  5712                           ;I2C2.c: 33: }
  5713                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  5714                           
  5715                           
  5716                           ;I2C2.c: 38: SSP2STAT = 0x00;
  5717  05FF  0024               	movlb	4	; select bank4
  5718  0600  019C               	clrf	28	;volatile
  5719                           
  5720                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  5721  0601  3006               	movlw	6
  5722  0602  00F5               	movwf	??_I2C2_Setting
  5723  0603  0875               	movf	??_I2C2_Setting,w
  5724  0604  049D               	iorwf	29,f	;volatile
  5725                           
  5726                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  5727  0605  141E               	bsf	30,0	;volatile
  5728                           
  5729                           ;I2C2.c: 41: SSP2ADD = address << 1;
  5730  0606  3576               	lslf	I2C2_Setting@address,w
  5731  0607  009A               	movwf	26	;volatile
  5732                           
  5733                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  5734  0608  30FE               	movlw	254
  5735  0609  009B               	movwf	27	;volatile
  5736  060A                     l2625:	
  5737                           
  5738                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  5739  060A  169D               	bsf	29,5	;volatile
  5740                           
  5741                           ;I2C2.c: 45: }
  5742                           
  5743                           ;I2C2.c: 44: break;
  5744  060B  2E14               	goto	l501
  5745  060C                     l2629:	
  5746  060C  0873               	movf	I2C2_Setting@mode,w
  5747                           
  5748                           ; Switch size 1, requested type "space"
  5749                           ; Number of cases is 2, Range of values is 0 to 1
  5750                           ; switch strategies available:
  5751                           ; Name         Instructions Cycles
  5752                           ; simple_byte            7     4 (average)
  5753                           ; direct_byte           10     6 (fixed)
  5754                           ; jumptable            260     6 (fixed)
  5755                           ;	Chosen strategy is simple_byte
  5756  060D  3A00               	xorlw	0	; case 0
  5757  060E  1903               	skipnz
  5758  060F  2DED               	goto	l497
  5759  0610  3A01               	xorlw	1	; case 1
  5760  0611  1903               	skipnz
  5761  0612  2DFF               	goto	l2615
  5762  0613  2E14               	goto	l501
  5763  0614                     l501:	
  5764                           
  5765                           ;I2C2.c: 46: SSP2IE = 1;
  5766  0614  0021               	movlb	1	; select bank1
  5767  0615  1414               	bsf	20,0	;volatile
  5768                           
  5769                           ;I2C2.c: 47: BCL2IE = 1;
  5770  0616  1494               	bsf	20,1	;volatile
  5771                           
  5772                           ;I2C2.c: 48: SSP2IF = 0;
  5773  0617  0020               	movlb	0	; select bank0
  5774  0618  1014               	bcf	20,0	;volatile
  5775                           
  5776                           ;I2C2.c: 49: BCL2IF = 0;
  5777  0619  1094               	bcf	20,1	;volatile
  5778  061A  0008               	return
  5779  061B                     __end_of_I2C2_Setting:	
  5780                           
  5781                           	psect	text23
  5782  0FCB                     __ptext23:	
  5783 ;; *************** function _I2C2_PinInit *****************
  5784 ;; Defined at:
  5785 ;;		line 9 in file "I2C2.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;		None
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5799 ;;      Params:         0       0       0       0       0       0
  5800 ;;      Locals:         0       0       0       0       0       0
  5801 ;;      Temps:          1       0       0       0       0       0
  5802 ;;      Totals:         1       0       0       0       0       0
  5803 ;;Total ram usage:        1 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; Hardware stack levels required when called:    3
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_I2C2_Setting
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           
  5814                           ;psect for function _I2C2_PinInit
  5815  0FCB                     _I2C2_PinInit:	
  5816                           
  5817                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  5818                           
  5819                           ;incstack = 0
  5820                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  5821  0FCB  3024               	movlw	36
  5822  0FCC  00F2               	movwf	??_I2C2_PinInit
  5823  0FCD  0872               	movf	??_I2C2_PinInit,w
  5824  0FCE  0021               	movlb	1	; select bank1
  5825  0FCF  048D               	iorwf	13,f	;volatile
  5826                           
  5827                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  5828  0FD0  30DB               	movlw	219
  5829  0FD1  00F2               	movwf	??_I2C2_PinInit
  5830  0FD2  0872               	movf	??_I2C2_PinInit,w
  5831  0FD3  0023               	movlb	3	; select bank3
  5832  0FD4  058D               	andwf	13,f	;volatile
  5833  0FD5  0008               	return
  5834  0FD6                     __end_of_I2C2_PinInit:	
  5835                           
  5836                           	psect	text24
  5837  061B                     __ptext24:	
  5838 ;; *************** function _I2C1_Setting *****************
  5839 ;; Defined at:
  5840 ;;		line 15 in file "I2C1.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  address         1    wreg     unsigned char 
  5843 ;;  mode            1    3[COMMON] enum E3053
  5844 ;;  Speed           1    4[COMMON] enum E3057
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  address         1    6[COMMON] unsigned char 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  1    wreg      void 
  5849 ;; Registers used:
  5850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5856 ;;      Params:         2       0       0       0       0       0
  5857 ;;      Locals:         1       0       0       0       0       0
  5858 ;;      Temps:          1       0       0       0       0       0
  5859 ;;      Totals:         4       0       0       0       0       0
  5860 ;;Total ram usage:        4 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:    4
  5863 ;; This function calls:
  5864 ;;		_I2C1_PinInit
  5865 ;; This function is called by:
  5866 ;;		_I2C_Init
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           
  5871                           ;psect for function _I2C1_Setting
  5872  061B                     _I2C1_Setting:	
  5873                           
  5874                           ;incstack = 0
  5875                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5876                           ;I2C1_Setting@address stored from wreg
  5877  061B  00F6               	movwf	I2C1_Setting@address
  5878                           
  5879                           ;I2C1.c: 17: I2C1_PinInit();
  5880  061C  318F  27C0  3186   	fcall	_I2C1_PinInit
  5881                           
  5882                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  5883  061F  0873               	movf	I2C1_Setting@mode,w
  5884  0620  00F5               	movwf	??_I2C1_Setting
  5885  0621  0875               	movf	??_I2C1_Setting,w
  5886  0622  0021               	movlb	1	; select bank1
  5887  0623  00CB               	movwf	(_I2C1_Config^(0+128)+18)
  5888                           
  5889                           ;I2C1.c: 20: switch(mode)
  5890  0624  2E44               	goto	l2543
  5891  0625                     l360:	
  5892                           ;I2C1.c: 21: {
  5893                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  5894                           
  5895                           
  5896                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  5897  0625  0024               	movlb	4	; select bank4
  5898  0626  1595               	bsf	21,3	;volatile
  5899                           
  5900                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5901  0627  0874               	movf	I2C1_Setting@Speed,w
  5902  0628  1D03               	btfss	3,2
  5903  0629  2E2D               	goto	l2521
  5904                           
  5905                           ;I2C1.c: 25: {
  5906                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  5907  062A  1794               	bsf	20,7	;volatile
  5908                           
  5909                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  5910  062B  304F               	movlw	79
  5911  062C  2E35               	goto	L9
  5912  062D                     l2521:	
  5913                           ;I2C1.c: 28: }
  5914                           
  5915                           
  5916                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5917  062D  0374               	decf	I2C1_Setting@Speed,w
  5918  062E  1D03               	btfss	3,2
  5919  062F  2E42               	goto	l2539
  5920                           
  5921                           ;I2C1.c: 30: {
  5922                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  5923  0630  307F               	movlw	127
  5924  0631  00F5               	movwf	??_I2C1_Setting
  5925  0632  0875               	movf	??_I2C1_Setting,w
  5926  0633  0594               	andwf	20,f	;volatile
  5927                           
  5928                           ;I2C1.c: 32: SSP1ADD = 0x13;
  5929  0634  3013               	movlw	19
  5930  0635                     L9:	
  5931  0635  0092               	movwf	18	;volatile
  5932  0636  2E42               	goto	l2539
  5933  0637                     l2529:	
  5934                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  5935                           
  5936                           ;I2C1.c: 35: break;
  5937                           
  5938                           ;I2C1.c: 33: }
  5939                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  5940                           
  5941                           
  5942                           ;I2C1.c: 38: SSP1STAT = 0x00;
  5943  0637  0024               	movlb	4	; select bank4
  5944  0638  0194               	clrf	20	;volatile
  5945                           
  5946                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  5947  0639  3006               	movlw	6
  5948  063A  00F5               	movwf	??_I2C1_Setting
  5949  063B  0875               	movf	??_I2C1_Setting,w
  5950  063C  0495               	iorwf	21,f	;volatile
  5951                           
  5952                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  5953  063D  1416               	bsf	22,0	;volatile
  5954                           
  5955                           ;I2C1.c: 41: SSP1ADD = address << 1;
  5956  063E  3576               	lslf	I2C1_Setting@address,w
  5957  063F  0092               	movwf	18	;volatile
  5958                           
  5959                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  5960  0640  30FE               	movlw	254
  5961  0641  0093               	movwf	19	;volatile
  5962  0642                     l2539:	
  5963                           
  5964                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  5965  0642  1695               	bsf	21,5	;volatile
  5966                           
  5967                           ;I2C1.c: 45: }
  5968                           
  5969                           ;I2C1.c: 44: break;
  5970  0643  2E4C               	goto	l364
  5971  0644                     l2543:	
  5972  0644  0873               	movf	I2C1_Setting@mode,w
  5973                           
  5974                           ; Switch size 1, requested type "space"
  5975                           ; Number of cases is 2, Range of values is 0 to 1
  5976                           ; switch strategies available:
  5977                           ; Name         Instructions Cycles
  5978                           ; simple_byte            7     4 (average)
  5979                           ; direct_byte           10     6 (fixed)
  5980                           ; jumptable            260     6 (fixed)
  5981                           ;	Chosen strategy is simple_byte
  5982  0645  3A00               	xorlw	0	; case 0
  5983  0646  1903               	skipnz
  5984  0647  2E25               	goto	l360
  5985  0648  3A01               	xorlw	1	; case 1
  5986  0649  1903               	skipnz
  5987  064A  2E37               	goto	l2529
  5988  064B  2E4C               	goto	l364
  5989  064C                     l364:	
  5990                           
  5991                           ;I2C1.c: 46: SSP1IE = 1;
  5992  064C  0021               	movlb	1	; select bank1
  5993  064D  1591               	bsf	17,3	;volatile
  5994                           
  5995                           ;I2C1.c: 47: BCL1IE = 1;
  5996  064E  1592               	bsf	18,3	;volatile
  5997                           
  5998                           ;I2C1.c: 48: SSP1IF = 0;
  5999  064F  0020               	movlb	0	; select bank0
  6000  0650  1191               	bcf	17,3	;volatile
  6001                           
  6002                           ;I2C1.c: 49: BCL1IF = 0;
  6003  0651  1192               	bcf	18,3	;volatile
  6004  0652  0008               	return
  6005  0653                     __end_of_I2C1_Setting:	
  6006                           
  6007                           	psect	text25
  6008  0FC0                     __ptext25:	
  6009 ;; *************** function _I2C1_PinInit *****************
  6010 ;; Defined at:
  6011 ;;		line 9 in file "I2C1.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;		None
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;		None
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  1    wreg      void 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6025 ;;      Params:         0       0       0       0       0       0
  6026 ;;      Locals:         0       0       0       0       0       0
  6027 ;;      Temps:          1       0       0       0       0       0
  6028 ;;      Totals:         1       0       0       0       0       0
  6029 ;;Total ram usage:        1 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:    3
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_I2C1_Setting
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           
  6040                           ;psect for function _I2C1_PinInit
  6041  0FC0                     _I2C1_PinInit:	
  6042                           
  6043                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  6044                           
  6045                           ;incstack = 0
  6046                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  6047  0FC0  3012               	movlw	18
  6048  0FC1  00F2               	movwf	??_I2C1_PinInit
  6049  0FC2  0872               	movf	??_I2C1_PinInit,w
  6050  0FC3  0021               	movlb	1	; select bank1
  6051  0FC4  048D               	iorwf	13,f	;volatile
  6052                           
  6053                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  6054  0FC5  30ED               	movlw	237
  6055  0FC6  00F2               	movwf	??_I2C1_PinInit
  6056  0FC7  0872               	movf	??_I2C1_PinInit,w
  6057  0FC8  0023               	movlb	3	; select bank3
  6058  0FC9  058D               	andwf	13,f	;volatile
  6059  0FCA  0008               	return
  6060  0FCB                     __end_of_I2C1_PinInit:	
  6061                           
  6062                           	psect	text26
  6063  0725                     __ptext26:	
  6064 ;; *************** function _Buzer_Init *****************
  6065 ;; Defined at:
  6066 ;;		line 9 in file "Buzer.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;		None
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6080 ;;      Params:         0       0       0       0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0
  6082 ;;      Temps:          1       0       0       0       0       0
  6083 ;;      Totals:         1       0       0       0       0       0
  6084 ;;Total ram usage:        1 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    3
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_main
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           
  6095                           ;psect for function _Buzer_Init
  6096  0725                     _Buzer_Init:	
  6097                           
  6098                           ;Buzer.c: 11: TRISA &= ~(0x01<<7);
  6099                           
  6100                           ;incstack = 0
  6101                           ; Regs used in _Buzer_Init: [wreg+status,2+status,0]
  6102  0725  307F               	movlw	127
  6103  0726  00F2               	movwf	??_Buzer_Init
  6104  0727  0872               	movf	??_Buzer_Init,w
  6105  0728  0021               	movlb	1	; select bank1
  6106  0729  058C               	andwf	12,f	;volatile
  6107                           
  6108                           ;Buzer.c: 12: ANSELA &= ~(0x01<<7);
  6109  072A  307F               	movlw	127
  6110  072B  00F2               	movwf	??_Buzer_Init
  6111  072C  0872               	movf	??_Buzer_Init,w
  6112  072D  0023               	movlb	3	; select bank3
  6113  072E  058C               	andwf	12,f	;volatile
  6114                           
  6115                           ;Buzer.c: 13: APFCON0 |= (0x01<<3);
  6116  072F  0022               	movlb	2	; select bank2
  6117  0730  159D               	bsf	29,3	;volatile
  6118                           
  6119                           ;Buzer.c: 15: T2CON |= (0x00<<3);
  6120  0731  0020               	movlb	0	; select bank0
  6121  0732  081C               	movf	28,w	;volatile
  6122                           
  6123                           ;Buzer.c: 16: T2CON |= (0x02<<0);
  6124  0733  149C               	bsf	28,1	;volatile
  6125                           
  6126                           ;Buzer.c: 17: T2CON |= (0x01<<2);
  6127  0734  151C               	bsf	28,2	;volatile
  6128                           
  6129                           ;Buzer.c: 19: TMR2 = 0x00;
  6130  0735  019A               	clrf	26	;volatile
  6131                           
  6132                           ;Buzer.c: 20: PR2 = 0xFF;
  6133  0736  30FF               	movlw	255
  6134  0737  009B               	movwf	27	;volatile
  6135                           
  6136                           ;Buzer.c: 22: CCP2CON &= ~(0x03<<6);
  6137  0738  303F               	movlw	63
  6138  0739  00F2               	movwf	??_Buzer_Init
  6139  073A  0872               	movf	??_Buzer_Init,w
  6140  073B  0025               	movlb	5	; select bank5
  6141  073C  059A               	andwf	26,f	;volatile
  6142                           
  6143                           ;Buzer.c: 23: CCP2CON |= (0x0C<<0);
  6144  073D  300C               	movlw	12
  6145  073E  00F2               	movwf	??_Buzer_Init
  6146  073F  0872               	movf	??_Buzer_Init,w
  6147  0740  049A               	iorwf	26,f	;volatile
  6148                           
  6149                           ;Buzer.c: 24: CCPTMRS &= ~(0x03<<2);
  6150  0741  30F3               	movlw	243
  6151  0742  00F2               	movwf	??_Buzer_Init
  6152  0743  0872               	movf	??_Buzer_Init,w
  6153  0744  059E               	andwf	30,f	;volatile
  6154                           
  6155                           ;Buzer.c: 26: CCPR2L = 0x00;
  6156  0745  0198               	clrf	24	;volatile
  6157  0746  0008               	return
  6158  0747                     __end_of_Buzer_Init:	
  6159                           
  6160                           	psect	text27
  6161  07AF                     __ptext27:	
  6162 ;; *************** function _Basic_Init *****************
  6163 ;; Defined at:
  6164 ;;		line 47 in file "main.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;		None
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      char 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6178 ;;      Params:         0       0       0       0       0       0
  6179 ;;      Locals:         0       0       0       0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0
  6181 ;;      Totals:         0       0       0       0       0       0
  6182 ;;Total ram usage:        0 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:    3
  6185 ;; This function calls:
  6186 ;;		Nothing
  6187 ;; This function is called by:
  6188 ;;		_main
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           
  6193                           ;psect for function _Basic_Init
  6194  07AF                     _Basic_Init:	
  6195                           
  6196                           ;main.c: 49: OSCCON = 0xF0;
  6197                           
  6198                           ;incstack = 0
  6199                           ; Regs used in _Basic_Init: [wreg+status,2]
  6200  07AF  30F0               	movlw	240
  6201  07B0  0021               	movlb	1	; select bank1
  6202  07B1  0099               	movwf	25	;volatile
  6203                           
  6204                           ;main.c: 53: TRISA = 0x07;
  6205  07B2  3007               	movlw	7
  6206  07B3  008C               	movwf	12	;volatile
  6207                           
  6208                           ;main.c: 54: ANSELA = 0x07;
  6209  07B4  3007               	movlw	7
  6210  07B5  0023               	movlb	3	; select bank3
  6211  07B6  008C               	movwf	12	;volatile
  6212                           
  6213                           ;main.c: 56: TRISB = 0x40;
  6214  07B7  3040               	movlw	64
  6215  07B8  0021               	movlb	1	; select bank1
  6216  07B9  008D               	movwf	13	;volatile
  6217                           
  6218                           ;main.c: 57: ANSELB = 0x00;
  6219  07BA  0023               	movlb	3	; select bank3
  6220  07BB  018D               	clrf	13	;volatile
  6221                           
  6222                           ;main.c: 59: APFCON0 = 0x08;
  6223  07BC  3008               	movlw	8
  6224  07BD  0022               	movlb	2	; select bank2
  6225  07BE  009D               	movwf	29	;volatile
  6226                           
  6227                           ;main.c: 60: APFCON1 = 0x00;
  6228  07BF  019E               	clrf	30	;volatile
  6229                           
  6230                           ;main.c: 62: PORTA = 0x00;
  6231  07C0  0020               	movlb	0	; select bank0
  6232  07C1  018C               	clrf	12	;volatile
  6233                           
  6234                           ;main.c: 63: PORTB = 0x00;
  6235  07C2  018D               	clrf	13	;volatile
  6236  07C3  0008               	return
  6237  07C4                     __end_of_Basic_Init:	
  6238                           ;main.c: 65: return 0;
  6239                           ;	Return value of _Basic_Init is never used
  6240                           
  6241                           
  6242                           	psect	intentry
  6243  0004                     __pintentry:	
  6244 ;; *************** function _Handler *****************
  6245 ;; Defined at:
  6246 ;;		line 68 in file "main.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;		None
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;		None
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6260 ;;      Params:         0       0       0       0       0       0
  6261 ;;      Locals:         0       0       0       0       0       0
  6262 ;;      Temps:          1       0       0       0       0       0
  6263 ;;      Totals:         1       0       0       0       0       0
  6264 ;;Total ram usage:        1 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    2
  6267 ;; This function calls:
  6268 ;;		_CPSx_Read
  6269 ;;		_I2C_CommonInterrupt
  6270 ;;		_Timer1_Handler
  6271 ;;		_Timer4_Handler
  6272 ;; This function is called by:
  6273 ;;		Interrupt level 1
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277  0004                     _Handler:	
  6278                           
  6279                           ;incstack = 0
  6280  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6281                           
  6282                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6283  0005  3180               	pagesel	$
  6284  0006  0020               	movlb	0	; select bank0
  6285  0007  087F               	movf	127,w
  6286  0008  00F1               	movwf	??_Handler
  6287                           
  6288                           ;main.c: 70: static uint16_t count = 0;
  6289                           ;main.c: 71: if(Timer4_Handler())
  6290  0009  318F  27B5  3180   	fcall	_Timer4_Handler
  6291  000C  3A00               	xorlw	0
  6292  000D  1903               	skipnz
  6293  000E  2823               	goto	i1l3407
  6294                           
  6295                           ;main.c: 72: {
  6296                           ;main.c: 73: CPSx_Read();
  6297  000F  3187  2700  3180   	fcall	_CPSx_Read
  6298                           
  6299                           ;main.c: 74: count++;
  6300  0012  3001               	movlw	1
  6301  0013  0020               	movlb	0	; select bank0
  6302  0014  07E8               	addwf	Handler@count,f
  6303  0015  3000               	movlw	0
  6304  0016  3DE9               	addwfc	Handler@count+1,f
  6305                           
  6306                           ;main.c: 75: if(count>1000)
  6307  0017  3003               	movlw	3
  6308  0018  0269               	subwf	Handler@count+1,w
  6309  0019  30E9               	movlw	233
  6310  001A  1903               	skipnz
  6311  001B  0268               	subwf	Handler@count,w
  6312  001C  1C03               	skipc
  6313  001D  2823               	goto	i1l3407
  6314                           
  6315                           ;main.c: 76: {
  6316                           ;main.c: 77: count = 0;
  6317  001E  01E8               	clrf	Handler@count
  6318  001F  01E9               	clrf	Handler@count+1
  6319                           
  6320                           ;main.c: 78: LATA6 ^= 1;
  6321  0020  0022               	movlb	2	; select bank2
  6322  0021  3040               	movlw	64
  6323  0022  068C               	xorwf	12,f
  6324  0023                     i1l3407:	
  6325                           
  6326                           ;main.c: 79: }
  6327                           ;main.c: 80: }
  6328                           ;main.c: 82: Timer1_Handler();
  6329  0023  318F  27AC  3180   	fcall	_Timer1_Handler
  6330                           
  6331                           ;main.c: 83: I2C_CommonInterrupt();
  6332  0026  318F  279A         	fcall	_I2C_CommonInterrupt
  6333  0028  0871               	movf	??_Handler,w
  6334  0029  0020               	movlb	0	; select bank0
  6335  002A  00FF               	movwf	127
  6336  002B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6337  002C  0009               	retfie
  6338  002D                     __end_of_Handler:	
  6339                           
  6340                           	psect	text29
  6341  0FB5                     __ptext29:	
  6342 ;; *************** function _Timer4_Handler *****************
  6343 ;; Defined at:
  6344 ;;		line 17 in file "Timer4.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;		None
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      unsigned char 
  6351 ;; Registers used:
  6352 ;;		wreg
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6358 ;;      Params:         0       0       0       0       0       0
  6359 ;;      Locals:         0       0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0
  6361 ;;      Totals:         0       0       0       0       0       0
  6362 ;;Total ram usage:        0 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_Handler
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           
  6372                           ;psect for function _Timer4_Handler
  6373  0FB5                     _Timer4_Handler:	
  6374                           
  6375                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  6376                           
  6377                           ;incstack = 0
  6378                           ; Regs used in _Timer4_Handler: [wreg]
  6379  0FB5  0021               	movlb	1	; select bank1
  6380  0FB6  1C93               	btfss	19,1	;volatile
  6381  0FB7  2FBE               	goto	i1l3199
  6382  0FB8  0020               	movlb	0	; select bank0
  6383  0FB9  1C93               	btfss	19,1	;volatile
  6384  0FBA  2FBE               	goto	i1l3199
  6385                           
  6386                           ;Timer4.c: 20: {
  6387                           ;Timer4.c: 21: TMR4IF = 0;
  6388  0FBB  1093               	bcf	19,1	;volatile
  6389                           
  6390                           ;Timer4.c: 22: return 1;
  6391  0FBC  3001               	movlw	1
  6392  0FBD  0008               	return
  6393  0FBE                     i1l3199:	
  6394                           
  6395                           ;Timer4.c: 23: }
  6396                           ;Timer4.c: 24: return 0;
  6397  0FBE  3000               	movlw	0
  6398  0FBF  0008               	return
  6399  0FC0                     __end_of_Timer4_Handler:	
  6400                           
  6401                           	psect	text30
  6402  0FAC                     __ptext30:	
  6403 ;; *************** function _Timer1_Handler *****************
  6404 ;; Defined at:
  6405 ;;		line 33 in file "Timer1.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;		None
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      void 
  6412 ;; Registers used:
  6413 ;;		None
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6419 ;;      Params:         0       0       0       0       0       0
  6420 ;;      Locals:         0       0       0       0       0       0
  6421 ;;      Temps:          0       0       0       0       0       0
  6422 ;;      Totals:         0       0       0       0       0       0
  6423 ;;Total ram usage:        0 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_Handler
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           
  6433                           ;psect for function _Timer1_Handler
  6434  0FAC                     _Timer1_Handler:	
  6435                           
  6436                           ;Timer1.c: 35: if(TMR1IF&&TMR1IE)
  6437                           
  6438                           ;incstack = 0
  6439                           ; Regs used in _Timer1_Handler: []
  6440  0FAC  0020               	movlb	0	; select bank0
  6441  0FAD  1C11               	btfss	17,0	;volatile
  6442  0FAE  0008               	return
  6443  0FAF  0021               	movlb	1	; select bank1
  6444  0FB0  1C11               	btfss	17,0	;volatile
  6445  0FB1  0008               	return
  6446                           
  6447                           ;Timer1.c: 36: {
  6448                           ;Timer1.c: 37: TMR1IF = 0;
  6449  0FB2  0020               	movlb	0	; select bank0
  6450  0FB3  1011               	bcf	17,0	;volatile
  6451  0FB4  0008               	return
  6452  0FB5                     __end_of_Timer1_Handler:	
  6453                           
  6454                           	psect	text31
  6455  0F9A                     __ptext31:	
  6456 ;; *************** function _I2C_CommonInterrupt *****************
  6457 ;; Defined at:
  6458 ;;		line 58 in file "I2C_Common.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;		None
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  1    wreg      void 
  6465 ;; Registers used:
  6466 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6472 ;;      Params:         0       0       0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0
  6475 ;;      Totals:         0       0       0       0       0       0
  6476 ;;Total ram usage:        0 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    1
  6479 ;; This function calls:
  6480 ;;		_I2C1_Interrupt
  6481 ;;		_I2C2_Interrupt
  6482 ;; This function is called by:
  6483 ;;		_Handler
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           
  6488                           ;psect for function _I2C_CommonInterrupt
  6489  0F9A                     _I2C_CommonInterrupt:	
  6490                           
  6491                           ;I2C_Common.c: 60: I2C1_Interrupt();
  6492                           
  6493                           ;incstack = 0
  6494                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6495  0F9A  3184  24BD  318F   	fcall	_I2C1_Interrupt
  6496                           
  6497                           ;I2C_Common.c: 61: I2C2_Interrupt();
  6498  0F9D  3184  2469         	fcall	_I2C2_Interrupt
  6499  0F9F  0008               	return
  6500  0FA0                     __end_of_I2C_CommonInterrupt:	
  6501                           
  6502                           	psect	text32
  6503  0469                     __ptext32:	
  6504 ;; *************** function _I2C2_Interrupt *****************
  6505 ;; Defined at:
  6506 ;;		line 152 in file "I2C2.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;		None
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      void 
  6513 ;; Registers used:
  6514 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6520 ;;      Params:         0       0       0       0       0       0
  6521 ;;      Locals:         0       0       0       0       0       0
  6522 ;;      Temps:          1       0       0       0       0       0
  6523 ;;      Totals:         1       0       0       0       0       0
  6524 ;;Total ram usage:        1 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_I2C_CommonInterrupt
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           
  6534                           ;psect for function _I2C2_Interrupt
  6535  0469                     _I2C2_Interrupt:	
  6536                           
  6537                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  6538                           
  6539                           ;incstack = 0
  6540                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6541  0469  0020               	movlb	0	; select bank0
  6542  046A  1C14               	btfss	20,0	;volatile
  6543  046B  2CB5               	goto	i1l3005
  6544  046C  0021               	movlb	1	; select bank1
  6545  046D  1C14               	btfss	20,0	;volatile
  6546  046E  2CB5               	goto	i1l3005
  6547                           
  6548                           ;I2C2.c: 155: {
  6549                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  6550  046F  0024               	movlb	4	; select bank4
  6551  0470  1E9C               	btfss	28,5	;volatile
  6552  0471  2C8C               	goto	i1l580
  6553                           
  6554                           ;I2C2.c: 157: {
  6555                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  6556  0472  1D1C               	btfss	28,2	;volatile
  6557  0473  2C7F               	goto	i1l2981
  6558                           
  6559                           ;I2C2.c: 159: {
  6560                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  6561  0474  1B1E               	btfsc	30,6	;volatile
  6562  0475  2CB3               	goto	i1l3003
  6563  0476                     i1l2973:	
  6564                           ;I2C2.c: 161: {
  6565                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  6566                           
  6567  0476  081C               	movf	28,w	;volatile
  6568  0477  3901               	andlw	1
  6569  0478  00F0               	movwf	??_I2C2_Interrupt
  6570  0479  0E1D               	swapf	29,w	;volatile
  6571  047A  3901               	andlw	1
  6572  047B  0470               	iorwf	??_I2C2_Interrupt,w
  6573  047C  1D03               	btfss	3,2
  6574  047D  2C76               	goto	i1l2973
  6575  047E  2C9F               	goto	L10
  6576  047F                     i1l2981:	
  6577                           ;I2C2.c: 166: }
  6578                           ;I2C2.c: 167: }
  6579                           
  6580                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  6581                           
  6582                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  6583                           
  6584                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  6585                           
  6586                           
  6587                           ;I2C2.c: 168: else
  6588                           ;I2C2.c: 169: {
  6589                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  6590  047F  0819               	movf	25,w	;volatile
  6591  0480  00F0               	movwf	??_I2C2_Interrupt
  6592  0481  0021               	movlb	1	; select bank1
  6593  0482  0837               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  6594  0483  0086               	movwf	6
  6595  0484  0187               	clrf	7
  6596  0485  0870               	movf	??_I2C2_Interrupt,w
  6597  0486  0081               	movwf	1
  6598                           
  6599                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  6600  0487  3001               	movlw	1
  6601  0488  00F0               	movwf	??_I2C2_Interrupt
  6602  0489  0870               	movf	??_I2C2_Interrupt,w
  6603  048A  07B7               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  6604  048B  2CB1               	goto	i1l3001
  6605  048C                     i1l580:	
  6606                           ;I2C2.c: 173: }
  6607                           ;I2C2.c: 174: }
  6608                           
  6609                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  6610                           
  6611                           
  6612                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  6613  048C  1A9C               	btfsc	28,5	;volatile
  6614  048D  2CB3               	goto	i1l3003
  6615                           
  6616                           ;I2C2.c: 176: {
  6617                           ;I2C2.c: 177: SSP2BUF;
  6618  048E  0819               	movf	25,w	;volatile
  6619                           
  6620                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  6621  048F  1D1C               	btfss	28,2	;volatile
  6622  0490  2CAC               	goto	i1l2999
  6623                           
  6624                           ;I2C2.c: 180: {
  6625                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  6626  0491  30A6               	movlw	(low (_I2C2_Config| 0))& (0+255)
  6627  0492  00F0               	movwf	??_I2C2_Interrupt
  6628  0493  0870               	movf	??_I2C2_Interrupt,w
  6629  0494  0021               	movlb	1	; select bank1
  6630  0495  00B6               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  6631  0496                     i1l2993:	
  6632                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  6633                           
  6634  0496  0024               	movlb	4	; select bank4
  6635  0497  081C               	movf	28,w	;volatile
  6636  0498  3901               	andlw	1
  6637  0499  00F0               	movwf	??_I2C2_Interrupt
  6638  049A  0E1D               	swapf	29,w	;volatile
  6639  049B  3901               	andlw	1
  6640  049C  0470               	iorwf	??_I2C2_Interrupt,w
  6641  049D  1D03               	btfss	3,2
  6642  049E  2C96               	goto	i1l2993
  6643  049F                     L10:	
  6644                           
  6645                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  6646  049F  0021               	movlb	1	; select bank1
  6647  04A0  0836               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  6648  04A1  0086               	movwf	6
  6649  04A2  0187               	clrf	7
  6650  04A3  0801               	movf	1,w
  6651  04A4  0024               	movlb	4	; select bank4
  6652  04A5  0099               	movwf	25	;volatile
  6653                           
  6654                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  6655  04A6  3001               	movlw	1
  6656  04A7  00F0               	movwf	??_I2C2_Interrupt
  6657  04A8  0870               	movf	??_I2C2_Interrupt,w
  6658  04A9  0021               	movlb	1	; select bank1
  6659  04AA  07B6               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  6660                           
  6661                           ;I2C2.c: 186: }
  6662  04AB  2CB1               	goto	i1l3001
  6663  04AC                     i1l2999:	
  6664                           
  6665                           ;I2C2.c: 187: else
  6666                           ;I2C2.c: 188: {
  6667                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  6668  04AC  30AE               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  6669  04AD  00F0               	movwf	??_I2C2_Interrupt
  6670  04AE  0870               	movf	??_I2C2_Interrupt,w
  6671  04AF  0021               	movlb	1	; select bank1
  6672  04B0  00B7               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  6673  04B1                     i1l3001:	
  6674                           
  6675                           ;I2C2.c: 190: }
  6676                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  6677  04B1  0024               	movlb	4	; select bank4
  6678  04B2  161D               	bsf	29,4	;volatile
  6679  04B3                     i1l3003:	
  6680                           
  6681                           ;I2C2.c: 192: }
  6682                           ;I2C2.c: 193: SSP2IF = 0;
  6683  04B3  0020               	movlb	0	; select bank0
  6684  04B4  1014               	bcf	20,0	;volatile
  6685  04B5                     i1l3005:	
  6686                           
  6687                           ;I2C2.c: 194: }
  6688                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  6689  04B5  0021               	movlb	1	; select bank1
  6690  04B6  1C94               	btfss	20,1	;volatile
  6691  04B7  0008               	return
  6692  04B8  0020               	movlb	0	; select bank0
  6693  04B9  1C94               	btfss	20,1	;volatile
  6694  04BA  0008               	return
  6695                           
  6696                           ;I2C2.c: 197: BCL2IF = 0;
  6697  04BB  1094               	bcf	20,1	;volatile
  6698  04BC  0008               	return
  6699  04BD                     __end_of_I2C2_Interrupt:	
  6700                           
  6701                           	psect	text33
  6702  04BD                     __ptext33:	
  6703 ;; *************** function _I2C1_Interrupt *****************
  6704 ;; Defined at:
  6705 ;;		line 152 in file "I2C1.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;		None
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;		None
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6719 ;;      Params:         0       0       0       0       0       0
  6720 ;;      Locals:         0       0       0       0       0       0
  6721 ;;      Temps:          1       0       0       0       0       0
  6722 ;;      Totals:         1       0       0       0       0       0
  6723 ;;Total ram usage:        1 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; This function calls:
  6726 ;;		Nothing
  6727 ;; This function is called by:
  6728 ;;		_I2C_CommonInterrupt
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           
  6733                           ;psect for function _I2C1_Interrupt
  6734  04BD                     _I2C1_Interrupt:	
  6735                           
  6736                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  6737                           
  6738                           ;incstack = 0
  6739                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6740  04BD  0020               	movlb	0	; select bank0
  6741  04BE  1D91               	btfss	17,3	;volatile
  6742  04BF  2D09               	goto	i1l2955
  6743  04C0  0021               	movlb	1	; select bank1
  6744  04C1  1D91               	btfss	17,3	;volatile
  6745  04C2  2D09               	goto	i1l2955
  6746                           
  6747                           ;I2C1.c: 155: {
  6748                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  6749  04C3  0024               	movlb	4	; select bank4
  6750  04C4  1E94               	btfss	20,5	;volatile
  6751  04C5  2CE0               	goto	i1l443
  6752                           
  6753                           ;I2C1.c: 157: {
  6754                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  6755  04C6  1D14               	btfss	20,2	;volatile
  6756  04C7  2CD3               	goto	i1l2931
  6757                           
  6758                           ;I2C1.c: 159: {
  6759                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  6760  04C8  1B16               	btfsc	22,6	;volatile
  6761  04C9  2D07               	goto	i1l2953
  6762  04CA                     i1l2923:	
  6763                           ;I2C1.c: 161: {
  6764                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  6765                           
  6766  04CA  0814               	movf	20,w	;volatile
  6767  04CB  3901               	andlw	1
  6768  04CC  00F0               	movwf	??_I2C1_Interrupt
  6769  04CD  0E15               	swapf	21,w	;volatile
  6770  04CE  3901               	andlw	1
  6771  04CF  0470               	iorwf	??_I2C1_Interrupt,w
  6772  04D0  1D03               	btfss	3,2
  6773  04D1  2CCA               	goto	i1l2923
  6774  04D2  2CF3               	goto	L11
  6775  04D3                     i1l2931:	
  6776                           ;I2C1.c: 166: }
  6777                           ;I2C1.c: 167: }
  6778                           
  6779                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  6780                           
  6781                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  6782                           
  6783                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  6784                           
  6785                           
  6786                           ;I2C1.c: 168: else
  6787                           ;I2C1.c: 169: {
  6788                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  6789  04D3  0811               	movf	17,w	;volatile
  6790  04D4  00F0               	movwf	??_I2C1_Interrupt
  6791  04D5  0021               	movlb	1	; select bank1
  6792  04D6  084A               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  6793  04D7  0086               	movwf	6
  6794  04D8  0187               	clrf	7
  6795  04D9  0870               	movf	??_I2C1_Interrupt,w
  6796  04DA  0081               	movwf	1
  6797                           
  6798                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  6799  04DB  3001               	movlw	1
  6800  04DC  00F0               	movwf	??_I2C1_Interrupt
  6801  04DD  0870               	movf	??_I2C1_Interrupt,w
  6802  04DE  07CA               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  6803  04DF  2D05               	goto	i1l2951
  6804  04E0                     i1l443:	
  6805                           ;I2C1.c: 173: }
  6806                           ;I2C1.c: 174: }
  6807                           
  6808                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  6809                           
  6810                           
  6811                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  6812  04E0  1A94               	btfsc	20,5	;volatile
  6813  04E1  2D07               	goto	i1l2953
  6814                           
  6815                           ;I2C1.c: 176: {
  6816                           ;I2C1.c: 177: SSP1BUF;
  6817  04E2  0811               	movf	17,w	;volatile
  6818                           
  6819                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  6820  04E3  1D14               	btfss	20,2	;volatile
  6821  04E4  2D00               	goto	i1l2949
  6822                           
  6823                           ;I2C1.c: 180: {
  6824                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  6825  04E5  30B9               	movlw	(low (_I2C1_Config| 0))& (0+255)
  6826  04E6  00F0               	movwf	??_I2C1_Interrupt
  6827  04E7  0870               	movf	??_I2C1_Interrupt,w
  6828  04E8  0021               	movlb	1	; select bank1
  6829  04E9  00C9               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  6830  04EA                     i1l2943:	
  6831                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  6832                           
  6833  04EA  0024               	movlb	4	; select bank4
  6834  04EB  0814               	movf	20,w	;volatile
  6835  04EC  3901               	andlw	1
  6836  04ED  00F0               	movwf	??_I2C1_Interrupt
  6837  04EE  0E15               	swapf	21,w	;volatile
  6838  04EF  3901               	andlw	1
  6839  04F0  0470               	iorwf	??_I2C1_Interrupt,w
  6840  04F1  1D03               	btfss	3,2
  6841  04F2  2CEA               	goto	i1l2943
  6842  04F3                     L11:	
  6843                           
  6844                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  6845  04F3  0021               	movlb	1	; select bank1
  6846  04F4  0849               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  6847  04F5  0086               	movwf	6
  6848  04F6  0187               	clrf	7
  6849  04F7  0801               	movf	1,w
  6850  04F8  0024               	movlb	4	; select bank4
  6851  04F9  0091               	movwf	17	;volatile
  6852                           
  6853                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  6854  04FA  3001               	movlw	1
  6855  04FB  00F0               	movwf	??_I2C1_Interrupt
  6856  04FC  0870               	movf	??_I2C1_Interrupt,w
  6857  04FD  0021               	movlb	1	; select bank1
  6858  04FE  07C9               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  6859                           
  6860                           ;I2C1.c: 186: }
  6861  04FF  2D05               	goto	i1l2951
  6862  0500                     i1l2949:	
  6863                           
  6864                           ;I2C1.c: 187: else
  6865                           ;I2C1.c: 188: {
  6866                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  6867  0500  30C1               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  6868  0501  00F0               	movwf	??_I2C1_Interrupt
  6869  0502  0870               	movf	??_I2C1_Interrupt,w
  6870  0503  0021               	movlb	1	; select bank1
  6871  0504  00CA               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  6872  0505                     i1l2951:	
  6873                           
  6874                           ;I2C1.c: 190: }
  6875                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  6876  0505  0024               	movlb	4	; select bank4
  6877  0506  1615               	bsf	21,4	;volatile
  6878  0507                     i1l2953:	
  6879                           
  6880                           ;I2C1.c: 192: }
  6881                           ;I2C1.c: 193: SSP1IF = 0;
  6882  0507  0020               	movlb	0	; select bank0
  6883  0508  1191               	bcf	17,3	;volatile
  6884  0509                     i1l2955:	
  6885                           
  6886                           ;I2C1.c: 194: }
  6887                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  6888  0509  0021               	movlb	1	; select bank1
  6889  050A  1D92               	btfss	18,3	;volatile
  6890  050B  0008               	return
  6891  050C  0020               	movlb	0	; select bank0
  6892  050D  1D92               	btfss	18,3	;volatile
  6893  050E  0008               	return
  6894                           
  6895                           ;I2C1.c: 197: BCL1IF = 0;
  6896  050F  1192               	bcf	18,3	;volatile
  6897  0510  0008               	return
  6898  0511                     __end_of_I2C1_Interrupt:	
  6899                           
  6900                           	psect	text34
  6901  0700                     __ptext34:	
  6902 ;; *************** function _CPSx_Read *****************
  6903 ;; Defined at:
  6904 ;;		line 29 in file "mTouch.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;		None
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  1    wreg      void 
  6911 ;; Registers used:
  6912 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6918 ;;      Params:         0       0       0       0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0
  6920 ;;      Temps:          1       0       0       0       0       0
  6921 ;;      Totals:         1       0       0       0       0       0
  6922 ;;Total ram usage:        1 bytes
  6923 ;; Hardware stack levels used:    1
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_Handler
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           
  6932                           ;psect for function _CPSx_Read
  6933  0700                     _CPSx_Read:	
  6934                           
  6935                           ;mTouch.c: 31: static uint8_t channel=0;
  6936                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  6937                           
  6938                           ;incstack = 0
  6939                           ; Regs used in _CPSx_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6940  0700  087A               	movf	CPSx_Read@channel,w
  6941  0701  3E63               	addlw	(low (_CPS_Data| 0))& (0+255)
  6942  0702  0086               	movwf	6
  6943  0703  0187               	clrf	7
  6944  0704  0801               	movf	1,w
  6945  0705  00F0               	movwf	??_CPSx_Read
  6946  0706  087A               	movf	CPSx_Read@channel,w
  6947  0707  3EA3               	addlw	(low (_CPS_PreData| 0))& (0+255)
  6948  0708  0086               	movwf	6
  6949  0709  0187               	clrf	7
  6950  070A  0870               	movf	??_CPSx_Read,w
  6951  070B  0081               	movwf	1
  6952                           
  6953                           ;mTouch.c: 34: CPSCON0 &= ~(0x01<<7);;
  6954  070C  307F               	movlw	127
  6955  070D  00F0               	movwf	??_CPSx_Read
  6956  070E  0870               	movf	??_CPSx_Read,w
  6957  070F  0020               	movlb	0	; select bank0
  6958  0710  059E               	andwf	30,f	;volatile
  6959                           
  6960                           ;mTouch.c: 35: CPS_Data[channel] = TMR0;
  6961  0711  0815               	movf	21,w	;volatile
  6962  0712  00F0               	movwf	??_CPSx_Read
  6963  0713  087A               	movf	CPSx_Read@channel,w
  6964  0714  3E63               	addlw	(low (_CPS_Data| 0))& (0+255)
  6965  0715  0086               	movwf	6
  6966  0716  0187               	clrf	7
  6967  0717  0870               	movf	??_CPSx_Read,w
  6968  0718  0081               	movwf	1
  6969                           
  6970                           ;mTouch.c: 36: TMR0 = 0x00;
  6971  0719  0195               	clrf	21	;volatile
  6972                           
  6973                           ;mTouch.c: 37: CPSCON0 |= (0x01<<7);;
  6974  071A  179E               	bsf	30,7	;volatile
  6975                           
  6976                           ;mTouch.c: 39: if(channel++>2)channel = 0;
  6977  071B  087A               	movf	CPSx_Read@channel,w
  6978  071C  0AFA               	incf	CPSx_Read@channel,f
  6979  071D  00F0               	movwf	??_CPSx_Read
  6980  071E  3003               	movlw	3
  6981  071F  0270               	subwf	??_CPSx_Read,w
  6982  0720  1803               	btfsc	3,0
  6983  0721  01FA               	clrf	CPSx_Read@channel
  6984                           
  6985                           ;mTouch.c: 40: CPSCON1 = (uint8_t)channel;
  6986  0722  087A               	movf	CPSx_Read@channel,w
  6987  0723  009F               	movwf	31	;volatile
  6988  0724  0008               	return
  6989  0725                     __end_of_CPSx_Read:	
  6990  007E                     btemp	set	126	;btemp
  6991  007E                     int$flags	set	126
  6992  007E                     wtemp0	set	126


Data Sizes:
    Strings     43
    Constant    0
    Data        0
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     67      79
    BANK1            80      0      44
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S290$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S290$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[7]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[7]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _xvprintf->___lldiv
    _xvprintf->___llmod
    _xvprintf->_xputs
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _mTouch_Init->_mTouch_PortInit
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _DAC_Initialize->_I2C_Init
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in COMMON

    _Handler->_CPSx_Read
    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv
    _DAC_Initialize->_I2C_Transmit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    8199
                                             62 BANK0      5     5      0
                         _Basic_Init
                         _Buzer_Init
                     _DAC_Initialize
                 _LCD_CursorPosition
                           _LCD_Init
                        _Timer1_Init
                        _Timer4_Init
                        _mTouch_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                              8     2      6    4954
                                             54 BANK0      8     2      6
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    4320
                                              6 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     337
                                              8 COMMON     2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     262
                                              6 COMMON     2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     196
                                              5 COMMON     1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     220
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              2 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              3 COMMON     1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              6 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              5 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     196
                                              5 COMMON     3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0      88
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    2873
                                              8 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              0 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3     924
                                              7 COMMON     3     0      3
                                              0 BANK0      3     3      0
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     238
                                              3 COMMON     4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     238
                                              3 COMMON     4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzer_Init                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0       0
                                              1 COMMON     1     1      0
                          _CPSx_Read
                _I2C_CommonInterrupt
                     _Timer1_Handler
                     _Timer4_Handler
 ---------------------------------------------------------------------------------
 (8) _Timer4_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer1_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CPSx_Read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_Init
   _Timer4_Init
   _mTouch_Init
     _mTouch_PortInit
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _Handler (ROOT)
   _CPSx_Read
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Handler
   _Timer4_Handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      87       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     43      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2C       8       55.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      87      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Apr 15 04:42:43 2017

                 __CFG_CP$OFF 0000                I2C2_Transmit@i 0077         ??_I2C_CommonInterrupt 0071  
         ___wmul@multiplicand 0074                           l200 0212                           l144 0044  
                         l501 0614                           l159 00C0                           l360 0625  
                         l177 015B                           l514 0318                           l523 033B  
                         l364 064C                           l532 0352                           l624 06FD  
                         l377 0396                           l386 03B9                           l395 03D0  
                         l497 05ED                           l881 076E                           _GIE 005F  
                         _PR2 001B                           _PR4 0416                  __CFG_CPD$OFF 0000  
                __CFG_BORV$LO 0000                           wreg 0009                    _Basic_Init 07AF  
                __CFG_LVP$OFF 0000               __end_of_LCD_Put 0FA6                          l2521 062D  
                        l2509 07C5                          l2543 0644                          l2615 05FF  
                        l2607 05F5                          l2529 0637                          l2625 060A  
                        l3601 0304                          l2539 0642                          l3603 030E  
                        l2629 060C                          l3613 032B                          l3551 038C  
                        l3623 0323                          l2495 0671                          l2487 0662  
                        l3561 03A9                          l3641 0373                          l3625 0327  
                        l3801 0193                          l3721 0072                          l3571 03A1  
                        l3627 0348                          l3811 01B6                          l3803 01A3  
                        l3731 0089                          l3707 005D                          l3573 03A5  
                        l3549 0382                          l3637 0357                          l3645 0375  
                        l2685 0768                          l3821 01F0                          l3741 00B8  
                        l3575 03C6                          l3639 036E                          l3647 037E  
                        l3671 055B                          l3585 03D5                          l3593 03F3  
                        l3657 0522                          l3681 056D                          l3825 01F8  
                        l3809 01B4                          l3737 00B0                          l3729 0086  
                        l3587 03EC                          l3595 03FC                          l3667 0550  
                        l3659 0530                          l3683 057B                          l3691 059E  
                        l3851 0247                          l3843 0228                          l3771 010C  
                        l3763 00E8                          l3923 02B6                          l3861 06D9  
                        l3589 03F1                          l3845 0231                          l3837 0220  
                        l3781 0135                          l3765 00F6                          l3757 00DB  
                        l3749 00CD                          l3917 028C                          l3863 06E6  
                        l3871 06AE                          l3687 0593                          l3855 0259  
                        l3847 0235                          l3783 0137                          l3775 0110  
                        l3767 00FA                          l3791 0143                          l3927 02DB  
                        l3873 06BB                          l3857 025D                          l3785 0139  
                        l3777 0125                          l3867 06F4                          l3787 013E  
                        l3779 0132                          l3877 06CC                          l3797 0175  
                        l3879 06D4                          l3799 018A                          STR_1 069A  
                        STR_2 069F                          STR_3 06A4                          STR_4 06A9  
                        STR_5 0680                          STR_6 068E                          STR_7 0694  
                        STR_8 0687                          u2105 0774                          u2095 076F  
                        u4107 05A9                          u4047 0406                          u4057 041F  
                        u1755 05AF                          u4067 0432                          u4077 0446  
                        u4087 0FEA                          u4097 07AB                          u3625 0570  
                        u2755 07A0                          u3555 0525                          _PEIE 005E  
                        u3645 0589                          u3805 011E                          u3575 0531  
                        u3655 0594                          u3585 0545                          u3595 0551  
                        u3925 0245                          u3945 026B                          u3795 010A  
                        u3955 02AC                          u3965 02D1                          u3975 02F6  
                        _TMR0 0015                          _TMR1 0016                          _TMR2 001A  
                        _TMR4 0415               ??_I2C1_Transmit 0074                  __CFG_WRT$OFF 0000  
                        _main 026E              __end_of_I2C_Init 0700                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
               __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0074              ??_I2C1_Interrupt 0070  
                        start 002D                 __CFG_IESO$OFF 0000               __end_of_Handler 002D  
               _LCD_WriteData 05A7                 __CFG_MCLRE$ON 0000              ??_I2C2_Interrupt 0070  
          __size_of_CPSx_Read 0025      __end_of_LCD_DisplayClear 0FF0         __size_of_I2C_Transmit 002B  
            __end_of_LCD_Init 0469                 __CFG_PLLEN$ON 0000                   LCD_Put@word 0075  
                       ?_main 0070                 __CFG_WDTE$OFF 0000               __end_of___lldiv 0564  
                       _T1CON 0018               __end_of___llmod 05A7                         _T2CON 001C  
                       _LATA3 0863                         _LATA4 0864                         _LATA6 0866  
                       _T4CON 0417                         i1l443 04E0                         i1l580 048C  
                       _PORTA 000C                         _PORTB 000D                         _TRISA 008C  
                       _TRISB 008D             I2C2_Transmit@size 0073                 __CFG_PWRTE$ON 0000  
              __CFG_FCMEN$OFF 0000                         _xputc 0653                         _xputs 07C4  
                       pclath 000A                         status 0003                         wtemp0 007E  
             __end_of_xprintf 1000                  _I2C_Transmit 06AB            _LCD_CursorPosition 079A  
              ?_LCD_WriteData 0070              ??_DAC_Initialize 0028               __initialization 002F  
                  _Buzer_Init 0725                  __end_of_main 0301           ?_LCD_CursorPosition 0075  
                      ??_main 005E                     ??_LCD_Put 0076              CPSx_Read@channel 007A  
                 ?_Basic_Init 0070                        _BCL1IE 0493                        _BCL1IF 0093  
                      _BCL2IE 04A1                        _BCL2IF 00A1                _Timer1_Handler 0FAC  
            ___llmod@dividend 0076          __size_of_mTouch_Init 0013                        _CCPR2L 0298  
        ??_LCD_CursorPosition 0076                        _ANSELA 018C                        _ANSELB 018D  
                      _T1GCON 0019             __end_of_CPSx_Read 0725                        ?_xputc 0070  
                      ?_xputs 0070                        i1l3001 04B1                        i1l3003 04B3  
                      i1l3005 04B5                        i1l3407 0023                        i1l3199 0FBE  
                      i1l2923 04CA                        i1l2931 04D3                        i1l2951 0505  
                      i1l2943 04EA                        i1l2953 0507                        i1l2955 0509  
                      i1l2949 0500                        i1l2973 0476                        i1l2981 047F  
          I2C2_Transmit@i_560 0078                        i1l2993 0496                        i1l2999 04AC  
                      _OSCCON 0099            I2C2_Transmit@pData 0072                _Timer4_Handler 0FB5  
                      _TMR1IE 0488                        _TMR1IF 0088                     ??_Handler 0071  
                      _TMR4IE 0499                        _TMR4IF 0099                        _TMR1ON 00C0  
                      _SSP1IE 048B                        _SSP1IF 008B                        _SSP2IE 04A0  
                      _SSP2IF 00A0               _mTouch_PortInit 0FD6                 ??_Timer1_Init 0072  
               ??_Timer4_Init 0072                        ___wmul 0766                     ??___lldiv 0020  
                   ??___llmod 0020                        _outptr 007B              I2C_Transmit@I2Cx 0026  
                   ?_I2C_Init 0077        __end_of_Timer1_Handler 0FB5              I2C_Transmit@size 0022  
      __end_of_Timer4_Handler 0FC0                        xputc@c 0077                     ??_xprintf 005C  
     __end_of__initialization 0040                     ?_LCD_Init 0070               ??_LCD_WriteData 0072  
            __end_of_xvprintf 026E                    _VoltageReg 006C                __pcstackCOMMON 0070  
                 ?_Buzer_Init 0070           __size_of_Basic_Init 0015           __end_of_Timer1_Init 079A  
         __end_of_Timer4_Init 07FB                 __end_of_xputc 0680                 __end_of_xputs 07D7  
                  ??_I2C_Init 0020               ?_Timer1_Handler 0070           I2C1_Transmit@result 0079  
             ?_Timer4_Handler 0070       __end_of_mTouch_PortInit 0FE1                       ??_xputc 0076  
                     ??_xputs 0078                    __pbssBANK0 0063                    __pbssBANK1 00A0  
                  ??_LCD_Init 0076                  I2C_Init@I2Cx 0022   __end_of_I2C_CommonInterrupt 0FA0  
                I2C_Init@mode 0078                    __pmaintext 026E                       ?___wmul 0072  
                  __pintentry 0004                       _CCP2CON 029A             ?_LCD_DisplayClear 0070  
                     _APFCON0 011D                       _APFCON1 011E                       _CCPTMRS 029E  
          ??_LCD_DisplayClear 0075                       _CPSCON0 001E                       _CPSCON1 001F  
                     _LCD_Put 0FA0                  _xvprintf$200 0041                  _xvprintf$201 0043  
                _xvprintf$199 003D                       _SSP1ADD 0212                       _SSP2ADD 021A  
                     _SSP1BUF 0211                       _SSP2BUF 0219                       _SSP1MSK 0213  
                     _SSP2MSK 021B           __size_of_Buzer_Init 0022           I2C2_Transmit@result 0079  
                     _Handler 0004         __end_of_I2C1_Transmit 03FE         __end_of_I2C2_Transmit 0380  
                 _Timer1_Init 0781                   _Timer4_Init 07EA                       ___lldiv 0511  
             __size_of___wmul 001B                       ___llmod 0564               __CFG_STVREN$OFF 0000  
                     __ptext1 0FF0                       __ptext2 0044                       __ptext3 07C4  
                     __ptext4 0653                       __ptext5 0FA0                       __ptext6 0766  
                     __ptext7 0564                       __ptext8 0511                       __ptext9 07D7  
                   ?_xvprintf 0026                  ??_Basic_Init 0072                       clrloop0 0FA7  
        end_of_initialization 0040              ?_mTouch_PortInit 0070                       _xprintf 0FF0  
               ?_I2C1_PinInit 0070                 ?_I2C2_PinInit 0070                   _I2C1_Config 00B9  
                   _CPSx_Read 0700                   _I2C2_Config 00A6                 ?_I2C1_Setting 0073  
             ___lldiv@divisor 0072                 ?_I2C2_Setting 0073               ___lldiv@counter 0025  
           I2C_Transmit@pData 0021            __end_of_Basic_Init 07C4                  __pstringtext 0680  
     __size_of_I2C1_Interrupt 0054              __CFG_FOSC$INTOSC 0000                 ??_mTouch_Init 0073  
                  ??_xvprintf 0029       __size_of_I2C2_Interrupt 0054             __size_of_I2C_Init 002A  
         I2C1_Setting@address 0076   __size_of_LCD_CursorPosition 0015                ??_I2C1_PinInit 0072  
              ??_I2C2_PinInit 0072                ??_I2C1_Setting 0075                    ?_CPSx_Read 0070  
              ??_I2C2_Setting 0075             __size_of_LCD_Init 006B                  ??_Buzer_Init 0072  
              __end_of___wmul 0781                     _ConfigReg 006E              ??_Timer1_Handler 0070  
     __size_of_DAC_Initialize 001F              ??_Timer4_Handler 0070           start_initialization 002F  
        I2C1_Transmit@address 0076                     _MemoryReg 00A0            __end_of_Buzer_Init 0747  
         __end_of_mTouch_Init 07EA           I2C2_Setting@address 0076               ___llmod@divisor 0072  
             ___llmod@counter 0021          LCD_CursorPosition@tx 0077          LCD_CursorPosition@ty 0075  
       __end_of_LCD_WriteData 05E3                      ??___wmul 0076             I2C1_Setting@Speed 0074  
                    ?_LCD_Put 0075                   __pbssCOMMON 007A                     ___latbits 0001  
               __pcstackBANK0 0020            I2C1_Transmit@i_416 0078            I2C1_Transmit@pData 0072  
   __size_of_LCD_DisplayClear 000F               I2C_Init@address 0077                      ?_Handler 0070  
                 ??_CPSx_Read 0070                 ?_I2C_Transmit 0020                 I2C_Init@Speed 0079  
                ?_Timer1_Init 0070                  ?_Timer4_Init 0070                      ?___lldiv 0072  
                    ?___llmod 0072                _I2C1_Interrupt 04BD          __end_of_I2C1_PinInit 0FCB  
__size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 0FD6          __end_of_I2C1_Setting 0653  
                    _I2C_Init 06D6          __end_of_I2C2_Setting 061B                _I2C2_Interrupt 0469  
                 _mTouch_Init 07D7             __size_of_xvprintf 022A                      ?_xprintf 0056  
              __size_of_xputc 002D                __size_of_xputs 0013                      _LCD_Init 03FE  
              ___wmul@product 0076                      _CPS_Data 0063                ??_I2C_Transmit 0023  
                   clear_ram0 0FA6        __end_of_I2C1_Interrupt 0511                      _SSP1CON1 0215  
                    _SSP1CON2 0216          I2C2_Transmit@address 0076                      _SSP2CON1 021D  
                    _SSP2CON2 021E                      _SSP1STAT 0214                      _SSP2STAT 021C  
                Handler@count 0068             ___wmul@multiplier 0072                _DAC_Initialize 0747  
      __end_of_I2C2_Interrupt 04BD        __size_of_I2C1_Transmit 007E                     _xfunc_out 006A  
            __size_of_LCD_Put 0006        __size_of_I2C2_Transmit 007F                   _CPS_PreData 00A3  
            __size_of_Handler 0029      __size_of_mTouch_PortInit 000B               ?_I2C1_Interrupt 0070  
      __end_of_DAC_Initialize 0766              __size_of___lldiv 0053              __size_of___llmod 0043  
            I2C1_Setting@mode 0073            LCD_WriteData@point 0074               ?_I2C2_Interrupt 0070  
           I2C1_Transmit@size 0073    __end_of_LCD_CursorPosition 07AF                      __ptext10 0FD6  
                    __ptext11 07EA                      __ptext20 0380                      __ptext12 0781  
                    __ptext21 06D6                      __ptext13 03FE                      __ptext30 0FAC  
                    __ptext22 05E3                      __ptext14 0FE1                      __ptext31 0F9A  
                    __ptext23 0FCB                      __ptext15 079A                      __ptext32 0469  
                    __ptext24 061B                      __ptext16 05A7                      __ptext33 04BD  
                    __ptext25 0FC0                      __ptext17 0747                      __ptext34 0700  
                    __ptext26 0725                      __ptext18 06AB                      __ptext27 07AF  
                    __ptext19 0301                      __ptext29 0FB5                  _SSP1CON1bits 0215  
                _SSP1CON2bits 0216              _LCD_DisplayClear 0FE1                  _SSP2CON1bits 021D  
                _SSP2CON2bits 021E              __size_of_xprintf 0010                 __size_of_main 0093  
               _I2C1_Transmit 0380                 _I2C2_Transmit 0301         __size_of_I2C1_PinInit 000B  
        __size_of_Timer1_Init 0019                      int$flags 007E         __size_of_I2C2_PinInit 000B  
        __size_of_Timer4_Init 0011           I2C_Transmit@address 0020         __size_of_I2C1_Setting 0038  
             ?_DAC_Initialize 0070                  _SSP1STATbits 0214                      _xfunc_in 0066  
       __size_of_I2C2_Setting 0038                  _SSP2STATbits 021C          __end_of_I2C_Transmit 06D6  
           I2C2_Setting@Speed 0074                      _xvprintf 0044                    xprintf@arp 005D  
                  xprintf@fmt 0056                      intlevel1 0000           _I2C_CommonInterrupt 0F9A  
                _I2C1_PinInit 0FC0              ___lldiv@dividend 0076                ?_I2C1_Transmit 0072  
           __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 0FCB                  _I2C1_Setting 061B  
              ?_I2C2_Transmit 0072                  _I2C2_Setting 05E3                   xvprintf@arp 0028  
                 xvprintf@fmt 0026            I2C_Transmit@result 0027             ??_mTouch_PortInit 0072  
            I2C2_Setting@mode 0073          ?_I2C_CommonInterrupt 0070                    _OPTION_REG 0095  
            ___lldiv@quotient 0021                  ?_mTouch_Init 0070        __size_of_LCD_WriteData 003C  
     __size_of_Timer1_Handler 0009                I2C1_Transmit@i 0077                      xputs@str 0079  
                   xvprintf@c 0055                     xvprintf@d 0054                     xvprintf@f 0050  
                   xvprintf@i 0052                     xvprintf@j 004A                     xvprintf@p 0045  
                   xvprintf@r 0046                     xvprintf@s 002D                     xvprintf@v 004C  
                   xvprintf@w 0048       __size_of_Timer4_Handler 000B  
