

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Mar  7 12:47:21 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F1827 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0113                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011D                     	;# 
   111  011E                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019C                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  020C                     	;# 
   135  020D                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0219                     	;# 
   152  021A                     	;# 
   153  021B                     	;# 
   154  021C                     	;# 
   155  021D                     	;# 
   156  021E                     	;# 
   157  021F                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029C                     	;# 
   173  029D                     	;# 
   174  029E                     	;# 
   175  029E                     	;# 
   176  0311                     	;# 
   177  0311                     	;# 
   178  0312                     	;# 
   179  0313                     	;# 
   180  0318                     	;# 
   181  0318                     	;# 
   182  0319                     	;# 
   183  031A                     	;# 
   184  0394                     	;# 
   185  0395                     	;# 
   186  0396                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0415                     	;# 
   193  0416                     	;# 
   194  0417                     	;# 
   195  041C                     	;# 
   196  041D                     	;# 
   197  041E                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  008C                     	;# 
   239  008D                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0094                     	;# 
   244  0095                     	;# 
   245  0096                     	;# 
   246  0097                     	;# 
   247  0098                     	;# 
   248  0099                     	;# 
   249  009A                     	;# 
   250  009B                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0113                     	;# 
   260  0114                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  0118                     	;# 
   265  0119                     	;# 
   266  011A                     	;# 
   267  011B                     	;# 
   268  011D                     	;# 
   269  011E                     	;# 
   270  018C                     	;# 
   271  018D                     	;# 
   272  0191                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  0199                     	;# 
   282  019A                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019C                     	;# 
   288  019C                     	;# 
   289  019D                     	;# 
   290  019E                     	;# 
   291  019F                     	;# 
   292  020C                     	;# 
   293  020D                     	;# 
   294  0211                     	;# 
   295  0211                     	;# 
   296  0212                     	;# 
   297  0212                     	;# 
   298  0213                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0214                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0216                     	;# 
   306  0216                     	;# 
   307  0217                     	;# 
   308  0217                     	;# 
   309  0219                     	;# 
   310  021A                     	;# 
   311  021B                     	;# 
   312  021C                     	;# 
   313  021D                     	;# 
   314  021E                     	;# 
   315  021F                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0294                     	;# 
   321  0295                     	;# 
   322  0295                     	;# 
   323  0296                     	;# 
   324  0298                     	;# 
   325  0298                     	;# 
   326  0299                     	;# 
   327  029A                     	;# 
   328  029B                     	;# 
   329  029C                     	;# 
   330  029C                     	;# 
   331  029D                     	;# 
   332  029E                     	;# 
   333  029E                     	;# 
   334  0311                     	;# 
   335  0311                     	;# 
   336  0312                     	;# 
   337  0313                     	;# 
   338  0318                     	;# 
   339  0318                     	;# 
   340  0319                     	;# 
   341  031A                     	;# 
   342  0394                     	;# 
   343  0395                     	;# 
   344  0396                     	;# 
   345  039A                     	;# 
   346  039C                     	;# 
   347  039D                     	;# 
   348  039E                     	;# 
   349  039F                     	;# 
   350  0415                     	;# 
   351  0416                     	;# 
   352  0417                     	;# 
   353  041C                     	;# 
   354  041D                     	;# 
   355  041E                     	;# 
   356  0FE4                     	;# 
   357  0FE5                     	;# 
   358  0FE6                     	;# 
   359  0FE7                     	;# 
   360  0FE8                     	;# 
   361  0FE9                     	;# 
   362  0FEA                     	;# 
   363  0FEB                     	;# 
   364  0FED                     	;# 
   365  0FEE                     	;# 
   366  0FEF                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  0011                     	;# 
   382  0012                     	;# 
   383  0013                     	;# 
   384  0014                     	;# 
   385  0015                     	;# 
   386  0016                     	;# 
   387  0016                     	;# 
   388  0017                     	;# 
   389  0018                     	;# 
   390  0019                     	;# 
   391  001A                     	;# 
   392  001B                     	;# 
   393  001C                     	;# 
   394  001E                     	;# 
   395  001F                     	;# 
   396  008C                     	;# 
   397  008D                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0093                     	;# 
   401  0094                     	;# 
   402  0095                     	;# 
   403  0096                     	;# 
   404  0097                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009A                     	;# 
   408  009B                     	;# 
   409  009B                     	;# 
   410  009C                     	;# 
   411  009D                     	;# 
   412  009E                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  0111                     	;# 
   416  0112                     	;# 
   417  0113                     	;# 
   418  0114                     	;# 
   419  0115                     	;# 
   420  0116                     	;# 
   421  0117                     	;# 
   422  0118                     	;# 
   423  0119                     	;# 
   424  011A                     	;# 
   425  011B                     	;# 
   426  011D                     	;# 
   427  011E                     	;# 
   428  018C                     	;# 
   429  018D                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0193                     	;# 
   436  0194                     	;# 
   437  0195                     	;# 
   438  0196                     	;# 
   439  0199                     	;# 
   440  019A                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019C                     	;# 
   446  019C                     	;# 
   447  019D                     	;# 
   448  019E                     	;# 
   449  019F                     	;# 
   450  020C                     	;# 
   451  020D                     	;# 
   452  0211                     	;# 
   453  0211                     	;# 
   454  0212                     	;# 
   455  0212                     	;# 
   456  0213                     	;# 
   457  0213                     	;# 
   458  0214                     	;# 
   459  0214                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0215                     	;# 
   463  0216                     	;# 
   464  0216                     	;# 
   465  0217                     	;# 
   466  0217                     	;# 
   467  0219                     	;# 
   468  021A                     	;# 
   469  021B                     	;# 
   470  021C                     	;# 
   471  021D                     	;# 
   472  021E                     	;# 
   473  021F                     	;# 
   474  0291                     	;# 
   475  0291                     	;# 
   476  0292                     	;# 
   477  0293                     	;# 
   478  0294                     	;# 
   479  0295                     	;# 
   480  0295                     	;# 
   481  0296                     	;# 
   482  0298                     	;# 
   483  0298                     	;# 
   484  0299                     	;# 
   485  029A                     	;# 
   486  029B                     	;# 
   487  029C                     	;# 
   488  029C                     	;# 
   489  029D                     	;# 
   490  029E                     	;# 
   491  029E                     	;# 
   492  0311                     	;# 
   493  0311                     	;# 
   494  0312                     	;# 
   495  0313                     	;# 
   496  0318                     	;# 
   497  0318                     	;# 
   498  0319                     	;# 
   499  031A                     	;# 
   500  0394                     	;# 
   501  0395                     	;# 
   502  0396                     	;# 
   503  039A                     	;# 
   504  039C                     	;# 
   505  039D                     	;# 
   506  039E                     	;# 
   507  039F                     	;# 
   508  0415                     	;# 
   509  0416                     	;# 
   510  0417                     	;# 
   511  041C                     	;# 
   512  041D                     	;# 
   513  041E                     	;# 
   514  0FE4                     	;# 
   515  0FE5                     	;# 
   516  0FE6                     	;# 
   517  0FE7                     	;# 
   518  0FE8                     	;# 
   519  0FE9                     	;# 
   520  0FEA                     	;# 
   521  0FEB                     	;# 
   522  0FED                     	;# 
   523  0FEE                     	;# 
   524  0FEF                     	;# 
   525                           
   526 ;; Function _LCD_Put is unused but had its address taken
   527  001B                     _PR2	set	27
   528  001A                     _TMR2	set	26
   529  001C                     _T2CON	set	28
   530  000D                     _PORTB	set	13
   531  000C                     _PORTA	set	12
   532  0064                     _RA4	set	100
   533  0063                     _RA3	set	99
   534  008D                     _TRISB	set	141
   535  008C                     _TRISA	set	140
   536  0099                     _OSCCON	set	153
   537  011E                     _APFCON1	set	286
   538  011D                     _APFCON0	set	285
   539  018D                     _ANSELB	set	397
   540  018C                     _ANSELA	set	396
   541  0298                     _CCPR2L	set	664
   542  029E                     _CCPTMRS	set	670
   543  029A                     _CCP2CON	set	666
   544                           
   545                           	psect	stringtext
   546  0800                     __pstringtext:	
   547  0800                     STR_2:	
   548  0800  3425               	retlw	37	;'%'
   549  0801  3430               	retlw	48	;'0'
   550  0802  3438               	retlw	56	;'8'
   551  0803  346C               	retlw	108	;'l'
   552  0804  3458               	retlw	88	;'X'
   553  0805  3420               	retlw	32	;' '
   554  0806  3400               	retlw	0
   555  0807                     STR_5:	
   556  0807  3420               	retlw	32	;' '
   557  0808  3425               	retlw	37	;'%'
   558  0809  3430               	retlw	48	;'0'
   559  080A  3438               	retlw	56	;'8'
   560  080B  344C               	retlw	76	;'L'
   561  080C  3458               	retlw	88	;'X'
   562  080D  3400               	retlw	0
   563  080E                     STR_3:	
   564  080E  3420               	retlw	32	;' '
   565  080F  3425               	retlw	37	;'%'
   566  0810  3430               	retlw	48	;'0'
   567  0811  3432               	retlw	50	;'2'
   568  0812  3458               	retlw	88	;'X'
   569  0813  3400               	retlw	0
   570  0814                     STR_4:	
   571  0814  3420               	retlw	32	;' '
   572  0815  3425               	retlw	37	;'%'
   573  0816  3430               	retlw	48	;'0'
   574  0817  3434               	retlw	52	;'4'
   575  0818  3458               	retlw	88	;'X'
   576  0819  3400               	retlw	0
   577  081A                     STR_1:	
   578  081A  340D               	retlw	13
   579  081B  3400               	retlw	0
   580                           
   581                           ; #config settings
   582  0000                     
   583                           	psect	cinit
   584  07F8                     start_initialization:	
   585  07F8                     __initialization:	
   586                           
   587                           ; Clear objects allocated to COMMON
   588  07F8  01F6               	clrf	__pbssCOMMON& (0+127)
   589  07F9  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   590  07FA  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   591  07FB  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   592  07FC  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   593  07FD                     end_of_initialization:	
   594                           ;End of C runtime variable initialization code
   595                           
   596  07FD                     __end_of__initialization:	
   597  07FD  0020               	movlb	0
   598  07FE  3187  2F03         	ljmp	_main	;jump to C main() function
   599                           
   600                           	psect	bssCOMMON
   601  0076                     __pbssCOMMON:	
   602  0076                     _xfunc_in:	
   603  0076                     	ds	2
   604  0078                     _xfunc_out:	
   605  0078                     	ds	2
   606  007A                     _outptr:	
   607  007A                     	ds	1
   608                           
   609                           	psect	cstackCOMMON
   610  0070                     __pcstackCOMMON:	
   611  0070                     ?_Basic_Init:	
   612  0070                     ??_Basic_Init:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_Buzer_Init:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ??_Buzer_Init:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_Buzer_SetDuty:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_LCD_Init:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_LCD_DisplayClear:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_main:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_LCD_WriteData:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ??_LCD_WriteData:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     Buzer_SetDuty@duty:	
   640                           ; 1 bytes @ 0x0
   641                           
   642                           
   643                           ; 2 bytes @ 0x0
   644  0070                     	ds	2
   645  0072                     ??_Buzer_SetDuty:	
   646  0072                     LCD_WriteData@point:	
   647                           ; 1 bytes @ 0x2
   648                           
   649                           
   650                           ; 1 bytes @ 0x2
   651  0072                     	ds	1
   652  0073                     ??_LCD_DisplayClear:	
   653                           
   654                           ; 1 bytes @ 0x3
   655  0073                     	ds	1
   656  0074                     ??_LCD_Init:	
   657  0074                     Buzer_SetDuty@CCP2CON_Pre:	
   658                           ; 1 bytes @ 0x4
   659                           
   660                           
   661                           ; 1 bytes @ 0x4
   662  0074                     	ds	2
   663  0076                     ??_main:	
   664                           
   665                           	psect	maintext
   666  0703                     __pmaintext:	
   667                           ; 1 bytes @ 0x6
   668 ;;
   669 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   670 ;;
   671 ;; *************** function _main *****************
   672 ;; Defined at:
   673 ;;		line 10 in file "main.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      char 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : B1F/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   687 ;;      Params:         0       0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels required when called:    3
   693 ;; This function calls:
   694 ;;		_Basic_Init
   695 ;;		_Buzer_Init
   696 ;;		_Buzer_SetDuty
   697 ;;		_LCD_Init
   698 ;; This function is called by:
   699 ;;		Startup code after reset
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function _main
   705  0703                     _main:	
   706                           
   707                           ;main.c: 12: Basic_Init();
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   711  0703  3186  26EE  3187   	fcall	_Basic_Init
   712                           
   713                           ;main.c: 13: Buzer_Init();
   714  0706  3187  2733  3187   	fcall	_Buzer_Init
   715                           
   716                           ;main.c: 14: Buzer_SetDuty(0x01FF);
   717  0709  30FF               	movlw	255
   718  070A  00F0               	movwf	Buzer_SetDuty@duty
   719  070B  3001               	movlw	1
   720  070C  00F1               	movwf	Buzer_SetDuty@duty+1
   721  070D  3187  2718  3187   	fcall	_Buzer_SetDuty
   722                           
   723                           ;main.c: 16: LCD_Init();
   724  0710  3187  278F  3187   	fcall	_LCD_Init
   725                           
   726                           ;main.c: 17: xfunc_out = (void(*)(unsigned char))(LCD_Put);
   727  0713  3000               	movlw	0
   728  0714  00F8               	movwf	_xfunc_out
   729  0715  3000               	movlw	0
   730  0716  00F9               	movwf	_xfunc_out+1
   731  0717                     l33:	
   732                           ;main.c: 18: while(1)
   733                           
   734                           
   735                           ;main.c: 19: {
   736  0717  2F17               	goto	l33
   737  0718                     __end_of_main:	
   738                           ;main.c: 21: }
   739                           ;main.c: 22: return 0;
   740                           ;	Return value of _main is never used
   741                           
   742                           
   743                           	psect	text1
   744  078F                     __ptext1:	
   745 ;; *************** function _LCD_Init *****************
   746 ;; Defined at:
   747 ;;		line 28 in file "LCD.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   761 ;;      Params:         0       0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0       0
   763 ;;      Temps:          2       0       0       0       0       0
   764 ;;      Totals:         2       0       0       0       0       0
   765 ;;Total ram usage:        2 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    2
   768 ;; This function calls:
   769 ;;		_LCD_DisplayClear
   770 ;;		_LCD_WriteData
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _LCD_Init
   778  078F                     _LCD_Init:	
   779                           
   780                           ;LCD.c: 30: RA4 = 0;
   781                           
   782                           ;incstack = 0
   783                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   784  078F  0020               	movlb	0	; select bank0
   785  0790  120C               	bcf	12,4	;volatile
   786                           
   787                           ;LCD.c: 31: RA3 = 0;
   788  0791  118C               	bcf	12,3	;volatile
   789                           
   790                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
   791  0792  3002               	movlw	2
   792  0793  00F5               	movwf	??_LCD_Init+1
   793  0794  3038               	movlw	56
   794  0795  00F4               	movwf	??_LCD_Init
   795  0796  30AD               	movlw	173
   796  0797                     u697:	
   797  0797  0B89               	decfsz	9,f
   798  0798  2F97               	goto	u697
   799  0799  0BF4               	decfsz	??_LCD_Init,f
   800  079A  2F97               	goto	u697
   801  079B  0BF5               	decfsz	??_LCD_Init+1,f
   802  079C  2F97               	goto	u697
   803  079D  0000               	nop
   804                           
   805                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
   806  079E  3003               	movlw	3
   807  079F  0020               	movlb	0	; select bank0
   808  07A0  008D               	movwf	13	;volatile
   809                           
   810                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   811  07A1  158C               	bsf	12,3	;volatile
   812  07A2  3200               	nop2	;2 cycle nop
   813  07A3  3200               	nop2	;2 cycle nop
   814  07A4  3200               	nop2	;2 cycle nop
   815  07A5  3200               	nop2	;2 cycle nop
   816  07A6  0020               	movlb	0	; select bank0
   817  07A7  118C               	bcf	12,3	;volatile
   818  07A8  3200               	nop2	;2 cycle nop
   819  07A9  3200               	nop2	;2 cycle nop
   820  07AA  3200               	nop2	;2 cycle nop
   821  07AB  3200               	nop2	;2 cycle nop
   822                           
   823                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
   824  07AC  3034               	movlw	52
   825  07AD  00F4               	movwf	??_LCD_Init
   826  07AE  30F2               	movlw	242
   827  07AF                     u707:	
   828  07AF  0B89               	decfsz	9,f
   829  07B0  2FAF               	goto	u707
   830  07B1  0BF4               	decfsz	??_LCD_Init,f
   831  07B2  2FAF               	goto	u707
   832                           
   833                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   834  07B3  0020               	movlb	0	; select bank0
   835  07B4  158C               	bsf	12,3	;volatile
   836  07B5  3200               	nop2	;2 cycle nop
   837  07B6  3200               	nop2	;2 cycle nop
   838  07B7  3200               	nop2	;2 cycle nop
   839  07B8  3200               	nop2	;2 cycle nop
   840  07B9  0020               	movlb	0	; select bank0
   841  07BA  118C               	bcf	12,3	;volatile
   842  07BB  3200               	nop2	;2 cycle nop
   843  07BC  3200               	nop2	;2 cycle nop
   844  07BD  3200               	nop2	;2 cycle nop
   845  07BE  3200               	nop2	;2 cycle nop
   846                           
   847                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
   848  07BF  3005               	movlw	5
   849  07C0  00F4               	movwf	??_LCD_Init
   850  07C1  3026               	movlw	38
   851  07C2                     u717:	
   852  07C2  0B89               	decfsz	9,f
   853  07C3  2FC2               	goto	u717
   854  07C4  0BF4               	decfsz	??_LCD_Init,f
   855  07C5  2FC2               	goto	u717
   856  07C6  3200               	nop2
   857                           
   858                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   859  07C7  0020               	movlb	0	; select bank0
   860  07C8  158C               	bsf	12,3	;volatile
   861  07C9  3200               	nop2	;2 cycle nop
   862  07CA  3200               	nop2	;2 cycle nop
   863  07CB  3200               	nop2	;2 cycle nop
   864  07CC  3200               	nop2	;2 cycle nop
   865  07CD  0020               	movlb	0	; select bank0
   866  07CE  118C               	bcf	12,3	;volatile
   867  07CF  3200               	nop2	;2 cycle nop
   868  07D0  3200               	nop2	;2 cycle nop
   869  07D1  3200               	nop2	;2 cycle nop
   870  07D2  3200               	nop2	;2 cycle nop
   871                           
   872                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
   873  07D3  3005               	movlw	5
   874  07D4  00F4               	movwf	??_LCD_Init
   875  07D5  3026               	movlw	38
   876  07D6                     u727:	
   877  07D6  0B89               	decfsz	9,f
   878  07D7  2FD6               	goto	u727
   879  07D8  0BF4               	decfsz	??_LCD_Init,f
   880  07D9  2FD6               	goto	u727
   881  07DA  3200               	nop2
   882                           
   883                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
   884  07DB  3002               	movlw	2
   885  07DC  0020               	movlb	0	; select bank0
   886  07DD  008D               	movwf	13	;volatile
   887                           
   888                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   889  07DE  158C               	bsf	12,3	;volatile
   890  07DF  3200               	nop2	;2 cycle nop
   891  07E0  3200               	nop2	;2 cycle nop
   892  07E1  3200               	nop2	;2 cycle nop
   893  07E2  3200               	nop2	;2 cycle nop
   894  07E3  0020               	movlb	0	; select bank0
   895  07E4  118C               	bcf	12,3	;volatile
   896  07E5  3200               	nop2	;2 cycle nop
   897  07E6  3200               	nop2	;2 cycle nop
   898  07E7  3200               	nop2	;2 cycle nop
   899  07E8  3200               	nop2	;2 cycle nop
   900                           
   901                           ;LCD.c: 44: LCD_WriteData(0x28);
   902  07E9  3028               	movlw	40
   903  07EA  3187  2755  3187   	fcall	_LCD_WriteData
   904                           
   905                           ;LCD.c: 45: LCD_WriteData(0x0c);
   906  07ED  300C               	movlw	12
   907  07EE  3187  2755  3187   	fcall	_LCD_WriteData
   908                           
   909                           ;LCD.c: 46: LCD_DisplayClear();
   910  07F1  3186  26DF  3187   	fcall	_LCD_DisplayClear
   911                           
   912                           ;LCD.c: 47: LCD_WriteData(0x06);
   913  07F4  3006               	movlw	6
   914  07F5  3187  2755         	fcall	_LCD_WriteData
   915  07F7  0008               	return
   916  07F8                     __end_of_LCD_Init:	
   917                           
   918                           	psect	text2
   919  06DF                     __ptext2:	
   920 ;; *************** function _LCD_DisplayClear *****************
   921 ;; Defined at:
   922 ;;		line 64 in file "LCD.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, pclath, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   936 ;;      Params:         0       0       0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0
   938 ;;      Temps:          1       0       0       0       0       0
   939 ;;      Totals:         1       0       0       0       0       0
   940 ;;Total ram usage:        1 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    1
   943 ;; This function calls:
   944 ;;		_LCD_WriteData
   945 ;; This function is called by:
   946 ;;		_LCD_Init
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function _LCD_DisplayClear
   952  06DF                     _LCD_DisplayClear:	
   953                           
   954                           ;LCD.c: 66: RA4 = 0;
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
   958  06DF  0020               	movlb	0	; select bank0
   959  06E0  120C               	bcf	12,4	;volatile
   960                           
   961                           ;LCD.c: 67: LCD_WriteData(0x01);
   962  06E1  3001               	movlw	1
   963  06E2  3187  2755  3186   	fcall	_LCD_WriteData
   964                           
   965                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
   966  06E5  3015               	movlw	21
   967  06E6  00F3               	movwf	??_LCD_DisplayClear
   968  06E7  30C6               	movlw	198
   969  06E8                     u737:	
   970  06E8  0B89               	decfsz	9,f
   971  06E9  2EE8               	goto	u737
   972  06EA  0BF3               	decfsz	??_LCD_DisplayClear,f
   973  06EB  2EE8               	goto	u737
   974  06EC  3200               	nop2
   975  06ED  0008               	return
   976  06EE                     __end_of_LCD_DisplayClear:	
   977                           
   978                           	psect	text3
   979  0755                     __ptext3:	
   980 ;; *************** function _LCD_WriteData *****************
   981 ;; Defined at:
   982 ;;		line 15 in file "LCD.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  point           1    wreg     char 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  point           1    2[COMMON] char 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   996 ;;      Params:         0       0       0       0       0       0
   997 ;;      Locals:         1       0       0       0       0       0
   998 ;;      Temps:          2       0       0       0       0       0
   999 ;;      Totals:         3       0       0       0       0       0
  1000 ;;Total ram usage:        3 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_LCD_Init
  1006 ;;		_LCD_Put
  1007 ;;		_LCD_DisplayClear
  1008 ;;		_LCD_CursorHome
  1009 ;;		_LCD_CursorPosition
  1010 ;;		_LCD_CursorShift
  1011 ;;		_LCD_DispShift
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _LCD_WriteData
  1017  0755                     _LCD_WriteData:	
  1018                           
  1019                           ;incstack = 0
  1020                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  1021                           ;LCD_WriteData@point stored from wreg
  1022  0755  00F2               	movwf	LCD_WriteData@point
  1023                           
  1024                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  1025  0756  30D5               	movlw	213
  1026  0757                     u747:	
  1027  0757  0B89               	decfsz	9,f
  1028  0758  2F57               	goto	u747
  1029  0759  0000               	nop
  1030                           
  1031                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  1032  075A  0872               	movf	LCD_WriteData@point,w
  1033  075B  00F0               	movwf	??_LCD_WriteData
  1034  075C  3004               	movlw	4
  1035  075D                     u15:	
  1036  075D  1003               	clrc
  1037  075E  1BF0               	btfsc	??_LCD_WriteData,7
  1038  075F  1403               	setc
  1039  0760  0CF0               	rrf	??_LCD_WriteData,f
  1040  0761  0B89               	decfsz	9,f
  1041  0762  2F5D               	goto	u15
  1042  0763  3003               	movlw	3
  1043  0764  0570               	andwf	??_LCD_WriteData,w
  1044  0765  00F1               	movwf	??_LCD_WriteData+1
  1045  0766  0E72               	swapf	LCD_WriteData@point,w
  1046  0767  390F               	andlw	15
  1047  0768  1989               	btfsc	9,3
  1048  0769  38F0               	iorlw	240
  1049  076A  390C               	andlw	12
  1050  076B  0709               	addwf	9,w
  1051  076C  0471               	iorwf	??_LCD_WriteData+1,w
  1052  076D  0020               	movlb	0	; select bank0
  1053  076E  008D               	movwf	13	;volatile
  1054                           
  1055                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1056  076F  158C               	bsf	12,3	;volatile
  1057  0770  3200               	nop2	;2 cycle nop
  1058  0771  3200               	nop2	;2 cycle nop
  1059  0772  3200               	nop2	;2 cycle nop
  1060  0773  3200               	nop2	;2 cycle nop
  1061  0774  0020               	movlb	0	; select bank0
  1062  0775  118C               	bcf	12,3	;volatile
  1063  0776  3200               	nop2	;2 cycle nop
  1064  0777  3200               	nop2	;2 cycle nop
  1065  0778  3200               	nop2	;2 cycle nop
  1066  0779  3200               	nop2	;2 cycle nop
  1067                           
  1068                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  1069  077A  3003               	movlw	3
  1070  077B  0572               	andwf	LCD_WriteData@point,w
  1071  077C  00F0               	movwf	??_LCD_WriteData
  1072  077D  0872               	movf	LCD_WriteData@point,w
  1073  077E  390C               	andlw	12
  1074  077F  0709               	addwf	9,w
  1075  0780  0470               	iorwf	??_LCD_WriteData,w
  1076  0781  0020               	movlb	0	; select bank0
  1077  0782  008D               	movwf	13	;volatile
  1078                           
  1079                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1080  0783  158C               	bsf	12,3	;volatile
  1081  0784  3200               	nop2	;2 cycle nop
  1082  0785  3200               	nop2	;2 cycle nop
  1083  0786  3200               	nop2	;2 cycle nop
  1084  0787  3200               	nop2	;2 cycle nop
  1085  0788  0020               	movlb	0	; select bank0
  1086  0789  118C               	bcf	12,3	;volatile
  1087  078A  3200               	nop2	;2 cycle nop
  1088  078B  3200               	nop2	;2 cycle nop
  1089  078C  3200               	nop2	;2 cycle nop
  1090  078D  3200               	nop2	;2 cycle nop
  1091  078E  0008               	return
  1092  078F                     __end_of_LCD_WriteData:	
  1093                           
  1094                           	psect	text4
  1095  0718                     __ptext4:	
  1096 ;; *************** function _Buzer_SetDuty *****************
  1097 ;; Defined at:
  1098 ;;		line 29 in file "Buzer.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  duty            2    0[COMMON] unsigned int 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1112 ;;      Params:         2       0       0       0       0       0
  1113 ;;      Locals:         1       0       0       0       0       0
  1114 ;;      Temps:          2       0       0       0       0       0
  1115 ;;      Totals:         5       0       0       0       0       0
  1116 ;;Total ram usage:        5 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _Buzer_SetDuty
  1127  0718                     _Buzer_SetDuty:	
  1128                           
  1129                           ;Buzer.c: 31: uint8_t CCP2CON_Pre = CCP2CON;
  1130                           
  1131                           ;incstack = 0
  1132                           ; Regs used in _Buzer_SetDuty: [wreg+status,2+status,0]
  1133  0718  0025               	movlb	5	; select bank5
  1134  0719  081A               	movf	26,w	;volatile
  1135  071A  00F2               	movwf	??_Buzer_SetDuty
  1136  071B  0872               	movf	??_Buzer_SetDuty,w
  1137  071C  00F4               	movwf	Buzer_SetDuty@CCP2CON_Pre
  1138                           
  1139                           ;Buzer.c: 32: CCPR2L = (duty>>2);
  1140  071D  0871               	movf	Buzer_SetDuty@duty+1,w
  1141  071E  00F3               	movwf	??_Buzer_SetDuty+1
  1142  071F  0870               	movf	Buzer_SetDuty@duty,w
  1143  0720  00F2               	movwf	??_Buzer_SetDuty
  1144  0721  36F3               	lsrf	??_Buzer_SetDuty+1,f
  1145  0722  0CF2               	rrf	??_Buzer_SetDuty,f
  1146  0723  36F3               	lsrf	??_Buzer_SetDuty+1,f
  1147  0724  0CF2               	rrf	??_Buzer_SetDuty,f
  1148  0725  0872               	movf	??_Buzer_SetDuty,w
  1149  0726  0098               	movwf	24	;volatile
  1150                           
  1151                           ;Buzer.c: 33: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  1152  0727  0870               	movf	Buzer_SetDuty@duty,w
  1153  0728  3903               	andlw	3
  1154  0729  00F2               	movwf	??_Buzer_SetDuty
  1155  072A  3003               	movlw	3
  1156  072B                     u685:	
  1157  072B  35F2               	lslf	??_Buzer_SetDuty,f
  1158  072C  3EFF               	addlw	-1
  1159  072D  1D03               	skipz
  1160  072E  2F2B               	goto	u685
  1161  072F  3572               	lslf	??_Buzer_SetDuty,w
  1162  0730  0474               	iorwf	Buzer_SetDuty@CCP2CON_Pre,w
  1163  0731  009A               	movwf	26	;volatile
  1164  0732  0008               	return
  1165  0733                     __end_of_Buzer_SetDuty:	
  1166                           
  1167                           	psect	text5
  1168  0733                     __ptext5:	
  1169 ;; *************** function _Buzer_Init *****************
  1170 ;; Defined at:
  1171 ;;		line 9 in file "Buzer.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, status,2, status,0
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1185 ;;      Params:         0       0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0       0
  1187 ;;      Temps:          1       0       0       0       0       0
  1188 ;;      Totals:         1       0       0       0       0       0
  1189 ;;Total ram usage:        1 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function _Buzer_Init
  1200  0733                     _Buzer_Init:	
  1201                           
  1202                           ;Buzer.c: 11: TRISA &= ~(0x01<<7);
  1203                           
  1204                           ;incstack = 0
  1205                           ; Regs used in _Buzer_Init: [wreg+status,2+status,0]
  1206  0733  307F               	movlw	127
  1207  0734  00F0               	movwf	??_Buzer_Init
  1208  0735  0870               	movf	??_Buzer_Init,w
  1209  0736  0021               	movlb	1	; select bank1
  1210  0737  058C               	andwf	12,f	;volatile
  1211                           
  1212                           ;Buzer.c: 12: ANSELA &= ~(0x01<<7);
  1213  0738  307F               	movlw	127
  1214  0739  00F0               	movwf	??_Buzer_Init
  1215  073A  0870               	movf	??_Buzer_Init,w
  1216  073B  0023               	movlb	3	; select bank3
  1217  073C  058C               	andwf	12,f	;volatile
  1218                           
  1219                           ;Buzer.c: 13: APFCON0 |= (0x01<<3);
  1220  073D  0022               	movlb	2	; select bank2
  1221  073E  159D               	bsf	29,3	;volatile
  1222                           
  1223                           ;Buzer.c: 15: T2CON |= (0x00<<3);
  1224  073F  0020               	movlb	0	; select bank0
  1225  0740  081C               	movf	28,w	;volatile
  1226                           
  1227                           ;Buzer.c: 16: T2CON |= (0x02<<0);
  1228  0741  149C               	bsf	28,1	;volatile
  1229                           
  1230                           ;Buzer.c: 17: T2CON |= (0x01<<2);
  1231  0742  151C               	bsf	28,2	;volatile
  1232                           
  1233                           ;Buzer.c: 19: TMR2 = 0x00;
  1234  0743  019A               	clrf	26	;volatile
  1235                           
  1236                           ;Buzer.c: 20: PR2 = 0xFF;
  1237  0744  30FF               	movlw	255
  1238  0745  009B               	movwf	27	;volatile
  1239                           
  1240                           ;Buzer.c: 22: CCP2CON &= ~(0x03<<6);
  1241  0746  303F               	movlw	63
  1242  0747  00F0               	movwf	??_Buzer_Init
  1243  0748  0870               	movf	??_Buzer_Init,w
  1244  0749  0025               	movlb	5	; select bank5
  1245  074A  059A               	andwf	26,f	;volatile
  1246                           
  1247                           ;Buzer.c: 23: CCP2CON |= (0x0C<<0);
  1248  074B  300C               	movlw	12
  1249  074C  00F0               	movwf	??_Buzer_Init
  1250  074D  0870               	movf	??_Buzer_Init,w
  1251  074E  049A               	iorwf	26,f	;volatile
  1252                           
  1253                           ;Buzer.c: 24: CCPTMRS &= ~(0x03<<2);
  1254  074F  30F3               	movlw	243
  1255  0750  00F0               	movwf	??_Buzer_Init
  1256  0751  0870               	movf	??_Buzer_Init,w
  1257  0752  059E               	andwf	30,f	;volatile
  1258                           
  1259                           ;Buzer.c: 26: CCPR2L = 0x00;
  1260  0753  0198               	clrf	24	;volatile
  1261  0754  0008               	return
  1262  0755                     __end_of_Buzer_Init:	
  1263                           
  1264                           	psect	text6
  1265  06EE                     __ptext6:	
  1266 ;; *************** function _Basic_Init *****************
  1267 ;; Defined at:
  1268 ;;		line 25 in file "main.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      char 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1282 ;;      Params:         0       0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0
  1285 ;;      Totals:         0       0       0       0       0       0
  1286 ;;Total ram usage:        0 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           
  1296                           ;psect for function _Basic_Init
  1297  06EE                     _Basic_Init:	
  1298                           
  1299                           ;main.c: 27: OSCCON = 0xF0;
  1300                           
  1301                           ;incstack = 0
  1302                           ; Regs used in _Basic_Init: [wreg+status,2]
  1303  06EE  30F0               	movlw	240
  1304  06EF  0021               	movlb	1	; select bank1
  1305  06F0  0099               	movwf	25	;volatile
  1306                           
  1307                           ;main.c: 31: TRISA = 0x07;
  1308  06F1  3007               	movlw	7
  1309  06F2  008C               	movwf	12	;volatile
  1310                           
  1311                           ;main.c: 32: ANSELA = 0x07;
  1312  06F3  3007               	movlw	7
  1313  06F4  0023               	movlb	3	; select bank3
  1314  06F5  008C               	movwf	12	;volatile
  1315                           
  1316                           ;main.c: 34: TRISB = 0x40;
  1317  06F6  3040               	movlw	64
  1318  06F7  0021               	movlb	1	; select bank1
  1319  06F8  008D               	movwf	13	;volatile
  1320                           
  1321                           ;main.c: 35: ANSELB = 0x00;
  1322  06F9  0023               	movlb	3	; select bank3
  1323  06FA  018D               	clrf	13	;volatile
  1324                           
  1325                           ;main.c: 37: APFCON0 = 0x08;
  1326  06FB  3008               	movlw	8
  1327  06FC  0022               	movlb	2	; select bank2
  1328  06FD  009D               	movwf	29	;volatile
  1329                           
  1330                           ;main.c: 38: APFCON1 = 0x00;
  1331  06FE  019E               	clrf	30	;volatile
  1332                           
  1333                           ;main.c: 40: PORTA = 0x00;
  1334  06FF  0020               	movlb	0	; select bank0
  1335  0700  018C               	clrf	12	;volatile
  1336                           
  1337                           ;main.c: 41: PORTB = 0x00;
  1338  0701  018D               	clrf	13	;volatile
  1339  0702  0008               	return
  1340  0703                     __end_of_Basic_Init:	
  1341                           ;main.c: 43: return 0;
  1342                           ;	Return value of _Basic_Init is never used
  1343                           
  1344  007E                     btemp	set	126	;btemp
  1345  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     251
                         _Basic_Init
                         _Buzer_Init
                      _Buzer_SetDuty
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     120
                                              4 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      60
                                              3 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        3     3      0      60
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Buzer_SetDuty                                        5     3      2     131
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Buzer_Init                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzer_Init
   _Buzer_SetDuty
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Mar  7 12:47:21 2017

              __CFG_CP$OFF 0000                         l33 0717                         u15 075D  
                      _RA3 0063                        _RA4 0064                        _PR2 001B  
             __CFG_CPD$OFF 0000                        u707 07AF                        u717 07C2  
                      u727 07D6                        u737 06E8                        u747 0757  
                      u685 072B                        u697 0797               __CFG_BORV$LO 0000  
                      wreg 0009                 _Basic_Init 06EE               __CFG_LVP$OFF 0000  
                     STR_1 081A                       STR_2 0800                       STR_3 080E  
                     STR_4 0814                       STR_5 0807                       _TMR2 001A  
             __CFG_WRT$OFF 0000                       _main 0703                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0002              __CFG_IESO$OFF 0000  
            _LCD_WriteData 0755              __CFG_MCLRE$ON 0000   __end_of_LCD_DisplayClear 06EE  
         __end_of_LCD_Init 07F8              __CFG_PLLEN$ON 0000                      ?_main 0070  
            __CFG_WDTE$OFF 0000                      _T2CON 001C                      _PORTA 000C  
                    _PORTB 000D                      _TRISA 008C                      _TRISB 008D  
            _Buzer_SetDuty 0718              __CFG_PWRTE$ON 0000             __CFG_FCMEN$OFF 0000  
                    wtemp0 007E             ?_LCD_WriteData 0070            __initialization 07F8  
               _Buzer_Init 0733               __end_of_main 0718                     ??_main 0076  
           ?_Buzer_SetDuty 0070                ?_Basic_Init 0070                     _CCPR2L 0298  
                   _ANSELA 018C                     _ANSELB 018D                     _OSCCON 0099  
                   _outptr 007A    __end_of__initialization 07FD                  ?_LCD_Init 0070  
          ??_LCD_WriteData 0070             __pcstackCOMMON 0070                ?_Buzer_Init 0070  
      __size_of_Basic_Init 0015            ??_Buzer_SetDuty 0072                 ??_LCD_Init 0074  
               __pmaintext 0703          Buzer_SetDuty@duty 0070                    _CCP2CON 029A  
        ?_LCD_DisplayClear 0070                    _APFCON0 011D                    _APFCON1 011E  
                  _CCPTMRS 029E         ??_LCD_DisplayClear 0073                    _LCD_Put 0000  
      __size_of_Buzer_Init 0022            __CFG_STVREN$OFF 0000                    __ptext1 078F  
                  __ptext2 06DF                    __ptext3 0755                    __ptext4 0718  
                  __ptext5 0733                    __ptext6 06EE               ??_Basic_Init 0070  
     end_of_initialization 07FD         __end_of_Basic_Init 0703               __pstringtext 0800  
         __CFG_FOSC$INTOSC 0000          __size_of_LCD_Init 0069               ??_Buzer_Init 0070  
      start_initialization 07F8         __end_of_Buzer_Init 0755      __end_of_LCD_WriteData 078F  
    __end_of_Buzer_SetDuty 0733                __pbssCOMMON 0076                  ___latbits 0001  
__size_of_LCD_DisplayClear 000F                   _LCD_Init 078F                  _xfunc_out 0078  
       LCD_WriteData@point 0072           _LCD_DisplayClear 06DF              __size_of_main 0015  
 Buzer_SetDuty@CCP2CON_Pre 0074                   _xfunc_in 0076          __CFG_CLKOUTEN$OFF 0000  
   __size_of_LCD_WriteData 003A     __size_of_Buzer_SetDuty 001B  
