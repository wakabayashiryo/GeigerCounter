

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May 23 12:32:46 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.41
    19                           ; Generated 25/01/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F1827 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  0091                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0094                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0097                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011D                     	;# 
   112  011E                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0194                     	;# 
   122  0195                     	;# 
   123  0196                     	;# 
   124  0199                     	;# 
   125  019A                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019D                     	;# 
   133  019E                     	;# 
   134  019F                     	;# 
   135  020C                     	;# 
   136  020D                     	;# 
   137  0211                     	;# 
   138  0211                     	;# 
   139  0212                     	;# 
   140  0212                     	;# 
   141  0213                     	;# 
   142  0213                     	;# 
   143  0214                     	;# 
   144  0214                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0215                     	;# 
   148  0216                     	;# 
   149  0216                     	;# 
   150  0217                     	;# 
   151  0217                     	;# 
   152  0219                     	;# 
   153  021A                     	;# 
   154  021B                     	;# 
   155  021C                     	;# 
   156  021D                     	;# 
   157  021E                     	;# 
   158  021F                     	;# 
   159  0291                     	;# 
   160  0291                     	;# 
   161  0292                     	;# 
   162  0293                     	;# 
   163  0294                     	;# 
   164  0295                     	;# 
   165  0295                     	;# 
   166  0296                     	;# 
   167  0298                     	;# 
   168  0298                     	;# 
   169  0299                     	;# 
   170  029A                     	;# 
   171  029B                     	;# 
   172  029C                     	;# 
   173  029C                     	;# 
   174  029D                     	;# 
   175  029E                     	;# 
   176  029E                     	;# 
   177  0311                     	;# 
   178  0311                     	;# 
   179  0312                     	;# 
   180  0313                     	;# 
   181  0318                     	;# 
   182  0318                     	;# 
   183  0319                     	;# 
   184  031A                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  039A                     	;# 
   189  039C                     	;# 
   190  039D                     	;# 
   191  039E                     	;# 
   192  039F                     	;# 
   193  0415                     	;# 
   194  0416                     	;# 
   195  0417                     	;# 
   196  041C                     	;# 
   197  041D                     	;# 
   198  041E                     	;# 
   199  0FE4                     	;# 
   200  0FE5                     	;# 
   201  0FE6                     	;# 
   202  0FE7                     	;# 
   203  0FE8                     	;# 
   204  0FE9                     	;# 
   205  0FEA                     	;# 
   206  0FEB                     	;# 
   207  0FED                     	;# 
   208  0FEE                     	;# 
   209  0FEF                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  008C                     	;# 
   240  008D                     	;# 
   241  0091                     	;# 
   242  0092                     	;# 
   243  0093                     	;# 
   244  0094                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009B                     	;# 
   252  009B                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  0111                     	;# 
   259  0112                     	;# 
   260  0113                     	;# 
   261  0114                     	;# 
   262  0115                     	;# 
   263  0116                     	;# 
   264  0117                     	;# 
   265  0118                     	;# 
   266  0119                     	;# 
   267  011A                     	;# 
   268  011B                     	;# 
   269  011D                     	;# 
   270  011E                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0194                     	;# 
   280  0195                     	;# 
   281  0196                     	;# 
   282  0199                     	;# 
   283  019A                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019C                     	;# 
   289  019C                     	;# 
   290  019D                     	;# 
   291  019E                     	;# 
   292  019F                     	;# 
   293  020C                     	;# 
   294  020D                     	;# 
   295  0211                     	;# 
   296  0211                     	;# 
   297  0212                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0213                     	;# 
   301  0214                     	;# 
   302  0214                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0216                     	;# 
   307  0216                     	;# 
   308  0217                     	;# 
   309  0217                     	;# 
   310  0219                     	;# 
   311  021A                     	;# 
   312  021B                     	;# 
   313  021C                     	;# 
   314  021D                     	;# 
   315  021E                     	;# 
   316  021F                     	;# 
   317  0291                     	;# 
   318  0291                     	;# 
   319  0292                     	;# 
   320  0293                     	;# 
   321  0294                     	;# 
   322  0295                     	;# 
   323  0295                     	;# 
   324  0296                     	;# 
   325  0298                     	;# 
   326  0298                     	;# 
   327  0299                     	;# 
   328  029A                     	;# 
   329  029B                     	;# 
   330  029C                     	;# 
   331  029C                     	;# 
   332  029D                     	;# 
   333  029E                     	;# 
   334  029E                     	;# 
   335  0311                     	;# 
   336  0311                     	;# 
   337  0312                     	;# 
   338  0313                     	;# 
   339  0318                     	;# 
   340  0318                     	;# 
   341  0319                     	;# 
   342  031A                     	;# 
   343  0394                     	;# 
   344  0395                     	;# 
   345  0396                     	;# 
   346  039A                     	;# 
   347  039C                     	;# 
   348  039D                     	;# 
   349  039E                     	;# 
   350  039F                     	;# 
   351  0415                     	;# 
   352  0416                     	;# 
   353  0417                     	;# 
   354  041C                     	;# 
   355  041D                     	;# 
   356  041E                     	;# 
   357  0FE4                     	;# 
   358  0FE5                     	;# 
   359  0FE6                     	;# 
   360  0FE7                     	;# 
   361  0FE8                     	;# 
   362  0FE9                     	;# 
   363  0FEA                     	;# 
   364  0FEB                     	;# 
   365  0FED                     	;# 
   366  0FEE                     	;# 
   367  0FEF                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  0011                     	;# 
   383  0012                     	;# 
   384  0013                     	;# 
   385  0014                     	;# 
   386  0015                     	;# 
   387  0016                     	;# 
   388  0016                     	;# 
   389  0017                     	;# 
   390  0018                     	;# 
   391  0019                     	;# 
   392  001A                     	;# 
   393  001B                     	;# 
   394  001C                     	;# 
   395  001E                     	;# 
   396  001F                     	;# 
   397  008C                     	;# 
   398  008D                     	;# 
   399  0091                     	;# 
   400  0092                     	;# 
   401  0093                     	;# 
   402  0094                     	;# 
   403  0095                     	;# 
   404  0096                     	;# 
   405  0097                     	;# 
   406  0098                     	;# 
   407  0099                     	;# 
   408  009A                     	;# 
   409  009B                     	;# 
   410  009B                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  010C                     	;# 
   415  010D                     	;# 
   416  0111                     	;# 
   417  0112                     	;# 
   418  0113                     	;# 
   419  0114                     	;# 
   420  0115                     	;# 
   421  0116                     	;# 
   422  0117                     	;# 
   423  0118                     	;# 
   424  0119                     	;# 
   425  011A                     	;# 
   426  011B                     	;# 
   427  011D                     	;# 
   428  011E                     	;# 
   429  018C                     	;# 
   430  018D                     	;# 
   431  0191                     	;# 
   432  0191                     	;# 
   433  0192                     	;# 
   434  0193                     	;# 
   435  0193                     	;# 
   436  0193                     	;# 
   437  0194                     	;# 
   438  0195                     	;# 
   439  0196                     	;# 
   440  0199                     	;# 
   441  019A                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019B                     	;# 
   446  019C                     	;# 
   447  019C                     	;# 
   448  019D                     	;# 
   449  019E                     	;# 
   450  019F                     	;# 
   451  020C                     	;# 
   452  020D                     	;# 
   453  0211                     	;# 
   454  0211                     	;# 
   455  0212                     	;# 
   456  0212                     	;# 
   457  0213                     	;# 
   458  0213                     	;# 
   459  0214                     	;# 
   460  0214                     	;# 
   461  0215                     	;# 
   462  0215                     	;# 
   463  0215                     	;# 
   464  0216                     	;# 
   465  0216                     	;# 
   466  0217                     	;# 
   467  0217                     	;# 
   468  0219                     	;# 
   469  021A                     	;# 
   470  021B                     	;# 
   471  021C                     	;# 
   472  021D                     	;# 
   473  021E                     	;# 
   474  021F                     	;# 
   475  0291                     	;# 
   476  0291                     	;# 
   477  0292                     	;# 
   478  0293                     	;# 
   479  0294                     	;# 
   480  0295                     	;# 
   481  0295                     	;# 
   482  0296                     	;# 
   483  0298                     	;# 
   484  0298                     	;# 
   485  0299                     	;# 
   486  029A                     	;# 
   487  029B                     	;# 
   488  029C                     	;# 
   489  029C                     	;# 
   490  029D                     	;# 
   491  029E                     	;# 
   492  029E                     	;# 
   493  0311                     	;# 
   494  0311                     	;# 
   495  0312                     	;# 
   496  0313                     	;# 
   497  0318                     	;# 
   498  0318                     	;# 
   499  0319                     	;# 
   500  031A                     	;# 
   501  0394                     	;# 
   502  0395                     	;# 
   503  0396                     	;# 
   504  039A                     	;# 
   505  039C                     	;# 
   506  039D                     	;# 
   507  039E                     	;# 
   508  039F                     	;# 
   509  0415                     	;# 
   510  0416                     	;# 
   511  0417                     	;# 
   512  041C                     	;# 
   513  041D                     	;# 
   514  041E                     	;# 
   515  0FE4                     	;# 
   516  0FE5                     	;# 
   517  0FE6                     	;# 
   518  0FE7                     	;# 
   519  0FE8                     	;# 
   520  0FE9                     	;# 
   521  0FEA                     	;# 
   522  0FEB                     	;# 
   523  0FED                     	;# 
   524  0FEE                     	;# 
   525  0FEF                     	;# 
   526                           
   527 ;; Function _LCD_Put is unused but had its address taken
   528  000C                     _PORTA	set	12
   529  000D                     _PORTB	set	13
   530  001B                     _PR2	set	27
   531  001A                     _TMR2	set	26
   532  001C                     _T2CON	set	28
   533  0064                     _RA4	set	100
   534  0063                     _RA3	set	99
   535  008D                     _TRISB	set	141
   536  0099                     _OSCCON	set	153
   537  008C                     _TRISA	set	140
   538  011E                     _APFCON1	set	286
   539  011D                     _APFCON0	set	285
   540  018D                     _ANSELB	set	397
   541  018C                     _ANSELA	set	396
   542  0298                     _CCPR2L	set	664
   543  029E                     _CCPTMRS	set	670
   544  029A                     _CCP2CON	set	666
   545                           
   546                           	psect	stringtext
   547  0800                     __pstringtext:	
   548  0800                     STR_2:	
   549  0800  3425               	retlw	37	;'%'
   550  0801  3430               	retlw	48	;'0'
   551  0802  3438               	retlw	56	;'8'
   552  0803  346C               	retlw	108	;'l'
   553  0804  3458               	retlw	88	;'X'
   554  0805  3420               	retlw	32	;' '
   555  0806  3400               	retlw	0
   556  0807                     STR_5:	
   557  0807  3420               	retlw	32	;' '
   558  0808  3425               	retlw	37	;'%'
   559  0809  3430               	retlw	48	;'0'
   560  080A  3438               	retlw	56	;'8'
   561  080B  344C               	retlw	76	;'L'
   562  080C  3458               	retlw	88	;'X'
   563  080D  3400               	retlw	0
   564  080E                     STR_3:	
   565  080E  3420               	retlw	32	;' '
   566  080F  3425               	retlw	37	;'%'
   567  0810  3430               	retlw	48	;'0'
   568  0811  3432               	retlw	50	;'2'
   569  0812  3458               	retlw	88	;'X'
   570  0813  3400               	retlw	0
   571  0814                     STR_4:	
   572  0814  3420               	retlw	32	;' '
   573  0815  3425               	retlw	37	;'%'
   574  0816  3430               	retlw	48	;'0'
   575  0817  3434               	retlw	52	;'4'
   576  0818  3458               	retlw	88	;'X'
   577  0819  3400               	retlw	0
   578  081A                     STR_1:	
   579  081A  340D               	retlw	13
   580  081B  3400               	retlw	0
   581                           
   582                           ; #config settings
   583  0000                     
   584                           	psect	cinit
   585  07F6                     start_initialization:	
   586  07F6                     __initialization:	
   587                           
   588                           ; Clear objects allocated to COMMON
   589  07F6  01F8               	clrf	__pbssCOMMON& (0+127)
   590  07F7  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   591  07F8  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   592  07F9  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   593  07FA  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   594                           
   595                           ; Clear objects allocated to BANK0
   596  07FB  01A0               	clrf	__pbssBANK0& (0+127)
   597  07FC  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   598  07FD                     end_of_initialization:	
   599                           ;End of C runtime variable initialization code
   600                           
   601  07FD                     __end_of__initialization:	
   602  07FD  0020               	movlb	0
   603  07FE  3187  2F20         	ljmp	_main	;jump to C main() function
   604                           
   605                           	psect	bssCOMMON
   606  0078                     __pbssCOMMON:	
   607  0078                     _xfunc_out:	
   608  0078                     	ds	2
   609  007A                     _count:	
   610  007A                     	ds	2
   611  007C                     _outptr:	
   612  007C                     	ds	1
   613                           
   614                           	psect	bssBANK0
   615  0020                     __pbssBANK0:	
   616  0020                     _xfunc_in:	
   617  0020                     	ds	2
   618                           
   619                           	psect	cstackCOMMON
   620  0070                     __pcstackCOMMON:	
   621  0070                     ?_LCD_DisplayClear:	
   622  0070                     ?_Basic_Init:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ??_Basic_Init:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_Buzzer_Init:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ??_Buzzer_Init:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_Buzzer_SetDuty:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_LCD_WriteData:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ??_LCD_WriteData:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_LCD_Init:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_main:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     Buzzer_SetDuty@duty:	
   650                           ; 1 bytes @ 0x0
   651                           
   652                           
   653                           ; 2 bytes @ 0x0
   654  0070                     	ds	2
   655  0072                     ??_Buzzer_SetDuty:	
   656  0072                     LCD_WriteData@point:	
   657                           ; 1 bytes @ 0x2
   658                           
   659                           
   660                           ; 1 bytes @ 0x2
   661  0072                     	ds	1
   662  0073                     ??_LCD_DisplayClear:	
   663                           
   664                           ; 1 bytes @ 0x3
   665  0073                     	ds	1
   666  0074                     ??_LCD_Init:	
   667  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
   668                           ; 1 bytes @ 0x4
   669                           
   670                           
   671                           ; 1 bytes @ 0x4
   672  0074                     	ds	2
   673  0076                     ??_main:	
   674                           
   675                           ; 1 bytes @ 0x6
   676  0076                     	ds	2
   677                           
   678                           	psect	maintext
   679  0720                     __pmaintext:	
   680 ;;
   681 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   682 ;;
   683 ;; *************** function _main *****************
   684 ;; Defined at:
   685 ;;		line 10 in file "main.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      char 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : B1F/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   699 ;;      Params:         0       0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0       0
   701 ;;      Temps:          2       0       0       0       0       0
   702 ;;      Totals:         2       0       0       0       0       0
   703 ;;Total ram usage:        2 bytes
   704 ;; Hardware stack levels required when called:    3
   705 ;; This function calls:
   706 ;;		_Basic_Init
   707 ;;		_Buzzer_Init
   708 ;;		_Buzzer_SetDuty
   709 ;;		_LCD_Init
   710 ;; This function is called by:
   711 ;;		Startup code after reset
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _main
   717  0720                     _main:	
   718                           
   719                           ;main.c: 12: Basic_Init();
   720                           
   721                           ;incstack = 0
   722                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   723  0720  3186  26CD  3187   	fcall	_Basic_Init
   724                           
   725                           ;main.c: 13: Buzzer_Init();
   726  0723  3186  26FE  3187   	fcall	_Buzzer_Init
   727                           
   728                           ;main.c: 15: LCD_Init();
   729  0726  3187  278D  3187   	fcall	_LCD_Init
   730                           
   731                           ;main.c: 16: xfunc_out = (void(*)(unsigned char))(LCD_Put);
   732  0729  3000               	movlw	0
   733  072A  00F8               	movwf	_xfunc_out
   734  072B  3000               	movlw	0
   735  072C  00F9               	movwf	_xfunc_out+1
   736  072D                     l1678:	
   737                           ;main.c: 17: while(1)
   738                           
   739                           
   740                           ;main.c: 18: {
   741                           ;main.c: 19: Buzzer_SetDuty(0x01FF);
   742  072D  30FF               	movlw	255
   743  072E  00F0               	movwf	Buzzer_SetDuty@duty
   744  072F  3001               	movlw	1
   745  0730  00F1               	movwf	Buzzer_SetDuty@duty+1
   746  0731  3186  26E2  3187   	fcall	_Buzzer_SetDuty
   747                           
   748                           ;main.c: 20: _delay((unsigned long)((1000)*(32000000/4000.0)));
   749  0734  3029               	movlw	41
   750  0735  00F7               	movwf	??_main+1
   751  0736  3096               	movlw	150
   752  0737  00F6               	movwf	??_main
   753  0738  307F               	movlw	127
   754  0739                     u1247:	
   755  0739  0B89               	decfsz	9,f
   756  073A  2F39               	goto	u1247
   757  073B  0BF6               	decfsz	??_main,f
   758  073C  2F39               	goto	u1247
   759  073D  0BF7               	decfsz	??_main+1,f
   760  073E  2F39               	goto	u1247
   761  073F  0000               	nop
   762                           
   763                           ;main.c: 21: Buzzer_SetDuty(0x0000);
   764  0740  3000               	movlw	0
   765  0741  00F0               	movwf	Buzzer_SetDuty@duty
   766  0742  00F1               	movwf	Buzzer_SetDuty@duty+1
   767  0743  3186  26E2  3187   	fcall	_Buzzer_SetDuty
   768                           
   769                           ;main.c: 22: _delay((unsigned long)((1000)*(32000000/4000.0)));
   770  0746  3029               	movlw	41
   771  0747  00F7               	movwf	??_main+1
   772  0748  3096               	movlw	150
   773  0749  00F6               	movwf	??_main
   774  074A  307F               	movlw	127
   775  074B                     u1257:	
   776  074B  0B89               	decfsz	9,f
   777  074C  2F4B               	goto	u1257
   778  074D  0BF6               	decfsz	??_main,f
   779  074E  2F4B               	goto	u1257
   780  074F  0BF7               	decfsz	??_main+1,f
   781  0750  2F4B               	goto	u1257
   782  0751  0000               	nop
   783  0752  2F2D               	goto	l1678
   784  0753                     __end_of_main:	
   785                           ;main.c: 23: }
   786                           ;main.c: 24: return 0;
   787                           ;	Return value of _main is never used
   788                           
   789                           
   790                           	psect	text1
   791  078D                     __ptext1:	
   792 ;; *************** function _LCD_Init *****************
   793 ;; Defined at:
   794 ;;		line 28 in file "LCD.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0, pclath, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   808 ;;      Params:         0       0       0       0       0       0
   809 ;;      Locals:         0       0       0       0       0       0
   810 ;;      Temps:          2       0       0       0       0       0
   811 ;;      Totals:         2       0       0       0       0       0
   812 ;;Total ram usage:        2 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    2
   815 ;; This function calls:
   816 ;;		_LCD_DisplayClear
   817 ;;		_LCD_WriteData
   818 ;; This function is called by:
   819 ;;		_main
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _LCD_Init
   825  078D                     _LCD_Init:	
   826                           
   827                           ;LCD.c: 30: RA4 = 0;
   828                           
   829                           ;incstack = 0
   830                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   831  078D  0020               	movlb	0	; select bank0
   832  078E  120C               	bcf	12,4	;volatile
   833                           
   834                           ;LCD.c: 31: RA3 = 0;
   835  078F  118C               	bcf	12,3	;volatile
   836                           
   837                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
   838  0790  3002               	movlw	2
   839  0791  00F5               	movwf	??_LCD_Init+1
   840  0792  3038               	movlw	56
   841  0793  00F4               	movwf	??_LCD_Init
   842  0794  30AD               	movlw	173
   843  0795                     u1267:	
   844  0795  0B89               	decfsz	9,f
   845  0796  2F95               	goto	u1267
   846  0797  0BF4               	decfsz	??_LCD_Init,f
   847  0798  2F95               	goto	u1267
   848  0799  0BF5               	decfsz	??_LCD_Init+1,f
   849  079A  2F95               	goto	u1267
   850  079B  0000               	nop
   851                           
   852                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
   853  079C  3003               	movlw	3
   854  079D  0020               	movlb	0	; select bank0
   855  079E  008D               	movwf	13	;volatile
   856                           
   857                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   858  079F  158C               	bsf	12,3	;volatile
   859  07A0  3200               	nop2	;2 cycle nop
   860  07A1  3200               	nop2	;2 cycle nop
   861  07A2  3200               	nop2	;2 cycle nop
   862  07A3  3200               	nop2	;2 cycle nop
   863  07A4  0020               	movlb	0	; select bank0
   864  07A5  118C               	bcf	12,3	;volatile
   865  07A6  3200               	nop2	;2 cycle nop
   866  07A7  3200               	nop2	;2 cycle nop
   867  07A8  3200               	nop2	;2 cycle nop
   868  07A9  3200               	nop2	;2 cycle nop
   869                           
   870                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
   871  07AA  3034               	movlw	52
   872  07AB  00F4               	movwf	??_LCD_Init
   873  07AC  30F2               	movlw	242
   874  07AD                     u1277:	
   875  07AD  0B89               	decfsz	9,f
   876  07AE  2FAD               	goto	u1277
   877  07AF  0BF4               	decfsz	??_LCD_Init,f
   878  07B0  2FAD               	goto	u1277
   879                           
   880                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   881  07B1  0020               	movlb	0	; select bank0
   882  07B2  158C               	bsf	12,3	;volatile
   883  07B3  3200               	nop2	;2 cycle nop
   884  07B4  3200               	nop2	;2 cycle nop
   885  07B5  3200               	nop2	;2 cycle nop
   886  07B6  3200               	nop2	;2 cycle nop
   887  07B7  0020               	movlb	0	; select bank0
   888  07B8  118C               	bcf	12,3	;volatile
   889  07B9  3200               	nop2	;2 cycle nop
   890  07BA  3200               	nop2	;2 cycle nop
   891  07BB  3200               	nop2	;2 cycle nop
   892  07BC  3200               	nop2	;2 cycle nop
   893                           
   894                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
   895  07BD  3005               	movlw	5
   896  07BE  00F4               	movwf	??_LCD_Init
   897  07BF  3026               	movlw	38
   898  07C0                     u1287:	
   899  07C0  0B89               	decfsz	9,f
   900  07C1  2FC0               	goto	u1287
   901  07C2  0BF4               	decfsz	??_LCD_Init,f
   902  07C3  2FC0               	goto	u1287
   903  07C4  3200               	nop2
   904                           
   905                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   906  07C5  0020               	movlb	0	; select bank0
   907  07C6  158C               	bsf	12,3	;volatile
   908  07C7  3200               	nop2	;2 cycle nop
   909  07C8  3200               	nop2	;2 cycle nop
   910  07C9  3200               	nop2	;2 cycle nop
   911  07CA  3200               	nop2	;2 cycle nop
   912  07CB  0020               	movlb	0	; select bank0
   913  07CC  118C               	bcf	12,3	;volatile
   914  07CD  3200               	nop2	;2 cycle nop
   915  07CE  3200               	nop2	;2 cycle nop
   916  07CF  3200               	nop2	;2 cycle nop
   917  07D0  3200               	nop2	;2 cycle nop
   918                           
   919                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
   920  07D1  3005               	movlw	5
   921  07D2  00F4               	movwf	??_LCD_Init
   922  07D3  3026               	movlw	38
   923  07D4                     u1297:	
   924  07D4  0B89               	decfsz	9,f
   925  07D5  2FD4               	goto	u1297
   926  07D6  0BF4               	decfsz	??_LCD_Init,f
   927  07D7  2FD4               	goto	u1297
   928  07D8  3200               	nop2
   929                           
   930                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
   931  07D9  3002               	movlw	2
   932  07DA  0020               	movlb	0	; select bank0
   933  07DB  008D               	movwf	13	;volatile
   934                           
   935                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
   936  07DC  158C               	bsf	12,3	;volatile
   937  07DD  3200               	nop2	;2 cycle nop
   938  07DE  3200               	nop2	;2 cycle nop
   939  07DF  3200               	nop2	;2 cycle nop
   940  07E0  3200               	nop2	;2 cycle nop
   941  07E1  0020               	movlb	0	; select bank0
   942  07E2  118C               	bcf	12,3	;volatile
   943  07E3  3200               	nop2	;2 cycle nop
   944  07E4  3200               	nop2	;2 cycle nop
   945  07E5  3200               	nop2	;2 cycle nop
   946  07E6  3200               	nop2	;2 cycle nop
   947                           
   948                           ;LCD.c: 44: LCD_WriteData(0x28);
   949  07E7  3028               	movlw	40
   950  07E8  3187  2753  3187   	fcall	_LCD_WriteData
   951                           
   952                           ;LCD.c: 45: LCD_WriteData(0x0c);
   953  07EB  300C               	movlw	12
   954  07EC  3187  2753  3187   	fcall	_LCD_WriteData
   955                           
   956                           ;LCD.c: 46: LCD_DisplayClear();
   957  07EF  3186  26BE  3187   	fcall	_LCD_DisplayClear
   958                           
   959                           ;LCD.c: 47: LCD_WriteData(0x06);
   960  07F2  3006               	movlw	6
   961  07F3  3187  2753         	fcall	_LCD_WriteData
   962  07F5  0008               	return
   963  07F6                     __end_of_LCD_Init:	
   964                           
   965                           	psect	text2
   966  06BE                     __ptext2:	
   967 ;; *************** function _LCD_DisplayClear *****************
   968 ;; Defined at:
   969 ;;		line 64 in file "LCD.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, status,2, status,0, pclath, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   983 ;;      Params:         0       0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0
   985 ;;      Temps:          1       0       0       0       0       0
   986 ;;      Totals:         1       0       0       0       0       0
   987 ;;Total ram usage:        1 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    1
   990 ;; This function calls:
   991 ;;		_LCD_WriteData
   992 ;; This function is called by:
   993 ;;		_LCD_Init
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function _LCD_DisplayClear
   999  06BE                     _LCD_DisplayClear:	
  1000                           
  1001                           ;LCD.c: 66: RA4 = 0;
  1002                           
  1003                           ;incstack = 0
  1004                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  1005  06BE  0020               	movlb	0	; select bank0
  1006  06BF  120C               	bcf	12,4	;volatile
  1007                           
  1008                           ;LCD.c: 67: LCD_WriteData(0x01);
  1009  06C0  3001               	movlw	1
  1010  06C1  3187  2753  3186   	fcall	_LCD_WriteData
  1011                           
  1012                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  1013  06C4  3015               	movlw	21
  1014  06C5  00F3               	movwf	??_LCD_DisplayClear
  1015  06C6  30C6               	movlw	198
  1016  06C7                     u1307:	
  1017  06C7  0B89               	decfsz	9,f
  1018  06C8  2EC7               	goto	u1307
  1019  06C9  0BF3               	decfsz	??_LCD_DisplayClear,f
  1020  06CA  2EC7               	goto	u1307
  1021  06CB  3200               	nop2
  1022  06CC  0008               	return
  1023  06CD                     __end_of_LCD_DisplayClear:	
  1024                           
  1025                           	psect	text3
  1026  0753                     __ptext3:	
  1027 ;; *************** function _LCD_WriteData *****************
  1028 ;; Defined at:
  1029 ;;		line 15 in file "LCD.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  point           1    wreg     char 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  point           1    2[COMMON] char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1043 ;;      Params:         0       0       0       0       0       0
  1044 ;;      Locals:         1       0       0       0       0       0
  1045 ;;      Temps:          2       0       0       0       0       0
  1046 ;;      Totals:         3       0       0       0       0       0
  1047 ;;Total ram usage:        3 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_LCD_Init
  1053 ;;		_LCD_DisplayClear
  1054 ;;		_LCD_Put
  1055 ;;		_LCD_CursorHome
  1056 ;;		_LCD_CursorPosition
  1057 ;;		_LCD_CursorShift
  1058 ;;		_LCD_DispShift
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _LCD_WriteData
  1064  0753                     _LCD_WriteData:	
  1065                           
  1066                           ;incstack = 0
  1067                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  1068                           ;LCD_WriteData@point stored from wreg
  1069  0753  00F2               	movwf	LCD_WriteData@point
  1070                           
  1071                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  1072  0754  30D5               	movlw	213
  1073  0755                     u1317:	
  1074  0755  0B89               	decfsz	9,f
  1075  0756  2F55               	goto	u1317
  1076  0757  0000               	nop
  1077                           
  1078                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  1079  0758  0872               	movf	LCD_WriteData@point,w
  1080  0759  00F0               	movwf	??_LCD_WriteData
  1081  075A  3004               	movlw	4
  1082  075B                     u705:	
  1083  075B  1003               	clrc
  1084  075C  1BF0               	btfsc	??_LCD_WriteData,7
  1085  075D  1403               	setc
  1086  075E  0CF0               	rrf	??_LCD_WriteData,f
  1087  075F  0B89               	decfsz	9,f
  1088  0760  2F5B               	goto	u705
  1089  0761  3003               	movlw	3
  1090  0762  0570               	andwf	??_LCD_WriteData,w
  1091  0763  00F1               	movwf	??_LCD_WriteData+1
  1092  0764  0E72               	swapf	LCD_WriteData@point,w
  1093  0765  390F               	andlw	15
  1094  0766  1989               	btfsc	9,3
  1095  0767  38F0               	iorlw	240
  1096  0768  390C               	andlw	12
  1097  0769  0709               	addwf	9,w
  1098  076A  0471               	iorwf	??_LCD_WriteData+1,w
  1099  076B  0020               	movlb	0	; select bank0
  1100  076C  008D               	movwf	13	;volatile
  1101                           
  1102                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1103  076D  158C               	bsf	12,3	;volatile
  1104  076E  3200               	nop2	;2 cycle nop
  1105  076F  3200               	nop2	;2 cycle nop
  1106  0770  3200               	nop2	;2 cycle nop
  1107  0771  3200               	nop2	;2 cycle nop
  1108  0772  0020               	movlb	0	; select bank0
  1109  0773  118C               	bcf	12,3	;volatile
  1110  0774  3200               	nop2	;2 cycle nop
  1111  0775  3200               	nop2	;2 cycle nop
  1112  0776  3200               	nop2	;2 cycle nop
  1113  0777  3200               	nop2	;2 cycle nop
  1114                           
  1115                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  1116  0778  3003               	movlw	3
  1117  0779  0572               	andwf	LCD_WriteData@point,w
  1118  077A  00F0               	movwf	??_LCD_WriteData
  1119  077B  0872               	movf	LCD_WriteData@point,w
  1120  077C  390C               	andlw	12
  1121  077D  0709               	addwf	9,w
  1122  077E  0470               	iorwf	??_LCD_WriteData,w
  1123  077F  0020               	movlb	0	; select bank0
  1124  0780  008D               	movwf	13	;volatile
  1125                           
  1126                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  1127  0781  158C               	bsf	12,3	;volatile
  1128  0782  3200               	nop2	;2 cycle nop
  1129  0783  3200               	nop2	;2 cycle nop
  1130  0784  3200               	nop2	;2 cycle nop
  1131  0785  3200               	nop2	;2 cycle nop
  1132  0786  0020               	movlb	0	; select bank0
  1133  0787  118C               	bcf	12,3	;volatile
  1134  0788  3200               	nop2	;2 cycle nop
  1135  0789  3200               	nop2	;2 cycle nop
  1136  078A  3200               	nop2	;2 cycle nop
  1137  078B  3200               	nop2	;2 cycle nop
  1138  078C  0008               	return
  1139  078D                     __end_of_LCD_WriteData:	
  1140                           
  1141                           	psect	text4
  1142  06E2                     __ptext4:	
  1143 ;; *************** function _Buzzer_SetDuty *****************
  1144 ;; Defined at:
  1145 ;;		line 31 in file "Buzzer.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  duty            2    0[COMMON] unsigned int 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2, status,0
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1159 ;;      Params:         2       0       0       0       0       0
  1160 ;;      Locals:         1       0       0       0       0       0
  1161 ;;      Temps:          2       0       0       0       0       0
  1162 ;;      Totals:         5       0       0       0       0       0
  1163 ;;Total ram usage:        5 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;;		_Buzzer_Count1ms
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           
  1174                           ;psect for function _Buzzer_SetDuty
  1175  06E2                     _Buzzer_SetDuty:	
  1176                           
  1177                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  1178                           
  1179                           ;incstack = 0
  1180                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  1181  06E2  0025               	movlb	5	; select bank5
  1182  06E3  081A               	movf	26,w	;volatile
  1183  06E4  39CF               	andlw	207
  1184  06E5  00F2               	movwf	??_Buzzer_SetDuty
  1185  06E6  0872               	movf	??_Buzzer_SetDuty,w
  1186  06E7  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  1187                           
  1188                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  1189  06E8  0871               	movf	Buzzer_SetDuty@duty+1,w
  1190  06E9  00F3               	movwf	??_Buzzer_SetDuty+1
  1191  06EA  0870               	movf	Buzzer_SetDuty@duty,w
  1192  06EB  00F2               	movwf	??_Buzzer_SetDuty
  1193  06EC  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  1194  06ED  0CF2               	rrf	??_Buzzer_SetDuty,f
  1195  06EE  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  1196  06EF  0CF2               	rrf	??_Buzzer_SetDuty,f
  1197  06F0  0872               	movf	??_Buzzer_SetDuty,w
  1198  06F1  0098               	movwf	24	;volatile
  1199                           
  1200                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  1201  06F2  0870               	movf	Buzzer_SetDuty@duty,w
  1202  06F3  3903               	andlw	3
  1203  06F4  00F2               	movwf	??_Buzzer_SetDuty
  1204  06F5  3003               	movlw	3
  1205  06F6                     u1035:	
  1206  06F6  35F2               	lslf	??_Buzzer_SetDuty,f
  1207  06F7  3EFF               	addlw	-1
  1208  06F8  1D03               	skipz
  1209  06F9  2EF6               	goto	u1035
  1210  06FA  3572               	lslf	??_Buzzer_SetDuty,w
  1211  06FB  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  1212  06FC  009A               	movwf	26	;volatile
  1213  06FD  0008               	return
  1214  06FE                     __end_of_Buzzer_SetDuty:	
  1215                           
  1216                           	psect	text5
  1217  06FE                     __ptext5:	
  1218 ;; *************** function _Buzzer_Init *****************
  1219 ;; Defined at:
  1220 ;;		line 11 in file "Buzzer.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1234 ;;      Params:         0       0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0
  1236 ;;      Temps:          1       0       0       0       0       0
  1237 ;;      Totals:         1       0       0       0       0       0
  1238 ;;Total ram usage:        1 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           
  1248                           ;psect for function _Buzzer_Init
  1249  06FE                     _Buzzer_Init:	
  1250                           
  1251                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  1255  06FE  307F               	movlw	127
  1256  06FF  00F0               	movwf	??_Buzzer_Init
  1257  0700  0870               	movf	??_Buzzer_Init,w
  1258  0701  0021               	movlb	1	; select bank1
  1259  0702  058C               	andwf	12,f	;volatile
  1260                           
  1261                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  1262  0703  307F               	movlw	127
  1263  0704  00F0               	movwf	??_Buzzer_Init
  1264  0705  0870               	movf	??_Buzzer_Init,w
  1265  0706  0023               	movlb	3	; select bank3
  1266  0707  058C               	andwf	12,f	;volatile
  1267                           
  1268                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  1269  0708  0022               	movlb	2	; select bank2
  1270  0709  159D               	bsf	29,3	;volatile
  1271                           
  1272                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  1273  070A  0020               	movlb	0	; select bank0
  1274  070B  081C               	movf	28,w	;volatile
  1275                           
  1276                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  1277  070C  149C               	bsf	28,1	;volatile
  1278                           
  1279                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  1280  070D  151C               	bsf	28,2	;volatile
  1281                           
  1282                           ;Buzzer.c: 21: TMR2 = 0x00;
  1283  070E  019A               	clrf	26	;volatile
  1284                           
  1285                           ;Buzzer.c: 22: PR2 = 0xFF;
  1286  070F  30FF               	movlw	255
  1287  0710  009B               	movwf	27	;volatile
  1288                           
  1289                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  1290  0711  303F               	movlw	63
  1291  0712  00F0               	movwf	??_Buzzer_Init
  1292  0713  0870               	movf	??_Buzzer_Init,w
  1293  0714  0025               	movlb	5	; select bank5
  1294  0715  059A               	andwf	26,f	;volatile
  1295                           
  1296                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  1297  0716  300C               	movlw	12
  1298  0717  00F0               	movwf	??_Buzzer_Init
  1299  0718  0870               	movf	??_Buzzer_Init,w
  1300  0719  049A               	iorwf	26,f	;volatile
  1301                           
  1302                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  1303  071A  30F3               	movlw	243
  1304  071B  00F0               	movwf	??_Buzzer_Init
  1305  071C  0870               	movf	??_Buzzer_Init,w
  1306  071D  059E               	andwf	30,f	;volatile
  1307                           
  1308                           ;Buzzer.c: 28: CCPR2L = 0x00;
  1309  071E  0198               	clrf	24	;volatile
  1310  071F  0008               	return
  1311  0720                     __end_of_Buzzer_Init:	
  1312                           
  1313                           	psect	text6
  1314  06CD                     __ptext6:	
  1315 ;; *************** function _Basic_Init *****************
  1316 ;; Defined at:
  1317 ;;		line 27 in file "main.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      char 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1331 ;;      Params:         0       0       0       0       0       0
  1332 ;;      Locals:         0       0       0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0
  1334 ;;      Totals:         0       0       0       0       0       0
  1335 ;;Total ram usage:        0 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_main
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function _Basic_Init
  1346  06CD                     _Basic_Init:	
  1347                           
  1348                           ;main.c: 29: OSCCON = 0xF0;
  1349                           
  1350                           ;incstack = 0
  1351                           ; Regs used in _Basic_Init: [wreg+status,2]
  1352  06CD  30F0               	movlw	240
  1353  06CE  0021               	movlb	1	; select bank1
  1354  06CF  0099               	movwf	25	;volatile
  1355                           
  1356                           ;main.c: 33: TRISA = 0x07;
  1357  06D0  3007               	movlw	7
  1358  06D1  008C               	movwf	12	;volatile
  1359                           
  1360                           ;main.c: 34: ANSELA = 0x07;
  1361  06D2  3007               	movlw	7
  1362  06D3  0023               	movlb	3	; select bank3
  1363  06D4  008C               	movwf	12	;volatile
  1364                           
  1365                           ;main.c: 36: TRISB = 0x40;
  1366  06D5  3040               	movlw	64
  1367  06D6  0021               	movlb	1	; select bank1
  1368  06D7  008D               	movwf	13	;volatile
  1369                           
  1370                           ;main.c: 37: ANSELB = 0x00;
  1371  06D8  0023               	movlb	3	; select bank3
  1372  06D9  018D               	clrf	13	;volatile
  1373                           
  1374                           ;main.c: 39: APFCON0 = 0x08;
  1375  06DA  3008               	movlw	8
  1376  06DB  0022               	movlb	2	; select bank2
  1377  06DC  009D               	movwf	29	;volatile
  1378                           
  1379                           ;main.c: 40: APFCON1 = 0x00;
  1380  06DD  019E               	clrf	30	;volatile
  1381                           
  1382                           ;main.c: 42: PORTA = 0x00;
  1383  06DE  0020               	movlb	0	; select bank0
  1384  06DF  018C               	clrf	12	;volatile
  1385                           
  1386                           ;main.c: 43: PORTB = 0x00;
  1387  06E0  018D               	clrf	13	;volatile
  1388  06E1  0008               	return
  1389  06E2                     __end_of_Basic_Init:	
  1390                           ;main.c: 45: return 0;
  1391                           ;	Return value of _Basic_Init is never used
  1392                           
  1393  007E                     btemp	set	126	;btemp
  1394  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80      0       2
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     499
                                              6 COMMON     2     2      0
                         _Basic_Init
                        _Buzzer_Init
                     _Buzzer_SetDuty
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              4 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              3 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        3     3      0      88
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_SetDuty                                       5     3      2     323
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _Buzzer_SetDuty
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       2       6        2.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May 23 12:32:46 2017

              __CFG_CP$OFF 0000                        _RA3 0063                        _RA4 0064  
                      _PR2 001B               __CFG_CPD$OFF 0000                        u705 075B  
             __CFG_BORV$LO 0000                        wreg 0009                 _Basic_Init 06CD  
             __CFG_LVP$OFF 0000                       l1678 072D                       STR_1 081A  
                     STR_2 0800                       STR_3 080E                       STR_4 0814  
                     STR_5 0807                       u1035 06F6                       u1307 06C7  
                     u1317 0755                       u1247 0739                       u1257 074B  
                     u1267 0795                       u1277 07AD                       u1287 07C0  
                     u1297 07D4                       _TMR2 001A               __CFG_WRT$OFF 0000  
                     _main 0720                       btemp 007E              __CFG_BOREN$ON 0000  
                     start 0002              __CFG_IESO$OFF 0000              _LCD_WriteData 0753  
            __CFG_MCLRE$ON 0000   __end_of_LCD_DisplayClear 06CD           __end_of_LCD_Init 07F6  
            __CFG_PLLEN$ON 0000                      ?_main 0070              __CFG_WDTE$OFF 0000  
                    _T2CON 001C                      _PORTA 000C                      _PORTB 000D  
                    _TRISA 008C                      _TRISB 008D              __CFG_PWRTE$ON 0000  
           __CFG_FCMEN$OFF 0000                      _count 007A              ??_Buzzer_Init 0070  
                    wtemp0 007E             ?_LCD_WriteData 0070            __initialization 07F6  
             __end_of_main 0753                     ??_main 0076                ?_Basic_Init 0070  
                   _CCPR2L 0298                     _ANSELA 018C                     _ANSELB 018D  
                   _OSCCON 0099        __end_of_Buzzer_Init 0720                     _outptr 007C  
  __end_of__initialization 07FD                  ?_LCD_Init 0070            ??_LCD_WriteData 0070  
       Buzzer_SetDuty@duty 0070             __pcstackCOMMON 0070        __size_of_Basic_Init 0015  
Buzzer_SetDuty@CCP2CON_Pre 0074                 __pbssBANK0 0020                _Buzzer_Init 06FE  
               ??_LCD_Init 0074    __size_of_Buzzer_SetDuty 001C                 __pmaintext 0720  
                  _CCP2CON 029A          ?_LCD_DisplayClear 0070                    _APFCON0 011D  
                  _APFCON1 011E                    _CCPTMRS 029E         ??_LCD_DisplayClear 0073  
                  _LCD_Put 0000            __CFG_STVREN$OFF 0000                    __ptext1 078D  
                  __ptext2 06BE                    __ptext3 0753                    __ptext4 06E2  
                  __ptext5 06FE                    __ptext6 06CD               ??_Basic_Init 0070  
     end_of_initialization 07FD         __end_of_Basic_Init 06E2               __pstringtext 0800  
         __CFG_FOSC$INTOSC 0000             _Buzzer_SetDuty 06E2          __size_of_LCD_Init 0069  
      start_initialization 07F6     __end_of_Buzzer_SetDuty 06FE               ?_Buzzer_Init 0070  
    __end_of_LCD_WriteData 078D                __pbssCOMMON 0078                  ___latbits 0001  
__size_of_LCD_DisplayClear 000F            ?_Buzzer_SetDuty 0070                   _LCD_Init 078D  
                _xfunc_out 0078       __size_of_Buzzer_Init 0022         LCD_WriteData@point 0072  
         _LCD_DisplayClear 06BE              __size_of_main 0033                   _xfunc_in 0020  
         ??_Buzzer_SetDuty 0072          __CFG_CLKOUTEN$OFF 0000     __size_of_LCD_WriteData 003A  
