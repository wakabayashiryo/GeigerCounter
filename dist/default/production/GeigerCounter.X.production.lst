

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Mar 10 07:58:32 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 1.41
    47                           ; Generated 25/01/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1827 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011A                     	;# 
   138  011B                     	;# 
   139  011D                     	;# 
   140  011E                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0191                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0194                     	;# 
   150  0195                     	;# 
   151  0196                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019D                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  020C                     	;# 
   164  020D                     	;# 
   165  0211                     	;# 
   166  0211                     	;# 
   167  0212                     	;# 
   168  0212                     	;# 
   169  0213                     	;# 
   170  0213                     	;# 
   171  0214                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0216                     	;# 
   177  0216                     	;# 
   178  0217                     	;# 
   179  0217                     	;# 
   180  0219                     	;# 
   181  021A                     	;# 
   182  021B                     	;# 
   183  021C                     	;# 
   184  021D                     	;# 
   185  021E                     	;# 
   186  021F                     	;# 
   187  0291                     	;# 
   188  0291                     	;# 
   189  0292                     	;# 
   190  0293                     	;# 
   191  0294                     	;# 
   192  0295                     	;# 
   193  0295                     	;# 
   194  0296                     	;# 
   195  0298                     	;# 
   196  0298                     	;# 
   197  0299                     	;# 
   198  029A                     	;# 
   199  029B                     	;# 
   200  029C                     	;# 
   201  029C                     	;# 
   202  029D                     	;# 
   203  029E                     	;# 
   204  029E                     	;# 
   205  0311                     	;# 
   206  0311                     	;# 
   207  0312                     	;# 
   208  0313                     	;# 
   209  0318                     	;# 
   210  0318                     	;# 
   211  0319                     	;# 
   212  031A                     	;# 
   213  0394                     	;# 
   214  0395                     	;# 
   215  0396                     	;# 
   216  039A                     	;# 
   217  039C                     	;# 
   218  039D                     	;# 
   219  039E                     	;# 
   220  039F                     	;# 
   221  0415                     	;# 
   222  0416                     	;# 
   223  0417                     	;# 
   224  041C                     	;# 
   225  041D                     	;# 
   226  041E                     	;# 
   227  0FE4                     	;# 
   228  0FE5                     	;# 
   229  0FE6                     	;# 
   230  0FE7                     	;# 
   231  0FE8                     	;# 
   232  0FE9                     	;# 
   233  0FEA                     	;# 
   234  0FEB                     	;# 
   235  0FED                     	;# 
   236  0FEE                     	;# 
   237  0FEF                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  0111                     	;# 
   287  0112                     	;# 
   288  0113                     	;# 
   289  0114                     	;# 
   290  0115                     	;# 
   291  0116                     	;# 
   292  0117                     	;# 
   293  0118                     	;# 
   294  0119                     	;# 
   295  011A                     	;# 
   296  011B                     	;# 
   297  011D                     	;# 
   298  011E                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0191                     	;# 
   302  0191                     	;# 
   303  0192                     	;# 
   304  0193                     	;# 
   305  0193                     	;# 
   306  0193                     	;# 
   307  0194                     	;# 
   308  0195                     	;# 
   309  0196                     	;# 
   310  0199                     	;# 
   311  019A                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019B                     	;# 
   315  019B                     	;# 
   316  019C                     	;# 
   317  019C                     	;# 
   318  019D                     	;# 
   319  019E                     	;# 
   320  019F                     	;# 
   321  020C                     	;# 
   322  020D                     	;# 
   323  0211                     	;# 
   324  0211                     	;# 
   325  0212                     	;# 
   326  0212                     	;# 
   327  0213                     	;# 
   328  0213                     	;# 
   329  0214                     	;# 
   330  0214                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0216                     	;# 
   336  0217                     	;# 
   337  0217                     	;# 
   338  0219                     	;# 
   339  021A                     	;# 
   340  021B                     	;# 
   341  021C                     	;# 
   342  021D                     	;# 
   343  021E                     	;# 
   344  021F                     	;# 
   345  0291                     	;# 
   346  0291                     	;# 
   347  0292                     	;# 
   348  0293                     	;# 
   349  0294                     	;# 
   350  0295                     	;# 
   351  0295                     	;# 
   352  0296                     	;# 
   353  0298                     	;# 
   354  0298                     	;# 
   355  0299                     	;# 
   356  029A                     	;# 
   357  029B                     	;# 
   358  029C                     	;# 
   359  029C                     	;# 
   360  029D                     	;# 
   361  029E                     	;# 
   362  029E                     	;# 
   363  0311                     	;# 
   364  0311                     	;# 
   365  0312                     	;# 
   366  0313                     	;# 
   367  0318                     	;# 
   368  0318                     	;# 
   369  0319                     	;# 
   370  031A                     	;# 
   371  0394                     	;# 
   372  0395                     	;# 
   373  0396                     	;# 
   374  039A                     	;# 
   375  039C                     	;# 
   376  039D                     	;# 
   377  039E                     	;# 
   378  039F                     	;# 
   379  0415                     	;# 
   380  0416                     	;# 
   381  0417                     	;# 
   382  041C                     	;# 
   383  041D                     	;# 
   384  041E                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0014                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  0111                     	;# 
   445  0112                     	;# 
   446  0113                     	;# 
   447  0114                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011A                     	;# 
   454  011B                     	;# 
   455  011D                     	;# 
   456  011E                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0191                     	;# 
   460  0191                     	;# 
   461  0192                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0199                     	;# 
   469  019A                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019C                     	;# 
   475  019C                     	;# 
   476  019D                     	;# 
   477  019E                     	;# 
   478  019F                     	;# 
   479  020C                     	;# 
   480  020D                     	;# 
   481  0211                     	;# 
   482  0211                     	;# 
   483  0212                     	;# 
   484  0212                     	;# 
   485  0213                     	;# 
   486  0213                     	;# 
   487  0214                     	;# 
   488  0214                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0215                     	;# 
   492  0216                     	;# 
   493  0216                     	;# 
   494  0217                     	;# 
   495  0217                     	;# 
   496  0219                     	;# 
   497  021A                     	;# 
   498  021B                     	;# 
   499  021C                     	;# 
   500  021D                     	;# 
   501  021E                     	;# 
   502  021F                     	;# 
   503  0291                     	;# 
   504  0291                     	;# 
   505  0292                     	;# 
   506  0293                     	;# 
   507  0294                     	;# 
   508  0295                     	;# 
   509  0295                     	;# 
   510  0296                     	;# 
   511  0298                     	;# 
   512  0298                     	;# 
   513  0299                     	;# 
   514  029A                     	;# 
   515  029B                     	;# 
   516  029C                     	;# 
   517  029C                     	;# 
   518  029D                     	;# 
   519  029E                     	;# 
   520  029E                     	;# 
   521  0311                     	;# 
   522  0311                     	;# 
   523  0312                     	;# 
   524  0313                     	;# 
   525  0318                     	;# 
   526  0318                     	;# 
   527  0319                     	;# 
   528  031A                     	;# 
   529  0394                     	;# 
   530  0395                     	;# 
   531  0396                     	;# 
   532  039A                     	;# 
   533  039C                     	;# 
   534  039D                     	;# 
   535  039E                     	;# 
   536  039F                     	;# 
   537  0415                     	;# 
   538  0416                     	;# 
   539  0417                     	;# 
   540  041C                     	;# 
   541  041D                     	;# 
   542  041E                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  0000                     	;# 
   555  0001                     	;# 
   556  0002                     	;# 
   557  0003                     	;# 
   558  0004                     	;# 
   559  0005                     	;# 
   560  0006                     	;# 
   561  0007                     	;# 
   562  0008                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000D                     	;# 
   568  0011                     	;# 
   569  0012                     	;# 
   570  0013                     	;# 
   571  0014                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0016                     	;# 
   575  0017                     	;# 
   576  0018                     	;# 
   577  0019                     	;# 
   578  001A                     	;# 
   579  001B                     	;# 
   580  001C                     	;# 
   581  001E                     	;# 
   582  001F                     	;# 
   583  008C                     	;# 
   584  008D                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0095                     	;# 
   590  0096                     	;# 
   591  0097                     	;# 
   592  0098                     	;# 
   593  0099                     	;# 
   594  009A                     	;# 
   595  009B                     	;# 
   596  009B                     	;# 
   597  009C                     	;# 
   598  009D                     	;# 
   599  009E                     	;# 
   600  010C                     	;# 
   601  010D                     	;# 
   602  0111                     	;# 
   603  0112                     	;# 
   604  0113                     	;# 
   605  0114                     	;# 
   606  0115                     	;# 
   607  0116                     	;# 
   608  0117                     	;# 
   609  0118                     	;# 
   610  0119                     	;# 
   611  011A                     	;# 
   612  011B                     	;# 
   613  011D                     	;# 
   614  011E                     	;# 
   615  018C                     	;# 
   616  018D                     	;# 
   617  0191                     	;# 
   618  0191                     	;# 
   619  0192                     	;# 
   620  0193                     	;# 
   621  0193                     	;# 
   622  0193                     	;# 
   623  0194                     	;# 
   624  0195                     	;# 
   625  0196                     	;# 
   626  0199                     	;# 
   627  019A                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019C                     	;# 
   633  019C                     	;# 
   634  019D                     	;# 
   635  019E                     	;# 
   636  019F                     	;# 
   637  020C                     	;# 
   638  020D                     	;# 
   639  0211                     	;# 
   640  0211                     	;# 
   641  0212                     	;# 
   642  0212                     	;# 
   643  0213                     	;# 
   644  0213                     	;# 
   645  0214                     	;# 
   646  0214                     	;# 
   647  0215                     	;# 
   648  0215                     	;# 
   649  0215                     	;# 
   650  0216                     	;# 
   651  0216                     	;# 
   652  0217                     	;# 
   653  0217                     	;# 
   654  0219                     	;# 
   655  021A                     	;# 
   656  021B                     	;# 
   657  021C                     	;# 
   658  021D                     	;# 
   659  021E                     	;# 
   660  021F                     	;# 
   661  0291                     	;# 
   662  0291                     	;# 
   663  0292                     	;# 
   664  0293                     	;# 
   665  0294                     	;# 
   666  0295                     	;# 
   667  0295                     	;# 
   668  0296                     	;# 
   669  0298                     	;# 
   670  0298                     	;# 
   671  0299                     	;# 
   672  029A                     	;# 
   673  029B                     	;# 
   674  029C                     	;# 
   675  029C                     	;# 
   676  029D                     	;# 
   677  029E                     	;# 
   678  029E                     	;# 
   679  0311                     	;# 
   680  0311                     	;# 
   681  0312                     	;# 
   682  0313                     	;# 
   683  0318                     	;# 
   684  0318                     	;# 
   685  0319                     	;# 
   686  031A                     	;# 
   687  0394                     	;# 
   688  0395                     	;# 
   689  0396                     	;# 
   690  039A                     	;# 
   691  039C                     	;# 
   692  039D                     	;# 
   693  039E                     	;# 
   694  039F                     	;# 
   695  0415                     	;# 
   696  0416                     	;# 
   697  0417                     	;# 
   698  041C                     	;# 
   699  041D                     	;# 
   700  041E                     	;# 
   701  0FE4                     	;# 
   702  0FE5                     	;# 
   703  0FE6                     	;# 
   704  0FE7                     	;# 
   705  0FE8                     	;# 
   706  0FE9                     	;# 
   707  0FEA                     	;# 
   708  0FEB                     	;# 
   709  0FED                     	;# 
   710  0FEE                     	;# 
   711  0FEF                     	;# 
   712  0000                     	;# 
   713  0001                     	;# 
   714  0002                     	;# 
   715  0003                     	;# 
   716  0004                     	;# 
   717  0005                     	;# 
   718  0006                     	;# 
   719  0007                     	;# 
   720  0008                     	;# 
   721  0009                     	;# 
   722  000A                     	;# 
   723  000B                     	;# 
   724  000C                     	;# 
   725  000D                     	;# 
   726  0011                     	;# 
   727  0012                     	;# 
   728  0013                     	;# 
   729  0014                     	;# 
   730  0015                     	;# 
   731  0016                     	;# 
   732  0016                     	;# 
   733  0017                     	;# 
   734  0018                     	;# 
   735  0019                     	;# 
   736  001A                     	;# 
   737  001B                     	;# 
   738  001C                     	;# 
   739  001E                     	;# 
   740  001F                     	;# 
   741  008C                     	;# 
   742  008D                     	;# 
   743  0091                     	;# 
   744  0092                     	;# 
   745  0093                     	;# 
   746  0094                     	;# 
   747  0095                     	;# 
   748  0096                     	;# 
   749  0097                     	;# 
   750  0098                     	;# 
   751  0099                     	;# 
   752  009A                     	;# 
   753  009B                     	;# 
   754  009B                     	;# 
   755  009C                     	;# 
   756  009D                     	;# 
   757  009E                     	;# 
   758  010C                     	;# 
   759  010D                     	;# 
   760  0111                     	;# 
   761  0112                     	;# 
   762  0113                     	;# 
   763  0114                     	;# 
   764  0115                     	;# 
   765  0116                     	;# 
   766  0117                     	;# 
   767  0118                     	;# 
   768  0119                     	;# 
   769  011A                     	;# 
   770  011B                     	;# 
   771  011D                     	;# 
   772  011E                     	;# 
   773  018C                     	;# 
   774  018D                     	;# 
   775  0191                     	;# 
   776  0191                     	;# 
   777  0192                     	;# 
   778  0193                     	;# 
   779  0193                     	;# 
   780  0193                     	;# 
   781  0194                     	;# 
   782  0195                     	;# 
   783  0196                     	;# 
   784  0199                     	;# 
   785  019A                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019C                     	;# 
   791  019C                     	;# 
   792  019D                     	;# 
   793  019E                     	;# 
   794  019F                     	;# 
   795  020C                     	;# 
   796  020D                     	;# 
   797  0211                     	;# 
   798  0211                     	;# 
   799  0212                     	;# 
   800  0212                     	;# 
   801  0213                     	;# 
   802  0213                     	;# 
   803  0214                     	;# 
   804  0214                     	;# 
   805  0215                     	;# 
   806  0215                     	;# 
   807  0215                     	;# 
   808  0216                     	;# 
   809  0216                     	;# 
   810  0217                     	;# 
   811  0217                     	;# 
   812  0219                     	;# 
   813  021A                     	;# 
   814  021B                     	;# 
   815  021C                     	;# 
   816  021D                     	;# 
   817  021E                     	;# 
   818  021F                     	;# 
   819  0291                     	;# 
   820  0291                     	;# 
   821  0292                     	;# 
   822  0293                     	;# 
   823  0294                     	;# 
   824  0295                     	;# 
   825  0295                     	;# 
   826  0296                     	;# 
   827  0298                     	;# 
   828  0298                     	;# 
   829  0299                     	;# 
   830  029A                     	;# 
   831  029B                     	;# 
   832  029C                     	;# 
   833  029C                     	;# 
   834  029D                     	;# 
   835  029E                     	;# 
   836  029E                     	;# 
   837  0311                     	;# 
   838  0311                     	;# 
   839  0312                     	;# 
   840  0313                     	;# 
   841  0318                     	;# 
   842  0318                     	;# 
   843  0319                     	;# 
   844  031A                     	;# 
   845  0394                     	;# 
   846  0395                     	;# 
   847  0396                     	;# 
   848  039A                     	;# 
   849  039C                     	;# 
   850  039D                     	;# 
   851  039E                     	;# 
   852  039F                     	;# 
   853  0415                     	;# 
   854  0416                     	;# 
   855  0417                     	;# 
   856  041C                     	;# 
   857  041D                     	;# 
   858  041E                     	;# 
   859  0FE4                     	;# 
   860  0FE5                     	;# 
   861  0FE6                     	;# 
   862  0FE7                     	;# 
   863  0FE8                     	;# 
   864  0FE9                     	;# 
   865  0FEA                     	;# 
   866  0FEB                     	;# 
   867  0FED                     	;# 
   868  0FEE                     	;# 
   869  0FEF                     	;# 
   870  0000                     	;# 
   871  0001                     	;# 
   872  0002                     	;# 
   873  0003                     	;# 
   874  0004                     	;# 
   875  0005                     	;# 
   876  0006                     	;# 
   877  0007                     	;# 
   878  0008                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  0011                     	;# 
   885  0012                     	;# 
   886  0013                     	;# 
   887  0014                     	;# 
   888  0015                     	;# 
   889  0016                     	;# 
   890  0016                     	;# 
   891  0017                     	;# 
   892  0018                     	;# 
   893  0019                     	;# 
   894  001A                     	;# 
   895  001B                     	;# 
   896  001C                     	;# 
   897  001E                     	;# 
   898  001F                     	;# 
   899  008C                     	;# 
   900  008D                     	;# 
   901  0091                     	;# 
   902  0092                     	;# 
   903  0093                     	;# 
   904  0094                     	;# 
   905  0095                     	;# 
   906  0096                     	;# 
   907  0097                     	;# 
   908  0098                     	;# 
   909  0099                     	;# 
   910  009A                     	;# 
   911  009B                     	;# 
   912  009B                     	;# 
   913  009C                     	;# 
   914  009D                     	;# 
   915  009E                     	;# 
   916  010C                     	;# 
   917  010D                     	;# 
   918  0111                     	;# 
   919  0112                     	;# 
   920  0113                     	;# 
   921  0114                     	;# 
   922  0115                     	;# 
   923  0116                     	;# 
   924  0117                     	;# 
   925  0118                     	;# 
   926  0119                     	;# 
   927  011A                     	;# 
   928  011B                     	;# 
   929  011D                     	;# 
   930  011E                     	;# 
   931  018C                     	;# 
   932  018D                     	;# 
   933  0191                     	;# 
   934  0191                     	;# 
   935  0192                     	;# 
   936  0193                     	;# 
   937  0193                     	;# 
   938  0193                     	;# 
   939  0194                     	;# 
   940  0195                     	;# 
   941  0196                     	;# 
   942  0199                     	;# 
   943  019A                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019B                     	;# 
   948  019C                     	;# 
   949  019C                     	;# 
   950  019D                     	;# 
   951  019E                     	;# 
   952  019F                     	;# 
   953  020C                     	;# 
   954  020D                     	;# 
   955  0211                     	;# 
   956  0211                     	;# 
   957  0212                     	;# 
   958  0212                     	;# 
   959  0213                     	;# 
   960  0213                     	;# 
   961  0214                     	;# 
   962  0214                     	;# 
   963  0215                     	;# 
   964  0215                     	;# 
   965  0215                     	;# 
   966  0216                     	;# 
   967  0216                     	;# 
   968  0217                     	;# 
   969  0217                     	;# 
   970  0219                     	;# 
   971  021A                     	;# 
   972  021B                     	;# 
   973  021C                     	;# 
   974  021D                     	;# 
   975  021E                     	;# 
   976  021F                     	;# 
   977  0291                     	;# 
   978  0291                     	;# 
   979  0292                     	;# 
   980  0293                     	;# 
   981  0294                     	;# 
   982  0295                     	;# 
   983  0295                     	;# 
   984  0296                     	;# 
   985  0298                     	;# 
   986  0298                     	;# 
   987  0299                     	;# 
   988  029A                     	;# 
   989  029B                     	;# 
   990  029C                     	;# 
   991  029C                     	;# 
   992  029D                     	;# 
   993  029E                     	;# 
   994  029E                     	;# 
   995  0311                     	;# 
   996  0311                     	;# 
   997  0312                     	;# 
   998  0313                     	;# 
   999  0318                     	;# 
  1000  0318                     	;# 
  1001  0319                     	;# 
  1002  031A                     	;# 
  1003  0394                     	;# 
  1004  0395                     	;# 
  1005  0396                     	;# 
  1006  039A                     	;# 
  1007  039C                     	;# 
  1008  039D                     	;# 
  1009  039E                     	;# 
  1010  039F                     	;# 
  1011  0415                     	;# 
  1012  0416                     	;# 
  1013  0417                     	;# 
  1014  041C                     	;# 
  1015  041D                     	;# 
  1016  041E                     	;# 
  1017  0FE4                     	;# 
  1018  0FE5                     	;# 
  1019  0FE6                     	;# 
  1020  0FE7                     	;# 
  1021  0FE8                     	;# 
  1022  0FE9                     	;# 
  1023  0FEA                     	;# 
  1024  0FEB                     	;# 
  1025  0FED                     	;# 
  1026  0FEE                     	;# 
  1027  0FEF                     	;# 
  1028                           
  1029                           	psect	idataBANK1
  1030  0F5D                     __pidataBANK1:	
  1031                           
  1032                           ;initializer for main@F3055
  1033  0F5D  3413               	retlw	19
  1034  0F5E  3462               	retlw	98
  1035  0F5F  3405               	retlw	5
  1036  0F60  3406               	retlw	6
  1037  000D                     _PORTB	set	13
  1038  000C                     _PORTA	set	12
  1039  0093                     _BCL1IF	set	147
  1040  008B                     _SSP1IF	set	139
  1041  00A1                     _BCL2IF	set	161
  1042  00A0                     _SSP2IF	set	160
  1043  005F                     _GIE	set	95
  1044  005E                     _PEIE	set	94
  1045  0064                     _RA4	set	100
  1046  0063                     _RA3	set	99
  1047  008D                     _TRISB	set	141
  1048  008C                     _TRISA	set	140
  1049  0099                     _OSCCON	set	153
  1050  0493                     _BCL1IE	set	1171
  1051  048B                     _SSP1IE	set	1163
  1052  04A1                     _BCL2IE	set	1185
  1053  04A0                     _SSP2IE	set	1184
  1054  011E                     _APFCON1	set	286
  1055  011D                     _APFCON0	set	285
  1056  018D                     _ANSELB	set	397
  1057  018C                     _ANSELA	set	396
  1058  0214                     _SSP1STATbits	set	532
  1059  0211                     _SSP1BUF	set	529
  1060  0216                     _SSP1CON2	set	534
  1061  0213                     _SSP1MSK	set	531
  1062  0216                     _SSP1CON2bits	set	534
  1063  0215                     _SSP1CON1bits	set	533
  1064  0212                     _SSP1ADD	set	530
  1065  0214                     _SSP1STAT	set	532
  1066  0215                     _SSP1CON1	set	533
  1067  021C                     _SSP2STATbits	set	540
  1068  0219                     _SSP2BUF	set	537
  1069  021E                     _SSP2CON2	set	542
  1070  021B                     _SSP2MSK	set	539
  1071  021E                     _SSP2CON2bits	set	542
  1072  021D                     _SSP2CON1bits	set	541
  1073  021A                     _SSP2ADD	set	538
  1074  021C                     _SSP2STAT	set	540
  1075  021D                     _SSP2CON1	set	541
  1076                           
  1077                           	psect	stringtext
  1078  07F7                     __pstringtext:	
  1079  07F7                     STR_1:	
  1080  07F7  3425               	retlw	37	;'%'
  1081  07F8  3464               	retlw	100	;'d'
  1082  07F9  3420               	retlw	32	;' '
  1083  07FA  3425               	retlw	37	;'%'
  1084  07FB  3464               	retlw	100	;'d'
  1085  07FC  3420               	retlw	32	;' '
  1086  07FD  3425               	retlw	37	;'%'
  1087  07FE  3464               	retlw	100	;'d'
  1088  07FF  3420               	retlw	32	;' '
  1089  0800  3425               	retlw	37	;'%'
  1090  0801  3464               	retlw	100	;'d'
  1091  0802  3400               	retlw	0
  1092  0803                     STR_3:	
  1093  0803  3425               	retlw	37	;'%'
  1094  0804  3430               	retlw	48	;'0'
  1095  0805  3438               	retlw	56	;'8'
  1096  0806  346C               	retlw	108	;'l'
  1097  0807  3458               	retlw	88	;'X'
  1098  0808  3420               	retlw	32	;' '
  1099  0809  3400               	retlw	0
  1100  080A                     STR_6:	
  1101  080A  3420               	retlw	32	;' '
  1102  080B  3425               	retlw	37	;'%'
  1103  080C  3430               	retlw	48	;'0'
  1104  080D  3438               	retlw	56	;'8'
  1105  080E  344C               	retlw	76	;'L'
  1106  080F  3458               	retlw	88	;'X'
  1107  0810  3400               	retlw	0
  1108  0811                     STR_4:	
  1109  0811  3420               	retlw	32	;' '
  1110  0812  3425               	retlw	37	;'%'
  1111  0813  3430               	retlw	48	;'0'
  1112  0814  3432               	retlw	50	;'2'
  1113  0815  3458               	retlw	88	;'X'
  1114  0816  3400               	retlw	0
  1115  0817                     STR_5:	
  1116  0817  3420               	retlw	32	;' '
  1117  0818  3425               	retlw	37	;'%'
  1118  0819  3430               	retlw	48	;'0'
  1119  081A  3434               	retlw	52	;'4'
  1120  081B  3458               	retlw	88	;'X'
  1121  081C  3400               	retlw	0
  1122  081D                     STR_2:	
  1123  081D  340D               	retlw	13
  1124  081E  3400               	retlw	0
  1125                           
  1126                           ; #config settings
  1127  0000                     
  1128                           	psect	cinit
  1129  0012                     start_initialization:	
  1130  0012                     __initialization:	
  1131                           
  1132                           ; Initialize objects allocated to BANK1
  1133  0012  0021               	movlb	1	; select bank1
  1134  0013  318F  275D  3180   	fcall	__pidataBANK1	;fetch initializer
  1135  0016  00D4               	movwf	__pdataBANK1& (0+127)
  1136  0017  318F  275E  3180   	fcall	__pidataBANK1+1	;fetch initializer
  1137  001A  00D5               	movwf	(__pdataBANK1+1)& (0+127)
  1138  001B  318F  275F  3180   	fcall	__pidataBANK1+2	;fetch initializer
  1139  001E  00D6               	movwf	(__pdataBANK1+2)& (0+127)
  1140  001F  318F  2760  3180   	fcall	__pidataBANK1+3	;fetch initializer
  1141  0022  00D7               	movwf	(__pdataBANK1+3)& (0+127)
  1142                           
  1143                           ; Clear objects allocated to COMMON
  1144  0023  01FA               	clrf	__pbssCOMMON& (0+127)
  1145  0024  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1146                           
  1147                           ; Clear objects allocated to BANK0
  1148  0025  0020               	movlb	0	; select bank0
  1149  0026  01EA               	clrf	__pbssBANK0& (0+127)
  1150  0027  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  1151  0028  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  1152  0029  01ED               	clrf	(__pbssBANK0+3)& (0+127)
  1153  002A  01EE               	clrf	(__pbssBANK0+4)& (0+127)
  1154  002B  01EF               	clrf	(__pbssBANK0+5)& (0+127)
  1155                           
  1156                           ; Clear objects allocated to BANK1
  1157  002C  30A0               	movlw	low __pbssBANK1
  1158  002D  0084               	movwf	4
  1159  002E  3000               	movlw	high __pbssBANK1
  1160  002F  0085               	movwf	5
  1161  0030  302C               	movlw	44
  1162  0031  318F  276D         	fcall	clear_ram0
  1163  0033                     end_of_initialization:	
  1164                           ;End of C runtime variable initialization code
  1165                           
  1166  0033                     __end_of__initialization:	
  1167  0033  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1168  0034  0020               	movlb	0
  1169  0035  3184  2C7F         	ljmp	_main	;jump to C main() function
  1170                           
  1171                           	psect	bssCOMMON
  1172  007A                     __pbssCOMMON:	
  1173  007A                     _outptr:	
  1174  007A                     	ds	1
  1175  007B                     _ConfigReg:	
  1176  007B                     	ds	1
  1177                           
  1178                           	psect	bssBANK0
  1179  006A                     __pbssBANK0:	
  1180  006A                     _xfunc_in:	
  1181  006A                     	ds	2
  1182  006C                     _xfunc_out:	
  1183  006C                     	ds	2
  1184  006E                     _VoltageReg:	
  1185  006E                     	ds	2
  1186                           
  1187                           	psect	bssBANK1
  1188  00A0                     __pbssBANK1:	
  1189  00A0                     _AllMemoryReg:	
  1190  00A0                     	ds	3
  1191  00A3                     _MemoryReg:	
  1192  00A3                     	ds	3
  1193  00A6                     _I2C2_Config:	
  1194  00A6                     	ds	19
  1195  00B9                     _I2C1_Config:	
  1196  00B9                     	ds	19
  1197                           
  1198                           	psect	dataBANK1
  1199  00D4                     __pdataBANK1:	
  1200  00D4                     main@F3055:	
  1201  00D4                     	ds	4
  1202                           
  1203                           	psect	clrtext
  1204  0F6D                     clear_ram0:	
  1205                           ;	Called with FSR0 containing the base address, and
  1206                           ;	WREG with the size to clear
  1207                           
  1208  0F6D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1209  0F6E                     clrloop0:	
  1210  0F6E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1211  0F6F  3101               	addfsr 0,1
  1212  0F70  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1213  0F71  2F6E               	goto	clrloop0	;have we reached the end yet?
  1214  0F72  3400               	retlw	0	;all done for this memory range, return
  1215                           
  1216                           	psect	cstackBANK1
  1217  00CC                     __pcstackBANK1:	
  1218  00CC                     main@testdata:	
  1219                           
  1220                           ; 4 bytes @ 0x0
  1221  00CC                     	ds	4
  1222  00D0                     main@resultdata:	
  1223                           
  1224                           ; 4 bytes @ 0x4
  1225  00D0                     	ds	4
  1226                           
  1227                           	psect	cstackCOMMON
  1228  0070                     __pcstackCOMMON:	
  1229  0070                     ?_Basic_Init:	
  1230  0070                     ?_LCD_Init:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_I2C_CommonInterrupt:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_LCD_DisplayClear:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_I2C1_Interrupt:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ??_I2C1_Interrupt:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_I2C2_Interrupt:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ??_I2C2_Interrupt:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?_main:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ?_hand:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     ?_LCD_WriteData:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260  0070                     ?_xputc:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_xputs:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_I2C2_PinInit:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ?_I2C1_PinInit:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0x0
  1274  0070                     	ds	1
  1275  0071                     ??_I2C_CommonInterrupt:	
  1276  0071                     ??_hand:	
  1277                           ; 1 bytes @ 0x1
  1278                           
  1279                           
  1280                           ; 1 bytes @ 0x1
  1281  0071                     	ds	1
  1282  0072                     ??_Basic_Init:	
  1283  0072                     ?_I2C1_Transmit:	
  1284                           ; 1 bytes @ 0x2
  1285                           
  1286  0072                     ?_I2C2_Transmit:	
  1287                           ; 1 bytes @ 0x2
  1288                           
  1289  0072                     ?_I2C1_Receive:	
  1290                           ; 1 bytes @ 0x2
  1291                           
  1292  0072                     ?_I2C2_Receive:	
  1293                           ; 1 bytes @ 0x2
  1294                           
  1295  0072                     ??_LCD_WriteData:	
  1296                           ; 1 bytes @ 0x2
  1297                           
  1298  0072                     ??_I2C2_PinInit:	
  1299                           ; 1 bytes @ 0x2
  1300                           
  1301  0072                     ??_I2C1_PinInit:	
  1302                           ; 1 bytes @ 0x2
  1303                           
  1304  0072                     ?___wmul:	
  1305                           ; 1 bytes @ 0x2
  1306                           
  1307  0072                     ?___lldiv:	
  1308                           ; 2 bytes @ 0x2
  1309                           
  1310  0072                     ?___llmod:	
  1311                           ; 4 bytes @ 0x2
  1312                           
  1313  0072                     I2C2_Transmit@pData:	
  1314                           ; 4 bytes @ 0x2
  1315                           
  1316  0072                     I2C2_Receive@pData:	
  1317                           ; 1 bytes @ 0x2
  1318                           
  1319  0072                     I2C1_Transmit@pData:	
  1320                           ; 1 bytes @ 0x2
  1321                           
  1322  0072                     I2C1_Receive@pData:	
  1323                           ; 1 bytes @ 0x2
  1324                           
  1325  0072                     ___wmul@multiplier:	
  1326                           ; 1 bytes @ 0x2
  1327                           
  1328  0072                     ___lldiv@divisor:	
  1329                           ; 2 bytes @ 0x2
  1330                           
  1331  0072                     ___llmod@divisor:	
  1332                           ; 4 bytes @ 0x2
  1333                           
  1334                           
  1335                           ; 4 bytes @ 0x2
  1336  0072                     	ds	1
  1337  0073                     ?_I2C1_Setting:	
  1338  0073                     ?_I2C2_Setting:	
  1339                           ; 1 bytes @ 0x3
  1340                           
  1341  0073                     I2C2_Setting@mode:	
  1342                           ; 1 bytes @ 0x3
  1343                           
  1344  0073                     I2C2_Transmit@size:	
  1345                           ; 1 bytes @ 0x3
  1346                           
  1347  0073                     I2C2_Receive@size:	
  1348                           ; 1 bytes @ 0x3
  1349                           
  1350  0073                     I2C1_Setting@mode:	
  1351                           ; 1 bytes @ 0x3
  1352                           
  1353  0073                     I2C1_Transmit@size:	
  1354                           ; 1 bytes @ 0x3
  1355                           
  1356  0073                     I2C1_Receive@size:	
  1357                           ; 1 bytes @ 0x3
  1358                           
  1359                           
  1360                           ; 1 bytes @ 0x3
  1361  0073                     	ds	1
  1362  0074                     ??_I2C1_Transmit:	
  1363  0074                     ??_I2C2_Transmit:	
  1364                           ; 1 bytes @ 0x4
  1365                           
  1366  0074                     ??_I2C1_Receive:	
  1367                           ; 1 bytes @ 0x4
  1368                           
  1369  0074                     ??_I2C2_Receive:	
  1370                           ; 1 bytes @ 0x4
  1371                           
  1372  0074                     LCD_WriteData@point:	
  1373                           ; 1 bytes @ 0x4
  1374                           
  1375  0074                     I2C2_Setting@Speed:	
  1376                           ; 1 bytes @ 0x4
  1377                           
  1378  0074                     I2C1_Setting@Speed:	
  1379                           ; 1 bytes @ 0x4
  1380                           
  1381  0074                     ___wmul@multiplicand:	
  1382                           ; 1 bytes @ 0x4
  1383                           
  1384                           
  1385                           ; 2 bytes @ 0x4
  1386  0074                     	ds	1
  1387  0075                     ?_LCD_Put:	
  1388  0075                     ?_LCD_CursorPosition:	
  1389                           ; 1 bytes @ 0x5
  1390                           
  1391  0075                     ??_LCD_DisplayClear:	
  1392                           ; 1 bytes @ 0x5
  1393                           
  1394  0075                     ??_I2C1_Setting:	
  1395                           ; 1 bytes @ 0x5
  1396                           
  1397  0075                     ??_I2C2_Setting:	
  1398                           ; 1 bytes @ 0x5
  1399                           
  1400  0075                     LCD_Put@word:	
  1401                           ; 1 bytes @ 0x5
  1402                           
  1403  0075                     LCD_CursorPosition@ty:	
  1404                           ; 1 bytes @ 0x5
  1405                           
  1406                           
  1407                           ; 1 bytes @ 0x5
  1408  0075                     	ds	1
  1409  0076                     ??_LCD_Init:	
  1410  0076                     ??_LCD_Put:	
  1411                           ; 1 bytes @ 0x6
  1412                           
  1413  0076                     ??_LCD_CursorPosition:	
  1414                           ; 1 bytes @ 0x6
  1415                           
  1416  0076                     ??_xputc:	
  1417                           ; 1 bytes @ 0x6
  1418                           
  1419  0076                     ??___wmul:	
  1420                           ; 1 bytes @ 0x6
  1421                           
  1422  0076                     I2C2_Setting@address:	
  1423                           ; 1 bytes @ 0x6
  1424                           
  1425  0076                     I2C2_Transmit@address:	
  1426                           ; 1 bytes @ 0x6
  1427                           
  1428  0076                     I2C2_Receive@address:	
  1429                           ; 1 bytes @ 0x6
  1430                           
  1431  0076                     I2C1_Setting@address:	
  1432                           ; 1 bytes @ 0x6
  1433                           
  1434  0076                     I2C1_Transmit@address:	
  1435                           ; 1 bytes @ 0x6
  1436                           
  1437  0076                     I2C1_Receive@address:	
  1438                           ; 1 bytes @ 0x6
  1439                           
  1440  0076                     ___wmul@product:	
  1441                           ; 1 bytes @ 0x6
  1442                           
  1443  0076                     ___lldiv@dividend:	
  1444                           ; 2 bytes @ 0x6
  1445                           
  1446  0076                     ___llmod@dividend:	
  1447                           ; 4 bytes @ 0x6
  1448                           
  1449                           
  1450                           ; 4 bytes @ 0x6
  1451  0076                     	ds	1
  1452  0077                     ?_I2C_Init:	
  1453  0077                     LCD_CursorPosition@tx:	
  1454                           ; 1 bytes @ 0x7
  1455                           
  1456  0077                     xputc@c:	
  1457                           ; 1 bytes @ 0x7
  1458                           
  1459  0077                     I2C_Init@address:	
  1460                           ; 1 bytes @ 0x7
  1461                           
  1462  0077                     I2C2_Transmit@i:	
  1463                           ; 1 bytes @ 0x7
  1464                           
  1465  0077                     I2C2_Receive@result:	
  1466                           ; 1 bytes @ 0x7
  1467                           
  1468  0077                     I2C1_Transmit@i:	
  1469                           ; 1 bytes @ 0x7
  1470                           
  1471  0077                     I2C1_Receive@result:	
  1472                           ; 1 bytes @ 0x7
  1473                           
  1474                           
  1475                           ; 1 bytes @ 0x7
  1476  0077                     	ds	1
  1477  0078                     ??_xputs:	
  1478  0078                     I2C_Init@mode:	
  1479                           ; 1 bytes @ 0x8
  1480                           
  1481  0078                     I2C2_Transmit@i_569:	
  1482                           ; 1 bytes @ 0x8
  1483                           
  1484  0078                     I2C2_Receive@i:	
  1485                           ; 1 bytes @ 0x8
  1486                           
  1487  0078                     I2C1_Transmit@i_708:	
  1488                           ; 1 bytes @ 0x8
  1489                           
  1490  0078                     I2C1_Receive@i:	
  1491                           ; 1 bytes @ 0x8
  1492                           
  1493                           
  1494                           ; 1 bytes @ 0x8
  1495  0078                     	ds	1
  1496  0079                     xputs@str:	
  1497  0079                     I2C_Init@Speed:	
  1498                           ; 1 bytes @ 0x9
  1499                           
  1500  0079                     I2C2_Transmit@result:	
  1501                           ; 1 bytes @ 0x9
  1502                           
  1503  0079                     I2C2_Receive@i_576:	
  1504                           ; 1 bytes @ 0x9
  1505                           
  1506  0079                     I2C1_Transmit@result:	
  1507                           ; 1 bytes @ 0x9
  1508                           
  1509  0079                     I2C1_Receive@i_715:	
  1510                           ; 1 bytes @ 0x9
  1511                           
  1512                           
  1513                           ; 1 bytes @ 0x9
  1514  0079                     	ds	1
  1515                           
  1516                           	psect	cstackBANK0
  1517  0020                     __pcstackBANK0:	
  1518  0020                     ??_I2C_Init:	
  1519  0020                     ?_I2C_Transmit:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0020                     ?_I2C_Receive:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0020                     ??___lldiv:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0020                     ??___llmod:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0020                     I2C_Transmit@address:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0020                     I2C_Receive@address:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537                           
  1538                           ; 1 bytes @ 0x0
  1539  0020                     	ds	1
  1540  0021                     I2C_Transmit@pData:	
  1541  0021                     I2C_Receive@pData:	
  1542                           ; 1 bytes @ 0x1
  1543                           
  1544  0021                     ___llmod@counter:	
  1545                           ; 1 bytes @ 0x1
  1546                           
  1547  0021                     ___lldiv@quotient:	
  1548                           ; 1 bytes @ 0x1
  1549                           
  1550                           
  1551                           ; 4 bytes @ 0x1
  1552  0021                     	ds	1
  1553  0022                     I2C_Init@I2Cx:	
  1554  0022                     I2C_Transmit@size:	
  1555                           ; 1 bytes @ 0x2
  1556                           
  1557  0022                     I2C_Receive@size:	
  1558                           ; 1 bytes @ 0x2
  1559                           
  1560                           
  1561                           ; 1 bytes @ 0x2
  1562  0022                     	ds	1
  1563  0023                     ??_I2C_Transmit:	
  1564  0023                     ??_I2C_Receive:	
  1565                           ; 1 bytes @ 0x3
  1566                           
  1567                           
  1568                           ; 1 bytes @ 0x3
  1569  0023                     	ds	2
  1570  0025                     ___lldiv@counter:	
  1571                           
  1572                           ; 1 bytes @ 0x5
  1573  0025                     	ds	1
  1574  0026                     ?_xvprintf:	
  1575  0026                     I2C_Transmit@I2Cx:	
  1576                           ; 1 bytes @ 0x6
  1577                           
  1578  0026                     I2C_Receive@result:	
  1579                           ; 1 bytes @ 0x6
  1580                           
  1581  0026                     xvprintf@fmt:	
  1582                           ; 1 bytes @ 0x6
  1583                           
  1584                           
  1585                           ; 2 bytes @ 0x6
  1586  0026                     	ds	1
  1587  0027                     I2C_Transmit@result:	
  1588  0027                     I2C_Receive@I2Cx:	
  1589                           ; 1 bytes @ 0x7
  1590                           
  1591                           
  1592                           ; 1 bytes @ 0x7
  1593  0027                     	ds	1
  1594  0028                     xvprintf@arp:	
  1595                           
  1596                           ; 1 bytes @ 0x8
  1597  0028                     	ds	1
  1598  0029                     ??_xvprintf:	
  1599                           
  1600                           ; 1 bytes @ 0x9
  1601  0029                     	ds	4
  1602  002D                     xvprintf@s:	
  1603                           
  1604                           ; 16 bytes @ 0xD
  1605  002D                     	ds	16
  1606  003D                     _xvprintf$272:	
  1607                           
  1608                           ; 4 bytes @ 0x1D
  1609  003D                     	ds	4
  1610  0041                     _xvprintf$273:	
  1611                           
  1612                           ; 2 bytes @ 0x21
  1613  0041                     	ds	2
  1614  0043                     _xvprintf$274:	
  1615                           
  1616                           ; 2 bytes @ 0x23
  1617  0043                     	ds	2
  1618  0045                     xvprintf@p:	
  1619                           
  1620                           ; 1 bytes @ 0x25
  1621  0045                     	ds	1
  1622  0046                     xvprintf@r:	
  1623                           
  1624                           ; 2 bytes @ 0x26
  1625  0046                     	ds	2
  1626  0048                     xvprintf@w:	
  1627                           
  1628                           ; 2 bytes @ 0x28
  1629  0048                     	ds	2
  1630  004A                     xvprintf@j:	
  1631                           
  1632                           ; 2 bytes @ 0x2A
  1633  004A                     	ds	2
  1634  004C                     xvprintf@v:	
  1635                           
  1636                           ; 4 bytes @ 0x2C
  1637  004C                     	ds	4
  1638  0050                     xvprintf@f:	
  1639                           
  1640                           ; 2 bytes @ 0x30
  1641  0050                     	ds	2
  1642  0052                     xvprintf@i:	
  1643                           
  1644                           ; 2 bytes @ 0x32
  1645  0052                     	ds	2
  1646  0054                     xvprintf@d:	
  1647                           
  1648                           ; 1 bytes @ 0x34
  1649  0054                     	ds	1
  1650  0055                     xvprintf@c:	
  1651                           
  1652                           ; 1 bytes @ 0x35
  1653  0055                     	ds	1
  1654  0056                     ?_xprintf:	
  1655  0056                     xprintf@fmt:	
  1656                           ; 1 bytes @ 0x36
  1657                           
  1658                           
  1659                           ; 2 bytes @ 0x36
  1660  0056                     	ds	10
  1661  0060                     ??_xprintf:	
  1662                           
  1663                           ; 1 bytes @ 0x40
  1664  0060                     	ds	1
  1665  0061                     xprintf@arp:	
  1666                           
  1667                           ; 1 bytes @ 0x41
  1668  0061                     	ds	1
  1669  0062                     ??_main:	
  1670                           
  1671                           ; 1 bytes @ 0x42
  1672  0062                     	ds	8
  1673                           
  1674                           	psect	maintext
  1675  047F                     __pmaintext:	
  1676 ;;
  1677 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1678 ;;
  1679 ;; *************** function _main *****************
  1680 ;; Defined at:
  1681 ;;		line 12 in file "main.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  resultdata      4    4[BANK1 ] unsigned char [4]
  1686 ;;  testdata        4    0[BANK1 ] unsigned char [4]
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      char 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : B1F/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1696 ;;      Params:         0       0       0       0       0       0
  1697 ;;      Locals:         0       0       8       0       0       0
  1698 ;;      Temps:          0       8       0       0       0       0
  1699 ;;      Totals:         0       8       8       0       0       0
  1700 ;;Total ram usage:       16 bytes
  1701 ;; Hardware stack levels required when called:    9
  1702 ;; This function calls:
  1703 ;;		_Basic_Init
  1704 ;;		_I2C_Init
  1705 ;;		_I2C_Receive
  1706 ;;		_I2C_Transmit
  1707 ;;		_LCD_CursorPosition
  1708 ;;		_LCD_Init
  1709 ;;		_xprintf
  1710 ;; This function is called by:
  1711 ;;		Startup code after reset
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _main
  1717  047F                     _main:	
  1718                           
  1719                           ;main.c: 14: Basic_Init();
  1720                           
  1721                           ;incstack = 0
  1722                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1723  047F  318F  27BB  3184   	fcall	_Basic_Init
  1724                           
  1725                           ;main.c: 15: I2C_Init(I2C2_MODULE,0x56,I2C_MODE_SLAVE,I2C_SPEED_STANDARD);
  1726  0482  3056               	movlw	86
  1727  0483  0020               	movlb	0	; select bank0
  1728  0484  00E2               	movwf	??_main
  1729  0485  0862               	movf	??_main,w
  1730  0486  00F7               	movwf	I2C_Init@address
  1731  0487  01F8               	clrf	I2C_Init@mode
  1732  0488  0AF8               	incf	I2C_Init@mode,f
  1733  0489  01F9               	clrf	I2C_Init@Speed
  1734  048A  3001               	movlw	1
  1735  048B  3187  27CD  3184   	fcall	_I2C_Init
  1736                           
  1737                           ;main.c: 16: LCD_Init();
  1738  048E  3184  24F8  3184   	fcall	_LCD_Init
  1739                           
  1740                           ;main.c: 17: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  1741  0491  3067               	movlw	low _LCD_Put
  1742  0492  0020               	movlb	0	; select bank0
  1743  0493  00EC               	movwf	_xfunc_out
  1744  0494  300F               	movlw	high _LCD_Put
  1745  0495  00ED               	movwf	_xfunc_out+1
  1746                           
  1747                           ;main.c: 19: uint8_t testdata[4]={
  1748                           ;main.c: 20: 19,98,05,06
  1749                           ;main.c: 21: };
  1750  0496  0021               	movlb	1	; select bank1
  1751  0497  0857               	movf	(main@F3055+3)^(0+128),w
  1752  0498  00CF               	movwf	(main@testdata+3)^(0+128)
  1753  0499  0856               	movf	(main@F3055+2)^(0+128),w
  1754  049A  00CE               	movwf	(main@testdata+2)^(0+128)
  1755  049B  0855               	movf	(main@F3055+1)^(0+128),w
  1756  049C  00CD               	movwf	(main@testdata+1)^(0+128)
  1757  049D  0854               	movf	main@F3055^(0+128),w
  1758  049E  00CC               	movwf	main@testdata^(0+128)
  1759  049F                     l3475:	
  1760                           ;main.c: 22: uint8_t resultdata[4];
  1761                           ;main.c: 24: while(1)
  1762                           
  1763                           
  1764                           ;main.c: 25: {
  1765                           ;main.c: 26: resultdata[0] = I2C_Transmit(I2C2_MODULE,0x56,testdata,4);
  1766  049F  3056               	movlw	86
  1767  04A0  0020               	movlb	0	; select bank0
  1768  04A1  00E2               	movwf	??_main
  1769  04A2  0862               	movf	??_main,w
  1770  04A3  00A0               	movwf	I2C_Transmit@address
  1771  04A4  30CC               	movlw	(low (main@testdata| 0))& (0+255)
  1772  04A5  00E3               	movwf	??_main+1
  1773  04A6  0863               	movf	??_main+1,w
  1774  04A7  00A1               	movwf	I2C_Transmit@pData
  1775  04A8  3004               	movlw	4
  1776  04A9  00E4               	movwf	??_main+2
  1777  04AA  0864               	movf	??_main+2,w
  1778  04AB  00A2               	movwf	I2C_Transmit@size
  1779  04AC  3001               	movlw	1
  1780  04AD  3187  27A2  3184   	fcall	_I2C_Transmit
  1781  04B0  0020               	movlb	0	; select bank0
  1782  04B1  00E5               	movwf	??_main+3
  1783  04B2  0865               	movf	??_main+3,w
  1784  04B3  0021               	movlb	1	; select bank1
  1785  04B4  00D0               	movwf	main@resultdata^(0+128)
  1786                           
  1787                           ;main.c: 27: I2C_Receive(I2C2_MODULE,0x56,resultdata,4);
  1788  04B5  3056               	movlw	86
  1789  04B6  0020               	movlb	0	; select bank0
  1790  04B7  00E2               	movwf	??_main
  1791  04B8  0862               	movf	??_main,w
  1792  04B9  00A0               	movwf	I2C_Receive@address
  1793  04BA  30D0               	movlw	(low (main@resultdata| 0))& (0+255)
  1794  04BB  00E3               	movwf	??_main+1
  1795  04BC  0863               	movf	??_main+1,w
  1796  04BD  00A1               	movwf	I2C_Receive@pData
  1797  04BE  3004               	movlw	4
  1798  04BF  00E4               	movwf	??_main+2
  1799  04C0  0864               	movf	??_main+2,w
  1800  04C1  00A2               	movwf	I2C_Receive@size
  1801  04C2  3001               	movlw	1
  1802  04C3  3187  2776  3184   	fcall	_I2C_Receive
  1803                           
  1804                           ;main.c: 28: LCD_CursorPosition(0,0);
  1805  04C6  01F5               	clrf	LCD_CursorPosition@ty
  1806  04C7  3000               	movlw	0
  1807  04C8  318F  27D0  3184   	fcall	_LCD_CursorPosition
  1808                           
  1809                           ;main.c: 29: xprintf("%d %d %d %d",resultdata[0],resultdata[1],resultdata[2],resultdata[
      +                          3]);
  1810  04CB  30F7               	movlw	low (STR_1| (0+32768))
  1811  04CC  0020               	movlb	0	; select bank0
  1812  04CD  00D6               	movwf	xprintf@fmt
  1813  04CE  3087               	movlw	high (STR_1| (0+32768))
  1814  04CF  00D7               	movwf	xprintf@fmt+1
  1815  04D0  0021               	movlb	1	; select bank1
  1816  04D1  0850               	movf	main@resultdata^(0+128),w
  1817  04D2  0020               	movlb	0	; select bank0
  1818  04D3  00E2               	movwf	??_main
  1819  04D4  01E3               	clrf	??_main+1
  1820  04D5  0862               	movf	??_main,w
  1821  04D6  00D8               	movwf	?_xprintf+2
  1822  04D7  0863               	movf	??_main+1,w
  1823  04D8  00D9               	movwf	?_xprintf+3
  1824  04D9  0021               	movlb	1	; select bank1
  1825  04DA  0851               	movf	(main@resultdata^(0+128)+1),w
  1826  04DB  0020               	movlb	0	; select bank0
  1827  04DC  00E4               	movwf	??_main+2
  1828  04DD  01E5               	clrf	??_main+3
  1829  04DE  0864               	movf	??_main+2,w
  1830  04DF  00DA               	movwf	?_xprintf+4
  1831  04E0  0865               	movf	??_main+3,w
  1832  04E1  00DB               	movwf	?_xprintf+5
  1833  04E2  0021               	movlb	1	; select bank1
  1834  04E3  0852               	movf	(main@resultdata^(0+128)+2),w
  1835  04E4  0020               	movlb	0	; select bank0
  1836  04E5  00E6               	movwf	??_main+4
  1837  04E6  01E7               	clrf	??_main+5
  1838  04E7  0866               	movf	??_main+4,w
  1839  04E8  00DC               	movwf	?_xprintf+6
  1840  04E9  0867               	movf	??_main+5,w
  1841  04EA  00DD               	movwf	?_xprintf+7
  1842  04EB  0021               	movlb	1	; select bank1
  1843  04EC  0853               	movf	(main@resultdata^(0+128)+3),w
  1844  04ED  0020               	movlb	0	; select bank0
  1845  04EE  00E8               	movwf	??_main+6
  1846  04EF  01E9               	clrf	??_main+7
  1847  04F0  0868               	movf	??_main+6,w
  1848  04F1  00DE               	movwf	?_xprintf+8
  1849  04F2  0869               	movf	??_main+7,w
  1850  04F3  00DF               	movwf	?_xprintf+9
  1851  04F4  318F  2798  3184   	fcall	_xprintf
  1852  04F7  2C9F               	goto	l3475
  1853  04F8                     __end_of_main:	
  1854                           ;main.c: 30: }
  1855                           ;main.c: 31: return 0;
  1856                           ;	Return value of _main is never used
  1857                           
  1858                           
  1859                           	psect	text1
  1860  0F98                     __ptext1:	
  1861 ;; *************** function _xprintf *****************
  1862 ;; Defined at:
  1863 ;;		line 165 in file "xprintf.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  fmt             2   54[BANK0 ] PTR const unsigned char 
  1866 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  1867 ;;		 -> STR_1(12), 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  arp             1   65[BANK0 ] PTR void [1]
  1870 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1880 ;;      Params:         0      10       0       0       0       0
  1881 ;;      Locals:         0       1       0       0       0       0
  1882 ;;      Temps:          0       1       0       0       0       0
  1883 ;;      Totals:         0      12       0       0       0       0
  1884 ;;Total ram usage:       12 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    8
  1887 ;; This function calls:
  1888 ;;		_xvprintf
  1889 ;; This function is called by:
  1890 ;;		_main
  1891 ;;		_put_dump
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           
  1896                           ;psect for function _xprintf
  1897  0F98                     _xprintf:	
  1898                           
  1899                           ;xprintf.c: 170: va_list arp;
  1900                           ;xprintf.c: 173: *arp = __va_start();
  1901                           
  1902                           ;incstack = 0
  1903                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1904  0F98  3058               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  1905  0F99  0020               	movlb	0	; select bank0
  1906  0F9A  00E0               	movwf	??_xprintf
  1907  0F9B  0860               	movf	??_xprintf,w
  1908  0F9C  00E1               	movwf	xprintf@arp
  1909                           
  1910                           ;xprintf.c: 174: xvprintf(fmt, arp);
  1911  0F9D  0857               	movf	xprintf@fmt+1,w
  1912  0F9E  00A7               	movwf	xvprintf@fmt+1
  1913  0F9F  0856               	movf	xprintf@fmt,w
  1914  0FA0  00A6               	movwf	xvprintf@fmt
  1915  0FA1  3061               	movlw	(low (xprintf@arp| 0))& (0+255)
  1916  0FA2  00E0               	movwf	??_xprintf
  1917  0FA3  0860               	movf	??_xprintf,w
  1918  0FA4  00A8               	movwf	xvprintf@arp
  1919  0FA5  3180  2037         	fcall	_xvprintf
  1920  0FA7  0008               	return
  1921  0FA8                     __end_of_xprintf:	
  1922                           
  1923                           	psect	text2
  1924  0037                     __ptext2:	
  1925 ;; *************** function _xvprintf *****************
  1926 ;; Defined at:
  1927 ;;		line 88 in file "xprintf.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  fmt             2    6[BANK0 ] PTR const unsigned char 
  1930 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  1931 ;;		 -> STR_1(12), 
  1932 ;;  arp             1    8[BANK0 ] PTR PTR void 
  1933 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  s              16   13[BANK0 ] unsigned char [16]
  1936 ;;  v               4   44[BANK0 ] unsigned long 
  1937 ;;  i               2   50[BANK0 ] unsigned int 
  1938 ;;  f               2   48[BANK0 ] unsigned int 
  1939 ;;  j               2   42[BANK0 ] unsigned int 
  1940 ;;  w               2   40[BANK0 ] unsigned int 
  1941 ;;  r               2   38[BANK0 ] unsigned int 
  1942 ;;  c               1   53[BANK0 ] unsigned char 
  1943 ;;  d               1   52[BANK0 ] unsigned char 
  1944 ;;  p               1   37[BANK0 ] PTR unsigned char 
  1945 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1955 ;;      Params:         0       3       0       0       0       0
  1956 ;;      Locals:         0      41       0       0       0       0
  1957 ;;      Temps:          0       4       0       0       0       0
  1958 ;;      Totals:         0      48       0       0       0       0
  1959 ;;Total ram usage:       48 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    7
  1962 ;; This function calls:
  1963 ;;		___lldiv
  1964 ;;		___llmod
  1965 ;;		___wmul
  1966 ;;		_xputc
  1967 ;;		_xputs
  1968 ;; This function is called by:
  1969 ;;		_xprintf
  1970 ;;		_xsprintf
  1971 ;;		_xfprintf
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           
  1976                           ;psect for function _xvprintf
  1977  0037                     _xvprintf:	
  1978  0037                     l134:	
  1979                           ;incstack = 0
  1980                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1981                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  1982                           ;xprintf.c: 94: unsigned long v;
  1983                           ;xprintf.c: 95: char s[16], c, d, *p;
  1984                           ;xprintf.c: 98: for (;;) {
  1985                           
  1986                           
  1987                           ;xprintf.c: 99: c = *fmt++;
  1988  0037  0020               	movlb	0	; select bank0
  1989  0038  0826               	movf	xvprintf@fmt,w
  1990  0039  0084               	movwf	4
  1991  003A  0827               	movf	xvprintf@fmt+1,w
  1992  003B  0085               	movwf	5
  1993  003C  0800               	movf	0,w	;code access
  1994  003D  00A9               	movwf	??_xvprintf
  1995  003E  0829               	movf	??_xvprintf,w
  1996  003F  00D5               	movwf	xvprintf@c
  1997  0040  3001               	movlw	1
  1998  0041  07A6               	addwf	xvprintf@fmt,f
  1999  0042  3000               	movlw	0
  2000  0043  3DA7               	addwfc	xvprintf@fmt+1,f
  2001                           
  2002                           ;xprintf.c: 100: if (!c) break;
  2003  0044  0855               	movf	xvprintf@c,w
  2004  0045  1903               	btfsc	3,2
  2005  0046  0008               	return
  2006                           
  2007                           ;xprintf.c: 101: if (c != '%') {
  2008  0047  3025               	movlw	37
  2009  0048  0655               	xorwf	xvprintf@c,w
  2010  0049  1903               	btfsc	3,2
  2011  004A  2850               	goto	l3071
  2012                           
  2013                           ;xprintf.c: 102: xputc(c); continue;
  2014  004B  0855               	movf	xvprintf@c,w
  2015  004C  3187  2749  3180   	fcall	_xputc
  2016  004F  2837               	goto	l134
  2017  0050                     l3071:	
  2018                           
  2019                           ;xprintf.c: 103: }
  2020                           ;xprintf.c: 104: f = 0;
  2021  0050  0020               	movlb	0	; select bank0
  2022  0051  01D0               	clrf	xvprintf@f
  2023  0052  01D1               	clrf	xvprintf@f+1
  2024                           
  2025                           ;xprintf.c: 105: c = *fmt++;
  2026  0053  0826               	movf	xvprintf@fmt,w
  2027  0054  0084               	movwf	4
  2028  0055  0827               	movf	xvprintf@fmt+1,w
  2029  0056  0085               	movwf	5
  2030  0057  0800               	movf	0,w	;code access
  2031  0058  00A9               	movwf	??_xvprintf
  2032  0059  0829               	movf	??_xvprintf,w
  2033  005A  00D5               	movwf	xvprintf@c
  2034  005B  3001               	movlw	1
  2035  005C  07A6               	addwf	xvprintf@fmt,f
  2036  005D  3000               	movlw	0
  2037  005E  3DA7               	addwfc	xvprintf@fmt+1,f
  2038                           
  2039                           ;xprintf.c: 106: if (c == '0') {
  2040  005F  3030               	movlw	48
  2041  0060  0655               	xorwf	xvprintf@c,w
  2042  0061  1D03               	btfss	3,2
  2043  0062  2865               	goto	l3085
  2044                           
  2045                           ;xprintf.c: 107: f = 1; c = *fmt++;
  2046  0063  3001               	movlw	1
  2047  0064  286A               	goto	L6
  2048  0065                     l3085:	
  2049                           ;xprintf.c: 108: } else {
  2050                           
  2051                           
  2052                           ;xprintf.c: 109: if (c == '-') {
  2053  0065  302D               	movlw	45
  2054  0066  0655               	xorwf	xvprintf@c,w
  2055  0067  1D03               	btfss	3,2
  2056  0068  2879               	goto	l3093
  2057                           
  2058                           ;xprintf.c: 110: f = 2; c = *fmt++;
  2059  0069  3002               	movlw	2
  2060  006A                     L6:	
  2061  006A  00D0               	movwf	xvprintf@f
  2062  006B  3000               	movlw	0
  2063  006C  00D1               	movwf	xvprintf@f+1
  2064  006D  0826               	movf	xvprintf@fmt,w
  2065  006E  0084               	movwf	4
  2066  006F  0827               	movf	xvprintf@fmt+1,w
  2067  0070  0085               	movwf	5
  2068  0071  0800               	movf	0,w	;code access
  2069  0072  00A9               	movwf	??_xvprintf
  2070  0073  0829               	movf	??_xvprintf,w
  2071  0074  00D5               	movwf	xvprintf@c
  2072  0075  3001               	movlw	1
  2073  0076  07A6               	addwf	xvprintf@fmt,f
  2074  0077  3000               	movlw	0
  2075  0078  3DA7               	addwfc	xvprintf@fmt+1,f
  2076  0079                     l3093:	
  2077                           
  2078                           ;xprintf.c: 111: }
  2079                           ;xprintf.c: 112: }
  2080                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  2081  0079  01C8               	clrf	xvprintf@w
  2082  007A  01C9               	clrf	xvprintf@w+1
  2083  007B  28A3               	goto	l3101
  2084  007C                     l3095:	
  2085                           
  2086                           ;xprintf.c: 114: w = w * 10 + c - '0';
  2087  007C  0855               	movf	xvprintf@c,w
  2088  007D  00A9               	movwf	??_xvprintf
  2089  007E  01AA               	clrf	??_xvprintf+1
  2090  007F  0849               	movf	xvprintf@w+1,w
  2091  0080  00F3               	movwf	___wmul@multiplier+1
  2092  0081  0848               	movf	xvprintf@w,w
  2093  0082  00F2               	movwf	___wmul@multiplier
  2094  0083  300A               	movlw	10
  2095  0084  00F4               	movwf	___wmul@multiplicand
  2096  0085  3000               	movlw	0
  2097  0086  00F5               	movwf	___wmul@multiplicand+1
  2098  0087  318F  27E5  3180   	fcall	___wmul
  2099  008A  0020               	movlb	0	; select bank0
  2100  008B  0829               	movf	??_xvprintf,w
  2101  008C  0772               	addwf	?___wmul,w
  2102  008D  00AB               	movwf	??_xvprintf+2
  2103  008E  082A               	movf	??_xvprintf+1,w
  2104  008F  3D73               	addwfc	?___wmul+1,w
  2105  0090  00AC               	movwf	??_xvprintf+3
  2106  0091  082B               	movf	??_xvprintf+2,w
  2107  0092  3ED0               	addlw	208
  2108  0093  00C8               	movwf	xvprintf@w
  2109  0094  30FF               	movlw	255
  2110  0095  3D2C               	addwfc	??_xvprintf+3,w
  2111  0096  00C9               	movwf	xvprintf@w+1
  2112  0097  0826               	movf	xvprintf@fmt,w
  2113  0098  0084               	movwf	4
  2114  0099  0827               	movf	xvprintf@fmt+1,w
  2115  009A  0085               	movwf	5
  2116  009B  0800               	movf	0,w	;code access
  2117  009C  00A9               	movwf	??_xvprintf
  2118  009D  0829               	movf	??_xvprintf,w
  2119  009E  00D5               	movwf	xvprintf@c
  2120  009F  3001               	movlw	1
  2121  00A0  07A6               	addwf	xvprintf@fmt,f
  2122  00A1  3000               	movlw	0
  2123  00A2  3DA7               	addwfc	xvprintf@fmt+1,f
  2124  00A3                     l3101:	
  2125  00A3  3030               	movlw	48
  2126  00A4  0255               	subwf	xvprintf@c,w
  2127  00A5  1C03               	skipc
  2128  00A6  28AB               	goto	l3105
  2129  00A7  303A               	movlw	58
  2130  00A8  0255               	subwf	xvprintf@c,w
  2131  00A9  1C03               	skipc
  2132  00AA  287C               	goto	l3095
  2133  00AB                     l3105:	
  2134                           
  2135                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  2136  00AB  306C               	movlw	108
  2137  00AC  0655               	xorwf	xvprintf@c,w
  2138  00AD  1903               	btfsc	3,2
  2139  00AE  28B3               	goto	l149
  2140  00AF  304C               	movlw	76
  2141  00B0  0655               	xorwf	xvprintf@c,w
  2142  00B1  1D03               	btfss	3,2
  2143  00B2  28C0               	goto	l3113
  2144  00B3                     l149:	
  2145                           
  2146                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  2147  00B3  1550               	bsf	xvprintf@f,2
  2148  00B4  0826               	movf	xvprintf@fmt,w
  2149  00B5  0084               	movwf	4
  2150  00B6  0827               	movf	xvprintf@fmt+1,w
  2151  00B7  0085               	movwf	5
  2152  00B8  0800               	movf	0,w	;code access
  2153  00B9  00A9               	movwf	??_xvprintf
  2154  00BA  0829               	movf	??_xvprintf,w
  2155  00BB  00D5               	movwf	xvprintf@c
  2156  00BC  3001               	movlw	1
  2157  00BD  07A6               	addwf	xvprintf@fmt,f
  2158  00BE  3000               	movlw	0
  2159  00BF  3DA7               	addwfc	xvprintf@fmt+1,f
  2160  00C0                     l3113:	
  2161                           
  2162                           ;xprintf.c: 117: }
  2163                           ;xprintf.c: 118: if (!c) break;
  2164  00C0  0855               	movf	xvprintf@c,w
  2165  00C1  1903               	btfsc	3,2
  2166  00C2  0008               	return
  2167                           
  2168                           ;xprintf.c: 119: d = c;
  2169  00C3  0855               	movf	xvprintf@c,w
  2170  00C4  00A9               	movwf	??_xvprintf
  2171  00C5  0829               	movf	??_xvprintf,w
  2172  00C6  00D4               	movwf	xvprintf@d
  2173                           
  2174                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  2175  00C7  3061               	movlw	97
  2176  00C8  0254               	subwf	xvprintf@d,w
  2177  00C9  1C03               	skipc
  2178  00CA  2936               	goto	l3155
  2179  00CB  3020               	movlw	32
  2180  00CC  02D4               	subwf	xvprintf@d,f
  2181                           
  2182                           ;xprintf.c: 121: switch (d) {
  2183  00CD  2936               	goto	l3155
  2184  00CE                     l3121:	
  2185                           ;xprintf.c: 122: case 'S' :
  2186                           
  2187                           
  2188                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  2189  00CE  0828               	movf	xvprintf@arp,w
  2190  00CF  0086               	movwf	6
  2191  00D0  0187               	clrf	7
  2192  00D1  3F40               	moviw [0]fsr1
  2193  00D2  0084               	movwf	4
  2194  00D3  0185               	clrf	5
  2195  00D4  0A81               	incf	1,f
  2196  00D5  0800               	movf	0,w
  2197  00D6  00A9               	movwf	??_xvprintf
  2198  00D7  0829               	movf	??_xvprintf,w
  2199  00D8  00C5               	movwf	xvprintf@p
  2200                           
  2201                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  2202  00D9  01CA               	clrf	xvprintf@j
  2203  00DA  01CB               	clrf	xvprintf@j+1
  2204  00DB                     l3127:	
  2205  00DB  084A               	movf	xvprintf@j,w
  2206  00DC  0745               	addwf	xvprintf@p,w
  2207  00DD  00A9               	movwf	??_xvprintf
  2208  00DE  0829               	movf	??_xvprintf,w
  2209  00DF  0086               	movwf	6
  2210  00E0  0187               	clrf	7
  2211  00E1  0801               	movf	1,w
  2212  00E2  1903               	btfsc	3,2
  2213  00E3  28ED               	goto	l3131
  2214  00E4  3001               	movlw	1
  2215  00E5  07CA               	addwf	xvprintf@j,f
  2216  00E6  3000               	movlw	0
  2217  00E7  3DCB               	addwfc	xvprintf@j+1,f
  2218  00E8  28DB               	goto	l3127
  2219  00E9                     l3129:	
  2220                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  2221                           
  2222  00E9  3020               	movlw	32
  2223  00EA  3187  2749  3180   	fcall	_xputc
  2224  00ED                     l3131:	
  2225  00ED  0020               	movlb	0	; select bank0
  2226  00EE  18D0               	btfsc	xvprintf@f,1
  2227  00EF  28FF               	goto	l3135
  2228  00F0  084B               	movf	xvprintf@j+1,w
  2229  00F1  00AA               	movwf	??_xvprintf+1
  2230  00F2  084A               	movf	xvprintf@j,w
  2231  00F3  00A9               	movwf	??_xvprintf
  2232  00F4  0ACA               	incf	xvprintf@j,f
  2233  00F5  1903               	skipnz
  2234  00F6  0ACB               	incf	xvprintf@j+1,f
  2235  00F7  0849               	movf	xvprintf@w+1,w
  2236  00F8  022A               	subwf	??_xvprintf+1,w
  2237  00F9  1D03               	skipz
  2238  00FA  28FD               	goto	u3305
  2239  00FB  0848               	movf	xvprintf@w,w
  2240  00FC  0229               	subwf	??_xvprintf,w
  2241  00FD                     u3305:	
  2242  00FD  1C03               	skipc
  2243  00FE  28E9               	goto	l3129
  2244  00FF                     l3135:	
  2245                           
  2246                           ;xprintf.c: 126: xputs(p);
  2247  00FF  0845               	movf	xvprintf@p,w
  2248  0100  318F  27A8  3180   	fcall	_xputs
  2249  0103                     l3139:	
  2250                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  2251                           
  2252  0103  0020               	movlb	0	; select bank0
  2253  0104  084B               	movf	xvprintf@j+1,w
  2254  0105  00AA               	movwf	??_xvprintf+1
  2255  0106  084A               	movf	xvprintf@j,w
  2256  0107  00A9               	movwf	??_xvprintf
  2257  0108  0ACA               	incf	xvprintf@j,f
  2258  0109  1903               	skipnz
  2259  010A  0ACB               	incf	xvprintf@j+1,f
  2260  010B  0849               	movf	xvprintf@w+1,w
  2261  010C  022A               	subwf	??_xvprintf+1,w
  2262  010D  1D03               	skipz
  2263  010E  2911               	goto	u3315
  2264  010F  0848               	movf	xvprintf@w,w
  2265  0110  0229               	subwf	??_xvprintf,w
  2266  0111                     u3315:	
  2267  0111  1803               	btfsc	3,0
  2268  0112  2837               	goto	l134
  2269  0113  3020               	movlw	32
  2270  0114  3187  2749  3180   	fcall	_xputc
  2271  0117  2903               	goto	l3139
  2272  0118                     l3141:	
  2273                           ;xprintf.c: 129: case 'C' :
  2274                           
  2275                           ;xprintf.c: 128: continue;
  2276                           
  2277                           
  2278                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  2279  0118  0828               	movf	xvprintf@arp,w
  2280  0119  0086               	movwf	6
  2281  011A  0187               	clrf	7
  2282  011B  0801               	movf	1,w
  2283  011C  0084               	movwf	4
  2284  011D  0185               	clrf	5
  2285  011E  3002               	movlw	2
  2286  011F  0781               	addwf	1,f
  2287  0120  0800               	movf	0,w
  2288  0121  3187  2749  3180   	fcall	_xputc
  2289  0124  2837               	goto	l134
  2290  0125                     l3143:	
  2291                           ;xprintf.c: 131: case 'B' :
  2292                           
  2293                           
  2294                           ;xprintf.c: 132: r = 2; break;
  2295  0125  3002               	movlw	2
  2296  0126  0020               	movlb	0	; select bank0
  2297  0127  292D               	goto	L3
  2298  0128                     l3145:	
  2299                           ;xprintf.c: 133: case 'O' :
  2300                           
  2301                           
  2302                           ;xprintf.c: 134: r = 8; break;
  2303  0128  3008               	movlw	8
  2304  0129  292D               	goto	L3
  2305  012A                     l3147:	
  2306                           ;xprintf.c: 135: case 'D' :
  2307                           
  2308                           
  2309                           ;xprintf.c: 136: case 'U' :
  2310                           ;xprintf.c: 137: r = 10; break;
  2311  012A  300A               	movlw	10
  2312  012B  292D               	goto	L3
  2313  012C                     l3149:	
  2314                           ;xprintf.c: 138: case 'X' :
  2315                           
  2316                           
  2317                           ;xprintf.c: 139: r = 16; break;
  2318  012C  3010               	movlw	16
  2319  012D                     L3:	
  2320  012D  00C6               	movwf	xvprintf@r
  2321  012E  3000               	movlw	0
  2322  012F  00C7               	movwf	xvprintf@r+1
  2323  0130  294E               	goto	l167
  2324  0131                     l3151:	
  2325                           ;xprintf.c: 140: default:
  2326                           
  2327                           
  2328                           ;xprintf.c: 141: xputc(c); continue;
  2329  0131  0855               	movf	xvprintf@c,w
  2330  0132  3187  2749  3180   	fcall	_xputc
  2331  0135  2837               	goto	l134
  2332  0136                     l3155:	
  2333                           ;xprintf.c: 142: }
  2334                           
  2335  0136  0020               	movlb	0	; select bank0
  2336  0137  0854               	movf	xvprintf@d,w
  2337                           
  2338                           ; Switch size 1, requested type "space"
  2339                           ; Number of cases is 7, Range of values is 66 to 88
  2340                           ; switch strategies available:
  2341                           ; Name         Instructions Cycles
  2342                           ; simple_byte           22    12 (average)
  2343                           ; direct_byte           55     9 (fixed)
  2344                           ; jumptable            263     9 (fixed)
  2345                           ;	Chosen strategy is simple_byte
  2346  0138  3A42               	xorlw	66	; case 66
  2347  0139  1903               	skipnz
  2348  013A  2925               	goto	l3143
  2349  013B  3A01               	xorlw	1	; case 67
  2350  013C  1903               	skipnz
  2351  013D  2918               	goto	l3141
  2352  013E  3A07               	xorlw	7	; case 68
  2353  013F  1903               	skipnz
  2354  0140  292A               	goto	l3147
  2355  0141  3A0B               	xorlw	11	; case 79
  2356  0142  1903               	skipnz
  2357  0143  2928               	goto	l3145
  2358  0144  3A1C               	xorlw	28	; case 83
  2359  0145  1903               	skipnz
  2360  0146  28CE               	goto	l3121
  2361  0147  3A06               	xorlw	6	; case 85
  2362  0148  1903               	skipnz
  2363  0149  292A               	goto	l3147
  2364  014A  3A0D               	xorlw	13	; case 88
  2365  014B  1903               	skipnz
  2366  014C  292C               	goto	l3149
  2367  014D  2931               	goto	l3151
  2368  014E                     l167:	
  2369                           
  2370                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  2371  014E  0020               	movlb	0	; select bank0
  2372  014F  1950               	btfsc	xvprintf@f,2
  2373  0150  2986               	goto	l3165
  2374  0151  3044               	movlw	68
  2375  0152  0654               	xorwf	xvprintf@d,w
  2376  0153  1903               	btfsc	3,2
  2377  0154  2968               	goto	l3161
  2378  0155  0828               	movf	xvprintf@arp,w
  2379  0156  0086               	movwf	6
  2380  0157  0187               	clrf	7
  2381  0158  0801               	movf	1,w
  2382  0159  0084               	movwf	4
  2383  015A  0185               	clrf	5
  2384  015B  3002               	movlw	2
  2385  015C  0781               	addwf	1,f
  2386  015D  3F00               	moviw [0]fsr0
  2387  015E  00A9               	movwf	??_xvprintf
  2388  015F  3F01               	moviw [1]fsr0
  2389  0160  00AA               	movwf	??_xvprintf+1
  2390  0161  0829               	movf	??_xvprintf,w
  2391  0162  00BD               	movwf	_xvprintf$272
  2392  0163  082A               	movf	??_xvprintf+1,w
  2393  0164  00BE               	movwf	_xvprintf$272+1
  2394  0165  01BF               	clrf	_xvprintf$272+2
  2395  0166  01C0               	clrf	_xvprintf$272+3
  2396  0167  297D               	goto	l3163
  2397  0168                     l3161:	
  2398  0168  0828               	movf	xvprintf@arp,w
  2399  0169  0086               	movwf	6
  2400  016A  0187               	clrf	7
  2401  016B  0801               	movf	1,w
  2402  016C  0084               	movwf	4
  2403  016D  0185               	clrf	5
  2404  016E  3002               	movlw	2
  2405  016F  0781               	addwf	1,f
  2406  0170  3F00               	moviw [0]fsr0
  2407  0171  00A9               	movwf	??_xvprintf
  2408  0172  3F01               	moviw [1]fsr0
  2409  0173  00AA               	movwf	??_xvprintf+1
  2410  0174  0829               	movf	??_xvprintf,w
  2411  0175  00BD               	movwf	_xvprintf$272
  2412  0176  082A               	movf	??_xvprintf+1,w
  2413  0177  00BE               	movwf	_xvprintf$272+1
  2414  0178  0D89               	rlf	9,f
  2415  0179  3B89               	subwfb	9,f
  2416  017A  0989               	comf	9,f
  2417  017B  00BF               	movwf	_xvprintf$272+2
  2418  017C  00C0               	movwf	_xvprintf$272+3
  2419  017D                     l3163:	
  2420  017D  0840               	movf	_xvprintf$272+3,w
  2421  017E  00CF               	movwf	xvprintf@v+3
  2422  017F  083F               	movf	_xvprintf$272+2,w
  2423  0180  00CE               	movwf	xvprintf@v+2
  2424  0181  083E               	movf	_xvprintf$272+1,w
  2425  0182  00CD               	movwf	xvprintf@v+1
  2426  0183  083D               	movf	_xvprintf$272,w
  2427  0184  00CC               	movwf	xvprintf@v
  2428  0185  2996               	goto	l3167
  2429  0186                     l3165:	
  2430  0186  0828               	movf	xvprintf@arp,w
  2431  0187  0086               	movwf	6
  2432  0188  0187               	clrf	7
  2433  0189  0801               	movf	1,w
  2434  018A  0084               	movwf	4
  2435  018B  0185               	clrf	5
  2436  018C  3004               	movlw	4
  2437  018D  0781               	addwf	1,f
  2438  018E  3F00               	moviw [0]fsr0
  2439  018F  00CC               	movwf	xvprintf@v
  2440  0190  3F01               	moviw [1]fsr0
  2441  0191  00CD               	movwf	xvprintf@v+1
  2442  0192  3F02               	moviw [2]fsr0
  2443  0193  00CE               	movwf	xvprintf@v+2
  2444  0194  3F03               	moviw [3]fsr0
  2445  0195  00CF               	movwf	xvprintf@v+3
  2446  0196                     l3167:	
  2447                           
  2448                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  2449  0196  3044               	movlw	68
  2450  0197  0654               	xorwf	xvprintf@d,w
  2451  0198  1903               	btfsc	3,2
  2452  0199  1FCF               	btfss	xvprintf@v+3,7
  2453  019A  29A7               	goto	l3173
  2454                           
  2455                           ;xprintf.c: 147: v = 0 - v;
  2456  019B  09CC               	comf	xvprintf@v,f
  2457  019C  09CD               	comf	xvprintf@v+1,f
  2458  019D  09CE               	comf	xvprintf@v+2,f
  2459  019E  09CF               	comf	xvprintf@v+3,f
  2460  019F  0ACC               	incf	xvprintf@v,f
  2461  01A0  1903               	skipnz
  2462  01A1  0ACD               	incf	xvprintf@v+1,f
  2463  01A2  1903               	skipnz
  2464  01A3  0ACE               	incf	xvprintf@v+2,f
  2465  01A4  1903               	skipnz
  2466  01A5  0ACF               	incf	xvprintf@v+3,f
  2467                           
  2468                           ;xprintf.c: 148: f |= 8;
  2469  01A6  15D0               	bsf	xvprintf@f,3
  2470  01A7                     l3173:	
  2471                           
  2472                           ;xprintf.c: 149: }
  2473                           ;xprintf.c: 150: i = 0;
  2474  01A7  01D2               	clrf	xvprintf@i
  2475  01A8  01D3               	clrf	xvprintf@i+1
  2476  01A9                     l3175:	
  2477                           ;xprintf.c: 151: do {
  2478                           
  2479                           
  2480                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  2481  01A9  0846               	movf	xvprintf@r,w
  2482  01AA  00F2               	movwf	___llmod@divisor
  2483  01AB  0847               	movf	xvprintf@r+1,w
  2484  01AC  00F3               	movwf	___llmod@divisor+1
  2485  01AD  01F4               	clrf	___llmod@divisor+2
  2486  01AE  01F5               	clrf	___llmod@divisor+3
  2487  01AF  084F               	movf	xvprintf@v+3,w
  2488  01B0  00F9               	movwf	___llmod@dividend+3
  2489  01B1  084E               	movf	xvprintf@v+2,w
  2490  01B2  00F8               	movwf	___llmod@dividend+2
  2491  01B3  084D               	movf	xvprintf@v+1,w
  2492  01B4  00F7               	movwf	___llmod@dividend+1
  2493  01B5  084C               	movf	xvprintf@v,w
  2494  01B6  00F6               	movwf	___llmod@dividend
  2495  01B7  3186  265C  3180   	fcall	___llmod
  2496  01BA  0872               	movf	?___llmod,w
  2497  01BB  0020               	movlb	0	; select bank0
  2498  01BC  00A9               	movwf	??_xvprintf
  2499  01BD  0829               	movf	??_xvprintf,w
  2500  01BE  00D4               	movwf	xvprintf@d
  2501  01BF  0846               	movf	xvprintf@r,w
  2502  01C0  00F2               	movwf	___lldiv@divisor
  2503  01C1  0847               	movf	xvprintf@r+1,w
  2504  01C2  00F3               	movwf	___lldiv@divisor+1
  2505  01C3  01F4               	clrf	___lldiv@divisor+2
  2506  01C4  01F5               	clrf	___lldiv@divisor+3
  2507  01C5  084F               	movf	xvprintf@v+3,w
  2508  01C6  00F9               	movwf	___lldiv@dividend+3
  2509  01C7  084E               	movf	xvprintf@v+2,w
  2510  01C8  00F8               	movwf	___lldiv@dividend+2
  2511  01C9  084D               	movf	xvprintf@v+1,w
  2512  01CA  00F7               	movwf	___lldiv@dividend+1
  2513  01CB  084C               	movf	xvprintf@v,w
  2514  01CC  00F6               	movwf	___lldiv@dividend
  2515  01CD  3186  2609  3180   	fcall	___lldiv
  2516  01D0  0875               	movf	?___lldiv+3,w
  2517  01D1  0020               	movlb	0	; select bank0
  2518  01D2  00CF               	movwf	xvprintf@v+3
  2519  01D3  0874               	movf	?___lldiv+2,w
  2520  01D4  00CE               	movwf	xvprintf@v+2
  2521  01D5  0873               	movf	?___lldiv+1,w
  2522  01D6  00CD               	movwf	xvprintf@v+1
  2523  01D7  0872               	movf	?___lldiv,w
  2524  01D8  00CC               	movwf	xvprintf@v
  2525                           
  2526                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  2527  01D9  300A               	movlw	10
  2528  01DA  0254               	subwf	xvprintf@d,w
  2529  01DB  1C03               	skipc
  2530  01DC  29EB               	goto	l3189
  2531  01DD  3078               	movlw	120
  2532  01DE  0655               	xorwf	xvprintf@c,w
  2533  01DF  1903               	btfsc	3,2
  2534  01E0  29E3               	goto	l3185
  2535  01E1  3007               	movlw	7
  2536  01E2  29E4               	goto	L4
  2537  01E3                     l3185:	
  2538  01E3  3027               	movlw	39
  2539  01E4                     L4:	
  2540  01E4  00C1               	movwf	_xvprintf$273
  2541  01E5  3000               	movlw	0
  2542  01E6  00C2               	movwf	_xvprintf$273+1
  2543  01E7  0841               	movf	_xvprintf$273,w
  2544  01E8  00A9               	movwf	??_xvprintf
  2545  01E9  0829               	movf	??_xvprintf,w
  2546  01EA  07D4               	addwf	xvprintf@d,f
  2547  01EB                     l3189:	
  2548                           
  2549                           ;xprintf.c: 154: s[i++] = d + '0';
  2550  01EB  0854               	movf	xvprintf@d,w
  2551  01EC  3E30               	addlw	48
  2552  01ED  00A9               	movwf	??_xvprintf
  2553  01EE  0852               	movf	xvprintf@i,w
  2554  01EF  3E2D               	addlw	(low (xvprintf@s| 0))& (0+255)
  2555  01F0  0086               	movwf	6
  2556  01F1  0187               	clrf	7
  2557  01F2  0829               	movf	??_xvprintf,w
  2558  01F3  0081               	movwf	1
  2559  01F4  3001               	movlw	1
  2560  01F5  07D2               	addwf	xvprintf@i,f
  2561  01F6  3000               	movlw	0
  2562  01F7  3DD3               	addwfc	xvprintf@i+1,f
  2563                           
  2564                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  2565  01F8  084F               	movf	xvprintf@v+3,w
  2566  01F9  044E               	iorwf	xvprintf@v+2,w
  2567  01FA  044D               	iorwf	xvprintf@v+1,w
  2568  01FB  044C               	iorwf	xvprintf@v,w
  2569  01FC  1903               	skipnz
  2570  01FD  2A05               	goto	l190
  2571  01FE  3000               	movlw	0
  2572  01FF  0253               	subwf	xvprintf@i+1,w
  2573  0200  3010               	movlw	16
  2574  0201  1903               	skipnz
  2575  0202  0252               	subwf	xvprintf@i,w
  2576  0203  1C03               	skipc
  2577  0204  29A9               	goto	l3175
  2578  0205                     l190:	
  2579                           
  2580                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  2581  0205  1DD0               	btfss	xvprintf@f,3
  2582  0206  2A13               	goto	l3201
  2583  0207  302D               	movlw	45
  2584  0208  00A9               	movwf	??_xvprintf
  2585  0209  0852               	movf	xvprintf@i,w
  2586  020A  3E2D               	addlw	(low (xvprintf@s| 0))& (0+255)
  2587  020B  0086               	movwf	6
  2588  020C  0187               	clrf	7
  2589  020D  0829               	movf	??_xvprintf,w
  2590  020E  0081               	movwf	1
  2591  020F  3001               	movlw	1
  2592  0210  07D2               	addwf	xvprintf@i,f
  2593  0211  3000               	movlw	0
  2594  0212  3DD3               	addwfc	xvprintf@i+1,f
  2595  0213                     l3201:	
  2596                           
  2597                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  2598  0213  0853               	movf	xvprintf@i+1,w
  2599  0214  00CB               	movwf	xvprintf@j+1
  2600  0215  0852               	movf	xvprintf@i,w
  2601  0216  00CA               	movwf	xvprintf@j
  2602  0217  1850               	btfsc	xvprintf@f,0
  2603  0218  2A1B               	goto	l3207
  2604  0219  3020               	movlw	32
  2605  021A  2A1C               	goto	L5
  2606  021B                     l3207:	
  2607  021B  3030               	movlw	48
  2608  021C                     L5:	
  2609  021C  00C3               	movwf	_xvprintf$274
  2610  021D  3000               	movlw	0
  2611  021E  00C4               	movwf	_xvprintf$274+1
  2612  021F  0843               	movf	_xvprintf$274,w
  2613  0220  00A9               	movwf	??_xvprintf
  2614  0221  0829               	movf	??_xvprintf,w
  2615  0222  00D4               	movwf	xvprintf@d
  2616                           
  2617                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  2618  0223  2A28               	goto	l3211
  2619  0224                     l3209:	
  2620  0224  0854               	movf	xvprintf@d,w
  2621  0225  3187  2749  3180   	fcall	_xputc
  2622  0228                     l3211:	
  2623  0228  0020               	movlb	0	; select bank0
  2624  0229  18D0               	btfsc	xvprintf@f,1
  2625  022A  2A3A               	goto	l3215
  2626  022B  084B               	movf	xvprintf@j+1,w
  2627  022C  00AA               	movwf	??_xvprintf+1
  2628  022D  084A               	movf	xvprintf@j,w
  2629  022E  00A9               	movwf	??_xvprintf
  2630  022F  0ACA               	incf	xvprintf@j,f
  2631  0230  1903               	skipnz
  2632  0231  0ACB               	incf	xvprintf@j+1,f
  2633  0232  0849               	movf	xvprintf@w+1,w
  2634  0233  022A               	subwf	??_xvprintf+1,w
  2635  0234  1D03               	skipz
  2636  0235  2A38               	goto	u3435
  2637  0236  0848               	movf	xvprintf@w,w
  2638  0237  0229               	subwf	??_xvprintf,w
  2639  0238                     u3435:	
  2640  0238  1C03               	skipc
  2641  0239  2A24               	goto	l3209
  2642  023A                     l3215:	
  2643                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  2644                           
  2645  023A  3001               	movlw	1
  2646  023B  02D2               	subwf	xvprintf@i,f
  2647  023C  3000               	movlw	0
  2648  023D  3BD3               	subwfb	xvprintf@i+1,f
  2649  023E  0852               	movf	xvprintf@i,w
  2650  023F  3E2D               	addlw	(low (xvprintf@s| 0))& (0+255)
  2651  0240  0086               	movwf	6
  2652  0241  0187               	clrf	7
  2653  0242  0801               	movf	1,w
  2654  0243  3187  2749  3180   	fcall	_xputc
  2655  0246  0020               	movlb	0	; select bank0
  2656  0247  0852               	movf	xvprintf@i,w
  2657  0248  0453               	iorwf	xvprintf@i+1,w
  2658  0249  1903               	btfsc	3,2
  2659  024A  2A50               	goto	l3221
  2660  024B  2A3A               	goto	l3215
  2661  024C                     l3219:	
  2662                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  2663                           
  2664  024C  3020               	movlw	32
  2665  024D  3187  2749  3180   	fcall	_xputc
  2666  0250                     l3221:	
  2667  0250  0020               	movlb	0	; select bank0
  2668  0251  084B               	movf	xvprintf@j+1,w
  2669  0252  00AA               	movwf	??_xvprintf+1
  2670  0253  084A               	movf	xvprintf@j,w
  2671  0254  00A9               	movwf	??_xvprintf
  2672  0255  0ACA               	incf	xvprintf@j,f
  2673  0256  1903               	skipnz
  2674  0257  0ACB               	incf	xvprintf@j+1,f
  2675  0258  0849               	movf	xvprintf@w+1,w
  2676  0259  022A               	subwf	??_xvprintf+1,w
  2677  025A  1D03               	skipz
  2678  025B  2A5E               	goto	u3455
  2679  025C  0848               	movf	xvprintf@w,w
  2680  025D  0229               	subwf	??_xvprintf,w
  2681  025E                     u3455:	
  2682  025E  1803               	btfsc	3,0
  2683  025F  2837               	goto	l134
  2684  0260  2A4C               	goto	l3219
  2685  0261                     __end_of_xvprintf:	
  2686                           ;xprintf.c: 161: }
  2687                           
  2688                           
  2689                           	psect	text3
  2690  0FA8                     __ptext3:	
  2691 ;; *************** function _xputs *****************
  2692 ;; Defined at:
  2693 ;;		line 44 in file "xprintf.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  str             1    wreg     PTR const unsigned char 
  2696 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  str             1    9[COMMON] PTR const unsigned char 
  2699 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2709 ;;      Params:         0       0       0       0       0       0
  2710 ;;      Locals:         1       0       0       0       0       0
  2711 ;;      Temps:          1       0       0       0       0       0
  2712 ;;      Totals:         2       0       0       0       0       0
  2713 ;;Total ram usage:        2 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    6
  2716 ;; This function calls:
  2717 ;;		_xputc
  2718 ;; This function is called by:
  2719 ;;		_xvprintf
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function _xputs
  2725  0FA8                     _xputs:	
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2729                           ;xputs@str stored from wreg
  2730  0FA8  00F9               	movwf	xputs@str
  2731  0FA9                     l2125:	
  2732                           ;xprintf.c: 48: while (*str)
  2733                           
  2734  0FA9  0879               	movf	xputs@str,w
  2735  0FAA  0086               	movwf	6
  2736  0FAB  0187               	clrf	7
  2737  0FAC  0801               	movf	1,w
  2738  0FAD  1903               	btfsc	3,2
  2739  0FAE  0008               	return
  2740                           
  2741                           ;xprintf.c: 49: xputc(*str++);
  2742  0FAF  0879               	movf	xputs@str,w
  2743  0FB0  0086               	movwf	6
  2744  0FB1  0187               	clrf	7
  2745  0FB2  0801               	movf	1,w
  2746  0FB3  3187  2749  318F   	fcall	_xputc
  2747  0FB6  3001               	movlw	1
  2748  0FB7  00F8               	movwf	??_xputs
  2749  0FB8  0878               	movf	??_xputs,w
  2750  0FB9  07F9               	addwf	xputs@str,f
  2751  0FBA  2FA9               	goto	l2125
  2752  0FBB                     __end_of_xputs:	
  2753                           
  2754                           	psect	text4
  2755  0749                     __ptext4:	
  2756 ;; *************** function _xputc *****************
  2757 ;; Defined at:
  2758 ;;		line 26 in file "xprintf.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  c               1    wreg     unsigned char 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  c               1    7[COMMON] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2772 ;;      Params:         0       0       0       0       0       0
  2773 ;;      Locals:         1       0       0       0       0       0
  2774 ;;      Temps:          1       0       0       0       0       0
  2775 ;;      Totals:         2       0       0       0       0       0
  2776 ;;Total ram usage:        2 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    5
  2779 ;; This function calls:
  2780 ;;		Absolute function
  2781 ;;		_LCD_Put
  2782 ;; This function is called by:
  2783 ;;		_xputs
  2784 ;;		_xvprintf
  2785 ;;		_xfputs
  2786 ;;		_put_dump
  2787 ;;		_xgets
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _xputc
  2793  0749                     _xputc:	
  2794                           
  2795                           ;incstack = 0
  2796                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2797                           ;xputc@c stored from wreg
  2798  0749  00F7               	movwf	xputc@c
  2799  074A  300A               	movlw	10
  2800  074B  0677               	xorwf	xputc@c,w
  2801  074C  1D03               	btfss	3,2
  2802  074D  2F58               	goto	l2107
  2803  074E  301D               	movlw	(low (STR_2| (0+32768)))& (0+255)
  2804  074F  00F6               	movwf	??_xputc
  2805  0750  0876               	movf	??_xputc,w
  2806  0751  00F5               	movwf	LCD_Put@word
  2807  0752  0020               	movlb	0	; select bank0
  2808  0753  086D               	movf	_xfunc_out+1,w
  2809  0754  008A               	movwf	10
  2810  0755  086C               	movf	_xfunc_out,w
  2811  0756  000A               	callw
  2812  0757  3187               	pagesel	$
  2813  0758                     l2107:	
  2814                           
  2815                           ;xprintf.c: 30: if (outptr) {
  2816  0758  087A               	movf	_outptr,w
  2817  0759  1903               	btfsc	3,2
  2818  075A  2F67               	goto	l2115
  2819                           
  2820                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  2821  075B  0877               	movf	xputc@c,w
  2822  075C  00F6               	movwf	??_xputc
  2823  075D  087A               	movf	_outptr,w
  2824  075E  0086               	movwf	6
  2825  075F  0187               	clrf	7
  2826  0760  0876               	movf	??_xputc,w
  2827  0761  0081               	movwf	1
  2828  0762  3001               	movlw	1
  2829  0763  00F6               	movwf	??_xputc
  2830  0764  0876               	movf	??_xputc,w
  2831  0765  07FA               	addwf	_outptr,f
  2832                           
  2833                           ;xprintf.c: 32: return;
  2834  0766  0008               	return
  2835  0767                     l2115:	
  2836                           
  2837                           ;xprintf.c: 33: }
  2838                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  2839  0767  0020               	movlb	0	; select bank0
  2840  0768  086C               	movf	_xfunc_out,w
  2841  0769  046D               	iorwf	_xfunc_out+1,w
  2842  076A  1903               	btfsc	3,2
  2843  076B  0008               	return
  2844  076C  0877               	movf	xputc@c,w
  2845  076D  00F6               	movwf	??_xputc
  2846  076E  0876               	movf	??_xputc,w
  2847  076F  00F5               	movwf	LCD_Put@word
  2848  0770  086D               	movf	_xfunc_out+1,w
  2849  0771  008A               	movwf	10
  2850  0772  086C               	movf	_xfunc_out,w
  2851  0773  000A               	callw
  2852  0774  3187               	pagesel	$
  2853  0775  0008               	return
  2854  0776                     __end_of_xputc:	
  2855                           
  2856                           	psect	text5
  2857  0F67                     __ptext5:	
  2858 ;; *************** function _LCD_Put *****************
  2859 ;; Defined at:
  2860 ;;		line 54 in file "LCD.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  word            1    5[COMMON] char 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;		None
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0, pclath, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2874 ;;      Params:         1       0       0       0       0       0
  2875 ;;      Locals:         0       0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0
  2877 ;;      Totals:         1       0       0       0       0       0
  2878 ;;Total ram usage:        1 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    4
  2881 ;; This function calls:
  2882 ;;		_LCD_WriteData
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;;		_xputc
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           
  2890                           ;psect for function _LCD_Put
  2891  0F67                     _LCD_Put:	
  2892                           
  2893                           ;LCD.c: 56: RA4 = 1;
  2894                           
  2895                           ;incstack = 0
  2896                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  2897  0F67  0020               	movlb	0	; select bank0
  2898  0F68  160C               	bsf	12,4	;volatile
  2899                           
  2900                           ;LCD.c: 57: LCD_WriteData(word);
  2901  0F69  0875               	movf	LCD_Put@word,w
  2902  0F6A  3186  269F         	fcall	_LCD_WriteData
  2903  0F6C  0008               	return
  2904  0F6D                     __end_of_LCD_Put:	
  2905                           
  2906                           	psect	text6
  2907  0FE5                     __ptext6:	
  2908 ;; *************** function ___wmul *****************
  2909 ;; Defined at:
  2910 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  multiplier      2    2[COMMON] unsigned int 
  2913 ;;  multiplicand    2    4[COMMON] unsigned int 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  product         2    6[COMMON] unsigned int 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  2    2[COMMON] unsigned int 
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2925 ;;      Params:         4       0       0       0       0       0
  2926 ;;      Locals:         2       0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0
  2928 ;;      Totals:         6       0       0       0       0       0
  2929 ;;Total ram usage:        6 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    3
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_xvprintf
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           
  2940                           ;psect for function ___wmul
  2941  0FE5                     ___wmul:	
  2942                           
  2943                           ;incstack = 0
  2944                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2945  0FE5  01F6               	clrf	___wmul@product
  2946  0FE6  01F7               	clrf	___wmul@product+1
  2947  0FE7                     l2133:	
  2948  0FE7  1C72               	btfss	___wmul@multiplier,0
  2949  0FE8  2FED               	goto	l693
  2950  0FE9  0874               	movf	___wmul@multiplicand,w
  2951  0FEA  07F6               	addwf	___wmul@product,f
  2952  0FEB  0875               	movf	___wmul@multiplicand+1,w
  2953  0FEC  3DF7               	addwfc	___wmul@product+1,f
  2954  0FED                     l693:	
  2955  0FED  3001               	movlw	1
  2956  0FEE                     u1665:	
  2957  0FEE  35F4               	lslf	___wmul@multiplicand,f
  2958  0FEF  0DF5               	rlf	___wmul@multiplicand+1,f
  2959  0FF0  0B89               	decfsz	9,f
  2960  0FF1  2FEE               	goto	u1665
  2961  0FF2  3001               	movlw	1
  2962  0FF3                     u1675:	
  2963  0FF3  36F3               	lsrf	___wmul@multiplier+1,f
  2964  0FF4  0CF2               	rrf	___wmul@multiplier,f
  2965  0FF5  0B89               	decfsz	9,f
  2966  0FF6  2FF3               	goto	u1675
  2967  0FF7  0872               	movf	___wmul@multiplier,w
  2968  0FF8  0473               	iorwf	___wmul@multiplier+1,w
  2969  0FF9  1D03               	btfss	3,2
  2970  0FFA  2FE7               	goto	l2133
  2971  0FFB  0877               	movf	___wmul@product+1,w
  2972  0FFC  00F3               	movwf	?___wmul+1
  2973  0FFD  0876               	movf	___wmul@product,w
  2974  0FFE  00F2               	movwf	?___wmul
  2975  0FFF  0008               	return
  2976  1000                     __end_of___wmul:	
  2977                           
  2978                           	psect	text7
  2979  065C                     __ptext7:	
  2980 ;; *************** function ___llmod *****************
  2981 ;; Defined at:
  2982 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  divisor         4    2[COMMON] unsigned long 
  2985 ;;  dividend        4    6[COMMON] unsigned long 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  counter         1    1[BANK0 ] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  4    2[COMMON] unsigned long 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2997 ;;      Params:         8       0       0       0       0       0
  2998 ;;      Locals:         0       1       0       0       0       0
  2999 ;;      Temps:          0       1       0       0       0       0
  3000 ;;      Totals:         8       2       0       0       0       0
  3001 ;;Total ram usage:       10 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    3
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_xvprintf
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           
  3012                           ;psect for function ___llmod
  3013  065C                     ___llmod:	
  3014                           
  3015                           ;incstack = 0
  3016                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3017  065C  0875               	movf	___llmod@divisor+3,w
  3018  065D  0474               	iorwf	___llmod@divisor+2,w
  3019  065E  0473               	iorwf	___llmod@divisor+1,w
  3020  065F  0472               	iorwf	___llmod@divisor,w
  3021  0660  1903               	skipnz
  3022  0661  2E96               	goto	l3055
  3023  0662  0020               	movlb	0	; select bank0
  3024  0663  01A1               	clrf	___llmod@counter
  3025  0664  0AA1               	incf	___llmod@counter,f
  3026  0665                     l3045:	
  3027  0665  1BF5               	btfsc	___llmod@divisor+3,7
  3028  0666  2E73               	goto	l3047
  3029  0667  3001               	movlw	1
  3030  0668                     u3135:	
  3031  0668  35F2               	lslf	___llmod@divisor,f
  3032  0669  0DF3               	rlf	___llmod@divisor+1,f
  3033  066A  0DF4               	rlf	___llmod@divisor+2,f
  3034  066B  0DF5               	rlf	___llmod@divisor+3,f
  3035  066C  0B89               	decfsz	9,f
  3036  066D  2E68               	goto	u3135
  3037  066E  3001               	movlw	1
  3038  066F  00A0               	movwf	??___llmod
  3039  0670  0820               	movf	??___llmod,w
  3040  0671  07A1               	addwf	___llmod@counter,f
  3041  0672  2E65               	goto	l3045
  3042  0673                     l3047:	
  3043  0673  0875               	movf	___llmod@divisor+3,w
  3044  0674  0279               	subwf	___llmod@dividend+3,w
  3045  0675  1D03               	skipz
  3046  0676  2E81               	goto	u3155
  3047  0677  0874               	movf	___llmod@divisor+2,w
  3048  0678  0278               	subwf	___llmod@dividend+2,w
  3049  0679  1D03               	skipz
  3050  067A  2E81               	goto	u3155
  3051  067B  0873               	movf	___llmod@divisor+1,w
  3052  067C  0277               	subwf	___llmod@dividend+1,w
  3053  067D  1D03               	skipz
  3054  067E  2E81               	goto	u3155
  3055  067F  0872               	movf	___llmod@divisor,w
  3056  0680  0276               	subwf	___llmod@dividend,w
  3057  0681                     u3155:	
  3058  0681  1C03               	skipc
  3059  0682  2E8B               	goto	l3051
  3060  0683  0872               	movf	___llmod@divisor,w
  3061  0684  02F6               	subwf	___llmod@dividend,f
  3062  0685  0873               	movf	___llmod@divisor+1,w
  3063  0686  3BF7               	subwfb	___llmod@dividend+1,f
  3064  0687  0874               	movf	___llmod@divisor+2,w
  3065  0688  3BF8               	subwfb	___llmod@dividend+2,f
  3066  0689  0875               	movf	___llmod@divisor+3,w
  3067  068A  3BF9               	subwfb	___llmod@dividend+3,f
  3068  068B                     l3051:	
  3069  068B  3001               	movlw	1
  3070  068C                     u3165:	
  3071  068C  36F5               	lsrf	___llmod@divisor+3,f
  3072  068D  0CF4               	rrf	___llmod@divisor+2,f
  3073  068E  0CF3               	rrf	___llmod@divisor+1,f
  3074  068F  0CF2               	rrf	___llmod@divisor,f
  3075  0690  0B89               	decfsz	9,f
  3076  0691  2E8C               	goto	u3165
  3077  0692  3001               	movlw	1
  3078  0693  02A1               	subwf	___llmod@counter,f
  3079  0694  1D03               	btfss	3,2
  3080  0695  2E73               	goto	l3047
  3081  0696                     l3055:	
  3082  0696  0879               	movf	___llmod@dividend+3,w
  3083  0697  00F5               	movwf	?___llmod+3
  3084  0698  0878               	movf	___llmod@dividend+2,w
  3085  0699  00F4               	movwf	?___llmod+2
  3086  069A  0877               	movf	___llmod@dividend+1,w
  3087  069B  00F3               	movwf	?___llmod+1
  3088  069C  0876               	movf	___llmod@dividend,w
  3089  069D  00F2               	movwf	?___llmod
  3090  069E  0008               	return
  3091  069F                     __end_of___llmod:	
  3092                           
  3093                           	psect	text8
  3094  0609                     __ptext8:	
  3095 ;; *************** function ___lldiv *****************
  3096 ;; Defined at:
  3097 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  divisor         4    2[COMMON] unsigned long 
  3100 ;;  dividend        4    6[COMMON] unsigned long 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  quotient        4    1[BANK0 ] unsigned long 
  3103 ;;  counter         1    5[BANK0 ] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  4    2[COMMON] unsigned long 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3113 ;;      Params:         8       0       0       0       0       0
  3114 ;;      Locals:         0       5       0       0       0       0
  3115 ;;      Temps:          0       1       0       0       0       0
  3116 ;;      Totals:         8       6       0       0       0       0
  3117 ;;Total ram usage:       14 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    3
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_xvprintf
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           
  3128                           ;psect for function ___lldiv
  3129  0609                     ___lldiv:	
  3130                           
  3131                           ;incstack = 0
  3132                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3133  0609  3000               	movlw	0
  3134  060A  0020               	movlb	0	; select bank0
  3135  060B  00A4               	movwf	___lldiv@quotient+3
  3136  060C  3000               	movlw	0
  3137  060D  00A3               	movwf	___lldiv@quotient+2
  3138  060E  3000               	movlw	0
  3139  060F  00A2               	movwf	___lldiv@quotient+1
  3140  0610  3000               	movlw	0
  3141  0611  00A1               	movwf	___lldiv@quotient
  3142  0612  0875               	movf	___lldiv@divisor+3,w
  3143  0613  0474               	iorwf	___lldiv@divisor+2,w
  3144  0614  0473               	iorwf	___lldiv@divisor+1,w
  3145  0615  0472               	iorwf	___lldiv@divisor,w
  3146  0616  1903               	skipnz
  3147  0617  2E53               	goto	l3035
  3148  0618  01A5               	clrf	___lldiv@counter
  3149  0619  0AA5               	incf	___lldiv@counter,f
  3150  061A                     l3021:	
  3151  061A  1BF5               	btfsc	___lldiv@divisor+3,7
  3152  061B  2E28               	goto	l3023
  3153  061C  3001               	movlw	1
  3154  061D                     u3065:	
  3155  061D  35F2               	lslf	___lldiv@divisor,f
  3156  061E  0DF3               	rlf	___lldiv@divisor+1,f
  3157  061F  0DF4               	rlf	___lldiv@divisor+2,f
  3158  0620  0DF5               	rlf	___lldiv@divisor+3,f
  3159  0621  0B89               	decfsz	9,f
  3160  0622  2E1D               	goto	u3065
  3161  0623  3001               	movlw	1
  3162  0624  00A0               	movwf	??___lldiv
  3163  0625  0820               	movf	??___lldiv,w
  3164  0626  07A5               	addwf	___lldiv@counter,f
  3165  0627  2E1A               	goto	l3021
  3166  0628                     l3023:	
  3167  0628  3001               	movlw	1
  3168  0629                     u3085:	
  3169  0629  35A1               	lslf	___lldiv@quotient,f
  3170  062A  0DA2               	rlf	___lldiv@quotient+1,f
  3171  062B  0DA3               	rlf	___lldiv@quotient+2,f
  3172  062C  0DA4               	rlf	___lldiv@quotient+3,f
  3173  062D  0B89               	decfsz	9,f
  3174  062E  2E29               	goto	u3085
  3175  062F  0875               	movf	___lldiv@divisor+3,w
  3176  0630  0279               	subwf	___lldiv@dividend+3,w
  3177  0631  1D03               	skipz
  3178  0632  2E3D               	goto	u3095
  3179  0633  0874               	movf	___lldiv@divisor+2,w
  3180  0634  0278               	subwf	___lldiv@dividend+2,w
  3181  0635  1D03               	skipz
  3182  0636  2E3D               	goto	u3095
  3183  0637  0873               	movf	___lldiv@divisor+1,w
  3184  0638  0277               	subwf	___lldiv@dividend+1,w
  3185  0639  1D03               	skipz
  3186  063A  2E3D               	goto	u3095
  3187  063B  0872               	movf	___lldiv@divisor,w
  3188  063C  0276               	subwf	___lldiv@dividend,w
  3189  063D                     u3095:	
  3190  063D  1C03               	skipc
  3191  063E  2E48               	goto	l3031
  3192  063F  0872               	movf	___lldiv@divisor,w
  3193  0640  02F6               	subwf	___lldiv@dividend,f
  3194  0641  0873               	movf	___lldiv@divisor+1,w
  3195  0642  3BF7               	subwfb	___lldiv@dividend+1,f
  3196  0643  0874               	movf	___lldiv@divisor+2,w
  3197  0644  3BF8               	subwfb	___lldiv@dividend+2,f
  3198  0645  0875               	movf	___lldiv@divisor+3,w
  3199  0646  3BF9               	subwfb	___lldiv@dividend+3,f
  3200  0647  1421               	bsf	___lldiv@quotient,0
  3201  0648                     l3031:	
  3202  0648  3001               	movlw	1
  3203  0649                     u3105:	
  3204  0649  36F5               	lsrf	___lldiv@divisor+3,f
  3205  064A  0CF4               	rrf	___lldiv@divisor+2,f
  3206  064B  0CF3               	rrf	___lldiv@divisor+1,f
  3207  064C  0CF2               	rrf	___lldiv@divisor,f
  3208  064D  0B89               	decfsz	9,f
  3209  064E  2E49               	goto	u3105
  3210  064F  3001               	movlw	1
  3211  0650  02A5               	subwf	___lldiv@counter,f
  3212  0651  1D03               	btfss	3,2
  3213  0652  2E28               	goto	l3023
  3214  0653                     l3035:	
  3215  0653  0824               	movf	___lldiv@quotient+3,w
  3216  0654  00F5               	movwf	?___lldiv+3
  3217  0655  0823               	movf	___lldiv@quotient+2,w
  3218  0656  00F4               	movwf	?___lldiv+2
  3219  0657  0822               	movf	___lldiv@quotient+1,w
  3220  0658  00F3               	movwf	?___lldiv+1
  3221  0659  0821               	movf	___lldiv@quotient,w
  3222  065A  00F2               	movwf	?___lldiv
  3223  065B  0008               	return
  3224  065C                     __end_of___lldiv:	
  3225                           
  3226                           	psect	text9
  3227  04F8                     __ptext9:	
  3228 ;; *************** function _LCD_Init *****************
  3229 ;; Defined at:
  3230 ;;		line 28 in file "LCD.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0, pclath, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3244 ;;      Params:         0       0       0       0       0       0
  3245 ;;      Locals:         0       0       0       0       0       0
  3246 ;;      Temps:          2       0       0       0       0       0
  3247 ;;      Totals:         2       0       0       0       0       0
  3248 ;;Total ram usage:        2 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    5
  3251 ;; This function calls:
  3252 ;;		_LCD_DisplayClear
  3253 ;;		_LCD_WriteData
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           
  3260                           ;psect for function _LCD_Init
  3261  04F8                     _LCD_Init:	
  3262                           
  3263                           ;LCD.c: 30: RA4 = 0;
  3264                           
  3265                           ;incstack = 0
  3266                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3267  04F8  0020               	movlb	0	; select bank0
  3268  04F9  120C               	bcf	12,4	;volatile
  3269                           
  3270                           ;LCD.c: 31: RA3 = 0;
  3271  04FA  118C               	bcf	12,3	;volatile
  3272                           
  3273                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  3274  04FB  3002               	movlw	2
  3275  04FC  00F7               	movwf	??_LCD_Init+1
  3276  04FD  3038               	movlw	56
  3277  04FE  00F6               	movwf	??_LCD_Init
  3278  04FF  30AD               	movlw	173
  3279  0500                     u4027:	
  3280  0500  0B89               	decfsz	9,f
  3281  0501  2D00               	goto	u4027
  3282  0502  0BF6               	decfsz	??_LCD_Init,f
  3283  0503  2D00               	goto	u4027
  3284  0504  0BF7               	decfsz	??_LCD_Init+1,f
  3285  0505  2D00               	goto	u4027
  3286  0506  0000               	nop
  3287                           
  3288                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  3289  0507  3003               	movlw	3
  3290  0508  0020               	movlb	0	; select bank0
  3291  0509  008D               	movwf	13	;volatile
  3292                           
  3293                           ;LCD.c: 35: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3294  050A  158C               	bsf	12,3	;volatile
  3295  050B  3200               	nop2	;2 cycle nop
  3296  050C  3200               	nop2	;2 cycle nop
  3297  050D  3200               	nop2	;2 cycle nop
  3298  050E  3200               	nop2	;2 cycle nop
  3299  050F  0020               	movlb	0	; select bank0
  3300  0510  118C               	bcf	12,3	;volatile
  3301  0511  3200               	nop2	;2 cycle nop
  3302  0512  3200               	nop2	;2 cycle nop
  3303  0513  3200               	nop2	;2 cycle nop
  3304  0514  3200               	nop2	;2 cycle nop
  3305                           
  3306                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  3307  0515  3034               	movlw	52
  3308  0516  00F6               	movwf	??_LCD_Init
  3309  0517  30F2               	movlw	242
  3310  0518                     u4037:	
  3311  0518  0B89               	decfsz	9,f
  3312  0519  2D18               	goto	u4037
  3313  051A  0BF6               	decfsz	??_LCD_Init,f
  3314  051B  2D18               	goto	u4037
  3315                           
  3316                           ;LCD.c: 37: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3317  051C  0020               	movlb	0	; select bank0
  3318  051D  158C               	bsf	12,3	;volatile
  3319  051E  3200               	nop2	;2 cycle nop
  3320  051F  3200               	nop2	;2 cycle nop
  3321  0520  3200               	nop2	;2 cycle nop
  3322  0521  3200               	nop2	;2 cycle nop
  3323  0522  0020               	movlb	0	; select bank0
  3324  0523  118C               	bcf	12,3	;volatile
  3325  0524  3200               	nop2	;2 cycle nop
  3326  0525  3200               	nop2	;2 cycle nop
  3327  0526  3200               	nop2	;2 cycle nop
  3328  0527  3200               	nop2	;2 cycle nop
  3329                           
  3330                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  3331  0528  3005               	movlw	5
  3332  0529  00F6               	movwf	??_LCD_Init
  3333  052A  3026               	movlw	38
  3334  052B                     u4047:	
  3335  052B  0B89               	decfsz	9,f
  3336  052C  2D2B               	goto	u4047
  3337  052D  0BF6               	decfsz	??_LCD_Init,f
  3338  052E  2D2B               	goto	u4047
  3339  052F  3200               	nop2
  3340                           
  3341                           ;LCD.c: 39: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3342  0530  0020               	movlb	0	; select bank0
  3343  0531  158C               	bsf	12,3	;volatile
  3344  0532  3200               	nop2	;2 cycle nop
  3345  0533  3200               	nop2	;2 cycle nop
  3346  0534  3200               	nop2	;2 cycle nop
  3347  0535  3200               	nop2	;2 cycle nop
  3348  0536  0020               	movlb	0	; select bank0
  3349  0537  118C               	bcf	12,3	;volatile
  3350  0538  3200               	nop2	;2 cycle nop
  3351  0539  3200               	nop2	;2 cycle nop
  3352  053A  3200               	nop2	;2 cycle nop
  3353  053B  3200               	nop2	;2 cycle nop
  3354                           
  3355                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  3356  053C  3005               	movlw	5
  3357  053D  00F6               	movwf	??_LCD_Init
  3358  053E  3026               	movlw	38
  3359  053F                     u4057:	
  3360  053F  0B89               	decfsz	9,f
  3361  0540  2D3F               	goto	u4057
  3362  0541  0BF6               	decfsz	??_LCD_Init,f
  3363  0542  2D3F               	goto	u4057
  3364  0543  3200               	nop2
  3365                           
  3366                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  3367  0544  3002               	movlw	2
  3368  0545  0020               	movlb	0	; select bank0
  3369  0546  008D               	movwf	13	;volatile
  3370                           
  3371                           ;LCD.c: 42: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3372  0547  158C               	bsf	12,3	;volatile
  3373  0548  3200               	nop2	;2 cycle nop
  3374  0549  3200               	nop2	;2 cycle nop
  3375  054A  3200               	nop2	;2 cycle nop
  3376  054B  3200               	nop2	;2 cycle nop
  3377  054C  0020               	movlb	0	; select bank0
  3378  054D  118C               	bcf	12,3	;volatile
  3379  054E  3200               	nop2	;2 cycle nop
  3380  054F  3200               	nop2	;2 cycle nop
  3381  0550  3200               	nop2	;2 cycle nop
  3382  0551  3200               	nop2	;2 cycle nop
  3383                           
  3384                           ;LCD.c: 44: LCD_WriteData(0x28);
  3385  0552  3028               	movlw	40
  3386  0553  3186  269F  3184   	fcall	_LCD_WriteData
  3387                           
  3388                           ;LCD.c: 45: LCD_WriteData(0x0c);
  3389  0556  300C               	movlw	12
  3390  0557  3186  269F  3184   	fcall	_LCD_WriteData
  3391                           
  3392                           ;LCD.c: 46: LCD_DisplayClear();
  3393  055A  318F  2789  3184   	fcall	_LCD_DisplayClear
  3394                           
  3395                           ;LCD.c: 47: LCD_WriteData(0x06);
  3396  055D  3006               	movlw	6
  3397  055E  3186  269F         	fcall	_LCD_WriteData
  3398  0560  0008               	return
  3399  0561                     __end_of_LCD_Init:	
  3400                           
  3401                           	psect	text10
  3402  0F89                     __ptext10:	
  3403 ;; *************** function _LCD_DisplayClear *****************
  3404 ;; Defined at:
  3405 ;;		line 64 in file "LCD.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0, pclath, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3419 ;;      Params:         0       0       0       0       0       0
  3420 ;;      Locals:         0       0       0       0       0       0
  3421 ;;      Temps:          1       0       0       0       0       0
  3422 ;;      Totals:         1       0       0       0       0       0
  3423 ;;Total ram usage:        1 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    4
  3426 ;; This function calls:
  3427 ;;		_LCD_WriteData
  3428 ;; This function is called by:
  3429 ;;		_LCD_Init
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           
  3434                           ;psect for function _LCD_DisplayClear
  3435  0F89                     _LCD_DisplayClear:	
  3436                           
  3437                           ;LCD.c: 66: RA4 = 0;
  3438                           
  3439                           ;incstack = 0
  3440                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  3441  0F89  0020               	movlb	0	; select bank0
  3442  0F8A  120C               	bcf	12,4	;volatile
  3443                           
  3444                           ;LCD.c: 67: LCD_WriteData(0x01);
  3445  0F8B  3001               	movlw	1
  3446  0F8C  3186  269F  318F   	fcall	_LCD_WriteData
  3447                           
  3448                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  3449  0F8F  3015               	movlw	21
  3450  0F90  00F5               	movwf	??_LCD_DisplayClear
  3451  0F91  30C6               	movlw	198
  3452  0F92                     u4067:	
  3453  0F92  0B89               	decfsz	9,f
  3454  0F93  2F92               	goto	u4067
  3455  0F94  0BF5               	decfsz	??_LCD_DisplayClear,f
  3456  0F95  2F92               	goto	u4067
  3457  0F96  3200               	nop2
  3458  0F97  0008               	return
  3459  0F98                     __end_of_LCD_DisplayClear:	
  3460                           
  3461                           	psect	text11
  3462  0FD0                     __ptext11:	
  3463 ;; *************** function _LCD_CursorPosition *****************
  3464 ;; Defined at:
  3465 ;;		line 86 in file "LCD.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  tx              1    wreg     unsigned char 
  3468 ;;  ty              1    5[COMMON] unsigned char 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  tx              1    7[COMMON] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0, pclath, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3480 ;;      Params:         1       0       0       0       0       0
  3481 ;;      Locals:         1       0       0       0       0       0
  3482 ;;      Temps:          1       0       0       0       0       0
  3483 ;;      Totals:         3       0       0       0       0       0
  3484 ;;Total ram usage:        3 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    4
  3487 ;; This function calls:
  3488 ;;		_LCD_WriteData
  3489 ;; This function is called by:
  3490 ;;		_main
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           
  3495                           ;psect for function _LCD_CursorPosition
  3496  0FD0                     _LCD_CursorPosition:	
  3497                           
  3498                           ;incstack = 0
  3499                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  3500                           ;LCD_CursorPosition@tx stored from wreg
  3501  0FD0  00F7               	movwf	LCD_CursorPosition@tx
  3502                           
  3503                           ;LCD.c: 88: RA4 = 0;
  3504  0FD1  0020               	movlb	0	; select bank0
  3505  0FD2  120C               	bcf	12,4	;volatile
  3506                           
  3507                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  3508  0FD3  0875               	movf	LCD_CursorPosition@ty,w
  3509  0FD4  00F6               	movwf	??_LCD_CursorPosition
  3510  0FD5  3005               	movlw	5
  3511  0FD6                     u2865:	
  3512  0FD6  35F6               	lslf	??_LCD_CursorPosition,f
  3513  0FD7  3EFF               	addlw	-1
  3514  0FD8  1D03               	skipz
  3515  0FD9  2FD6               	goto	u2865
  3516  0FDA  3576               	lslf	??_LCD_CursorPosition,w
  3517  0FDB  0477               	iorwf	LCD_CursorPosition@tx,w
  3518  0FDC  3880               	iorlw	-128
  3519  0FDD  3186  269F  318F   	fcall	_LCD_WriteData
  3520                           
  3521                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  3522  0FE0  306A               	movlw	106
  3523  0FE1                     u4077:	
  3524  0FE1  0B89               	decfsz	9,f
  3525  0FE2  2FE1               	goto	u4077
  3526  0FE3  3200               	nop2
  3527  0FE4  0008               	return
  3528  0FE5                     __end_of_LCD_CursorPosition:	
  3529                           
  3530                           	psect	text12
  3531  069F                     __ptext12:	
  3532 ;; *************** function _LCD_WriteData *****************
  3533 ;; Defined at:
  3534 ;;		line 15 in file "LCD.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  point           1    wreg     char 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  point           1    4[COMMON] char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, status,2, status,0
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3548 ;;      Params:         0       0       0       0       0       0
  3549 ;;      Locals:         1       0       0       0       0       0
  3550 ;;      Temps:          2       0       0       0       0       0
  3551 ;;      Totals:         3       0       0       0       0       0
  3552 ;;Total ram usage:        3 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    3
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_LCD_Init
  3559 ;;		_LCD_Put
  3560 ;;		_LCD_DisplayClear
  3561 ;;		_LCD_CursorPosition
  3562 ;;		_LCD_CursorHome
  3563 ;;		_LCD_CursorShift
  3564 ;;		_LCD_DispShift
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           
  3569                           ;psect for function _LCD_WriteData
  3570  069F                     _LCD_WriteData:	
  3571                           
  3572                           ;incstack = 0
  3573                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  3574                           ;LCD_WriteData@point stored from wreg
  3575  069F  00F4               	movwf	LCD_WriteData@point
  3576                           
  3577                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  3578  06A0  30D5               	movlw	213
  3579  06A1                     u4087:	
  3580  06A1  0B89               	decfsz	9,f
  3581  06A2  2EA1               	goto	u4087
  3582  06A3  0000               	nop
  3583                           
  3584                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  3585  06A4  0874               	movf	LCD_WriteData@point,w
  3586  06A5  00F2               	movwf	??_LCD_WriteData
  3587  06A6  3004               	movlw	4
  3588  06A7                     u1605:	
  3589  06A7  1003               	clrc
  3590  06A8  1BF2               	btfsc	??_LCD_WriteData,7
  3591  06A9  1403               	setc
  3592  06AA  0CF2               	rrf	??_LCD_WriteData,f
  3593  06AB  0B89               	decfsz	9,f
  3594  06AC  2EA7               	goto	u1605
  3595  06AD  3003               	movlw	3
  3596  06AE  0572               	andwf	??_LCD_WriteData,w
  3597  06AF  00F3               	movwf	??_LCD_WriteData+1
  3598  06B0  0E74               	swapf	LCD_WriteData@point,w
  3599  06B1  390F               	andlw	15
  3600  06B2  1989               	btfsc	9,3
  3601  06B3  38F0               	iorlw	240
  3602  06B4  390C               	andlw	12
  3603  06B5  0709               	addwf	9,w
  3604  06B6  0473               	iorwf	??_LCD_WriteData+1,w
  3605  06B7  0020               	movlb	0	; select bank0
  3606  06B8  008D               	movwf	13	;volatile
  3607                           
  3608                           ;LCD.c: 19: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3609  06B9  158C               	bsf	12,3	;volatile
  3610  06BA  3200               	nop2	;2 cycle nop
  3611  06BB  3200               	nop2	;2 cycle nop
  3612  06BC  3200               	nop2	;2 cycle nop
  3613  06BD  3200               	nop2	;2 cycle nop
  3614  06BE  0020               	movlb	0	; select bank0
  3615  06BF  118C               	bcf	12,3	;volatile
  3616  06C0  3200               	nop2	;2 cycle nop
  3617  06C1  3200               	nop2	;2 cycle nop
  3618  06C2  3200               	nop2	;2 cycle nop
  3619  06C3  3200               	nop2	;2 cycle nop
  3620                           
  3621                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  3622  06C4  3003               	movlw	3
  3623  06C5  0574               	andwf	LCD_WriteData@point,w
  3624  06C6  00F2               	movwf	??_LCD_WriteData
  3625  06C7  0874               	movf	LCD_WriteData@point,w
  3626  06C8  390C               	andlw	12
  3627  06C9  0709               	addwf	9,w
  3628  06CA  0472               	iorwf	??_LCD_WriteData,w
  3629  06CB  0020               	movlb	0	; select bank0
  3630  06CC  008D               	movwf	13	;volatile
  3631                           
  3632                           ;LCD.c: 21: {RA3 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA3 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  3633  06CD  158C               	bsf	12,3	;volatile
  3634  06CE  3200               	nop2	;2 cycle nop
  3635  06CF  3200               	nop2	;2 cycle nop
  3636  06D0  3200               	nop2	;2 cycle nop
  3637  06D1  3200               	nop2	;2 cycle nop
  3638  06D2  0020               	movlb	0	; select bank0
  3639  06D3  118C               	bcf	12,3	;volatile
  3640  06D4  3200               	nop2	;2 cycle nop
  3641  06D5  3200               	nop2	;2 cycle nop
  3642  06D6  3200               	nop2	;2 cycle nop
  3643  06D7  3200               	nop2	;2 cycle nop
  3644  06D8  0008               	return
  3645  06D9                     __end_of_LCD_WriteData:	
  3646                           
  3647                           	psect	text13
  3648  07A2                     __ptext13:	
  3649 ;; *************** function _I2C_Transmit *****************
  3650 ;; Defined at:
  3651 ;;		line 23 in file "I2C_Common.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  I2Cx            1    wreg     enum E2992
  3654 ;;  address         1    0[BANK0 ] unsigned char 
  3655 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  3656 ;;		 -> VoltageReg(2), main@testdata(4), 
  3657 ;;  size            1    2[BANK0 ] unsigned char 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  I2Cx            1    6[BANK0 ] enum E2992
  3660 ;;  result          1    7[BANK0 ] char 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      char 
  3663 ;; Registers used:
  3664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3670 ;;      Params:         0       3       0       0       0       0
  3671 ;;      Locals:         0       2       0       0       0       0
  3672 ;;      Temps:          0       3       0       0       0       0
  3673 ;;      Totals:         0       8       0       0       0       0
  3674 ;;Total ram usage:        8 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    4
  3677 ;; This function calls:
  3678 ;;		_I2C1_Transmit
  3679 ;;		_I2C2_Transmit
  3680 ;; This function is called by:
  3681 ;;		_main
  3682 ;;		_DAC_WriteVoltage
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           
  3687                           ;psect for function _I2C_Transmit
  3688  07A2                     _I2C_Transmit:	
  3689                           
  3690                           ;incstack = 0
  3691                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3692                           ;I2C_Transmit@I2Cx stored from wreg
  3693  07A2  0020               	movlb	0	; select bank0
  3694  07A3  00A6               	movwf	I2C_Transmit@I2Cx
  3695                           
  3696                           ;I2C_Common.c: 25: int8_t result;
  3697                           ;I2C_Common.c: 27: switch(I2Cx)
  3698  07A4  2FC3               	goto	l3445
  3699  07A5                     l3439:	
  3700                           ;I2C_Common.c: 28: {
  3701                           ;I2C_Common.c: 29: case I2C1_MODULE:
  3702                           
  3703                           
  3704                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  3705  07A5  0821               	movf	I2C_Transmit@pData,w
  3706  07A6  00A3               	movwf	??_I2C_Transmit
  3707  07A7  0823               	movf	??_I2C_Transmit,w
  3708  07A8  00F2               	movwf	I2C1_Transmit@pData
  3709  07A9  0822               	movf	I2C_Transmit@size,w
  3710  07AA  00A4               	movwf	??_I2C_Transmit+1
  3711  07AB  0824               	movf	??_I2C_Transmit+1,w
  3712  07AC  00F3               	movwf	I2C1_Transmit@size
  3713  07AD  0820               	movf	I2C_Transmit@address,w
  3714  07AE  3184  2401  3187   	fcall	_I2C1_Transmit
  3715  07B1  2FBE               	goto	L7
  3716  07B2                     l3441:	
  3717                           ;I2C_Common.c: 33: case I2C2_MODULE:
  3718                           
  3719                           ;I2C_Common.c: 31: break;
  3720                           
  3721                           
  3722                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  3723  07B2  0821               	movf	I2C_Transmit@pData,w
  3724  07B3  00A3               	movwf	??_I2C_Transmit
  3725  07B4  0823               	movf	??_I2C_Transmit,w
  3726  07B5  00F2               	movwf	I2C2_Transmit@pData
  3727  07B6  0822               	movf	I2C_Transmit@size,w
  3728  07B7  00A4               	movwf	??_I2C_Transmit+1
  3729  07B8  0824               	movf	??_I2C_Transmit+1,w
  3730  07B9  00F3               	movwf	I2C2_Transmit@size
  3731  07BA  0820               	movf	I2C_Transmit@address,w
  3732  07BB  3183  2383  3187   	fcall	_I2C2_Transmit
  3733  07BE                     L7:	
  3734  07BE  0020               	movlb	0	; select bank0
  3735  07BF  00A5               	movwf	??_I2C_Transmit+2
  3736  07C0  0825               	movf	??_I2C_Transmit+2,w
  3737  07C1  00A7               	movwf	I2C_Transmit@result
  3738                           
  3739                           ;I2C_Common.c: 36: }
  3740                           
  3741                           ;I2C_Common.c: 35: break;
  3742  07C2  2FCB               	goto	l3447
  3743  07C3                     l3445:	
  3744  07C3  0826               	movf	I2C_Transmit@I2Cx,w
  3745                           
  3746                           ; Switch size 1, requested type "space"
  3747                           ; Number of cases is 2, Range of values is 0 to 1
  3748                           ; switch strategies available:
  3749                           ; Name         Instructions Cycles
  3750                           ; simple_byte            7     4 (average)
  3751                           ; direct_byte           10     6 (fixed)
  3752                           ; jumptable            260     6 (fixed)
  3753                           ;	Chosen strategy is simple_byte
  3754  07C4  3A00               	xorlw	0	; case 0
  3755  07C5  1903               	skipnz
  3756  07C6  2FA5               	goto	l3439
  3757  07C7  3A01               	xorlw	1	; case 1
  3758  07C8  1903               	skipnz
  3759  07C9  2FB2               	goto	l3441
  3760  07CA  2FCB               	goto	l3447
  3761  07CB                     l3447:	
  3762                           
  3763                           ;I2C_Common.c: 37: return result;
  3764  07CB  0827               	movf	I2C_Transmit@result,w
  3765  07CC  0008               	return
  3766  07CD                     __end_of_I2C_Transmit:	
  3767                           
  3768                           	psect	text14
  3769  0383                     __ptext14:	
  3770 ;; *************** function _I2C2_Transmit *****************
  3771 ;; Defined at:
  3772 ;;		line 52 in file "I2C2.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  address         1    wreg     unsigned char 
  3775 ;;  pData           1    2[COMMON] PTR unsigned char 
  3776 ;;		 -> VoltageReg(2), main@testdata(4), 
  3777 ;;  size            1    3[COMMON] unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  address         1    6[COMMON] unsigned char 
  3780 ;;  i               1    8[COMMON] unsigned char 
  3781 ;;  i               1    7[COMMON] unsigned char 
  3782 ;;  result          1    9[COMMON] char 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      char 
  3785 ;; Registers used:
  3786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3792 ;;      Params:         2       0       0       0       0       0
  3793 ;;      Locals:         4       0       0       0       0       0
  3794 ;;      Temps:          2       0       0       0       0       0
  3795 ;;      Totals:         8       0       0       0       0       0
  3796 ;;Total ram usage:        8 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    3
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_I2C_Transmit
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           
  3807                           ;psect for function _I2C2_Transmit
  3808  0383                     _I2C2_Transmit:	
  3809                           
  3810                           ;incstack = 0
  3811                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  3812                           ;I2C2_Transmit@address stored from wreg
  3813  0383  00F6               	movwf	I2C2_Transmit@address
  3814                           
  3815                           ;I2C2.c: 54: int8_t result;
  3816                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  3817  0384  2BF6               	goto	l3321
  3818  0385                     l3277:	
  3819                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  3820                           
  3821                           ;I2C2.c: 57: {
  3822                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  3823                           
  3824  0385  3005               	movlw	5
  3825  0386  0024               	movlb	4	; select bank4
  3826  0387  051C               	andwf	28,w	;volatile
  3827  0388  00F4               	movwf	??_I2C2_Transmit
  3828  0389  081E               	movf	30,w	;volatile
  3829  038A  391F               	andlw	31
  3830  038B  0474               	iorwf	??_I2C2_Transmit,w
  3831  038C  1D03               	btfss	3,2
  3832  038D  2B85               	goto	l3277
  3833                           
  3834                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  3835  038E  141E               	bsf	30,0	;volatile
  3836  038F                     l3279:	
  3837                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  3838                           
  3839  038F  3005               	movlw	5
  3840  0390  051C               	andwf	28,w	;volatile
  3841  0391  00F4               	movwf	??_I2C2_Transmit
  3842  0392  081E               	movf	30,w	;volatile
  3843  0393  391F               	andlw	31
  3844  0394  0474               	iorwf	??_I2C2_Transmit,w
  3845  0395  1D03               	btfss	3,2
  3846  0396  2B8F               	goto	l3279
  3847                           
  3848                           ;I2C2.c: 63: SSP2BUF = address << 1;
  3849  0397  3576               	lslf	I2C2_Transmit@address,w
  3850  0398  0099               	movwf	25	;volatile
  3851  0399                     l391:	
  3852                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  3853                           
  3854  0399  191C               	btfsc	28,2	;volatile
  3855  039A  2B99               	goto	l391
  3856                           
  3857                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  3858  039B  3000               	movlw	0
  3859  039C  1B1E               	btfsc	30,6	;volatile
  3860  039D  3001               	movlw	1
  3861  039E  00F9               	movwf	I2C2_Transmit@result
  3862                           
  3863                           ;I2C2.c: 67: if (!result)
  3864  039F  0879               	movf	I2C2_Transmit@result,w
  3865  03A0  1D03               	btfss	3,2
  3866  03A1  2BC9               	goto	l3303
  3867                           
  3868                           ;I2C2.c: 68: {
  3869                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  3870  03A2  01F7               	clrf	I2C2_Transmit@i
  3871  03A3  2BA8               	goto	l3301
  3872  03A4                     l3299:	
  3873                           ;I2C2.c: 79: break;
  3874                           
  3875  03A4  3001               	movlw	1
  3876  03A5  00F4               	movwf	??_I2C2_Transmit
  3877  03A6  0874               	movf	??_I2C2_Transmit,w
  3878  03A7  07F7               	addwf	I2C2_Transmit@i,f
  3879  03A8                     l3301:	
  3880  03A8  0873               	movf	I2C2_Transmit@size,w
  3881  03A9  0277               	subwf	I2C2_Transmit@i,w
  3882  03AA  1803               	btfsc	3,0
  3883  03AB  2BC9               	goto	l3303
  3884  03AC                     l3289:	
  3885                           ;I2C2.c: 70: {
  3886                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  3887                           
  3888  03AC  3005               	movlw	5
  3889  03AD  051C               	andwf	28,w	;volatile
  3890  03AE  00F4               	movwf	??_I2C2_Transmit
  3891  03AF  081E               	movf	30,w	;volatile
  3892  03B0  391F               	andlw	31
  3893  03B1  0474               	iorwf	??_I2C2_Transmit,w
  3894  03B2  1D03               	btfss	3,2
  3895  03B3  2BAC               	goto	l3289
  3896                           
  3897                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  3898  03B4  0877               	movf	I2C2_Transmit@i,w
  3899  03B5  0772               	addwf	I2C2_Transmit@pData,w
  3900  03B6  00F4               	movwf	??_I2C2_Transmit
  3901  03B7  0874               	movf	??_I2C2_Transmit,w
  3902  03B8  0086               	movwf	6
  3903  03B9  0187               	clrf	7
  3904  03BA  0801               	movf	1,w
  3905  03BB  0099               	movwf	25	;volatile
  3906  03BC                     l400:	
  3907                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  3908                           
  3909  03BC  191C               	btfsc	28,2	;volatile
  3910  03BD  2BBC               	goto	l400
  3911                           
  3912                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  3913  03BE  3000               	movlw	0
  3914  03BF  1B1E               	btfsc	30,6	;volatile
  3915  03C0  3001               	movlw	1
  3916  03C1  00F9               	movwf	I2C2_Transmit@result
  3917                           
  3918                           ;I2C2.c: 76: if (result)
  3919  03C2  0879               	movf	I2C2_Transmit@result,w
  3920  03C3  1903               	btfsc	3,2
  3921  03C4  2BA4               	goto	l3299
  3922                           
  3923                           ;I2C2.c: 77: {
  3924                           ;I2C2.c: 78: result = 2;
  3925  03C5  3002               	movlw	2
  3926  03C6  00F4               	movwf	??_I2C2_Transmit
  3927  03C7  0874               	movf	??_I2C2_Transmit,w
  3928  03C8  00F9               	movwf	I2C2_Transmit@result
  3929  03C9                     l3303:	
  3930                           ;I2C2.c: 80: }
  3931                           ;I2C2.c: 81: }
  3932                           ;I2C2.c: 82: }
  3933                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  3934                           
  3935  03C9  3005               	movlw	5
  3936  03CA  051C               	andwf	28,w	;volatile
  3937  03CB  00F4               	movwf	??_I2C2_Transmit
  3938  03CC  081E               	movf	30,w	;volatile
  3939  03CD  391F               	andlw	31
  3940  03CE  0474               	iorwf	??_I2C2_Transmit,w
  3941  03CF  1D03               	btfss	3,2
  3942  03D0  2BC9               	goto	l3303
  3943                           
  3944                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  3945  03D1  151E               	bsf	30,2	;volatile
  3946                           
  3947                           ;I2C2.c: 86: break;
  3948  03D2  2BFF               	goto	l3323
  3949  03D3                     l409:	
  3950                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  3951                           
  3952                           
  3953                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  3954  03D3  0024               	movlb	4	; select bank4
  3955  03D4  1D9C               	btfss	28,3	;volatile
  3956  03D5  1E1C               	btfss	28,4	;volatile
  3957  03D6  2BF4               	goto	l3317
  3958                           
  3959                           ;I2C2.c: 90: {
  3960                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  3961  03D7  01F8               	clrf	I2C2_Transmit@i_569
  3962  03D8                     l3313:	
  3963  03D8  0873               	movf	I2C2_Transmit@size,w
  3964  03D9  0278               	subwf	I2C2_Transmit@i_569,w
  3965  03DA  1803               	btfsc	3,0
  3966  03DB  2BEF               	goto	l3315
  3967                           
  3968                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  3969  03DC  0878               	movf	I2C2_Transmit@i_569,w
  3970  03DD  0772               	addwf	I2C2_Transmit@pData,w
  3971  03DE  00F4               	movwf	??_I2C2_Transmit
  3972  03DF  0874               	movf	??_I2C2_Transmit,w
  3973  03E0  0086               	movwf	6
  3974  03E1  0187               	clrf	7
  3975  03E2  0801               	movf	1,w
  3976  03E3  00F5               	movwf	??_I2C2_Transmit+1
  3977  03E4  0878               	movf	I2C2_Transmit@i_569,w
  3978  03E5  3EA6               	addlw	(low (_I2C2_Config| 0))& (0+255)
  3979  03E6  0086               	movwf	6
  3980  03E7  0187               	clrf	7
  3981  03E8  0875               	movf	??_I2C2_Transmit+1,w
  3982  03E9  0081               	movwf	1
  3983  03EA  3001               	movlw	1
  3984  03EB  00F4               	movwf	??_I2C2_Transmit
  3985  03EC  0874               	movf	??_I2C2_Transmit,w
  3986  03ED  07F8               	addwf	I2C2_Transmit@i_569,f
  3987  03EE  2BD8               	goto	l3313
  3988  03EF                     l3315:	
  3989                           
  3990                           ;I2C2.c: 93: result = size;
  3991  03EF  0873               	movf	I2C2_Transmit@size,w
  3992  03F0  00F4               	movwf	??_I2C2_Transmit
  3993  03F1  0874               	movf	??_I2C2_Transmit,w
  3994  03F2  00F9               	movwf	I2C2_Transmit@result
  3995                           
  3996                           ;I2C2.c: 94: }
  3997  03F3  2BFF               	goto	l3323
  3998  03F4                     l3317:	
  3999                           
  4000                           ;I2C2.c: 95: else
  4001                           ;I2C2.c: 96: result = 0;
  4002  03F4  01F9               	clrf	I2C2_Transmit@result
  4003                           
  4004                           ;I2C2.c: 98: }
  4005                           
  4006                           ;I2C2.c: 97: break;
  4007  03F5  2BFF               	goto	l3323
  4008  03F6                     l3321:	
  4009  03F6  0021               	movlb	1	; select bank1
  4010  03F7  0838               	movf	(_I2C2_Config^(0+128)+18),w
  4011                           
  4012                           ; Switch size 1, requested type "space"
  4013                           ; Number of cases is 2, Range of values is 0 to 1
  4014                           ; switch strategies available:
  4015                           ; Name         Instructions Cycles
  4016                           ; simple_byte            7     4 (average)
  4017                           ; direct_byte           10     6 (fixed)
  4018                           ; jumptable            260     6 (fixed)
  4019                           ;	Chosen strategy is simple_byte
  4020  03F8  3A00               	xorlw	0	; case 0
  4021  03F9  1903               	skipnz
  4022  03FA  2B85               	goto	l3277
  4023  03FB  3A01               	xorlw	1	; case 1
  4024  03FC  1903               	skipnz
  4025  03FD  2BD3               	goto	l409
  4026  03FE  2BFF               	goto	l3323
  4027  03FF                     l3323:	
  4028                           
  4029                           ;I2C2.c: 100: return result;
  4030  03FF  0879               	movf	I2C2_Transmit@result,w
  4031  0400  0008               	return
  4032  0401                     __end_of_I2C2_Transmit:	
  4033                           
  4034                           	psect	text15
  4035  0401                     __ptext15:	
  4036 ;; *************** function _I2C1_Transmit *****************
  4037 ;; Defined at:
  4038 ;;		line 52 in file "I2C1.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  address         1    wreg     unsigned char 
  4041 ;;  pData           1    2[COMMON] PTR unsigned char 
  4042 ;;		 -> VoltageReg(2), main@testdata(4), 
  4043 ;;  size            1    3[COMMON] unsigned char 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  address         1    6[COMMON] unsigned char 
  4046 ;;  i               1    8[COMMON] unsigned char 
  4047 ;;  i               1    7[COMMON] unsigned char 
  4048 ;;  result          1    9[COMMON] char 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  1    wreg      char 
  4051 ;; Registers used:
  4052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4058 ;;      Params:         2       0       0       0       0       0
  4059 ;;      Locals:         4       0       0       0       0       0
  4060 ;;      Temps:          2       0       0       0       0       0
  4061 ;;      Totals:         8       0       0       0       0       0
  4062 ;;Total ram usage:        8 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:    3
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_I2C_Transmit
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           
  4073                           ;psect for function _I2C1_Transmit
  4074  0401                     _I2C1_Transmit:	
  4075                           
  4076                           ;incstack = 0
  4077                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  4078                           ;I2C1_Transmit@address stored from wreg
  4079  0401  00F6               	movwf	I2C1_Transmit@address
  4080                           
  4081                           ;I2C1.c: 54: int8_t result;
  4082                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  4083  0402  2C74               	goto	l3269
  4084  0403                     l3225:	
  4085                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4086                           
  4087                           ;I2C1.c: 57: {
  4088                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  4089                           
  4090  0403  3005               	movlw	5
  4091  0404  0024               	movlb	4	; select bank4
  4092  0405  0514               	andwf	20,w	;volatile
  4093  0406  00F4               	movwf	??_I2C1_Transmit
  4094  0407  0816               	movf	22,w	;volatile
  4095  0408  391F               	andlw	31
  4096  0409  0474               	iorwf	??_I2C1_Transmit,w
  4097  040A  1D03               	btfss	3,2
  4098  040B  2C03               	goto	l3225
  4099                           
  4100                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  4101  040C  1416               	bsf	22,0	;volatile
  4102  040D                     l3227:	
  4103                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4104                           
  4105  040D  3005               	movlw	5
  4106  040E  0514               	andwf	20,w	;volatile
  4107  040F  00F4               	movwf	??_I2C1_Transmit
  4108  0410  0816               	movf	22,w	;volatile
  4109  0411  391F               	andlw	31
  4110  0412  0474               	iorwf	??_I2C1_Transmit,w
  4111  0413  1D03               	btfss	3,2
  4112  0414  2C0D               	goto	l3227
  4113                           
  4114                           ;I2C1.c: 63: SSP1BUF = address << 1;
  4115  0415  3576               	lslf	I2C1_Transmit@address,w
  4116  0416  0091               	movwf	17	;volatile
  4117  0417                     l528:	
  4118                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  4119                           
  4120  0417  1914               	btfsc	20,2	;volatile
  4121  0418  2C17               	goto	l528
  4122                           
  4123                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  4124  0419  3000               	movlw	0
  4125  041A  1B16               	btfsc	22,6	;volatile
  4126  041B  3001               	movlw	1
  4127  041C  00F9               	movwf	I2C1_Transmit@result
  4128                           
  4129                           ;I2C1.c: 67: if (!result)
  4130  041D  0879               	movf	I2C1_Transmit@result,w
  4131  041E  1D03               	btfss	3,2
  4132  041F  2C47               	goto	l3251
  4133                           
  4134                           ;I2C1.c: 68: {
  4135                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  4136  0420  01F7               	clrf	I2C1_Transmit@i
  4137  0421  2C26               	goto	l3249
  4138  0422                     l3247:	
  4139                           ;I2C1.c: 79: break;
  4140                           
  4141  0422  3001               	movlw	1
  4142  0423  00F4               	movwf	??_I2C1_Transmit
  4143  0424  0874               	movf	??_I2C1_Transmit,w
  4144  0425  07F7               	addwf	I2C1_Transmit@i,f
  4145  0426                     l3249:	
  4146  0426  0873               	movf	I2C1_Transmit@size,w
  4147  0427  0277               	subwf	I2C1_Transmit@i,w
  4148  0428  1803               	btfsc	3,0
  4149  0429  2C47               	goto	l3251
  4150  042A                     l3237:	
  4151                           ;I2C1.c: 70: {
  4152                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4153                           
  4154  042A  3005               	movlw	5
  4155  042B  0514               	andwf	20,w	;volatile
  4156  042C  00F4               	movwf	??_I2C1_Transmit
  4157  042D  0816               	movf	22,w	;volatile
  4158  042E  391F               	andlw	31
  4159  042F  0474               	iorwf	??_I2C1_Transmit,w
  4160  0430  1D03               	btfss	3,2
  4161  0431  2C2A               	goto	l3237
  4162                           
  4163                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  4164  0432  0877               	movf	I2C1_Transmit@i,w
  4165  0433  0772               	addwf	I2C1_Transmit@pData,w
  4166  0434  00F4               	movwf	??_I2C1_Transmit
  4167  0435  0874               	movf	??_I2C1_Transmit,w
  4168  0436  0086               	movwf	6
  4169  0437  0187               	clrf	7
  4170  0438  0801               	movf	1,w
  4171  0439  0091               	movwf	17	;volatile
  4172  043A                     l537:	
  4173                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  4174                           
  4175  043A  1914               	btfsc	20,2	;volatile
  4176  043B  2C3A               	goto	l537
  4177                           
  4178                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  4179  043C  3000               	movlw	0
  4180  043D  1B16               	btfsc	22,6	;volatile
  4181  043E  3001               	movlw	1
  4182  043F  00F9               	movwf	I2C1_Transmit@result
  4183                           
  4184                           ;I2C1.c: 76: if (result)
  4185  0440  0879               	movf	I2C1_Transmit@result,w
  4186  0441  1903               	btfsc	3,2
  4187  0442  2C22               	goto	l3247
  4188                           
  4189                           ;I2C1.c: 77: {
  4190                           ;I2C1.c: 78: result = 2;
  4191  0443  3002               	movlw	2
  4192  0444  00F4               	movwf	??_I2C1_Transmit
  4193  0445  0874               	movf	??_I2C1_Transmit,w
  4194  0446  00F9               	movwf	I2C1_Transmit@result
  4195  0447                     l3251:	
  4196                           ;I2C1.c: 80: }
  4197                           ;I2C1.c: 81: }
  4198                           ;I2C1.c: 82: }
  4199                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4200                           
  4201  0447  3005               	movlw	5
  4202  0448  0514               	andwf	20,w	;volatile
  4203  0449  00F4               	movwf	??_I2C1_Transmit
  4204  044A  0816               	movf	22,w	;volatile
  4205  044B  391F               	andlw	31
  4206  044C  0474               	iorwf	??_I2C1_Transmit,w
  4207  044D  1D03               	btfss	3,2
  4208  044E  2C47               	goto	l3251
  4209                           
  4210                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  4211  044F  1516               	bsf	22,2	;volatile
  4212                           
  4213                           ;I2C1.c: 86: break;
  4214  0450  2C7D               	goto	l3271
  4215  0451                     l546:	
  4216                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  4217                           
  4218                           
  4219                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  4220  0451  0024               	movlb	4	; select bank4
  4221  0452  1D94               	btfss	20,3	;volatile
  4222  0453  1E14               	btfss	20,4	;volatile
  4223  0454  2C72               	goto	l3265
  4224                           
  4225                           ;I2C1.c: 90: {
  4226                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  4227  0455  01F8               	clrf	I2C1_Transmit@i_708
  4228  0456                     l3261:	
  4229  0456  0873               	movf	I2C1_Transmit@size,w
  4230  0457  0278               	subwf	I2C1_Transmit@i_708,w
  4231  0458  1803               	btfsc	3,0
  4232  0459  2C6D               	goto	l3263
  4233                           
  4234                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  4235  045A  0878               	movf	I2C1_Transmit@i_708,w
  4236  045B  0772               	addwf	I2C1_Transmit@pData,w
  4237  045C  00F4               	movwf	??_I2C1_Transmit
  4238  045D  0874               	movf	??_I2C1_Transmit,w
  4239  045E  0086               	movwf	6
  4240  045F  0187               	clrf	7
  4241  0460  0801               	movf	1,w
  4242  0461  00F5               	movwf	??_I2C1_Transmit+1
  4243  0462  0878               	movf	I2C1_Transmit@i_708,w
  4244  0463  3EB9               	addlw	(low (_I2C1_Config| 0))& (0+255)
  4245  0464  0086               	movwf	6
  4246  0465  0187               	clrf	7
  4247  0466  0875               	movf	??_I2C1_Transmit+1,w
  4248  0467  0081               	movwf	1
  4249  0468  3001               	movlw	1
  4250  0469  00F4               	movwf	??_I2C1_Transmit
  4251  046A  0874               	movf	??_I2C1_Transmit,w
  4252  046B  07F8               	addwf	I2C1_Transmit@i_708,f
  4253  046C  2C56               	goto	l3261
  4254  046D                     l3263:	
  4255                           
  4256                           ;I2C1.c: 93: result = size;
  4257  046D  0873               	movf	I2C1_Transmit@size,w
  4258  046E  00F4               	movwf	??_I2C1_Transmit
  4259  046F  0874               	movf	??_I2C1_Transmit,w
  4260  0470  00F9               	movwf	I2C1_Transmit@result
  4261                           
  4262                           ;I2C1.c: 94: }
  4263  0471  2C7D               	goto	l3271
  4264  0472                     l3265:	
  4265                           
  4266                           ;I2C1.c: 95: else
  4267                           ;I2C1.c: 96: result = 0;
  4268  0472  01F9               	clrf	I2C1_Transmit@result
  4269                           
  4270                           ;I2C1.c: 98: }
  4271                           
  4272                           ;I2C1.c: 97: break;
  4273  0473  2C7D               	goto	l3271
  4274  0474                     l3269:	
  4275  0474  0021               	movlb	1	; select bank1
  4276  0475  084B               	movf	(_I2C1_Config^(0+128)+18),w
  4277                           
  4278                           ; Switch size 1, requested type "space"
  4279                           ; Number of cases is 2, Range of values is 0 to 1
  4280                           ; switch strategies available:
  4281                           ; Name         Instructions Cycles
  4282                           ; simple_byte            7     4 (average)
  4283                           ; direct_byte           10     6 (fixed)
  4284                           ; jumptable            260     6 (fixed)
  4285                           ;	Chosen strategy is simple_byte
  4286  0476  3A00               	xorlw	0	; case 0
  4287  0477  1903               	skipnz
  4288  0478  2C03               	goto	l3225
  4289  0479  3A01               	xorlw	1	; case 1
  4290  047A  1903               	skipnz
  4291  047B  2C51               	goto	l546
  4292  047C  2C7D               	goto	l3271
  4293  047D                     l3271:	
  4294                           
  4295                           ;I2C1.c: 100: return result;
  4296  047D  0879               	movf	I2C1_Transmit@result,w
  4297  047E  0008               	return
  4298  047F                     __end_of_I2C1_Transmit:	
  4299                           
  4300                           	psect	text16
  4301  0776                     __ptext16:	
  4302 ;; *************** function _I2C_Receive *****************
  4303 ;; Defined at:
  4304 ;;		line 40 in file "I2C_Common.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  I2Cx            1    wreg     enum E2992
  4307 ;;  address         1    0[BANK0 ] unsigned char 
  4308 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  4309 ;;		 -> main@resultdata(4), 
  4310 ;;  size            1    2[BANK0 ] unsigned char 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  I2Cx            1    7[BANK0 ] enum E2992
  4313 ;;  result          1    6[BANK0 ] char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      char 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4323 ;;      Params:         0       3       0       0       0       0
  4324 ;;      Locals:         0       2       0       0       0       0
  4325 ;;      Temps:          0       3       0       0       0       0
  4326 ;;      Totals:         0       8       0       0       0       0
  4327 ;;Total ram usage:        8 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    4
  4330 ;; This function calls:
  4331 ;;		_I2C1_Receive
  4332 ;;		_I2C2_Receive
  4333 ;; This function is called by:
  4334 ;;		_main
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           
  4339                           ;psect for function _I2C_Receive
  4340  0776                     _I2C_Receive:	
  4341                           
  4342                           ;incstack = 0
  4343                           ; Regs used in _I2C_Receive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4344                           ;I2C_Receive@I2Cx stored from wreg
  4345  0776  0020               	movlb	0	; select bank0
  4346  0777  00A7               	movwf	I2C_Receive@I2Cx
  4347                           
  4348                           ;I2C_Common.c: 42: int8_t result;
  4349                           ;I2C_Common.c: 44: switch(I2Cx)
  4350  0778  2F99               	goto	l3459
  4351  0779                     l3453:	
  4352                           ;I2C_Common.c: 45: {
  4353                           ;I2C_Common.c: 46: case I2C1_MODULE:
  4354                           
  4355                           
  4356                           ;I2C_Common.c: 47: result = I2C1_Receive(address,pData,size);
  4357  0779  0821               	movf	I2C_Receive@pData,w
  4358  077A  00A3               	movwf	??_I2C_Receive
  4359  077B  0823               	movf	??_I2C_Receive,w
  4360  077C  00F2               	movwf	I2C1_Receive@pData
  4361  077D  0822               	movf	I2C_Receive@size,w
  4362  077E  00A4               	movwf	??_I2C_Receive+1
  4363  077F  0824               	movf	??_I2C_Receive+1,w
  4364  0780  00F3               	movwf	I2C1_Receive@size
  4365  0781  0820               	movf	I2C_Receive@address,w
  4366  0782  3182  22F2         	fcall	_I2C1_Receive
  4367  0784  0020               	movlb	0	; select bank0
  4368  0785  00A5               	movwf	??_I2C_Receive+2
  4369  0786  0825               	movf	??_I2C_Receive+2,w
  4370  0787  00A6               	movwf	I2C_Receive@result
  4371                           
  4372                           ;I2C_Common.c: 48: break;
  4373  0788  0008               	return
  4374  0789                     l3455:	
  4375                           ;I2C_Common.c: 50: case I2C2_MODULE:
  4376                           
  4377                           
  4378                           ;I2C_Common.c: 51: result = I2C2_Receive(address,pData,size);
  4379  0789  0821               	movf	I2C_Receive@pData,w
  4380  078A  00A3               	movwf	??_I2C_Receive
  4381  078B  0823               	movf	??_I2C_Receive,w
  4382  078C  00F2               	movwf	I2C2_Receive@pData
  4383  078D  0822               	movf	I2C_Receive@size,w
  4384  078E  00A4               	movwf	??_I2C_Receive+1
  4385  078F  0824               	movf	??_I2C_Receive+1,w
  4386  0790  00F3               	movwf	I2C2_Receive@size
  4387  0791  0820               	movf	I2C_Receive@address,w
  4388  0792  3182  2261         	fcall	_I2C2_Receive
  4389  0794  0020               	movlb	0	; select bank0
  4390  0795  00A5               	movwf	??_I2C_Receive+2
  4391  0796  0825               	movf	??_I2C_Receive+2,w
  4392  0797  00A6               	movwf	I2C_Receive@result
  4393                           
  4394                           ;I2C_Common.c: 53: }
  4395                           
  4396                           ;I2C_Common.c: 52: break;
  4397  0798  0008               	return
  4398  0799                     l3459:	
  4399  0799  0827               	movf	I2C_Receive@I2Cx,w
  4400                           
  4401                           ; Switch size 1, requested type "space"
  4402                           ; Number of cases is 2, Range of values is 0 to 1
  4403                           ; switch strategies available:
  4404                           ; Name         Instructions Cycles
  4405                           ; simple_byte            7     4 (average)
  4406                           ; direct_byte           10     6 (fixed)
  4407                           ; jumptable            260     6 (fixed)
  4408                           ;	Chosen strategy is simple_byte
  4409  079A  3A00               	xorlw	0	; case 0
  4410  079B  1903               	skipnz
  4411  079C  2F79               	goto	l3453
  4412  079D  3A01               	xorlw	1	; case 1
  4413  079E  1903               	skipnz
  4414  079F  2F89               	goto	l3455
  4415  07A0  2FA1               	goto	l332
  4416  07A1                     l332:	
  4417                           ;I2C_Common.c: 55: return result;
  4418                           ;	Return value of _I2C_Receive is never used
  4419                           
  4420  07A1  0008               	return
  4421  07A2                     __end_of_I2C_Receive:	
  4422                           
  4423                           	psect	text17
  4424  0261                     __ptext17:	
  4425 ;; *************** function _I2C2_Receive *****************
  4426 ;; Defined at:
  4427 ;;		line 103 in file "I2C2.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  address         1    wreg     unsigned char 
  4430 ;;  pData           1    2[COMMON] PTR unsigned char 
  4431 ;;		 -> main@resultdata(4), 
  4432 ;;  size            1    3[COMMON] unsigned char 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  address         1    6[COMMON] unsigned char 
  4435 ;;  i               1    9[COMMON] unsigned char 
  4436 ;;  i               1    8[COMMON] unsigned char 
  4437 ;;  result          1    7[COMMON] char 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      char 
  4440 ;; Registers used:
  4441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4447 ;;      Params:         2       0       0       0       0       0
  4448 ;;      Locals:         4       0       0       0       0       0
  4449 ;;      Temps:          2       0       0       0       0       0
  4450 ;;      Totals:         8       0       0       0       0       0
  4451 ;;Total ram usage:        8 bytes
  4452 ;; Hardware stack levels used:    1
  4453 ;; Hardware stack levels required when called:    3
  4454 ;; This function calls:
  4455 ;;		Nothing
  4456 ;; This function is called by:
  4457 ;;		_I2C_Receive
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           
  4462                           ;psect for function _I2C2_Receive
  4463  0261                     _I2C2_Receive:	
  4464                           
  4465                           ;incstack = 0
  4466                           ; Regs used in _I2C2_Receive: [wreg-fsr1h+status,2+status,0]
  4467                           ;I2C2_Receive@address stored from wreg
  4468  0261  00F6               	movwf	I2C2_Receive@address
  4469                           
  4470                           ;I2C2.c: 105: int8_t result;
  4471                           ;I2C2.c: 107: switch(I2C2_Config.Mode)
  4472  0262  2AE7               	goto	l3421
  4473  0263                     l3379:	
  4474                           ;I2C2.c: 110: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4475                           
  4476                           ;I2C2.c: 108: {
  4477                           ;I2C2.c: 109: case I2C_MODE_MASTER:
  4478                           
  4479  0263  3005               	movlw	5
  4480  0264  0024               	movlb	4	; select bank4
  4481  0265  051C               	andwf	28,w	;volatile
  4482  0266  00F4               	movwf	??_I2C2_Receive
  4483  0267  081E               	movf	30,w	;volatile
  4484  0268  391F               	andlw	31
  4485  0269  0474               	iorwf	??_I2C2_Receive,w
  4486  026A  1D03               	btfss	3,2
  4487  026B  2A63               	goto	l3379
  4488                           
  4489                           ;I2C2.c: 111: SSP2CON2bits.SEN = 1;
  4490  026C  141E               	bsf	30,0	;volatile
  4491  026D                     l3381:	
  4492                           ;I2C2.c: 113: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4493                           
  4494  026D  3005               	movlw	5
  4495  026E  051C               	andwf	28,w	;volatile
  4496  026F  00F4               	movwf	??_I2C2_Receive
  4497  0270  081E               	movf	30,w	;volatile
  4498  0271  391F               	andlw	31
  4499  0272  0474               	iorwf	??_I2C2_Receive,w
  4500  0273  1D03               	btfss	3,2
  4501  0274  2A6D               	goto	l3381
  4502                           
  4503                           ;I2C2.c: 114: SSP2BUF = ((address << 1)|0x01);
  4504  0275  1403               	setc
  4505  0276  0D76               	rlf	I2C2_Receive@address,w
  4506  0277  0099               	movwf	25	;volatile
  4507  0278                     l426:	
  4508                           ;I2C2.c: 115: while(SSP2STATbits.R_nW);
  4509                           
  4510  0278  191C               	btfsc	28,2	;volatile
  4511  0279  2A78               	goto	l426
  4512                           
  4513                           ;I2C2.c: 117: result = SSP2CON2bits.ACKSTAT;
  4514  027A  3000               	movlw	0
  4515  027B  1B1E               	btfsc	30,6	;volatile
  4516  027C  3001               	movlw	1
  4517  027D  00F7               	movwf	I2C2_Receive@result
  4518                           
  4519                           ;I2C2.c: 118: if (!result)
  4520  027E  0877               	movf	I2C2_Receive@result,w
  4521  027F  1D03               	btfss	3,2
  4522  0280  2AB8               	goto	l3405
  4523                           
  4524                           ;I2C2.c: 119: {
  4525                           ;I2C2.c: 120: for (uint8_t i=0;i<size;i++)
  4526  0281  01F8               	clrf	I2C2_Receive@i
  4527  0282                     l3403:	
  4528  0282  0873               	movf	I2C2_Receive@size,w
  4529  0283  0278               	subwf	I2C2_Receive@i,w
  4530  0284  1803               	btfsc	3,0
  4531  0285  2AB8               	goto	l3405
  4532  0286                     l3391:	
  4533                           ;I2C2.c: 121: {
  4534                           ;I2C2.c: 122: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4535                           
  4536  0286  3005               	movlw	5
  4537  0287  051C               	andwf	28,w	;volatile
  4538  0288  00F4               	movwf	??_I2C2_Receive
  4539  0289  081E               	movf	30,w	;volatile
  4540  028A  391F               	andlw	31
  4541  028B  0474               	iorwf	??_I2C2_Receive,w
  4542  028C  1D03               	btfss	3,2
  4543  028D  2A86               	goto	l3391
  4544                           
  4545                           ;I2C2.c: 123: SSP2CON2bits.RCEN = 1;
  4546  028E  159E               	bsf	30,3	;volatile
  4547  028F                     l435:	
  4548                           ;I2C2.c: 124: while(SSP2CON2bits.RCEN);
  4549                           
  4550  028F  199E               	btfsc	30,3	;volatile
  4551  0290  2A8F               	goto	l435
  4552                           
  4553                           ;I2C2.c: 125: *(pData+i) = SSP2BUF;
  4554  0291  0819               	movf	25,w	;volatile
  4555  0292  00F4               	movwf	??_I2C2_Receive
  4556  0293  0878               	movf	I2C2_Receive@i,w
  4557  0294  0772               	addwf	I2C2_Receive@pData,w
  4558  0295  00F5               	movwf	??_I2C2_Receive+1
  4559  0296  0875               	movf	??_I2C2_Receive+1,w
  4560  0297  0086               	movwf	6
  4561  0298  0187               	clrf	7
  4562  0299  0874               	movf	??_I2C2_Receive,w
  4563  029A  0081               	movwf	1
  4564  029B                     l3395:	
  4565                           ;I2C2.c: 126: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4566                           
  4567  029B  3005               	movlw	5
  4568  029C  051C               	andwf	28,w	;volatile
  4569  029D  00F4               	movwf	??_I2C2_Receive
  4570  029E  081E               	movf	30,w	;volatile
  4571  029F  391F               	andlw	31
  4572  02A0  0474               	iorwf	??_I2C2_Receive,w
  4573  02A1  1D03               	btfss	3,2
  4574  02A2  2A9B               	goto	l3395
  4575                           
  4576                           ;I2C2.c: 127: if (i == size-1)
  4577  02A3  0873               	movf	I2C2_Receive@size,w
  4578  02A4  3EFF               	addlw	255
  4579  02A5  00F4               	movwf	??_I2C2_Receive
  4580  02A6  30FF               	movlw	255
  4581  02A7  1803               	skipnc
  4582  02A8  3000               	movlw	0
  4583  02A9  00F5               	movwf	??_I2C2_Receive+1
  4584  02AA  0878               	movf	I2C2_Receive@i,w
  4585  02AB  0674               	xorwf	??_I2C2_Receive,w
  4586  02AC  0475               	iorwf	??_I2C2_Receive+1,w
  4587  02AD  1D03               	skipz
  4588  02AE  2AB1               	goto	l441
  4589                           
  4590                           ;I2C2.c: 128: SSP2CON2bits.ACKDT = 1;
  4591  02AF  169E               	bsf	30,5	;volatile
  4592  02B0  2AB2               	goto	l442
  4593  02B1                     l441:	
  4594                           
  4595                           ;I2C2.c: 129: else
  4596                           ;I2C2.c: 130: SSP2CON2bits.ACKDT = 0;
  4597  02B1  129E               	bcf	30,5	;volatile
  4598  02B2                     l442:	
  4599                           
  4600                           ;I2C2.c: 131: SSP2CON2bits.ACKEN = 1;
  4601  02B2  161E               	bsf	30,4	;volatile
  4602  02B3  3001               	movlw	1
  4603  02B4  00F4               	movwf	??_I2C2_Receive
  4604  02B5  0874               	movf	??_I2C2_Receive,w
  4605  02B6  07F8               	addwf	I2C2_Receive@i,f
  4606  02B7  2A82               	goto	l3403
  4607  02B8                     l3405:	
  4608                           ;I2C2.c: 132: }
  4609                           ;I2C2.c: 133: }
  4610                           ;I2C2.c: 135: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4611                           
  4612  02B8  3005               	movlw	5
  4613  02B9  051C               	andwf	28,w	;volatile
  4614  02BA  00F4               	movwf	??_I2C2_Receive
  4615  02BB  081E               	movf	30,w	;volatile
  4616  02BC  391F               	andlw	31
  4617  02BD  0474               	iorwf	??_I2C2_Receive,w
  4618  02BE  1D03               	btfss	3,2
  4619  02BF  2AB8               	goto	l3405
  4620                           
  4621                           ;I2C2.c: 136: SSP2CON2bits.PEN = 1;
  4622  02C0  151E               	bsf	30,2	;volatile
  4623                           
  4624                           ;I2C2.c: 137: break;
  4625  02C1  2AF0               	goto	l3423
  4626  02C2                     l448:	
  4627                           ;I2C2.c: 139: case I2C_MODE_SLAVE:
  4628                           
  4629                           
  4630                           ;I2C2.c: 140: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  4631  02C2  0024               	movlb	4	; select bank4
  4632  02C3  1D9C               	btfss	28,3	;volatile
  4633  02C4  1E1C               	btfss	28,4	;volatile
  4634  02C5  2AF0               	goto	l3423
  4635                           
  4636                           ;I2C2.c: 141: {
  4637                           ;I2C2.c: 142: for(uint8_t i = 0;i<size;i++)
  4638  02C6  01F9               	clrf	I2C2_Receive@i_576
  4639  02C7                     l3415:	
  4640  02C7  0873               	movf	I2C2_Receive@size,w
  4641  02C8  0279               	subwf	I2C2_Receive@i_576,w
  4642  02C9  1803               	btfsc	3,0
  4643  02CA  2ADE               	goto	l3417
  4644                           
  4645                           ;I2C2.c: 143: pData[i] = I2C2_Config.SlaveReceiveBuff[i];
  4646  02CB  0879               	movf	I2C2_Receive@i_576,w
  4647  02CC  3EAE               	addlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  4648  02CD  0086               	movwf	6
  4649  02CE  0187               	clrf	7
  4650  02CF  0801               	movf	1,w
  4651  02D0  00F4               	movwf	??_I2C2_Receive
  4652  02D1  0879               	movf	I2C2_Receive@i_576,w
  4653  02D2  0772               	addwf	I2C2_Receive@pData,w
  4654  02D3  00F5               	movwf	??_I2C2_Receive+1
  4655  02D4  0875               	movf	??_I2C2_Receive+1,w
  4656  02D5  0086               	movwf	6
  4657  02D6  0187               	clrf	7
  4658  02D7  0874               	movf	??_I2C2_Receive,w
  4659  02D8  0081               	movwf	1
  4660  02D9  3001               	movlw	1
  4661  02DA  00F4               	movwf	??_I2C2_Receive
  4662  02DB  0874               	movf	??_I2C2_Receive,w
  4663  02DC  07F9               	addwf	I2C2_Receive@i_576,f
  4664  02DD  2AC7               	goto	l3415
  4665  02DE                     l3417:	
  4666                           
  4667                           ;I2C2.c: 144: result = I2C2_Config.ReceivePoint - I2C2_Config.SlaveReceiveBuff;
  4668  02DE  30AE               	movlw	(low (_I2C2_Config+8))& (0+255)
  4669  02DF  3AFF               	xorlw	255
  4670  02E0  3E01               	addlw	1
  4671  02E1  0021               	movlb	1	; select bank1
  4672  02E2  0737               	addwf	(_I2C2_Config^(0+128)+17),w
  4673  02E3  00F4               	movwf	??_I2C2_Receive
  4674  02E4  0874               	movf	??_I2C2_Receive,w
  4675  02E5  00F7               	movwf	I2C2_Receive@result
  4676                           
  4677                           ;I2C2.c: 147: }
  4678                           
  4679                           ;I2C2.c: 145: }
  4680                           ;I2C2.c: 146: break;
  4681  02E6  2AF0               	goto	l3423
  4682  02E7                     l3421:	
  4683  02E7  0021               	movlb	1	; select bank1
  4684  02E8  0838               	movf	(_I2C2_Config^(0+128)+18),w
  4685                           
  4686                           ; Switch size 1, requested type "space"
  4687                           ; Number of cases is 2, Range of values is 0 to 1
  4688                           ; switch strategies available:
  4689                           ; Name         Instructions Cycles
  4690                           ; simple_byte            7     4 (average)
  4691                           ; direct_byte           10     6 (fixed)
  4692                           ; jumptable            260     6 (fixed)
  4693                           ;	Chosen strategy is simple_byte
  4694  02E9  3A00               	xorlw	0	; case 0
  4695  02EA  1903               	skipnz
  4696  02EB  2A63               	goto	l3379
  4697  02EC  3A01               	xorlw	1	; case 1
  4698  02ED  1903               	skipnz
  4699  02EE  2AC2               	goto	l448
  4700  02EF  2AF0               	goto	l3423
  4701  02F0                     l3423:	
  4702                           
  4703                           ;I2C2.c: 149: return result;
  4704  02F0  0877               	movf	I2C2_Receive@result,w
  4705  02F1  0008               	return
  4706  02F2                     __end_of_I2C2_Receive:	
  4707                           
  4708                           	psect	text18
  4709  02F2                     __ptext18:	
  4710 ;; *************** function _I2C1_Receive *****************
  4711 ;; Defined at:
  4712 ;;		line 103 in file "I2C1.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  address         1    wreg     unsigned char 
  4715 ;;  pData           1    2[COMMON] PTR unsigned char 
  4716 ;;		 -> main@resultdata(4), 
  4717 ;;  size            1    3[COMMON] unsigned char 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  address         1    6[COMMON] unsigned char 
  4720 ;;  i               1    9[COMMON] unsigned char 
  4721 ;;  i               1    8[COMMON] unsigned char 
  4722 ;;  result          1    7[COMMON] char 
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  1    wreg      char 
  4725 ;; Registers used:
  4726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4732 ;;      Params:         2       0       0       0       0       0
  4733 ;;      Locals:         4       0       0       0       0       0
  4734 ;;      Temps:          2       0       0       0       0       0
  4735 ;;      Totals:         8       0       0       0       0       0
  4736 ;;Total ram usage:        8 bytes
  4737 ;; Hardware stack levels used:    1
  4738 ;; Hardware stack levels required when called:    3
  4739 ;; This function calls:
  4740 ;;		Nothing
  4741 ;; This function is called by:
  4742 ;;		_I2C_Receive
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745                           
  4746                           
  4747                           ;psect for function _I2C1_Receive
  4748  02F2                     _I2C1_Receive:	
  4749                           
  4750                           ;incstack = 0
  4751                           ; Regs used in _I2C1_Receive: [wreg-fsr1h+status,2+status,0]
  4752                           ;I2C1_Receive@address stored from wreg
  4753  02F2  00F6               	movwf	I2C1_Receive@address
  4754                           
  4755                           ;I2C1.c: 105: int8_t result;
  4756                           ;I2C1.c: 107: switch(I2C1_Config.Mode)
  4757  02F3  2B78               	goto	l3371
  4758  02F4                     l3329:	
  4759                           ;I2C1.c: 110: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4760                           
  4761                           ;I2C1.c: 108: {
  4762                           ;I2C1.c: 109: case I2C_MODE_MASTER:
  4763                           
  4764  02F4  3005               	movlw	5
  4765  02F5  0024               	movlb	4	; select bank4
  4766  02F6  0514               	andwf	20,w	;volatile
  4767  02F7  00F4               	movwf	??_I2C1_Receive
  4768  02F8  0816               	movf	22,w	;volatile
  4769  02F9  391F               	andlw	31
  4770  02FA  0474               	iorwf	??_I2C1_Receive,w
  4771  02FB  1D03               	btfss	3,2
  4772  02FC  2AF4               	goto	l3329
  4773                           
  4774                           ;I2C1.c: 111: SSP1CON2bits.SEN = 1;
  4775  02FD  1416               	bsf	22,0	;volatile
  4776  02FE                     l3331:	
  4777                           ;I2C1.c: 113: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4778                           
  4779  02FE  3005               	movlw	5
  4780  02FF  0514               	andwf	20,w	;volatile
  4781  0300  00F4               	movwf	??_I2C1_Receive
  4782  0301  0816               	movf	22,w	;volatile
  4783  0302  391F               	andlw	31
  4784  0303  0474               	iorwf	??_I2C1_Receive,w
  4785  0304  1D03               	btfss	3,2
  4786  0305  2AFE               	goto	l3331
  4787                           
  4788                           ;I2C1.c: 114: SSP1BUF = ((address << 1)|0x01);
  4789  0306  1403               	setc
  4790  0307  0D76               	rlf	I2C1_Receive@address,w
  4791  0308  0091               	movwf	17	;volatile
  4792  0309                     l563:	
  4793                           ;I2C1.c: 115: while(SSP1STATbits.R_nW);
  4794                           
  4795  0309  1914               	btfsc	20,2	;volatile
  4796  030A  2B09               	goto	l563
  4797                           
  4798                           ;I2C1.c: 117: result = SSP1CON2bits.ACKSTAT;
  4799  030B  3000               	movlw	0
  4800  030C  1B16               	btfsc	22,6	;volatile
  4801  030D  3001               	movlw	1
  4802  030E  00F7               	movwf	I2C1_Receive@result
  4803                           
  4804                           ;I2C1.c: 118: if (!result)
  4805  030F  0877               	movf	I2C1_Receive@result,w
  4806  0310  1D03               	btfss	3,2
  4807  0311  2B49               	goto	l3355
  4808                           
  4809                           ;I2C1.c: 119: {
  4810                           ;I2C1.c: 120: for (uint8_t i=0;i<size;i++)
  4811  0312  01F8               	clrf	I2C1_Receive@i
  4812  0313                     l3353:	
  4813  0313  0873               	movf	I2C1_Receive@size,w
  4814  0314  0278               	subwf	I2C1_Receive@i,w
  4815  0315  1803               	btfsc	3,0
  4816  0316  2B49               	goto	l3355
  4817  0317                     l3341:	
  4818                           ;I2C1.c: 121: {
  4819                           ;I2C1.c: 122: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4820                           
  4821  0317  3005               	movlw	5
  4822  0318  0514               	andwf	20,w	;volatile
  4823  0319  00F4               	movwf	??_I2C1_Receive
  4824  031A  0816               	movf	22,w	;volatile
  4825  031B  391F               	andlw	31
  4826  031C  0474               	iorwf	??_I2C1_Receive,w
  4827  031D  1D03               	btfss	3,2
  4828  031E  2B17               	goto	l3341
  4829                           
  4830                           ;I2C1.c: 123: SSP1CON2bits.RCEN = 1;
  4831  031F  1596               	bsf	22,3	;volatile
  4832  0320                     l572:	
  4833                           ;I2C1.c: 124: while(SSP1CON2bits.RCEN);
  4834                           
  4835  0320  1996               	btfsc	22,3	;volatile
  4836  0321  2B20               	goto	l572
  4837                           
  4838                           ;I2C1.c: 125: *(pData+i) = SSP1BUF;
  4839  0322  0811               	movf	17,w	;volatile
  4840  0323  00F4               	movwf	??_I2C1_Receive
  4841  0324  0878               	movf	I2C1_Receive@i,w
  4842  0325  0772               	addwf	I2C1_Receive@pData,w
  4843  0326  00F5               	movwf	??_I2C1_Receive+1
  4844  0327  0875               	movf	??_I2C1_Receive+1,w
  4845  0328  0086               	movwf	6
  4846  0329  0187               	clrf	7
  4847  032A  0874               	movf	??_I2C1_Receive,w
  4848  032B  0081               	movwf	1
  4849  032C                     l3345:	
  4850                           ;I2C1.c: 126: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4851                           
  4852  032C  3005               	movlw	5
  4853  032D  0514               	andwf	20,w	;volatile
  4854  032E  00F4               	movwf	??_I2C1_Receive
  4855  032F  0816               	movf	22,w	;volatile
  4856  0330  391F               	andlw	31
  4857  0331  0474               	iorwf	??_I2C1_Receive,w
  4858  0332  1D03               	btfss	3,2
  4859  0333  2B2C               	goto	l3345
  4860                           
  4861                           ;I2C1.c: 127: if (i == size-1)
  4862  0334  0873               	movf	I2C1_Receive@size,w
  4863  0335  3EFF               	addlw	255
  4864  0336  00F4               	movwf	??_I2C1_Receive
  4865  0337  30FF               	movlw	255
  4866  0338  1803               	skipnc
  4867  0339  3000               	movlw	0
  4868  033A  00F5               	movwf	??_I2C1_Receive+1
  4869  033B  0878               	movf	I2C1_Receive@i,w
  4870  033C  0674               	xorwf	??_I2C1_Receive,w
  4871  033D  0475               	iorwf	??_I2C1_Receive+1,w
  4872  033E  1D03               	skipz
  4873  033F  2B42               	goto	l578
  4874                           
  4875                           ;I2C1.c: 128: SSP1CON2bits.ACKDT = 1;
  4876  0340  1696               	bsf	22,5	;volatile
  4877  0341  2B43               	goto	l579
  4878  0342                     l578:	
  4879                           
  4880                           ;I2C1.c: 129: else
  4881                           ;I2C1.c: 130: SSP1CON2bits.ACKDT = 0;
  4882  0342  1296               	bcf	22,5	;volatile
  4883  0343                     l579:	
  4884                           
  4885                           ;I2C1.c: 131: SSP1CON2bits.ACKEN = 1;
  4886  0343  1616               	bsf	22,4	;volatile
  4887  0344  3001               	movlw	1
  4888  0345  00F4               	movwf	??_I2C1_Receive
  4889  0346  0874               	movf	??_I2C1_Receive,w
  4890  0347  07F8               	addwf	I2C1_Receive@i,f
  4891  0348  2B13               	goto	l3353
  4892  0349                     l3355:	
  4893                           ;I2C1.c: 132: }
  4894                           ;I2C1.c: 133: }
  4895                           ;I2C1.c: 135: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  4896                           
  4897  0349  3005               	movlw	5
  4898  034A  0514               	andwf	20,w	;volatile
  4899  034B  00F4               	movwf	??_I2C1_Receive
  4900  034C  0816               	movf	22,w	;volatile
  4901  034D  391F               	andlw	31
  4902  034E  0474               	iorwf	??_I2C1_Receive,w
  4903  034F  1D03               	btfss	3,2
  4904  0350  2B49               	goto	l3355
  4905                           
  4906                           ;I2C1.c: 136: SSP1CON2bits.PEN = 1;
  4907  0351  1516               	bsf	22,2	;volatile
  4908                           
  4909                           ;I2C1.c: 137: break;
  4910  0352  2B81               	goto	l3373
  4911  0353                     l585:	
  4912                           ;I2C1.c: 139: case I2C_MODE_SLAVE:
  4913                           
  4914                           
  4915                           ;I2C1.c: 140: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  4916  0353  0024               	movlb	4	; select bank4
  4917  0354  1D94               	btfss	20,3	;volatile
  4918  0355  1E14               	btfss	20,4	;volatile
  4919  0356  2B81               	goto	l3373
  4920                           
  4921                           ;I2C1.c: 141: {
  4922                           ;I2C1.c: 142: for(uint8_t i = 0;i<size;i++)
  4923  0357  01F9               	clrf	I2C1_Receive@i_715
  4924  0358                     l3365:	
  4925  0358  0873               	movf	I2C1_Receive@size,w
  4926  0359  0279               	subwf	I2C1_Receive@i_715,w
  4927  035A  1803               	btfsc	3,0
  4928  035B  2B6F               	goto	l3367
  4929                           
  4930                           ;I2C1.c: 143: pData[i] = I2C1_Config.SlaveReceiveBuff[i];
  4931  035C  0879               	movf	I2C1_Receive@i_715,w
  4932  035D  3EC1               	addlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  4933  035E  0086               	movwf	6
  4934  035F  0187               	clrf	7
  4935  0360  0801               	movf	1,w
  4936  0361  00F4               	movwf	??_I2C1_Receive
  4937  0362  0879               	movf	I2C1_Receive@i_715,w
  4938  0363  0772               	addwf	I2C1_Receive@pData,w
  4939  0364  00F5               	movwf	??_I2C1_Receive+1
  4940  0365  0875               	movf	??_I2C1_Receive+1,w
  4941  0366  0086               	movwf	6
  4942  0367  0187               	clrf	7
  4943  0368  0874               	movf	??_I2C1_Receive,w
  4944  0369  0081               	movwf	1
  4945  036A  3001               	movlw	1
  4946  036B  00F4               	movwf	??_I2C1_Receive
  4947  036C  0874               	movf	??_I2C1_Receive,w
  4948  036D  07F9               	addwf	I2C1_Receive@i_715,f
  4949  036E  2B58               	goto	l3365
  4950  036F                     l3367:	
  4951                           
  4952                           ;I2C1.c: 144: result = I2C1_Config.ReceivePoint - I2C1_Config.SlaveReceiveBuff;
  4953  036F  30C1               	movlw	(low (_I2C1_Config+8))& (0+255)
  4954  0370  3AFF               	xorlw	255
  4955  0371  3E01               	addlw	1
  4956  0372  0021               	movlb	1	; select bank1
  4957  0373  074A               	addwf	(_I2C1_Config^(0+128)+17),w
  4958  0374  00F4               	movwf	??_I2C1_Receive
  4959  0375  0874               	movf	??_I2C1_Receive,w
  4960  0376  00F7               	movwf	I2C1_Receive@result
  4961                           
  4962                           ;I2C1.c: 147: }
  4963                           
  4964                           ;I2C1.c: 145: }
  4965                           ;I2C1.c: 146: break;
  4966  0377  2B81               	goto	l3373
  4967  0378                     l3371:	
  4968  0378  0021               	movlb	1	; select bank1
  4969  0379  084B               	movf	(_I2C1_Config^(0+128)+18),w
  4970                           
  4971                           ; Switch size 1, requested type "space"
  4972                           ; Number of cases is 2, Range of values is 0 to 1
  4973                           ; switch strategies available:
  4974                           ; Name         Instructions Cycles
  4975                           ; simple_byte            7     4 (average)
  4976                           ; direct_byte           10     6 (fixed)
  4977                           ; jumptable            260     6 (fixed)
  4978                           ;	Chosen strategy is simple_byte
  4979  037A  3A00               	xorlw	0	; case 0
  4980  037B  1903               	skipnz
  4981  037C  2AF4               	goto	l3329
  4982  037D  3A01               	xorlw	1	; case 1
  4983  037E  1903               	skipnz
  4984  037F  2B53               	goto	l585
  4985  0380  2B81               	goto	l3373
  4986  0381                     l3373:	
  4987                           
  4988                           ;I2C1.c: 149: return result;
  4989  0381  0877               	movf	I2C1_Receive@result,w
  4990  0382  0008               	return
  4991  0383                     __end_of_I2C1_Receive:	
  4992                           
  4993                           	psect	text19
  4994  07CD                     __ptext19:	
  4995 ;; *************** function _I2C_Init *****************
  4996 ;; Defined at:
  4997 ;;		line 6 in file "I2C_Common.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  I2Cx            1    wreg     enum E2992
  5000 ;;  address         1    7[COMMON] unsigned char 
  5001 ;;  mode            1    8[COMMON] enum E2983
  5002 ;;  Speed           1    9[COMMON] enum E2987
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  I2Cx            1    2[BANK0 ] enum E2992
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      void 
  5007 ;; Registers used:
  5008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5014 ;;      Params:         3       0       0       0       0       0
  5015 ;;      Locals:         0       1       0       0       0       0
  5016 ;;      Temps:          0       2       0       0       0       0
  5017 ;;      Totals:         3       3       0       0       0       0
  5018 ;;Total ram usage:        6 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; Hardware stack levels required when called:    5
  5021 ;; This function calls:
  5022 ;;		_I2C1_Setting
  5023 ;;		_I2C2_Setting
  5024 ;; This function is called by:
  5025 ;;		_main
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           
  5030                           ;psect for function _I2C_Init
  5031  07CD                     _I2C_Init:	
  5032                           
  5033                           ;incstack = 0
  5034                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5035                           ;I2C_Init@I2Cx stored from wreg
  5036  07CD  0020               	movlb	0	; select bank0
  5037  07CE  00A2               	movwf	I2C_Init@I2Cx
  5038                           
  5039                           ;I2C_Common.c: 8: switch(I2Cx)
  5040  07CF  2FEB               	goto	l3435
  5041  07D0                     l3429:	
  5042                           ;I2C_Common.c: 9: {
  5043                           ;I2C_Common.c: 10: case I2C1_MODULE:
  5044                           
  5045                           
  5046                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  5047  07D0  0878               	movf	I2C_Init@mode,w
  5048  07D1  00A0               	movwf	??_I2C_Init
  5049  07D2  0820               	movf	??_I2C_Init,w
  5050  07D3  00F3               	movwf	I2C1_Setting@mode
  5051  07D4  0879               	movf	I2C_Init@Speed,w
  5052  07D5  00A1               	movwf	??_I2C_Init+1
  5053  07D6  0821               	movf	??_I2C_Init+1,w
  5054  07D7  00F4               	movwf	I2C1_Setting@Speed
  5055  07D8  0877               	movf	I2C_Init@address,w
  5056  07D9  3187  2711  3187   	fcall	_I2C1_Setting
  5057                           
  5058                           ;I2C_Common.c: 12: break;
  5059  07DC  2FF4               	goto	l316
  5060  07DD                     l3431:	
  5061                           ;I2C_Common.c: 14: case I2C2_MODULE:
  5062                           
  5063                           
  5064                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  5065  07DD  0878               	movf	I2C_Init@mode,w
  5066  07DE  0020               	movlb	0	; select bank0
  5067  07DF  00A0               	movwf	??_I2C_Init
  5068  07E0  0820               	movf	??_I2C_Init,w
  5069  07E1  00F3               	movwf	I2C2_Setting@mode
  5070  07E2  0879               	movf	I2C_Init@Speed,w
  5071  07E3  00A1               	movwf	??_I2C_Init+1
  5072  07E4  0821               	movf	??_I2C_Init+1,w
  5073  07E5  00F4               	movwf	I2C2_Setting@Speed
  5074  07E6  0877               	movf	I2C_Init@address,w
  5075  07E7  3186  26D9  3187   	fcall	_I2C2_Setting
  5076                           
  5077                           ;I2C_Common.c: 17: }
  5078                           
  5079                           ;I2C_Common.c: 16: break;
  5080  07EA  2FF4               	goto	l316
  5081  07EB                     l3435:	
  5082  07EB  0020               	movlb	0	; select bank0
  5083  07EC  0822               	movf	I2C_Init@I2Cx,w
  5084                           
  5085                           ; Switch size 1, requested type "space"
  5086                           ; Number of cases is 2, Range of values is 0 to 1
  5087                           ; switch strategies available:
  5088                           ; Name         Instructions Cycles
  5089                           ; simple_byte            7     4 (average)
  5090                           ; direct_byte           10     6 (fixed)
  5091                           ; jumptable            260     6 (fixed)
  5092                           ;	Chosen strategy is simple_byte
  5093  07ED  3A00               	xorlw	0	; case 0
  5094  07EE  1903               	skipnz
  5095  07EF  2FD0               	goto	l3429
  5096  07F0  3A01               	xorlw	1	; case 1
  5097  07F1  1903               	skipnz
  5098  07F2  2FDD               	goto	l3431
  5099  07F3  2FF4               	goto	l316
  5100  07F4                     l316:	
  5101                           
  5102                           ;I2C_Common.c: 19: PEIE = 1;
  5103  07F4  170B               	bsf	11,6	;volatile
  5104                           
  5105                           ;I2C_Common.c: 20: GIE = 1;
  5106  07F5  178B               	bsf	11,7	;volatile
  5107  07F6  0008               	return
  5108  07F7                     __end_of_I2C_Init:	
  5109                           
  5110                           	psect	text20
  5111  06D9                     __ptext20:	
  5112 ;; *************** function _I2C2_Setting *****************
  5113 ;; Defined at:
  5114 ;;		line 15 in file "I2C2.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;  address         1    wreg     unsigned char 
  5117 ;;  mode            1    3[COMMON] enum E2983
  5118 ;;  Speed           1    4[COMMON] enum E2987
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;  address         1    6[COMMON] unsigned char 
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5130 ;;      Params:         2       0       0       0       0       0
  5131 ;;      Locals:         1       0       0       0       0       0
  5132 ;;      Temps:          1       0       0       0       0       0
  5133 ;;      Totals:         4       0       0       0       0       0
  5134 ;;Total ram usage:        4 bytes
  5135 ;; Hardware stack levels used:    1
  5136 ;; Hardware stack levels required when called:    4
  5137 ;; This function calls:
  5138 ;;		_I2C2_PinInit
  5139 ;; This function is called by:
  5140 ;;		_I2C_Init
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           
  5145                           ;psect for function _I2C2_Setting
  5146  06D9                     _I2C2_Setting:	
  5147                           
  5148                           ;incstack = 0
  5149                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5150                           ;I2C2_Setting@address stored from wreg
  5151  06D9  00F6               	movwf	I2C2_Setting@address
  5152                           
  5153                           ;I2C2.c: 17: I2C2_PinInit();
  5154  06DA  318F  277E  3186   	fcall	_I2C2_PinInit
  5155                           
  5156                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  5157  06DD  0873               	movf	I2C2_Setting@mode,w
  5158  06DE  00F5               	movwf	??_I2C2_Setting
  5159  06DF  0875               	movf	??_I2C2_Setting,w
  5160  06E0  0021               	movlb	1	; select bank1
  5161  06E1  00B8               	movwf	(_I2C2_Config^(0+128)+18)
  5162                           
  5163                           ;I2C2.c: 20: switch(mode)
  5164  06E2  2F02               	goto	l2425
  5165  06E3                     l374:	
  5166                           ;I2C2.c: 21: {
  5167                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  5168                           
  5169                           
  5170                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  5171  06E3  0024               	movlb	4	; select bank4
  5172  06E4  159D               	bsf	29,3	;volatile
  5173                           
  5174                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5175  06E5  0874               	movf	I2C2_Setting@Speed,w
  5176  06E6  1D03               	btfss	3,2
  5177  06E7  2EEB               	goto	l2403
  5178                           
  5179                           ;I2C2.c: 25: {
  5180                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  5181  06E8  179C               	bsf	28,7	;volatile
  5182                           
  5183                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  5184  06E9  304F               	movlw	79
  5185  06EA  2EF3               	goto	L8
  5186  06EB                     l2403:	
  5187                           ;I2C2.c: 28: }
  5188                           
  5189                           
  5190                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5191  06EB  0374               	decf	I2C2_Setting@Speed,w
  5192  06EC  1D03               	btfss	3,2
  5193  06ED  2F00               	goto	l2421
  5194                           
  5195                           ;I2C2.c: 30: {
  5196                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  5197  06EE  307F               	movlw	127
  5198  06EF  00F5               	movwf	??_I2C2_Setting
  5199  06F0  0875               	movf	??_I2C2_Setting,w
  5200  06F1  059C               	andwf	28,f	;volatile
  5201                           
  5202                           ;I2C2.c: 32: SSP2ADD = 0x13;
  5203  06F2  3013               	movlw	19
  5204  06F3                     L8:	
  5205  06F3  009A               	movwf	26	;volatile
  5206  06F4  2F00               	goto	l2421
  5207  06F5                     l2411:	
  5208                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  5209                           
  5210                           ;I2C2.c: 35: break;
  5211                           
  5212                           ;I2C2.c: 33: }
  5213                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  5214                           
  5215                           
  5216                           ;I2C2.c: 38: SSP2STAT = 0x00;
  5217  06F5  0024               	movlb	4	; select bank4
  5218  06F6  019C               	clrf	28	;volatile
  5219                           
  5220                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  5221  06F7  3006               	movlw	6
  5222  06F8  00F5               	movwf	??_I2C2_Setting
  5223  06F9  0875               	movf	??_I2C2_Setting,w
  5224  06FA  049D               	iorwf	29,f	;volatile
  5225                           
  5226                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  5227  06FB  141E               	bsf	30,0	;volatile
  5228                           
  5229                           ;I2C2.c: 41: SSP2ADD = address << 1;
  5230  06FC  3576               	lslf	I2C2_Setting@address,w
  5231  06FD  009A               	movwf	26	;volatile
  5232                           
  5233                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  5234  06FE  30FE               	movlw	254
  5235  06FF  009B               	movwf	27	;volatile
  5236  0700                     l2421:	
  5237                           
  5238                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  5239  0700  169D               	bsf	29,5	;volatile
  5240                           
  5241                           ;I2C2.c: 45: }
  5242                           
  5243                           ;I2C2.c: 44: break;
  5244  0701  2F0A               	goto	l378
  5245  0702                     l2425:	
  5246  0702  0873               	movf	I2C2_Setting@mode,w
  5247                           
  5248                           ; Switch size 1, requested type "space"
  5249                           ; Number of cases is 2, Range of values is 0 to 1
  5250                           ; switch strategies available:
  5251                           ; Name         Instructions Cycles
  5252                           ; simple_byte            7     4 (average)
  5253                           ; direct_byte           10     6 (fixed)
  5254                           ; jumptable            260     6 (fixed)
  5255                           ;	Chosen strategy is simple_byte
  5256  0703  3A00               	xorlw	0	; case 0
  5257  0704  1903               	skipnz
  5258  0705  2EE3               	goto	l374
  5259  0706  3A01               	xorlw	1	; case 1
  5260  0707  1903               	skipnz
  5261  0708  2EF5               	goto	l2411
  5262  0709  2F0A               	goto	l378
  5263  070A                     l378:	
  5264                           
  5265                           ;I2C2.c: 46: SSP2IE = 1;
  5266  070A  0021               	movlb	1	; select bank1
  5267  070B  1414               	bsf	20,0	;volatile
  5268                           
  5269                           ;I2C2.c: 47: BCL2IE = 1;
  5270  070C  1494               	bsf	20,1	;volatile
  5271                           
  5272                           ;I2C2.c: 48: SSP2IF = 0;
  5273  070D  0020               	movlb	0	; select bank0
  5274  070E  1014               	bcf	20,0	;volatile
  5275                           
  5276                           ;I2C2.c: 49: BCL2IF = 0;
  5277  070F  1094               	bcf	20,1	;volatile
  5278  0710  0008               	return
  5279  0711                     __end_of_I2C2_Setting:	
  5280                           
  5281                           	psect	text21
  5282  0F7E                     __ptext21:	
  5283 ;; *************** function _I2C2_PinInit *****************
  5284 ;; Defined at:
  5285 ;;		line 9 in file "I2C2.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;		None
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      void 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5299 ;;      Params:         0       0       0       0       0       0
  5300 ;;      Locals:         0       0       0       0       0       0
  5301 ;;      Temps:          1       0       0       0       0       0
  5302 ;;      Totals:         1       0       0       0       0       0
  5303 ;;Total ram usage:        1 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    3
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_I2C2_Setting
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           
  5314                           ;psect for function _I2C2_PinInit
  5315  0F7E                     _I2C2_PinInit:	
  5316                           
  5317                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  5318                           
  5319                           ;incstack = 0
  5320                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  5321  0F7E  3024               	movlw	36
  5322  0F7F  00F2               	movwf	??_I2C2_PinInit
  5323  0F80  0872               	movf	??_I2C2_PinInit,w
  5324  0F81  0021               	movlb	1	; select bank1
  5325  0F82  048D               	iorwf	13,f	;volatile
  5326                           
  5327                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  5328  0F83  30DB               	movlw	219
  5329  0F84  00F2               	movwf	??_I2C2_PinInit
  5330  0F85  0872               	movf	??_I2C2_PinInit,w
  5331  0F86  0023               	movlb	3	; select bank3
  5332  0F87  058D               	andwf	13,f	;volatile
  5333  0F88  0008               	return
  5334  0F89                     __end_of_I2C2_PinInit:	
  5335                           
  5336                           	psect	text22
  5337  0711                     __ptext22:	
  5338 ;; *************** function _I2C1_Setting *****************
  5339 ;; Defined at:
  5340 ;;		line 15 in file "I2C1.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  address         1    wreg     unsigned char 
  5343 ;;  mode            1    3[COMMON] enum E2983
  5344 ;;  Speed           1    4[COMMON] enum E2987
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  address         1    6[COMMON] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5356 ;;      Params:         2       0       0       0       0       0
  5357 ;;      Locals:         1       0       0       0       0       0
  5358 ;;      Temps:          1       0       0       0       0       0
  5359 ;;      Totals:         4       0       0       0       0       0
  5360 ;;Total ram usage:        4 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    4
  5363 ;; This function calls:
  5364 ;;		_I2C1_PinInit
  5365 ;; This function is called by:
  5366 ;;		_I2C_Init
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           
  5371                           ;psect for function _I2C1_Setting
  5372  0711                     _I2C1_Setting:	
  5373                           
  5374                           ;incstack = 0
  5375                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5376                           ;I2C1_Setting@address stored from wreg
  5377  0711  00F6               	movwf	I2C1_Setting@address
  5378                           
  5379                           ;I2C1.c: 17: I2C1_PinInit();
  5380  0712  318F  2773  3187   	fcall	_I2C1_PinInit
  5381                           
  5382                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  5383  0715  0873               	movf	I2C1_Setting@mode,w
  5384  0716  00F5               	movwf	??_I2C1_Setting
  5385  0717  0875               	movf	??_I2C1_Setting,w
  5386  0718  0021               	movlb	1	; select bank1
  5387  0719  00CB               	movwf	(_I2C1_Config^(0+128)+18)
  5388                           
  5389                           ;I2C1.c: 20: switch(mode)
  5390  071A  2F3A               	goto	l2391
  5391  071B                     l511:	
  5392                           ;I2C1.c: 21: {
  5393                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  5394                           
  5395                           
  5396                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  5397  071B  0024               	movlb	4	; select bank4
  5398  071C  1595               	bsf	21,3	;volatile
  5399                           
  5400                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5401  071D  0874               	movf	I2C1_Setting@Speed,w
  5402  071E  1D03               	btfss	3,2
  5403  071F  2F23               	goto	l2369
  5404                           
  5405                           ;I2C1.c: 25: {
  5406                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  5407  0720  1794               	bsf	20,7	;volatile
  5408                           
  5409                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  5410  0721  304F               	movlw	79
  5411  0722  2F2B               	goto	L9
  5412  0723                     l2369:	
  5413                           ;I2C1.c: 28: }
  5414                           
  5415                           
  5416                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5417  0723  0374               	decf	I2C1_Setting@Speed,w
  5418  0724  1D03               	btfss	3,2
  5419  0725  2F38               	goto	l2387
  5420                           
  5421                           ;I2C1.c: 30: {
  5422                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  5423  0726  307F               	movlw	127
  5424  0727  00F5               	movwf	??_I2C1_Setting
  5425  0728  0875               	movf	??_I2C1_Setting,w
  5426  0729  0594               	andwf	20,f	;volatile
  5427                           
  5428                           ;I2C1.c: 32: SSP1ADD = 0x13;
  5429  072A  3013               	movlw	19
  5430  072B                     L9:	
  5431  072B  0092               	movwf	18	;volatile
  5432  072C  2F38               	goto	l2387
  5433  072D                     l2377:	
  5434                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  5435                           
  5436                           ;I2C1.c: 35: break;
  5437                           
  5438                           ;I2C1.c: 33: }
  5439                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  5440                           
  5441                           
  5442                           ;I2C1.c: 38: SSP1STAT = 0x00;
  5443  072D  0024               	movlb	4	; select bank4
  5444  072E  0194               	clrf	20	;volatile
  5445                           
  5446                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  5447  072F  3006               	movlw	6
  5448  0730  00F5               	movwf	??_I2C1_Setting
  5449  0731  0875               	movf	??_I2C1_Setting,w
  5450  0732  0495               	iorwf	21,f	;volatile
  5451                           
  5452                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  5453  0733  1416               	bsf	22,0	;volatile
  5454                           
  5455                           ;I2C1.c: 41: SSP1ADD = address << 1;
  5456  0734  3576               	lslf	I2C1_Setting@address,w
  5457  0735  0092               	movwf	18	;volatile
  5458                           
  5459                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  5460  0736  30FE               	movlw	254
  5461  0737  0093               	movwf	19	;volatile
  5462  0738                     l2387:	
  5463                           
  5464                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  5465  0738  1695               	bsf	21,5	;volatile
  5466                           
  5467                           ;I2C1.c: 45: }
  5468                           
  5469                           ;I2C1.c: 44: break;
  5470  0739  2F42               	goto	l515
  5471  073A                     l2391:	
  5472  073A  0873               	movf	I2C1_Setting@mode,w
  5473                           
  5474                           ; Switch size 1, requested type "space"
  5475                           ; Number of cases is 2, Range of values is 0 to 1
  5476                           ; switch strategies available:
  5477                           ; Name         Instructions Cycles
  5478                           ; simple_byte            7     4 (average)
  5479                           ; direct_byte           10     6 (fixed)
  5480                           ; jumptable            260     6 (fixed)
  5481                           ;	Chosen strategy is simple_byte
  5482  073B  3A00               	xorlw	0	; case 0
  5483  073C  1903               	skipnz
  5484  073D  2F1B               	goto	l511
  5485  073E  3A01               	xorlw	1	; case 1
  5486  073F  1903               	skipnz
  5487  0740  2F2D               	goto	l2377
  5488  0741  2F42               	goto	l515
  5489  0742                     l515:	
  5490                           
  5491                           ;I2C1.c: 46: SSP1IE = 1;
  5492  0742  0021               	movlb	1	; select bank1
  5493  0743  1591               	bsf	17,3	;volatile
  5494                           
  5495                           ;I2C1.c: 47: BCL1IE = 1;
  5496  0744  1592               	bsf	18,3	;volatile
  5497                           
  5498                           ;I2C1.c: 48: SSP1IF = 0;
  5499  0745  0020               	movlb	0	; select bank0
  5500  0746  1191               	bcf	17,3	;volatile
  5501                           
  5502                           ;I2C1.c: 49: BCL1IF = 0;
  5503  0747  1192               	bcf	18,3	;volatile
  5504  0748  0008               	return
  5505  0749                     __end_of_I2C1_Setting:	
  5506                           
  5507                           	psect	text23
  5508  0F73                     __ptext23:	
  5509 ;; *************** function _I2C1_PinInit *****************
  5510 ;; Defined at:
  5511 ;;		line 9 in file "I2C1.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5525 ;;      Params:         0       0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0       0
  5527 ;;      Temps:          1       0       0       0       0       0
  5528 ;;      Totals:         1       0       0       0       0       0
  5529 ;;Total ram usage:        1 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    3
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_I2C1_Setting
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           
  5540                           ;psect for function _I2C1_PinInit
  5541  0F73                     _I2C1_PinInit:	
  5542                           
  5543                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  5544                           
  5545                           ;incstack = 0
  5546                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  5547  0F73  3012               	movlw	18
  5548  0F74  00F2               	movwf	??_I2C1_PinInit
  5549  0F75  0872               	movf	??_I2C1_PinInit,w
  5550  0F76  0021               	movlb	1	; select bank1
  5551  0F77  048D               	iorwf	13,f	;volatile
  5552                           
  5553                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  5554  0F78  30ED               	movlw	237
  5555  0F79  00F2               	movwf	??_I2C1_PinInit
  5556  0F7A  0872               	movf	??_I2C1_PinInit,w
  5557  0F7B  0023               	movlb	3	; select bank3
  5558  0F7C  058D               	andwf	13,f	;volatile
  5559  0F7D  0008               	return
  5560  0F7E                     __end_of_I2C1_PinInit:	
  5561                           
  5562                           	psect	text24
  5563  0FBB                     __ptext24:	
  5564 ;; *************** function _Basic_Init *****************
  5565 ;; Defined at:
  5566 ;;		line 34 in file "main.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;		None
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      char 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5580 ;;      Params:         0       0       0       0       0       0
  5581 ;;      Locals:         0       0       0       0       0       0
  5582 ;;      Temps:          0       0       0       0       0       0
  5583 ;;      Totals:         0       0       0       0       0       0
  5584 ;;Total ram usage:        0 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    3
  5587 ;; This function calls:
  5588 ;;		Nothing
  5589 ;; This function is called by:
  5590 ;;		_main
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           
  5595                           ;psect for function _Basic_Init
  5596  0FBB                     _Basic_Init:	
  5597                           
  5598                           ;main.c: 36: OSCCON = 0xF0;
  5599                           
  5600                           ;incstack = 0
  5601                           ; Regs used in _Basic_Init: [wreg+status,2]
  5602  0FBB  30F0               	movlw	240
  5603  0FBC  0021               	movlb	1	; select bank1
  5604  0FBD  0099               	movwf	25	;volatile
  5605                           
  5606                           ;main.c: 40: TRISA = 0x07;
  5607  0FBE  3007               	movlw	7
  5608  0FBF  008C               	movwf	12	;volatile
  5609                           
  5610                           ;main.c: 41: ANSELA = 0x07;
  5611  0FC0  3007               	movlw	7
  5612  0FC1  0023               	movlb	3	; select bank3
  5613  0FC2  008C               	movwf	12	;volatile
  5614                           
  5615                           ;main.c: 43: TRISB = 0x40;
  5616  0FC3  3040               	movlw	64
  5617  0FC4  0021               	movlb	1	; select bank1
  5618  0FC5  008D               	movwf	13	;volatile
  5619                           
  5620                           ;main.c: 44: ANSELB = 0x00;
  5621  0FC6  0023               	movlb	3	; select bank3
  5622  0FC7  018D               	clrf	13	;volatile
  5623                           
  5624                           ;main.c: 46: APFCON0 = 0x08;
  5625  0FC8  3008               	movlw	8
  5626  0FC9  0022               	movlb	2	; select bank2
  5627  0FCA  009D               	movwf	29	;volatile
  5628                           
  5629                           ;main.c: 47: APFCON1 = 0x00;
  5630  0FCB  019E               	clrf	30	;volatile
  5631                           
  5632                           ;main.c: 49: PORTA = 0x00;
  5633  0FCC  0020               	movlb	0	; select bank0
  5634  0FCD  018C               	clrf	12	;volatile
  5635                           
  5636                           ;main.c: 50: PORTB = 0x00;
  5637  0FCE  018D               	clrf	13	;volatile
  5638  0FCF  0008               	return
  5639  0FD0                     __end_of_Basic_Init:	
  5640                           ;main.c: 52: return 0;
  5641                           ;	Return value of _Basic_Init is never used
  5642                           
  5643                           
  5644                           	psect	intentry
  5645  0004                     __pintentry:	
  5646 ;; *************** function _hand *****************
  5647 ;; Defined at:
  5648 ;;		line 56 in file "main.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      void 
  5655 ;; Registers used:
  5656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5662 ;;      Params:         0       0       0       0       0       0
  5663 ;;      Locals:         0       0       0       0       0       0
  5664 ;;      Temps:          1       0       0       0       0       0
  5665 ;;      Totals:         1       0       0       0       0       0
  5666 ;;Total ram usage:        1 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    2
  5669 ;; This function calls:
  5670 ;;		_I2C_CommonInterrupt
  5671 ;; This function is called by:
  5672 ;;		Interrupt level 1
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676  0004                     _hand:	
  5677                           
  5678                           ;incstack = 0
  5679  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5680                           
  5681                           ; Regs used in _hand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5682  0005  3180               	pagesel	$
  5683  0006  0020               	movlb	0	; select bank0
  5684  0007  087F               	movf	127,w
  5685  0008  00F1               	movwf	??_hand
  5686                           
  5687                           ;main.c: 58: I2C_CommonInterrupt();
  5688  0009  318F  2761         	fcall	_I2C_CommonInterrupt
  5689  000B  0871               	movf	??_hand,w
  5690  000C  0020               	movlb	0	; select bank0
  5691  000D  00FF               	movwf	127
  5692  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5693  000F  0009               	retfie
  5694  0010                     __end_of_hand:	
  5695                           
  5696                           	psect	text26
  5697  0F61                     __ptext26:	
  5698 ;; *************** function _I2C_CommonInterrupt *****************
  5699 ;; Defined at:
  5700 ;;		line 58 in file "I2C_Common.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5714 ;;      Params:         0       0       0       0       0       0
  5715 ;;      Locals:         0       0       0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0       0
  5717 ;;      Totals:         0       0       0       0       0       0
  5718 ;;Total ram usage:        0 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    1
  5721 ;; This function calls:
  5722 ;;		_I2C1_Interrupt
  5723 ;;		_I2C2_Interrupt
  5724 ;; This function is called by:
  5725 ;;		_hand
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function _I2C_CommonInterrupt
  5731  0F61                     _I2C_CommonInterrupt:	
  5732                           
  5733                           ;I2C_Common.c: 60: I2C1_Interrupt();
  5734                           
  5735                           ;incstack = 0
  5736                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5737  0F61  3185  25B5  318F   	fcall	_I2C1_Interrupt
  5738                           
  5739                           ;I2C_Common.c: 61: I2C2_Interrupt();
  5740  0F64  3185  2561         	fcall	_I2C2_Interrupt
  5741  0F66  0008               	return
  5742  0F67                     __end_of_I2C_CommonInterrupt:	
  5743                           
  5744                           	psect	text27
  5745  0561                     __ptext27:	
  5746 ;; *************** function _I2C2_Interrupt *****************
  5747 ;; Defined at:
  5748 ;;		line 152 in file "I2C2.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;		None
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;		None
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5762 ;;      Params:         0       0       0       0       0       0
  5763 ;;      Locals:         0       0       0       0       0       0
  5764 ;;      Temps:          1       0       0       0       0       0
  5765 ;;      Totals:         1       0       0       0       0       0
  5766 ;;Total ram usage:        1 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_I2C_CommonInterrupt
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           
  5776                           ;psect for function _I2C2_Interrupt
  5777  0561                     _I2C2_Interrupt:	
  5778                           
  5779                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  5780                           
  5781                           ;incstack = 0
  5782                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  5783  0561  0020               	movlb	0	; select bank0
  5784  0562  1C14               	btfss	20,0	;volatile
  5785  0563  2DAD               	goto	i1l2725
  5786  0564  0021               	movlb	1	; select bank1
  5787  0565  1C14               	btfss	20,0	;volatile
  5788  0566  2DAD               	goto	i1l2725
  5789                           
  5790                           ;I2C2.c: 155: {
  5791                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  5792  0567  0024               	movlb	4	; select bank4
  5793  0568  1E9C               	btfss	28,5	;volatile
  5794  0569  2D84               	goto	i1l457
  5795                           
  5796                           ;I2C2.c: 157: {
  5797                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  5798  056A  1D1C               	btfss	28,2	;volatile
  5799  056B  2D77               	goto	i1l2701
  5800                           
  5801                           ;I2C2.c: 159: {
  5802                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  5803  056C  1B1E               	btfsc	30,6	;volatile
  5804  056D  2DAB               	goto	i1l2723
  5805  056E                     i1l2693:	
  5806                           ;I2C2.c: 161: {
  5807                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  5808                           
  5809  056E  081C               	movf	28,w	;volatile
  5810  056F  3901               	andlw	1
  5811  0570  00F0               	movwf	??_I2C2_Interrupt
  5812  0571  0E1D               	swapf	29,w	;volatile
  5813  0572  3901               	andlw	1
  5814  0573  0470               	iorwf	??_I2C2_Interrupt,w
  5815  0574  1D03               	btfss	3,2
  5816  0575  2D6E               	goto	i1l2693
  5817  0576  2D97               	goto	L10
  5818  0577                     i1l2701:	
  5819                           ;I2C2.c: 166: }
  5820                           ;I2C2.c: 167: }
  5821                           
  5822                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  5823                           
  5824                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  5825                           
  5826                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  5827                           
  5828                           
  5829                           ;I2C2.c: 168: else
  5830                           ;I2C2.c: 169: {
  5831                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  5832  0577  0819               	movf	25,w	;volatile
  5833  0578  00F0               	movwf	??_I2C2_Interrupt
  5834  0579  0021               	movlb	1	; select bank1
  5835  057A  0837               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  5836  057B  0086               	movwf	6
  5837  057C  0187               	clrf	7
  5838  057D  0870               	movf	??_I2C2_Interrupt,w
  5839  057E  0081               	movwf	1
  5840                           
  5841                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  5842  057F  3001               	movlw	1
  5843  0580  00F0               	movwf	??_I2C2_Interrupt
  5844  0581  0870               	movf	??_I2C2_Interrupt,w
  5845  0582  07B7               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  5846  0583  2DA9               	goto	i1l2721
  5847  0584                     i1l457:	
  5848                           ;I2C2.c: 173: }
  5849                           ;I2C2.c: 174: }
  5850                           
  5851                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  5852                           
  5853                           
  5854                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  5855  0584  1A9C               	btfsc	28,5	;volatile
  5856  0585  2DAB               	goto	i1l2723
  5857                           
  5858                           ;I2C2.c: 176: {
  5859                           ;I2C2.c: 177: SSP2BUF;
  5860  0586  0819               	movf	25,w	;volatile
  5861                           
  5862                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  5863  0587  1D1C               	btfss	28,2	;volatile
  5864  0588  2DA4               	goto	i1l2719
  5865                           
  5866                           ;I2C2.c: 180: {
  5867                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  5868  0589  30A6               	movlw	(low (_I2C2_Config| 0))& (0+255)
  5869  058A  00F0               	movwf	??_I2C2_Interrupt
  5870  058B  0870               	movf	??_I2C2_Interrupt,w
  5871  058C  0021               	movlb	1	; select bank1
  5872  058D  00B6               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  5873  058E                     i1l2713:	
  5874                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  5875                           
  5876  058E  0024               	movlb	4	; select bank4
  5877  058F  081C               	movf	28,w	;volatile
  5878  0590  3901               	andlw	1
  5879  0591  00F0               	movwf	??_I2C2_Interrupt
  5880  0592  0E1D               	swapf	29,w	;volatile
  5881  0593  3901               	andlw	1
  5882  0594  0470               	iorwf	??_I2C2_Interrupt,w
  5883  0595  1D03               	btfss	3,2
  5884  0596  2D8E               	goto	i1l2713
  5885  0597                     L10:	
  5886                           
  5887                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  5888  0597  0021               	movlb	1	; select bank1
  5889  0598  0836               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  5890  0599  0086               	movwf	6
  5891  059A  0187               	clrf	7
  5892  059B  0801               	movf	1,w
  5893  059C  0024               	movlb	4	; select bank4
  5894  059D  0099               	movwf	25	;volatile
  5895                           
  5896                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  5897  059E  3001               	movlw	1
  5898  059F  00F0               	movwf	??_I2C2_Interrupt
  5899  05A0  0870               	movf	??_I2C2_Interrupt,w
  5900  05A1  0021               	movlb	1	; select bank1
  5901  05A2  07B6               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  5902                           
  5903                           ;I2C2.c: 186: }
  5904  05A3  2DA9               	goto	i1l2721
  5905  05A4                     i1l2719:	
  5906                           
  5907                           ;I2C2.c: 187: else
  5908                           ;I2C2.c: 188: {
  5909                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  5910  05A4  30AE               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  5911  05A5  00F0               	movwf	??_I2C2_Interrupt
  5912  05A6  0870               	movf	??_I2C2_Interrupt,w
  5913  05A7  0021               	movlb	1	; select bank1
  5914  05A8  00B7               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  5915  05A9                     i1l2721:	
  5916                           
  5917                           ;I2C2.c: 190: }
  5918                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  5919  05A9  0024               	movlb	4	; select bank4
  5920  05AA  161D               	bsf	29,4	;volatile
  5921  05AB                     i1l2723:	
  5922                           
  5923                           ;I2C2.c: 192: }
  5924                           ;I2C2.c: 193: SSP2IF = 0;
  5925  05AB  0020               	movlb	0	; select bank0
  5926  05AC  1014               	bcf	20,0	;volatile
  5927  05AD                     i1l2725:	
  5928                           
  5929                           ;I2C2.c: 194: }
  5930                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  5931  05AD  0021               	movlb	1	; select bank1
  5932  05AE  1C94               	btfss	20,1	;volatile
  5933  05AF  0008               	return
  5934  05B0  0020               	movlb	0	; select bank0
  5935  05B1  1C94               	btfss	20,1	;volatile
  5936  05B2  0008               	return
  5937                           
  5938                           ;I2C2.c: 197: BCL2IF = 0;
  5939  05B3  1094               	bcf	20,1	;volatile
  5940  05B4  0008               	return
  5941  05B5                     __end_of_I2C2_Interrupt:	
  5942                           
  5943                           	psect	text28
  5944  05B5                     __ptext28:	
  5945 ;; *************** function _I2C1_Interrupt *****************
  5946 ;; Defined at:
  5947 ;;		line 152 in file "I2C1.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;		None
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;		None
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  1    wreg      void 
  5954 ;; Registers used:
  5955 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5961 ;;      Params:         0       0       0       0       0       0
  5962 ;;      Locals:         0       0       0       0       0       0
  5963 ;;      Temps:          1       0       0       0       0       0
  5964 ;;      Totals:         1       0       0       0       0       0
  5965 ;;Total ram usage:        1 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		_I2C_CommonInterrupt
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           
  5975                           ;psect for function _I2C1_Interrupt
  5976  05B5                     _I2C1_Interrupt:	
  5977                           
  5978                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  5979                           
  5980                           ;incstack = 0
  5981                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  5982  05B5  0020               	movlb	0	; select bank0
  5983  05B6  1D91               	btfss	17,3	;volatile
  5984  05B7  2E01               	goto	i1l2675
  5985  05B8  0021               	movlb	1	; select bank1
  5986  05B9  1D91               	btfss	17,3	;volatile
  5987  05BA  2E01               	goto	i1l2675
  5988                           
  5989                           ;I2C1.c: 155: {
  5990                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  5991  05BB  0024               	movlb	4	; select bank4
  5992  05BC  1E94               	btfss	20,5	;volatile
  5993  05BD  2DD8               	goto	i1l594
  5994                           
  5995                           ;I2C1.c: 157: {
  5996                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  5997  05BE  1D14               	btfss	20,2	;volatile
  5998  05BF  2DCB               	goto	i1l2651
  5999                           
  6000                           ;I2C1.c: 159: {
  6001                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  6002  05C0  1B16               	btfsc	22,6	;volatile
  6003  05C1  2DFF               	goto	i1l2673
  6004  05C2                     i1l2643:	
  6005                           ;I2C1.c: 161: {
  6006                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  6007                           
  6008  05C2  0814               	movf	20,w	;volatile
  6009  05C3  3901               	andlw	1
  6010  05C4  00F0               	movwf	??_I2C1_Interrupt
  6011  05C5  0E15               	swapf	21,w	;volatile
  6012  05C6  3901               	andlw	1
  6013  05C7  0470               	iorwf	??_I2C1_Interrupt,w
  6014  05C8  1D03               	btfss	3,2
  6015  05C9  2DC2               	goto	i1l2643
  6016  05CA  2DEB               	goto	L11
  6017  05CB                     i1l2651:	
  6018                           ;I2C1.c: 166: }
  6019                           ;I2C1.c: 167: }
  6020                           
  6021                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  6022                           
  6023                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  6024                           
  6025                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  6026                           
  6027                           
  6028                           ;I2C1.c: 168: else
  6029                           ;I2C1.c: 169: {
  6030                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  6031  05CB  0811               	movf	17,w	;volatile
  6032  05CC  00F0               	movwf	??_I2C1_Interrupt
  6033  05CD  0021               	movlb	1	; select bank1
  6034  05CE  084A               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  6035  05CF  0086               	movwf	6
  6036  05D0  0187               	clrf	7
  6037  05D1  0870               	movf	??_I2C1_Interrupt,w
  6038  05D2  0081               	movwf	1
  6039                           
  6040                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  6041  05D3  3001               	movlw	1
  6042  05D4  00F0               	movwf	??_I2C1_Interrupt
  6043  05D5  0870               	movf	??_I2C1_Interrupt,w
  6044  05D6  07CA               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  6045  05D7  2DFD               	goto	i1l2671
  6046  05D8                     i1l594:	
  6047                           ;I2C1.c: 173: }
  6048                           ;I2C1.c: 174: }
  6049                           
  6050                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  6051                           
  6052                           
  6053                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  6054  05D8  1A94               	btfsc	20,5	;volatile
  6055  05D9  2DFF               	goto	i1l2673
  6056                           
  6057                           ;I2C1.c: 176: {
  6058                           ;I2C1.c: 177: SSP1BUF;
  6059  05DA  0811               	movf	17,w	;volatile
  6060                           
  6061                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  6062  05DB  1D14               	btfss	20,2	;volatile
  6063  05DC  2DF8               	goto	i1l2669
  6064                           
  6065                           ;I2C1.c: 180: {
  6066                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  6067  05DD  30B9               	movlw	(low (_I2C1_Config| 0))& (0+255)
  6068  05DE  00F0               	movwf	??_I2C1_Interrupt
  6069  05DF  0870               	movf	??_I2C1_Interrupt,w
  6070  05E0  0021               	movlb	1	; select bank1
  6071  05E1  00C9               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  6072  05E2                     i1l2663:	
  6073                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  6074                           
  6075  05E2  0024               	movlb	4	; select bank4
  6076  05E3  0814               	movf	20,w	;volatile
  6077  05E4  3901               	andlw	1
  6078  05E5  00F0               	movwf	??_I2C1_Interrupt
  6079  05E6  0E15               	swapf	21,w	;volatile
  6080  05E7  3901               	andlw	1
  6081  05E8  0470               	iorwf	??_I2C1_Interrupt,w
  6082  05E9  1D03               	btfss	3,2
  6083  05EA  2DE2               	goto	i1l2663
  6084  05EB                     L11:	
  6085                           
  6086                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  6087  05EB  0021               	movlb	1	; select bank1
  6088  05EC  0849               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  6089  05ED  0086               	movwf	6
  6090  05EE  0187               	clrf	7
  6091  05EF  0801               	movf	1,w
  6092  05F0  0024               	movlb	4	; select bank4
  6093  05F1  0091               	movwf	17	;volatile
  6094                           
  6095                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  6096  05F2  3001               	movlw	1
  6097  05F3  00F0               	movwf	??_I2C1_Interrupt
  6098  05F4  0870               	movf	??_I2C1_Interrupt,w
  6099  05F5  0021               	movlb	1	; select bank1
  6100  05F6  07C9               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  6101                           
  6102                           ;I2C1.c: 186: }
  6103  05F7  2DFD               	goto	i1l2671
  6104  05F8                     i1l2669:	
  6105                           
  6106                           ;I2C1.c: 187: else
  6107                           ;I2C1.c: 188: {
  6108                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  6109  05F8  30C1               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  6110  05F9  00F0               	movwf	??_I2C1_Interrupt
  6111  05FA  0870               	movf	??_I2C1_Interrupt,w
  6112  05FB  0021               	movlb	1	; select bank1
  6113  05FC  00CA               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  6114  05FD                     i1l2671:	
  6115                           
  6116                           ;I2C1.c: 190: }
  6117                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  6118  05FD  0024               	movlb	4	; select bank4
  6119  05FE  1615               	bsf	21,4	;volatile
  6120  05FF                     i1l2673:	
  6121                           
  6122                           ;I2C1.c: 192: }
  6123                           ;I2C1.c: 193: SSP1IF = 0;
  6124  05FF  0020               	movlb	0	; select bank0
  6125  0600  1191               	bcf	17,3	;volatile
  6126  0601                     i1l2675:	
  6127                           
  6128                           ;I2C1.c: 194: }
  6129                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  6130  0601  0021               	movlb	1	; select bank1
  6131  0602  1D92               	btfss	18,3	;volatile
  6132  0603  0008               	return
  6133  0604  0020               	movlb	0	; select bank0
  6134  0605  1D92               	btfss	18,3	;volatile
  6135  0606  0008               	return
  6136                           
  6137                           ;I2C1.c: 197: BCL1IF = 0;
  6138  0607  1192               	bcf	18,3	;volatile
  6139  0608  0008               	return
  6140  0609                     __end_of_I2C1_Interrupt:	
  6141  007E                     btemp	set	126	;btemp
  6142  007E                     int$flags	set	126
  6143  007E                     wtemp0	set	126


Data Sizes:
    Strings     40
    Constant    0
    Data        4
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     74      80
    BANK1            80      8      56
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    I2C1_Receive@pData	PTR unsigned char  size(1) Largest target is 4
		 -> main@resultdata(BANK1[4]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 4
		 -> VoltageReg(BANK0[2]), main@testdata(BANK1[4]), 

    I2C2_Receive@pData	PTR unsigned char  size(1) Largest target is 4
		 -> main@resultdata(BANK1[4]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 4
		 -> VoltageReg(BANK0[2]), main@testdata(BANK1[4]), 

    I2C_Receive@pData	PTR unsigned char  size(1) Largest target is 4
		 -> main@resultdata(BANK1[4]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 4
		 -> VoltageReg(BANK0[2]), main@testdata(BANK1[4]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK1[19]), I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK1[19]), I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), 

    S344$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK1[19]), I2C2_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), I2C2_Config(BANK1[19]), 

    S344$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK1[19]), I2C2_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), I2C2_Config(BANK1[19]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[12]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[12]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _main->_I2C_Init
    _xvprintf->___lldiv
    _xvprintf->___llmod
    _xvprintf->_xputs
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Receive->_I2C1_Receive
    _I2C_Receive->_I2C2_Receive
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _hand in COMMON

    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv

Critical Paths under _hand in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _hand in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _hand in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _hand in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _hand in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    9952
                                             66 BANK0      8     8      0
                                              0 BANK1      8     8      0
                         _Basic_Init
                           _I2C_Init
                        _I2C_Receive
                       _I2C_Transmit
                 _LCD_CursorPosition
                           _LCD_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                             12     2     10    4800
                                             54 BANK0     12     2     10
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    4320
                                              6 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     337
                                              8 COMMON     2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     262
                                              6 COMMON     2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     196
                                              5 COMMON     1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     220
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              2 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              6 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              5 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     196
                                              5 COMMON     3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0      88
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Transmit                                         8     5      3    1946
                                              0 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C2_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Receive                                          8     5      3    1673
                                              0 BANK0      8     5      3
                       _I2C1_Receive
                       _I2C2_Receive
 ---------------------------------------------------------------------------------
 (2) _I2C2_Receive                                         8     6      2     606
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_Receive                                         8     6      2     606
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             6     3      3     924
                                              7 COMMON     3     0      3
                                              0 BANK0      3     3      0
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (2) _I2C2_Setting                                         4     2      2     238
                                              3 COMMON     4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (3) _I2C2_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Setting                                         4     2      2     238
                                              3 COMMON     4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (3) _I2C1_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _hand                                                 1     1      0       0
                                              1 COMMON     1     1      0
                _I2C_CommonInterrupt
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _I2C_Init
     _I2C1_Setting
       _I2C1_PinInit
     _I2C2_Setting
       _I2C2_PinInit
   _I2C_Receive
     _I2C1_Receive
     _I2C2_Receive
   _I2C_Transmit
     _I2C1_Transmit
     _I2C2_Transmit
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _hand (ROOT)
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      94       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4A      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      38       8       70.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      94      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Mar 10 07:58:32 2017

                 __CFG_CP$OFF 0000                I2C2_Transmit@i 0077         ??_I2C_CommonInterrupt 0071  
         ___wmul@multiplicand 0074                           l134 0037                           l400 03BC  
                         l316 07F4                           l332 07A1                           l149 00B3  
                         l190 0205                           l511 071B                           l167 014E  
                         l441 02B1                           l409 03D3                           l442 02B2  
                         l426 0278                           l515 0742                           l435 028F  
                         l374 06E3                           l391 0399                           l448 02C2  
                         l528 0417                           l537 043A                           l378 070A  
                         l546 0451                           l563 0309                           l572 0320  
                         l585 0353                           l578 0342                           l579 0343  
                         l693 0FED                           _GIE 005F                           _RA3 0063  
                         _RA4 0064                  __CFG_CPD$OFF 0000          __size_of_I2C_Receive 002C  
                __CFG_BORV$LO 0000                           wreg 0009                    _Basic_Init 0FBB  
                __CFG_LVP$OFF 0000               __end_of_LCD_Put 0F6D                          l2115 0767  
                        l2107 0758                          l3021 061A                          l2133 0FE7  
                        l2125 0FA9                          l3101 00A3                          l3031 0648  
                        l3023 0628                          l3201 0213                          l3121 00CE  
                        l3113 00C0                          l3105 00AB                          l2411 06F5  
                        l2403 06EB                          l3035 0653                          l3051 068B  
                        l3211 0228                          l3131 00ED                          l2421 0700  
                        l3301 03A8                          l3045 0665                          l3221 0250  
                        l3141 0118                          l3303 03C9                          l3047 0673  
                        l3055 0696                          l3215 023A                          l3207 021B  
                        l3151 0131                          l3143 0125                          l3135 00FF  
                        l3127 00DB                          l3071 0050                          l2425 0702  
                        l3225 0403                          l3313 03D8                          l3321 03F6  
                        l3209 0224                          l3161 0168                          l3145 0128  
                        l3129 00E9                          l3331 02FE                          l3403 0282  
                        l3251 0447                          l3227 040D                          l3315 03EF  
                        l3323 03FF                          l3219 024C                          l3163 017D  
                        l3147 012A                          l3139 0103                          l3155 0136  
                        l3341 0317                          l3405 02B8                          l3421 02E7  
                        l3261 0456                          l3237 042A                          l3317 03F4  
                        l3173 01A7                          l3165 0186                          l3149 012C  
                        l3093 0079                          l3085 0065                          l2391 073A  
                        l3431 07DD                          l3415 02C7                          l3423 02F0  
                        l3263 046D                          l3271 047D                          l3247 0422  
                        l3175 01A9                          l3167 0196                          l3095 007C  
                        l2377 072D                          l2369 0723                          l3345 032C  
                        l3353 0313                          l3329 02F4                          l3417 02DE  
                        l3265 0472                          l3249 0426                          l3441 07B2  
                        l3185 01E3                          l2387 0738                          l3435 07EB  
                        l3355 0349                          l3371 0378                          l3429 07D0  
                        l3365 0358                          l3373 0381                          l3381 026D  
                        l3453 0779                          l3269 0474                          l3277 0385  
                        l3445 07C3                          l3189 01EB                          l3367 036F  
                        l3391 0286                          l3455 0789                          l3279 038F  
                        l3447 07CB                          l3439 07A5                          l3289 03AC  
                        l3395 029B                          l3379 0263                          l3459 0799  
                        l3299 03A4                          l3475 049F                          STR_1 07F7  
                        STR_2 081D                          STR_3 0803                          STR_4 0811  
                        STR_5 0817                          STR_6 080A                          u3105 0649  
                        u1605 06A7                          u3135 0668                          u3065 061D  
                        u3305 00FD                          u4027 0500                          u3155 0681  
                        u3315 0111                          u4037 0518                          u3085 0629  
                        u3165 068C                          u4047 052B                          u3095 063D  
                        u4057 053F                          u1665 0FEE                          u4067 0F92  
                        u1675 0FF3                          u3435 0238                          u4077 0FE1  
                        u4087 06A1                          u3455 025E                          _PEIE 005E  
                        u2865 0FD6               ??_I2C1_Transmit 0074                  __CFG_WRT$OFF 0000  
                        _hand 0004                          _main 047F              __end_of_I2C_Init 07F7  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          indf1 0001                          fsr1l 0006  
                        btemp 007E                 __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0074  
            ??_I2C1_Interrupt 0070                          start 0010                 __CFG_IESO$OFF 0000  
               _LCD_WriteData 069F                 __CFG_MCLRE$ON 0000              ??_I2C2_Interrupt 0070  
    __end_of_LCD_DisplayClear 0F98         __size_of_I2C_Transmit 002B              __end_of_LCD_Init 0561  
               __CFG_PLLEN$ON 0000                         ?_hand 0070                   LCD_Put@word 0075  
                       ?_main 0070                 __CFG_WDTE$OFF 0000               __end_of___lldiv 065C  
             __end_of___llmod 069F                         i1l457 0584                         i1l594 05D8  
                       _PORTA 000C                         _PORTB 000D                         _TRISA 008C  
                       _TRISB 008D             I2C2_Transmit@size 0073                 __CFG_PWRTE$ON 0000  
              __CFG_FCMEN$OFF 0000                         _xputc 0749                         _xputs 0FA8  
                       pclath 000A                  main@testdata 00CC                         status 0003  
                       wtemp0 007E               __end_of_xprintf 0FA8                  _I2C_Transmit 07A2  
          _LCD_CursorPosition 0FD0                ?_LCD_WriteData 0070               __initialization 0012  
                __end_of_hand 0010                  __end_of_main 04F8           ?_LCD_CursorPosition 0075  
                _AllMemoryReg 00A0                        ??_hand 0071                        ??_main 0062  
           I2C_Receive@result 0026             I2C1_Receive@i_715 0079             I2C1_Receive@pData 0072  
                   ??_LCD_Put 0076                   ?_Basic_Init 0070                        _BCL1IE 0493  
                      _BCL1IF 0093                        _BCL2IE 04A1                        _BCL2IF 00A1  
            ___llmod@dividend 0076          ??_LCD_CursorPosition 0076                        _ANSELA 018C  
                      _ANSELB 018D                        ?_xputc 0070                        ?_xputs 0070  
                      i1l2701 0577                        i1l2721 05A9                        i1l2713 058E  
                      i1l2643 05C2                        i1l2651 05CB                        i1l2723 05AB  
                      i1l2725 05AD                        i1l2671 05FD                        i1l2663 05E2  
                      i1l2719 05A4                        i1l2673 05FF                        i1l2675 0601  
                      i1l2669 05F8                        i1l2693 056E            I2C2_Transmit@i_569 0078  
                      _OSCCON 0099            I2C2_Transmit@pData 0072                        _SSP1IE 048B  
                      _SSP1IF 008B                        _SSP2IE 04A0                        _SSP2IF 00A0  
                      ___wmul 0FE5                     ??___lldiv 0020                     ??___llmod 0020  
                      _outptr 007A              I2C_Transmit@I2Cx 0026                     ?_I2C_Init 0077  
            I2C_Transmit@size 0022                        xputc@c 0077                     ??_xprintf 0060  
     __end_of__initialization 0033                     ?_LCD_Init 0070               ??_LCD_WriteData 0072  
            __end_of_xvprintf 0261                    _VoltageReg 006E                __pcstackCOMMON 0070  
         __size_of_Basic_Init 0015                  __pidataBANK1 0F5D                 __end_of_xputc 0776  
               __end_of_xputs 0FBB            I2C_Receive@address 0020                    ??_I2C_Init 0020  
         I2C1_Transmit@result 0079                       ??_xputc 0076                       ??_xputs 0078  
                  __pbssBANK0 006A                    __pbssBANK1 00A0                    ??_LCD_Init 0076  
                I2C_Init@I2Cx 0022            I2C1_Receive@result 0077   __end_of_I2C_CommonInterrupt 0F67  
                I2C_Init@mode 0078                    __pmaintext 047F                       ?___wmul 0072  
                  __pintentry 0004             ?_LCD_DisplayClear 0070                       _APFCON0 011D  
                     _APFCON1 011E                 ??_I2C_Receive 0023            ??_LCD_DisplayClear 0075  
                     _LCD_Put 0F67                  _xvprintf$272 003D                  _xvprintf$273 0041  
                _xvprintf$274 0043                       _SSP1ADD 0212                       _SSP2ADD 021A  
                     _SSP1BUF 0211                       _SSP2BUF 0219                       _SSP1MSK 0213  
                     _SSP2MSK 021B           I2C2_Transmit@result 0079         __end_of_I2C1_Transmit 047F  
       __end_of_I2C2_Transmit 0401                       ___lldiv 0609               __size_of___wmul 001B  
                     ___llmod 065C               __CFG_STVREN$OFF 0000                       __ptext1 0F98  
                     __ptext2 0037                       __ptext3 0FA8                       __ptext4 0749  
                     __ptext5 0F67                       __ptext6 0FE5                       __ptext7 065C  
                     __ptext8 0609                       __ptext9 04F8             I2C2_Receive@i_576 0079  
           I2C2_Receive@pData 0072                     ?_xvprintf 0026                  ??_Basic_Init 0072  
         __end_of_I2C_Receive 07A2                       clrloop0 0F6E          end_of_initialization 0033  
                     _xprintf 0F98                main@resultdata 00D0                 ?_I2C1_PinInit 0070  
               ?_I2C1_Receive 0072                 ?_I2C2_PinInit 0070                 ?_I2C2_Receive 0072  
                 _I2C1_Config 00B9                   _I2C2_Config 00A6                 ?_I2C1_Setting 0073  
             ___lldiv@divisor 0072                 ?_I2C2_Setting 0073               ___lldiv@counter 0025  
           I2C_Transmit@pData 0021            __end_of_Basic_Init 0FD0                  __pstringtext 07F7  
     __size_of_I2C1_Interrupt 0054              __CFG_FOSC$INTOSC 0000                    ??_xvprintf 0029  
     __size_of_I2C2_Interrupt 0054             __size_of_I2C_Init 002A           I2C1_Setting@address 0076  
 __size_of_LCD_CursorPosition 0015                ??_I2C1_PinInit 0072                ??_I2C1_Receive 0074  
              ??_I2C2_PinInit 0072                ??_I2C2_Receive 0074                ??_I2C1_Setting 0075  
              ??_I2C2_Setting 0075             __size_of_LCD_Init 0069                __end_of___wmul 1000  
                   _ConfigReg 007B                   _I2C_Receive 0776           start_initialization 0012  
            I2C_Receive@pData 0021          I2C1_Transmit@address 0076                     _MemoryReg 00A3  
            I2C1_Receive@size 0073           I2C2_Setting@address 0076               ___llmod@divisor 0072  
             ___llmod@counter 0021          LCD_CursorPosition@tx 0077          LCD_CursorPosition@ty 0075  
       __end_of_LCD_WriteData 06D9                      ??___wmul 0076                   __pdataBANK1 00D4  
           I2C1_Setting@Speed 0074                      ?_LCD_Put 0075                   __pbssCOMMON 007A  
                   ___latbits 0001                 __pcstackBANK0 0020                 __pcstackBANK1 00CC  
         I2C1_Receive@address 0076            I2C1_Transmit@i_708 0078            I2C1_Transmit@pData 0072  
   __size_of_LCD_DisplayClear 000F               I2C_Init@address 0077                 ?_I2C_Transmit 0020  
               I2C_Init@Speed 0079                      ?___lldiv 0072                      ?___llmod 0072  
              _I2C1_Interrupt 05B5          __end_of_I2C1_PinInit 0F7E          __end_of_I2C1_Receive 0383  
__size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 0F89          __end_of_I2C2_Receive 02F2  
        __end_of_I2C1_Setting 0749                      _I2C_Init 07CD          __end_of_I2C2_Setting 0711  
              _I2C2_Interrupt 0561             __size_of_xvprintf 022A                      ?_xprintf 0056  
              __size_of_xputc 002D                __size_of_xputs 0013           I2C2_Receive@address 0076  
            I2C2_Receive@size 0073                      _LCD_Init 04F8                ___wmul@product 0076  
              ??_I2C_Transmit 0023                     clear_ram0 0F6D                     main@F3055 00D4  
      __end_of_I2C1_Interrupt 0609                      _SSP1CON1 0215                      _SSP1CON2 0216  
        I2C2_Transmit@address 0076                      _SSP2CON1 021D                      _SSP2CON2 021E  
                    _SSP1STAT 0214                      _SSP2STAT 021C             ___wmul@multiplier 0072  
      __end_of_I2C2_Interrupt 05B5        __size_of_I2C1_Transmit 007E                     _xfunc_out 006C  
            __size_of_LCD_Put 0006        __size_of_I2C2_Transmit 007E               I2C_Receive@I2Cx 0027  
             I2C_Receive@size 0022               ?_I2C1_Interrupt 0070              __size_of___lldiv 0053  
            __size_of___llmod 0043              I2C1_Setting@mode 0073            LCD_WriteData@point 0074  
                ?_I2C_Receive 0020               ?_I2C2_Interrupt 0070             I2C1_Transmit@size 0073  
  __end_of_LCD_CursorPosition 0FE5                      __ptext10 0F89                      __ptext11 0FD0  
                    __ptext20 06D9                      __ptext12 069F                      __ptext21 0F7E  
                    __ptext13 07A2                      __ptext22 0711                      __ptext14 0383  
                    __ptext23 0F73                      __ptext15 0401                      __ptext24 0FBB  
                    __ptext16 0776                      __ptext17 0261                      __ptext26 0F61  
                    __ptext18 02F2                      __ptext27 0561                      __ptext19 07CD  
                    __ptext28 05B5                  _SSP1CON1bits 0215                  _SSP1CON2bits 0216  
            _LCD_DisplayClear 0F89                  _SSP2CON1bits 021D                  _SSP2CON2bits 021E  
            __size_of_xprintf 0010                 __size_of_hand 000C                 __size_of_main 0079  
               _I2C1_Transmit 0401                 _I2C2_Transmit 0383         __size_of_I2C1_PinInit 000B  
          I2C2_Receive@result 0077         __size_of_I2C1_Receive 0091                      int$flags 007E  
       __size_of_I2C2_PinInit 000B           I2C_Transmit@address 0020         __size_of_I2C2_Receive 0091  
       __size_of_I2C1_Setting 0038                  _SSP1STATbits 0214                      _xfunc_in 006A  
       __size_of_I2C2_Setting 0038                  _SSP2STATbits 021C          __end_of_I2C_Transmit 07CD  
           I2C2_Setting@Speed 0074                      _xvprintf 0037                    xprintf@arp 0061  
                  xprintf@fmt 0056                      intlevel1 0000           _I2C_CommonInterrupt 0F61  
                _I2C1_PinInit 0F73                  _I2C1_Receive 02F2              ___lldiv@dividend 0076  
              ?_I2C1_Transmit 0072             __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 0F7E  
                _I2C2_Receive 0261                  _I2C1_Setting 0711                ?_I2C2_Transmit 0072  
                _I2C2_Setting 06D9                   xvprintf@arp 0028                   xvprintf@fmt 0026  
               I2C1_Receive@i 0078            I2C_Transmit@result 0027              I2C2_Setting@mode 0073  
        ?_I2C_CommonInterrupt 0070              ___lldiv@quotient 0021                 I2C2_Receive@i 0078  
      __size_of_LCD_WriteData 003A                I2C1_Transmit@i 0077                      xputs@str 0079  
                   xvprintf@c 0055                     xvprintf@d 0054                     xvprintf@f 0050  
                   xvprintf@i 0052                     xvprintf@j 004A                     xvprintf@p 0045  
                   xvprintf@r 0046                     xvprintf@s 002D                     xvprintf@v 004C  
                   xvprintf@w 0048  
