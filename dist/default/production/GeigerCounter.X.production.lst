

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Jun 15 10:30:22 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     
    65                           ; Version 1.41
    66                           ; Generated 25/01/2017 GMT
    67                           ; 
    68                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F1827 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  0111                     	;# 
   148  0112                     	;# 
   149  0113                     	;# 
   150  0114                     	;# 
   151  0115                     	;# 
   152  0116                     	;# 
   153  0117                     	;# 
   154  0118                     	;# 
   155  0119                     	;# 
   156  011A                     	;# 
   157  011B                     	;# 
   158  011D                     	;# 
   159  011E                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0191                     	;# 
   163  0191                     	;# 
   164  0192                     	;# 
   165  0193                     	;# 
   166  0193                     	;# 
   167  0193                     	;# 
   168  0194                     	;# 
   169  0195                     	;# 
   170  0196                     	;# 
   171  0199                     	;# 
   172  019A                     	;# 
   173  019B                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019C                     	;# 
   178  019C                     	;# 
   179  019D                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020D                     	;# 
   184  0211                     	;# 
   185  0211                     	;# 
   186  0212                     	;# 
   187  0212                     	;# 
   188  0213                     	;# 
   189  0213                     	;# 
   190  0214                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0216                     	;# 
   196  0216                     	;# 
   197  0217                     	;# 
   198  0217                     	;# 
   199  0219                     	;# 
   200  021A                     	;# 
   201  021B                     	;# 
   202  021C                     	;# 
   203  021D                     	;# 
   204  021E                     	;# 
   205  021F                     	;# 
   206  0291                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0293                     	;# 
   210  0294                     	;# 
   211  0295                     	;# 
   212  0295                     	;# 
   213  0296                     	;# 
   214  0298                     	;# 
   215  0298                     	;# 
   216  0299                     	;# 
   217  029A                     	;# 
   218  029B                     	;# 
   219  029C                     	;# 
   220  029C                     	;# 
   221  029D                     	;# 
   222  029E                     	;# 
   223  029E                     	;# 
   224  0311                     	;# 
   225  0311                     	;# 
   226  0312                     	;# 
   227  0313                     	;# 
   228  0318                     	;# 
   229  0318                     	;# 
   230  0319                     	;# 
   231  031A                     	;# 
   232  0394                     	;# 
   233  0395                     	;# 
   234  0396                     	;# 
   235  039A                     	;# 
   236  039C                     	;# 
   237  039D                     	;# 
   238  039E                     	;# 
   239  039F                     	;# 
   240  0415                     	;# 
   241  0416                     	;# 
   242  0417                     	;# 
   243  041C                     	;# 
   244  041D                     	;# 
   245  041E                     	;# 
   246  0FE4                     	;# 
   247  0FE5                     	;# 
   248  0FE6                     	;# 
   249  0FE7                     	;# 
   250  0FE8                     	;# 
   251  0FE9                     	;# 
   252  0FEA                     	;# 
   253  0FEB                     	;# 
   254  0FED                     	;# 
   255  0FEE                     	;# 
   256  0FEF                     	;# 
   257  0000                     	;# 
   258  0001                     	;# 
   259  0002                     	;# 
   260  0003                     	;# 
   261  0004                     	;# 
   262  0005                     	;# 
   263  0006                     	;# 
   264  0007                     	;# 
   265  0008                     	;# 
   266  0009                     	;# 
   267  000A                     	;# 
   268  000B                     	;# 
   269  000C                     	;# 
   270  000D                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001C                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  0111                     	;# 
   306  0112                     	;# 
   307  0113                     	;# 
   308  0114                     	;# 
   309  0115                     	;# 
   310  0116                     	;# 
   311  0117                     	;# 
   312  0118                     	;# 
   313  0119                     	;# 
   314  011A                     	;# 
   315  011B                     	;# 
   316  011D                     	;# 
   317  011E                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0191                     	;# 
   321  0191                     	;# 
   322  0192                     	;# 
   323  0193                     	;# 
   324  0193                     	;# 
   325  0193                     	;# 
   326  0194                     	;# 
   327  0195                     	;# 
   328  0196                     	;# 
   329  0199                     	;# 
   330  019A                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019B                     	;# 
   335  019C                     	;# 
   336  019C                     	;# 
   337  019D                     	;# 
   338  019E                     	;# 
   339  019F                     	;# 
   340  020C                     	;# 
   341  020D                     	;# 
   342  0211                     	;# 
   343  0211                     	;# 
   344  0212                     	;# 
   345  0212                     	;# 
   346  0213                     	;# 
   347  0213                     	;# 
   348  0214                     	;# 
   349  0214                     	;# 
   350  0215                     	;# 
   351  0215                     	;# 
   352  0215                     	;# 
   353  0216                     	;# 
   354  0216                     	;# 
   355  0217                     	;# 
   356  0217                     	;# 
   357  0219                     	;# 
   358  021A                     	;# 
   359  021B                     	;# 
   360  021C                     	;# 
   361  021D                     	;# 
   362  021E                     	;# 
   363  021F                     	;# 
   364  0291                     	;# 
   365  0291                     	;# 
   366  0292                     	;# 
   367  0293                     	;# 
   368  0294                     	;# 
   369  0295                     	;# 
   370  0295                     	;# 
   371  0296                     	;# 
   372  0298                     	;# 
   373  0298                     	;# 
   374  0299                     	;# 
   375  029A                     	;# 
   376  029B                     	;# 
   377  029C                     	;# 
   378  029C                     	;# 
   379  029D                     	;# 
   380  029E                     	;# 
   381  029E                     	;# 
   382  0311                     	;# 
   383  0311                     	;# 
   384  0312                     	;# 
   385  0313                     	;# 
   386  0318                     	;# 
   387  0318                     	;# 
   388  0319                     	;# 
   389  031A                     	;# 
   390  0394                     	;# 
   391  0395                     	;# 
   392  0396                     	;# 
   393  039A                     	;# 
   394  039C                     	;# 
   395  039D                     	;# 
   396  039E                     	;# 
   397  039F                     	;# 
   398  0415                     	;# 
   399  0416                     	;# 
   400  0417                     	;# 
   401  041C                     	;# 
   402  041D                     	;# 
   403  041E                     	;# 
   404  0FE4                     	;# 
   405  0FE5                     	;# 
   406  0FE6                     	;# 
   407  0FE7                     	;# 
   408  0FE8                     	;# 
   409  0FE9                     	;# 
   410  0FEA                     	;# 
   411  0FEB                     	;# 
   412  0FED                     	;# 
   413  0FEE                     	;# 
   414  0FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  000D                     	;# 
   429  0011                     	;# 
   430  0012                     	;# 
   431  0013                     	;# 
   432  0014                     	;# 
   433  0015                     	;# 
   434  0016                     	;# 
   435  0016                     	;# 
   436  0017                     	;# 
   437  0018                     	;# 
   438  0019                     	;# 
   439  001A                     	;# 
   440  001B                     	;# 
   441  001C                     	;# 
   442  001E                     	;# 
   443  001F                     	;# 
   444  008C                     	;# 
   445  008D                     	;# 
   446  0091                     	;# 
   447  0092                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  0111                     	;# 
   464  0112                     	;# 
   465  0113                     	;# 
   466  0114                     	;# 
   467  0115                     	;# 
   468  0116                     	;# 
   469  0117                     	;# 
   470  0118                     	;# 
   471  0119                     	;# 
   472  011A                     	;# 
   473  011B                     	;# 
   474  011D                     	;# 
   475  011E                     	;# 
   476  018C                     	;# 
   477  018D                     	;# 
   478  0191                     	;# 
   479  0191                     	;# 
   480  0192                     	;# 
   481  0193                     	;# 
   482  0193                     	;# 
   483  0193                     	;# 
   484  0194                     	;# 
   485  0195                     	;# 
   486  0196                     	;# 
   487  0199                     	;# 
   488  019A                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019C                     	;# 
   494  019C                     	;# 
   495  019D                     	;# 
   496  019E                     	;# 
   497  019F                     	;# 
   498  020C                     	;# 
   499  020D                     	;# 
   500  0211                     	;# 
   501  0211                     	;# 
   502  0212                     	;# 
   503  0212                     	;# 
   504  0213                     	;# 
   505  0213                     	;# 
   506  0214                     	;# 
   507  0214                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0216                     	;# 
   512  0216                     	;# 
   513  0217                     	;# 
   514  0217                     	;# 
   515  0219                     	;# 
   516  021A                     	;# 
   517  021B                     	;# 
   518  021C                     	;# 
   519  021D                     	;# 
   520  021E                     	;# 
   521  021F                     	;# 
   522  0291                     	;# 
   523  0291                     	;# 
   524  0292                     	;# 
   525  0293                     	;# 
   526  0294                     	;# 
   527  0295                     	;# 
   528  0295                     	;# 
   529  0296                     	;# 
   530  0298                     	;# 
   531  0298                     	;# 
   532  0299                     	;# 
   533  029A                     	;# 
   534  029B                     	;# 
   535  029C                     	;# 
   536  029C                     	;# 
   537  029D                     	;# 
   538  029E                     	;# 
   539  029E                     	;# 
   540  0311                     	;# 
   541  0311                     	;# 
   542  0312                     	;# 
   543  0313                     	;# 
   544  0318                     	;# 
   545  0318                     	;# 
   546  0319                     	;# 
   547  031A                     	;# 
   548  0394                     	;# 
   549  0395                     	;# 
   550  0396                     	;# 
   551  039A                     	;# 
   552  039C                     	;# 
   553  039D                     	;# 
   554  039E                     	;# 
   555  039F                     	;# 
   556  0415                     	;# 
   557  0416                     	;# 
   558  0417                     	;# 
   559  041C                     	;# 
   560  041D                     	;# 
   561  041E                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  0011                     	;# 
   588  0012                     	;# 
   589  0013                     	;# 
   590  0014                     	;# 
   591  0015                     	;# 
   592  0016                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  0019                     	;# 
   597  001A                     	;# 
   598  001B                     	;# 
   599  001C                     	;# 
   600  001E                     	;# 
   601  001F                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0095                     	;# 
   609  0096                     	;# 
   610  0097                     	;# 
   611  0098                     	;# 
   612  0099                     	;# 
   613  009A                     	;# 
   614  009B                     	;# 
   615  009B                     	;# 
   616  009C                     	;# 
   617  009D                     	;# 
   618  009E                     	;# 
   619  010C                     	;# 
   620  010D                     	;# 
   621  0111                     	;# 
   622  0112                     	;# 
   623  0113                     	;# 
   624  0114                     	;# 
   625  0115                     	;# 
   626  0116                     	;# 
   627  0117                     	;# 
   628  0118                     	;# 
   629  0119                     	;# 
   630  011A                     	;# 
   631  011B                     	;# 
   632  011D                     	;# 
   633  011E                     	;# 
   634  018C                     	;# 
   635  018D                     	;# 
   636  0191                     	;# 
   637  0191                     	;# 
   638  0192                     	;# 
   639  0193                     	;# 
   640  0193                     	;# 
   641  0193                     	;# 
   642  0194                     	;# 
   643  0195                     	;# 
   644  0196                     	;# 
   645  0199                     	;# 
   646  019A                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019C                     	;# 
   652  019C                     	;# 
   653  019D                     	;# 
   654  019E                     	;# 
   655  019F                     	;# 
   656  020C                     	;# 
   657  020D                     	;# 
   658  0211                     	;# 
   659  0211                     	;# 
   660  0212                     	;# 
   661  0212                     	;# 
   662  0213                     	;# 
   663  0213                     	;# 
   664  0214                     	;# 
   665  0214                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0216                     	;# 
   670  0216                     	;# 
   671  0217                     	;# 
   672  0217                     	;# 
   673  0219                     	;# 
   674  021A                     	;# 
   675  021B                     	;# 
   676  021C                     	;# 
   677  021D                     	;# 
   678  021E                     	;# 
   679  021F                     	;# 
   680  0291                     	;# 
   681  0291                     	;# 
   682  0292                     	;# 
   683  0293                     	;# 
   684  0294                     	;# 
   685  0295                     	;# 
   686  0295                     	;# 
   687  0296                     	;# 
   688  0298                     	;# 
   689  0298                     	;# 
   690  0299                     	;# 
   691  029A                     	;# 
   692  029B                     	;# 
   693  029C                     	;# 
   694  029C                     	;# 
   695  029D                     	;# 
   696  029E                     	;# 
   697  029E                     	;# 
   698  0311                     	;# 
   699  0311                     	;# 
   700  0312                     	;# 
   701  0313                     	;# 
   702  0318                     	;# 
   703  0318                     	;# 
   704  0319                     	;# 
   705  031A                     	;# 
   706  0394                     	;# 
   707  0395                     	;# 
   708  0396                     	;# 
   709  039A                     	;# 
   710  039C                     	;# 
   711  039D                     	;# 
   712  039E                     	;# 
   713  039F                     	;# 
   714  0415                     	;# 
   715  0416                     	;# 
   716  0417                     	;# 
   717  041C                     	;# 
   718  041D                     	;# 
   719  041E                     	;# 
   720  0FE4                     	;# 
   721  0FE5                     	;# 
   722  0FE6                     	;# 
   723  0FE7                     	;# 
   724  0FE8                     	;# 
   725  0FE9                     	;# 
   726  0FEA                     	;# 
   727  0FEB                     	;# 
   728  0FED                     	;# 
   729  0FEE                     	;# 
   730  0FEF                     	;# 
   731  0000                     	;# 
   732  0001                     	;# 
   733  0002                     	;# 
   734  0003                     	;# 
   735  0004                     	;# 
   736  0005                     	;# 
   737  0006                     	;# 
   738  0007                     	;# 
   739  0008                     	;# 
   740  0009                     	;# 
   741  000A                     	;# 
   742  000B                     	;# 
   743  000C                     	;# 
   744  000D                     	;# 
   745  0011                     	;# 
   746  0012                     	;# 
   747  0013                     	;# 
   748  0014                     	;# 
   749  0015                     	;# 
   750  0016                     	;# 
   751  0016                     	;# 
   752  0017                     	;# 
   753  0018                     	;# 
   754  0019                     	;# 
   755  001A                     	;# 
   756  001B                     	;# 
   757  001C                     	;# 
   758  001E                     	;# 
   759  001F                     	;# 
   760  008C                     	;# 
   761  008D                     	;# 
   762  0091                     	;# 
   763  0092                     	;# 
   764  0093                     	;# 
   765  0094                     	;# 
   766  0095                     	;# 
   767  0096                     	;# 
   768  0097                     	;# 
   769  0098                     	;# 
   770  0099                     	;# 
   771  009A                     	;# 
   772  009B                     	;# 
   773  009B                     	;# 
   774  009C                     	;# 
   775  009D                     	;# 
   776  009E                     	;# 
   777  010C                     	;# 
   778  010D                     	;# 
   779  0111                     	;# 
   780  0112                     	;# 
   781  0113                     	;# 
   782  0114                     	;# 
   783  0115                     	;# 
   784  0116                     	;# 
   785  0117                     	;# 
   786  0118                     	;# 
   787  0119                     	;# 
   788  011A                     	;# 
   789  011B                     	;# 
   790  011D                     	;# 
   791  011E                     	;# 
   792  018C                     	;# 
   793  018D                     	;# 
   794  0191                     	;# 
   795  0191                     	;# 
   796  0192                     	;# 
   797  0193                     	;# 
   798  0193                     	;# 
   799  0193                     	;# 
   800  0194                     	;# 
   801  0195                     	;# 
   802  0196                     	;# 
   803  0199                     	;# 
   804  019A                     	;# 
   805  019B                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019B                     	;# 
   809  019C                     	;# 
   810  019C                     	;# 
   811  019D                     	;# 
   812  019E                     	;# 
   813  019F                     	;# 
   814  020C                     	;# 
   815  020D                     	;# 
   816  0211                     	;# 
   817  0211                     	;# 
   818  0212                     	;# 
   819  0212                     	;# 
   820  0213                     	;# 
   821  0213                     	;# 
   822  0214                     	;# 
   823  0214                     	;# 
   824  0215                     	;# 
   825  0215                     	;# 
   826  0215                     	;# 
   827  0216                     	;# 
   828  0216                     	;# 
   829  0217                     	;# 
   830  0217                     	;# 
   831  0219                     	;# 
   832  021A                     	;# 
   833  021B                     	;# 
   834  021C                     	;# 
   835  021D                     	;# 
   836  021E                     	;# 
   837  021F                     	;# 
   838  0291                     	;# 
   839  0291                     	;# 
   840  0292                     	;# 
   841  0293                     	;# 
   842  0294                     	;# 
   843  0295                     	;# 
   844  0295                     	;# 
   845  0296                     	;# 
   846  0298                     	;# 
   847  0298                     	;# 
   848  0299                     	;# 
   849  029A                     	;# 
   850  029B                     	;# 
   851  029C                     	;# 
   852  029C                     	;# 
   853  029D                     	;# 
   854  029E                     	;# 
   855  029E                     	;# 
   856  0311                     	;# 
   857  0311                     	;# 
   858  0312                     	;# 
   859  0313                     	;# 
   860  0318                     	;# 
   861  0318                     	;# 
   862  0319                     	;# 
   863  031A                     	;# 
   864  0394                     	;# 
   865  0395                     	;# 
   866  0396                     	;# 
   867  039A                     	;# 
   868  039C                     	;# 
   869  039D                     	;# 
   870  039E                     	;# 
   871  039F                     	;# 
   872  0415                     	;# 
   873  0416                     	;# 
   874  0417                     	;# 
   875  041C                     	;# 
   876  041D                     	;# 
   877  041E                     	;# 
   878  0FE4                     	;# 
   879  0FE5                     	;# 
   880  0FE6                     	;# 
   881  0FE7                     	;# 
   882  0FE8                     	;# 
   883  0FE9                     	;# 
   884  0FEA                     	;# 
   885  0FEB                     	;# 
   886  0FED                     	;# 
   887  0FEE                     	;# 
   888  0FEF                     	;# 
   889  0000                     	;# 
   890  0001                     	;# 
   891  0002                     	;# 
   892  0003                     	;# 
   893  0004                     	;# 
   894  0005                     	;# 
   895  0006                     	;# 
   896  0007                     	;# 
   897  0008                     	;# 
   898  0009                     	;# 
   899  000A                     	;# 
   900  000B                     	;# 
   901  000C                     	;# 
   902  000D                     	;# 
   903  0011                     	;# 
   904  0012                     	;# 
   905  0013                     	;# 
   906  0014                     	;# 
   907  0015                     	;# 
   908  0016                     	;# 
   909  0016                     	;# 
   910  0017                     	;# 
   911  0018                     	;# 
   912  0019                     	;# 
   913  001A                     	;# 
   914  001B                     	;# 
   915  001C                     	;# 
   916  001E                     	;# 
   917  001F                     	;# 
   918  008C                     	;# 
   919  008D                     	;# 
   920  0091                     	;# 
   921  0092                     	;# 
   922  0093                     	;# 
   923  0094                     	;# 
   924  0095                     	;# 
   925  0096                     	;# 
   926  0097                     	;# 
   927  0098                     	;# 
   928  0099                     	;# 
   929  009A                     	;# 
   930  009B                     	;# 
   931  009B                     	;# 
   932  009C                     	;# 
   933  009D                     	;# 
   934  009E                     	;# 
   935  010C                     	;# 
   936  010D                     	;# 
   937  0111                     	;# 
   938  0112                     	;# 
   939  0113                     	;# 
   940  0114                     	;# 
   941  0115                     	;# 
   942  0116                     	;# 
   943  0117                     	;# 
   944  0118                     	;# 
   945  0119                     	;# 
   946  011A                     	;# 
   947  011B                     	;# 
   948  011D                     	;# 
   949  011E                     	;# 
   950  018C                     	;# 
   951  018D                     	;# 
   952  0191                     	;# 
   953  0191                     	;# 
   954  0192                     	;# 
   955  0193                     	;# 
   956  0193                     	;# 
   957  0193                     	;# 
   958  0194                     	;# 
   959  0195                     	;# 
   960  0196                     	;# 
   961  0199                     	;# 
   962  019A                     	;# 
   963  019B                     	;# 
   964  019B                     	;# 
   965  019B                     	;# 
   966  019B                     	;# 
   967  019C                     	;# 
   968  019C                     	;# 
   969  019D                     	;# 
   970  019E                     	;# 
   971  019F                     	;# 
   972  020C                     	;# 
   973  020D                     	;# 
   974  0211                     	;# 
   975  0211                     	;# 
   976  0212                     	;# 
   977  0212                     	;# 
   978  0213                     	;# 
   979  0213                     	;# 
   980  0214                     	;# 
   981  0214                     	;# 
   982  0215                     	;# 
   983  0215                     	;# 
   984  0215                     	;# 
   985  0216                     	;# 
   986  0216                     	;# 
   987  0217                     	;# 
   988  0217                     	;# 
   989  0219                     	;# 
   990  021A                     	;# 
   991  021B                     	;# 
   992  021C                     	;# 
   993  021D                     	;# 
   994  021E                     	;# 
   995  021F                     	;# 
   996  0291                     	;# 
   997  0291                     	;# 
   998  0292                     	;# 
   999  0293                     	;# 
  1000  0294                     	;# 
  1001  0295                     	;# 
  1002  0295                     	;# 
  1003  0296                     	;# 
  1004  0298                     	;# 
  1005  0298                     	;# 
  1006  0299                     	;# 
  1007  029A                     	;# 
  1008  029B                     	;# 
  1009  029C                     	;# 
  1010  029C                     	;# 
  1011  029D                     	;# 
  1012  029E                     	;# 
  1013  029E                     	;# 
  1014  0311                     	;# 
  1015  0311                     	;# 
  1016  0312                     	;# 
  1017  0313                     	;# 
  1018  0318                     	;# 
  1019  0318                     	;# 
  1020  0319                     	;# 
  1021  031A                     	;# 
  1022  0394                     	;# 
  1023  0395                     	;# 
  1024  0396                     	;# 
  1025  039A                     	;# 
  1026  039C                     	;# 
  1027  039D                     	;# 
  1028  039E                     	;# 
  1029  039F                     	;# 
  1030  0415                     	;# 
  1031  0416                     	;# 
  1032  0417                     	;# 
  1033  041C                     	;# 
  1034  041D                     	;# 
  1035  041E                     	;# 
  1036  0FE4                     	;# 
  1037  0FE5                     	;# 
  1038  0FE6                     	;# 
  1039  0FE7                     	;# 
  1040  0FE8                     	;# 
  1041  0FE9                     	;# 
  1042  0FEA                     	;# 
  1043  0FEB                     	;# 
  1044  0FED                     	;# 
  1045  0FEE                     	;# 
  1046  0FEF                     	;# 
  1047  0000                     	;# 
  1048  0001                     	;# 
  1049  0002                     	;# 
  1050  0003                     	;# 
  1051  0004                     	;# 
  1052  0005                     	;# 
  1053  0006                     	;# 
  1054  0007                     	;# 
  1055  0008                     	;# 
  1056  0009                     	;# 
  1057  000A                     	;# 
  1058  000B                     	;# 
  1059  000C                     	;# 
  1060  000D                     	;# 
  1061  0011                     	;# 
  1062  0012                     	;# 
  1063  0013                     	;# 
  1064  0014                     	;# 
  1065  0015                     	;# 
  1066  0016                     	;# 
  1067  0016                     	;# 
  1068  0017                     	;# 
  1069  0018                     	;# 
  1070  0019                     	;# 
  1071  001A                     	;# 
  1072  001B                     	;# 
  1073  001C                     	;# 
  1074  001E                     	;# 
  1075  001F                     	;# 
  1076  008C                     	;# 
  1077  008D                     	;# 
  1078  0091                     	;# 
  1079  0092                     	;# 
  1080  0093                     	;# 
  1081  0094                     	;# 
  1082  0095                     	;# 
  1083  0096                     	;# 
  1084  0097                     	;# 
  1085  0098                     	;# 
  1086  0099                     	;# 
  1087  009A                     	;# 
  1088  009B                     	;# 
  1089  009B                     	;# 
  1090  009C                     	;# 
  1091  009D                     	;# 
  1092  009E                     	;# 
  1093  010C                     	;# 
  1094  010D                     	;# 
  1095  0111                     	;# 
  1096  0112                     	;# 
  1097  0113                     	;# 
  1098  0114                     	;# 
  1099  0115                     	;# 
  1100  0116                     	;# 
  1101  0117                     	;# 
  1102  0118                     	;# 
  1103  0119                     	;# 
  1104  011A                     	;# 
  1105  011B                     	;# 
  1106  011D                     	;# 
  1107  011E                     	;# 
  1108  018C                     	;# 
  1109  018D                     	;# 
  1110  0191                     	;# 
  1111  0191                     	;# 
  1112  0192                     	;# 
  1113  0193                     	;# 
  1114  0193                     	;# 
  1115  0193                     	;# 
  1116  0194                     	;# 
  1117  0195                     	;# 
  1118  0196                     	;# 
  1119  0199                     	;# 
  1120  019A                     	;# 
  1121  019B                     	;# 
  1122  019B                     	;# 
  1123  019B                     	;# 
  1124  019B                     	;# 
  1125  019C                     	;# 
  1126  019C                     	;# 
  1127  019D                     	;# 
  1128  019E                     	;# 
  1129  019F                     	;# 
  1130  020C                     	;# 
  1131  020D                     	;# 
  1132  0211                     	;# 
  1133  0211                     	;# 
  1134  0212                     	;# 
  1135  0212                     	;# 
  1136  0213                     	;# 
  1137  0213                     	;# 
  1138  0214                     	;# 
  1139  0214                     	;# 
  1140  0215                     	;# 
  1141  0215                     	;# 
  1142  0215                     	;# 
  1143  0216                     	;# 
  1144  0216                     	;# 
  1145  0217                     	;# 
  1146  0217                     	;# 
  1147  0219                     	;# 
  1148  021A                     	;# 
  1149  021B                     	;# 
  1150  021C                     	;# 
  1151  021D                     	;# 
  1152  021E                     	;# 
  1153  021F                     	;# 
  1154  0291                     	;# 
  1155  0291                     	;# 
  1156  0292                     	;# 
  1157  0293                     	;# 
  1158  0294                     	;# 
  1159  0295                     	;# 
  1160  0295                     	;# 
  1161  0296                     	;# 
  1162  0298                     	;# 
  1163  0298                     	;# 
  1164  0299                     	;# 
  1165  029A                     	;# 
  1166  029B                     	;# 
  1167  029C                     	;# 
  1168  029C                     	;# 
  1169  029D                     	;# 
  1170  029E                     	;# 
  1171  029E                     	;# 
  1172  0311                     	;# 
  1173  0311                     	;# 
  1174  0312                     	;# 
  1175  0313                     	;# 
  1176  0318                     	;# 
  1177  0318                     	;# 
  1178  0319                     	;# 
  1179  031A                     	;# 
  1180  0394                     	;# 
  1181  0395                     	;# 
  1182  0396                     	;# 
  1183  039A                     	;# 
  1184  039C                     	;# 
  1185  039D                     	;# 
  1186  039E                     	;# 
  1187  039F                     	;# 
  1188  0415                     	;# 
  1189  0416                     	;# 
  1190  0417                     	;# 
  1191  041C                     	;# 
  1192  041D                     	;# 
  1193  041E                     	;# 
  1194  0FE4                     	;# 
  1195  0FE5                     	;# 
  1196  0FE6                     	;# 
  1197  0FE7                     	;# 
  1198  0FE8                     	;# 
  1199  0FE9                     	;# 
  1200  0FEA                     	;# 
  1201  0FEB                     	;# 
  1202  0FED                     	;# 
  1203  0FEE                     	;# 
  1204  0FEF                     	;# 
  1205  0000                     	;# 
  1206  0001                     	;# 
  1207  0002                     	;# 
  1208  0003                     	;# 
  1209  0004                     	;# 
  1210  0005                     	;# 
  1211  0006                     	;# 
  1212  0007                     	;# 
  1213  0008                     	;# 
  1214  0009                     	;# 
  1215  000A                     	;# 
  1216  000B                     	;# 
  1217  000C                     	;# 
  1218  000D                     	;# 
  1219  0011                     	;# 
  1220  0012                     	;# 
  1221  0013                     	;# 
  1222  0014                     	;# 
  1223  0015                     	;# 
  1224  0016                     	;# 
  1225  0016                     	;# 
  1226  0017                     	;# 
  1227  0018                     	;# 
  1228  0019                     	;# 
  1229  001A                     	;# 
  1230  001B                     	;# 
  1231  001C                     	;# 
  1232  001E                     	;# 
  1233  001F                     	;# 
  1234  008C                     	;# 
  1235  008D                     	;# 
  1236  0091                     	;# 
  1237  0092                     	;# 
  1238  0093                     	;# 
  1239  0094                     	;# 
  1240  0095                     	;# 
  1241  0096                     	;# 
  1242  0097                     	;# 
  1243  0098                     	;# 
  1244  0099                     	;# 
  1245  009A                     	;# 
  1246  009B                     	;# 
  1247  009B                     	;# 
  1248  009C                     	;# 
  1249  009D                     	;# 
  1250  009E                     	;# 
  1251  010C                     	;# 
  1252  010D                     	;# 
  1253  0111                     	;# 
  1254  0112                     	;# 
  1255  0113                     	;# 
  1256  0114                     	;# 
  1257  0115                     	;# 
  1258  0116                     	;# 
  1259  0117                     	;# 
  1260  0118                     	;# 
  1261  0119                     	;# 
  1262  011A                     	;# 
  1263  011B                     	;# 
  1264  011D                     	;# 
  1265  011E                     	;# 
  1266  018C                     	;# 
  1267  018D                     	;# 
  1268  0191                     	;# 
  1269  0191                     	;# 
  1270  0192                     	;# 
  1271  0193                     	;# 
  1272  0193                     	;# 
  1273  0193                     	;# 
  1274  0194                     	;# 
  1275  0195                     	;# 
  1276  0196                     	;# 
  1277  0199                     	;# 
  1278  019A                     	;# 
  1279  019B                     	;# 
  1280  019B                     	;# 
  1281  019B                     	;# 
  1282  019B                     	;# 
  1283  019C                     	;# 
  1284  019C                     	;# 
  1285  019D                     	;# 
  1286  019E                     	;# 
  1287  019F                     	;# 
  1288  020C                     	;# 
  1289  020D                     	;# 
  1290  0211                     	;# 
  1291  0211                     	;# 
  1292  0212                     	;# 
  1293  0212                     	;# 
  1294  0213                     	;# 
  1295  0213                     	;# 
  1296  0214                     	;# 
  1297  0214                     	;# 
  1298  0215                     	;# 
  1299  0215                     	;# 
  1300  0215                     	;# 
  1301  0216                     	;# 
  1302  0216                     	;# 
  1303  0217                     	;# 
  1304  0217                     	;# 
  1305  0219                     	;# 
  1306  021A                     	;# 
  1307  021B                     	;# 
  1308  021C                     	;# 
  1309  021D                     	;# 
  1310  021E                     	;# 
  1311  021F                     	;# 
  1312  0291                     	;# 
  1313  0291                     	;# 
  1314  0292                     	;# 
  1315  0293                     	;# 
  1316  0294                     	;# 
  1317  0295                     	;# 
  1318  0295                     	;# 
  1319  0296                     	;# 
  1320  0298                     	;# 
  1321  0298                     	;# 
  1322  0299                     	;# 
  1323  029A                     	;# 
  1324  029B                     	;# 
  1325  029C                     	;# 
  1326  029C                     	;# 
  1327  029D                     	;# 
  1328  029E                     	;# 
  1329  029E                     	;# 
  1330  0311                     	;# 
  1331  0311                     	;# 
  1332  0312                     	;# 
  1333  0313                     	;# 
  1334  0318                     	;# 
  1335  0318                     	;# 
  1336  0319                     	;# 
  1337  031A                     	;# 
  1338  0394                     	;# 
  1339  0395                     	;# 
  1340  0396                     	;# 
  1341  039A                     	;# 
  1342  039C                     	;# 
  1343  039D                     	;# 
  1344  039E                     	;# 
  1345  039F                     	;# 
  1346  0415                     	;# 
  1347  0416                     	;# 
  1348  0417                     	;# 
  1349  041C                     	;# 
  1350  041D                     	;# 
  1351  041E                     	;# 
  1352  0FE4                     	;# 
  1353  0FE5                     	;# 
  1354  0FE6                     	;# 
  1355  0FE7                     	;# 
  1356  0FE8                     	;# 
  1357  0FE9                     	;# 
  1358  0FEA                     	;# 
  1359  0FEB                     	;# 
  1360  0FED                     	;# 
  1361  0FEE                     	;# 
  1362  0FEF                     	;# 
  1363  0000                     	;# 
  1364  0001                     	;# 
  1365  0002                     	;# 
  1366  0003                     	;# 
  1367  0004                     	;# 
  1368  0005                     	;# 
  1369  0006                     	;# 
  1370  0007                     	;# 
  1371  0008                     	;# 
  1372  0009                     	;# 
  1373  000A                     	;# 
  1374  000B                     	;# 
  1375  000C                     	;# 
  1376  000D                     	;# 
  1377  0011                     	;# 
  1378  0012                     	;# 
  1379  0013                     	;# 
  1380  0014                     	;# 
  1381  0015                     	;# 
  1382  0016                     	;# 
  1383  0016                     	;# 
  1384  0017                     	;# 
  1385  0018                     	;# 
  1386  0019                     	;# 
  1387  001A                     	;# 
  1388  001B                     	;# 
  1389  001C                     	;# 
  1390  001E                     	;# 
  1391  001F                     	;# 
  1392  008C                     	;# 
  1393  008D                     	;# 
  1394  0091                     	;# 
  1395  0092                     	;# 
  1396  0093                     	;# 
  1397  0094                     	;# 
  1398  0095                     	;# 
  1399  0096                     	;# 
  1400  0097                     	;# 
  1401  0098                     	;# 
  1402  0099                     	;# 
  1403  009A                     	;# 
  1404  009B                     	;# 
  1405  009B                     	;# 
  1406  009C                     	;# 
  1407  009D                     	;# 
  1408  009E                     	;# 
  1409  010C                     	;# 
  1410  010D                     	;# 
  1411  0111                     	;# 
  1412  0112                     	;# 
  1413  0113                     	;# 
  1414  0114                     	;# 
  1415  0115                     	;# 
  1416  0116                     	;# 
  1417  0117                     	;# 
  1418  0118                     	;# 
  1419  0119                     	;# 
  1420  011A                     	;# 
  1421  011B                     	;# 
  1422  011D                     	;# 
  1423  011E                     	;# 
  1424  018C                     	;# 
  1425  018D                     	;# 
  1426  0191                     	;# 
  1427  0191                     	;# 
  1428  0192                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0193                     	;# 
  1432  0194                     	;# 
  1433  0195                     	;# 
  1434  0196                     	;# 
  1435  0199                     	;# 
  1436  019A                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019C                     	;# 
  1442  019C                     	;# 
  1443  019D                     	;# 
  1444  019E                     	;# 
  1445  019F                     	;# 
  1446  020C                     	;# 
  1447  020D                     	;# 
  1448  0211                     	;# 
  1449  0211                     	;# 
  1450  0212                     	;# 
  1451  0212                     	;# 
  1452  0213                     	;# 
  1453  0213                     	;# 
  1454  0214                     	;# 
  1455  0214                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0216                     	;# 
  1460  0216                     	;# 
  1461  0217                     	;# 
  1462  0217                     	;# 
  1463  0219                     	;# 
  1464  021A                     	;# 
  1465  021B                     	;# 
  1466  021C                     	;# 
  1467  021D                     	;# 
  1468  021E                     	;# 
  1469  021F                     	;# 
  1470  0291                     	;# 
  1471  0291                     	;# 
  1472  0292                     	;# 
  1473  0293                     	;# 
  1474  0294                     	;# 
  1475  0295                     	;# 
  1476  0295                     	;# 
  1477  0296                     	;# 
  1478  0298                     	;# 
  1479  0298                     	;# 
  1480  0299                     	;# 
  1481  029A                     	;# 
  1482  029B                     	;# 
  1483  029C                     	;# 
  1484  029C                     	;# 
  1485  029D                     	;# 
  1486  029E                     	;# 
  1487  029E                     	;# 
  1488  0311                     	;# 
  1489  0311                     	;# 
  1490  0312                     	;# 
  1491  0313                     	;# 
  1492  0318                     	;# 
  1493  0318                     	;# 
  1494  0319                     	;# 
  1495  031A                     	;# 
  1496  0394                     	;# 
  1497  0395                     	;# 
  1498  0396                     	;# 
  1499  039A                     	;# 
  1500  039C                     	;# 
  1501  039D                     	;# 
  1502  039E                     	;# 
  1503  039F                     	;# 
  1504  0415                     	;# 
  1505  0416                     	;# 
  1506  0417                     	;# 
  1507  041C                     	;# 
  1508  041D                     	;# 
  1509  041E                     	;# 
  1510  0FE4                     	;# 
  1511  0FE5                     	;# 
  1512  0FE6                     	;# 
  1513  0FE7                     	;# 
  1514  0FE8                     	;# 
  1515  0FE9                     	;# 
  1516  0FEA                     	;# 
  1517  0FEB                     	;# 
  1518  0FED                     	;# 
  1519  0FEE                     	;# 
  1520  0FEF                     	;# 
  1521  0000                     	;# 
  1522  0001                     	;# 
  1523  0002                     	;# 
  1524  0003                     	;# 
  1525  0004                     	;# 
  1526  0005                     	;# 
  1527  0006                     	;# 
  1528  0007                     	;# 
  1529  0008                     	;# 
  1530  0009                     	;# 
  1531  000A                     	;# 
  1532  000B                     	;# 
  1533  000C                     	;# 
  1534  000D                     	;# 
  1535  0011                     	;# 
  1536  0012                     	;# 
  1537  0013                     	;# 
  1538  0014                     	;# 
  1539  0015                     	;# 
  1540  0016                     	;# 
  1541  0016                     	;# 
  1542  0017                     	;# 
  1543  0018                     	;# 
  1544  0019                     	;# 
  1545  001A                     	;# 
  1546  001B                     	;# 
  1547  001C                     	;# 
  1548  001E                     	;# 
  1549  001F                     	;# 
  1550  008C                     	;# 
  1551  008D                     	;# 
  1552  0091                     	;# 
  1553  0092                     	;# 
  1554  0093                     	;# 
  1555  0094                     	;# 
  1556  0095                     	;# 
  1557  0096                     	;# 
  1558  0097                     	;# 
  1559  0098                     	;# 
  1560  0099                     	;# 
  1561  009A                     	;# 
  1562  009B                     	;# 
  1563  009B                     	;# 
  1564  009C                     	;# 
  1565  009D                     	;# 
  1566  009E                     	;# 
  1567  010C                     	;# 
  1568  010D                     	;# 
  1569  0111                     	;# 
  1570  0112                     	;# 
  1571  0113                     	;# 
  1572  0114                     	;# 
  1573  0115                     	;# 
  1574  0116                     	;# 
  1575  0117                     	;# 
  1576  0118                     	;# 
  1577  0119                     	;# 
  1578  011A                     	;# 
  1579  011B                     	;# 
  1580  011D                     	;# 
  1581  011E                     	;# 
  1582  018C                     	;# 
  1583  018D                     	;# 
  1584  0191                     	;# 
  1585  0191                     	;# 
  1586  0192                     	;# 
  1587  0193                     	;# 
  1588  0193                     	;# 
  1589  0193                     	;# 
  1590  0194                     	;# 
  1591  0195                     	;# 
  1592  0196                     	;# 
  1593  0199                     	;# 
  1594  019A                     	;# 
  1595  019B                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019B                     	;# 
  1599  019C                     	;# 
  1600  019C                     	;# 
  1601  019D                     	;# 
  1602  019E                     	;# 
  1603  019F                     	;# 
  1604  020C                     	;# 
  1605  020D                     	;# 
  1606  0211                     	;# 
  1607  0211                     	;# 
  1608  0212                     	;# 
  1609  0212                     	;# 
  1610  0213                     	;# 
  1611  0213                     	;# 
  1612  0214                     	;# 
  1613  0214                     	;# 
  1614  0215                     	;# 
  1615  0215                     	;# 
  1616  0215                     	;# 
  1617  0216                     	;# 
  1618  0216                     	;# 
  1619  0217                     	;# 
  1620  0217                     	;# 
  1621  0219                     	;# 
  1622  021A                     	;# 
  1623  021B                     	;# 
  1624  021C                     	;# 
  1625  021D                     	;# 
  1626  021E                     	;# 
  1627  021F                     	;# 
  1628  0291                     	;# 
  1629  0291                     	;# 
  1630  0292                     	;# 
  1631  0293                     	;# 
  1632  0294                     	;# 
  1633  0295                     	;# 
  1634  0295                     	;# 
  1635  0296                     	;# 
  1636  0298                     	;# 
  1637  0298                     	;# 
  1638  0299                     	;# 
  1639  029A                     	;# 
  1640  029B                     	;# 
  1641  029C                     	;# 
  1642  029C                     	;# 
  1643  029D                     	;# 
  1644  029E                     	;# 
  1645  029E                     	;# 
  1646  0311                     	;# 
  1647  0311                     	;# 
  1648  0312                     	;# 
  1649  0313                     	;# 
  1650  0318                     	;# 
  1651  0318                     	;# 
  1652  0319                     	;# 
  1653  031A                     	;# 
  1654  0394                     	;# 
  1655  0395                     	;# 
  1656  0396                     	;# 
  1657  039A                     	;# 
  1658  039C                     	;# 
  1659  039D                     	;# 
  1660  039E                     	;# 
  1661  039F                     	;# 
  1662  0415                     	;# 
  1663  0416                     	;# 
  1664  0417                     	;# 
  1665  041C                     	;# 
  1666  041D                     	;# 
  1667  041E                     	;# 
  1668  0FE4                     	;# 
  1669  0FE5                     	;# 
  1670  0FE6                     	;# 
  1671  0FE7                     	;# 
  1672  0FE8                     	;# 
  1673  0FE9                     	;# 
  1674  0FEA                     	;# 
  1675  0FEB                     	;# 
  1676  0FED                     	;# 
  1677  0FEE                     	;# 
  1678  0FEF                     	;# 
  1679  0000                     	;# 
  1680  0001                     	;# 
  1681  0002                     	;# 
  1682  0003                     	;# 
  1683  0004                     	;# 
  1684  0005                     	;# 
  1685  0006                     	;# 
  1686  0007                     	;# 
  1687  0008                     	;# 
  1688  0009                     	;# 
  1689  000A                     	;# 
  1690  000B                     	;# 
  1691  000C                     	;# 
  1692  000D                     	;# 
  1693  0011                     	;# 
  1694  0012                     	;# 
  1695  0013                     	;# 
  1696  0014                     	;# 
  1697  0015                     	;# 
  1698  0016                     	;# 
  1699  0016                     	;# 
  1700  0017                     	;# 
  1701  0018                     	;# 
  1702  0019                     	;# 
  1703  001A                     	;# 
  1704  001B                     	;# 
  1705  001C                     	;# 
  1706  001E                     	;# 
  1707  001F                     	;# 
  1708  008C                     	;# 
  1709  008D                     	;# 
  1710  0091                     	;# 
  1711  0092                     	;# 
  1712  0093                     	;# 
  1713  0094                     	;# 
  1714  0095                     	;# 
  1715  0096                     	;# 
  1716  0097                     	;# 
  1717  0098                     	;# 
  1718  0099                     	;# 
  1719  009A                     	;# 
  1720  009B                     	;# 
  1721  009B                     	;# 
  1722  009C                     	;# 
  1723  009D                     	;# 
  1724  009E                     	;# 
  1725  010C                     	;# 
  1726  010D                     	;# 
  1727  0111                     	;# 
  1728  0112                     	;# 
  1729  0113                     	;# 
  1730  0114                     	;# 
  1731  0115                     	;# 
  1732  0116                     	;# 
  1733  0117                     	;# 
  1734  0118                     	;# 
  1735  0119                     	;# 
  1736  011A                     	;# 
  1737  011B                     	;# 
  1738  011D                     	;# 
  1739  011E                     	;# 
  1740  018C                     	;# 
  1741  018D                     	;# 
  1742  0191                     	;# 
  1743  0191                     	;# 
  1744  0192                     	;# 
  1745  0193                     	;# 
  1746  0193                     	;# 
  1747  0193                     	;# 
  1748  0194                     	;# 
  1749  0195                     	;# 
  1750  0196                     	;# 
  1751  0199                     	;# 
  1752  019A                     	;# 
  1753  019B                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019B                     	;# 
  1757  019C                     	;# 
  1758  019C                     	;# 
  1759  019D                     	;# 
  1760  019E                     	;# 
  1761  019F                     	;# 
  1762  020C                     	;# 
  1763  020D                     	;# 
  1764  0211                     	;# 
  1765  0211                     	;# 
  1766  0212                     	;# 
  1767  0212                     	;# 
  1768  0213                     	;# 
  1769  0213                     	;# 
  1770  0214                     	;# 
  1771  0214                     	;# 
  1772  0215                     	;# 
  1773  0215                     	;# 
  1774  0215                     	;# 
  1775  0216                     	;# 
  1776  0216                     	;# 
  1777  0217                     	;# 
  1778  0217                     	;# 
  1779  0219                     	;# 
  1780  021A                     	;# 
  1781  021B                     	;# 
  1782  021C                     	;# 
  1783  021D                     	;# 
  1784  021E                     	;# 
  1785  021F                     	;# 
  1786  0291                     	;# 
  1787  0291                     	;# 
  1788  0292                     	;# 
  1789  0293                     	;# 
  1790  0294                     	;# 
  1791  0295                     	;# 
  1792  0295                     	;# 
  1793  0296                     	;# 
  1794  0298                     	;# 
  1795  0298                     	;# 
  1796  0299                     	;# 
  1797  029A                     	;# 
  1798  029B                     	;# 
  1799  029C                     	;# 
  1800  029C                     	;# 
  1801  029D                     	;# 
  1802  029E                     	;# 
  1803  029E                     	;# 
  1804  0311                     	;# 
  1805  0311                     	;# 
  1806  0312                     	;# 
  1807  0313                     	;# 
  1808  0318                     	;# 
  1809  0318                     	;# 
  1810  0319                     	;# 
  1811  031A                     	;# 
  1812  0394                     	;# 
  1813  0395                     	;# 
  1814  0396                     	;# 
  1815  039A                     	;# 
  1816  039C                     	;# 
  1817  039D                     	;# 
  1818  039E                     	;# 
  1819  039F                     	;# 
  1820  0415                     	;# 
  1821  0416                     	;# 
  1822  0417                     	;# 
  1823  041C                     	;# 
  1824  041D                     	;# 
  1825  041E                     	;# 
  1826  0FE4                     	;# 
  1827  0FE5                     	;# 
  1828  0FE6                     	;# 
  1829  0FE7                     	;# 
  1830  0FE8                     	;# 
  1831  0FE9                     	;# 
  1832  0FEA                     	;# 
  1833  0FEB                     	;# 
  1834  0FED                     	;# 
  1835  0FEE                     	;# 
  1836  0FEF                     	;# 
  1837  0000                     	;# 
  1838  0001                     	;# 
  1839  0002                     	;# 
  1840  0003                     	;# 
  1841  0004                     	;# 
  1842  0005                     	;# 
  1843  0006                     	;# 
  1844  0007                     	;# 
  1845  0008                     	;# 
  1846  0009                     	;# 
  1847  000A                     	;# 
  1848  000B                     	;# 
  1849  000C                     	;# 
  1850  000D                     	;# 
  1851  0011                     	;# 
  1852  0012                     	;# 
  1853  0013                     	;# 
  1854  0014                     	;# 
  1855  0015                     	;# 
  1856  0016                     	;# 
  1857  0016                     	;# 
  1858  0017                     	;# 
  1859  0018                     	;# 
  1860  0019                     	;# 
  1861  001A                     	;# 
  1862  001B                     	;# 
  1863  001C                     	;# 
  1864  001E                     	;# 
  1865  001F                     	;# 
  1866  008C                     	;# 
  1867  008D                     	;# 
  1868  0091                     	;# 
  1869  0092                     	;# 
  1870  0093                     	;# 
  1871  0094                     	;# 
  1872  0095                     	;# 
  1873  0096                     	;# 
  1874  0097                     	;# 
  1875  0098                     	;# 
  1876  0099                     	;# 
  1877  009A                     	;# 
  1878  009B                     	;# 
  1879  009B                     	;# 
  1880  009C                     	;# 
  1881  009D                     	;# 
  1882  009E                     	;# 
  1883  010C                     	;# 
  1884  010D                     	;# 
  1885  0111                     	;# 
  1886  0112                     	;# 
  1887  0113                     	;# 
  1888  0114                     	;# 
  1889  0115                     	;# 
  1890  0116                     	;# 
  1891  0117                     	;# 
  1892  0118                     	;# 
  1893  0119                     	;# 
  1894  011A                     	;# 
  1895  011B                     	;# 
  1896  011D                     	;# 
  1897  011E                     	;# 
  1898  018C                     	;# 
  1899  018D                     	;# 
  1900  0191                     	;# 
  1901  0191                     	;# 
  1902  0192                     	;# 
  1903  0193                     	;# 
  1904  0193                     	;# 
  1905  0193                     	;# 
  1906  0194                     	;# 
  1907  0195                     	;# 
  1908  0196                     	;# 
  1909  0199                     	;# 
  1910  019A                     	;# 
  1911  019B                     	;# 
  1912  019B                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019C                     	;# 
  1916  019C                     	;# 
  1917  019D                     	;# 
  1918  019E                     	;# 
  1919  019F                     	;# 
  1920  020C                     	;# 
  1921  020D                     	;# 
  1922  0211                     	;# 
  1923  0211                     	;# 
  1924  0212                     	;# 
  1925  0212                     	;# 
  1926  0213                     	;# 
  1927  0213                     	;# 
  1928  0214                     	;# 
  1929  0214                     	;# 
  1930  0215                     	;# 
  1931  0215                     	;# 
  1932  0215                     	;# 
  1933  0216                     	;# 
  1934  0216                     	;# 
  1935  0217                     	;# 
  1936  0217                     	;# 
  1937  0219                     	;# 
  1938  021A                     	;# 
  1939  021B                     	;# 
  1940  021C                     	;# 
  1941  021D                     	;# 
  1942  021E                     	;# 
  1943  021F                     	;# 
  1944  0291                     	;# 
  1945  0291                     	;# 
  1946  0292                     	;# 
  1947  0293                     	;# 
  1948  0294                     	;# 
  1949  0295                     	;# 
  1950  0295                     	;# 
  1951  0296                     	;# 
  1952  0298                     	;# 
  1953  0298                     	;# 
  1954  0299                     	;# 
  1955  029A                     	;# 
  1956  029B                     	;# 
  1957  029C                     	;# 
  1958  029C                     	;# 
  1959  029D                     	;# 
  1960  029E                     	;# 
  1961  029E                     	;# 
  1962  0311                     	;# 
  1963  0311                     	;# 
  1964  0312                     	;# 
  1965  0313                     	;# 
  1966  0318                     	;# 
  1967  0318                     	;# 
  1968  0319                     	;# 
  1969  031A                     	;# 
  1970  0394                     	;# 
  1971  0395                     	;# 
  1972  0396                     	;# 
  1973  039A                     	;# 
  1974  039C                     	;# 
  1975  039D                     	;# 
  1976  039E                     	;# 
  1977  039F                     	;# 
  1978  0415                     	;# 
  1979  0416                     	;# 
  1980  0417                     	;# 
  1981  041C                     	;# 
  1982  041D                     	;# 
  1983  041E                     	;# 
  1984  0FE4                     	;# 
  1985  0FE5                     	;# 
  1986  0FE6                     	;# 
  1987  0FE7                     	;# 
  1988  0FE8                     	;# 
  1989  0FE9                     	;# 
  1990  0FEA                     	;# 
  1991  0FEB                     	;# 
  1992  0FED                     	;# 
  1993  0FEE                     	;# 
  1994  0FEF                     	;# 
  1995  0000                     	;# 
  1996  0001                     	;# 
  1997  0002                     	;# 
  1998  0003                     	;# 
  1999  0004                     	;# 
  2000  0005                     	;# 
  2001  0006                     	;# 
  2002  0007                     	;# 
  2003  0008                     	;# 
  2004  0009                     	;# 
  2005  000A                     	;# 
  2006  000B                     	;# 
  2007  000C                     	;# 
  2008  000D                     	;# 
  2009  0011                     	;# 
  2010  0012                     	;# 
  2011  0013                     	;# 
  2012  0014                     	;# 
  2013  0015                     	;# 
  2014  0016                     	;# 
  2015  0016                     	;# 
  2016  0017                     	;# 
  2017  0018                     	;# 
  2018  0019                     	;# 
  2019  001A                     	;# 
  2020  001B                     	;# 
  2021  001C                     	;# 
  2022  001E                     	;# 
  2023  001F                     	;# 
  2024  008C                     	;# 
  2025  008D                     	;# 
  2026  0091                     	;# 
  2027  0092                     	;# 
  2028  0093                     	;# 
  2029  0094                     	;# 
  2030  0095                     	;# 
  2031  0096                     	;# 
  2032  0097                     	;# 
  2033  0098                     	;# 
  2034  0099                     	;# 
  2035  009A                     	;# 
  2036  009B                     	;# 
  2037  009B                     	;# 
  2038  009C                     	;# 
  2039  009D                     	;# 
  2040  009E                     	;# 
  2041  010C                     	;# 
  2042  010D                     	;# 
  2043  0111                     	;# 
  2044  0112                     	;# 
  2045  0113                     	;# 
  2046  0114                     	;# 
  2047  0115                     	;# 
  2048  0116                     	;# 
  2049  0117                     	;# 
  2050  0118                     	;# 
  2051  0119                     	;# 
  2052  011A                     	;# 
  2053  011B                     	;# 
  2054  011D                     	;# 
  2055  011E                     	;# 
  2056  018C                     	;# 
  2057  018D                     	;# 
  2058  0191                     	;# 
  2059  0191                     	;# 
  2060  0192                     	;# 
  2061  0193                     	;# 
  2062  0193                     	;# 
  2063  0193                     	;# 
  2064  0194                     	;# 
  2065  0195                     	;# 
  2066  0196                     	;# 
  2067  0199                     	;# 
  2068  019A                     	;# 
  2069  019B                     	;# 
  2070  019B                     	;# 
  2071  019B                     	;# 
  2072  019B                     	;# 
  2073  019C                     	;# 
  2074  019C                     	;# 
  2075  019D                     	;# 
  2076  019E                     	;# 
  2077  019F                     	;# 
  2078  020C                     	;# 
  2079  020D                     	;# 
  2080  0211                     	;# 
  2081  0211                     	;# 
  2082  0212                     	;# 
  2083  0212                     	;# 
  2084  0213                     	;# 
  2085  0213                     	;# 
  2086  0214                     	;# 
  2087  0214                     	;# 
  2088  0215                     	;# 
  2089  0215                     	;# 
  2090  0215                     	;# 
  2091  0216                     	;# 
  2092  0216                     	;# 
  2093  0217                     	;# 
  2094  0217                     	;# 
  2095  0219                     	;# 
  2096  021A                     	;# 
  2097  021B                     	;# 
  2098  021C                     	;# 
  2099  021D                     	;# 
  2100  021E                     	;# 
  2101  021F                     	;# 
  2102  0291                     	;# 
  2103  0291                     	;# 
  2104  0292                     	;# 
  2105  0293                     	;# 
  2106  0294                     	;# 
  2107  0295                     	;# 
  2108  0295                     	;# 
  2109  0296                     	;# 
  2110  0298                     	;# 
  2111  0298                     	;# 
  2112  0299                     	;# 
  2113  029A                     	;# 
  2114  029B                     	;# 
  2115  029C                     	;# 
  2116  029C                     	;# 
  2117  029D                     	;# 
  2118  029E                     	;# 
  2119  029E                     	;# 
  2120  0311                     	;# 
  2121  0311                     	;# 
  2122  0312                     	;# 
  2123  0313                     	;# 
  2124  0318                     	;# 
  2125  0318                     	;# 
  2126  0319                     	;# 
  2127  031A                     	;# 
  2128  0394                     	;# 
  2129  0395                     	;# 
  2130  0396                     	;# 
  2131  039A                     	;# 
  2132  039C                     	;# 
  2133  039D                     	;# 
  2134  039E                     	;# 
  2135  039F                     	;# 
  2136  0415                     	;# 
  2137  0416                     	;# 
  2138  0417                     	;# 
  2139  041C                     	;# 
  2140  041D                     	;# 
  2141  041E                     	;# 
  2142  0FE4                     	;# 
  2143  0FE5                     	;# 
  2144  0FE6                     	;# 
  2145  0FE7                     	;# 
  2146  0FE8                     	;# 
  2147  0FE9                     	;# 
  2148  0FEA                     	;# 
  2149  0FEB                     	;# 
  2150  0FED                     	;# 
  2151  0FEE                     	;# 
  2152  0FEF                     	;# 
  2153                           
  2154                           	psect	idataBANK1
  2155  0E67                     __pidataBANK1:	
  2156                           
  2157                           ;initializer for _DAC_VoltageTable
  2158  0E67  34A5               	retlw	low (STR_5| (0+32768))
  2159  0E68  3481               	retlw	high (STR_5| (0+32768))
  2160  0E69  3455               	retlw	low (STR_6| (0+32768))
  2161  0E6A  3481               	retlw	high (STR_6| (0+32768))
  2162  0E6B  34AA               	retlw	low (STR_7| (0+32768))
  2163  0E6C  3481               	retlw	high (STR_7| (0+32768))
  2164  0E6D  345B               	retlw	low (STR_8| (0+32768))
  2165  0E6E  3481               	retlw	high (STR_8| (0+32768))
  2166  0E6F  34AF               	retlw	low (STR_9| (0+32768))
  2167  0E70  3481               	retlw	high (STR_9| (0+32768))
  2168  0E71  3461               	retlw	low (STR_10| (0+32768))
  2169  0E72  3481               	retlw	high (STR_10| (0+32768))
  2170  0E73  34B4               	retlw	low (STR_11| (0+32768))
  2171  0E74  3481               	retlw	high (STR_11| (0+32768))
  2172  0E75  3467               	retlw	low (STR_12| (0+32768))
  2173  0E76  3481               	retlw	high (STR_12| (0+32768))
  2174  0E77  34B9               	retlw	low (STR_13| (0+32768))
  2175  0E78  3481               	retlw	high (STR_13| (0+32768))
  2176  0E79  346D               	retlw	low (STR_14| (0+32768))
  2177  0E7A  3481               	retlw	high (STR_14| (0+32768))
  2178  0E7B  3496               	retlw	low (STR_15| (0+32768))
  2179  0E7C  3481               	retlw	high (STR_15| (0+32768))
  2180  0E7D  3449               	retlw	low (STR_16| (0+32768))
  2181  0E7E  3481               	retlw	high (STR_16| (0+32768))
  2182  0E7F  349B               	retlw	low (STR_17| (0+32768))
  2183  0E80  3481               	retlw	high (STR_17| (0+32768))
  2184  0E81  344F               	retlw	low (STR_18| (0+32768))
  2185  0E82  3481               	retlw	high (STR_18| (0+32768))
  2186  0E83  34A0               	retlw	low (STR_19| (0+32768))
  2187  0E84  3481               	retlw	high (STR_19| (0+32768))
  2188                           
  2189                           	psect	idataBANK2
  2190  07A0                     __pidataBANK2:	
  2191                           
  2192                           ;initializer for _H7826_01_Gain
  2193  07A0  3473               	retlw	low (STR_35| (0+32768))
  2194  07A1  3481               	retlw	high (STR_35| (0+32768))
  2195  07A2  3478               	retlw	low (STR_36| (0+32768))
  2196  07A3  3481               	retlw	high (STR_36| (0+32768))
  2197  07A4  348C               	retlw	low (STR_37| (0+32768))
  2198  07A5  3481               	retlw	high (STR_37| (0+32768))
  2199  07A6  347D               	retlw	low (STR_38| (0+32768))
  2200  07A7  3481               	retlw	high (STR_38| (0+32768))
  2201  07A8  342B               	retlw	low (STR_39| (0+32768))
  2202  07A9  3481               	retlw	high (STR_39| (0+32768))
  2203  07AA  3431               	retlw	low (STR_40| (0+32768))
  2204  07AB  3481               	retlw	high (STR_40| (0+32768))
  2205  07AC  3437               	retlw	low (STR_41| (0+32768))
  2206  07AD  3481               	retlw	high (STR_41| (0+32768))
  2207  07AE  341F               	retlw	low (STR_42| (0+32768))
  2208  07AF  3481               	retlw	high (STR_42| (0+32768))
  2209  07B0  34DA               	retlw	low (STR_43| (0+32768))
  2210  07B1  3480               	retlw	high (STR_43| (0+32768))
  2211  07B2  3404               	retlw	low (STR_44| (0+32768))
  2212  07B3  3481               	retlw	high (STR_44| (0+32768))
  2213  07B4  34E1               	retlw	low (STR_45| (0+32768))
  2214  07B5  3480               	retlw	high (STR_45| (0+32768))
  2215  07B6  34E8               	retlw	low (STR_46| (0+32768))
  2216  07B7  3480               	retlw	high (STR_46| (0+32768))
  2217  07B8  3412               	retlw	low (STR_47| (0+32768))
  2218  07B9  3481               	retlw	high (STR_47| (0+32768))
  2219  07BA  34CC               	retlw	low (STR_48| (0+32768))
  2220  07BB  3480               	retlw	high (STR_48| (0+32768))
  2221  07BC  34D3               	retlw	low (STR_49| (0+32768))
  2222  07BD  3480               	retlw	high (STR_49| (0+32768))
  2223                           
  2224                           ;initializer for _H7826_Gain
  2225  07BE  3487               	retlw	low (STR_20| (0+32768))
  2226  07BF  3481               	retlw	high (STR_20| (0+32768))
  2227  07C0  3482               	retlw	low (STR_21| (0+32768))
  2228  07C1  3481               	retlw	high (STR_21| (0+32768))
  2229  07C2  3491               	retlw	low (STR_22| (0+32768))
  2230  07C3  3481               	retlw	high (STR_22| (0+32768))
  2231  07C4  3443               	retlw	low (STR_23| (0+32768))
  2232  07C5  3481               	retlw	high (STR_23| (0+32768))
  2233  07C6  3419               	retlw	low (STR_24| (0+32768))
  2234  07C7  3481               	retlw	high (STR_24| (0+32768))
  2235  07C8  3425               	retlw	low (STR_25| (0+32768))
  2236  07C9  3481               	retlw	high (STR_25| (0+32768))
  2237  07CA  343D               	retlw	low (STR_26| (0+32768))
  2238  07CB  3481               	retlw	high (STR_26| (0+32768))
  2239  07CC  34F6               	retlw	low (STR_27| (0+32768))
  2240  07CD  3480               	retlw	high (STR_27| (0+32768))
  2241  07CE  34EF               	retlw	low (STR_28| (0+32768))
  2242  07CF  3480               	retlw	high (STR_28| (0+32768))
  2243  07D0  34FD               	retlw	low (STR_29| (0+32768))
  2244  07D1  3480               	retlw	high (STR_29| (0+32768))
  2245  07D2  34C5               	retlw	low (STR_30| (0+32768))
  2246  07D3  3480               	retlw	high (STR_30| (0+32768))
  2247  07D4  340B               	retlw	low (STR_31| (0+32768))
  2248  07D5  3481               	retlw	high (STR_31| (0+32768))
  2249  07D6  34B5               	retlw	low (STR_32| (0+32768))
  2250  07D7  3480               	retlw	high (STR_32| (0+32768))
  2251  07D8  34AD               	retlw	low (STR_33| (0+32768))
  2252  07D9  3480               	retlw	high (STR_33| (0+32768))
  2253  07DA  34A5               	retlw	low (STR_34| (0+32768))
  2254  07DB  3480               	retlw	high (STR_34| (0+32768))
  2255                           
  2256                           	psect	stringtext
  2257  005E                     __pstringtext:	
  2258  005E                     _DAC_DataTable:	
  2259  005E  3499               	retlw	153
  2260  005F  3401               	retlw	1
  2261  0060  34C2               	retlw	194
  2262  0061  3401               	retlw	1
  2263  0062  34EB               	retlw	235
  2264  0063  3401               	retlw	1
  2265  0064  3414               	retlw	20
  2266  0065  3402               	retlw	2
  2267  0066  343D               	retlw	61
  2268  0067  3402               	retlw	2
  2269  0068  3466               	retlw	102
  2270  0069  3402               	retlw	2
  2271  006A  348F               	retlw	143
  2272  006B  3402               	retlw	2
  2273  006C  34B8               	retlw	184
  2274  006D  3402               	retlw	2
  2275  006E  34E1               	retlw	225
  2276  006F  3402               	retlw	2
  2277  0070  340A               	retlw	10
  2278  0071  3403               	retlw	3
  2279  0072  3433               	retlw	51
  2280  0073  3403               	retlw	3
  2281  0074  345B               	retlw	91
  2282  0075  3403               	retlw	3
  2283  0076  3484               	retlw	132
  2284  0077  3403               	retlw	3
  2285  0078  34AD               	retlw	173
  2286  0079  3403               	retlw	3
  2287  007A  34D6               	retlw	214
  2288  007B  3403               	retlw	3
  2289  007C                     __end_of_DAC_DataTable:	
  2290  007C                     _dpowers:	
  2291  007C  3401               	retlw	1
  2292  007D  3400               	retlw	0
  2293  007E  340A               	retlw	10
  2294  007F  3400               	retlw	0
  2295  0080  3464               	retlw	100
  2296  0081  3400               	retlw	0
  2297  0082  34E8               	retlw	232
  2298  0083  3403               	retlw	3
  2299  0084  3410               	retlw	16
  2300  0085  3427               	retlw	39
  2301  0086                     __end_of_dpowers:	
  2302  0016                     _TMR1	set	22
  2303  000C                     _PORTA	set	12
  2304  001F                     _CPSCON1	set	31
  2305  001E                     _CPSCON0	set	30
  2306  0015                     _TMR0	set	21
  2307  0019                     _T1GCON	set	25
  2308  0018                     _T1CON	set	24
  2309  000D                     _PORTB	set	13
  2310  001B                     _PR2	set	27
  2311  001A                     _TMR2	set	26
  2312  001C                     _T2CON	set	28
  2313  009B                     _TMR6IF	set	155
  2314  0099                     _TMR4IF	set	153
  2315  0088                     _TMR1IF	set	136
  2316  00C0                     _TMR1ON	set	192
  2317  005F                     _GIE	set	95
  2318  005E                     _PEIE	set	94
  2319  00A1                     _BCL2IF	set	161
  2320  00A0                     _SSP2IF	set	160
  2321  0093                     _BCL1IF	set	147
  2322  008B                     _SSP1IF	set	139
  2323  0099                     _OSCCON	set	153
  2324  0095                     _OPTION_REG	set	149
  2325  008D                     _TRISB	set	141
  2326  008C                     _TRISA	set	140
  2327  049B                     _TMR6IE	set	1179
  2328  0499                     _TMR4IE	set	1177
  2329  0488                     _TMR1IE	set	1160
  2330  04A1                     _BCL2IE	set	1185
  2331  04A0                     _SSP2IE	set	1184
  2332  0493                     _BCL1IE	set	1171
  2333  048B                     _SSP1IE	set	1163
  2334  011E                     _APFCON1	set	286
  2335  011D                     _APFCON0	set	285
  2336  0866                     _LATA6	set	2150
  2337  0863                     _LATA3	set	2147
  2338  0864                     _LATA4	set	2148
  2339  018D                     _ANSELB	set	397
  2340  018C                     _ANSELA	set	396
  2341  020D                     _WPUB	set	525
  2342  021C                     _SSP2STATbits	set	540
  2343  0219                     _SSP2BUF	set	537
  2344  021E                     _SSP2CON2	set	542
  2345  021B                     _SSP2MSK	set	539
  2346  021E                     _SSP2CON2bits	set	542
  2347  021D                     _SSP2CON1bits	set	541
  2348  021A                     _SSP2ADD	set	538
  2349  021C                     _SSP2STAT	set	540
  2350  021D                     _SSP2CON1	set	541
  2351  0214                     _SSP1STATbits	set	532
  2352  0211                     _SSP1BUF	set	529
  2353  0216                     _SSP1CON2	set	534
  2354  0213                     _SSP1MSK	set	531
  2355  0216                     _SSP1CON2bits	set	534
  2356  0215                     _SSP1CON1bits	set	533
  2357  0212                     _SSP1ADD	set	530
  2358  0214                     _SSP1STAT	set	532
  2359  0215                     _SSP1CON1	set	533
  2360  0298                     _CCPR2L	set	664
  2361  029E                     _CCPTMRS	set	670
  2362  029A                     _CCP2CON	set	666
  2363  041E                     _T6CON	set	1054
  2364  041C                     _TMR6	set	1052
  2365  041D                     _PR6	set	1053
  2366  0417                     _T4CON	set	1047
  2367  0415                     _TMR4	set	1045
  2368  0416                     _PR4	set	1046
  2369  0086                     STR_2:	
  2370  0086  3453               	retlw	83	;'S'
  2371  0087  3445               	retlw	69	;'E'
  2372  0088  344C               	retlw	76	;'L'
  2373  0089  3445               	retlw	69	;'E'
  2374  008A  3443               	retlw	67	;'C'
  2375  008B  3454               	retlw	84	;'T'
  2376  008C  3446               	retlw	70	;'F'
  2377  008D  3455               	retlw	85	;'U'
  2378  008E  344E               	retlw	78	;'N'
  2379  008F  3443               	retlw	67	;'C'
  2380  0090  3400               	retlw	0
  2381  0091                     STR_4:	
  2382  0091  3450               	retlw	80	;'P'
  2383  0092  344D               	retlw	77	;'M'
  2384  0093  3454               	retlw	84	;'T'
  2385  0094  3444               	retlw	68	;'D'
  2386  0095  3445               	retlw	69	;'E'
  2387  0096  3456               	retlw	86	;'V'
  2388  0097  3449               	retlw	73	;'I'
  2389  0098  3443               	retlw	67	;'C'
  2390  0099  3445               	retlw	69	;'E'
  2391  009A  3400               	retlw	0
  2392  009B                     STR_1:	
  2393  009B  3425               	retlw	37	;'%'
  2394  009C  3435               	retlw	53	;'5'
  2395  009D  3475               	retlw	117	;'u'
  2396  009E  346C               	retlw	108	;'l'
  2397  009F  3420               	retlw	32	;' '
  2398  00A0  3425               	retlw	37	;'%'
  2399  00A1  3437               	retlw	55	;'7'
  2400  00A2  3475               	retlw	117	;'u'
  2401  00A3  346C               	retlw	108	;'l'
  2402  00A4  3400               	retlw	0
  2403  00A5                     STR_34:	
  2404  00A5  3432               	retlw	50	;'2'
  2405  00A6  3437               	retlw	55	;'7'
  2406  00A7  3437               	retlw	55	;'7'
  2407  00A8  3434               	retlw	52	;'4'
  2408  00A9  3435               	retlw	53	;'5'
  2409  00AA  3436               	retlw	54	;'6'
  2410  00AB  3432               	retlw	50	;'2'
  2411  00AC  3400               	retlw	0
  2412  00AD                     STR_33:	
  2413  00AD  3431               	retlw	49	;'1'
  2414  00AE  3439               	retlw	57	;'9'
  2415  00AF  3434               	retlw	52	;'4'
  2416  00B0  3430               	retlw	48	;'0'
  2417  00B1  3436               	retlw	54	;'6'
  2418  00B2  3437               	retlw	55	;'7'
  2419  00B3  3433               	retlw	51	;'3'
  2420  00B4  3400               	retlw	0
  2421  00B5                     STR_32:	
  2422  00B5  3431               	retlw	49	;'1'
  2423  00B6  3433               	retlw	51	;'3'
  2424  00B7  3433               	retlw	51	;'3'
  2425  00B8  3436               	retlw	54	;'6'
  2426  00B9  3430               	retlw	48	;'0'
  2427  00BA  3430               	retlw	48	;'0'
  2428  00BB  3436               	retlw	54	;'6'
  2429  00BC  3400               	retlw	0
  2430  00BD                     STR_3:	
  2431  00BD  3441               	retlw	65	;'A'
  2432  00BE  3444               	retlw	68	;'D'
  2433  00BF  344A               	retlw	74	;'J'
  2434  00C0  3447               	retlw	71	;'G'
  2435  00C1  3441               	retlw	65	;'A'
  2436  00C2  3449               	retlw	73	;'I'
  2437  00C3  344E               	retlw	78	;'N'
  2438  00C4  3400               	retlw	0
  2439  00C5                     STR_30:	
  2440  00C5  3436               	retlw	54	;'6'
  2441  00C6  3430               	retlw	48	;'0'
  2442  00C7  3430               	retlw	48	;'0'
  2443  00C8  3430               	retlw	48	;'0'
  2444  00C9  3430               	retlw	48	;'0'
  2445  00CA  3430               	retlw	48	;'0'
  2446  00CB  3400               	retlw	0
  2447  00CC                     STR_48:	
  2448  00CC  3437               	retlw	55	;'7'
  2449  00CD  3430               	retlw	48	;'0'
  2450  00CE  3430               	retlw	48	;'0'
  2451  00CF  3438               	retlw	56	;'8'
  2452  00D0  3439               	retlw	57	;'9'
  2453  00D1  3430               	retlw	48	;'0'
  2454  00D2  3400               	retlw	0
  2455  00D3                     STR_49:	
  2456  00D3  3439               	retlw	57	;'9'
  2457  00D4  3436               	retlw	54	;'6'
  2458  00D5  3438               	retlw	56	;'8'
  2459  00D6  3434               	retlw	52	;'4'
  2460  00D7  3437               	retlw	55	;'7'
  2461  00D8  3432               	retlw	50	;'2'
  2462  00D9  3400               	retlw	0
  2463  00DA                     STR_43:	
  2464  00DA  3431               	retlw	49	;'1'
  2465  00DB  3430               	retlw	48	;'0'
  2466  00DC  3438               	retlw	56	;'8'
  2467  00DD  3438               	retlw	56	;'8'
  2468  00DE  3434               	retlw	52	;'4'
  2469  00DF  3433               	retlw	51	;'3'
  2470  00E0  3400               	retlw	0
  2471  00E1                     STR_45:	
  2472  00E1  3432               	retlw	50	;'2'
  2473  00E2  3434               	retlw	52	;'4'
  2474  00E3  3432               	retlw	50	;'2'
  2475  00E4  3433               	retlw	51	;'3'
  2476  00E5  3436               	retlw	54	;'6'
  2477  00E6  3434               	retlw	52	;'4'
  2478  00E7  3400               	retlw	0
  2479  00E8                     STR_46:	
  2480  00E8  3433               	retlw	51	;'3'
  2481  00E9  3435               	retlw	53	;'5'
  2482  00EA  3431               	retlw	49	;'1'
  2483  00EB  3431               	retlw	49	;'1'
  2484  00EC  3432               	retlw	50	;'2'
  2485  00ED  3437               	retlw	55	;'7'
  2486  00EE  3400               	retlw	0
  2487  00EF                     STR_28:	
  2488  00EF  3432               	retlw	50	;'2'
  2489  00F0  3434               	retlw	52	;'4'
  2490  00F1  3437               	retlw	55	;'7'
  2491  00F2  3436               	retlw	54	;'6'
  2492  00F3  3434               	retlw	52	;'4'
  2493  00F4  3437               	retlw	55	;'7'
  2494  00F5  3400               	retlw	0
  2495  00F6                     STR_27:	
  2496  00F6  3431               	retlw	49	;'1'
  2497  00F7  3435               	retlw	53	;'5'
  2498  00F8  3433               	retlw	51	;'3'
  2499  00F9  3432               	retlw	50	;'2'
  2500  00FA  3432               	retlw	50	;'2'
  2501  00FB  3438               	retlw	56	;'8'
  2502  00FC  3400               	retlw	0
  2503  00FD                     STR_29:	
  2504  00FD  3433               	retlw	51	;'3'
  2505  00FE  3438               	retlw	56	;'8'
  2506  00FF  3439               	retlw	57	;'9'
  2507  0100  3439               	retlw	57	;'9'
  2508  0101  3438               	retlw	56	;'8'
  2509  0102  3438               	retlw	56	;'8'
  2510  0103  3400               	retlw	0
  2511  0104                     STR_44:	
  2512  0104  3431               	retlw	49	;'1'
  2513  0105  3436               	retlw	54	;'6'
  2514  0106  3434               	retlw	52	;'4'
  2515  0107  3431               	retlw	49	;'1'
  2516  0108  3433               	retlw	51	;'3'
  2517  0109  3439               	retlw	57	;'9'
  2518  010A  3400               	retlw	0
  2519  010B                     STR_31:	
  2520  010B  3439               	retlw	57	;'9'
  2521  010C  3430               	retlw	48	;'0'
  2522  010D  3433               	retlw	51	;'3'
  2523  010E  3438               	retlw	56	;'8'
  2524  010F  3439               	retlw	57	;'9'
  2525  0110  3439               	retlw	57	;'9'
  2526  0111  3400               	retlw	0
  2527  0112                     STR_47:	
  2528  0112  3434               	retlw	52	;'4'
  2529  0113  3439               	retlw	57	;'9'
  2530  0114  3439               	retlw	57	;'9'
  2531  0115  3439               	retlw	57	;'9'
  2532  0116  3439               	retlw	57	;'9'
  2533  0117  3439               	retlw	57	;'9'
  2534  0118  3400               	retlw	0
  2535  0119                     STR_24:	
  2536  0119  3433               	retlw	51	;'3'
  2537  011A  3430               	retlw	48	;'0'
  2538  011B  3430               	retlw	48	;'0'
  2539  011C  3430               	retlw	48	;'0'
  2540  011D  3430               	retlw	48	;'0'
  2541  011E  3400               	retlw	0
  2542  011F                     STR_42:	
  2543  011F  3437               	retlw	55	;'7'
  2544  0120  3430               	retlw	48	;'0'
  2545  0121  3435               	retlw	53	;'5'
  2546  0122  3430               	retlw	48	;'0'
  2547  0123  3430               	retlw	48	;'0'
  2548  0124  3400               	retlw	0
  2549  0125                     STR_25:	
  2550  0125  3435               	retlw	53	;'5'
  2551  0126  3433               	retlw	51	;'3'
  2552  0127  3435               	retlw	53	;'5'
  2553  0128  3435               	retlw	53	;'5'
  2554  0129  3433               	retlw	51	;'3'
  2555  012A  3400               	retlw	0
  2556  012B                     STR_39:	
  2557  012B  3431               	retlw	49	;'1'
  2558  012C  3436               	retlw	54	;'6'
  2559  012D  3431               	retlw	49	;'1'
  2560  012E  3432               	retlw	50	;'2'
  2561  012F  3435               	retlw	53	;'5'
  2562  0130  3400               	retlw	0
  2563  0131                     STR_40:	
  2564  0131  3432               	retlw	50	;'2'
  2565  0132  3437               	retlw	55	;'7'
  2566  0133  3432               	retlw	50	;'2'
  2567  0134  3433               	retlw	51	;'3'
  2568  0135  3438               	retlw	56	;'8'
  2569  0136  3400               	retlw	0
  2570  0137                     STR_41:	
  2571  0137  3434               	retlw	52	;'4'
  2572  0138  3434               	retlw	52	;'4'
  2573  0139  3434               	retlw	52	;'4'
  2574  013A  3437               	retlw	55	;'7'
  2575  013B  3438               	retlw	56	;'8'
  2576  013C  3400               	retlw	0
  2577  013D                     STR_26:	
  2578  013D  3439               	retlw	57	;'9'
  2579  013E  3432               	retlw	50	;'2'
  2580  013F  3430               	retlw	48	;'0'
  2581  0140  3438               	retlw	56	;'8'
  2582  0141  3438               	retlw	56	;'8'
  2583  0142  3400               	retlw	0
  2584  0143                     STR_23:	
  2585  0143  3431               	retlw	49	;'1'
  2586  0144  3436               	retlw	54	;'6'
  2587  0145  3430               	retlw	48	;'0'
  2588  0146  3439               	retlw	57	;'9'
  2589  0147  3439               	retlw	57	;'9'
  2590  0148  3400               	retlw	0
  2591  0149                     STR_16:	
  2592  0149  3431               	retlw	49	;'1'
  2593  014A  342E               	retlw	46	;'.'
  2594  014B  3430               	retlw	48	;'0'
  2595  014C  3435               	retlw	53	;'5'
  2596  014D  3456               	retlw	86	;'V'
  2597  014E  3400               	retlw	0
  2598  014F                     STR_18:	
  2599  014F  3431               	retlw	49	;'1'
  2600  0150  342E               	retlw	46	;'.'
  2601  0151  3431               	retlw	49	;'1'
  2602  0152  3435               	retlw	53	;'5'
  2603  0153  3456               	retlw	86	;'V'
  2604  0154  3400               	retlw	0
  2605  0155                     STR_6:	
  2606  0155  3430               	retlw	48	;'0'
  2607  0156  342E               	retlw	46	;'.'
  2608  0157  3435               	retlw	53	;'5'
  2609  0158  3435               	retlw	53	;'5'
  2610  0159  3456               	retlw	86	;'V'
  2611  015A  3400               	retlw	0
  2612  015B                     STR_8:	
  2613  015B  3430               	retlw	48	;'0'
  2614  015C  342E               	retlw	46	;'.'
  2615  015D  3436               	retlw	54	;'6'
  2616  015E  3435               	retlw	53	;'5'
  2617  015F  3456               	retlw	86	;'V'
  2618  0160  3400               	retlw	0
  2619  0161                     STR_10:	
  2620  0161  3430               	retlw	48	;'0'
  2621  0162  342E               	retlw	46	;'.'
  2622  0163  3437               	retlw	55	;'7'
  2623  0164  3435               	retlw	53	;'5'
  2624  0165  3456               	retlw	86	;'V'
  2625  0166  3400               	retlw	0
  2626  0167                     STR_12:	
  2627  0167  3430               	retlw	48	;'0'
  2628  0168  342E               	retlw	46	;'.'
  2629  0169  3438               	retlw	56	;'8'
  2630  016A  3435               	retlw	53	;'5'
  2631  016B  3456               	retlw	86	;'V'
  2632  016C  3400               	retlw	0
  2633  016D                     STR_14:	
  2634  016D  3430               	retlw	48	;'0'
  2635  016E  342E               	retlw	46	;'.'
  2636  016F  3439               	retlw	57	;'9'
  2637  0170  3435               	retlw	53	;'5'
  2638  0171  3456               	retlw	86	;'V'
  2639  0172  3400               	retlw	0
  2640  0173                     STR_35:	
  2641  0173  3431               	retlw	49	;'1'
  2642  0174  3432               	retlw	50	;'2'
  2643  0175  3435               	retlw	53	;'5'
  2644  0176  3430               	retlw	48	;'0'
  2645  0177  3400               	retlw	0
  2646  0178                     STR_36:	
  2647  0178  3432               	retlw	50	;'2'
  2648  0179  3435               	retlw	53	;'5'
  2649  017A  3438               	retlw	56	;'8'
  2650  017B  3430               	retlw	48	;'0'
  2651  017C  3400               	retlw	0
  2652  017D                     STR_38:	
  2653  017D  3439               	retlw	57	;'9'
  2654  017E  3431               	retlw	49	;'1'
  2655  017F  3438               	retlw	56	;'8'
  2656  0180  3432               	retlw	50	;'2'
  2657  0181  3400               	retlw	0
  2658  0182                     STR_21:	
  2659  0182  3433               	retlw	51	;'3'
  2660  0183  3439               	retlw	57	;'9'
  2661  0184  3435               	retlw	53	;'5'
  2662  0185  3437               	retlw	55	;'7'
  2663  0186  3400               	retlw	0
  2664  0187                     STR_20:	
  2665  0187  3431               	retlw	49	;'1'
  2666  0188  3437               	retlw	55	;'7'
  2667  0189  3437               	retlw	55	;'7'
  2668  018A  3437               	retlw	55	;'7'
  2669  018B  3400               	retlw	0
  2670  018C                     STR_37:	
  2671  018C  3434               	retlw	52	;'4'
  2672  018D  3439               	retlw	57	;'9'
  2673  018E  3439               	retlw	57	;'9'
  2674  018F  3438               	retlw	56	;'8'
  2675  0190  3400               	retlw	0
  2676  0191                     STR_22:	
  2677  0191  3438               	retlw	56	;'8'
  2678  0192  3432               	retlw	50	;'2'
  2679  0193  3431               	retlw	49	;'1'
  2680  0194  3439               	retlw	57	;'9'
  2681  0195  3400               	retlw	0
  2682  0196                     STR_15:	
  2683  0196  3431               	retlw	49	;'1'
  2684  0197  342E               	retlw	46	;'.'
  2685  0198  3430               	retlw	48	;'0'
  2686  0199  3456               	retlw	86	;'V'
  2687  019A  3400               	retlw	0
  2688  019B                     STR_17:	
  2689  019B  3431               	retlw	49	;'1'
  2690  019C  342E               	retlw	46	;'.'
  2691  019D  3431               	retlw	49	;'1'
  2692  019E  3456               	retlw	86	;'V'
  2693  019F  3400               	retlw	0
  2694  01A0                     STR_19:	
  2695  01A0  3431               	retlw	49	;'1'
  2696  01A1  342E               	retlw	46	;'.'
  2697  01A2  3432               	retlw	50	;'2'
  2698  01A3  3456               	retlw	86	;'V'
  2699  01A4  3400               	retlw	0
  2700  01A5                     STR_5:	
  2701  01A5  3430               	retlw	48	;'0'
  2702  01A6  342E               	retlw	46	;'.'
  2703  01A7  3435               	retlw	53	;'5'
  2704  01A8  3456               	retlw	86	;'V'
  2705  01A9  3400               	retlw	0
  2706  01AA                     STR_7:	
  2707  01AA  3430               	retlw	48	;'0'
  2708  01AB  342E               	retlw	46	;'.'
  2709  01AC  3436               	retlw	54	;'6'
  2710  01AD  3456               	retlw	86	;'V'
  2711  01AE  3400               	retlw	0
  2712  01AF                     STR_9:	
  2713  01AF  3430               	retlw	48	;'0'
  2714  01B0  342E               	retlw	46	;'.'
  2715  01B1  3437               	retlw	55	;'7'
  2716  01B2  3456               	retlw	86	;'V'
  2717  01B3  3400               	retlw	0
  2718  01B4                     STR_11:	
  2719  01B4  3430               	retlw	48	;'0'
  2720  01B5  342E               	retlw	46	;'.'
  2721  01B6  3438               	retlw	56	;'8'
  2722  01B7  3456               	retlw	86	;'V'
  2723  01B8  3400               	retlw	0
  2724  01B9                     STR_13:	
  2725  01B9  3430               	retlw	48	;'0'
  2726  01BA  342E               	retlw	46	;'.'
  2727  01BB  3439               	retlw	57	;'9'
  2728  01BC  3456               	retlw	86	;'V'
  2729  01BD  3400               	retlw	0
  2730                           
  2731                           ; #config settings
  2732  0000                     
  2733                           	psect	cinit
  2734  0033                     start_initialization:	
  2735  0033                     __initialization:	
  2736                           
  2737                           ; Initialize objects allocated to BANK1
  2738  0033  3067               	movlw	low __pidataBANK1
  2739  0034  0084               	movwf	4
  2740  0035  308E               	movlw	(high __pidataBANK1)| (0+128)
  2741  0036  0085               	movwf	5
  2742  0037  30C6               	movlw	low __pdataBANK1
  2743  0038  0086               	movwf	6
  2744  0039  3000               	movlw	high __pdataBANK1
  2745  003A  0087               	movwf	7
  2746  003B  301E               	movlw	30
  2747  003C  318D  252A  3180   	fcall	init_ram
  2748                           
  2749                           ; Initialize objects allocated to BANK2
  2750  003F  30A0               	movlw	low __pidataBANK2
  2751  0040  0084               	movwf	4
  2752  0041  3087               	movlw	(high __pidataBANK2)| (0+128)
  2753  0042  0085               	movwf	5
  2754  0043  3020               	movlw	low __pdataBANK2
  2755  0044  0086               	movwf	6
  2756  0045  3001               	movlw	high __pdataBANK2
  2757  0046  0087               	movwf	7
  2758  0047  303C               	movlw	60
  2759  0048  318D  252A  3180   	fcall	init_ram
  2760                           
  2761                           ; Clear objects allocated to BANK0
  2762  004B  3020               	movlw	low __pbssBANK0
  2763  004C  0084               	movwf	4
  2764  004D  3000               	movlw	high __pbssBANK0
  2765  004E  0085               	movwf	5
  2766  004F  3027               	movlw	39
  2767  0050  318D  2524  3180   	fcall	clear_ram0
  2768                           
  2769                           ; Clear objects allocated to BANK1
  2770  0053  30A0               	movlw	low __pbssBANK1
  2771  0054  0084               	movwf	4
  2772  0055  3000               	movlw	high __pbssBANK1
  2773  0056  0085               	movwf	5
  2774  0057  3026               	movlw	38
  2775  0058  318D  2524         	fcall	clear_ram0
  2776  005A                     end_of_initialization:	
  2777                           ;End of C runtime variable initialization code
  2778                           
  2779  005A                     __end_of__initialization:	
  2780  005A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2781  005B  0020               	movlb	0
  2782  005C  3184  2C9A         	ljmp	_main	;jump to C main() function
  2783                           
  2784                           	psect	bssBANK0
  2785  0020                     __pbssBANK0:	
  2786  0020                     _cnts:	
  2787  0020                     	ds	14
  2788  002E                     _tcnt:	
  2789  002E                     	ds	6
  2790  0034                     _mTouch_Interval:	
  2791  0034                     	ds	3
  2792  0037                     _CPS_Data:	
  2793  0037                     	ds	3
  2794  003A                     _CPS_PreData:	
  2795  003A                     	ds	3
  2796  003D                     _mode:	
  2797  003D                     	ds	2
  2798  003F                     Timer1_DetectAssignCount@PreviousTimer1:	
  2799  003F                     	ds	2
  2800  0041                     _count:	
  2801  0041                     	ds	2
  2802  0043                     mTouch_Read@channel:	
  2803  0043                     	ds	1
  2804  0044                     _VoltageReg:	
  2805  0044                     	ds	2
  2806  0046                     _ConfigReg:	
  2807  0046                     	ds	1
  2808                           
  2809                           	psect	bssBANK1
  2810  00A0                     __pbssBANK1:	
  2811  00A0                     _I2C2_Config:	
  2812  00A0                     	ds	19
  2813  00B3                     _I2C1_Config:	
  2814  00B3                     	ds	19
  2815                           
  2816                           	psect	dataBANK1
  2817  00C6                     __pdataBANK1:	
  2818  00C6                     _DAC_VoltageTable:	
  2819  00C6                     	ds	30
  2820                           
  2821                           	psect	dataBANK2
  2822  0120                     __pdataBANK2:	
  2823  0120                     _H7826_01_Gain:	
  2824  0120                     	ds	30
  2825  013E                     _H7826_Gain:	
  2826  013E                     	ds	30
  2827                           
  2828                           	psect	inittext
  2829  0D2A                     init_ram:	
  2830  0D2A  00FE               	movwf	126
  2831  0D2B                     initloop:	
  2832  0D2B  0012               	moviw fsr0++
  2833  0D2C  001E               	movwi fsr1++
  2834  0D2D  0BFE               	decfsz	126,f
  2835  0D2E  2D2B               	goto	initloop
  2836  0D2F  3400               	retlw	0
  2837                           
  2838                           	psect	clrtext
  2839  0D24                     clear_ram0:	
  2840                           ;	Called with FSR0 containing the base address, and
  2841                           ;	WREG with the size to clear
  2842                           
  2843  0D24  0064               	clrwdt	;clear the watchdog before getting into this loop
  2844  0D25                     clrloop0:	
  2845  0D25  0180               	clrf	0	;clear RAM location pointed to by FSR
  2846  0D26  3101               	addfsr 0,1
  2847  0D27  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2848  0D28  2D25               	goto	clrloop0	;have we reached the end yet?
  2849  0D29  3400               	retlw	0	;all done for this memory range, return
  2850                           
  2851                           	psect	cstackCOMMON
  2852  0070                     __pcstackCOMMON:	
  2853  0070                     ?_isdigit:	
  2854  0070                     ?_LCD_DisplayClear:	
  2855                           ; 1 bit 
  2856                           
  2857  0070                     ?_Timer1_ClearRecord:	
  2858                           ; 1 bytes @ 0x0
  2859                           
  2860  0070                     ?_Basic_Init:	
  2861                           ; 1 bytes @ 0x0
  2862                           
  2863  0070                     ?_mTouch_Check:	
  2864                           ; 1 bytes @ 0x0
  2865                           
  2866  0070                     ?_mTouch_IntervalDecrement:	
  2867                           ; 1 bytes @ 0x0
  2868                           
  2869  0070                     ??_mTouch_IntervalDecrement:	
  2870                           ; 1 bytes @ 0x0
  2871                           
  2872  0070                     ?_Buzzer_Init:	
  2873                           ; 1 bytes @ 0x0
  2874                           
  2875  0070                     ?_Buzzer_SetDuty:	
  2876                           ; 1 bytes @ 0x0
  2877                           
  2878  0070                     ?_Buzzer_Count1ms:	
  2879                           ; 1 bytes @ 0x0
  2880                           
  2881  0070                     ?_I2C1_PinInit:	
  2882                           ; 1 bytes @ 0x0
  2883                           
  2884  0070                     ?_I2C1_Interrupt:	
  2885                           ; 1 bytes @ 0x0
  2886                           
  2887  0070                     ??_I2C1_Interrupt:	
  2888                           ; 1 bytes @ 0x0
  2889                           
  2890  0070                     ?_I2C2_PinInit:	
  2891                           ; 1 bytes @ 0x0
  2892                           
  2893  0070                     ?_I2C2_Interrupt:	
  2894                           ; 1 bytes @ 0x0
  2895                           
  2896  0070                     ??_I2C2_Interrupt:	
  2897                           ; 1 bytes @ 0x0
  2898                           
  2899  0070                     ?_I2C_CommonInterrupt:	
  2900                           ; 1 bytes @ 0x0
  2901                           
  2902  0070                     ?_LCD_WriteData:	
  2903                           ; 1 bytes @ 0x0
  2904                           
  2905  0070                     ?_LCD_Init:	
  2906                           ; 1 bytes @ 0x0
  2907                           
  2908  0070                     ?_putch:	
  2909                           ; 1 bytes @ 0x0
  2910                           
  2911  0070                     ?_LCD_CursorHome:	
  2912                           ; 1 bytes @ 0x0
  2913                           
  2914  0070                     ?_DAC_Initialize:	
  2915                           ; 1 bytes @ 0x0
  2916                           
  2917  0070                     ?_Timer1_Init:	
  2918                           ; 1 bytes @ 0x0
  2919                           
  2920  0070                     ?_Timer1_StartCount:	
  2921                           ; 1 bytes @ 0x0
  2922                           
  2923  0070                     ?_Timer1_Count200us:	
  2924                           ; 1 bytes @ 0x0
  2925                           
  2926  0070                     ??_Timer1_Count200us:	
  2927                           ; 1 bytes @ 0x0
  2928                           
  2929  0070                     ?_Timer1_DetectAssignCount:	
  2930                           ; 1 bytes @ 0x0
  2931                           
  2932  0070                     ?_Timer4_Init:	
  2933                           ; 1 bytes @ 0x0
  2934                           
  2935  0070                     ?_Timer4_CheckFlag:	
  2936                           ; 1 bytes @ 0x0
  2937                           
  2938  0070                     ??_Timer4_CheckFlag:	
  2939                           ; 1 bytes @ 0x0
  2940                           
  2941  0070                     ?_Timer6_Init:	
  2942                           ; 1 bytes @ 0x0
  2943                           
  2944  0070                     ?_Timer6_CheckFlag:	
  2945                           ; 1 bytes @ 0x0
  2946                           
  2947  0070                     ??_Timer6_CheckFlag:	
  2948                           ; 1 bytes @ 0x0
  2949                           
  2950  0070                     ?_mTouch_PortInit:	
  2951                           ; 1 bytes @ 0x0
  2952                           
  2953  0070                     ?_mTouch_Init:	
  2954                           ; 1 bytes @ 0x0
  2955                           
  2956  0070                     ?_mTouch_Read:	
  2957                           ; 1 bytes @ 0x0
  2958                           
  2959  0070                     ??_mTouch_Read:	
  2960                           ; 1 bytes @ 0x0
  2961                           
  2962  0070                     ?_main:	
  2963                           ; 1 bytes @ 0x0
  2964                           
  2965  0070                     ?_Handler:	
  2966                           ; 1 bytes @ 0x0
  2967                           
  2968  0070                     ?___lldiv:	
  2969                           ; 1 bytes @ 0x0
  2970                           
  2971  0070                     Buzzer_SetDuty@duty:	
  2972                           ; 4 bytes @ 0x0
  2973                           
  2974  0070                     ___lldiv@divisor:	
  2975                           ; 2 bytes @ 0x0
  2976                           
  2977                           
  2978                           ; 4 bytes @ 0x0
  2979  0070                     	ds	1
  2980  0071                     ??_I2C_CommonInterrupt:	
  2981                           
  2982                           ; 1 bytes @ 0x1
  2983  0071                     	ds	1
  2984  0072                     ??_Buzzer_SetDuty:	
  2985                           
  2986                           ; 1 bytes @ 0x2
  2987  0072                     	ds	2
  2988  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
  2989  0074                     ___lldiv@dividend:	
  2990                           ; 1 bytes @ 0x4
  2991                           
  2992                           
  2993                           ; 4 bytes @ 0x4
  2994  0074                     	ds	1
  2995  0075                     ??_Buzzer_Count1ms:	
  2996                           
  2997                           ; 1 bytes @ 0x5
  2998  0075                     	ds	3
  2999  0078                     ??___lldiv:	
  3000                           
  3001                           ; 1 bytes @ 0x8
  3002  0078                     	ds	1
  3003  0079                     ___lldiv@quotient:	
  3004                           
  3005                           ; 4 bytes @ 0x9
  3006  0079                     	ds	4
  3007  007D                     ___lldiv@counter:	
  3008                           
  3009                           ; 1 bytes @ 0xD
  3010  007D                     	ds	1
  3011  007E                     ??_Timer1_DetectAssignCount:	
  3012                           
  3013                           	psect	cstackBANK0
  3014  0047                     __pcstackBANK0:	
  3015                           ; 1 bytes @ 0xE
  3016                           
  3017  0047                     ??_Handler:	
  3018                           
  3019                           ; 1 bytes @ 0x0
  3020  0047                     	ds	1
  3021  0048                     ??_Timer1_ClearRecord:	
  3022  0048                     ??_Basic_Init:	
  3023                           ; 1 bytes @ 0x1
  3024                           
  3025  0048                     ??_isdigit:	
  3026                           ; 1 bytes @ 0x1
  3027                           
  3028  0048                     ??_Buzzer_Init:	
  3029                           ; 1 bytes @ 0x1
  3030                           
  3031  0048                     ?_Buzzer_MiliSecond:	
  3032                           ; 1 bytes @ 0x1
  3033                           
  3034  0048                     ??_I2C1_PinInit:	
  3035                           ; 1 bytes @ 0x1
  3036                           
  3037  0048                     ?_I2C1_Transmit:	
  3038                           ; 1 bytes @ 0x1
  3039                           
  3040  0048                     ??_I2C2_PinInit:	
  3041                           ; 1 bytes @ 0x1
  3042                           
  3043  0048                     ?_I2C2_Transmit:	
  3044                           ; 1 bytes @ 0x1
  3045                           
  3046  0048                     ??_LCD_WriteData:	
  3047                           ; 1 bytes @ 0x1
  3048                           
  3049  0048                     ??_Timer1_Init:	
  3050                           ; 1 bytes @ 0x1
  3051                           
  3052  0048                     ??_Timer1_StartCount:	
  3053                           ; 1 bytes @ 0x1
  3054                           
  3055  0048                     ??_Timer4_Init:	
  3056                           ; 1 bytes @ 0x1
  3057                           
  3058  0048                     ??_Timer6_Init:	
  3059                           ; 1 bytes @ 0x1
  3060                           
  3061  0048                     ??_mTouch_PortInit:	
  3062                           ; 1 bytes @ 0x1
  3063                           
  3064  0048                     ?_Timer1_GetCPM:	
  3065                           ; 1 bytes @ 0x1
  3066                           
  3067  0048                     ?___wmul:	
  3068                           ; 2 bytes @ 0x1
  3069                           
  3070  0048                     ?___lwdiv:	
  3071                           ; 2 bytes @ 0x1
  3072                           
  3073  0048                     ?_Timer1_GetCountSum:	
  3074                           ; 2 bytes @ 0x1
  3075                           
  3076  0048                     I2C1_Transmit@pData:	
  3077                           ; 4 bytes @ 0x1
  3078                           
  3079  0048                     I2C2_Transmit@pData:	
  3080                           ; 1 bytes @ 0x1
  3081                           
  3082  0048                     _isdigit$939:	
  3083                           ; 1 bytes @ 0x1
  3084                           
  3085  0048                     Buzzer_MiliSecond@time:	
  3086                           ; 1 bytes @ 0x1
  3087                           
  3088  0048                     ___wmul@multiplier:	
  3089                           ; 2 bytes @ 0x1
  3090                           
  3091  0048                     ___lwdiv@divisor:	
  3092                           ; 2 bytes @ 0x1
  3093                           
  3094                           
  3095                           ; 2 bytes @ 0x1
  3096  0048                     	ds	1
  3097  0049                     ?_I2C1_Setting:	
  3098  0049                     ?_I2C2_Setting:	
  3099                           ; 1 bytes @ 0x2
  3100                           
  3101  0049                     ??_mTouch_Init:	
  3102                           ; 1 bytes @ 0x2
  3103                           
  3104  0049                     I2C1_Setting@mode:	
  3105                           ; 1 bytes @ 0x2
  3106                           
  3107  0049                     I2C1_Transmit@size:	
  3108                           ; 1 bytes @ 0x2
  3109                           
  3110  0049                     I2C2_Setting@mode:	
  3111                           ; 1 bytes @ 0x2
  3112                           
  3113  0049                     I2C2_Transmit@size:	
  3114                           ; 1 bytes @ 0x2
  3115                           
  3116  0049                     isdigit@c:	
  3117                           ; 1 bytes @ 0x2
  3118                           
  3119                           
  3120                           ; 1 bytes @ 0x2
  3121  0049                     	ds	1
  3122  004A                     ??_mTouch_Check:	
  3123  004A                     ??_Buzzer_MiliSecond:	
  3124                           ; 1 bytes @ 0x3
  3125                           
  3126  004A                     ??_I2C1_Transmit:	
  3127                           ; 1 bytes @ 0x3
  3128                           
  3129  004A                     ??_I2C2_Transmit:	
  3130                           ; 1 bytes @ 0x3
  3131                           
  3132  004A                     ??_Timer1_GetCPM:	
  3133                           ; 1 bytes @ 0x3
  3134                           
  3135  004A                     I2C1_Setting@Speed:	
  3136                           ; 1 bytes @ 0x3
  3137                           
  3138  004A                     I2C2_Setting@Speed:	
  3139                           ; 1 bytes @ 0x3
  3140                           
  3141  004A                     LCD_WriteData@point:	
  3142                           ; 1 bytes @ 0x3
  3143                           
  3144  004A                     ___wmul@multiplicand:	
  3145                           ; 1 bytes @ 0x3
  3146                           
  3147  004A                     ___lwdiv@dividend:	
  3148                           ; 2 bytes @ 0x3
  3149                           
  3150                           
  3151                           ; 2 bytes @ 0x3
  3152  004A                     	ds	1
  3153  004B                     ??_LCD_DisplayClear:	
  3154  004B                     ??_I2C1_Setting:	
  3155                           ; 1 bytes @ 0x4
  3156                           
  3157  004B                     ??_I2C2_Setting:	
  3158                           ; 1 bytes @ 0x4
  3159                           
  3160  004B                     ??_putch:	
  3161                           ; 1 bytes @ 0x4
  3162                           
  3163  004B                     ??_LCD_CursorHome:	
  3164                           ; 1 bytes @ 0x4
  3165                           
  3166  004B                     putch@c:	
  3167                           ; 1 bytes @ 0x4
  3168                           
  3169                           
  3170                           ; 1 bytes @ 0x4
  3171  004B                     	ds	1
  3172  004C                     ??_LCD_Init:	
  3173  004C                     ??_Timer1_GetCountSum:	
  3174                           ; 1 bytes @ 0x5
  3175                           
  3176  004C                     ??___wmul:	
  3177                           ; 1 bytes @ 0x5
  3178                           
  3179  004C                     ??___lwdiv:	
  3180                           ; 1 bytes @ 0x5
  3181                           
  3182  004C                     I2C1_Setting@address:	
  3183                           ; 1 bytes @ 0x5
  3184                           
  3185  004C                     I2C1_Transmit@address:	
  3186                           ; 1 bytes @ 0x5
  3187                           
  3188  004C                     I2C2_Setting@address:	
  3189                           ; 1 bytes @ 0x5
  3190                           
  3191  004C                     I2C2_Transmit@address:	
  3192                           ; 1 bytes @ 0x5
  3193                           
  3194  004C                     ___wmul@product:	
  3195                           ; 1 bytes @ 0x5
  3196                           
  3197                           
  3198                           ; 2 bytes @ 0x5
  3199  004C                     	ds	1
  3200  004D                     ?_I2C_Init:	
  3201  004D                     I2C1_Transmit@i:	
  3202                           ; 1 bytes @ 0x6
  3203                           
  3204  004D                     I2C2_Transmit@i:	
  3205                           ; 1 bytes @ 0x6
  3206                           
  3207  004D                     I2C_Init@address:	
  3208                           ; 1 bytes @ 0x6
  3209                           
  3210  004D                     ___lwdiv@quotient:	
  3211                           ; 1 bytes @ 0x6
  3212                           
  3213                           
  3214                           ; 2 bytes @ 0x6
  3215  004D                     	ds	1
  3216  004E                     I2C1_Transmit@i_172:	
  3217  004E                     I2C2_Transmit@i_316:	
  3218                           ; 1 bytes @ 0x7
  3219                           
  3220  004E                     I2C_Init@mode:	
  3221                           ; 1 bytes @ 0x7
  3222                           
  3223                           
  3224                           ; 1 bytes @ 0x7
  3225  004E                     	ds	1
  3226  004F                     I2C1_Transmit@result:	
  3227  004F                     I2C2_Transmit@result:	
  3228                           ; 1 bytes @ 0x8
  3229                           
  3230  004F                     I2C_Init@Speed:	
  3231                           ; 1 bytes @ 0x8
  3232                           
  3233  004F                     mTouch_Check@chan:	
  3234                           ; 1 bytes @ 0x8
  3235                           
  3236  004F                     ___lwdiv@counter:	
  3237                           ; 1 bytes @ 0x8
  3238                           
  3239                           
  3240                           ; 1 bytes @ 0x8
  3241  004F                     	ds	1
  3242  0050                     ??_I2C_Init:	
  3243  0050                     ?_I2C_Transmit:	
  3244                           ; 1 bytes @ 0x9
  3245                           
  3246  0050                     ?___lwmod:	
  3247                           ; 1 bytes @ 0x9
  3248                           
  3249  0050                     I2C_Transmit@address:	
  3250                           ; 2 bytes @ 0x9
  3251                           
  3252  0050                     ___lwmod@divisor:	
  3253                           ; 1 bytes @ 0x9
  3254                           
  3255                           
  3256                           ; 2 bytes @ 0x9
  3257  0050                     	ds	1
  3258  0051                     I2C_Transmit@pData:	
  3259                           
  3260                           ; 1 bytes @ 0xA
  3261  0051                     	ds	1
  3262  0052                     I2C_Init@I2Cx:	
  3263  0052                     I2C_Transmit@size:	
  3264                           ; 1 bytes @ 0xB
  3265                           
  3266  0052                     ___lwmod@dividend:	
  3267                           ; 1 bytes @ 0xB
  3268                           
  3269                           
  3270                           ; 2 bytes @ 0xB
  3271  0052                     	ds	1
  3272  0053                     ??_I2C_Transmit:	
  3273                           
  3274                           ; 1 bytes @ 0xC
  3275  0053                     	ds	1
  3276  0054                     ??___lwmod:	
  3277                           
  3278                           ; 1 bytes @ 0xD
  3279  0054                     	ds	1
  3280  0055                     ___lwmod@counter:	
  3281                           
  3282                           ; 1 bytes @ 0xE
  3283  0055                     	ds	1
  3284  0056                     ?_printf:	
  3285  0056                     I2C_Transmit@I2Cx:	
  3286                           ; 2 bytes @ 0xF
  3287                           
  3288  0056                     printf@f:	
  3289                           ; 1 bytes @ 0xF
  3290                           
  3291                           
  3292                           ; 2 bytes @ 0xF
  3293  0056                     	ds	1
  3294  0057                     I2C_Transmit@result:	
  3295                           
  3296                           ; 1 bytes @ 0x10
  3297  0057                     	ds	1
  3298  0058                     ??_DAC_Initialize:	
  3299  0058                     ?_DAC_WriteVoltage:	
  3300                           ; 1 bytes @ 0x11
  3301                           
  3302  0058                     DAC_WriteVoltage@volue:	
  3303                           ; 1 bytes @ 0x11
  3304                           
  3305                           
  3306                           ; 2 bytes @ 0x11
  3307  0058                     	ds	2
  3308  005A                     ??_DAC_WriteVoltage:	
  3309                           
  3310                           ; 1 bytes @ 0x13
  3311  005A                     	ds	4
  3312  005E                     ??_printf:	
  3313                           
  3314                           ; 1 bytes @ 0x17
  3315  005E                     	ds	4
  3316  0062                     printf@flag:	
  3317                           
  3318                           ; 1 bytes @ 0x1B
  3319  0062                     	ds	1
  3320  0063                     printf@ap:	
  3321                           
  3322                           ; 1 bytes @ 0x1C
  3323  0063                     	ds	1
  3324  0064                     printf@val:	
  3325                           
  3326                           ; 2 bytes @ 0x1D
  3327  0064                     	ds	2
  3328  0066                     printf@prec:	
  3329                           
  3330                           ; 1 bytes @ 0x1F
  3331  0066                     	ds	1
  3332  0067                     printf@width:	
  3333                           
  3334                           ; 2 bytes @ 0x20
  3335  0067                     	ds	2
  3336  0069                     printf@c:	
  3337                           
  3338                           ; 1 bytes @ 0x22
  3339  0069                     	ds	1
  3340  006A                     ??_main:	
  3341                           
  3342                           ; 1 bytes @ 0x23
  3343  006A                     	ds	1
  3344                           
  3345                           	psect	maintext
  3346  049A                     __pmaintext:	
  3347 ;;
  3348 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3349 ;;
  3350 ;; *************** function _main *****************
  3351 ;; Defined at:
  3352 ;;		line 23 in file "main.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      char 
  3359 ;; Registers used:
  3360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : B1F/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3366 ;;      Params:         0       0       0       0       0       0
  3367 ;;      Locals:         0       0       0       0       0       0
  3368 ;;      Temps:          0       1       0       0       0       0
  3369 ;;      Totals:         0       1       0       0       0       0
  3370 ;;Total ram usage:        1 bytes
  3371 ;; Hardware stack levels required when called:    7
  3372 ;; This function calls:
  3373 ;;		_Basic_Init
  3374 ;;		_Buzzer_Init
  3375 ;;		_DAC_Initialize
  3376 ;;		_DAC_WriteVoltage
  3377 ;;		_LCD_CursorHome
  3378 ;;		_LCD_Init
  3379 ;;		_Timer1_GetCPM
  3380 ;;		_Timer1_GetCountSum
  3381 ;;		_Timer1_Init
  3382 ;;		_Timer1_StartCount
  3383 ;;		_Timer4_Init
  3384 ;;		_Timer6_Init
  3385 ;;		_mTouch_Check
  3386 ;;		_mTouch_Init
  3387 ;;		_printf
  3388 ;; This function is called by:
  3389 ;;		Startup code after reset
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           
  3394                           ;psect for function _main
  3395  049A                     _main:	
  3396                           
  3397                           ;main.c: 25: Basic_Init();
  3398                           
  3399                           ;incstack = 0
  3400                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3401  049A  318D  25E2  3184   	fcall	_Basic_Init
  3402                           
  3403                           ;main.c: 26: LATA6 = 1;
  3404  049D  0022               	movlb	2	; select bank2
  3405  049E  170C               	bsf	12,6	;volatile
  3406                           
  3407                           ;main.c: 27: Buzzer_Init();
  3408  049F  318E  26CA  3184   	fcall	_Buzzer_Init
  3409                           
  3410                           ;main.c: 28: LCD_Init();
  3411  04A2  3185  252E  3184   	fcall	_LCD_Init
  3412                           
  3413                           ;main.c: 29: Timer1_Init();
  3414  04A5  3187  27DC  3184   	fcall	_Timer1_Init
  3415                           
  3416                           ;main.c: 30: mTouch_Init();
  3417  04A8  318E  2606  3184   	fcall	_mTouch_Init
  3418                           
  3419                           ;main.c: 31: Timer4_Init();
  3420  04AB  318D  2594  3184   	fcall	_Timer4_Init
  3421                           
  3422                           ;main.c: 32: Timer6_Init();
  3423  04AE  318D  25F3  3184   	fcall	_Timer6_Init
  3424                           
  3425                           ;main.c: 33: DAC_Initialize();
  3426  04B1  318E  2685  3184   	fcall	_DAC_Initialize
  3427                           
  3428                           ;main.c: 35: Timer1_StartCount();
  3429  04B4  318D  2513  3184   	fcall	_Timer1_StartCount
  3430                           
  3431                           ;main.c: 37: mode.ModeNum = 0;
  3432  04B7  0020               	movlb	0	; select bank0
  3433  04B8  01BE               	clrf	_mode+1
  3434                           
  3435                           ;main.c: 39: DAC_WriteVoltage(DAC_DataTable[6]);
  3436  04B9  306A               	movlw	low ((_DAC_DataTable+12)| (0+32768))
  3437  04BA  0084               	movwf	4
  3438  04BB  3080               	movlw	high ((_DAC_DataTable+12)| (0+32768))
  3439  04BC  0085               	movwf	5
  3440  04BD  3F00               	moviw [0]fsr0
  3441  04BE  00D8               	movwf	DAC_WriteVoltage@volue
  3442  04BF  3F01               	moviw [1]fsr0
  3443  04C0  00D9               	movwf	DAC_WriteVoltage@volue+1
  3444  04C1  318F  279C  3184   	fcall	_DAC_WriteVoltage
  3445  04C4                     l3255:	
  3446                           ;main.c: 41: while(1)
  3447                           
  3448                           
  3449                           ;main.c: 42: {
  3450                           ;main.c: 43: if(mTouch_Check(2)&&(mode.ModeNum<4-1))
  3451  04C4  3002               	movlw	2
  3452  04C5  3186  2697  3184   	fcall	_mTouch_Check
  3453  04C8  3A00               	xorlw	0
  3454  04C9  1903               	skipnz
  3455  04CA  2CD5               	goto	l3261
  3456  04CB  3003               	movlw	3
  3457  04CC  0020               	movlb	0	; select bank0
  3458  04CD  023E               	subwf	_mode+1,w
  3459  04CE  1803               	skipnc
  3460  04CF  2CD5               	goto	l3261
  3461                           
  3462                           ;main.c: 44: mode.ModeNum++;
  3463  04D0  3001               	movlw	1
  3464  04D1  00EA               	movwf	??_main
  3465  04D2  086A               	movf	??_main,w
  3466  04D3  07BE               	addwf	_mode+1,f
  3467  04D4  2CE2               	goto	l3267
  3468  04D5                     l3261:	
  3469                           
  3470                           ;main.c: 45: else if(mTouch_Check(1)&&(mode.ModeNum>0))
  3471  04D5  3001               	movlw	1
  3472  04D6  3186  2697  3184   	fcall	_mTouch_Check
  3473  04D9  3A00               	xorlw	0
  3474  04DA  1903               	skipnz
  3475  04DB  2CE2               	goto	l3267
  3476  04DC  0020               	movlb	0	; select bank0
  3477  04DD  083E               	movf	_mode+1,w
  3478  04DE  1903               	btfsc	3,2
  3479  04DF  2CE2               	goto	l3267
  3480                           
  3481                           ;main.c: 46: mode.ModeNum--;
  3482  04E0  3001               	movlw	1
  3483  04E1  02BE               	subwf	_mode+1,f
  3484  04E2                     l3267:	
  3485                           
  3486                           ;main.c: 48: LCD_CursorHome();
  3487  04E2  318D  25B1  3184   	fcall	_LCD_CursorHome
  3488                           
  3489                           ;main.c: 49: switch(mode.ModeNum)
  3490  04E5  2D1E               	goto	l3279
  3491  04E6                     l3269:	
  3492                           ;main.c: 50: {
  3493                           ;main.c: 51: case COUNT:
  3494                           
  3495                           
  3496                           ;main.c: 52: printf("%5ul %7ul", Timer1_GetCPM(),Timer1_GetCountSum());
  3497  04E6  309B               	movlw	low (STR_1| (0+32768))
  3498  04E7  0020               	movlb	0	; select bank0
  3499  04E8  00D6               	movwf	printf@f
  3500  04E9  3080               	movlw	high (STR_1| (0+32768))
  3501  04EA  00D7               	movwf	printf@f+1
  3502  04EB  318D  251E  3184   	fcall	_Timer1_GetCPM
  3503  04EE  0020               	movlb	0	; select bank0
  3504  04EF  0849               	movf	?_Timer1_GetCPM+1,w
  3505  04F0  00D9               	movwf	?_printf+3
  3506  04F1  0848               	movf	?_Timer1_GetCPM,w
  3507  04F2  00D8               	movwf	?_printf+2
  3508  04F3  318D  2543  3184   	fcall	_Timer1_GetCountSum
  3509  04F6  0020               	movlb	0	; select bank0
  3510  04F7  084B               	movf	?_Timer1_GetCountSum+3,w
  3511  04F8  00DD               	movwf	?_printf+7
  3512  04F9  084A               	movf	?_Timer1_GetCountSum+2,w
  3513  04FA  00DC               	movwf	?_printf+6
  3514  04FB  0849               	movf	?_Timer1_GetCountSum+1,w
  3515  04FC  00DB               	movwf	?_printf+5
  3516  04FD  0848               	movf	?_Timer1_GetCountSum,w
  3517  04FE  00DA               	movwf	?_printf+4
  3518  04FF  3181  21BE  3184   	fcall	_printf
  3519                           
  3520                           ;main.c: 53: break;
  3521  0502  2CC4               	goto	l3255
  3522  0503                     l3271:	
  3523                           ;main.c: 54: case SELECTFUNC:
  3524                           
  3525                           
  3526                           ;main.c: 55: printf("SELECTFUNC");
  3527  0503  3086               	movlw	low (STR_2| (0+32768))
  3528  0504  0020               	movlb	0	; select bank0
  3529  0505  00D6               	movwf	printf@f
  3530  0506  3080               	movlw	high (STR_2| (0+32768))
  3531  0507  00D7               	movwf	printf@f+1
  3532  0508  3181  21BE  3184   	fcall	_printf
  3533                           
  3534                           ;main.c: 56: break;
  3535  050B  2CC4               	goto	l3255
  3536  050C                     l3273:	
  3537                           ;main.c: 57: case ADJGAIN:
  3538                           
  3539                           
  3540                           ;main.c: 58: printf("ADJGAIN");
  3541  050C  30BD               	movlw	low (STR_3| (0+32768))
  3542  050D  0020               	movlb	0	; select bank0
  3543  050E  00D6               	movwf	printf@f
  3544  050F  3080               	movlw	high (STR_3| (0+32768))
  3545  0510  00D7               	movwf	printf@f+1
  3546  0511  3181  21BE  3184   	fcall	_printf
  3547                           
  3548                           ;main.c: 59: break;
  3549  0514  2CC4               	goto	l3255
  3550  0515                     l3275:	
  3551                           ;main.c: 60: case PMTDEVICE:
  3552                           
  3553                           
  3554                           ;main.c: 61: printf("PMTDEVICE");
  3555  0515  3091               	movlw	low (STR_4| (0+32768))
  3556  0516  0020               	movlb	0	; select bank0
  3557  0517  00D6               	movwf	printf@f
  3558  0518  3080               	movlw	high (STR_4| (0+32768))
  3559  0519  00D7               	movwf	printf@f+1
  3560  051A  3181  21BE  3184   	fcall	_printf
  3561                           
  3562                           ;main.c: 63: }
  3563                           
  3564                           ;main.c: 62: break;
  3565  051D  2CC4               	goto	l3255
  3566  051E                     l3279:	
  3567  051E  0020               	movlb	0	; select bank0
  3568  051F  083E               	movf	_mode+1,w
  3569                           
  3570                           ; Switch size 1, requested type "space"
  3571                           ; Number of cases is 4, Range of values is 0 to 3
  3572                           ; switch strategies available:
  3573                           ; Name         Instructions Cycles
  3574                           ; simple_byte           13     7 (average)
  3575                           ; direct_byte           14     6 (fixed)
  3576                           ; jumptable            260     6 (fixed)
  3577                           ;	Chosen strategy is simple_byte
  3578  0520  3A00               	xorlw	0	; case 0
  3579  0521  1903               	skipnz
  3580  0522  2CE6               	goto	l3269
  3581  0523  3A01               	xorlw	1	; case 1
  3582  0524  1903               	skipnz
  3583  0525  2D03               	goto	l3271
  3584  0526  3A03               	xorlw	3	; case 2
  3585  0527  1903               	skipnz
  3586  0528  2D0C               	goto	l3273
  3587  0529  3A01               	xorlw	1	; case 3
  3588  052A  1903               	skipnz
  3589  052B  2D15               	goto	l3275
  3590  052C  2CC4               	goto	l3255
  3591  052D  2CC4               	goto	l3255
  3592  052E                     __end_of_main:	
  3593                           ;main.c: 64: }
  3594                           ;main.c: 66: return 0;
  3595                           ;	Return value of _main is never used
  3596                           
  3597                           
  3598                           	psect	text1
  3599  01BE                     __ptext1:	
  3600 ;; *************** function _printf *****************
  3601 ;; Defined at:
  3602 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  3605 ;;		 -> STR_4(10), STR_3(8), STR_2(11), STR_1(10), 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  tmpval          4    0        struct .
  3608 ;;  width           2   32[BANK0 ] int 
  3609 ;;  val             2   29[BANK0 ] unsigned int 
  3610 ;;  cp              2    0        PTR const unsigned char 
  3611 ;;  len             2    0        unsigned int 
  3612 ;;  c               1   34[BANK0 ] char 
  3613 ;;  prec            1   31[BANK0 ] char 
  3614 ;;  ap              1   28[BANK0 ] PTR void [1]
  3615 ;;		 -> ?_printf(2), 
  3616 ;;  flag            1   27[BANK0 ] unsigned char 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  2   15[BANK0 ] int 
  3619 ;; Registers used:
  3620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3626 ;;      Params:         0       8       0       0       0       0
  3627 ;;      Locals:         0       8       0       0       0       0
  3628 ;;      Temps:          0       4       0       0       0       0
  3629 ;;      Totals:         0      20       0       0       0       0
  3630 ;;Total ram usage:       20 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    5
  3633 ;; This function calls:
  3634 ;;		___lwdiv
  3635 ;;		___lwmod
  3636 ;;		___wmul
  3637 ;;		_isdigit
  3638 ;;		_putch
  3639 ;; This function is called by:
  3640 ;;		_main
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           
  3645                           ;psect for function _printf
  3646  01BE                     _printf:	
  3647                           
  3648                           ;doprnt.c: 466: va_list ap;
  3649                           ;doprnt.c: 499: signed char c;
  3650                           ;doprnt.c: 501: int width;
  3651                           ;doprnt.c: 506: signed char prec;
  3652                           ;doprnt.c: 508: unsigned char flag;
  3653                           ;doprnt.c: 523: union {
  3654                           ;doprnt.c: 524: unsigned long vd;
  3655                           ;doprnt.c: 525: double integ;
  3656                           ;doprnt.c: 526: } tmpval;
  3657                           ;doprnt.c: 528: unsigned int val;
  3658                           ;doprnt.c: 529: unsigned len;
  3659                           ;doprnt.c: 530: const char * cp;
  3660                           ;doprnt.c: 533: *ap = __va_start();
  3661                           
  3662                           ;incstack = 0
  3663                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3664  01BE  3058               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3665  01BF  0020               	movlb	0	; select bank0
  3666  01C0  00DE               	movwf	??_printf
  3667  01C1  085E               	movf	??_printf,w
  3668  01C2  00E3               	movwf	printf@ap
  3669  01C3                     l3189:	
  3670                           ;doprnt.c: 536: while(c = *f++) {
  3671                           
  3672  01C3  0020               	movlb	0	; select bank0
  3673  01C4  0857               	movf	printf@f+1,w
  3674  01C5  00DF               	movwf	??_printf+1
  3675  01C6  0856               	movf	printf@f,w
  3676  01C7  00DE               	movwf	??_printf
  3677  01C8  0AD6               	incf	printf@f,f
  3678  01C9  1903               	skipnz
  3679  01CA  0AD7               	incf	printf@f+1,f
  3680  01CB  085E               	movf	??_printf,w
  3681  01CC  0084               	movwf	4
  3682  01CD  085F               	movf	??_printf+1,w
  3683  01CE  0085               	movwf	5
  3684  01CF  0800               	movf	0,w	;code access
  3685  01D0  00E0               	movwf	??_printf+2
  3686  01D1  0860               	movf	??_printf+2,w
  3687  01D2  00E9               	movwf	printf@c
  3688  01D3  0869               	movf	printf@c,w
  3689  01D4  1903               	btfsc	3,2
  3690  01D5  0008               	return
  3691                           
  3692                           ;doprnt.c: 538: if(c != '%')
  3693  01D6  3025               	movlw	37
  3694  01D7  0669               	xorwf	printf@c,w
  3695  01D8  1903               	btfsc	3,2
  3696  01D9  29DF               	goto	l3133
  3697                           
  3698                           ;doprnt.c: 540: {
  3699                           ;doprnt.c: 541: (putch(c) );
  3700  01DA  0869               	movf	printf@c,w
  3701  01DB  318D  2530  3181   	fcall	_putch
  3702                           
  3703                           ;doprnt.c: 542: continue;
  3704  01DE  29C3               	goto	l3189
  3705  01DF                     l3133:	
  3706                           
  3707                           ;doprnt.c: 543: }
  3708                           ;doprnt.c: 546: width = 0;
  3709  01DF  0020               	movlb	0	; select bank0
  3710  01E0  01E7               	clrf	printf@width
  3711  01E1  01E8               	clrf	printf@width+1
  3712                           
  3713                           ;doprnt.c: 548: flag = 0;
  3714  01E2  01E2               	clrf	printf@flag
  3715                           
  3716                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3717  01E3  0856               	movf	printf@f,w
  3718  01E4  0084               	movwf	4
  3719  01E5  0857               	movf	printf@f+1,w
  3720  01E6  0085               	movwf	5
  3721  01E7  0800               	movf	0,w	;code access
  3722  01E8  318D  25A2  3181   	fcall	_isdigit
  3723  01EB  1C03               	btfss	3,0
  3724  01EC  2A25               	goto	l3151
  3725                           
  3726                           ;doprnt.c: 598: width = 0;
  3727  01ED  0020               	movlb	0	; select bank0
  3728  01EE  01E7               	clrf	printf@width
  3729  01EF  01E8               	clrf	printf@width+1
  3730  01F0                     l3139:	
  3731                           ;doprnt.c: 599: do {
  3732                           
  3733                           
  3734                           ;doprnt.c: 600: width *= 10;
  3735  01F0  300A               	movlw	10
  3736  01F1  0020               	movlb	0	; select bank0
  3737  01F2  00C8               	movwf	___wmul@multiplier
  3738  01F3  3000               	movlw	0
  3739  01F4  00C9               	movwf	___wmul@multiplier+1
  3740  01F5  0868               	movf	printf@width+1,w
  3741  01F6  00CB               	movwf	___wmul@multiplicand+1
  3742  01F7  0867               	movf	printf@width,w
  3743  01F8  00CA               	movwf	___wmul@multiplicand
  3744  01F9  318E  264B  3181   	fcall	___wmul
  3745  01FC  0020               	movlb	0	; select bank0
  3746  01FD  0849               	movf	?___wmul+1,w
  3747  01FE  00E8               	movwf	printf@width+1
  3748  01FF  0848               	movf	?___wmul,w
  3749  0200  00E7               	movwf	printf@width
  3750                           
  3751                           ;doprnt.c: 601: width += *f++ - '0';
  3752  0201  0856               	movf	printf@f,w
  3753  0202  0084               	movwf	4
  3754  0203  0857               	movf	printf@f+1,w
  3755  0204  0085               	movwf	5
  3756  0205  0800               	movf	0,w	;code access
  3757  0206  3ED0               	addlw	208
  3758  0207  00DE               	movwf	??_printf
  3759  0208  30FF               	movlw	255
  3760  0209  1803               	skipnc
  3761  020A  3000               	movlw	0
  3762  020B  00DF               	movwf	??_printf+1
  3763  020C  085E               	movf	??_printf,w
  3764  020D  07E7               	addwf	printf@width,f
  3765  020E  085F               	movf	??_printf+1,w
  3766  020F  3DE8               	addwfc	printf@width+1,f
  3767  0210  3001               	movlw	1
  3768  0211  07D6               	addwf	printf@f,f
  3769  0212  3000               	movlw	0
  3770  0213  3DD7               	addwfc	printf@f+1,f
  3771                           
  3772                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3773  0214  0856               	movf	printf@f,w
  3774  0215  0084               	movwf	4
  3775  0216  0857               	movf	printf@f+1,w
  3776  0217  0085               	movwf	5
  3777  0218  0800               	movf	0,w	;code access
  3778  0219  318D  25A2  3181   	fcall	_isdigit
  3779  021C  1C03               	btfss	3,0
  3780  021D  2A25               	goto	l3151
  3781  021E  29F0               	goto	l3139
  3782  021F                     l3147:	
  3783                           ;doprnt.c: 817: case 'u':
  3784                           
  3785                           ;doprnt.c: 813: continue;
  3786                           
  3787                           ;doprnt.c: 802: default:
  3788                           
  3789                           ;doprnt.c: 638: goto alldone;
  3790                           
  3791                           ;doprnt.c: 637: case 0:
  3792                           
  3793                           ;doprnt.c: 608: }
  3794                           ;doprnt.c: 635: switch(c = *f++) {
  3795                           
  3796                           
  3797                           ;doprnt.c: 818: flag |= 0xC0;
  3798  021F  30C0               	movlw	192
  3799  0220  0020               	movlb	0	; select bank0
  3800  0221  00DE               	movwf	??_printf
  3801  0222  085E               	movf	??_printf,w
  3802  0223  04E2               	iorwf	printf@flag,f
  3803                           
  3804                           ;doprnt.c: 822: }
  3805                           
  3806                           ;doprnt.c: 819: break;
  3807  0224  2A3A               	goto	l3153
  3808  0225                     l3151:	
  3809  0225  0020               	movlb	0	; select bank0
  3810  0226  0857               	movf	printf@f+1,w
  3811  0227  00DF               	movwf	??_printf+1
  3812  0228  0856               	movf	printf@f,w
  3813  0229  00DE               	movwf	??_printf
  3814  022A  0AD6               	incf	printf@f,f
  3815  022B  1903               	skipnz
  3816  022C  0AD7               	incf	printf@f+1,f
  3817  022D  085E               	movf	??_printf,w
  3818  022E  0084               	movwf	4
  3819  022F  085F               	movf	??_printf+1,w
  3820  0230  0085               	movwf	5
  3821  0231  0800               	movf	0,w	;code access
  3822  0232  00E9               	movwf	printf@c
  3823                           
  3824                           ; Switch size 1, requested type "space"
  3825                           ; Number of cases is 2, Range of values is 0 to 117
  3826                           ; switch strategies available:
  3827                           ; Name         Instructions Cycles
  3828                           ; simple_byte            7     4 (average)
  3829                           ; direct_byte          242     6 (fixed)
  3830                           ; jumptable            260     6 (fixed)
  3831                           ;	Chosen strategy is simple_byte
  3832  0233  3A00               	xorlw	0	; case 0
  3833  0234  1903               	skipnz
  3834  0235  2AD3               	goto	l717
  3835  0236  3A75               	xorlw	117	; case 117
  3836  0237  1903               	skipnz
  3837  0238  2A1F               	goto	l3147
  3838  0239  29C3               	goto	l3189
  3839  023A                     l3153:	
  3840                           
  3841                           ;doprnt.c: 1273: {
  3842                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3843  023A  0863               	movf	printf@ap,w
  3844  023B  0086               	movwf	6
  3845  023C  0187               	clrf	7
  3846  023D  3F40               	moviw [0]fsr1
  3847  023E  00E4               	movwf	printf@val
  3848  023F  3F41               	moviw [1]fsr1
  3849  0240  00E5               	movwf	printf@val+1
  3850  0241  3002               	movlw	2
  3851  0242  00DE               	movwf	??_printf
  3852  0243  085E               	movf	??_printf,w
  3853  0244  07E3               	addwf	printf@ap,f
  3854                           
  3855                           ;doprnt.c: 1287: }
  3856                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3857  0245  01E9               	clrf	printf@c
  3858  0246  0AE9               	incf	printf@c,f
  3859  0247  3005               	movlw	5
  3860  0248  0669               	xorwf	printf@c,w
  3861  0249  1903               	btfsc	3,2
  3862  024A  2A6A               	goto	l3169
  3863  024B                     l3163:	
  3864                           
  3865                           ;doprnt.c: 1306: if(val < dpowers[c])
  3866  024B  0869               	movf	printf@c,w
  3867  024C  00DE               	movwf	??_printf
  3868  024D  01DF               	clrf	??_printf+1
  3869  024E  35DE               	lslf	??_printf,f
  3870  024F  0DDF               	rlf	??_printf+1,f
  3871  0250  307C               	movlw	low (_dpowers| (0+32768))
  3872  0251  075E               	addwf	??_printf,w
  3873  0252  0084               	movwf	4
  3874  0253  3080               	movlw	high (_dpowers| (0+32768))
  3875  0254  3D5F               	addwfc	??_printf+1,w
  3876  0255  0085               	movwf	5
  3877  0256  3F00               	moviw [0]fsr0
  3878  0257  00E0               	movwf	??_printf+2
  3879  0258  3F01               	moviw [1]fsr0
  3880  0259  00E1               	movwf	??_printf+3
  3881  025A  0861               	movf	??_printf+3,w
  3882  025B  0265               	subwf	printf@val+1,w
  3883  025C  1D03               	skipz
  3884  025D  2A60               	goto	u2715
  3885  025E  0860               	movf	??_printf+2,w
  3886  025F  0264               	subwf	printf@val,w
  3887  0260                     u2715:	
  3888  0260  1C03               	btfss	3,0
  3889  0261  2A6A               	goto	l3169
  3890                           
  3891                           ;doprnt.c: 1307: break;
  3892  0262  3001               	movlw	1
  3893  0263  00DE               	movwf	??_printf
  3894  0264  085E               	movf	??_printf,w
  3895  0265  07E9               	addwf	printf@c,f
  3896  0266  3005               	movlw	5
  3897  0267  0669               	xorwf	printf@c,w
  3898  0268  1D03               	btfss	3,2
  3899  0269  2A4B               	goto	l3163
  3900  026A                     l3169:	
  3901                           
  3902                           ;doprnt.c: 1381: if(width > c)
  3903  026A  0869               	movf	printf@c,w
  3904  026B  00DE               	movwf	??_printf
  3905  026C  01DF               	clrf	??_printf+1
  3906  026D  1BDE               	btfsc	??_printf,7
  3907  026E  03DF               	decf	??_printf+1,f
  3908  026F  085F               	movf	??_printf+1,w
  3909  0270  3A80               	xorlw	128
  3910  0271  00E0               	movwf	??_printf+2
  3911  0272  0868               	movf	printf@width+1,w
  3912  0273  3A80               	xorlw	128
  3913  0274  0260               	subwf	??_printf+2,w
  3914  0275  1D03               	skipz
  3915  0276  2A79               	goto	u2735
  3916  0277  0867               	movf	printf@width,w
  3917  0278  025E               	subwf	??_printf,w
  3918  0279                     u2735:	
  3919  0279  1803               	skipnc
  3920  027A  2A86               	goto	l3173
  3921                           
  3922                           ;doprnt.c: 1382: width -= c;
  3923  027B  0020               	movlb	0	; select bank0
  3924  027C  0869               	movf	printf@c,w
  3925  027D  00DE               	movwf	??_printf
  3926  027E  01DF               	clrf	??_printf+1
  3927  027F  1BDE               	btfsc	??_printf,7
  3928  0280  03DF               	decf	??_printf+1,f
  3929  0281  085E               	movf	??_printf,w
  3930  0282  02E7               	subwf	printf@width,f
  3931  0283  085F               	movf	??_printf+1,w
  3932  0284  3BE8               	subwfb	printf@width+1,f
  3933  0285  2A89               	goto	l3175
  3934  0286                     l3173:	
  3935                           
  3936                           ;doprnt.c: 1383: else
  3937                           ;doprnt.c: 1384: width = 0;
  3938  0286  0020               	movlb	0	; select bank0
  3939  0287  01E7               	clrf	printf@width
  3940  0288  01E8               	clrf	printf@width+1
  3941  0289                     l3175:	
  3942                           
  3943                           ;doprnt.c: 1422: {
  3944                           ;doprnt.c: 1424: if(width
  3945                           ;doprnt.c: 1428: )
  3946  0289  0867               	movf	printf@width,w
  3947  028A  0468               	iorwf	printf@width+1,w
  3948  028B  1903               	btfsc	3,2
  3949  028C  2A9A               	goto	l3181
  3950  028D                     l3177:	
  3951                           ;doprnt.c: 1429: do
  3952                           
  3953                           
  3954                           ;doprnt.c: 1430: (putch(' ') );
  3955  028D  3020               	movlw	32
  3956  028E  318D  2530  3181   	fcall	_putch
  3957                           
  3958                           ;doprnt.c: 1431: while(--width);
  3959  0291  30FF               	movlw	255
  3960  0292  0020               	movlb	0	; select bank0
  3961  0293  07E7               	addwf	printf@width,f
  3962  0294  30FF               	movlw	255
  3963  0295  3DE8               	addwfc	printf@width+1,f
  3964  0296  0867               	movf	printf@width,w
  3965  0297  0468               	iorwf	printf@width+1,w
  3966  0298  1D03               	btfss	3,2
  3967  0299  2A8D               	goto	l3177
  3968  029A                     l3181:	
  3969                           
  3970                           ;doprnt.c: 1469: }
  3971                           ;doprnt.c: 1472: prec = c;
  3972  029A  0869               	movf	printf@c,w
  3973  029B  00DE               	movwf	??_printf
  3974  029C  085E               	movf	??_printf,w
  3975  029D  00E6               	movwf	printf@prec
  3976  029E                     l3187:	
  3977                           ;doprnt.c: 1474: while(prec--) {
  3978                           
  3979  029E  30FF               	movlw	255
  3980  029F  0020               	movlb	0	; select bank0
  3981  02A0  00DE               	movwf	??_printf
  3982  02A1  085E               	movf	??_printf,w
  3983  02A2  07E6               	addwf	printf@prec,f
  3984  02A3  0A66               	incf	printf@prec,w
  3985  02A4  1903               	btfsc	3,2
  3986  02A5  29C3               	goto	l3189
  3987                           
  3988                           ;doprnt.c: 1478: {
  3989                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3990  02A6  300A               	movlw	10
  3991  02A7  00D0               	movwf	___lwmod@divisor
  3992  02A8  3000               	movlw	0
  3993  02A9  00D1               	movwf	___lwmod@divisor+1
  3994  02AA  0866               	movf	printf@prec,w
  3995  02AB  00DE               	movwf	??_printf
  3996  02AC  01DF               	clrf	??_printf+1
  3997  02AD  35DE               	lslf	??_printf,f
  3998  02AE  0DDF               	rlf	??_printf+1,f
  3999  02AF  307C               	movlw	low (_dpowers| (0+32768))
  4000  02B0  075E               	addwf	??_printf,w
  4001  02B1  0084               	movwf	4
  4002  02B2  3080               	movlw	high (_dpowers| (0+32768))
  4003  02B3  3D5F               	addwfc	??_printf+1,w
  4004  02B4  0085               	movwf	5
  4005  02B5  3F00               	moviw [0]fsr0
  4006  02B6  00C8               	movwf	___lwdiv@divisor
  4007  02B7  3F01               	moviw [1]fsr0
  4008  02B8  00C9               	movwf	___lwdiv@divisor+1
  4009  02B9  0865               	movf	printf@val+1,w
  4010  02BA  00CB               	movwf	___lwdiv@dividend+1
  4011  02BB  0864               	movf	printf@val,w
  4012  02BC  00CA               	movwf	___lwdiv@dividend
  4013  02BD  318F  27CB  3181   	fcall	___lwdiv
  4014  02C0  0020               	movlb	0	; select bank0
  4015  02C1  0849               	movf	?___lwdiv+1,w
  4016  02C2  00D3               	movwf	___lwmod@dividend+1
  4017  02C3  0848               	movf	?___lwdiv,w
  4018  02C4  00D2               	movwf	___lwmod@dividend
  4019  02C5  318F  276F  3181   	fcall	___lwmod
  4020  02C8  0020               	movlb	0	; select bank0
  4021  02C9  0850               	movf	?___lwmod,w
  4022  02CA  3E30               	addlw	48
  4023  02CB  00E0               	movwf	??_printf+2
  4024  02CC  0860               	movf	??_printf+2,w
  4025  02CD  00E9               	movwf	printf@c
  4026                           
  4027                           ;doprnt.c: 1523: }
  4028                           ;doprnt.c: 1524: (putch(c) );
  4029  02CE  0869               	movf	printf@c,w
  4030  02CF  318D  2530  3181   	fcall	_putch
  4031  02D2  2A9E               	goto	l3187
  4032  02D3                     l717:	
  4033                           ;doprnt.c: 1540: return 0;
  4034                           ;	Return value of _printf is never used
  4035                           
  4036                           ;doprnt.c: 1525: }
  4037                           ;doprnt.c: 1533: }
  4038                           ;doprnt.c: 1535: alldone:
  4039                           
  4040  02D3  0008               	return
  4041  02D4                     __end_of_printf:	
  4042                           
  4043                           	psect	text2
  4044  0D30                     __ptext2:	
  4045 ;; *************** function _putch *****************
  4046 ;; Defined at:
  4047 ;;		line 64 in file "LCD.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  c               1    wreg     unsigned char 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  c               1    4[BANK0 ] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      void 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0, pclath, cstack
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4061 ;;      Params:         0       0       0       0       0       0
  4062 ;;      Locals:         0       1       0       0       0       0
  4063 ;;      Temps:          0       0       0       0       0       0
  4064 ;;      Totals:         0       1       0       0       0       0
  4065 ;;Total ram usage:        1 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:    4
  4068 ;; This function calls:
  4069 ;;		_LCD_WriteData
  4070 ;; This function is called by:
  4071 ;;		_printf
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           
  4076                           ;psect for function _putch
  4077  0D30                     _putch:	
  4078                           
  4079                           ;incstack = 0
  4080                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4081                           ;putch@c stored from wreg
  4082  0D30  0020               	movlb	0	; select bank0
  4083  0D31  00CB               	movwf	putch@c
  4084                           
  4085                           ;LCD.c: 66: LATA3 = 1;
  4086  0D32  0022               	movlb	2	; select bank2
  4087  0D33  158C               	bsf	12,3	;volatile
  4088                           
  4089                           ;LCD.c: 67: LCD_WriteData(c);
  4090  0D34  0020               	movlb	0	; select bank0
  4091  0D35  084B               	movf	putch@c,w
  4092  0D36  3187  2763         	fcall	_LCD_WriteData
  4093  0D38  0008               	return
  4094  0D39                     __end_of_putch:	
  4095                           
  4096                           	psect	text3
  4097  0DA2                     __ptext3:	
  4098 ;; *************** function _isdigit *****************
  4099 ;; Defined at:
  4100 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/isdigit.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  c               1    wreg     unsigned char 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  c               1    2[BANK0 ] unsigned char 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;		None               void
  4107 ;; Registers used:
  4108 ;;		wreg, status,2, status,0
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4114 ;;      Params:         0       0       0       0       0       0
  4115 ;;      Locals:         0       2       0       0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0
  4117 ;;      Totals:         0       2       0       0       0       0
  4118 ;;Total ram usage:        2 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; Hardware stack levels required when called:    3
  4121 ;; This function calls:
  4122 ;;		Nothing
  4123 ;; This function is called by:
  4124 ;;		_printf
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           
  4129                           ;psect for function _isdigit
  4130  0DA2                     _isdigit:	
  4131                           
  4132                           ;incstack = 0
  4133                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4134                           ;isdigit@c stored from wreg
  4135  0DA2  0020               	movlb	0	; select bank0
  4136  0DA3  00C9               	movwf	isdigit@c
  4137  0DA4  01C8               	clrf	_isdigit$939
  4138  0DA5  303A               	movlw	58
  4139  0DA6  0249               	subwf	isdigit@c,w
  4140  0DA7  1803               	skipnc
  4141  0DA8  2DAF               	goto	l2645
  4142  0DA9  3030               	movlw	48
  4143  0DAA  0249               	subwf	isdigit@c,w
  4144  0DAB  1C03               	skipc
  4145  0DAC  2DAF               	goto	l2645
  4146  0DAD  01C8               	clrf	_isdigit$939
  4147  0DAE  0AC8               	incf	_isdigit$939,f
  4148  0DAF                     l2645:	
  4149  0DAF  0C48               	rrf	_isdigit$939,w
  4150  0DB0  0008               	return
  4151  0DB1                     __end_of_isdigit:	
  4152                           
  4153                           	psect	text4
  4154  0E4B                     __ptext4:	
  4155 ;; *************** function ___wmul *****************
  4156 ;; Defined at:
  4157 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  multiplier      2    1[BANK0 ] unsigned int 
  4160 ;;  multiplicand    2    3[BANK0 ] unsigned int 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  product         2    5[BANK0 ] unsigned int 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  2    1[BANK0 ] unsigned int 
  4165 ;; Registers used:
  4166 ;;		wreg, status,2, status,0
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4172 ;;      Params:         0       4       0       0       0       0
  4173 ;;      Locals:         0       2       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0
  4175 ;;      Totals:         0       6       0       0       0       0
  4176 ;;Total ram usage:        6 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    3
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_printf
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           
  4187                           ;psect for function ___wmul
  4188  0E4B                     ___wmul:	
  4189                           
  4190                           ;incstack = 0
  4191                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4192  0E4B  0020               	movlb	0	; select bank0
  4193  0E4C  01CC               	clrf	___wmul@product
  4194  0E4D  01CD               	clrf	___wmul@product+1
  4195  0E4E                     l2651:	
  4196  0E4E  1C48               	btfss	___wmul@multiplier,0
  4197  0E4F  2E54               	goto	l842
  4198  0E50  084A               	movf	___wmul@multiplicand,w
  4199  0E51  07CC               	addwf	___wmul@product,f
  4200  0E52  084B               	movf	___wmul@multiplicand+1,w
  4201  0E53  3DCD               	addwfc	___wmul@product+1,f
  4202  0E54                     l842:	
  4203  0E54  3001               	movlw	1
  4204  0E55                     u2075:	
  4205  0E55  35CA               	lslf	___wmul@multiplicand,f
  4206  0E56  0DCB               	rlf	___wmul@multiplicand+1,f
  4207  0E57  0B89               	decfsz	9,f
  4208  0E58  2E55               	goto	u2075
  4209  0E59  3001               	movlw	1
  4210  0E5A                     u2085:	
  4211  0E5A  36C9               	lsrf	___wmul@multiplier+1,f
  4212  0E5B  0CC8               	rrf	___wmul@multiplier,f
  4213  0E5C  0B89               	decfsz	9,f
  4214  0E5D  2E5A               	goto	u2085
  4215  0E5E  0848               	movf	___wmul@multiplier,w
  4216  0E5F  0449               	iorwf	___wmul@multiplier+1,w
  4217  0E60  1D03               	btfss	3,2
  4218  0E61  2E4E               	goto	l2651
  4219  0E62  084D               	movf	___wmul@product+1,w
  4220  0E63  00C9               	movwf	?___wmul+1
  4221  0E64  084C               	movf	___wmul@product,w
  4222  0E65  00C8               	movwf	?___wmul
  4223  0E66  0008               	return
  4224  0E67                     __end_of___wmul:	
  4225                           
  4226                           	psect	text5
  4227  0F6F                     __ptext5:	
  4228 ;; *************** function ___lwmod *****************
  4229 ;; Defined at:
  4230 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  divisor         2    9[BANK0 ] unsigned int 
  4233 ;;  dividend        2   11[BANK0 ] unsigned int 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  counter         1   14[BANK0 ] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  2    9[BANK0 ] unsigned int 
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4245 ;;      Params:         0       4       0       0       0       0
  4246 ;;      Locals:         0       1       0       0       0       0
  4247 ;;      Temps:          0       1       0       0       0       0
  4248 ;;      Totals:         0       6       0       0       0       0
  4249 ;;Total ram usage:        6 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    3
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_printf
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           
  4260                           ;psect for function ___lwmod
  4261  0F6F                     ___lwmod:	
  4262                           
  4263                           ;incstack = 0
  4264                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4265  0F6F  0020               	movlb	0	; select bank0
  4266  0F70  0850               	movf	___lwmod@divisor,w
  4267  0F71  0451               	iorwf	___lwmod@divisor+1,w
  4268  0F72  1903               	btfsc	3,2
  4269  0F73  2F97               	goto	l2731
  4270  0F74  01D5               	clrf	___lwmod@counter
  4271  0F75  0AD5               	incf	___lwmod@counter,f
  4272  0F76                     l2721:	
  4273  0F76  1BD1               	btfsc	___lwmod@divisor+1,7
  4274  0F77  2F82               	goto	l2723
  4275  0F78  3001               	movlw	1
  4276  0F79                     u2255:	
  4277  0F79  35D0               	lslf	___lwmod@divisor,f
  4278  0F7A  0DD1               	rlf	___lwmod@divisor+1,f
  4279  0F7B  0B89               	decfsz	9,f
  4280  0F7C  2F79               	goto	u2255
  4281  0F7D  3001               	movlw	1
  4282  0F7E  00D4               	movwf	??___lwmod
  4283  0F7F  0854               	movf	??___lwmod,w
  4284  0F80  07D5               	addwf	___lwmod@counter,f
  4285  0F81  2F76               	goto	l2721
  4286  0F82                     l2723:	
  4287  0F82  0851               	movf	___lwmod@divisor+1,w
  4288  0F83  0253               	subwf	___lwmod@dividend+1,w
  4289  0F84  1D03               	skipz
  4290  0F85  2F88               	goto	u2275
  4291  0F86  0850               	movf	___lwmod@divisor,w
  4292  0F87  0252               	subwf	___lwmod@dividend,w
  4293  0F88                     u2275:	
  4294  0F88  1C03               	skipc
  4295  0F89  2F8E               	goto	l2727
  4296  0F8A  0850               	movf	___lwmod@divisor,w
  4297  0F8B  02D2               	subwf	___lwmod@dividend,f
  4298  0F8C  0851               	movf	___lwmod@divisor+1,w
  4299  0F8D  3BD3               	subwfb	___lwmod@dividend+1,f
  4300  0F8E                     l2727:	
  4301  0F8E  3001               	movlw	1
  4302  0F8F                     u2285:	
  4303  0F8F  36D1               	lsrf	___lwmod@divisor+1,f
  4304  0F90  0CD0               	rrf	___lwmod@divisor,f
  4305  0F91  0B89               	decfsz	9,f
  4306  0F92  2F8F               	goto	u2285
  4307  0F93  3001               	movlw	1
  4308  0F94  02D5               	subwf	___lwmod@counter,f
  4309  0F95  1D03               	btfss	3,2
  4310  0F96  2F82               	goto	l2723
  4311  0F97                     l2731:	
  4312  0F97  0853               	movf	___lwmod@dividend+1,w
  4313  0F98  00D1               	movwf	?___lwmod+1
  4314  0F99  0852               	movf	___lwmod@dividend,w
  4315  0F9A  00D0               	movwf	?___lwmod
  4316  0F9B  0008               	return
  4317  0F9C                     __end_of___lwmod:	
  4318                           
  4319                           	psect	text6
  4320  0FCB                     __ptext6:	
  4321 ;; *************** function ___lwdiv *****************
  4322 ;; Defined at:
  4323 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  divisor         2    1[BANK0 ] unsigned int 
  4326 ;;  dividend        2    3[BANK0 ] unsigned int 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  quotient        2    6[BANK0 ] unsigned int 
  4329 ;;  counter         1    8[BANK0 ] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  2    1[BANK0 ] unsigned int 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4339 ;;      Params:         0       4       0       0       0       0
  4340 ;;      Locals:         0       3       0       0       0       0
  4341 ;;      Temps:          0       1       0       0       0       0
  4342 ;;      Totals:         0       8       0       0       0       0
  4343 ;;Total ram usage:        8 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    3
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_printf
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           
  4354                           ;psect for function ___lwdiv
  4355  0FCB                     ___lwdiv:	
  4356                           
  4357                           ;incstack = 0
  4358                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4359  0FCB  0020               	movlb	0	; select bank0
  4360  0FCC  01CD               	clrf	___lwdiv@quotient
  4361  0FCD  01CE               	clrf	___lwdiv@quotient+1
  4362  0FCE  0848               	movf	___lwdiv@divisor,w
  4363  0FCF  0449               	iorwf	___lwdiv@divisor+1,w
  4364  0FD0  1903               	btfsc	3,2
  4365  0FD1  2FFB               	goto	l2709
  4366  0FD2  01CF               	clrf	___lwdiv@counter
  4367  0FD3  0ACF               	incf	___lwdiv@counter,f
  4368  0FD4                     l2697:	
  4369  0FD4  1BC9               	btfsc	___lwdiv@divisor+1,7
  4370  0FD5  2FE0               	goto	l2699
  4371  0FD6  3001               	movlw	1
  4372  0FD7                     u2185:	
  4373  0FD7  35C8               	lslf	___lwdiv@divisor,f
  4374  0FD8  0DC9               	rlf	___lwdiv@divisor+1,f
  4375  0FD9  0B89               	decfsz	9,f
  4376  0FDA  2FD7               	goto	u2185
  4377  0FDB  3001               	movlw	1
  4378  0FDC  00CC               	movwf	??___lwdiv
  4379  0FDD  084C               	movf	??___lwdiv,w
  4380  0FDE  07CF               	addwf	___lwdiv@counter,f
  4381  0FDF  2FD4               	goto	l2697
  4382  0FE0                     l2699:	
  4383  0FE0  3001               	movlw	1
  4384  0FE1                     u2205:	
  4385  0FE1  35CD               	lslf	___lwdiv@quotient,f
  4386  0FE2  0DCE               	rlf	___lwdiv@quotient+1,f
  4387  0FE3  0B89               	decfsz	9,f
  4388  0FE4  2FE1               	goto	u2205
  4389  0FE5  0849               	movf	___lwdiv@divisor+1,w
  4390  0FE6  024B               	subwf	___lwdiv@dividend+1,w
  4391  0FE7  1D03               	skipz
  4392  0FE8  2FEB               	goto	u2215
  4393  0FE9  0848               	movf	___lwdiv@divisor,w
  4394  0FEA  024A               	subwf	___lwdiv@dividend,w
  4395  0FEB                     u2215:	
  4396  0FEB  1C03               	skipc
  4397  0FEC  2FF2               	goto	l2705
  4398  0FED  0848               	movf	___lwdiv@divisor,w
  4399  0FEE  02CA               	subwf	___lwdiv@dividend,f
  4400  0FEF  0849               	movf	___lwdiv@divisor+1,w
  4401  0FF0  3BCB               	subwfb	___lwdiv@dividend+1,f
  4402  0FF1  144D               	bsf	___lwdiv@quotient,0
  4403  0FF2                     l2705:	
  4404  0FF2  3001               	movlw	1
  4405  0FF3                     u2225:	
  4406  0FF3  36C9               	lsrf	___lwdiv@divisor+1,f
  4407  0FF4  0CC8               	rrf	___lwdiv@divisor,f
  4408  0FF5  0B89               	decfsz	9,f
  4409  0FF6  2FF3               	goto	u2225
  4410  0FF7  3001               	movlw	1
  4411  0FF8  02CF               	subwf	___lwdiv@counter,f
  4412  0FF9  1D03               	btfss	3,2
  4413  0FFA  2FE0               	goto	l2699
  4414  0FFB                     l2709:	
  4415  0FFB  084E               	movf	___lwdiv@quotient+1,w
  4416  0FFC  00C9               	movwf	?___lwdiv+1
  4417  0FFD  084D               	movf	___lwdiv@quotient,w
  4418  0FFE  00C8               	movwf	?___lwdiv
  4419  0FFF  0008               	return
  4420  1000                     __end_of___lwdiv:	
  4421                           
  4422                           	psect	text7
  4423  0E06                     __ptext7:	
  4424 ;; *************** function _mTouch_Init *****************
  4425 ;; Defined at:
  4426 ;;		line 12 in file "mTouch.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0, pclath, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4440 ;;      Params:         0       0       0       0       0       0
  4441 ;;      Locals:         0       0       0       0       0       0
  4442 ;;      Temps:          0       1       0       0       0       0
  4443 ;;      Totals:         0       1       0       0       0       0
  4444 ;;Total ram usage:        1 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    4
  4447 ;; This function calls:
  4448 ;;		_mTouch_PortInit
  4449 ;; This function is called by:
  4450 ;;		_main
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           
  4455                           ;psect for function _mTouch_Init
  4456  0E06                     _mTouch_Init:	
  4457                           
  4458                           ;mTouch.c: 14: mTouch_PortInit();
  4459                           
  4460                           ;incstack = 0
  4461                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4462  0E06  318D  2587         	fcall	_mTouch_PortInit
  4463                           
  4464                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4465  0E08  0021               	movlb	1	; select bank1
  4466  0E09  0815               	movf	21,w	;volatile
  4467                           
  4468                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4469  0E0A  1595               	bsf	21,3	;volatile
  4470                           
  4471                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4472  0E0B  1695               	bsf	21,5	;volatile
  4473                           
  4474                           ;mTouch.c: 20: TMR0 = 0x00;
  4475  0E0C  0020               	movlb	0	; select bank0
  4476  0E0D  0195               	clrf	21	;volatile
  4477                           
  4478                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4479  0E0E  141E               	bsf	30,0	;volatile
  4480                           
  4481                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4482  0E0F  300C               	movlw	12
  4483  0E10  00C9               	movwf	??_mTouch_Init
  4484  0E11  0849               	movf	??_mTouch_Init,w
  4485  0E12  049E               	iorwf	30,f	;volatile
  4486                           
  4487                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4488  0E13  307F               	movlw	127
  4489  0E14  00C9               	movwf	??_mTouch_Init
  4490  0E15  0849               	movf	??_mTouch_Init,w
  4491  0E16  059E               	andwf	30,f	;volatile
  4492                           
  4493                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4494  0E17  019F               	clrf	31	;volatile
  4495  0E18  0008               	return
  4496  0E19                     __end_of_mTouch_Init:	
  4497                           
  4498                           	psect	text8
  4499  0D87                     __ptext8:	
  4500 ;; *************** function _mTouch_PortInit *****************
  4501 ;; Defined at:
  4502 ;;		line 6 in file "mTouch.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;		None
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;		None
  4507 ;; Return value:  Size  Location     Type
  4508 ;;                  1    wreg      void 
  4509 ;; Registers used:
  4510 ;;		wreg, status,2, status,0
  4511 ;; Tracked objects:
  4512 ;;		On entry : 0/0
  4513 ;;		On exit  : 0/0
  4514 ;;		Unchanged: 0/0
  4515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4516 ;;      Params:         0       0       0       0       0       0
  4517 ;;      Locals:         0       0       0       0       0       0
  4518 ;;      Temps:          0       1       0       0       0       0
  4519 ;;      Totals:         0       1       0       0       0       0
  4520 ;;Total ram usage:        1 bytes
  4521 ;; Hardware stack levels used:    1
  4522 ;; Hardware stack levels required when called:    3
  4523 ;; This function calls:
  4524 ;;		Nothing
  4525 ;; This function is called by:
  4526 ;;		_mTouch_Init
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           
  4531                           ;psect for function _mTouch_PortInit
  4532  0D87                     _mTouch_PortInit:	
  4533                           
  4534                           ;mTouch.c: 8: TRISA |= (0x07);
  4535                           
  4536                           ;incstack = 0
  4537                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4538  0D87  3007               	movlw	7
  4539  0D88  0020               	movlb	0	; select bank0
  4540  0D89  00C8               	movwf	??_mTouch_PortInit
  4541  0D8A  0848               	movf	??_mTouch_PortInit,w
  4542  0D8B  0021               	movlb	1	; select bank1
  4543  0D8C  048C               	iorwf	12,f	;volatile
  4544                           
  4545                           ;mTouch.c: 9: ANSELA |= (0x07);
  4546  0D8D  3007               	movlw	7
  4547  0D8E  0020               	movlb	0	; select bank0
  4548  0D8F  00C8               	movwf	??_mTouch_PortInit
  4549  0D90  0848               	movf	??_mTouch_PortInit,w
  4550  0D91  0023               	movlb	3	; select bank3
  4551  0D92  048C               	iorwf	12,f	;volatile
  4552  0D93  0008               	return
  4553  0D94                     __end_of_mTouch_PortInit:	
  4554                           
  4555                           	psect	text9
  4556  0697                     __ptext9:	
  4557 ;; *************** function _mTouch_Check *****************
  4558 ;; Defined at:
  4559 ;;		line 118 in file "main.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  chan            1    wreg     unsigned char 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  chan            1    8[BANK0 ] unsigned char 
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      unsigned char 
  4566 ;; Registers used:
  4567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4573 ;;      Params:         0       0       0       0       0       0
  4574 ;;      Locals:         0       1       0       0       0       0
  4575 ;;      Temps:          0       5       0       0       0       0
  4576 ;;      Totals:         0       6       0       0       0       0
  4577 ;;Total ram usage:        6 bytes
  4578 ;; Hardware stack levels used:    1
  4579 ;; Hardware stack levels required when called:    4
  4580 ;; This function calls:
  4581 ;;		_Buzzer_MiliSecond
  4582 ;; This function is called by:
  4583 ;;		_main
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           
  4588                           ;psect for function _mTouch_Check
  4589  0697                     _mTouch_Check:	
  4590                           
  4591                           ;incstack = 0
  4592                           ; Regs used in _mTouch_Check: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4593                           ;mTouch_Check@chan stored from wreg
  4594  0697  0020               	movlb	0	; select bank0
  4595  0698  00CF               	movwf	mTouch_Check@chan
  4596                           
  4597                           ;main.c: 120: if(chan>2)return 0;
  4598  0699  3003               	movlw	3
  4599  069A  024F               	subwf	mTouch_Check@chan,w
  4600  069B  1C03               	skipc
  4601  069C  2E9F               	goto	l3111
  4602  069D  3000               	movlw	0
  4603  069E  0008               	return
  4604  069F                     l3111:	
  4605                           
  4606                           ;main.c: 122: if(((CPS_PreData[chan]-CPS_Data[chan])>200)&&!mTouch_Interval[chan])
  4607  069F  084F               	movf	mTouch_Check@chan,w
  4608  06A0  3E37               	addlw	(low (_CPS_Data| 0))& (0+255)
  4609  06A1  0086               	movwf	6
  4610  06A2  0187               	clrf	7
  4611  06A3  0801               	movf	1,w
  4612  06A4  00CA               	movwf	??_mTouch_Check
  4613  06A5  01CB               	clrf	??_mTouch_Check+1
  4614  06A6  09CA               	comf	??_mTouch_Check,f
  4615  06A7  09CB               	comf	??_mTouch_Check+1,f
  4616  06A8  0ACA               	incf	??_mTouch_Check,f
  4617  06A9  1903               	skipnz
  4618  06AA  0ACB               	incf	??_mTouch_Check+1,f
  4619  06AB  084F               	movf	mTouch_Check@chan,w
  4620  06AC  3E3A               	addlw	(low (_CPS_PreData| 0))& (0+255)
  4621  06AD  0086               	movwf	6
  4622  06AE  0187               	clrf	7
  4623  06AF  0801               	movf	1,w
  4624  06B0  074A               	addwf	??_mTouch_Check,w
  4625  06B1  00CC               	movwf	??_mTouch_Check+2
  4626  06B2  084B               	movf	??_mTouch_Check+1,w
  4627  06B3  1803               	skipnc
  4628  06B4  0A4B               	incf	??_mTouch_Check+1,w
  4629  06B5  00CD               	movwf	??_mTouch_Check+3
  4630  06B6  084D               	movf	??_mTouch_Check+3,w
  4631  06B7  3A80               	xorlw	128
  4632  06B8  00CE               	movwf	??_mTouch_Check+4
  4633  06B9  3080               	movlw	128
  4634  06BA  024E               	subwf	??_mTouch_Check+4,w
  4635  06BB  1D03               	skipz
  4636  06BC  2EBF               	goto	u2655
  4637  06BD  30C9               	movlw	201
  4638  06BE  024C               	subwf	??_mTouch_Check+2,w
  4639  06BF                     u2655:	
  4640  06BF  1C03               	skipc
  4641  06C0  2ED9               	goto	l3123
  4642  06C1  0020               	movlb	0	; select bank0
  4643  06C2  084F               	movf	mTouch_Check@chan,w
  4644  06C3  3E34               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4645  06C4  0086               	movwf	6
  4646  06C5  0187               	clrf	7
  4647  06C6  0801               	movf	1,w
  4648  06C7  1D03               	btfss	3,2
  4649  06C8  2ED9               	goto	l3123
  4650                           
  4651                           ;main.c: 123: {
  4652                           ;main.c: 124: mTouch_Interval[chan] = 100;
  4653  06C9  3064               	movlw	100
  4654  06CA  00CA               	movwf	??_mTouch_Check
  4655  06CB  084F               	movf	mTouch_Check@chan,w
  4656  06CC  3E34               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  4657  06CD  0086               	movwf	6
  4658  06CE  0187               	clrf	7
  4659  06CF  084A               	movf	??_mTouch_Check,w
  4660  06D0  0081               	movwf	1
  4661                           
  4662                           ;main.c: 125: Buzzer_MiliSecond(100);
  4663  06D1  3064               	movlw	100
  4664  06D2  00C8               	movwf	Buzzer_MiliSecond@time
  4665  06D3  3000               	movlw	0
  4666  06D4  00C9               	movwf	Buzzer_MiliSecond@time+1
  4667  06D5  318D  254D         	fcall	_Buzzer_MiliSecond
  4668                           
  4669                           ;main.c: 126: return 1;
  4670  06D7  3001               	movlw	1
  4671  06D8  0008               	return
  4672  06D9                     l3123:	
  4673                           
  4674                           ;main.c: 127: }
  4675                           ;main.c: 128: return 0;
  4676  06D9  3000               	movlw	0
  4677  06DA  0008               	return
  4678  06DB                     __end_of_mTouch_Check:	
  4679                           
  4680                           	psect	text10
  4681  0D4D                     __ptext10:	
  4682 ;; *************** function _Buzzer_MiliSecond *****************
  4683 ;; Defined at:
  4684 ;;		line 38 in file "Buzzer.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  time            2    1[BANK0 ] unsigned int 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg, status,2, status,0
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4698 ;;      Params:         0       2       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0
  4701 ;;      Totals:         0       2       0       0       0       0
  4702 ;;Total ram usage:        2 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    3
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_mTouch_Check
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           
  4713                           ;psect for function _Buzzer_MiliSecond
  4714  0D4D                     _Buzzer_MiliSecond:	
  4715                           
  4716                           ;Buzzer.c: 40: if(count==0)
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  4720  0D4D  0020               	movlb	0	; select bank0
  4721  0D4E  0841               	movf	_count,w
  4722  0D4F  0442               	iorwf	_count+1,w
  4723  0D50  1D03               	btfss	3,2
  4724  0D51  0008               	return
  4725                           
  4726                           ;Buzzer.c: 41: count = time;
  4727  0D52  0849               	movf	Buzzer_MiliSecond@time+1,w
  4728  0D53  00C2               	movwf	_count+1
  4729  0D54  0848               	movf	Buzzer_MiliSecond@time,w
  4730  0D55  00C1               	movwf	_count
  4731  0D56  0008               	return
  4732  0D57                     __end_of_Buzzer_MiliSecond:	
  4733                           
  4734                           	psect	text11
  4735  0DF3                     __ptext11:	
  4736 ;; *************** function _Timer6_Init *****************
  4737 ;; Defined at:
  4738 ;;		line 3 in file "Timer6.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4752 ;;      Params:         0       0       0       0       0       0
  4753 ;;      Locals:         0       0       0       0       0       0
  4754 ;;      Temps:          0       1       0       0       0       0
  4755 ;;      Totals:         0       1       0       0       0       0
  4756 ;;Total ram usage:        1 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    3
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_main
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function _Timer6_Init
  4768  0DF3                     _Timer6_Init:	
  4769                           
  4770                           ;Timer6.c: 5: PR6 = 0x7D;
  4771                           
  4772                           ;incstack = 0
  4773                           ; Regs used in _Timer6_Init: [wreg+status,2+status,0]
  4774  0DF3  307D               	movlw	125
  4775  0DF4  0028               	movlb	8	; select bank8
  4776  0DF5  009D               	movwf	29	;volatile
  4777                           
  4778                           ;Timer6.c: 6: TMR6 = 0x00;
  4779  0DF6  019C               	clrf	28	;volatile
  4780                           
  4781                           ;Timer6.c: 7: T6CON |= (0x03<<0);
  4782  0DF7  3003               	movlw	3
  4783  0DF8  0020               	movlb	0	; select bank0
  4784  0DF9  00C8               	movwf	??_Timer6_Init
  4785  0DFA  0848               	movf	??_Timer6_Init,w
  4786  0DFB  0028               	movlb	8	; select bank8
  4787  0DFC  049E               	iorwf	30,f	;volatile
  4788                           
  4789                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  4790  0DFD  081E               	movf	30,w	;volatile
  4791                           
  4792                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  4793  0DFE  151E               	bsf	30,2	;volatile
  4794                           
  4795                           ;Timer6.c: 11: TMR6IF = 0;
  4796  0DFF  0020               	movlb	0	; select bank0
  4797  0E00  1193               	bcf	19,3	;volatile
  4798                           
  4799                           ;Timer6.c: 12: TMR6IE = 1;
  4800  0E01  0021               	movlb	1	; select bank1
  4801  0E02  1593               	bsf	19,3	;volatile
  4802                           
  4803                           ;Timer6.c: 13: PEIE = 1;
  4804  0E03  170B               	bsf	11,6	;volatile
  4805                           
  4806                           ;Timer6.c: 14: GIE = 1;
  4807  0E04  178B               	bsf	11,7	;volatile
  4808  0E05  0008               	return
  4809  0E06                     __end_of_Timer6_Init:	
  4810                           
  4811                           	psect	text12
  4812  0D94                     __ptext12:	
  4813 ;; *************** function _Timer4_Init *****************
  4814 ;; Defined at:
  4815 ;;		line 3 in file "Timer4.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;		None
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;		None
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4829 ;;      Params:         0       0       0       0       0       0
  4830 ;;      Locals:         0       0       0       0       0       0
  4831 ;;      Temps:          0       0       0       0       0       0
  4832 ;;      Totals:         0       0       0       0       0       0
  4833 ;;Total ram usage:        0 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:    3
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_main
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           
  4844                           ;psect for function _Timer4_Init
  4845  0D94                     _Timer4_Init:	
  4846                           
  4847                           ;Timer4.c: 5: PR4 = 0x64;
  4848                           
  4849                           ;incstack = 0
  4850                           ; Regs used in _Timer4_Init: [wreg+status,2]
  4851  0D94  3064               	movlw	100
  4852  0D95  0028               	movlb	8	; select bank8
  4853  0D96  0096               	movwf	22	;volatile
  4854                           
  4855                           ;Timer4.c: 6: TMR4 = 0x00;
  4856  0D97  0195               	clrf	21	;volatile
  4857                           
  4858                           ;Timer4.c: 7: T4CON |= (0x02<<0);
  4859  0D98  1497               	bsf	23,1	;volatile
  4860                           
  4861                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  4862  0D99  0817               	movf	23,w	;volatile
  4863                           
  4864                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  4865  0D9A  1517               	bsf	23,2	;volatile
  4866                           
  4867                           ;Timer4.c: 11: TMR4IF = 0;
  4868  0D9B  0020               	movlb	0	; select bank0
  4869  0D9C  1093               	bcf	19,1	;volatile
  4870                           
  4871                           ;Timer4.c: 12: TMR4IE = 1;
  4872  0D9D  0021               	movlb	1	; select bank1
  4873  0D9E  1493               	bsf	19,1	;volatile
  4874                           
  4875                           ;Timer4.c: 13: PEIE = 1;
  4876  0D9F  170B               	bsf	11,6	;volatile
  4877                           
  4878                           ;Timer4.c: 14: GIE = 1;
  4879  0DA0  178B               	bsf	11,7	;volatile
  4880  0DA1  0008               	return
  4881  0DA2                     __end_of_Timer4_Init:	
  4882                           
  4883                           	psect	text13
  4884  0D13                     __ptext13:	
  4885 ;; *************** function _Timer1_StartCount *****************
  4886 ;; Defined at:
  4887 ;;		line 31 in file "Timer1.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0, pclath, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4901 ;;      Params:         0       0       0       0       0       0
  4902 ;;      Locals:         0       0       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0
  4904 ;;      Totals:         0       0       0       0       0       0
  4905 ;;Total ram usage:        0 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    4
  4908 ;; This function calls:
  4909 ;;		_Timer1_ClearRecord
  4910 ;; This function is called by:
  4911 ;;		_main
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           
  4916                           ;psect for function _Timer1_StartCount
  4917  0D13                     _Timer1_StartCount:	
  4918                           
  4919                           ;Timer1.c: 33: Timer1_ClearRecord();
  4920                           
  4921                           ;incstack = 0
  4922                           ; Regs used in _Timer1_StartCount: [wreg+status,2+status,0+pclath+cstack]
  4923  0D13  318E  26F2         	fcall	_Timer1_ClearRecord
  4924                           
  4925                           ;Timer1.c: 34: TMR1ON = 1;
  4926  0D15  0020               	movlb	0	; select bank0
  4927  0D16  1418               	bsf	24,0	;volatile
  4928  0D17  0008               	return
  4929  0D18                     __end_of_Timer1_StartCount:	
  4930                           
  4931                           	psect	text14
  4932  0EF2                     __ptext14:	
  4933 ;; *************** function _Timer1_ClearRecord *****************
  4934 ;; Defined at:
  4935 ;;		line 42 in file "Timer1.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		wreg
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4949 ;;      Params:         0       0       0       0       0       0
  4950 ;;      Locals:         0       0       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0       0
  4952 ;;      Totals:         0       0       0       0       0       0
  4953 ;;Total ram usage:        0 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    3
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_Timer1_StartCount
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           
  4964                           ;psect for function _Timer1_ClearRecord
  4965  0EF2                     _Timer1_ClearRecord:	
  4966                           
  4967                           ;Timer1.c: 44: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 100UL; TMR1ON = 1; };
  4968                           
  4969                           ;incstack = 0
  4970                           ; Regs used in _Timer1_ClearRecord: [wreg]
  4971  0EF2  0020               	movlb	0	; select bank0
  4972  0EF3  1018               	bcf	24,0	;volatile
  4973  0EF4  30FF               	movlw	255
  4974  0EF5  0097               	movwf	23	;volatile
  4975  0EF6  309B               	movlw	155
  4976  0EF7  0096               	movwf	22	;volatile
  4977  0EF8  1418               	bsf	24,0	;volatile
  4978                           
  4979                           ;Timer1.c: 45: cnts.SigmaDeltaCount= 0;
  4980  0EF9  3000               	movlw	0
  4981  0EFA  00A3               	movwf	_cnts+3
  4982  0EFB  3000               	movlw	0
  4983  0EFC  00A2               	movwf	_cnts+2
  4984  0EFD  3000               	movlw	0
  4985  0EFE  00A1               	movwf	_cnts+1
  4986  0EFF  3000               	movlw	0
  4987  0F00  00A0               	movwf	_cnts
  4988                           
  4989                           ;Timer1.c: 46: cnts.SigmaCPM = 0;
  4990  0F01  3000               	movlw	0
  4991  0F02  00A7               	movwf	_cnts+7
  4992  0F03  3000               	movlw	0
  4993  0F04  00A6               	movwf	_cnts+6
  4994  0F05  3000               	movlw	0
  4995  0F06  00A5               	movwf	_cnts+5
  4996  0F07  3000               	movlw	0
  4997  0F08  00A4               	movwf	_cnts+4
  4998                           
  4999                           ;Timer1.c: 47: cnts.Num_of_Detect = 0;
  5000  0F09  3000               	movlw	0
  5001  0F0A  00AD               	movwf	_cnts+13
  5002  0F0B  3000               	movlw	0
  5003  0F0C  00AC               	movwf	_cnts+12
  5004  0F0D  3000               	movlw	0
  5005  0F0E  00AB               	movwf	_cnts+11
  5006  0F0F  3000               	movlw	0
  5007  0F10  00AA               	movwf	_cnts+10
  5008                           
  5009                           ;Timer1.c: 48: tcnt.Delta_t = 0;
  5010  0F11  3000               	movlw	0
  5011  0F12  00B1               	movwf	_tcnt+3
  5012  0F13  3000               	movlw	0
  5013  0F14  00B0               	movwf	_tcnt+2
  5014  0F15  3000               	movlw	0
  5015  0F16  00AF               	movwf	_tcnt+1
  5016  0F17  3000               	movlw	0
  5017  0F18  00AE               	movwf	_tcnt
  5018  0F19  0008               	return
  5019  0F1A                     __end_of_Timer1_ClearRecord:	
  5020                           
  5021                           	psect	text15
  5022  07DC                     __ptext15:	
  5023 ;; *************** function _Timer1_Init *****************
  5024 ;; Defined at:
  5025 ;;		line 6 in file "Timer1.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      void 
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5039 ;;      Params:         0       0       0       0       0       0
  5040 ;;      Locals:         0       0       0       0       0       0
  5041 ;;      Temps:          0       1       0       0       0       0
  5042 ;;      Totals:         0       1       0       0       0       0
  5043 ;;Total ram usage:        1 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    3
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_main
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function _Timer1_Init
  5055  07DC                     _Timer1_Init:	
  5056                           
  5057                           ;Timer1.c: 8: TRISB |= (1<<6);
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  5061  07DC  0021               	movlb	1	; select bank1
  5062  07DD  170D               	bsf	13,6	;volatile
  5063                           
  5064                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  5065  07DE  30BF               	movlw	191
  5066  07DF  0020               	movlb	0	; select bank0
  5067  07E0  00C8               	movwf	??_Timer1_Init
  5068  07E1  0848               	movf	??_Timer1_Init,w
  5069  07E2  0023               	movlb	3	; select bank3
  5070  07E3  058D               	andwf	13,f	;volatile
  5071                           
  5072                           ;Timer1.c: 10: WPUB |= (1<<6);
  5073  07E4  0024               	movlb	4	; select bank4
  5074  07E5  170D               	bsf	13,6	;volatile
  5075                           
  5076                           ;Timer1.c: 12: T1CON |= (0x01<<2);
  5077  07E6  0020               	movlb	0	; select bank0
  5078  07E7  1518               	bsf	24,2	;volatile
  5079                           
  5080                           ;Timer1.c: 13: T1CON &= ~(0x01<<3);
  5081  07E8  30F7               	movlw	247
  5082  07E9  00C8               	movwf	??_Timer1_Init
  5083  07EA  0848               	movf	??_Timer1_Init,w
  5084  07EB  0598               	andwf	24,f	;volatile
  5085                           
  5086                           ;Timer1.c: 14: T1CON |= (0x00<<4);
  5087  07EC  0818               	movf	24,w	;volatile
  5088                           
  5089                           ;Timer1.c: 15: T1CON |= (0x02<<6);
  5090  07ED  1798               	bsf	24,7	;volatile
  5091                           
  5092                           ;Timer1.c: 17: T1GCON = 0x00;
  5093  07EE  0199               	clrf	25	;volatile
  5094                           
  5095                           ;Timer1.c: 19: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 100UL; TMR1ON = 1; };
  5096  07EF  1018               	bcf	24,0	;volatile
  5097  07F0  30FF               	movlw	255
  5098  07F1  0097               	movwf	23	;volatile
  5099  07F2  309B               	movlw	155
  5100  07F3  0096               	movwf	22	;volatile
  5101  07F4  1418               	bsf	24,0	;volatile
  5102                           
  5103                           ;Timer1.c: 21: TMR1IF = 0;
  5104  07F5  1011               	bcf	17,0	;volatile
  5105                           
  5106                           ;Timer1.c: 22: TMR1IE = 1;
  5107  07F6  0021               	movlb	1	; select bank1
  5108  07F7  1411               	bsf	17,0	;volatile
  5109                           
  5110                           ;Timer1.c: 23: PEIE = 1;
  5111  07F8  170B               	bsf	11,6	;volatile
  5112                           
  5113                           ;Timer1.c: 24: GIE = 1;
  5114  07F9  178B               	bsf	11,7	;volatile
  5115                           
  5116                           ;Timer1.c: 26: TMR1ON = 0;
  5117  07FA  0020               	movlb	0	; select bank0
  5118  07FB  1018               	bcf	24,0	;volatile
  5119  07FC  0008               	return
  5120  07FD                     __end_of_Timer1_Init:	
  5121                           
  5122                           	psect	text16
  5123  0D43                     __ptext16:	
  5124 ;; *************** function _Timer1_GetCountSum *****************
  5125 ;; Defined at:
  5126 ;;		line 51 in file "Timer1.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  4    1[BANK0 ] unsigned long 
  5133 ;; Registers used:
  5134 ;;		wreg
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5140 ;;      Params:         0       4       0       0       0       0
  5141 ;;      Locals:         0       0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0
  5143 ;;      Totals:         0       4       0       0       0       0
  5144 ;;Total ram usage:        4 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    3
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_main
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           
  5155                           ;psect for function _Timer1_GetCountSum
  5156  0D43                     _Timer1_GetCountSum:	
  5157                           
  5158                           ;Timer1.c: 53: return cnts.SigmaDeltaCount;
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in _Timer1_GetCountSum: [wreg]
  5162  0D43  0020               	movlb	0	; select bank0
  5163  0D44  0823               	movf	_cnts+3,w
  5164  0D45  00CB               	movwf	?_Timer1_GetCountSum+3
  5165  0D46  0822               	movf	_cnts+2,w
  5166  0D47  00CA               	movwf	?_Timer1_GetCountSum+2
  5167  0D48  0821               	movf	_cnts+1,w
  5168  0D49  00C9               	movwf	?_Timer1_GetCountSum+1
  5169  0D4A  0820               	movf	_cnts,w
  5170  0D4B  00C8               	movwf	?_Timer1_GetCountSum
  5171  0D4C  0008               	return
  5172  0D4D                     __end_of_Timer1_GetCountSum:	
  5173                           
  5174                           	psect	text17
  5175  0D1E                     __ptext17:	
  5176 ;; *************** function _Timer1_GetCPM *****************
  5177 ;; Defined at:
  5178 ;;		line 56 in file "Timer1.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;		None
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;		None
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  2    1[BANK0 ] unsigned int 
  5185 ;; Registers used:
  5186 ;;		wreg
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5192 ;;      Params:         0       2       0       0       0       0
  5193 ;;      Locals:         0       0       0       0       0       0
  5194 ;;      Temps:          0       0       0       0       0       0
  5195 ;;      Totals:         0       2       0       0       0       0
  5196 ;;Total ram usage:        2 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:    3
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_main
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           
  5207                           ;psect for function _Timer1_GetCPM
  5208  0D1E                     _Timer1_GetCPM:	
  5209                           
  5210                           ;Timer1.c: 58: return cnts.AverageCPM;
  5211                           
  5212                           ;incstack = 0
  5213                           ; Regs used in _Timer1_GetCPM: [wreg]
  5214  0D1E  0020               	movlb	0	; select bank0
  5215  0D1F  0829               	movf	_cnts+9,w
  5216  0D20  00C9               	movwf	?_Timer1_GetCPM+1
  5217  0D21  0828               	movf	_cnts+8,w
  5218  0D22  00C8               	movwf	?_Timer1_GetCPM
  5219  0D23  0008               	return
  5220  0D24                     __end_of_Timer1_GetCPM:	
  5221                           
  5222                           	psect	text18
  5223  052E                     __ptext18:	
  5224 ;; *************** function _LCD_Init *****************
  5225 ;; Defined at:
  5226 ;;		line 28 in file "LCD.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      void 
  5233 ;; Registers used:
  5234 ;;		wreg, status,2, status,0, pclath, cstack
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5240 ;;      Params:         0       0       0       0       0       0
  5241 ;;      Locals:         0       0       0       0       0       0
  5242 ;;      Temps:          0       2       0       0       0       0
  5243 ;;      Totals:         0       2       0       0       0       0
  5244 ;;Total ram usage:        2 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    5
  5247 ;; This function calls:
  5248 ;;		_LCD_DisplayClear
  5249 ;;		_LCD_WriteData
  5250 ;; This function is called by:
  5251 ;;		_main
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function _LCD_Init
  5257  052E                     _LCD_Init:	
  5258                           
  5259                           ;LCD.c: 30: LATA3 = 0;
  5260                           
  5261                           ;incstack = 0
  5262                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5263  052E  0022               	movlb	2	; select bank2
  5264  052F  118C               	bcf	12,3	;volatile
  5265                           
  5266                           ;LCD.c: 31: LATA4 = 0;
  5267  0530  120C               	bcf	12,4	;volatile
  5268                           
  5269                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  5270  0531  3002               	movlw	2
  5271  0532  0020               	movlb	0	; select bank0
  5272  0533  00CD               	movwf	??_LCD_Init+1
  5273  0534  3038               	movlw	56
  5274  0535  00CC               	movwf	??_LCD_Init
  5275  0536  30AD               	movlw	173
  5276  0537                     u2937:	
  5277  0537  0B89               	decfsz	9,f
  5278  0538  2D37               	goto	u2937
  5279  0539  0BCC               	decfsz	??_LCD_Init,f
  5280  053A  2D37               	goto	u2937
  5281  053B  0BCD               	decfsz	??_LCD_Init+1,f
  5282  053C  2D37               	goto	u2937
  5283                           
  5284                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  5285  053D  3003               	movlw	3
  5286  053E  0020               	movlb	0	; select bank0
  5287  053F  008D               	movwf	13	;volatile
  5288                           
  5289                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5290  0540  0022               	movlb	2	; select bank2
  5291  0541  160C               	bsf	12,4	;volatile
  5292  0542  3200               	nop2	;2 cycle nop
  5293  0543  3200               	nop2	;2 cycle nop
  5294  0544  3200               	nop2	;2 cycle nop
  5295  0545  3200               	nop2	;2 cycle nop
  5296  0546  0022               	movlb	2	; select bank2
  5297  0547  120C               	bcf	12,4	;volatile
  5298  0548  3200               	nop2	;2 cycle nop
  5299  0549  3200               	nop2	;2 cycle nop
  5300  054A  3200               	nop2	;2 cycle nop
  5301  054B  3200               	nop2	;2 cycle nop
  5302                           
  5303                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  5304  054C  3034               	movlw	52
  5305  054D  0020               	movlb	0	; select bank0
  5306  054E  00CC               	movwf	??_LCD_Init
  5307  054F  30F1               	movlw	241
  5308  0550                     u2947:	
  5309  0550  0B89               	decfsz	9,f
  5310  0551  2D50               	goto	u2947
  5311  0552  0BCC               	decfsz	??_LCD_Init,f
  5312  0553  2D50               	goto	u2947
  5313  0554  3200               	nop2
  5314                           
  5315                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5316  0555  0022               	movlb	2	; select bank2
  5317  0556  160C               	bsf	12,4	;volatile
  5318  0557  3200               	nop2	;2 cycle nop
  5319  0558  3200               	nop2	;2 cycle nop
  5320  0559  3200               	nop2	;2 cycle nop
  5321  055A  3200               	nop2	;2 cycle nop
  5322  055B  0022               	movlb	2	; select bank2
  5323  055C  120C               	bcf	12,4	;volatile
  5324  055D  3200               	nop2	;2 cycle nop
  5325  055E  3200               	nop2	;2 cycle nop
  5326  055F  3200               	nop2	;2 cycle nop
  5327  0560  3200               	nop2	;2 cycle nop
  5328                           
  5329                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5330  0561  3005               	movlw	5
  5331  0562  0020               	movlb	0	; select bank0
  5332  0563  00CC               	movwf	??_LCD_Init
  5333  0564  3026               	movlw	38
  5334  0565                     u2957:	
  5335  0565  0B89               	decfsz	9,f
  5336  0566  2D65               	goto	u2957
  5337  0567  0BCC               	decfsz	??_LCD_Init,f
  5338  0568  2D65               	goto	u2957
  5339  0569  0000               	nop
  5340                           
  5341                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5342  056A  0022               	movlb	2	; select bank2
  5343  056B  160C               	bsf	12,4	;volatile
  5344  056C  3200               	nop2	;2 cycle nop
  5345  056D  3200               	nop2	;2 cycle nop
  5346  056E  3200               	nop2	;2 cycle nop
  5347  056F  3200               	nop2	;2 cycle nop
  5348  0570  0022               	movlb	2	; select bank2
  5349  0571  120C               	bcf	12,4	;volatile
  5350  0572  3200               	nop2	;2 cycle nop
  5351  0573  3200               	nop2	;2 cycle nop
  5352  0574  3200               	nop2	;2 cycle nop
  5353  0575  3200               	nop2	;2 cycle nop
  5354                           
  5355                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  5356  0576  3005               	movlw	5
  5357  0577  0020               	movlb	0	; select bank0
  5358  0578  00CC               	movwf	??_LCD_Init
  5359  0579  3026               	movlw	38
  5360  057A                     u2967:	
  5361  057A  0B89               	decfsz	9,f
  5362  057B  2D7A               	goto	u2967
  5363  057C  0BCC               	decfsz	??_LCD_Init,f
  5364  057D  2D7A               	goto	u2967
  5365  057E  0000               	nop
  5366                           
  5367                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  5368  057F  3002               	movlw	2
  5369  0580  0020               	movlb	0	; select bank0
  5370  0581  008D               	movwf	13	;volatile
  5371                           
  5372                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5373  0582  0022               	movlb	2	; select bank2
  5374  0583  160C               	bsf	12,4	;volatile
  5375  0584  3200               	nop2	;2 cycle nop
  5376  0585  3200               	nop2	;2 cycle nop
  5377  0586  3200               	nop2	;2 cycle nop
  5378  0587  3200               	nop2	;2 cycle nop
  5379  0588  0022               	movlb	2	; select bank2
  5380  0589  120C               	bcf	12,4	;volatile
  5381  058A  3200               	nop2	;2 cycle nop
  5382  058B  3200               	nop2	;2 cycle nop
  5383  058C  3200               	nop2	;2 cycle nop
  5384  058D  3200               	nop2	;2 cycle nop
  5385                           
  5386                           ;LCD.c: 44: LCD_WriteData(0x28);
  5387  058E  3028               	movlw	40
  5388  058F  3187  2763  3185   	fcall	_LCD_WriteData
  5389                           
  5390                           ;LCD.c: 45: LCD_WriteData(0x0c);
  5391  0592  300C               	movlw	12
  5392  0593  3187  2763  3185   	fcall	_LCD_WriteData
  5393                           
  5394                           ;LCD.c: 46: LCD_DisplayClear();
  5395  0596  318D  25C1  3185   	fcall	_LCD_DisplayClear
  5396                           
  5397                           ;LCD.c: 47: LCD_WriteData(0x06);
  5398  0599  3006               	movlw	6
  5399  059A  3187  2763         	fcall	_LCD_WriteData
  5400  059C  0008               	return
  5401  059D                     __end_of_LCD_Init:	
  5402                           
  5403                           	psect	text19
  5404  0DC1                     __ptext19:	
  5405 ;; *************** function _LCD_DisplayClear *****************
  5406 ;; Defined at:
  5407 ;;		line 73 in file "LCD.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;		None
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;		None
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  1    wreg      void 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0, pclath, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5421 ;;      Params:         0       0       0       0       0       0
  5422 ;;      Locals:         0       0       0       0       0       0
  5423 ;;      Temps:          0       1       0       0       0       0
  5424 ;;      Totals:         0       1       0       0       0       0
  5425 ;;Total ram usage:        1 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:    4
  5428 ;; This function calls:
  5429 ;;		_LCD_WriteData
  5430 ;; This function is called by:
  5431 ;;		_LCD_Init
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           
  5436                           ;psect for function _LCD_DisplayClear
  5437  0DC1                     _LCD_DisplayClear:	
  5438                           
  5439                           ;LCD.c: 75: LATA3 = 0;
  5440                           
  5441                           ;incstack = 0
  5442                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  5443  0DC1  0022               	movlb	2	; select bank2
  5444  0DC2  118C               	bcf	12,3	;volatile
  5445                           
  5446                           ;LCD.c: 76: LCD_WriteData(0x01);
  5447  0DC3  3001               	movlw	1
  5448  0DC4  3187  2763  318D   	fcall	_LCD_WriteData
  5449                           
  5450                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  5451  0DC7  3015               	movlw	21
  5452  0DC8  0020               	movlb	0	; select bank0
  5453  0DC9  00CB               	movwf	??_LCD_DisplayClear
  5454  0DCA  30C6               	movlw	198
  5455  0DCB                     u2977:	
  5456  0DCB  0B89               	decfsz	9,f
  5457  0DCC  2DCB               	goto	u2977
  5458  0DCD  0BCB               	decfsz	??_LCD_DisplayClear,f
  5459  0DCE  2DCB               	goto	u2977
  5460  0DCF  0000               	nop
  5461  0DD0  0008               	return
  5462  0DD1                     __end_of_LCD_DisplayClear:	
  5463                           
  5464                           	psect	text20
  5465  0DB1                     __ptext20:	
  5466 ;; *************** function _LCD_CursorHome *****************
  5467 ;; Defined at:
  5468 ;;		line 84 in file "LCD.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;		None
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		wreg, status,2, status,0, pclath, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5482 ;;      Params:         0       0       0       0       0       0
  5483 ;;      Locals:         0       0       0       0       0       0
  5484 ;;      Temps:          0       1       0       0       0       0
  5485 ;;      Totals:         0       1       0       0       0       0
  5486 ;;Total ram usage:        1 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    4
  5489 ;; This function calls:
  5490 ;;		_LCD_WriteData
  5491 ;; This function is called by:
  5492 ;;		_main
  5493 ;; This function uses a non-reentrant model
  5494 ;;
  5495                           
  5496                           
  5497                           ;psect for function _LCD_CursorHome
  5498  0DB1                     _LCD_CursorHome:	
  5499                           
  5500                           ;LCD.c: 86: LATA3 = 0;
  5501                           
  5502                           ;incstack = 0
  5503                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  5504  0DB1  0022               	movlb	2	; select bank2
  5505  0DB2  118C               	bcf	12,3	;volatile
  5506                           
  5507                           ;LCD.c: 87: LCD_WriteData(0x02);
  5508  0DB3  3002               	movlw	2
  5509  0DB4  3187  2763  318D   	fcall	_LCD_WriteData
  5510                           
  5511                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  5512  0DB7  3015               	movlw	21
  5513  0DB8  0020               	movlb	0	; select bank0
  5514  0DB9  00CB               	movwf	??_LCD_CursorHome
  5515  0DBA  30C6               	movlw	198
  5516  0DBB                     u2987:	
  5517  0DBB  0B89               	decfsz	9,f
  5518  0DBC  2DBB               	goto	u2987
  5519  0DBD  0BCB               	decfsz	??_LCD_CursorHome,f
  5520  0DBE  2DBB               	goto	u2987
  5521  0DBF  0000               	nop
  5522  0DC0  0008               	return
  5523  0DC1                     __end_of_LCD_CursorHome:	
  5524                           
  5525                           	psect	text21
  5526  0763                     __ptext21:	
  5527 ;; *************** function _LCD_WriteData *****************
  5528 ;; Defined at:
  5529 ;;		line 15 in file "LCD.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  point           1    wreg     char 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;  point           1    3[BANK0 ] char 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1    wreg      void 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5543 ;;      Params:         0       0       0       0       0       0
  5544 ;;      Locals:         0       1       0       0       0       0
  5545 ;;      Temps:          0       2       0       0       0       0
  5546 ;;      Totals:         0       3       0       0       0       0
  5547 ;;Total ram usage:        3 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    3
  5550 ;; This function calls:
  5551 ;;		Nothing
  5552 ;; This function is called by:
  5553 ;;		_LCD_Init
  5554 ;;		_putch
  5555 ;;		_LCD_DisplayClear
  5556 ;;		_LCD_CursorHome
  5557 ;;		_LCD_Put
  5558 ;;		_LCD_CursorPosition
  5559 ;;		_LCD_CursorShift
  5560 ;;		_LCD_DispShift
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           
  5565                           ;psect for function _LCD_WriteData
  5566  0763                     _LCD_WriteData:	
  5567                           
  5568                           ;incstack = 0
  5569                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  5570                           ;LCD_WriteData@point stored from wreg
  5571  0763  0020               	movlb	0	; select bank0
  5572  0764  00CA               	movwf	LCD_WriteData@point
  5573                           
  5574                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  5575  0765  30D5               	movlw	213
  5576  0766                     u2997:	
  5577  0766  0B89               	decfsz	9,f
  5578  0767  2F66               	goto	u2997
  5579  0768  0000               	nop
  5580                           
  5581                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  5582  0769  0020               	movlb	0	; select bank0
  5583  076A  084A               	movf	LCD_WriteData@point,w
  5584  076B  00C8               	movwf	??_LCD_WriteData
  5585  076C  3004               	movlw	4
  5586  076D                     u1795:	
  5587  076D  1003               	clrc
  5588  076E  1BC8               	btfsc	??_LCD_WriteData,7
  5589  076F  1403               	setc
  5590  0770  0CC8               	rrf	??_LCD_WriteData,f
  5591  0771  0B89               	decfsz	9,f
  5592  0772  2F6D               	goto	u1795
  5593  0773  3003               	movlw	3
  5594  0774  0548               	andwf	??_LCD_WriteData,w
  5595  0775  00C9               	movwf	??_LCD_WriteData+1
  5596  0776  0E4A               	swapf	LCD_WriteData@point,w
  5597  0777  390F               	andlw	15
  5598  0778  1989               	btfsc	9,3
  5599  0779  38F0               	iorlw	240
  5600  077A  390C               	andlw	12
  5601  077B  0709               	addwf	9,w
  5602  077C  0449               	iorwf	??_LCD_WriteData+1,w
  5603  077D  008D               	movwf	13	;volatile
  5604                           
  5605                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5606  077E  0022               	movlb	2	; select bank2
  5607  077F  160C               	bsf	12,4	;volatile
  5608  0780  3200               	nop2	;2 cycle nop
  5609  0781  3200               	nop2	;2 cycle nop
  5610  0782  3200               	nop2	;2 cycle nop
  5611  0783  3200               	nop2	;2 cycle nop
  5612  0784  0022               	movlb	2	; select bank2
  5613  0785  120C               	bcf	12,4	;volatile
  5614  0786  3200               	nop2	;2 cycle nop
  5615  0787  3200               	nop2	;2 cycle nop
  5616  0788  3200               	nop2	;2 cycle nop
  5617  0789  3200               	nop2	;2 cycle nop
  5618                           
  5619                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  5620  078A  3003               	movlw	3
  5621  078B  0020               	movlb	0	; select bank0
  5622  078C  054A               	andwf	LCD_WriteData@point,w
  5623  078D  00C8               	movwf	??_LCD_WriteData
  5624  078E  084A               	movf	LCD_WriteData@point,w
  5625  078F  390C               	andlw	12
  5626  0790  0709               	addwf	9,w
  5627  0791  0448               	iorwf	??_LCD_WriteData,w
  5628  0792  008D               	movwf	13	;volatile
  5629                           
  5630                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  5631  0793  0022               	movlb	2	; select bank2
  5632  0794  160C               	bsf	12,4	;volatile
  5633  0795  3200               	nop2	;2 cycle nop
  5634  0796  3200               	nop2	;2 cycle nop
  5635  0797  3200               	nop2	;2 cycle nop
  5636  0798  3200               	nop2	;2 cycle nop
  5637  0799  0022               	movlb	2	; select bank2
  5638  079A  120C               	bcf	12,4	;volatile
  5639  079B  3200               	nop2	;2 cycle nop
  5640  079C  3200               	nop2	;2 cycle nop
  5641  079D  3200               	nop2	;2 cycle nop
  5642  079E  3200               	nop2	;2 cycle nop
  5643  079F  0008               	return
  5644  07A0                     __end_of_LCD_WriteData:	
  5645                           
  5646                           	psect	text22
  5647  0F9C                     __ptext22:	
  5648 ;; *************** function _DAC_WriteVoltage *****************
  5649 ;; Defined at:
  5650 ;;		line 27 in file "MCP4726.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  volue           2   17[BANK0 ] unsigned int 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;		None
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      char 
  5657 ;; Registers used:
  5658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5664 ;;      Params:         0       2       0       0       0       0
  5665 ;;      Locals:         0       0       0       0       0       0
  5666 ;;      Temps:          0       3       0       0       0       0
  5667 ;;      Totals:         0       5       0       0       0       0
  5668 ;;Total ram usage:        5 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:    5
  5671 ;; This function calls:
  5672 ;;		_I2C_Transmit
  5673 ;; This function is called by:
  5674 ;;		_main
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           
  5679                           ;psect for function _DAC_WriteVoltage
  5680  0F9C                     _DAC_WriteVoltage:	
  5681                           
  5682                           ;MCP4726.c: 29: VoltageReg.Command = (uint8_t)(0x0);
  5683                           
  5684                           ;incstack = 0
  5685                           ; Regs used in _DAC_WriteVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5686  0F9C  303F               	movlw	-193
  5687  0F9D  0020               	movlb	0	; select bank0
  5688  0F9E  05C4               	andwf	_VoltageReg,f
  5689                           
  5690                           ;MCP4726.c: 30: VoltageReg.PowerDown = ConfigReg.PowerDown;
  5691  0F9F  0C46               	rrf	_ConfigReg,w
  5692  0FA0  3903               	andlw	3
  5693  0FA1  00DA               	movwf	??_DAC_WriteVoltage
  5694  0FA2  0EDA               	swapf	??_DAC_WriteVoltage,f
  5695  0FA3  0844               	movf	_VoltageReg,w
  5696  0FA4  065A               	xorwf	??_DAC_WriteVoltage,w
  5697  0FA5  39CF               	andlw	-49
  5698  0FA6  065A               	xorwf	??_DAC_WriteVoltage,w
  5699  0FA7  00C4               	movwf	_VoltageReg
  5700                           
  5701                           ;MCP4726.c: 31: VoltageReg.Voltage4bits = (uint8_t)((volue&0x0F00)>>8);
  5702  0FA8  0859               	movf	DAC_WriteVoltage@volue+1,w
  5703  0FA9  00DB               	movwf	??_DAC_WriteVoltage+1
  5704  0FAA  0858               	movf	DAC_WriteVoltage@volue,w
  5705  0FAB  00DA               	movwf	??_DAC_WriteVoltage
  5706  0FAC  085B               	movf	??_DAC_WriteVoltage+1,w
  5707  0FAD  00DA               	movwf	??_DAC_WriteVoltage
  5708  0FAE  01DB               	clrf	??_DAC_WriteVoltage+1
  5709  0FAF  300F               	movlw	15
  5710  0FB0  055A               	andwf	??_DAC_WriteVoltage,w
  5711  0FB1  00DC               	movwf	??_DAC_WriteVoltage+2
  5712  0FB2  0844               	movf	_VoltageReg,w
  5713  0FB3  065C               	xorwf	??_DAC_WriteVoltage+2,w
  5714  0FB4  39F0               	andlw	-16
  5715  0FB5  065C               	xorwf	??_DAC_WriteVoltage+2,w
  5716  0FB6  00C4               	movwf	_VoltageReg
  5717                           
  5718                           ;MCP4726.c: 32: VoltageReg.Voltage8bits = (uint8_t)(volue&0x00FF);
  5719  0FB7  0858               	movf	DAC_WriteVoltage@volue,w
  5720  0FB8  00DA               	movwf	??_DAC_WriteVoltage
  5721  0FB9  085A               	movf	??_DAC_WriteVoltage,w
  5722  0FBA  00C5               	movwf	_VoltageReg+1
  5723                           
  5724                           ;MCP4726.c: 34: return I2C_Transmit(I2C2_MODULE,0x60,VoltageReg.Voltage_Data,2);
  5725                           ;	Return value of _DAC_WriteVoltage is never used
  5726  0FBB  3060               	movlw	96
  5727  0FBC  00DA               	movwf	??_DAC_WriteVoltage
  5728  0FBD  085A               	movf	??_DAC_WriteVoltage,w
  5729  0FBE  00D0               	movwf	I2C_Transmit@address
  5730  0FBF  3044               	movlw	(low (_VoltageReg| 0))& (0+255)
  5731  0FC0  00DB               	movwf	??_DAC_WriteVoltage+1
  5732  0FC1  085B               	movf	??_DAC_WriteVoltage+1,w
  5733  0FC2  00D1               	movwf	I2C_Transmit@pData
  5734  0FC3  3002               	movlw	2
  5735  0FC4  00DC               	movwf	??_DAC_WriteVoltage+2
  5736  0FC5  085C               	movf	??_DAC_WriteVoltage+2,w
  5737  0FC6  00D2               	movwf	I2C_Transmit@size
  5738  0FC7  3001               	movlw	1
  5739  0FC8  318F  2744         	fcall	_I2C_Transmit
  5740  0FCA  0008               	return
  5741  0FCB                     __end_of_DAC_WriteVoltage:	
  5742                           
  5743                           	psect	text23
  5744  0E85                     __ptext23:	
  5745 ;; *************** function _DAC_Initialize *****************
  5746 ;; Defined at:
  5747 ;;		line 14 in file "MCP4726.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;		None
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;		None
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5761 ;;      Params:         0       0       0       0       0       0
  5762 ;;      Locals:         0       0       0       0       0       0
  5763 ;;      Temps:          0       2       0       0       0       0
  5764 ;;      Totals:         0       2       0       0       0       0
  5765 ;;Total ram usage:        2 bytes
  5766 ;; Hardware stack levels used:    1
  5767 ;; Hardware stack levels required when called:    6
  5768 ;; This function calls:
  5769 ;;		_I2C_Init
  5770 ;;		_I2C_Transmit
  5771 ;; This function is called by:
  5772 ;;		_main
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           
  5777                           ;psect for function _DAC_Initialize
  5778  0E85                     _DAC_Initialize:	
  5779                           
  5780                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  5781                           
  5782                           ;incstack = 0
  5783                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5784  0E85  0020               	movlb	0	; select bank0
  5785  0E86  01CD               	clrf	I2C_Init@address
  5786  0E87  01CE               	clrf	I2C_Init@mode
  5787  0E88  01CF               	clrf	I2C_Init@Speed
  5788  0E89  3001               	movlw	1
  5789  0E8A  318F  271A  318E   	fcall	_I2C_Init
  5790                           
  5791                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  5792  0E8D  0020               	movlb	0	; select bank0
  5793  0E8E  0846               	movf	_ConfigReg,w
  5794  0E8F  391F               	andlw	-225
  5795  0E90  3880               	iorlw	128
  5796  0E91  00C6               	movwf	_ConfigReg
  5797                           
  5798                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  5799  0E92  1046               	bcf	_ConfigReg,0
  5800                           
  5801                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  5802  0E93  30F9               	movlw	-7
  5803  0E94  05C6               	andwf	_ConfigReg,f
  5804                           
  5805                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  5806  0E95  30E7               	movlw	-25
  5807  0E96  05C6               	andwf	_ConfigReg,f
  5808                           
  5809                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  5810  0E97  3060               	movlw	96
  5811  0E98  00D8               	movwf	??_DAC_Initialize
  5812  0E99  0858               	movf	??_DAC_Initialize,w
  5813  0E9A  00D0               	movwf	I2C_Transmit@address
  5814  0E9B  3046               	movlw	(low (_ConfigReg| 0))& (0+255)
  5815  0E9C  00D9               	movwf	??_DAC_Initialize+1
  5816  0E9D  0859               	movf	??_DAC_Initialize+1,w
  5817  0E9E  00D1               	movwf	I2C_Transmit@pData
  5818  0E9F  01D2               	clrf	I2C_Transmit@size
  5819  0EA0  0AD2               	incf	I2C_Transmit@size,f
  5820  0EA1  3001               	movlw	1
  5821  0EA2  318F  2744         	fcall	_I2C_Transmit
  5822  0EA4  0008               	return
  5823  0EA5                     __end_of_DAC_Initialize:	
  5824                           
  5825                           	psect	text24
  5826  0F44                     __ptext24:	
  5827 ;; *************** function _I2C_Transmit *****************
  5828 ;; Defined at:
  5829 ;;		line 23 in file "I2C_Common.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  I2Cx            1    wreg     enum E3178
  5832 ;;  address         1    9[BANK0 ] unsigned char 
  5833 ;;  pData           1   10[BANK0 ] PTR unsigned char 
  5834 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5835 ;;  size            1   11[BANK0 ] unsigned char 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  I2Cx            1   15[BANK0 ] enum E3178
  5838 ;;  result          1   16[BANK0 ] char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      char 
  5841 ;; Registers used:
  5842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5848 ;;      Params:         0       3       0       0       0       0
  5849 ;;      Locals:         0       2       0       0       0       0
  5850 ;;      Temps:          0       3       0       0       0       0
  5851 ;;      Totals:         0       8       0       0       0       0
  5852 ;;Total ram usage:        8 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    4
  5855 ;; This function calls:
  5856 ;;		_I2C1_Transmit
  5857 ;;		_I2C2_Transmit
  5858 ;; This function is called by:
  5859 ;;		_DAC_Initialize
  5860 ;;		_DAC_WriteVoltage
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           
  5865                           ;psect for function _I2C_Transmit
  5866  0F44                     _I2C_Transmit:	
  5867                           
  5868                           ;incstack = 0
  5869                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5870                           ;I2C_Transmit@I2Cx stored from wreg
  5871  0F44  0020               	movlb	0	; select bank0
  5872  0F45  00D6               	movwf	I2C_Transmit@I2Cx
  5873                           
  5874                           ;I2C_Common.c: 25: int8_t result;
  5875                           ;I2C_Common.c: 27: switch(I2Cx)
  5876  0F46  2F65               	goto	l2615
  5877  0F47                     l2609:	
  5878                           ;I2C_Common.c: 28: {
  5879                           ;I2C_Common.c: 29: case I2C1_MODULE:
  5880                           
  5881                           
  5882                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  5883  0F47  0851               	movf	I2C_Transmit@pData,w
  5884  0F48  00D3               	movwf	??_I2C_Transmit
  5885  0F49  0853               	movf	??_I2C_Transmit,w
  5886  0F4A  00C8               	movwf	I2C1_Transmit@pData
  5887  0F4B  0852               	movf	I2C_Transmit@size,w
  5888  0F4C  00D4               	movwf	??_I2C_Transmit+1
  5889  0F4D  0854               	movf	??_I2C_Transmit+1,w
  5890  0F4E  00C9               	movwf	I2C1_Transmit@size
  5891  0F4F  0850               	movf	I2C_Transmit@address,w
  5892  0F50  3183  236C  318F   	fcall	_I2C1_Transmit
  5893  0F53  2F60               	goto	L1
  5894  0F54                     l2611:	
  5895                           ;I2C_Common.c: 33: case I2C2_MODULE:
  5896                           
  5897                           ;I2C_Common.c: 31: break;
  5898                           
  5899                           
  5900                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  5901  0F54  0851               	movf	I2C_Transmit@pData,w
  5902  0F55  00D3               	movwf	??_I2C_Transmit
  5903  0F56  0853               	movf	??_I2C_Transmit,w
  5904  0F57  00C8               	movwf	I2C2_Transmit@pData
  5905  0F58  0852               	movf	I2C_Transmit@size,w
  5906  0F59  00D4               	movwf	??_I2C_Transmit+1
  5907  0F5A  0854               	movf	??_I2C_Transmit+1,w
  5908  0F5B  00C9               	movwf	I2C2_Transmit@size
  5909  0F5C  0850               	movf	I2C_Transmit@address,w
  5910  0F5D  3182  22D4  318F   	fcall	_I2C2_Transmit
  5911  0F60                     L1:	
  5912  0F60  0020               	movlb	0	; select bank0
  5913  0F61  00D5               	movwf	??_I2C_Transmit+2
  5914  0F62  0855               	movf	??_I2C_Transmit+2,w
  5915  0F63  00D7               	movwf	I2C_Transmit@result
  5916                           
  5917                           ;I2C_Common.c: 36: }
  5918                           
  5919                           ;I2C_Common.c: 35: break;
  5920  0F64  2F6D               	goto	l2617
  5921  0F65                     l2615:	
  5922  0F65  0856               	movf	I2C_Transmit@I2Cx,w
  5923                           
  5924                           ; Switch size 1, requested type "space"
  5925                           ; Number of cases is 2, Range of values is 0 to 1
  5926                           ; switch strategies available:
  5927                           ; Name         Instructions Cycles
  5928                           ; simple_byte            7     4 (average)
  5929                           ; direct_byte           10     6 (fixed)
  5930                           ; jumptable            260     6 (fixed)
  5931                           ;	Chosen strategy is simple_byte
  5932  0F66  3A00               	xorlw	0	; case 0
  5933  0F67  1903               	skipnz
  5934  0F68  2F47               	goto	l2609
  5935  0F69  3A01               	xorlw	1	; case 1
  5936  0F6A  1903               	skipnz
  5937  0F6B  2F54               	goto	l2611
  5938  0F6C  2F6D               	goto	l2617
  5939  0F6D                     l2617:	
  5940                           
  5941                           ;I2C_Common.c: 37: return result;
  5942  0F6D  0857               	movf	I2C_Transmit@result,w
  5943  0F6E  0008               	return
  5944  0F6F                     __end_of_I2C_Transmit:	
  5945                           
  5946                           	psect	text25
  5947  02D4                     __ptext25:	
  5948 ;; *************** function _I2C2_Transmit *****************
  5949 ;; Defined at:
  5950 ;;		line 52 in file "I2C2.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;  address         1    wreg     unsigned char 
  5953 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  5954 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5955 ;;  size            1    2[BANK0 ] unsigned char 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  address         1    5[BANK0 ] unsigned char 
  5958 ;;  i               1    7[BANK0 ] unsigned char 
  5959 ;;  i               1    6[BANK0 ] unsigned char 
  5960 ;;  result          1    8[BANK0 ] char 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1    wreg      char 
  5963 ;; Registers used:
  5964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5970 ;;      Params:         0       2       0       0       0       0
  5971 ;;      Locals:         0       4       0       0       0       0
  5972 ;;      Temps:          0       2       0       0       0       0
  5973 ;;      Totals:         0       8       0       0       0       0
  5974 ;;Total ram usage:        8 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    3
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		_I2C_Transmit
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           
  5985                           ;psect for function _I2C2_Transmit
  5986  02D4                     _I2C2_Transmit:	
  5987                           
  5988                           ;incstack = 0
  5989                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  5990                           ;I2C2_Transmit@address stored from wreg
  5991  02D4  0020               	movlb	0	; select bank0
  5992  02D5  00CC               	movwf	I2C2_Transmit@address
  5993                           
  5994                           ;I2C2.c: 54: int8_t result = 0;
  5995  02D6  01CF               	clrf	I2C2_Transmit@result
  5996                           
  5997                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  5998  02D7  2B60               	goto	l2459
  5999  02D8                     l2415:	
  6000                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6001                           
  6002                           ;I2C2.c: 57: {
  6003                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  6004                           
  6005  02D8  3005               	movlw	5
  6006  02D9  0024               	movlb	4	; select bank4
  6007  02DA  051C               	andwf	28,w	;volatile
  6008  02DB  0020               	movlb	0	; select bank0
  6009  02DC  00CA               	movwf	??_I2C2_Transmit
  6010  02DD  0024               	movlb	4	; select bank4
  6011  02DE  081E               	movf	30,w	;volatile
  6012  02DF  391F               	andlw	31
  6013  02E0  0020               	movlb	0	; select bank0
  6014  02E1  044A               	iorwf	??_I2C2_Transmit,w
  6015  02E2  1D03               	btfss	3,2
  6016  02E3  2AD8               	goto	l2415
  6017                           
  6018                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  6019  02E4  0024               	movlb	4	; select bank4
  6020  02E5  141E               	bsf	30,0	;volatile
  6021  02E6                     l2417:	
  6022                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6023                           
  6024  02E6  3005               	movlw	5
  6025  02E7  0024               	movlb	4	; select bank4
  6026  02E8  051C               	andwf	28,w	;volatile
  6027  02E9  0020               	movlb	0	; select bank0
  6028  02EA  00CA               	movwf	??_I2C2_Transmit
  6029  02EB  0024               	movlb	4	; select bank4
  6030  02EC  081E               	movf	30,w	;volatile
  6031  02ED  391F               	andlw	31
  6032  02EE  0020               	movlb	0	; select bank0
  6033  02EF  044A               	iorwf	??_I2C2_Transmit,w
  6034  02F0  1D03               	btfss	3,2
  6035  02F1  2AE6               	goto	l2417
  6036                           
  6037                           ;I2C2.c: 63: SSP2BUF = address << 1;
  6038  02F2  354C               	lslf	I2C2_Transmit@address,w
  6039  02F3  0024               	movlb	4	; select bank4
  6040  02F4  0099               	movwf	25	;volatile
  6041  02F5                     l228:	
  6042                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  6043                           
  6044  02F5  191C               	btfsc	28,2	;volatile
  6045  02F6  2AF5               	goto	l228
  6046                           
  6047                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  6048  02F7  3000               	movlw	0
  6049  02F8  1B1E               	btfsc	30,6	;volatile
  6050  02F9  3001               	movlw	1
  6051  02FA  0020               	movlb	0	; select bank0
  6052  02FB  00CF               	movwf	I2C2_Transmit@result
  6053                           
  6054                           ;I2C2.c: 67: if (!result)
  6055  02FC  084F               	movf	I2C2_Transmit@result,w
  6056  02FD  1D03               	btfss	3,2
  6057  02FE  2B2C               	goto	l2441
  6058                           
  6059                           ;I2C2.c: 68: {
  6060                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  6061  02FF  01CD               	clrf	I2C2_Transmit@i
  6062  0300  2B05               	goto	l2439
  6063  0301                     l2437:	
  6064                           ;I2C2.c: 79: break;
  6065                           
  6066  0301  3001               	movlw	1
  6067  0302  00CA               	movwf	??_I2C2_Transmit
  6068  0303  084A               	movf	??_I2C2_Transmit,w
  6069  0304  07CD               	addwf	I2C2_Transmit@i,f
  6070  0305                     l2439:	
  6071  0305  0849               	movf	I2C2_Transmit@size,w
  6072  0306  024D               	subwf	I2C2_Transmit@i,w
  6073  0307  1803               	btfsc	3,0
  6074  0308  2B2C               	goto	l2441
  6075  0309                     l2427:	
  6076                           ;I2C2.c: 70: {
  6077                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6078                           
  6079  0309  3005               	movlw	5
  6080  030A  0024               	movlb	4	; select bank4
  6081  030B  051C               	andwf	28,w	;volatile
  6082  030C  0020               	movlb	0	; select bank0
  6083  030D  00CA               	movwf	??_I2C2_Transmit
  6084  030E  0024               	movlb	4	; select bank4
  6085  030F  081E               	movf	30,w	;volatile
  6086  0310  391F               	andlw	31
  6087  0311  0020               	movlb	0	; select bank0
  6088  0312  044A               	iorwf	??_I2C2_Transmit,w
  6089  0313  1D03               	btfss	3,2
  6090  0314  2B09               	goto	l2427
  6091                           
  6092                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  6093  0315  084D               	movf	I2C2_Transmit@i,w
  6094  0316  0748               	addwf	I2C2_Transmit@pData,w
  6095  0317  00CA               	movwf	??_I2C2_Transmit
  6096  0318  084A               	movf	??_I2C2_Transmit,w
  6097  0319  0086               	movwf	6
  6098  031A  0187               	clrf	7
  6099  031B  0801               	movf	1,w
  6100  031C  0024               	movlb	4	; select bank4
  6101  031D  0099               	movwf	25	;volatile
  6102  031E                     l237:	
  6103                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  6104                           
  6105  031E  191C               	btfsc	28,2	;volatile
  6106  031F  2B1E               	goto	l237
  6107                           
  6108                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  6109  0320  3000               	movlw	0
  6110  0321  1B1E               	btfsc	30,6	;volatile
  6111  0322  3001               	movlw	1
  6112  0323  0020               	movlb	0	; select bank0
  6113  0324  00CF               	movwf	I2C2_Transmit@result
  6114                           
  6115                           ;I2C2.c: 76: if (result)
  6116  0325  084F               	movf	I2C2_Transmit@result,w
  6117  0326  1903               	btfsc	3,2
  6118  0327  2B01               	goto	l2437
  6119                           
  6120                           ;I2C2.c: 77: {
  6121                           ;I2C2.c: 78: result = 2;
  6122  0328  3002               	movlw	2
  6123  0329  00CA               	movwf	??_I2C2_Transmit
  6124  032A  084A               	movf	??_I2C2_Transmit,w
  6125  032B  00CF               	movwf	I2C2_Transmit@result
  6126  032C                     l2441:	
  6127                           ;I2C2.c: 80: }
  6128                           ;I2C2.c: 81: }
  6129                           ;I2C2.c: 82: }
  6130                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  6131                           
  6132  032C  3005               	movlw	5
  6133  032D  0024               	movlb	4	; select bank4
  6134  032E  051C               	andwf	28,w	;volatile
  6135  032F  0020               	movlb	0	; select bank0
  6136  0330  00CA               	movwf	??_I2C2_Transmit
  6137  0331  0024               	movlb	4	; select bank4
  6138  0332  081E               	movf	30,w	;volatile
  6139  0333  391F               	andlw	31
  6140  0334  0020               	movlb	0	; select bank0
  6141  0335  044A               	iorwf	??_I2C2_Transmit,w
  6142  0336  1D03               	btfss	3,2
  6143  0337  2B2C               	goto	l2441
  6144                           
  6145                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  6146  0338  0024               	movlb	4	; select bank4
  6147  0339  151E               	bsf	30,2	;volatile
  6148                           
  6149                           ;I2C2.c: 86: break;
  6150  033A  2B69               	goto	l2461
  6151  033B                     l246:	
  6152                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  6153                           
  6154                           
  6155                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  6156  033B  0024               	movlb	4	; select bank4
  6157  033C  1D9C               	btfss	28,3	;volatile
  6158  033D  1E1C               	btfss	28,4	;volatile
  6159  033E  2B5D               	goto	l2455
  6160                           
  6161                           ;I2C2.c: 90: {
  6162                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  6163  033F  0020               	movlb	0	; select bank0
  6164  0340  01CE               	clrf	I2C2_Transmit@i_316
  6165  0341                     l2451:	
  6166  0341  0849               	movf	I2C2_Transmit@size,w
  6167  0342  024E               	subwf	I2C2_Transmit@i_316,w
  6168  0343  1803               	btfsc	3,0
  6169  0344  2B58               	goto	l2453
  6170                           
  6171                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  6172  0345  084E               	movf	I2C2_Transmit@i_316,w
  6173  0346  0748               	addwf	I2C2_Transmit@pData,w
  6174  0347  00CA               	movwf	??_I2C2_Transmit
  6175  0348  084A               	movf	??_I2C2_Transmit,w
  6176  0349  0086               	movwf	6
  6177  034A  0187               	clrf	7
  6178  034B  0801               	movf	1,w
  6179  034C  00CB               	movwf	??_I2C2_Transmit+1
  6180  034D  084E               	movf	I2C2_Transmit@i_316,w
  6181  034E  3EA0               	addlw	(low (_I2C2_Config| 0))& (0+255)
  6182  034F  0086               	movwf	6
  6183  0350  0187               	clrf	7
  6184  0351  084B               	movf	??_I2C2_Transmit+1,w
  6185  0352  0081               	movwf	1
  6186  0353  3001               	movlw	1
  6187  0354  00CA               	movwf	??_I2C2_Transmit
  6188  0355  084A               	movf	??_I2C2_Transmit,w
  6189  0356  07CE               	addwf	I2C2_Transmit@i_316,f
  6190  0357  2B41               	goto	l2451
  6191  0358                     l2453:	
  6192                           
  6193                           ;I2C2.c: 93: result = size;
  6194  0358  0849               	movf	I2C2_Transmit@size,w
  6195  0359  00CA               	movwf	??_I2C2_Transmit
  6196  035A  084A               	movf	??_I2C2_Transmit,w
  6197  035B  00CF               	movwf	I2C2_Transmit@result
  6198                           
  6199                           ;I2C2.c: 94: }
  6200  035C  2B69               	goto	l2461
  6201  035D                     l2455:	
  6202                           
  6203                           ;I2C2.c: 95: else
  6204                           ;I2C2.c: 96: result = 0;
  6205  035D  0020               	movlb	0	; select bank0
  6206  035E  01CF               	clrf	I2C2_Transmit@result
  6207                           
  6208                           ;I2C2.c: 98: }
  6209                           
  6210                           ;I2C2.c: 97: break;
  6211  035F  2B69               	goto	l2461
  6212  0360                     l2459:	
  6213  0360  0021               	movlb	1	; select bank1
  6214  0361  0832               	movf	(_I2C2_Config^(0+128)+18),w
  6215                           
  6216                           ; Switch size 1, requested type "space"
  6217                           ; Number of cases is 2, Range of values is 0 to 1
  6218                           ; switch strategies available:
  6219                           ; Name         Instructions Cycles
  6220                           ; simple_byte            7     4 (average)
  6221                           ; direct_byte           10     6 (fixed)
  6222                           ; jumptable            260     6 (fixed)
  6223                           ;	Chosen strategy is simple_byte
  6224  0362  3A00               	xorlw	0	; case 0
  6225  0363  1903               	skipnz
  6226  0364  2AD8               	goto	l2415
  6227  0365  3A01               	xorlw	1	; case 1
  6228  0366  1903               	skipnz
  6229  0367  2B3B               	goto	l246
  6230  0368  2B69               	goto	l2461
  6231  0369                     l2461:	
  6232                           
  6233                           ;I2C2.c: 100: return result;
  6234  0369  0020               	movlb	0	; select bank0
  6235  036A  084F               	movf	I2C2_Transmit@result,w
  6236  036B  0008               	return
  6237  036C                     __end_of_I2C2_Transmit:	
  6238                           
  6239                           	psect	text26
  6240  036C                     __ptext26:	
  6241 ;; *************** function _I2C1_Transmit *****************
  6242 ;; Defined at:
  6243 ;;		line 52 in file "I2C1.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  address         1    wreg     unsigned char 
  6246 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  6247 ;;		 -> VoltageReg(2), ConfigReg(1), 
  6248 ;;  size            1    2[BANK0 ] unsigned char 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  address         1    5[BANK0 ] unsigned char 
  6251 ;;  i               1    7[BANK0 ] unsigned char 
  6252 ;;  i               1    6[BANK0 ] unsigned char 
  6253 ;;  result          1    8[BANK0 ] char 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1    wreg      char 
  6256 ;; Registers used:
  6257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6263 ;;      Params:         0       2       0       0       0       0
  6264 ;;      Locals:         0       4       0       0       0       0
  6265 ;;      Temps:          0       2       0       0       0       0
  6266 ;;      Totals:         0       8       0       0       0       0
  6267 ;;Total ram usage:        8 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    3
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_I2C_Transmit
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           
  6278                           ;psect for function _I2C1_Transmit
  6279  036C                     _I2C1_Transmit:	
  6280                           
  6281                           ;incstack = 0
  6282                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  6283                           ;I2C1_Transmit@address stored from wreg
  6284  036C  0020               	movlb	0	; select bank0
  6285  036D  00CC               	movwf	I2C1_Transmit@address
  6286                           
  6287                           ;I2C1.c: 54: int8_t result;
  6288                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  6289  036E  2BF7               	goto	l2373
  6290  036F                     l2329:	
  6291                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6292                           
  6293                           ;I2C1.c: 57: {
  6294                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  6295                           
  6296  036F  3005               	movlw	5
  6297  0370  0024               	movlb	4	; select bank4
  6298  0371  0514               	andwf	20,w	;volatile
  6299  0372  0020               	movlb	0	; select bank0
  6300  0373  00CA               	movwf	??_I2C1_Transmit
  6301  0374  0024               	movlb	4	; select bank4
  6302  0375  0816               	movf	22,w	;volatile
  6303  0376  391F               	andlw	31
  6304  0377  0020               	movlb	0	; select bank0
  6305  0378  044A               	iorwf	??_I2C1_Transmit,w
  6306  0379  1D03               	btfss	3,2
  6307  037A  2B6F               	goto	l2329
  6308                           
  6309                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  6310  037B  0024               	movlb	4	; select bank4
  6311  037C  1416               	bsf	22,0	;volatile
  6312  037D                     l2331:	
  6313                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6314                           
  6315  037D  3005               	movlw	5
  6316  037E  0024               	movlb	4	; select bank4
  6317  037F  0514               	andwf	20,w	;volatile
  6318  0380  0020               	movlb	0	; select bank0
  6319  0381  00CA               	movwf	??_I2C1_Transmit
  6320  0382  0024               	movlb	4	; select bank4
  6321  0383  0816               	movf	22,w	;volatile
  6322  0384  391F               	andlw	31
  6323  0385  0020               	movlb	0	; select bank0
  6324  0386  044A               	iorwf	??_I2C1_Transmit,w
  6325  0387  1D03               	btfss	3,2
  6326  0388  2B7D               	goto	l2331
  6327                           
  6328                           ;I2C1.c: 63: SSP1BUF = address << 1;
  6329  0389  354C               	lslf	I2C1_Transmit@address,w
  6330  038A  0024               	movlb	4	; select bank4
  6331  038B  0091               	movwf	17	;volatile
  6332  038C                     l91:	
  6333                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  6334                           
  6335  038C  1914               	btfsc	20,2	;volatile
  6336  038D  2B8C               	goto	l91
  6337                           
  6338                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  6339  038E  3000               	movlw	0
  6340  038F  1B16               	btfsc	22,6	;volatile
  6341  0390  3001               	movlw	1
  6342  0391  0020               	movlb	0	; select bank0
  6343  0392  00CF               	movwf	I2C1_Transmit@result
  6344                           
  6345                           ;I2C1.c: 67: if (!result)
  6346  0393  084F               	movf	I2C1_Transmit@result,w
  6347  0394  1D03               	btfss	3,2
  6348  0395  2BC3               	goto	l2355
  6349                           
  6350                           ;I2C1.c: 68: {
  6351                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  6352  0396  01CD               	clrf	I2C1_Transmit@i
  6353  0397  2B9C               	goto	l2353
  6354  0398                     l2351:	
  6355                           ;I2C1.c: 79: break;
  6356                           
  6357  0398  3001               	movlw	1
  6358  0399  00CA               	movwf	??_I2C1_Transmit
  6359  039A  084A               	movf	??_I2C1_Transmit,w
  6360  039B  07CD               	addwf	I2C1_Transmit@i,f
  6361  039C                     l2353:	
  6362  039C  0849               	movf	I2C1_Transmit@size,w
  6363  039D  024D               	subwf	I2C1_Transmit@i,w
  6364  039E  1803               	btfsc	3,0
  6365  039F  2BC3               	goto	l2355
  6366  03A0                     l2341:	
  6367                           ;I2C1.c: 70: {
  6368                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6369                           
  6370  03A0  3005               	movlw	5
  6371  03A1  0024               	movlb	4	; select bank4
  6372  03A2  0514               	andwf	20,w	;volatile
  6373  03A3  0020               	movlb	0	; select bank0
  6374  03A4  00CA               	movwf	??_I2C1_Transmit
  6375  03A5  0024               	movlb	4	; select bank4
  6376  03A6  0816               	movf	22,w	;volatile
  6377  03A7  391F               	andlw	31
  6378  03A8  0020               	movlb	0	; select bank0
  6379  03A9  044A               	iorwf	??_I2C1_Transmit,w
  6380  03AA  1D03               	btfss	3,2
  6381  03AB  2BA0               	goto	l2341
  6382                           
  6383                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  6384  03AC  084D               	movf	I2C1_Transmit@i,w
  6385  03AD  0748               	addwf	I2C1_Transmit@pData,w
  6386  03AE  00CA               	movwf	??_I2C1_Transmit
  6387  03AF  084A               	movf	??_I2C1_Transmit,w
  6388  03B0  0086               	movwf	6
  6389  03B1  0187               	clrf	7
  6390  03B2  0801               	movf	1,w
  6391  03B3  0024               	movlb	4	; select bank4
  6392  03B4  0091               	movwf	17	;volatile
  6393  03B5                     l100:	
  6394                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  6395                           
  6396  03B5  1914               	btfsc	20,2	;volatile
  6397  03B6  2BB5               	goto	l100
  6398                           
  6399                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  6400  03B7  3000               	movlw	0
  6401  03B8  1B16               	btfsc	22,6	;volatile
  6402  03B9  3001               	movlw	1
  6403  03BA  0020               	movlb	0	; select bank0
  6404  03BB  00CF               	movwf	I2C1_Transmit@result
  6405                           
  6406                           ;I2C1.c: 76: if (result)
  6407  03BC  084F               	movf	I2C1_Transmit@result,w
  6408  03BD  1903               	btfsc	3,2
  6409  03BE  2B98               	goto	l2351
  6410                           
  6411                           ;I2C1.c: 77: {
  6412                           ;I2C1.c: 78: result = 2;
  6413  03BF  3002               	movlw	2
  6414  03C0  00CA               	movwf	??_I2C1_Transmit
  6415  03C1  084A               	movf	??_I2C1_Transmit,w
  6416  03C2  00CF               	movwf	I2C1_Transmit@result
  6417  03C3                     l2355:	
  6418                           ;I2C1.c: 80: }
  6419                           ;I2C1.c: 81: }
  6420                           ;I2C1.c: 82: }
  6421                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  6422                           
  6423  03C3  3005               	movlw	5
  6424  03C4  0024               	movlb	4	; select bank4
  6425  03C5  0514               	andwf	20,w	;volatile
  6426  03C6  0020               	movlb	0	; select bank0
  6427  03C7  00CA               	movwf	??_I2C1_Transmit
  6428  03C8  0024               	movlb	4	; select bank4
  6429  03C9  0816               	movf	22,w	;volatile
  6430  03CA  391F               	andlw	31
  6431  03CB  0020               	movlb	0	; select bank0
  6432  03CC  044A               	iorwf	??_I2C1_Transmit,w
  6433  03CD  1D03               	btfss	3,2
  6434  03CE  2BC3               	goto	l2355
  6435                           
  6436                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  6437  03CF  0024               	movlb	4	; select bank4
  6438  03D0  1516               	bsf	22,2	;volatile
  6439                           
  6440                           ;I2C1.c: 86: break;
  6441  03D1  2C00               	goto	l2375
  6442  03D2                     l109:	
  6443                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  6444                           
  6445                           
  6446                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  6447  03D2  0024               	movlb	4	; select bank4
  6448  03D3  1D94               	btfss	20,3	;volatile
  6449  03D4  1E14               	btfss	20,4	;volatile
  6450  03D5  2BF4               	goto	l2369
  6451                           
  6452                           ;I2C1.c: 90: {
  6453                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  6454  03D6  0020               	movlb	0	; select bank0
  6455  03D7  01CE               	clrf	I2C1_Transmit@i_172
  6456  03D8                     l2365:	
  6457  03D8  0849               	movf	I2C1_Transmit@size,w
  6458  03D9  024E               	subwf	I2C1_Transmit@i_172,w
  6459  03DA  1803               	btfsc	3,0
  6460  03DB  2BEF               	goto	l2367
  6461                           
  6462                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  6463  03DC  084E               	movf	I2C1_Transmit@i_172,w
  6464  03DD  0748               	addwf	I2C1_Transmit@pData,w
  6465  03DE  00CA               	movwf	??_I2C1_Transmit
  6466  03DF  084A               	movf	??_I2C1_Transmit,w
  6467  03E0  0086               	movwf	6
  6468  03E1  0187               	clrf	7
  6469  03E2  0801               	movf	1,w
  6470  03E3  00CB               	movwf	??_I2C1_Transmit+1
  6471  03E4  084E               	movf	I2C1_Transmit@i_172,w
  6472  03E5  3EB3               	addlw	(low (_I2C1_Config| 0))& (0+255)
  6473  03E6  0086               	movwf	6
  6474  03E7  0187               	clrf	7
  6475  03E8  084B               	movf	??_I2C1_Transmit+1,w
  6476  03E9  0081               	movwf	1
  6477  03EA  3001               	movlw	1
  6478  03EB  00CA               	movwf	??_I2C1_Transmit
  6479  03EC  084A               	movf	??_I2C1_Transmit,w
  6480  03ED  07CE               	addwf	I2C1_Transmit@i_172,f
  6481  03EE  2BD8               	goto	l2365
  6482  03EF                     l2367:	
  6483                           
  6484                           ;I2C1.c: 93: result = size;
  6485  03EF  0849               	movf	I2C1_Transmit@size,w
  6486  03F0  00CA               	movwf	??_I2C1_Transmit
  6487  03F1  084A               	movf	??_I2C1_Transmit,w
  6488  03F2  00CF               	movwf	I2C1_Transmit@result
  6489                           
  6490                           ;I2C1.c: 94: }
  6491  03F3  2C00               	goto	l2375
  6492  03F4                     l2369:	
  6493                           
  6494                           ;I2C1.c: 95: else
  6495                           ;I2C1.c: 96: result = 0;
  6496  03F4  0020               	movlb	0	; select bank0
  6497  03F5  01CF               	clrf	I2C1_Transmit@result
  6498                           
  6499                           ;I2C1.c: 98: }
  6500                           
  6501                           ;I2C1.c: 97: break;
  6502  03F6  2C00               	goto	l2375
  6503  03F7                     l2373:	
  6504  03F7  0021               	movlb	1	; select bank1
  6505  03F8  0845               	movf	(_I2C1_Config^(0+128)+18),w
  6506                           
  6507                           ; Switch size 1, requested type "space"
  6508                           ; Number of cases is 2, Range of values is 0 to 1
  6509                           ; switch strategies available:
  6510                           ; Name         Instructions Cycles
  6511                           ; simple_byte            7     4 (average)
  6512                           ; direct_byte           10     6 (fixed)
  6513                           ; jumptable            260     6 (fixed)
  6514                           ;	Chosen strategy is simple_byte
  6515  03F9  3A00               	xorlw	0	; case 0
  6516  03FA  1903               	skipnz
  6517  03FB  2B6F               	goto	l2329
  6518  03FC  3A01               	xorlw	1	; case 1
  6519  03FD  1903               	skipnz
  6520  03FE  2BD2               	goto	l109
  6521  03FF  2C00               	goto	l2375
  6522  0400                     l2375:	
  6523                           
  6524                           ;I2C1.c: 100: return result;
  6525  0400  0020               	movlb	0	; select bank0
  6526  0401  084F               	movf	I2C1_Transmit@result,w
  6527  0402  0008               	return
  6528  0403                     __end_of_I2C1_Transmit:	
  6529                           
  6530                           	psect	text27
  6531  0F1A                     __ptext27:	
  6532 ;; *************** function _I2C_Init *****************
  6533 ;; Defined at:
  6534 ;;		line 6 in file "I2C_Common.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  I2Cx            1    wreg     enum E3178
  6537 ;;  address         1    6[BANK0 ] unsigned char 
  6538 ;;  mode            1    7[BANK0 ] enum E3169
  6539 ;;  Speed           1    8[BANK0 ] enum E3173
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  I2Cx            1   11[BANK0 ] enum E3178
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1    wreg      void 
  6544 ;; Registers used:
  6545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6551 ;;      Params:         0       3       0       0       0       0
  6552 ;;      Locals:         0       1       0       0       0       0
  6553 ;;      Temps:          0       2       0       0       0       0
  6554 ;;      Totals:         0       6       0       0       0       0
  6555 ;;Total ram usage:        6 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; Hardware stack levels required when called:    5
  6558 ;; This function calls:
  6559 ;;		_I2C1_Setting
  6560 ;;		_I2C2_Setting
  6561 ;; This function is called by:
  6562 ;;		_DAC_Initialize
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           
  6567                           ;psect for function _I2C_Init
  6568  0F1A                     _I2C_Init:	
  6569                           
  6570                           ;incstack = 0
  6571                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6572                           ;I2C_Init@I2Cx stored from wreg
  6573  0F1A  0020               	movlb	0	; select bank0
  6574  0F1B  00D2               	movwf	I2C_Init@I2Cx
  6575                           
  6576                           ;I2C_Common.c: 8: switch(I2Cx)
  6577  0F1C  2F38               	goto	l2605
  6578  0F1D                     l2599:	
  6579                           ;I2C_Common.c: 9: {
  6580                           ;I2C_Common.c: 10: case I2C1_MODULE:
  6581                           
  6582                           
  6583                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  6584  0F1D  084E               	movf	I2C_Init@mode,w
  6585  0F1E  00D0               	movwf	??_I2C_Init
  6586  0F1F  0850               	movf	??_I2C_Init,w
  6587  0F20  00C9               	movwf	I2C1_Setting@mode
  6588  0F21  084F               	movf	I2C_Init@Speed,w
  6589  0F22  00D1               	movwf	??_I2C_Init+1
  6590  0F23  0851               	movf	??_I2C_Init+1,w
  6591  0F24  00CA               	movwf	I2C1_Setting@Speed
  6592  0F25  084D               	movf	I2C_Init@address,w
  6593  0F26  3187  271F  318F   	fcall	_I2C1_Setting
  6594                           
  6595                           ;I2C_Common.c: 12: break;
  6596  0F29  2F41               	goto	l338
  6597  0F2A                     l2601:	
  6598                           ;I2C_Common.c: 14: case I2C2_MODULE:
  6599                           
  6600                           
  6601                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  6602  0F2A  0020               	movlb	0	; select bank0
  6603  0F2B  084E               	movf	I2C_Init@mode,w
  6604  0F2C  00D0               	movwf	??_I2C_Init
  6605  0F2D  0850               	movf	??_I2C_Init,w
  6606  0F2E  00C9               	movwf	I2C2_Setting@mode
  6607  0F2F  084F               	movf	I2C_Init@Speed,w
  6608  0F30  00D1               	movwf	??_I2C_Init+1
  6609  0F31  0851               	movf	??_I2C_Init+1,w
  6610  0F32  00CA               	movwf	I2C2_Setting@Speed
  6611  0F33  084D               	movf	I2C_Init@address,w
  6612  0F34  3186  26DB  318F   	fcall	_I2C2_Setting
  6613                           
  6614                           ;I2C_Common.c: 17: }
  6615                           
  6616                           ;I2C_Common.c: 16: break;
  6617  0F37  2F41               	goto	l338
  6618  0F38                     l2605:	
  6619  0F38  0020               	movlb	0	; select bank0
  6620  0F39  0852               	movf	I2C_Init@I2Cx,w
  6621                           
  6622                           ; Switch size 1, requested type "space"
  6623                           ; Number of cases is 2, Range of values is 0 to 1
  6624                           ; switch strategies available:
  6625                           ; Name         Instructions Cycles
  6626                           ; simple_byte            7     4 (average)
  6627                           ; direct_byte           10     6 (fixed)
  6628                           ; jumptable            260     6 (fixed)
  6629                           ;	Chosen strategy is simple_byte
  6630  0F3A  3A00               	xorlw	0	; case 0
  6631  0F3B  1903               	skipnz
  6632  0F3C  2F1D               	goto	l2599
  6633  0F3D  3A01               	xorlw	1	; case 1
  6634  0F3E  1903               	skipnz
  6635  0F3F  2F2A               	goto	l2601
  6636  0F40  2F41               	goto	l338
  6637  0F41                     l338:	
  6638                           
  6639                           ;I2C_Common.c: 19: PEIE = 1;
  6640  0F41  170B               	bsf	11,6	;volatile
  6641                           
  6642                           ;I2C_Common.c: 20: GIE = 1;
  6643  0F42  178B               	bsf	11,7	;volatile
  6644  0F43  0008               	return
  6645  0F44                     __end_of_I2C_Init:	
  6646                           
  6647                           	psect	text28
  6648  06DB                     __ptext28:	
  6649 ;; *************** function _I2C2_Setting *****************
  6650 ;; Defined at:
  6651 ;;		line 15 in file "I2C2.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  address         1    wreg     unsigned char 
  6654 ;;  mode            1    2[BANK0 ] enum E3169
  6655 ;;  Speed           1    3[BANK0 ] enum E3173
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  address         1    5[BANK0 ] unsigned char 
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      void 
  6660 ;; Registers used:
  6661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6667 ;;      Params:         0       2       0       0       0       0
  6668 ;;      Locals:         0       1       0       0       0       0
  6669 ;;      Temps:          0       1       0       0       0       0
  6670 ;;      Totals:         0       4       0       0       0       0
  6671 ;;Total ram usage:        4 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; Hardware stack levels required when called:    4
  6674 ;; This function calls:
  6675 ;;		_I2C2_PinInit
  6676 ;; This function is called by:
  6677 ;;		_I2C_Init
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           
  6682                           ;psect for function _I2C2_Setting
  6683  06DB                     _I2C2_Setting:	
  6684                           
  6685                           ;incstack = 0
  6686                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6687                           ;I2C2_Setting@address stored from wreg
  6688  06DB  0020               	movlb	0	; select bank0
  6689  06DC  00CC               	movwf	I2C2_Setting@address
  6690                           
  6691                           ;I2C2.c: 17: I2C2_PinInit();
  6692  06DD  318D  257A  3186   	fcall	_I2C2_PinInit
  6693                           
  6694                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  6695  06E0  0020               	movlb	0	; select bank0
  6696  06E1  0849               	movf	I2C2_Setting@mode,w
  6697  06E2  00CB               	movwf	??_I2C2_Setting
  6698  06E3  084B               	movf	??_I2C2_Setting,w
  6699  06E4  0021               	movlb	1	; select bank1
  6700  06E5  00B2               	movwf	(_I2C2_Config^(0+128)+18)
  6701                           
  6702                           ;I2C2.c: 20: switch(mode)
  6703  06E6  2F0F               	goto	l2411
  6704  06E7                     l211:	
  6705                           ;I2C2.c: 21: {
  6706                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  6707                           
  6708                           
  6709                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  6710  06E7  0024               	movlb	4	; select bank4
  6711  06E8  159D               	bsf	29,3	;volatile
  6712                           
  6713                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6714  06E9  0020               	movlb	0	; select bank0
  6715  06EA  084A               	movf	I2C2_Setting@Speed,w
  6716  06EB  1D03               	btfss	3,2
  6717  06EC  2EF1               	goto	l2389
  6718                           
  6719                           ;I2C2.c: 25: {
  6720                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  6721  06ED  0024               	movlb	4	; select bank4
  6722  06EE  179C               	bsf	28,7	;volatile
  6723                           
  6724                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  6725  06EF  304F               	movlw	79
  6726  06F0  2EFB               	goto	L2
  6727  06F1                     l2389:	
  6728                           ;I2C2.c: 28: }
  6729                           
  6730                           
  6731                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6732  06F1  0020               	movlb	0	; select bank0
  6733  06F2  034A               	decf	I2C2_Setting@Speed,w
  6734  06F3  1D03               	btfss	3,2
  6735  06F4  2EFC               	goto	l2395
  6736                           
  6737                           ;I2C2.c: 30: {
  6738                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  6739  06F5  307F               	movlw	127
  6740  06F6  00CB               	movwf	??_I2C2_Setting
  6741  06F7  084B               	movf	??_I2C2_Setting,w
  6742  06F8  0024               	movlb	4	; select bank4
  6743  06F9  059C               	andwf	28,f	;volatile
  6744                           
  6745                           ;I2C2.c: 32: SSP2ADD = 0x13;
  6746  06FA  3013               	movlw	19
  6747  06FB                     L2:	
  6748  06FB  009A               	movwf	26	;volatile
  6749  06FC                     l2395:	
  6750                           
  6751                           ;I2C2.c: 33: }
  6752                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  6753  06FC  0024               	movlb	4	; select bank4
  6754  06FD  2F0D               	goto	l2407
  6755  06FE                     l2397:	
  6756                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  6757                           
  6758                           ;I2C2.c: 35: break;
  6759                           
  6760                           
  6761                           ;I2C2.c: 38: SSP2STAT = 0x00;
  6762  06FE  0024               	movlb	4	; select bank4
  6763  06FF  019C               	clrf	28	;volatile
  6764                           
  6765                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  6766  0700  3006               	movlw	6
  6767  0701  0020               	movlb	0	; select bank0
  6768  0702  00CB               	movwf	??_I2C2_Setting
  6769  0703  084B               	movf	??_I2C2_Setting,w
  6770  0704  0024               	movlb	4	; select bank4
  6771  0705  049D               	iorwf	29,f	;volatile
  6772                           
  6773                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  6774  0706  141E               	bsf	30,0	;volatile
  6775                           
  6776                           ;I2C2.c: 41: SSP2ADD = address << 1;
  6777  0707  0020               	movlb	0	; select bank0
  6778  0708  354C               	lslf	I2C2_Setting@address,w
  6779  0709  0024               	movlb	4	; select bank4
  6780  070A  009A               	movwf	26	;volatile
  6781                           
  6782                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  6783  070B  30FE               	movlw	254
  6784  070C  009B               	movwf	27	;volatile
  6785  070D                     l2407:	
  6786                           
  6787                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  6788  070D  169D               	bsf	29,5	;volatile
  6789                           
  6790                           ;I2C2.c: 45: }
  6791                           
  6792                           ;I2C2.c: 44: break;
  6793  070E  2F18               	goto	l215
  6794  070F                     l2411:	
  6795  070F  0020               	movlb	0	; select bank0
  6796  0710  0849               	movf	I2C2_Setting@mode,w
  6797                           
  6798                           ; Switch size 1, requested type "space"
  6799                           ; Number of cases is 2, Range of values is 0 to 1
  6800                           ; switch strategies available:
  6801                           ; Name         Instructions Cycles
  6802                           ; simple_byte            7     4 (average)
  6803                           ; direct_byte           10     6 (fixed)
  6804                           ; jumptable            260     6 (fixed)
  6805                           ;	Chosen strategy is simple_byte
  6806  0711  3A00               	xorlw	0	; case 0
  6807  0712  1903               	skipnz
  6808  0713  2EE7               	goto	l211
  6809  0714  3A01               	xorlw	1	; case 1
  6810  0715  1903               	skipnz
  6811  0716  2EFE               	goto	l2397
  6812  0717  2F18               	goto	l215
  6813  0718                     l215:	
  6814                           
  6815                           ;I2C2.c: 46: SSP2IE = 1;
  6816  0718  0021               	movlb	1	; select bank1
  6817  0719  1414               	bsf	20,0	;volatile
  6818                           
  6819                           ;I2C2.c: 47: BCL2IE = 1;
  6820  071A  1494               	bsf	20,1	;volatile
  6821                           
  6822                           ;I2C2.c: 48: SSP2IF = 0;
  6823  071B  0020               	movlb	0	; select bank0
  6824  071C  1014               	bcf	20,0	;volatile
  6825                           
  6826                           ;I2C2.c: 49: BCL2IF = 0;
  6827  071D  1094               	bcf	20,1	;volatile
  6828  071E  0008               	return
  6829  071F                     __end_of_I2C2_Setting:	
  6830                           
  6831                           	psect	text29
  6832  0D7A                     __ptext29:	
  6833 ;; *************** function _I2C2_PinInit *****************
  6834 ;; Defined at:
  6835 ;;		line 9 in file "I2C2.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;		None
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;		None
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  1    wreg      void 
  6842 ;; Registers used:
  6843 ;;		wreg, status,2, status,0
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6849 ;;      Params:         0       0       0       0       0       0
  6850 ;;      Locals:         0       0       0       0       0       0
  6851 ;;      Temps:          0       1       0       0       0       0
  6852 ;;      Totals:         0       1       0       0       0       0
  6853 ;;Total ram usage:        1 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; Hardware stack levels required when called:    3
  6856 ;; This function calls:
  6857 ;;		Nothing
  6858 ;; This function is called by:
  6859 ;;		_I2C2_Setting
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           
  6864                           ;psect for function _I2C2_PinInit
  6865  0D7A                     _I2C2_PinInit:	
  6866                           
  6867                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  6868                           
  6869                           ;incstack = 0
  6870                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  6871  0D7A  3024               	movlw	36
  6872  0D7B  0020               	movlb	0	; select bank0
  6873  0D7C  00C8               	movwf	??_I2C2_PinInit
  6874  0D7D  0848               	movf	??_I2C2_PinInit,w
  6875  0D7E  0021               	movlb	1	; select bank1
  6876  0D7F  048D               	iorwf	13,f	;volatile
  6877                           
  6878                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  6879  0D80  30DB               	movlw	219
  6880  0D81  0020               	movlb	0	; select bank0
  6881  0D82  00C8               	movwf	??_I2C2_PinInit
  6882  0D83  0848               	movf	??_I2C2_PinInit,w
  6883  0D84  0023               	movlb	3	; select bank3
  6884  0D85  058D               	andwf	13,f	;volatile
  6885  0D86  0008               	return
  6886  0D87                     __end_of_I2C2_PinInit:	
  6887                           
  6888                           	psect	text30
  6889  071F                     __ptext30:	
  6890 ;; *************** function _I2C1_Setting *****************
  6891 ;; Defined at:
  6892 ;;		line 15 in file "I2C1.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  address         1    wreg     unsigned char 
  6895 ;;  mode            1    2[BANK0 ] enum E3169
  6896 ;;  Speed           1    3[BANK0 ] enum E3173
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  address         1    5[BANK0 ] unsigned char 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  1    wreg      void 
  6901 ;; Registers used:
  6902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6908 ;;      Params:         0       2       0       0       0       0
  6909 ;;      Locals:         0       1       0       0       0       0
  6910 ;;      Temps:          0       1       0       0       0       0
  6911 ;;      Totals:         0       4       0       0       0       0
  6912 ;;Total ram usage:        4 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; Hardware stack levels required when called:    4
  6915 ;; This function calls:
  6916 ;;		_I2C1_PinInit
  6917 ;; This function is called by:
  6918 ;;		_I2C_Init
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           
  6923                           ;psect for function _I2C1_Setting
  6924  071F                     _I2C1_Setting:	
  6925                           
  6926                           ;incstack = 0
  6927                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6928                           ;I2C1_Setting@address stored from wreg
  6929  071F  0020               	movlb	0	; select bank0
  6930  0720  00CC               	movwf	I2C1_Setting@address
  6931                           
  6932                           ;I2C1.c: 17: I2C1_PinInit();
  6933  0721  318D  256D  3187   	fcall	_I2C1_PinInit
  6934                           
  6935                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  6936  0724  0020               	movlb	0	; select bank0
  6937  0725  0849               	movf	I2C1_Setting@mode,w
  6938  0726  00CB               	movwf	??_I2C1_Setting
  6939  0727  084B               	movf	??_I2C1_Setting,w
  6940  0728  0021               	movlb	1	; select bank1
  6941  0729  00C5               	movwf	(_I2C1_Config^(0+128)+18)
  6942                           
  6943                           ;I2C1.c: 20: switch(mode)
  6944  072A  2F53               	goto	l2325
  6945  072B                     l74:	
  6946                           ;I2C1.c: 21: {
  6947                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  6948                           
  6949                           
  6950                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  6951  072B  0024               	movlb	4	; select bank4
  6952  072C  1595               	bsf	21,3	;volatile
  6953                           
  6954                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6955  072D  0020               	movlb	0	; select bank0
  6956  072E  084A               	movf	I2C1_Setting@Speed,w
  6957  072F  1D03               	btfss	3,2
  6958  0730  2F35               	goto	l2303
  6959                           
  6960                           ;I2C1.c: 25: {
  6961                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  6962  0731  0024               	movlb	4	; select bank4
  6963  0732  1794               	bsf	20,7	;volatile
  6964                           
  6965                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  6966  0733  304F               	movlw	79
  6967  0734  2F3F               	goto	L3
  6968  0735                     l2303:	
  6969                           ;I2C1.c: 28: }
  6970                           
  6971                           
  6972                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6973  0735  0020               	movlb	0	; select bank0
  6974  0736  034A               	decf	I2C1_Setting@Speed,w
  6975  0737  1D03               	btfss	3,2
  6976  0738  2F40               	goto	l2309
  6977                           
  6978                           ;I2C1.c: 30: {
  6979                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  6980  0739  307F               	movlw	127
  6981  073A  00CB               	movwf	??_I2C1_Setting
  6982  073B  084B               	movf	??_I2C1_Setting,w
  6983  073C  0024               	movlb	4	; select bank4
  6984  073D  0594               	andwf	20,f	;volatile
  6985                           
  6986                           ;I2C1.c: 32: SSP1ADD = 0x13;
  6987  073E  3013               	movlw	19
  6988  073F                     L3:	
  6989  073F  0092               	movwf	18	;volatile
  6990  0740                     l2309:	
  6991                           
  6992                           ;I2C1.c: 33: }
  6993                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  6994  0740  0024               	movlb	4	; select bank4
  6995  0741  2F51               	goto	l2321
  6996  0742                     l2311:	
  6997                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  6998                           
  6999                           ;I2C1.c: 35: break;
  7000                           
  7001                           
  7002                           ;I2C1.c: 38: SSP1STAT = 0x00;
  7003  0742  0024               	movlb	4	; select bank4
  7004  0743  0194               	clrf	20	;volatile
  7005                           
  7006                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  7007  0744  3006               	movlw	6
  7008  0745  0020               	movlb	0	; select bank0
  7009  0746  00CB               	movwf	??_I2C1_Setting
  7010  0747  084B               	movf	??_I2C1_Setting,w
  7011  0748  0024               	movlb	4	; select bank4
  7012  0749  0495               	iorwf	21,f	;volatile
  7013                           
  7014                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  7015  074A  1416               	bsf	22,0	;volatile
  7016                           
  7017                           ;I2C1.c: 41: SSP1ADD = address << 1;
  7018  074B  0020               	movlb	0	; select bank0
  7019  074C  354C               	lslf	I2C1_Setting@address,w
  7020  074D  0024               	movlb	4	; select bank4
  7021  074E  0092               	movwf	18	;volatile
  7022                           
  7023                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  7024  074F  30FE               	movlw	254
  7025  0750  0093               	movwf	19	;volatile
  7026  0751                     l2321:	
  7027                           
  7028                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  7029  0751  1695               	bsf	21,5	;volatile
  7030                           
  7031                           ;I2C1.c: 45: }
  7032                           
  7033                           ;I2C1.c: 44: break;
  7034  0752  2F5C               	goto	l78
  7035  0753                     l2325:	
  7036  0753  0020               	movlb	0	; select bank0
  7037  0754  0849               	movf	I2C1_Setting@mode,w
  7038                           
  7039                           ; Switch size 1, requested type "space"
  7040                           ; Number of cases is 2, Range of values is 0 to 1
  7041                           ; switch strategies available:
  7042                           ; Name         Instructions Cycles
  7043                           ; simple_byte            7     4 (average)
  7044                           ; direct_byte           10     6 (fixed)
  7045                           ; jumptable            260     6 (fixed)
  7046                           ;	Chosen strategy is simple_byte
  7047  0755  3A00               	xorlw	0	; case 0
  7048  0756  1903               	skipnz
  7049  0757  2F2B               	goto	l74
  7050  0758  3A01               	xorlw	1	; case 1
  7051  0759  1903               	skipnz
  7052  075A  2F42               	goto	l2311
  7053  075B  2F5C               	goto	l78
  7054  075C                     l78:	
  7055                           
  7056                           ;I2C1.c: 46: SSP1IE = 1;
  7057  075C  0021               	movlb	1	; select bank1
  7058  075D  1591               	bsf	17,3	;volatile
  7059                           
  7060                           ;I2C1.c: 47: BCL1IE = 1;
  7061  075E  1592               	bsf	18,3	;volatile
  7062                           
  7063                           ;I2C1.c: 48: SSP1IF = 0;
  7064  075F  0020               	movlb	0	; select bank0
  7065  0760  1191               	bcf	17,3	;volatile
  7066                           
  7067                           ;I2C1.c: 49: BCL1IF = 0;
  7068  0761  1192               	bcf	18,3	;volatile
  7069  0762  0008               	return
  7070  0763                     __end_of_I2C1_Setting:	
  7071                           
  7072                           	psect	text31
  7073  0D6D                     __ptext31:	
  7074 ;; *************** function _I2C1_PinInit *****************
  7075 ;; Defined at:
  7076 ;;		line 9 in file "I2C1.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;		None
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  1    wreg      void 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2, status,0
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7090 ;;      Params:         0       0       0       0       0       0
  7091 ;;      Locals:         0       0       0       0       0       0
  7092 ;;      Temps:          0       1       0       0       0       0
  7093 ;;      Totals:         0       1       0       0       0       0
  7094 ;;Total ram usage:        1 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; Hardware stack levels required when called:    3
  7097 ;; This function calls:
  7098 ;;		Nothing
  7099 ;; This function is called by:
  7100 ;;		_I2C1_Setting
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           
  7105                           ;psect for function _I2C1_PinInit
  7106  0D6D                     _I2C1_PinInit:	
  7107                           
  7108                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  7109                           
  7110                           ;incstack = 0
  7111                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  7112  0D6D  3012               	movlw	18
  7113  0D6E  0020               	movlb	0	; select bank0
  7114  0D6F  00C8               	movwf	??_I2C1_PinInit
  7115  0D70  0848               	movf	??_I2C1_PinInit,w
  7116  0D71  0021               	movlb	1	; select bank1
  7117  0D72  048D               	iorwf	13,f	;volatile
  7118                           
  7119                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  7120  0D73  30ED               	movlw	237
  7121  0D74  0020               	movlb	0	; select bank0
  7122  0D75  00C8               	movwf	??_I2C1_PinInit
  7123  0D76  0848               	movf	??_I2C1_PinInit,w
  7124  0D77  0023               	movlb	3	; select bank3
  7125  0D78  058D               	andwf	13,f	;volatile
  7126  0D79  0008               	return
  7127  0D7A                     __end_of_I2C1_PinInit:	
  7128                           
  7129                           	psect	text32
  7130  0ECA                     __ptext32:	
  7131 ;; *************** function _Buzzer_Init *****************
  7132 ;; Defined at:
  7133 ;;		line 11 in file "Buzzer.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;		None
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;		None
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  1    wreg      void 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7147 ;;      Params:         0       0       0       0       0       0
  7148 ;;      Locals:         0       0       0       0       0       0
  7149 ;;      Temps:          0       1       0       0       0       0
  7150 ;;      Totals:         0       1       0       0       0       0
  7151 ;;Total ram usage:        1 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; Hardware stack levels required when called:    3
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_main
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           
  7162                           ;psect for function _Buzzer_Init
  7163  0ECA                     _Buzzer_Init:	
  7164                           
  7165                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  7166                           
  7167                           ;incstack = 0
  7168                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  7169  0ECA  307F               	movlw	127
  7170  0ECB  0020               	movlb	0	; select bank0
  7171  0ECC  00C8               	movwf	??_Buzzer_Init
  7172  0ECD  0848               	movf	??_Buzzer_Init,w
  7173  0ECE  0021               	movlb	1	; select bank1
  7174  0ECF  058C               	andwf	12,f	;volatile
  7175                           
  7176                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  7177  0ED0  307F               	movlw	127
  7178  0ED1  0020               	movlb	0	; select bank0
  7179  0ED2  00C8               	movwf	??_Buzzer_Init
  7180  0ED3  0848               	movf	??_Buzzer_Init,w
  7181  0ED4  0023               	movlb	3	; select bank3
  7182  0ED5  058C               	andwf	12,f	;volatile
  7183                           
  7184                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  7185  0ED6  0022               	movlb	2	; select bank2
  7186  0ED7  159D               	bsf	29,3	;volatile
  7187                           
  7188                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  7189  0ED8  0020               	movlb	0	; select bank0
  7190  0ED9  081C               	movf	28,w	;volatile
  7191                           
  7192                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  7193  0EDA  149C               	bsf	28,1	;volatile
  7194                           
  7195                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  7196  0EDB  151C               	bsf	28,2	;volatile
  7197                           
  7198                           ;Buzzer.c: 21: TMR2 = 0x00;
  7199  0EDC  019A               	clrf	26	;volatile
  7200                           
  7201                           ;Buzzer.c: 22: PR2 = 0xFF;
  7202  0EDD  30FF               	movlw	255
  7203  0EDE  009B               	movwf	27	;volatile
  7204                           
  7205                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  7206  0EDF  303F               	movlw	63
  7207  0EE0  00C8               	movwf	??_Buzzer_Init
  7208  0EE1  0848               	movf	??_Buzzer_Init,w
  7209  0EE2  0025               	movlb	5	; select bank5
  7210  0EE3  059A               	andwf	26,f	;volatile
  7211                           
  7212                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  7213  0EE4  300C               	movlw	12
  7214  0EE5  0020               	movlb	0	; select bank0
  7215  0EE6  00C8               	movwf	??_Buzzer_Init
  7216  0EE7  0848               	movf	??_Buzzer_Init,w
  7217  0EE8  0025               	movlb	5	; select bank5
  7218  0EE9  049A               	iorwf	26,f	;volatile
  7219                           
  7220                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  7221  0EEA  30F3               	movlw	243
  7222  0EEB  0020               	movlb	0	; select bank0
  7223  0EEC  00C8               	movwf	??_Buzzer_Init
  7224  0EED  0848               	movf	??_Buzzer_Init,w
  7225  0EEE  0025               	movlb	5	; select bank5
  7226  0EEF  059E               	andwf	30,f	;volatile
  7227                           
  7228                           ;Buzzer.c: 28: CCPR2L = 0x00;
  7229  0EF0  0198               	clrf	24	;volatile
  7230  0EF1  0008               	return
  7231  0EF2                     __end_of_Buzzer_Init:	
  7232                           
  7233                           	psect	text33
  7234  0DE2                     __ptext33:	
  7235 ;; *************** function _Basic_Init *****************
  7236 ;; Defined at:
  7237 ;;		line 69 in file "main.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;		None
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;		None
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  1    wreg      char 
  7244 ;; Registers used:
  7245 ;;		wreg, status,2
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7251 ;;      Params:         0       0       0       0       0       0
  7252 ;;      Locals:         0       0       0       0       0       0
  7253 ;;      Temps:          0       0       0       0       0       0
  7254 ;;      Totals:         0       0       0       0       0       0
  7255 ;;Total ram usage:        0 bytes
  7256 ;; Hardware stack levels used:    1
  7257 ;; Hardware stack levels required when called:    3
  7258 ;; This function calls:
  7259 ;;		Nothing
  7260 ;; This function is called by:
  7261 ;;		_main
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           
  7266                           ;psect for function _Basic_Init
  7267  0DE2                     _Basic_Init:	
  7268                           
  7269                           ;main.c: 71: OSCCON = 0xF0;
  7270                           
  7271                           ;incstack = 0
  7272                           ; Regs used in _Basic_Init: [wreg+status,2]
  7273  0DE2  30F0               	movlw	240
  7274  0DE3  0021               	movlb	1	; select bank1
  7275  0DE4  0099               	movwf	25	;volatile
  7276                           
  7277                           ;main.c: 75: TRISA = 0x00;
  7278  0DE5  018C               	clrf	12	;volatile
  7279                           
  7280                           ;main.c: 76: ANSELA = 0x00;
  7281  0DE6  0023               	movlb	3	; select bank3
  7282  0DE7  018C               	clrf	12	;volatile
  7283                           
  7284                           ;main.c: 78: TRISB = 0x00;
  7285  0DE8  0021               	movlb	1	; select bank1
  7286  0DE9  018D               	clrf	13	;volatile
  7287                           
  7288                           ;main.c: 79: ANSELB = 0x00;
  7289  0DEA  0023               	movlb	3	; select bank3
  7290  0DEB  018D               	clrf	13	;volatile
  7291                           
  7292                           ;main.c: 81: APFCON0 = 0x00;
  7293  0DEC  0022               	movlb	2	; select bank2
  7294  0DED  019D               	clrf	29	;volatile
  7295                           
  7296                           ;main.c: 82: APFCON1 = 0x00;
  7297  0DEE  019E               	clrf	30	;volatile
  7298                           
  7299                           ;main.c: 84: PORTA = 0x00;
  7300  0DEF  0020               	movlb	0	; select bank0
  7301  0DF0  018C               	clrf	12	;volatile
  7302                           
  7303                           ;main.c: 85: PORTB = 0x00;
  7304  0DF1  018D               	clrf	13	;volatile
  7305  0DF2  0008               	return
  7306  0DF3                     __end_of_Basic_Init:	
  7307                           ;main.c: 87: return 0;
  7308                           ;	Return value of _Basic_Init is never used
  7309                           
  7310                           
  7311                           	psect	intentry
  7312  0004                     __pintentry:	
  7313 ;; *************** function _Handler *****************
  7314 ;; Defined at:
  7315 ;;		line 90 in file "main.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;		None
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;		None
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  1    wreg      void 
  7322 ;; Registers used:
  7323 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7329 ;;      Params:         0       0       0       0       0       0
  7330 ;;      Locals:         0       0       0       0       0       0
  7331 ;;      Temps:          0       1       0       0       0       0
  7332 ;;      Totals:         0       1       0       0       0       0
  7333 ;;Total ram usage:        1 bytes
  7334 ;; Hardware stack levels used:    1
  7335 ;; Hardware stack levels required when called:    2
  7336 ;; This function calls:
  7337 ;;		_Buzzer_Count1ms
  7338 ;;		_I2C_CommonInterrupt
  7339 ;;		_Timer1_Count200us
  7340 ;;		_Timer1_DetectAssignCount
  7341 ;;		_Timer4_CheckFlag
  7342 ;;		_Timer6_CheckFlag
  7343 ;;		_mTouch_IntervalDecrement
  7344 ;;		_mTouch_Read
  7345 ;; This function is called by:
  7346 ;;		Interrupt level 1
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350  0004                     _Handler:	
  7351                           
  7352                           ;incstack = 0
  7353  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7354                           
  7355                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7356  0005  3180               	pagesel	$
  7357  0006  0020               	movlb	0	; select bank0
  7358  0007  087F               	movf	127,w
  7359  0008  00C7               	movwf	??_Handler
  7360                           
  7361                           ;main.c: 92: if(Timer4_CheckFlag())
  7362  0009  318D  2557  3180   	fcall	_Timer4_CheckFlag
  7363  000C  3A00               	xorlw	0
  7364  000D  1903               	skipnz
  7365  000E  2812               	goto	i1l3285
  7366                           
  7367                           ;main.c: 93: Timer1_Count200us();
  7368  000F  318D  2539  3180   	fcall	_Timer1_Count200us
  7369  0012                     i1l3285:	
  7370                           
  7371                           ;main.c: 95: if(Timer1_DetectAssignCount())
  7372  0012  3184  2403  3180   	fcall	_Timer1_DetectAssignCount
  7373  0015  3A00               	xorlw	0
  7374  0016  1903               	skipnz
  7375  0017  281B               	goto	i1l3289
  7376                           
  7377                           ;main.c: 96: LATA6 = !LATA6;
  7378  0018  3040               	movlw	64
  7379  0019  0022               	movlb	2	; select bank2
  7380  001A  068C               	xorwf	12,f
  7381  001B                     i1l3289:	
  7382                           
  7383                           ;main.c: 98: if(Timer6_CheckFlag())
  7384  001B  318D  2562  3180   	fcall	_Timer6_CheckFlag
  7385  001E  3A00               	xorlw	0
  7386  001F  1903               	skipnz
  7387  0020  282A               	goto	i1l660
  7388                           
  7389                           ;main.c: 99: {
  7390                           ;main.c: 100: mTouch_IntervalDecrement();
  7391  0021  318D  25D1  3180   	fcall	_mTouch_IntervalDecrement
  7392                           
  7393                           ;main.c: 102: mTouch_Read();
  7394  0024  318E  26A5  3180   	fcall	_mTouch_Read
  7395                           
  7396                           ;main.c: 103: Buzzer_Count1ms();
  7397  0027  318E  2619  3180   	fcall	_Buzzer_Count1ms
  7398  002A                     i1l660:	
  7399                           
  7400                           ;main.c: 104: }
  7401                           ;main.c: 105: I2C_CommonInterrupt();
  7402  002A  318D  2518         	fcall	_I2C_CommonInterrupt
  7403  002C  0020               	movlb	0	; select bank0
  7404  002D  0847               	movf	??_Handler,w
  7405  002E  00FF               	movwf	127
  7406  002F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7407  0030  0009               	retfie
  7408  0031                     __end_of_Handler:	
  7409                           
  7410                           	psect	text35
  7411  0EA5                     __ptext35:	
  7412 ;; *************** function _mTouch_Read *****************
  7413 ;; Defined at:
  7414 ;;		line 29 in file "mTouch.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;		None
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      void 
  7421 ;; Registers used:
  7422 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7428 ;;      Params:         0       0       0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0       0
  7430 ;;      Temps:          1       0       0       0       0       0
  7431 ;;      Totals:         1       0       0       0       0       0
  7432 ;;Total ram usage:        1 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; This function calls:
  7435 ;;		Nothing
  7436 ;; This function is called by:
  7437 ;;		_Handler
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           
  7442                           ;psect for function _mTouch_Read
  7443  0EA5                     _mTouch_Read:	
  7444                           
  7445                           ;mTouch.c: 31: static uint8_t channel=0;
  7446                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  7447                           
  7448                           ;incstack = 0
  7449                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7450  0EA5  0020               	movlb	0	; select bank0
  7451  0EA6  0843               	movf	mTouch_Read@channel,w
  7452  0EA7  3E37               	addlw	(low (_CPS_Data| 0))& (0+255)
  7453  0EA8  0086               	movwf	6
  7454  0EA9  0187               	clrf	7
  7455  0EAA  0801               	movf	1,w
  7456  0EAB  00F0               	movwf	??_mTouch_Read
  7457  0EAC  0843               	movf	mTouch_Read@channel,w
  7458  0EAD  3E3A               	addlw	(low (_CPS_PreData| 0))& (0+255)
  7459  0EAE  0086               	movwf	6
  7460  0EAF  0187               	clrf	7
  7461  0EB0  0870               	movf	??_mTouch_Read,w
  7462  0EB1  0081               	movwf	1
  7463                           
  7464                           ;mTouch.c: 35: CPSCON0 &= ~(0x01<<7);;
  7465  0EB2  307F               	movlw	127
  7466  0EB3  00F0               	movwf	??_mTouch_Read
  7467  0EB4  0870               	movf	??_mTouch_Read,w
  7468  0EB5  059E               	andwf	30,f	;volatile
  7469                           
  7470                           ;mTouch.c: 36: CPS_Data[channel] = TMR0;
  7471  0EB6  0815               	movf	21,w	;volatile
  7472  0EB7  00F0               	movwf	??_mTouch_Read
  7473  0EB8  0843               	movf	mTouch_Read@channel,w
  7474  0EB9  3E37               	addlw	(low (_CPS_Data| 0))& (0+255)
  7475  0EBA  0086               	movwf	6
  7476  0EBB  0187               	clrf	7
  7477  0EBC  0870               	movf	??_mTouch_Read,w
  7478  0EBD  0081               	movwf	1
  7479                           
  7480                           ;mTouch.c: 37: TMR0 = 0x00;
  7481  0EBE  0195               	clrf	21	;volatile
  7482                           
  7483                           ;mTouch.c: 38: CPSCON0 |= (0x01<<7);;
  7484  0EBF  179E               	bsf	30,7	;volatile
  7485                           
  7486                           ;mTouch.c: 40: if(channel++>2)channel = 0;
  7487  0EC0  0843               	movf	mTouch_Read@channel,w
  7488  0EC1  0AC3               	incf	mTouch_Read@channel,f
  7489  0EC2  00F0               	movwf	??_mTouch_Read
  7490  0EC3  3003               	movlw	3
  7491  0EC4  0270               	subwf	??_mTouch_Read,w
  7492  0EC5  1803               	btfsc	3,0
  7493  0EC6  01C3               	clrf	mTouch_Read@channel
  7494                           
  7495                           ;mTouch.c: 41: CPSCON1 = (uint8_t)channel;
  7496  0EC7  0843               	movf	mTouch_Read@channel,w
  7497  0EC8  009F               	movwf	31	;volatile
  7498  0EC9  0008               	return
  7499  0ECA                     __end_of_mTouch_Read:	
  7500                           
  7501                           	psect	text36
  7502  0DD1                     __ptext36:	
  7503 ;; *************** function _mTouch_IntervalDecrement *****************
  7504 ;; Defined at:
  7505 ;;		line 108 in file "main.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;		None
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg, status,2, status,0
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7519 ;;      Params:         0       0       0       0       0       0
  7520 ;;      Locals:         0       0       0       0       0       0
  7521 ;;      Temps:          0       0       0       0       0       0
  7522 ;;      Totals:         0       0       0       0       0       0
  7523 ;;Total ram usage:        0 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_Handler
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           
  7533                           ;psect for function _mTouch_IntervalDecrement
  7534  0DD1                     _mTouch_IntervalDecrement:	
  7535                           
  7536                           ;main.c: 110: if(mTouch_Interval[0]>0)
  7537                           
  7538                           ;incstack = 0
  7539                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  7540  0DD1  0020               	movlb	0	; select bank0
  7541  0DD2  0834               	movf	_mTouch_Interval,w
  7542  0DD3  1903               	btfsc	3,2
  7543  0DD4  2DD7               	goto	i1l664
  7544                           
  7545                           ;main.c: 111: mTouch_Interval[0]--;
  7546  0DD5  3001               	movlw	1
  7547  0DD6  02B4               	subwf	_mTouch_Interval,f
  7548  0DD7                     i1l664:	
  7549                           
  7550                           ;main.c: 112: if(mTouch_Interval[1]>0)
  7551  0DD7  0835               	movf	_mTouch_Interval+1,w
  7552  0DD8  1903               	btfsc	3,2
  7553  0DD9  2DDC               	goto	i1l665
  7554                           
  7555                           ;main.c: 113: mTouch_Interval[1]--;
  7556  0DDA  3001               	movlw	1
  7557  0DDB  02B5               	subwf	_mTouch_Interval+1,f
  7558  0DDC                     i1l665:	
  7559                           
  7560                           ;main.c: 114: if(mTouch_Interval[2]>0)
  7561  0DDC  0836               	movf	_mTouch_Interval+2,w
  7562  0DDD  1903               	btfsc	3,2
  7563  0DDE  0008               	return
  7564                           
  7565                           ;main.c: 115: mTouch_Interval[2]--;
  7566  0DDF  3001               	movlw	1
  7567  0DE0  02B6               	subwf	_mTouch_Interval+2,f
  7568  0DE1  0008               	return
  7569  0DE2                     __end_of_mTouch_IntervalDecrement:	
  7570                           
  7571                           	psect	text37
  7572  0D62                     __ptext37:	
  7573 ;; *************** function _Timer6_CheckFlag *****************
  7574 ;; Defined at:
  7575 ;;		line 17 in file "Timer6.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;		None
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;		None
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  1    wreg      unsigned char 
  7582 ;; Registers used:
  7583 ;;		wreg
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7589 ;;      Params:         0       0       0       0       0       0
  7590 ;;      Locals:         0       0       0       0       0       0
  7591 ;;      Temps:          0       0       0       0       0       0
  7592 ;;      Totals:         0       0       0       0       0       0
  7593 ;;Total ram usage:        0 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		_Handler
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           
  7603                           ;psect for function _Timer6_CheckFlag
  7604  0D62                     _Timer6_CheckFlag:	
  7605                           
  7606                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  7607                           
  7608                           ;incstack = 0
  7609                           ; Regs used in _Timer6_CheckFlag: [wreg]
  7610  0D62  0021               	movlb	1	; select bank1
  7611  0D63  1D93               	btfss	19,3	;volatile
  7612  0D64  2D6B               	goto	i1l2013
  7613  0D65  0020               	movlb	0	; select bank0
  7614  0D66  1D93               	btfss	19,3	;volatile
  7615  0D67  2D6B               	goto	i1l2013
  7616                           
  7617                           ;Timer6.c: 20: {
  7618                           ;Timer6.c: 21: TMR6IF = 0;
  7619  0D68  1193               	bcf	19,3	;volatile
  7620                           
  7621                           ;Timer6.c: 22: return 1;
  7622  0D69  3001               	movlw	1
  7623  0D6A  0008               	return
  7624  0D6B                     i1l2013:	
  7625                           
  7626                           ;Timer6.c: 23: }
  7627                           ;Timer6.c: 24: return 0;
  7628  0D6B  3000               	movlw	0
  7629  0D6C  0008               	return
  7630  0D6D                     __end_of_Timer6_CheckFlag:	
  7631                           
  7632                           	psect	text38
  7633  0D57                     __ptext38:	
  7634 ;; *************** function _Timer4_CheckFlag *****************
  7635 ;; Defined at:
  7636 ;;		line 17 in file "Timer4.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;		None
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;		None
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  1    wreg      unsigned char 
  7643 ;; Registers used:
  7644 ;;		wreg
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7650 ;;      Params:         0       0       0       0       0       0
  7651 ;;      Locals:         0       0       0       0       0       0
  7652 ;;      Temps:          0       0       0       0       0       0
  7653 ;;      Totals:         0       0       0       0       0       0
  7654 ;;Total ram usage:        0 bytes
  7655 ;; Hardware stack levels used:    1
  7656 ;; This function calls:
  7657 ;;		Nothing
  7658 ;; This function is called by:
  7659 ;;		_Handler
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           
  7664                           ;psect for function _Timer4_CheckFlag
  7665  0D57                     _Timer4_CheckFlag:	
  7666                           
  7667                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  7668                           
  7669                           ;incstack = 0
  7670                           ; Regs used in _Timer4_CheckFlag: [wreg]
  7671  0D57  0021               	movlb	1	; select bank1
  7672  0D58  1C93               	btfss	19,1	;volatile
  7673  0D59  2D60               	goto	i1l1981
  7674  0D5A  0020               	movlb	0	; select bank0
  7675  0D5B  1C93               	btfss	19,1	;volatile
  7676  0D5C  2D60               	goto	i1l1981
  7677                           
  7678                           ;Timer4.c: 20: {
  7679                           ;Timer4.c: 21: TMR4IF = 0;
  7680  0D5D  1093               	bcf	19,1	;volatile
  7681                           
  7682                           ;Timer4.c: 22: return 1;
  7683  0D5E  3001               	movlw	1
  7684  0D5F  0008               	return
  7685  0D60                     i1l1981:	
  7686                           
  7687                           ;Timer4.c: 23: }
  7688                           ;Timer4.c: 24: return 0;
  7689  0D60  3000               	movlw	0
  7690  0D61  0008               	return
  7691  0D62                     __end_of_Timer4_CheckFlag:	
  7692                           
  7693                           	psect	text39
  7694  0403                     __ptext39:	
  7695 ;; *************** function _Timer1_DetectAssignCount *****************
  7696 ;; Defined at:
  7697 ;;		line 67 in file "Timer1.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;		None
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;		None
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  1    wreg      unsigned char 
  7704 ;; Registers used:
  7705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7711 ;;      Params:         0       0       0       0       0       0
  7712 ;;      Locals:         0       0       0       0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0
  7714 ;;      Totals:         0       0       0       0       0       0
  7715 ;;Total ram usage:        0 bytes
  7716 ;; Hardware stack levels used:    1
  7717 ;; Hardware stack levels required when called:    1
  7718 ;; This function calls:
  7719 ;;		___lldiv
  7720 ;; This function is called by:
  7721 ;;		_Handler
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           
  7726                           ;psect for function _Timer1_DetectAssignCount
  7727  0403                     _Timer1_DetectAssignCount:	
  7728                           
  7729                           ;Timer1.c: 69: static uint16_t PreviousTimer1;
  7730                           ;Timer1.c: 71: if((tcnt.Delta_t>500000)&&((uint16_t)TMR1==PreviousTimer1))
  7731                           
  7732                           ;incstack = 0
  7733                           ; Regs used in _Timer1_DetectAssignCount: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  7734  0403  0020               	movlb	0	; select bank0
  7735  0404  0831               	movf	_tcnt+3,w
  7736  0405  1D03               	btfss	3,2
  7737  0406  2C0F               	goto	i1l2977
  7738  0407  3021               	movlw	33
  7739  0408  022E               	subwf	_tcnt,w
  7740  0409  30A1               	movlw	161
  7741  040A  3B2F               	subwfb	_tcnt+1,w
  7742  040B  3007               	movlw	7
  7743  040C  3B30               	subwfb	_tcnt+2,w
  7744  040D  1C03               	btfss	3,0
  7745  040E  2C1F               	goto	i1l468
  7746  040F                     i1l2977:	
  7747  040F  0840               	movf	Timer1_DetectAssignCount@PreviousTimer1+1,w
  7748  0410  0617               	xorwf	23,w	;volatile
  7749  0411  1D03               	skipz
  7750  0412  2C15               	goto	u258_25
  7751  0413  083F               	movf	Timer1_DetectAssignCount@PreviousTimer1,w
  7752  0414  0616               	xorwf	22,w	;volatile
  7753  0415                     u258_25:	
  7754  0415  1D03               	skipz
  7755  0416  2C1F               	goto	i1l468
  7756                           
  7757                           ;Timer1.c: 72: cnts.SigmaCPM = 0;
  7758  0417  3000               	movlw	0
  7759  0418  00A7               	movwf	_cnts+7
  7760  0419  3000               	movlw	0
  7761  041A  00A6               	movwf	_cnts+6
  7762  041B  3000               	movlw	0
  7763  041C  00A5               	movwf	_cnts+5
  7764  041D  3000               	movlw	0
  7765  041E  00A4               	movwf	_cnts+4
  7766  041F                     i1l468:	
  7767                           
  7768                           ;Timer1.c: 73: PreviousTimer1 = (uint16_t)TMR1;
  7769  041F  0817               	movf	23,w	;volatile
  7770  0420  00C0               	movwf	Timer1_DetectAssignCount@PreviousTimer1+1
  7771  0421  0816               	movf	22,w	;volatile
  7772  0422  00BF               	movwf	Timer1_DetectAssignCount@PreviousTimer1
  7773                           
  7774                           ;Timer1.c: 75: tcnt.RenewalCPM++;
  7775  0423  3001               	movlw	1
  7776  0424  07B2               	addwf	_tcnt+4,f
  7777  0425  3000               	movlw	0
  7778  0426  3DB3               	addwfc	_tcnt+5,f
  7779                           
  7780                           ;Timer1.c: 76: if((tcnt.RenewalCPM>5000)&&cnts.Num_of_Detect)
  7781  0427  3013               	movlw	19
  7782  0428  0233               	subwf	_tcnt+5,w
  7783  0429  3089               	movlw	137
  7784  042A  1903               	skipnz
  7785  042B  0232               	subwf	_tcnt+4,w
  7786  042C  1C03               	skipc
  7787  042D  2C56               	goto	i1l2987
  7788  042E  082D               	movf	_cnts+13,w
  7789  042F  042C               	iorwf	_cnts+12,w
  7790  0430  042B               	iorwf	_cnts+11,w
  7791  0431  042A               	iorwf	_cnts+10,w
  7792  0432  1903               	skipnz
  7793  0433  2C56               	goto	i1l2987
  7794                           
  7795                           ;Timer1.c: 77: {
  7796                           ;Timer1.c: 78: tcnt.RenewalCPM = 0;
  7797  0434  01B2               	clrf	_tcnt+4
  7798  0435  01B3               	clrf	_tcnt+5
  7799                           
  7800                           ;Timer1.c: 79: cnts.AverageCPM = (uint16_t)(cnts.SigmaCPM/cnts.Num_of_Detect);
  7801  0436  300A               	movlw	10
  7802  0437  3E20               	addlw	(low (_cnts| 0))& (0+255)
  7803  0438  0086               	movwf	6
  7804  0439  0187               	clrf	7
  7805  043A  3F40               	moviw [0]fsr1
  7806  043B  00F0               	movwf	___lldiv@divisor
  7807  043C  3F41               	moviw [1]fsr1
  7808  043D  00F1               	movwf	___lldiv@divisor+1
  7809  043E  3F42               	moviw [2]fsr1
  7810  043F  00F2               	movwf	___lldiv@divisor+2
  7811  0440  3F43               	moviw [3]fsr1
  7812  0441  00F3               	movwf	___lldiv@divisor+3
  7813  0442  3004               	movlw	4
  7814  0443  3E20               	addlw	(low (_cnts| 0))& (0+255)
  7815  0444  0086               	movwf	6
  7816  0445  0187               	clrf	7
  7817  0446  3F40               	moviw [0]fsr1
  7818  0447  00F4               	movwf	___lldiv@dividend
  7819  0448  3F41               	moviw [1]fsr1
  7820  0449  00F5               	movwf	___lldiv@dividend+1
  7821  044A  3F42               	moviw [2]fsr1
  7822  044B  00F6               	movwf	___lldiv@dividend+2
  7823  044C  3F43               	moviw [3]fsr1
  7824  044D  00F7               	movwf	___lldiv@dividend+3
  7825  044E  3186  2645  3184   	fcall	___lldiv
  7826  0451  0871               	movf	?___lldiv+1,w
  7827  0452  0020               	movlb	0	; select bank0
  7828  0453  00A9               	movwf	_cnts+9
  7829  0454  0870               	movf	?___lldiv,w
  7830  0455  00A8               	movwf	_cnts+8
  7831  0456                     i1l2987:	
  7832                           
  7833                           ;Timer1.c: 80: }
  7834                           ;Timer1.c: 82: if(TMR1IF&&TMR1IE)
  7835  0456  1C11               	btfss	17,0	;volatile
  7836  0457  2C98               	goto	i1l3011
  7837  0458  0021               	movlb	1	; select bank1
  7838  0459  1C11               	btfss	17,0	;volatile
  7839  045A  2C98               	goto	i1l3011
  7840                           
  7841                           ;Timer1.c: 83: {
  7842                           ;Timer1.c: 84: cnts.SigmaDeltaCount+= 100UL;
  7843  045B  3064               	movlw	100
  7844  045C  0020               	movlb	0	; select bank0
  7845  045D  07A0               	addwf	_cnts,f
  7846  045E  3000               	movlw	0
  7847  045F  3DA1               	addwfc	_cnts+1,f
  7848  0460  3000               	movlw	0
  7849  0461  3DA2               	addwfc	_cnts+2,f
  7850  0462  3000               	movlw	0
  7851  0463  3DA3               	addwfc	_cnts+3,f
  7852                           
  7853                           ;Timer1.c: 86: cnts.SigmaCPM += (uint32_t)((100UL * 30000UL) / tcnt.Delta_t);
  7854  0464  0831               	movf	_tcnt+3,w
  7855  0465  00F3               	movwf	___lldiv@divisor+3
  7856  0466  0830               	movf	_tcnt+2,w
  7857  0467  00F2               	movwf	___lldiv@divisor+2
  7858  0468  082F               	movf	_tcnt+1,w
  7859  0469  00F1               	movwf	___lldiv@divisor+1
  7860  046A  082E               	movf	_tcnt,w
  7861  046B  00F0               	movwf	___lldiv@divisor
  7862  046C  3000               	movlw	0
  7863  046D  00F7               	movwf	___lldiv@dividend+3
  7864  046E  302D               	movlw	45
  7865  046F  00F6               	movwf	___lldiv@dividend+2
  7866  0470  30C6               	movlw	198
  7867  0471  00F5               	movwf	___lldiv@dividend+1
  7868  0472  30C0               	movlw	192
  7869  0473  00F4               	movwf	___lldiv@dividend
  7870  0474  3186  2645         	fcall	___lldiv
  7871  0476  0870               	movf	?___lldiv,w
  7872  0477  0020               	movlb	0	; select bank0
  7873  0478  07A4               	addwf	_cnts+4,f
  7874  0479  0871               	movf	?___lldiv+1,w
  7875  047A  3DA5               	addwfc	_cnts+5,f
  7876  047B  0872               	movf	?___lldiv+2,w
  7877  047C  3DA6               	addwfc	_cnts+6,f
  7878  047D  0873               	movf	?___lldiv+3,w
  7879  047E  3DA7               	addwfc	_cnts+7,f
  7880                           
  7881                           ;Timer1.c: 87: cnts.Num_of_Detect++;
  7882  047F  3001               	movlw	1
  7883  0480  07AA               	addwf	_cnts+10,f
  7884  0481  3000               	movlw	0
  7885  0482  3DAB               	addwfc	_cnts+11,f
  7886  0483  3000               	movlw	0
  7887  0484  3DAC               	addwfc	_cnts+12,f
  7888  0485  3000               	movlw	0
  7889  0486  3DAD               	addwfc	_cnts+13,f
  7890                           
  7891                           ;Timer1.c: 89: tcnt.Delta_t = 0;
  7892  0487  3000               	movlw	0
  7893  0488  00B1               	movwf	_tcnt+3
  7894  0489  3000               	movlw	0
  7895  048A  00B0               	movwf	_tcnt+2
  7896  048B  3000               	movlw	0
  7897  048C  00AF               	movwf	_tcnt+1
  7898  048D  3000               	movlw	0
  7899  048E  00AE               	movwf	_tcnt
  7900                           
  7901                           ;Timer1.c: 90: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF-100UL; TMR1ON = 1; };
  7902  048F  1018               	bcf	24,0	;volatile
  7903  0490  30FF               	movlw	255
  7904  0491  0097               	movwf	23	;volatile
  7905  0492  309B               	movlw	155
  7906  0493  0096               	movwf	22	;volatile
  7907  0494  1418               	bsf	24,0	;volatile
  7908                           
  7909                           ;Timer1.c: 91: TMR1IF = 0;
  7910  0495  1011               	bcf	17,0	;volatile
  7911                           
  7912                           ;Timer1.c: 92: return 1;
  7913  0496  3001               	movlw	1
  7914  0497  0008               	return
  7915  0498                     i1l3011:	
  7916                           
  7917                           ;Timer1.c: 93: }
  7918                           ;Timer1.c: 94: return 0;
  7919  0498  3000               	movlw	0
  7920  0499  0008               	return
  7921  049A                     __end_of_Timer1_DetectAssignCount:	
  7922                           
  7923                           	psect	text40
  7924  0645                     __ptext40:	
  7925 ;; *************** function ___lldiv *****************
  7926 ;; Defined at:
  7927 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;  divisor         4    0[COMMON] unsigned long 
  7930 ;;  dividend        4    4[COMMON] unsigned long 
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;  quotient        4    9[COMMON] unsigned long 
  7933 ;;  counter         1   13[COMMON] unsigned char 
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  4    0[COMMON] unsigned long 
  7936 ;; Registers used:
  7937 ;;		wreg, status,2, status,0
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7943 ;;      Params:         8       0       0       0       0       0
  7944 ;;      Locals:         5       0       0       0       0       0
  7945 ;;      Temps:          1       0       0       0       0       0
  7946 ;;      Totals:        14       0       0       0       0       0
  7947 ;;Total ram usage:       14 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; This function calls:
  7950 ;;		Nothing
  7951 ;; This function is called by:
  7952 ;;		_Timer1_DetectAssignCount
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           
  7957                           ;psect for function ___lldiv
  7958  0645                     ___lldiv:	
  7959                           
  7960                           ;incstack = 0
  7961                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7962  0645  3000               	movlw	0
  7963  0646  00FC               	movwf	___lldiv@quotient+3
  7964  0647  3000               	movlw	0
  7965  0648  00FB               	movwf	___lldiv@quotient+2
  7966  0649  3000               	movlw	0
  7967  064A  00FA               	movwf	___lldiv@quotient+1
  7968  064B  3000               	movlw	0
  7969  064C  00F9               	movwf	___lldiv@quotient
  7970  064D  0873               	movf	___lldiv@divisor+3,w
  7971  064E  0472               	iorwf	___lldiv@divisor+2,w
  7972  064F  0471               	iorwf	___lldiv@divisor+1,w
  7973  0650  0470               	iorwf	___lldiv@divisor,w
  7974  0651  1903               	skipnz
  7975  0652  2E8E               	goto	i1l2683
  7976  0653  01FD               	clrf	___lldiv@counter
  7977  0654  0AFD               	incf	___lldiv@counter,f
  7978  0655                     i1l2669:	
  7979  0655  1BF3               	btfsc	___lldiv@divisor+3,7
  7980  0656  2E63               	goto	i1l2671
  7981  0657  3001               	movlw	1
  7982  0658                     u211_25:	
  7983  0658  35F0               	lslf	___lldiv@divisor,f
  7984  0659  0DF1               	rlf	___lldiv@divisor+1,f
  7985  065A  0DF2               	rlf	___lldiv@divisor+2,f
  7986  065B  0DF3               	rlf	___lldiv@divisor+3,f
  7987  065C  0B89               	decfsz	9,f
  7988  065D  2E58               	goto	u211_25
  7989  065E  3001               	movlw	1
  7990  065F  00F8               	movwf	??___lldiv
  7991  0660  0878               	movf	??___lldiv,w
  7992  0661  07FD               	addwf	___lldiv@counter,f
  7993  0662  2E55               	goto	i1l2669
  7994  0663                     i1l2671:	
  7995  0663  3001               	movlw	1
  7996  0664                     u213_25:	
  7997  0664  35F9               	lslf	___lldiv@quotient,f
  7998  0665  0DFA               	rlf	___lldiv@quotient+1,f
  7999  0666  0DFB               	rlf	___lldiv@quotient+2,f
  8000  0667  0DFC               	rlf	___lldiv@quotient+3,f
  8001  0668  0B89               	decfsz	9,f
  8002  0669  2E64               	goto	u213_25
  8003  066A  0873               	movf	___lldiv@divisor+3,w
  8004  066B  0277               	subwf	___lldiv@dividend+3,w
  8005  066C  1D03               	skipz
  8006  066D  2E78               	goto	u214_25
  8007  066E  0872               	movf	___lldiv@divisor+2,w
  8008  066F  0276               	subwf	___lldiv@dividend+2,w
  8009  0670  1D03               	skipz
  8010  0671  2E78               	goto	u214_25
  8011  0672  0871               	movf	___lldiv@divisor+1,w
  8012  0673  0275               	subwf	___lldiv@dividend+1,w
  8013  0674  1D03               	skipz
  8014  0675  2E78               	goto	u214_25
  8015  0676  0870               	movf	___lldiv@divisor,w
  8016  0677  0274               	subwf	___lldiv@dividend,w
  8017  0678                     u214_25:	
  8018  0678  1C03               	skipc
  8019  0679  2E83               	goto	i1l2679
  8020  067A  0870               	movf	___lldiv@divisor,w
  8021  067B  02F4               	subwf	___lldiv@dividend,f
  8022  067C  0871               	movf	___lldiv@divisor+1,w
  8023  067D  3BF5               	subwfb	___lldiv@dividend+1,f
  8024  067E  0872               	movf	___lldiv@divisor+2,w
  8025  067F  3BF6               	subwfb	___lldiv@dividend+2,f
  8026  0680  0873               	movf	___lldiv@divisor+3,w
  8027  0681  3BF7               	subwfb	___lldiv@dividend+3,f
  8028  0682  1479               	bsf	___lldiv@quotient,0
  8029  0683                     i1l2679:	
  8030  0683  3001               	movlw	1
  8031  0684                     u215_25:	
  8032  0684  36F3               	lsrf	___lldiv@divisor+3,f
  8033  0685  0CF2               	rrf	___lldiv@divisor+2,f
  8034  0686  0CF1               	rrf	___lldiv@divisor+1,f
  8035  0687  0CF0               	rrf	___lldiv@divisor,f
  8036  0688  0B89               	decfsz	9,f
  8037  0689  2E84               	goto	u215_25
  8038  068A  3001               	movlw	1
  8039  068B  02FD               	subwf	___lldiv@counter,f
  8040  068C  1D03               	btfss	3,2
  8041  068D  2E63               	goto	i1l2671
  8042  068E                     i1l2683:	
  8043  068E  087C               	movf	___lldiv@quotient+3,w
  8044  068F  00F3               	movwf	?___lldiv+3
  8045  0690  087B               	movf	___lldiv@quotient+2,w
  8046  0691  00F2               	movwf	?___lldiv+2
  8047  0692  087A               	movf	___lldiv@quotient+1,w
  8048  0693  00F1               	movwf	?___lldiv+1
  8049  0694  0879               	movf	___lldiv@quotient,w
  8050  0695  00F0               	movwf	?___lldiv
  8051  0696  0008               	return
  8052  0697                     __end_of___lldiv:	
  8053                           
  8054                           	psect	text41
  8055  0D39                     __ptext41:	
  8056 ;; *************** function _Timer1_Count200us *****************
  8057 ;; Defined at:
  8058 ;;		line 62 in file "Timer1.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;		None
  8061 ;; Auto vars:     Size  Location     Type
  8062 ;;		None
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  1    wreg      void 
  8065 ;; Registers used:
  8066 ;;		wreg
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8072 ;;      Params:         0       0       0       0       0       0
  8073 ;;      Locals:         0       0       0       0       0       0
  8074 ;;      Temps:          0       0       0       0       0       0
  8075 ;;      Totals:         0       0       0       0       0       0
  8076 ;;Total ram usage:        0 bytes
  8077 ;; Hardware stack levels used:    1
  8078 ;; This function calls:
  8079 ;;		Nothing
  8080 ;; This function is called by:
  8081 ;;		_Handler
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           
  8086                           ;psect for function _Timer1_Count200us
  8087  0D39                     _Timer1_Count200us:	
  8088                           
  8089                           ;Timer1.c: 64: tcnt.Delta_t++;
  8090                           
  8091                           ;incstack = 0
  8092                           ; Regs used in _Timer1_Count200us: [wreg]
  8093  0D39  3001               	movlw	1
  8094  0D3A  0020               	movlb	0	; select bank0
  8095  0D3B  07AE               	addwf	_tcnt,f
  8096  0D3C  3000               	movlw	0
  8097  0D3D  3DAF               	addwfc	_tcnt+1,f
  8098  0D3E  3000               	movlw	0
  8099  0D3F  3DB0               	addwfc	_tcnt+2,f
  8100  0D40  3000               	movlw	0
  8101  0D41  3DB1               	addwfc	_tcnt+3,f
  8102  0D42  0008               	return
  8103  0D43                     __end_of_Timer1_Count200us:	
  8104                           
  8105                           	psect	text42
  8106  0D18                     __ptext42:	
  8107 ;; *************** function _I2C_CommonInterrupt *****************
  8108 ;; Defined at:
  8109 ;;		line 58 in file "I2C_Common.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;		None
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;		None
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      void 
  8116 ;; Registers used:
  8117 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8123 ;;      Params:         0       0       0       0       0       0
  8124 ;;      Locals:         0       0       0       0       0       0
  8125 ;;      Temps:          0       0       0       0       0       0
  8126 ;;      Totals:         0       0       0       0       0       0
  8127 ;;Total ram usage:        0 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    1
  8130 ;; This function calls:
  8131 ;;		_I2C1_Interrupt
  8132 ;;		_I2C2_Interrupt
  8133 ;; This function is called by:
  8134 ;;		_Handler
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           
  8139                           ;psect for function _I2C_CommonInterrupt
  8140  0D18                     _I2C_CommonInterrupt:	
  8141                           
  8142                           ;I2C_Common.c: 60: I2C1_Interrupt();
  8143                           
  8144                           ;incstack = 0
  8145                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8146  0D18  3185  25F1  318D   	fcall	_I2C1_Interrupt
  8147                           
  8148                           ;I2C_Common.c: 61: I2C2_Interrupt();
  8149  0D1B  3185  259D         	fcall	_I2C2_Interrupt
  8150  0D1D  0008               	return
  8151  0D1E                     __end_of_I2C_CommonInterrupt:	
  8152                           
  8153                           	psect	text43
  8154  059D                     __ptext43:	
  8155 ;; *************** function _I2C2_Interrupt *****************
  8156 ;; Defined at:
  8157 ;;		line 152 in file "I2C2.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;		None
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;		None
  8162 ;; Return value:  Size  Location     Type
  8163 ;;                  1    wreg      void 
  8164 ;; Registers used:
  8165 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8166 ;; Tracked objects:
  8167 ;;		On entry : 0/0
  8168 ;;		On exit  : 0/0
  8169 ;;		Unchanged: 0/0
  8170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8171 ;;      Params:         0       0       0       0       0       0
  8172 ;;      Locals:         0       0       0       0       0       0
  8173 ;;      Temps:          1       0       0       0       0       0
  8174 ;;      Totals:         1       0       0       0       0       0
  8175 ;;Total ram usage:        1 bytes
  8176 ;; Hardware stack levels used:    1
  8177 ;; This function calls:
  8178 ;;		Nothing
  8179 ;; This function is called by:
  8180 ;;		_I2C_CommonInterrupt
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           
  8185                           ;psect for function _I2C2_Interrupt
  8186  059D                     _I2C2_Interrupt:	
  8187                           
  8188                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  8189                           
  8190                           ;incstack = 0
  8191                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  8192  059D  0020               	movlb	0	; select bank0
  8193  059E  1C14               	btfss	20,0	;volatile
  8194  059F  2DE9               	goto	i1l2591
  8195  05A0  0021               	movlb	1	; select bank1
  8196  05A1  1C14               	btfss	20,0	;volatile
  8197  05A2  2DE9               	goto	i1l2591
  8198                           
  8199                           ;I2C2.c: 155: {
  8200                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  8201  05A3  0024               	movlb	4	; select bank4
  8202  05A4  1E9C               	btfss	28,5	;volatile
  8203  05A5  2DC0               	goto	i1l294
  8204                           
  8205                           ;I2C2.c: 157: {
  8206                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  8207  05A6  1D1C               	btfss	28,2	;volatile
  8208  05A7  2DB3               	goto	i1l2567
  8209                           
  8210                           ;I2C2.c: 159: {
  8211                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  8212  05A8  1B1E               	btfsc	30,6	;volatile
  8213  05A9  2DE7               	goto	i1l2589
  8214  05AA                     i1l2559:	
  8215                           ;I2C2.c: 161: {
  8216                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  8217                           
  8218  05AA  081C               	movf	28,w	;volatile
  8219  05AB  3901               	andlw	1
  8220  05AC  00F0               	movwf	??_I2C2_Interrupt
  8221  05AD  0E1D               	swapf	29,w	;volatile
  8222  05AE  3901               	andlw	1
  8223  05AF  0470               	iorwf	??_I2C2_Interrupt,w
  8224  05B0  1D03               	btfss	3,2
  8225  05B1  2DAA               	goto	i1l2559
  8226  05B2  2DD3               	goto	L4
  8227  05B3                     i1l2567:	
  8228                           ;I2C2.c: 166: }
  8229                           ;I2C2.c: 167: }
  8230                           
  8231                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  8232                           
  8233                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  8234                           
  8235                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  8236                           
  8237                           
  8238                           ;I2C2.c: 168: else
  8239                           ;I2C2.c: 169: {
  8240                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  8241  05B3  0819               	movf	25,w	;volatile
  8242  05B4  00F0               	movwf	??_I2C2_Interrupt
  8243  05B5  0021               	movlb	1	; select bank1
  8244  05B6  0831               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  8245  05B7  0086               	movwf	6
  8246  05B8  0187               	clrf	7
  8247  05B9  0870               	movf	??_I2C2_Interrupt,w
  8248  05BA  0081               	movwf	1
  8249                           
  8250                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  8251  05BB  3001               	movlw	1
  8252  05BC  00F0               	movwf	??_I2C2_Interrupt
  8253  05BD  0870               	movf	??_I2C2_Interrupt,w
  8254  05BE  07B1               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  8255  05BF  2DE5               	goto	i1l2587
  8256  05C0                     i1l294:	
  8257                           ;I2C2.c: 173: }
  8258                           ;I2C2.c: 174: }
  8259                           
  8260                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  8261                           
  8262                           
  8263                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  8264  05C0  1A9C               	btfsc	28,5	;volatile
  8265  05C1  2DE7               	goto	i1l2589
  8266                           
  8267                           ;I2C2.c: 176: {
  8268                           ;I2C2.c: 177: SSP2BUF;
  8269  05C2  0819               	movf	25,w	;volatile
  8270                           
  8271                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  8272  05C3  1D1C               	btfss	28,2	;volatile
  8273  05C4  2DE0               	goto	i1l2585
  8274                           
  8275                           ;I2C2.c: 180: {
  8276                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  8277  05C5  30A0               	movlw	(low (_I2C2_Config| 0))& (0+255)
  8278  05C6  00F0               	movwf	??_I2C2_Interrupt
  8279  05C7  0870               	movf	??_I2C2_Interrupt,w
  8280  05C8  0021               	movlb	1	; select bank1
  8281  05C9  00B0               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  8282  05CA                     i1l2579:	
  8283                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  8284                           
  8285  05CA  0024               	movlb	4	; select bank4
  8286  05CB  081C               	movf	28,w	;volatile
  8287  05CC  3901               	andlw	1
  8288  05CD  00F0               	movwf	??_I2C2_Interrupt
  8289  05CE  0E1D               	swapf	29,w	;volatile
  8290  05CF  3901               	andlw	1
  8291  05D0  0470               	iorwf	??_I2C2_Interrupt,w
  8292  05D1  1D03               	btfss	3,2
  8293  05D2  2DCA               	goto	i1l2579
  8294  05D3                     L4:	
  8295                           
  8296                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  8297  05D3  0021               	movlb	1	; select bank1
  8298  05D4  0830               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  8299  05D5  0086               	movwf	6
  8300  05D6  0187               	clrf	7
  8301  05D7  0801               	movf	1,w
  8302  05D8  0024               	movlb	4	; select bank4
  8303  05D9  0099               	movwf	25	;volatile
  8304                           
  8305                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  8306  05DA  3001               	movlw	1
  8307  05DB  00F0               	movwf	??_I2C2_Interrupt
  8308  05DC  0870               	movf	??_I2C2_Interrupt,w
  8309  05DD  0021               	movlb	1	; select bank1
  8310  05DE  07B0               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  8311                           
  8312                           ;I2C2.c: 186: }
  8313  05DF  2DE5               	goto	i1l2587
  8314  05E0                     i1l2585:	
  8315                           
  8316                           ;I2C2.c: 187: else
  8317                           ;I2C2.c: 188: {
  8318                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  8319  05E0  30A8               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  8320  05E1  00F0               	movwf	??_I2C2_Interrupt
  8321  05E2  0870               	movf	??_I2C2_Interrupt,w
  8322  05E3  0021               	movlb	1	; select bank1
  8323  05E4  00B1               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  8324  05E5                     i1l2587:	
  8325                           
  8326                           ;I2C2.c: 190: }
  8327                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  8328  05E5  0024               	movlb	4	; select bank4
  8329  05E6  161D               	bsf	29,4	;volatile
  8330  05E7                     i1l2589:	
  8331                           
  8332                           ;I2C2.c: 192: }
  8333                           ;I2C2.c: 193: SSP2IF = 0;
  8334  05E7  0020               	movlb	0	; select bank0
  8335  05E8  1014               	bcf	20,0	;volatile
  8336  05E9                     i1l2591:	
  8337                           
  8338                           ;I2C2.c: 194: }
  8339                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  8340  05E9  0021               	movlb	1	; select bank1
  8341  05EA  1C94               	btfss	20,1	;volatile
  8342  05EB  0008               	return
  8343  05EC  0020               	movlb	0	; select bank0
  8344  05ED  1C94               	btfss	20,1	;volatile
  8345  05EE  0008               	return
  8346                           
  8347                           ;I2C2.c: 197: BCL2IF = 0;
  8348  05EF  1094               	bcf	20,1	;volatile
  8349  05F0  0008               	return
  8350  05F1                     __end_of_I2C2_Interrupt:	
  8351                           
  8352                           	psect	text44
  8353  05F1                     __ptext44:	
  8354 ;; *************** function _I2C1_Interrupt *****************
  8355 ;; Defined at:
  8356 ;;		line 152 in file "I2C1.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;		None
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;		None
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  1    wreg      void 
  8363 ;; Registers used:
  8364 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8370 ;;      Params:         0       0       0       0       0       0
  8371 ;;      Locals:         0       0       0       0       0       0
  8372 ;;      Temps:          1       0       0       0       0       0
  8373 ;;      Totals:         1       0       0       0       0       0
  8374 ;;Total ram usage:        1 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; This function calls:
  8377 ;;		Nothing
  8378 ;; This function is called by:
  8379 ;;		_I2C_CommonInterrupt
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           
  8383                           
  8384                           ;psect for function _I2C1_Interrupt
  8385  05F1                     _I2C1_Interrupt:	
  8386                           
  8387                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  8388                           
  8389                           ;incstack = 0
  8390                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  8391  05F1  0020               	movlb	0	; select bank0
  8392  05F2  1D91               	btfss	17,3	;volatile
  8393  05F3  2E3D               	goto	i1l2541
  8394  05F4  0021               	movlb	1	; select bank1
  8395  05F5  1D91               	btfss	17,3	;volatile
  8396  05F6  2E3D               	goto	i1l2541
  8397                           
  8398                           ;I2C1.c: 155: {
  8399                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  8400  05F7  0024               	movlb	4	; select bank4
  8401  05F8  1E94               	btfss	20,5	;volatile
  8402  05F9  2E14               	goto	i1l157
  8403                           
  8404                           ;I2C1.c: 157: {
  8405                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  8406  05FA  1D14               	btfss	20,2	;volatile
  8407  05FB  2E07               	goto	i1l2517
  8408                           
  8409                           ;I2C1.c: 159: {
  8410                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  8411  05FC  1B16               	btfsc	22,6	;volatile
  8412  05FD  2E3B               	goto	i1l2539
  8413  05FE                     i1l2509:	
  8414                           ;I2C1.c: 161: {
  8415                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  8416                           
  8417  05FE  0814               	movf	20,w	;volatile
  8418  05FF  3901               	andlw	1
  8419  0600  00F0               	movwf	??_I2C1_Interrupt
  8420  0601  0E15               	swapf	21,w	;volatile
  8421  0602  3901               	andlw	1
  8422  0603  0470               	iorwf	??_I2C1_Interrupt,w
  8423  0604  1D03               	btfss	3,2
  8424  0605  2DFE               	goto	i1l2509
  8425  0606  2E27               	goto	L5
  8426  0607                     i1l2517:	
  8427                           ;I2C1.c: 166: }
  8428                           ;I2C1.c: 167: }
  8429                           
  8430                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  8431                           
  8432                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  8433                           
  8434                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  8435                           
  8436                           
  8437                           ;I2C1.c: 168: else
  8438                           ;I2C1.c: 169: {
  8439                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  8440  0607  0811               	movf	17,w	;volatile
  8441  0608  00F0               	movwf	??_I2C1_Interrupt
  8442  0609  0021               	movlb	1	; select bank1
  8443  060A  0844               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  8444  060B  0086               	movwf	6
  8445  060C  0187               	clrf	7
  8446  060D  0870               	movf	??_I2C1_Interrupt,w
  8447  060E  0081               	movwf	1
  8448                           
  8449                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  8450  060F  3001               	movlw	1
  8451  0610  00F0               	movwf	??_I2C1_Interrupt
  8452  0611  0870               	movf	??_I2C1_Interrupt,w
  8453  0612  07C4               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  8454  0613  2E39               	goto	i1l2537
  8455  0614                     i1l157:	
  8456                           ;I2C1.c: 173: }
  8457                           ;I2C1.c: 174: }
  8458                           
  8459                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  8460                           
  8461                           
  8462                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  8463  0614  1A94               	btfsc	20,5	;volatile
  8464  0615  2E3B               	goto	i1l2539
  8465                           
  8466                           ;I2C1.c: 176: {
  8467                           ;I2C1.c: 177: SSP1BUF;
  8468  0616  0811               	movf	17,w	;volatile
  8469                           
  8470                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  8471  0617  1D14               	btfss	20,2	;volatile
  8472  0618  2E34               	goto	i1l2535
  8473                           
  8474                           ;I2C1.c: 180: {
  8475                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  8476  0619  30B3               	movlw	(low (_I2C1_Config| 0))& (0+255)
  8477  061A  00F0               	movwf	??_I2C1_Interrupt
  8478  061B  0870               	movf	??_I2C1_Interrupt,w
  8479  061C  0021               	movlb	1	; select bank1
  8480  061D  00C3               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  8481  061E                     i1l2529:	
  8482                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  8483                           
  8484  061E  0024               	movlb	4	; select bank4
  8485  061F  0814               	movf	20,w	;volatile
  8486  0620  3901               	andlw	1
  8487  0621  00F0               	movwf	??_I2C1_Interrupt
  8488  0622  0E15               	swapf	21,w	;volatile
  8489  0623  3901               	andlw	1
  8490  0624  0470               	iorwf	??_I2C1_Interrupt,w
  8491  0625  1D03               	btfss	3,2
  8492  0626  2E1E               	goto	i1l2529
  8493  0627                     L5:	
  8494                           
  8495                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  8496  0627  0021               	movlb	1	; select bank1
  8497  0628  0843               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  8498  0629  0086               	movwf	6
  8499  062A  0187               	clrf	7
  8500  062B  0801               	movf	1,w
  8501  062C  0024               	movlb	4	; select bank4
  8502  062D  0091               	movwf	17	;volatile
  8503                           
  8504                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  8505  062E  3001               	movlw	1
  8506  062F  00F0               	movwf	??_I2C1_Interrupt
  8507  0630  0870               	movf	??_I2C1_Interrupt,w
  8508  0631  0021               	movlb	1	; select bank1
  8509  0632  07C3               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  8510                           
  8511                           ;I2C1.c: 186: }
  8512  0633  2E39               	goto	i1l2537
  8513  0634                     i1l2535:	
  8514                           
  8515                           ;I2C1.c: 187: else
  8516                           ;I2C1.c: 188: {
  8517                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  8518  0634  30BB               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  8519  0635  00F0               	movwf	??_I2C1_Interrupt
  8520  0636  0870               	movf	??_I2C1_Interrupt,w
  8521  0637  0021               	movlb	1	; select bank1
  8522  0638  00C4               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  8523  0639                     i1l2537:	
  8524                           
  8525                           ;I2C1.c: 190: }
  8526                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  8527  0639  0024               	movlb	4	; select bank4
  8528  063A  1615               	bsf	21,4	;volatile
  8529  063B                     i1l2539:	
  8530                           
  8531                           ;I2C1.c: 192: }
  8532                           ;I2C1.c: 193: SSP1IF = 0;
  8533  063B  0020               	movlb	0	; select bank0
  8534  063C  1191               	bcf	17,3	;volatile
  8535  063D                     i1l2541:	
  8536                           
  8537                           ;I2C1.c: 194: }
  8538                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  8539  063D  0021               	movlb	1	; select bank1
  8540  063E  1D92               	btfss	18,3	;volatile
  8541  063F  0008               	return
  8542  0640  0020               	movlb	0	; select bank0
  8543  0641  1D92               	btfss	18,3	;volatile
  8544  0642  0008               	return
  8545                           
  8546                           ;I2C1.c: 197: BCL1IF = 0;
  8547  0643  1192               	bcf	18,3	;volatile
  8548  0644  0008               	return
  8549  0645                     __end_of_I2C1_Interrupt:	
  8550                           
  8551                           	psect	text45
  8552  0E19                     __ptext45:	
  8553 ;; *************** function _Buzzer_Count1ms *****************
  8554 ;; Defined at:
  8555 ;;		line 44 in file "Buzzer.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  1    wreg      void 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, status,0, pclath, cstack
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8569 ;;      Params:         0       0       0       0       0       0
  8570 ;;      Locals:         0       0       0       0       0       0
  8571 ;;      Temps:          0       0       0       0       0       0
  8572 ;;      Totals:         0       0       0       0       0       0
  8573 ;;Total ram usage:        0 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    1
  8576 ;; This function calls:
  8577 ;;		_Buzzer_SetDuty
  8578 ;; This function is called by:
  8579 ;;		_Handler
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           
  8584                           ;psect for function _Buzzer_Count1ms
  8585  0E19                     _Buzzer_Count1ms:	
  8586                           
  8587                           ;Buzzer.c: 46: if(count>0)
  8588                           
  8589                           ;incstack = 0
  8590                           ; Regs used in _Buzzer_Count1ms: [wreg+status,2+status,0+pclath+cstack]
  8591  0E19  0020               	movlb	0	; select bank0
  8592  0E1A  0841               	movf	_count,w
  8593  0E1B  0442               	iorwf	_count+1,w
  8594  0E1C  1903               	btfsc	3,2
  8595  0E1D  2E29               	goto	i1l2761
  8596                           
  8597                           ;Buzzer.c: 47: {
  8598                           ;Buzzer.c: 48: count--;
  8599  0E1E  3001               	movlw	1
  8600  0E1F  02C1               	subwf	_count,f
  8601  0E20  3000               	movlw	0
  8602  0E21  3BC2               	subwfb	_count+1,f
  8603                           
  8604                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  8605  0E22  30FF               	movlw	255
  8606  0E23  00F0               	movwf	Buzzer_SetDuty@duty
  8607  0E24  3001               	movlw	1
  8608  0E25  00F1               	movwf	Buzzer_SetDuty@duty+1
  8609  0E26  318E  262F         	fcall	_Buzzer_SetDuty
  8610                           
  8611                           ;Buzzer.c: 50: }
  8612  0E28  0008               	return
  8613  0E29                     i1l2761:	
  8614                           
  8615                           ;Buzzer.c: 51: else
  8616                           ;Buzzer.c: 52: {
  8617                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  8618  0E29  3000               	movlw	0
  8619  0E2A  00F0               	movwf	Buzzer_SetDuty@duty
  8620  0E2B  00F1               	movwf	Buzzer_SetDuty@duty+1
  8621  0E2C  318E  262F         	fcall	_Buzzer_SetDuty
  8622  0E2E  0008               	return
  8623  0E2F                     __end_of_Buzzer_Count1ms:	
  8624                           
  8625                           	psect	text46
  8626  0E2F                     __ptext46:	
  8627 ;; *************** function _Buzzer_SetDuty *****************
  8628 ;; Defined at:
  8629 ;;		line 31 in file "Buzzer.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;  duty            2    0[COMMON] unsigned int 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      void 
  8636 ;; Registers used:
  8637 ;;		wreg, status,2, status,0
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8643 ;;      Params:         2       0       0       0       0       0
  8644 ;;      Locals:         1       0       0       0       0       0
  8645 ;;      Temps:          2       0       0       0       0       0
  8646 ;;      Totals:         5       0       0       0       0       0
  8647 ;;Total ram usage:        5 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; This function calls:
  8650 ;;		Nothing
  8651 ;; This function is called by:
  8652 ;;		_Buzzer_Count1ms
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           
  8657                           ;psect for function _Buzzer_SetDuty
  8658  0E2F                     _Buzzer_SetDuty:	
  8659                           
  8660                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  8661                           
  8662                           ;incstack = 0
  8663                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  8664  0E2F  0025               	movlb	5	; select bank5
  8665  0E30  081A               	movf	26,w	;volatile
  8666  0E31  39CF               	andlw	207
  8667  0E32  00F2               	movwf	??_Buzzer_SetDuty
  8668  0E33  0872               	movf	??_Buzzer_SetDuty,w
  8669  0E34  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  8670                           
  8671                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  8672  0E35  0871               	movf	Buzzer_SetDuty@duty+1,w
  8673  0E36  00F3               	movwf	??_Buzzer_SetDuty+1
  8674  0E37  0870               	movf	Buzzer_SetDuty@duty,w
  8675  0E38  00F2               	movwf	??_Buzzer_SetDuty
  8676  0E39  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8677  0E3A  0CF2               	rrf	??_Buzzer_SetDuty,f
  8678  0E3B  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  8679  0E3C  0CF2               	rrf	??_Buzzer_SetDuty,f
  8680  0E3D  0872               	movf	??_Buzzer_SetDuty,w
  8681  0E3E  0098               	movwf	24	;volatile
  8682                           
  8683                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  8684  0E3F  0870               	movf	Buzzer_SetDuty@duty,w
  8685  0E40  3903               	andlw	3
  8686  0E41  00F2               	movwf	??_Buzzer_SetDuty
  8687  0E42  3003               	movlw	3
  8688  0E43                     u180_25:	
  8689  0E43  35F2               	lslf	??_Buzzer_SetDuty,f
  8690  0E44  3EFF               	addlw	-1
  8691  0E45  1D03               	skipz
  8692  0E46  2E43               	goto	u180_25
  8693  0E47  3572               	lslf	??_Buzzer_SetDuty,w
  8694  0E48  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  8695  0E49  009A               	movwf	26	;volatile
  8696  0E4A  0008               	return
  8697  0E4B                     __end_of_Buzzer_SetDuty:	
  8698  007E                     btemp	set	126	;btemp
  8699  007E                     int$flags	set	126
  8700  007E                     wtemp0	set	126


Data Sizes:
    Strings     312
    Constant    40
    Data        90
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      75
    BANK1            80      0      68
    BANK2            80      0      60
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_4(CODE[10]), STR_3(CODE[8]), STR_2(CODE[11]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_49(CODE[7]), STR_48(CODE[7]), STR_47(CODE[7]), STR_46(CODE[7]), 
		 -> STR_45(CODE[7]), STR_44(CODE[7]), STR_43(CODE[7]), STR_42(CODE[6]), 
		 -> STR_41(CODE[6]), STR_40(CODE[6]), STR_39(CODE[6]), STR_38(CODE[5]), 
		 -> STR_37(CODE[5]), STR_36(CODE[5]), STR_35(CODE[5]), 

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_34(CODE[8]), STR_33(CODE[8]), STR_32(CODE[8]), STR_31(CODE[7]), 
		 -> STR_30(CODE[7]), STR_29(CODE[7]), STR_28(CODE[7]), STR_27(CODE[7]), 
		 -> STR_26(CODE[6]), STR_25(CODE[6]), STR_24(CODE[6]), STR_23(CODE[6]), 
		 -> STR_22(CODE[5]), STR_21(CODE[5]), STR_20(CODE[5]), 

    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[5]), STR_16(CODE[6]), 
		 -> STR_15(CODE[5]), STR_14(CODE[6]), STR_13(CODE[5]), STR_12(CODE[6]), 
		 -> STR_11(CODE[5]), STR_10(CODE[6]), STR_9(CODE[5]), STR_8(CODE[6]), 
		 -> STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[5]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S46$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S46$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Timer1_DetectAssignCount->___lldiv
    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Count1ms->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_LCD_WriteData
    ___lwmod->___lwdiv
    _mTouch_Init->_mTouch_PortInit
    _mTouch_Check->_Buzzer_MiliSecond
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _DAC_WriteVoltage->_I2C_Transmit
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6051
                                             35 BANK0      1     1      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                   _DAC_WriteVoltage
                     _LCD_CursorHome
                           _LCD_Init
                      _Timer1_GetCPM
                 _Timer1_GetCountSum
                        _Timer1_Init
                  _Timer1_StartCount
                        _Timer4_Init
                        _Timer6_Init
                       _mTouch_Check
                        _mTouch_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              28    20      8    1755
                                             15 BANK0     20    12      8
                      _Timer1_GetCPM (ARG)
                 _Timer1_GetCountSum (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     110
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              1 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              1 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              9 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              1 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              2 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _mTouch_Check                                         6     6      0     196
                                              3 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2      86
                                              1 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StartCount                                    0     0      0       0
                 _Timer1_ClearRecord
 ---------------------------------------------------------------------------------
 (2) _Timer1_ClearRecord                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                              1 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        2     0      2       0
                                              1 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              5 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0      88
                                              1 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_WriteVoltage                                     5     3      2    1561
                                             17 BANK0      5     3      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    2275
                                             17 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1453
                                              9 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     446
                                              1 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     445
                                              1 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3     822
                                              6 BANK0      6     3      3
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     238
                                              2 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     238
                                              2 BANK0      4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              1     1      0     613
                                              0 BANK0      1     1      0
                    _Buzzer_Count1ms
                _I2C_CommonInterrupt
                  _Timer1_Count200us
           _Timer1_DetectAssignCount
                   _Timer4_CheckFlag
                   _Timer6_CheckFlag
           _mTouch_IntervalDecrement
                        _mTouch_Read
 ---------------------------------------------------------------------------------
 (6) _mTouch_Read                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer6_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer4_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_DetectAssignCount                             0     0      0     418
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             14     6      8     418
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (6) _Timer1_Count200us                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Buzzer_Count1ms                                      0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (7) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _DAC_WriteVoltage
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
   _Timer1_GetCountSum
   _Timer1_Init
   _Timer1_StartCount
     _Timer1_ClearRecord
   _Timer4_Init
   _Timer6_Init
   _mTouch_Check
     _Buzzer_MiliSecond
   _mTouch_Init
     _mTouch_PortInit
   _printf
     _Timer1_GetCPM (ARG)
     _Timer1_GetCountSum (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Count1ms
     _Buzzer_SetDuty
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Count200us
   _Timer1_DetectAssignCount
     ___lldiv
   _Timer4_CheckFlag
   _Timer6_CheckFlag
   _mTouch_IntervalDecrement
   _mTouch_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      D9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     24      4B       6       93.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      44       8       85.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      D9      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Jun 15 10:30:22 2017

                        _LCD_CursorHome 0DB1                             __CFG_CP$OFF 0000  
                                    l74 072B                                      l91 038C  
                                    l78 075C                          I2C2_Transmit@i 004D  
                 ??_I2C_CommonInterrupt 0071                     ___wmul@multiplicand 004A  
                                   l100 03B5                                     l211 06E7  
                                   l109 03D2                                     l215 0718  
                                   l228 02F5                                     l237 031E  
                                   l246 033B                                     l338 0F41  
                                   l717 02D3                                     l842 0E54  
                                   _GIE 005F                                     _PR2 001B  
                                   _PR4 0416                         _Buzzer_Count1ms 0E19  
                          __CFG_CPD$OFF 0000                                     _PR6 041D  
                          __CFG_BORV$LO 0000                                     wreg 0009  
                            _Basic_Init 0DE2                            __CFG_LVP$OFF 0000  
            ??_Timer1_DetectAssignCount 007E                                    l2311 0742  
                                  l2303 0735                                    l3111 069F  
                                  l2321 0751                                    l2411 070F  
                                  l2331 037D                                    l3123 06D9  
                                  l2309 0740                                    l2325 0753  
                                  l2341 03A0                                    l3133 01DF  
                                  l2407 070D                                    l2351 0398  
                                  l2415 02D8                                    l3151 0225  
                                  l2601 0F2A                                    l2353 039C  
                                  l2329 036F                                    l2441 032C  
                                  l2417 02E6                                    l3153 023A  
                                  l2355 03C3                                    l2451 0341  
                                  l2427 0309                                    l2611 0F54  
                                  l3163 024B                                    l3147 021F  
                                  l3139 01F0                                    l2605 0F38  
                                  l2365 03D8                                    l2373 03F7  
                                  l2453 0358                                    l2461 0369  
                                  l2437 0301                                    l3181 029A  
                                  l3173 0286                                    l3261 04D5  
                                  l2367 03EF                                    l2375 0400  
                                  l2455 035D                                    l2439 0305  
                                  l2615 0F65                                    l3175 0289  
                                  l3271 0503                                    l3255 04C4  
                                  l2369 03F4                                    l2617 0F6D  
                                  l2609 0F47                                    l2705 0FF2  
                                  l2721 0F76                                    l3177 028D  
                                  l3169 026A                                    l3273 050C  
                                  l2395 06FC                                    l2459 0360  
                                  l2723 0F82                                    l2731 0F97  
                                  l2651 0E4E                                    l3187 029E  
                                  l3275 0515                                    l3267 04E2  
                                  l2397 06FE                                    l2389 06F1  
                                  l2709 0FFB                                    l2645 0DAF  
                                  l3189 01C3                                    l3269 04E6  
                                  l2727 0F8E                                    l3279 051E  
                                  l2599 0F1D                                    l2697 0FD4  
                                  l2699 0FE0                       ?_DAC_WriteVoltage 0058  
                                  STR_1 009B                                    STR_2 0086  
                                  STR_3 00BD                                    STR_4 0091  
                                  STR_5 01A5                                    STR_6 0155  
                                  STR_7 01AA                                    STR_8 015B  
                                  STR_9 01AF                                    u2205 0FE1  
                                  u2215 0FEB                                    u2225 0FF3  
                                  u2075 0E55                                    u2085 0E5A  
                                  u2255 0F79                                    u2185 0FD7  
                                  u2275 0F88                                    u2285 0F8F  
                                  u2715 0260                                    u2655 06BF  
                                  u2735 0279                                    u1795 076D  
                                  _PEIE 005E                                    u2937 0537  
                                  u2947 0550                                    u2957 0565  
                                  u2967 057A                                    u2977 0DCB  
                                  u2987 0DBB                                    u2997 0766  
                 Buzzer_MiliSecond@time 0048                                    _TMR0 0015  
                                  _TMR1 0016                                    _TMR2 001A  
                                  _TMR4 0415                                    _TMR6 041C  
                                  _WPUB 020D                         ??_I2C1_Transmit 004A  
                          __CFG_WRT$OFF 0000                      ??_DAC_WriteVoltage 005A  
                                  _cnts 0020                                    _main 049A  
                                  _mode 003D                        __end_of_I2C_Init 0F44  
                                  _tcnt 002E                                    fsr0h 0005  
                                  fsr1h 0007                                    indf0 0000  
                                  fsr0l 0004                                    indf1 0001  
                                  fsr1l 0006                                    btemp 007E  
                         __CFG_BOREN$ON 0000                         ??_I2C2_Transmit 004A  
                      ??_I2C1_Interrupt 0070                                    start 0031  
                         __CFG_IESO$OFF 0000                         __end_of_Handler 0031  
                __end_of_LCD_CursorHome 0DC1                           _LCD_WriteData 0763  
                         __CFG_MCLRE$ON 0000                        ??_I2C2_Interrupt 0070  
              __end_of_LCD_DisplayClear 0DD1                   __size_of_I2C_Transmit 002B  
                      __end_of_LCD_Init 059D                           __CFG_PLLEN$ON 0000  
                                 ?_main 0070                                   STR_10 0161  
                                 STR_11 01B4                                   STR_20 0187  
                                 STR_12 0167                                   STR_21 0182  
                                 STR_13 01B9                                   STR_30 00C5  
                                 STR_22 0191                                   STR_14 016D  
                                 STR_31 010B                                   STR_23 0143  
                                 STR_15 0196                                   STR_32 00B5  
                                 STR_24 0119                                   STR_40 0131  
                                 STR_16 0149                                   STR_33 00AD  
                                 STR_25 0125                                   STR_41 0137  
                                 STR_17 019B                           __CFG_WDTE$OFF 0000  
                                 STR_34 00A5                                   STR_26 013D  
                                 STR_42 011F                                   STR_18 014F  
                                 STR_27 00F6                                   STR_43 00DA  
                                 STR_35 0173                                   STR_19 01A0  
                                 STR_28 00EF                                   STR_44 0104  
                                 STR_36 0178                                   STR_29 00FD  
                                 STR_45 00E1                                   STR_37 018C  
                                 STR_46 00E8                                   STR_38 017D  
                                 STR_47 0112                                   STR_39 012B  
                                 STR_48 00CC                                   STR_49 00D3  
                       __end_of___lldiv 0697                                   _T1CON 0018  
                                 _T2CON 001C                                   _LATA3 0863  
                                 _LATA4 0864                                   _LATA6 0866  
                                 _T4CON 0417                                   _T6CON 041E  
                       __end_of___lwdiv 1000             __size_of_Timer1_ClearRecord 0028  
                                 i1l157 0614                         __end_of___lwmod 0F9C  
                                 i1l294 05C0                                   i1l468 041F  
                                 i1l660 002A                                   i1l664 0DD7  
                                 i1l665 0DDC                                   _PORTA 000C  
                                 _PORTB 000D                                   _TRISA 008C  
                                 _TRISB 008D                       I2C2_Transmit@size 0049  
                         __CFG_PWRTE$ON 0000                          __CFG_FCMEN$OFF 0000  
                       __end_of_dpowers 0086                                   _count 0041  
                       __end_of_isdigit 0DB1                                   _putch 0D30  
                         ??_Buzzer_Init 0048                   __end_of_Timer1_GetCPM 0D24  
           __size_of_Timer1_GetCountSum 000A                                   status 0003  
                                 wtemp0 007E                       _Buzzer_MiliSecond 0D4D  
                          _I2C_Transmit 0F44                          ?_LCD_WriteData 0070  
                    ?_Buzzer_MiliSecond 0048                        ??_DAC_Initialize 0058  
                       ?_LCD_CursorHome 0070                         __initialization 0033  
                          __end_of_main 052E                 __end_of_Buzzer_Count1ms 0E2F  
                   ??_Buzzer_MiliSecond 004A                                  ??_main 006A  
                  __end_of_mTouch_Check 06DB                             ?_Basic_Init 0070  
                                _BCL1IE 0493                                  _BCL1IF 0093  
                                _BCL2IE 04A1                                  _BCL2IF 00A1  
                  __size_of_mTouch_Init 0013                    __size_of_mTouch_Read 0025  
                                _CCPR2L 0298                                  _ANSELA 018C  
                                ?_putch 0070                                  _ANSELB 018D  
                                _T1GCON 0019                                  i1l2013 0D6B  
                                i1l3011 0498                                  i1l2509 05FE  
                                i1l2517 0607                                  i1l2541 063D  
                                i1l2535 0634                                  i1l2537 0639  
                                i1l2529 061E                                  i1l2539 063B  
                                i1l3285 0012                                  i1l2559 05AA  
                                i1l2567 05B3                                  i1l2591 05E9  
                                i1l2671 0663                                  i1l2761 0E29  
                                i1l2585 05E0                                  i1l3289 001B  
                                i1l2587 05E5                                  i1l2579 05CA  
                                i1l2683 068E                      I2C2_Transmit@i_316 004E  
                                i1l2589 05E7                                  u211_25 0658  
                                i1l2669 0655                                  i1l1981 0D60  
                                i1l2679 0683                         _mTouch_Interval 0034  
                                i1l2977 040F                                  i1l2987 0456  
                                u213_25 0664                                  u214_25 0678  
                                u215_25 0684               __end_of_Buzzer_MiliSecond 0D57  
                                u180_25 0E43                                  u258_25 0415  
                                _OSCCON 0099                      I2C2_Transmit@pData 0048  
                                _TMR1IE 0488                                  _TMR1IF 0088  
                             ??_Handler 0047                                  _TMR4IE 0499  
                                _TMR4IF 0099                                  _TMR6IE 049B  
                                _TMR1ON 00C0                                  _TMR6IF 009B  
                                _SSP1IE 048B                                  _SSP1IF 008B  
                                _SSP2IE 04A0                                  _SSP2IF 00A0  
              _mTouch_IntervalDecrement 0DD1                         _mTouch_PortInit 0D87  
                         ??_Timer1_Init 0048                           ??_Timer4_Init 0048  
                   __end_of_Buzzer_Init 0EF2                           ??_Timer6_Init 0048  
                                ___wmul 0E4B                               ??___lldiv 0078  
                             ??___lwdiv 004C                               ??___lwmod 0054  
                                _printf 01BE                       ?_Timer4_CheckFlag 0070  
                      I2C_Transmit@I2Cx 0056                               ??_isdigit 0048  
                             ?_I2C_Init 004D                      ??_Timer4_CheckFlag 0070  
                                putch@c 004B                        I2C_Transmit@size 0052  
               __end_of__initialization 005A                               ?_LCD_Init 0070  
                       ??_LCD_WriteData 0048                       ?_Timer6_CheckFlag 0070  
                            _VoltageReg 0044                      ??_Timer6_CheckFlag 0070  
                    Buzzer_SetDuty@duty 0070                          __pcstackCOMMON 0070  
                   __size_of_Basic_Init 0011                            __pidataBANK1 0E67  
                          __pidataBANK2 07A0                        ?_Buzzer_Count1ms 0070  
                         __end_of_putch 0D39                     __end_of_Timer1_Init 07FD  
                   __end_of_Timer4_Init 0DA2                     __end_of_Timer6_Init 0E06  
             Buzzer_SetDuty@CCP2CON_Pre 0074                              ??_I2C_Init 0050  
                   I2C1_Transmit@result 004F                                 ??_putch 004B  
               __end_of_mTouch_PortInit 0D94                              __pbssBANK0 0020  
                            __pbssBANK1 00A0              __size_of_Buzzer_MiliSecond 000A  
                           _Buzzer_Init 0ECA                              ??_LCD_Init 004C  
               __size_of_Buzzer_SetDuty 001C                           _DAC_DataTable 005E  
                          I2C_Init@I2Cx 0052             __end_of_I2C_CommonInterrupt 0D1E  
                          I2C_Init@mode 004E                              __pmaintext 049A  
                               ?___wmul 0048               __size_of_DAC_WriteVoltage 002F  
                            __pintentry 0004                   __size_of_mTouch_Check 0044  
                               _CCP2CON 029A                       ?_LCD_DisplayClear 0070  
                               _APFCON0 011D                                 _APFCON1 011E  
                               _CCPTMRS 029E                                 ?_printf 0056  
                    ??_LCD_DisplayClear 004B                                 _CPSCON0 001E  
                               _CPSCON1 001F                                 _SSP1ADD 0212  
                               _SSP2ADD 021A                                 _SSP1BUF 0211  
                               _SSP2BUF 0219                                 _SSP1MSK 0213  
                               _SSP2MSK 021B                     I2C2_Transmit@result 004F  
                      ??_LCD_CursorHome 004B                                 _Handler 0004  
                 __end_of_I2C1_Transmit 0403                      mTouch_Read@channel 0043  
                          _mTouch_Check 0697                       _Timer1_Count200us 0D39  
                 __end_of_I2C2_Transmit 036C                             _Timer1_Init 07DC  
                           _Timer4_Init 0D94                             _Timer6_Init 0DF3  
                    ?_Timer1_Count200us 0070       __size_of_Timer1_DetectAssignCount 0097  
             ?_Timer1_DetectAssignCount 0070                                 ___lldiv 0645  
                       __size_of___wmul 001C                                 ___lwdiv 0FCB  
                               ___lwmod 0F6F                         __CFG_STVREN$OFF 0000  
            __end_of_Timer1_ClearRecord 0F1A                                 __ptext1 01BE  
                               __ptext2 0D30                                 __ptext3 0DA2  
                               __ptext4 0E4B                                 __ptext5 0F6F  
                               __ptext6 0FCB                                 __ptext7 0E06  
                               __ptext8 0D87                                 __ptext9 0697  
                   ??_Timer1_Count200us 0070                         __size_of_printf 0116  
                               _dpowers 007C                                 _isdigit 0DA2  
                          ??_Basic_Init 0048              ??_mTouch_IntervalDecrement 0070  
                               clrloop0 0D25              __end_of_Timer1_GetCountSum 0D4D  
                  end_of_initialization 005A                        ?_mTouch_PortInit 0070  
                         ?_I2C1_PinInit 0070                                 init_ram 0D2A  
                               initloop 0D2B               __end_of_Timer1_Count200us 0D43  
                         ?_I2C2_PinInit 0070                             _I2C1_Config 00B3  
                           _I2C2_Config 00A0                           ?_I2C1_Setting 0049  
                       ___lldiv@divisor 0070                           ?_I2C2_Setting 0049  
                       ___lldiv@counter 007D                       I2C_Transmit@pData 0051  
                               printf@c 0069                                 printf@f 0056  
                    __end_of_Basic_Init 0DF3                        _DAC_VoltageTable 00C6  
                          __pstringtext 005E                 __size_of_I2C1_Interrupt 0054  
                __size_of_Timer1_GetCPM 0006                        __CFG_FOSC$INTOSC 0000  
                         ??_mTouch_Init 0049                           ??_mTouch_Read 0070  
               __size_of_I2C2_Interrupt 0054                       __size_of_I2C_Init 002A  
                   I2C1_Setting@address 004C                          ??_I2C1_PinInit 0048  
             __size_of_Timer4_CheckFlag 000B                          ??_I2C2_PinInit 0048  
                        _Buzzer_SetDuty 0E2F                          ??_I2C1_Setting 004B  
                           printf@width 0067                          ??_I2C2_Setting 004B  
                         _H7826_01_Gain 0120                       __size_of_LCD_Init 006F  
                     _Timer1_StartCount 0D13                        _DAC_WriteVoltage 0F9C  
                    ?_Timer1_StartCount 0070                          __end_of___wmul 0E67  
                             _ConfigReg 0046               __size_of_Timer6_CheckFlag 000B  
                   ??_Timer1_StartCount 0048                 __size_of_DAC_Initialize 0020  
                        __end_of_printf 02D4                     start_initialization 0033  
                  I2C1_Transmit@address 004C                  __end_of_Buzzer_SetDuty 0E4B  
                          ?_Buzzer_Init 0070                     __end_of_mTouch_Init 0E19  
                   __end_of_mTouch_Read 0ECA                           _Timer1_GetCPM 0D1E  
                   I2C2_Setting@address 004C              __size_of_Timer1_Count200us 000A  
             __end_of_Timer1_StartCount 0D18                   __end_of_LCD_WriteData 07A0  
                              ??___wmul 004C                             __pdataBANK1 00C6  
                           __pdataBANK2 0120                                ??_printf 005E  
                     I2C1_Setting@Speed 004A                __size_of_Buzzer_Count1ms 0016  
                             ___latbits 0001                           __pcstackBANK0 0047  
      __end_of_mTouch_IntervalDecrement 0DE2                      I2C1_Transmit@i_172 004E  
                    I2C1_Transmit@pData 0048               __size_of_LCD_DisplayClear 0010  
                       ?_Buzzer_SetDuty 0070                          ?_Timer1_GetCPM 0048  
      __end_of_Timer1_DetectAssignCount 049A                         I2C_Init@address 004D  
                              ?_Handler 0070                           ?_I2C_Transmit 0050  
                         I2C_Init@Speed 004F                            ?_Timer1_Init 0070  
                      ___lwdiv@dividend 004A                            ?_Timer4_Init 0070  
                 DAC_WriteVoltage@volue 0058                            ?_Timer6_Init 0070  
                              ?___lldiv 0070                                ?___lwdiv 0048  
                              ?___lwmod 0050                          _I2C1_Interrupt 05F1  
                  __end_of_I2C1_PinInit 0D7A            __size_of_I2C_CommonInterrupt 0006  
                  __end_of_I2C2_PinInit 0D87                    __end_of_I2C1_Setting 0763  
Timer1_DetectAssignCount@PreviousTimer1 003F                                ?_isdigit 0070  
                              _I2C_Init 0F1A                    __end_of_I2C2_Setting 071F  
                        _I2C2_Interrupt 059D                              _H7826_Gain 013E  
                           _mTouch_Init 0E06                             _mTouch_Read 0EA5  
                      ___lwdiv@quotient 004D                      _Timer1_ClearRecord 0EF2  
                        __size_of_putch 0009                        _Timer4_CheckFlag 0D57  
                              _LCD_Init 052E                          ___wmul@product 004C  
                              _CPS_Data 0037                          ??_I2C_Transmit 0053  
                   ?_Timer1_ClearRecord 0070              __size_of_Timer1_StartCount 0005  
                             clear_ram0 0D24                      _Timer1_GetCountSum 0D43  
                __end_of_I2C1_Interrupt 0645                                _SSP1CON1 0215  
                              _SSP1CON2 0216                    I2C2_Transmit@address 004C  
                              _SSP2CON1 021D                                _SSP2CON2 021E  
                              _SSP1STAT 0214                                _SSP2STAT 021C  
                   ?_Timer1_GetCountSum 0048                        _Timer6_CheckFlag 0D62  
                     ___wmul@multiplier 0048                        mTouch_Check@chan 004F  
                        _DAC_Initialize 0E85                    ??_Timer1_ClearRecord 0048  
                __end_of_I2C2_Interrupt 05F1                              printf@flag 0062  
                            printf@prec 0066                  __size_of_I2C1_Transmit 0097  
                __size_of_I2C2_Transmit 0098                         ??_Timer1_GetCPM 004A  
              __end_of_DAC_WriteVoltage 0FCB                             _CPS_PreData 003A  
                     ??_Buzzer_Count1ms 0075                    ??_Timer1_GetCountSum 004C  
                      __size_of_Handler 002D                    __size_of_Buzzer_Init 0028  
              _Timer1_DetectAssignCount 0403                __size_of_mTouch_PortInit 000D  
     __size_of_mTouch_IntervalDecrement 0011               ?_mTouch_IntervalDecrement 0070  
                       ?_I2C1_Interrupt 0070                 __size_of_LCD_CursorHome 0010  
                __end_of_DAC_Initialize 0EA5                        __size_of___lldiv 0052  
                      __size_of___lwdiv 0035                        I2C1_Setting@mode 0049  
                      __size_of___lwmod 002D                      LCD_WriteData@point 004A  
                           _isdigit$939 0048                         ?_I2C2_Interrupt 0070  
                     I2C1_Transmit@size 0049                        __size_of_isdigit 000F  
                       ___lwdiv@divisor 0048                         ___lwdiv@counter 004F  
                              __ptext10 0D4D                                __ptext11 0DF3  
                              __ptext20 0DB1                                __ptext12 0D94  
                              __ptext21 0763                                __ptext13 0D13  
                              __ptext30 071F                                __ptext22 0F9C  
                              __ptext14 0EF2                                __ptext31 0D6D  
                              __ptext23 0E85                                __ptext15 07DC  
                              __ptext40 0645                                __ptext32 0ECA  
                              __ptext24 0F44                                __ptext16 0D43  
                              __ptext41 0D39                                __ptext33 0DE2  
                              __ptext25 02D4                                __ptext17 0D1E  
                              __ptext42 0D18                                __ptext26 036C  
                              __ptext18 052E                                __ptext43 059D  
                              __ptext35 0EA5                                __ptext27 0F1A  
                              __ptext19 0DC1                                __ptext44 05F1  
                              __ptext36 0DD1                                __ptext28 06DB  
                              __ptext45 0E19                                __ptext37 0D62  
                              __ptext29 0D7A                                __ptext46 0E2F  
                              __ptext38 0D57                                __ptext39 0403  
                          _SSP1CON1bits 0215                            _SSP1CON2bits 0216  
                      _LCD_DisplayClear 0DC1                            _SSP2CON1bits 021D  
                          _SSP2CON2bits 021E                   __end_of_DAC_DataTable 007C  
                         __size_of_main 0094                           _I2C1_Transmit 036C  
                         _I2C2_Transmit 02D4                   __size_of_I2C1_PinInit 000D  
                  __size_of_Timer1_Init 0021                                int$flags 007E  
                 __size_of_I2C2_PinInit 000D                    __size_of_Timer4_Init 000E  
                   I2C_Transmit@address 0050                    __size_of_Timer6_Init 0013  
                 __size_of_I2C1_Setting 0044                         ?_DAC_Initialize 0070  
                             printf@val 0064                            _SSP1STATbits 0214  
                 __size_of_I2C2_Setting 0044                            _SSP2STATbits 021C  
                  __end_of_I2C_Transmit 0F6F                       I2C2_Setting@Speed 004A  
                      ??_Buzzer_SetDuty 0072                                isdigit@c 0049  
                              intlevel1 0000                        ___lwmod@dividend 0052  
                   _I2C_CommonInterrupt 0D18                            _I2C1_PinInit 0D6D  
                      ___lldiv@dividend 0074                          ?_I2C1_Transmit 0048  
                     __CFG_CLKOUTEN$OFF 0000                            _I2C2_PinInit 0D7A  
                         ?_mTouch_Check 0070                            _I2C1_Setting 071F  
                        ?_I2C2_Transmit 0048                            _I2C2_Setting 06DB  
                              printf@ap 0063                      I2C_Transmit@result 0057  
                     ??_mTouch_PortInit 0048                        I2C2_Setting@mode 0049  
                  ?_I2C_CommonInterrupt 0070                __end_of_Timer4_CheckFlag 0D62  
                            _OPTION_REG 0095                        ___lldiv@quotient 0079  
                       ___lwmod@divisor 0050                         ___lwmod@counter 0055  
                          ?_mTouch_Init 0070                            ?_mTouch_Read 0070  
                __size_of_LCD_WriteData 003D                          I2C1_Transmit@i 004D  
              __end_of_Timer6_CheckFlag 0D6D                          ??_mTouch_Check 004A  
