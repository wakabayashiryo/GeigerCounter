

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
<<<<<<< HEAD
                                                                                               Sat May 13 11:34:09 2017
=======
                                                                                               Sat May 13 03:06:16 2017
>>>>>>> CPS

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
<<<<<<< HEAD
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 1.41
    50                           ; Generated 25/01/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1827 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  0111                     	;# 
   132  0112                     	;# 
   133  0113                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011B                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0191                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0199                     	;# 
   156  019A                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0219                     	;# 
   184  021A                     	;# 
   185  021B                     	;# 
   186  021C                     	;# 
   187  021D                     	;# 
   188  021E                     	;# 
   189  021F                     	;# 
   190  0291                     	;# 
   191  0291                     	;# 
   192  0292                     	;# 
   193  0293                     	;# 
   194  0294                     	;# 
   195  0295                     	;# 
   196  0295                     	;# 
   197  0296                     	;# 
   198  0298                     	;# 
   199  0298                     	;# 
   200  0299                     	;# 
   201  029A                     	;# 
   202  029B                     	;# 
   203  029C                     	;# 
   204  029C                     	;# 
   205  029D                     	;# 
   206  029E                     	;# 
   207  029E                     	;# 
   208  0311                     	;# 
   209  0311                     	;# 
   210  0312                     	;# 
   211  0313                     	;# 
   212  0318                     	;# 
   213  0318                     	;# 
   214  0319                     	;# 
   215  031A                     	;# 
   216  0394                     	;# 
   217  0395                     	;# 
   218  0396                     	;# 
   219  039A                     	;# 
   220  039C                     	;# 
   221  039D                     	;# 
   222  039E                     	;# 
   223  039F                     	;# 
   224  0415                     	;# 
   225  0416                     	;# 
   226  0417                     	;# 
   227  041C                     	;# 
   228  041D                     	;# 
   229  041E                     	;# 
   230  0FE4                     	;# 
   231  0FE5                     	;# 
   232  0FE6                     	;# 
   233  0FE7                     	;# 
   234  0FE8                     	;# 
   235  0FE9                     	;# 
   236  0FEA                     	;# 
   237  0FEB                     	;# 
   238  0FED                     	;# 
   239  0FEE                     	;# 
   240  0FEF                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  0111                     	;# 
   290  0112                     	;# 
   291  0113                     	;# 
   292  0114                     	;# 
   293  0115                     	;# 
   294  0116                     	;# 
   295  0117                     	;# 
   296  0118                     	;# 
   297  0119                     	;# 
   298  011A                     	;# 
   299  011B                     	;# 
   300  011D                     	;# 
   301  011E                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0191                     	;# 
   305  0191                     	;# 
   306  0192                     	;# 
   307  0193                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0194                     	;# 
   311  0195                     	;# 
   312  0196                     	;# 
   313  0199                     	;# 
   314  019A                     	;# 
   315  019B                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019C                     	;# 
   320  019C                     	;# 
   321  019D                     	;# 
   322  019E                     	;# 
   323  019F                     	;# 
   324  020C                     	;# 
   325  020D                     	;# 
   326  0211                     	;# 
   327  0211                     	;# 
   328  0212                     	;# 
   329  0212                     	;# 
   330  0213                     	;# 
   331  0213                     	;# 
   332  0214                     	;# 
   333  0214                     	;# 
   334  0215                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0216                     	;# 
   338  0216                     	;# 
   339  0217                     	;# 
   340  0217                     	;# 
   341  0219                     	;# 
   342  021A                     	;# 
   343  021B                     	;# 
   344  021C                     	;# 
   345  021D                     	;# 
   346  021E                     	;# 
   347  021F                     	;# 
   348  0291                     	;# 
   349  0291                     	;# 
   350  0292                     	;# 
   351  0293                     	;# 
   352  0294                     	;# 
   353  0295                     	;# 
   354  0295                     	;# 
   355  0296                     	;# 
   356  0298                     	;# 
   357  0298                     	;# 
   358  0299                     	;# 
   359  029A                     	;# 
   360  029B                     	;# 
   361  029C                     	;# 
   362  029C                     	;# 
   363  029D                     	;# 
   364  029E                     	;# 
   365  029E                     	;# 
   366  0311                     	;# 
   367  0311                     	;# 
   368  0312                     	;# 
   369  0313                     	;# 
   370  0318                     	;# 
   371  0318                     	;# 
   372  0319                     	;# 
   373  031A                     	;# 
   374  0394                     	;# 
   375  0395                     	;# 
   376  0396                     	;# 
   377  039A                     	;# 
   378  039C                     	;# 
   379  039D                     	;# 
   380  039E                     	;# 
   381  039F                     	;# 
   382  0415                     	;# 
   383  0416                     	;# 
   384  0417                     	;# 
   385  041C                     	;# 
   386  041D                     	;# 
   387  041E                     	;# 
   388  0FE4                     	;# 
   389  0FE5                     	;# 
   390  0FE6                     	;# 
   391  0FE7                     	;# 
   392  0FE8                     	;# 
   393  0FE9                     	;# 
   394  0FEA                     	;# 
   395  0FEB                     	;# 
   396  0FED                     	;# 
   397  0FEE                     	;# 
   398  0FEF                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0008                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000D                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0013                     	;# 
   416  0014                     	;# 
   417  0015                     	;# 
   418  0016                     	;# 
   419  0016                     	;# 
   420  0017                     	;# 
   421  0018                     	;# 
   422  0019                     	;# 
   423  001A                     	;# 
   424  001B                     	;# 
   425  001C                     	;# 
   426  001E                     	;# 
   427  001F                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  0111                     	;# 
   448  0112                     	;# 
   449  0113                     	;# 
   450  0114                     	;# 
   451  0115                     	;# 
   452  0116                     	;# 
   453  0117                     	;# 
   454  0118                     	;# 
   455  0119                     	;# 
   456  011A                     	;# 
   457  011B                     	;# 
   458  011D                     	;# 
   459  011E                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  0191                     	;# 
   463  0191                     	;# 
   464  0192                     	;# 
   465  0193                     	;# 
   466  0193                     	;# 
   467  0193                     	;# 
   468  0194                     	;# 
   469  0195                     	;# 
   470  0196                     	;# 
   471  0199                     	;# 
   472  019A                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019C                     	;# 
   478  019C                     	;# 
   479  019D                     	;# 
   480  019E                     	;# 
   481  019F                     	;# 
   482  020C                     	;# 
   483  020D                     	;# 
   484  0211                     	;# 
   485  0211                     	;# 
   486  0212                     	;# 
   487  0212                     	;# 
   488  0213                     	;# 
   489  0213                     	;# 
   490  0214                     	;# 
   491  0214                     	;# 
   492  0215                     	;# 
   493  0215                     	;# 
   494  0215                     	;# 
   495  0216                     	;# 
   496  0216                     	;# 
   497  0217                     	;# 
   498  0217                     	;# 
   499  0219                     	;# 
   500  021A                     	;# 
   501  021B                     	;# 
   502  021C                     	;# 
   503  021D                     	;# 
   504  021E                     	;# 
   505  021F                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0294                     	;# 
   511  0295                     	;# 
   512  0295                     	;# 
   513  0296                     	;# 
   514  0298                     	;# 
   515  0298                     	;# 
   516  0299                     	;# 
   517  029A                     	;# 
   518  029B                     	;# 
   519  029C                     	;# 
   520  029C                     	;# 
   521  029D                     	;# 
   522  029E                     	;# 
   523  029E                     	;# 
   524  0311                     	;# 
   525  0311                     	;# 
   526  0312                     	;# 
   527  0313                     	;# 
   528  0318                     	;# 
   529  0318                     	;# 
   530  0319                     	;# 
   531  031A                     	;# 
   532  0394                     	;# 
   533  0395                     	;# 
   534  0396                     	;# 
   535  039A                     	;# 
   536  039C                     	;# 
   537  039D                     	;# 
   538  039E                     	;# 
   539  039F                     	;# 
   540  0415                     	;# 
   541  0416                     	;# 
   542  0417                     	;# 
   543  041C                     	;# 
   544  041D                     	;# 
   545  041E                     	;# 
   546  0FE4                     	;# 
   547  0FE5                     	;# 
   548  0FE6                     	;# 
   549  0FE7                     	;# 
   550  0FE8                     	;# 
   551  0FE9                     	;# 
   552  0FEA                     	;# 
   553  0FEB                     	;# 
   554  0FED                     	;# 
   555  0FEE                     	;# 
   556  0FEF                     	;# 
   557  0000                     	;# 
   558  0001                     	;# 
   559  0002                     	;# 
   560  0003                     	;# 
   561  0004                     	;# 
   562  0005                     	;# 
   563  0006                     	;# 
   564  0007                     	;# 
   565  0008                     	;# 
   566  0009                     	;# 
   567  000A                     	;# 
   568  000B                     	;# 
   569  000C                     	;# 
   570  000D                     	;# 
   571  0011                     	;# 
   572  0012                     	;# 
   573  0013                     	;# 
   574  0014                     	;# 
   575  0015                     	;# 
   576  0016                     	;# 
   577  0016                     	;# 
   578  0017                     	;# 
   579  0018                     	;# 
   580  0019                     	;# 
   581  001A                     	;# 
   582  001B                     	;# 
   583  001C                     	;# 
   584  001E                     	;# 
   585  001F                     	;# 
   586  008C                     	;# 
   587  008D                     	;# 
   588  0091                     	;# 
   589  0092                     	;# 
   590  0093                     	;# 
   591  0094                     	;# 
   592  0095                     	;# 
   593  0096                     	;# 
   594  0097                     	;# 
   595  0098                     	;# 
   596  0099                     	;# 
   597  009A                     	;# 
   598  009B                     	;# 
   599  009B                     	;# 
   600  009C                     	;# 
   601  009D                     	;# 
   602  009E                     	;# 
   603  010C                     	;# 
   604  010D                     	;# 
   605  0111                     	;# 
   606  0112                     	;# 
   607  0113                     	;# 
   608  0114                     	;# 
   609  0115                     	;# 
   610  0116                     	;# 
   611  0117                     	;# 
   612  0118                     	;# 
   613  0119                     	;# 
   614  011A                     	;# 
   615  011B                     	;# 
   616  011D                     	;# 
   617  011E                     	;# 
   618  018C                     	;# 
   619  018D                     	;# 
   620  0191                     	;# 
   621  0191                     	;# 
   622  0192                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0193                     	;# 
   626  0194                     	;# 
   627  0195                     	;# 
   628  0196                     	;# 
   629  0199                     	;# 
   630  019A                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019C                     	;# 
   636  019C                     	;# 
   637  019D                     	;# 
   638  019E                     	;# 
   639  019F                     	;# 
   640  020C                     	;# 
   641  020D                     	;# 
   642  0211                     	;# 
   643  0211                     	;# 
   644  0212                     	;# 
   645  0212                     	;# 
   646  0213                     	;# 
   647  0213                     	;# 
   648  0214                     	;# 
   649  0214                     	;# 
   650  0215                     	;# 
   651  0215                     	;# 
   652  0215                     	;# 
   653  0216                     	;# 
   654  0216                     	;# 
   655  0217                     	;# 
   656  0217                     	;# 
   657  0219                     	;# 
   658  021A                     	;# 
   659  021B                     	;# 
   660  021C                     	;# 
   661  021D                     	;# 
   662  021E                     	;# 
   663  021F                     	;# 
   664  0291                     	;# 
   665  0291                     	;# 
   666  0292                     	;# 
   667  0293                     	;# 
   668  0294                     	;# 
   669  0295                     	;# 
   670  0295                     	;# 
   671  0296                     	;# 
   672  0298                     	;# 
   673  0298                     	;# 
   674  0299                     	;# 
   675  029A                     	;# 
   676  029B                     	;# 
   677  029C                     	;# 
   678  029C                     	;# 
   679  029D                     	;# 
   680  029E                     	;# 
   681  029E                     	;# 
   682  0311                     	;# 
   683  0311                     	;# 
   684  0312                     	;# 
   685  0313                     	;# 
   686  0318                     	;# 
   687  0318                     	;# 
   688  0319                     	;# 
   689  031A                     	;# 
   690  0394                     	;# 
   691  0395                     	;# 
   692  0396                     	;# 
   693  039A                     	;# 
   694  039C                     	;# 
   695  039D                     	;# 
   696  039E                     	;# 
   697  039F                     	;# 
   698  0415                     	;# 
   699  0416                     	;# 
   700  0417                     	;# 
   701  041C                     	;# 
   702  041D                     	;# 
   703  041E                     	;# 
   704  0FE4                     	;# 
   705  0FE5                     	;# 
   706  0FE6                     	;# 
   707  0FE7                     	;# 
   708  0FE8                     	;# 
   709  0FE9                     	;# 
   710  0FEA                     	;# 
   711  0FEB                     	;# 
   712  0FED                     	;# 
   713  0FEE                     	;# 
   714  0FEF                     	;# 
   715  0000                     	;# 
   716  0001                     	;# 
   717  0002                     	;# 
   718  0003                     	;# 
   719  0004                     	;# 
   720  0005                     	;# 
   721  0006                     	;# 
   722  0007                     	;# 
   723  0008                     	;# 
   724  0009                     	;# 
   725  000A                     	;# 
   726  000B                     	;# 
   727  000C                     	;# 
   728  000D                     	;# 
   729  0011                     	;# 
   730  0012                     	;# 
   731  0013                     	;# 
   732  0014                     	;# 
   733  0015                     	;# 
   734  0016                     	;# 
   735  0016                     	;# 
   736  0017                     	;# 
   737  0018                     	;# 
   738  0019                     	;# 
   739  001A                     	;# 
   740  001B                     	;# 
   741  001C                     	;# 
   742  001E                     	;# 
   743  001F                     	;# 
   744  008C                     	;# 
   745  008D                     	;# 
   746  0091                     	;# 
   747  0092                     	;# 
   748  0093                     	;# 
   749  0094                     	;# 
   750  0095                     	;# 
   751  0096                     	;# 
   752  0097                     	;# 
   753  0098                     	;# 
   754  0099                     	;# 
   755  009A                     	;# 
   756  009B                     	;# 
   757  009B                     	;# 
   758  009C                     	;# 
   759  009D                     	;# 
   760  009E                     	;# 
   761  010C                     	;# 
   762  010D                     	;# 
   763  0111                     	;# 
   764  0112                     	;# 
   765  0113                     	;# 
   766  0114                     	;# 
   767  0115                     	;# 
   768  0116                     	;# 
   769  0117                     	;# 
   770  0118                     	;# 
   771  0119                     	;# 
   772  011A                     	;# 
   773  011B                     	;# 
   774  011D                     	;# 
   775  011E                     	;# 
   776  018C                     	;# 
   777  018D                     	;# 
   778  0191                     	;# 
   779  0191                     	;# 
   780  0192                     	;# 
   781  0193                     	;# 
   782  0193                     	;# 
   783  0193                     	;# 
   784  0194                     	;# 
   785  0195                     	;# 
   786  0196                     	;# 
   787  0199                     	;# 
   788  019A                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019B                     	;# 
   793  019C                     	;# 
   794  019C                     	;# 
   795  019D                     	;# 
   796  019E                     	;# 
   797  019F                     	;# 
   798  020C                     	;# 
   799  020D                     	;# 
   800  0211                     	;# 
   801  0211                     	;# 
   802  0212                     	;# 
   803  0212                     	;# 
   804  0213                     	;# 
   805  0213                     	;# 
   806  0214                     	;# 
   807  0214                     	;# 
   808  0215                     	;# 
   809  0215                     	;# 
   810  0215                     	;# 
   811  0216                     	;# 
   812  0216                     	;# 
   813  0217                     	;# 
   814  0217                     	;# 
   815  0219                     	;# 
   816  021A                     	;# 
   817  021B                     	;# 
   818  021C                     	;# 
   819  021D                     	;# 
   820  021E                     	;# 
   821  021F                     	;# 
   822  0291                     	;# 
   823  0291                     	;# 
   824  0292                     	;# 
   825  0293                     	;# 
   826  0294                     	;# 
   827  0295                     	;# 
   828  0295                     	;# 
   829  0296                     	;# 
   830  0298                     	;# 
   831  0298                     	;# 
   832  0299                     	;# 
   833  029A                     	;# 
   834  029B                     	;# 
   835  029C                     	;# 
   836  029C                     	;# 
   837  029D                     	;# 
   838  029E                     	;# 
   839  029E                     	;# 
   840  0311                     	;# 
   841  0311                     	;# 
   842  0312                     	;# 
   843  0313                     	;# 
   844  0318                     	;# 
   845  0318                     	;# 
   846  0319                     	;# 
   847  031A                     	;# 
   848  0394                     	;# 
   849  0395                     	;# 
   850  0396                     	;# 
   851  039A                     	;# 
   852  039C                     	;# 
   853  039D                     	;# 
   854  039E                     	;# 
   855  039F                     	;# 
   856  0415                     	;# 
   857  0416                     	;# 
   858  0417                     	;# 
   859  041C                     	;# 
   860  041D                     	;# 
   861  041E                     	;# 
   862  0FE4                     	;# 
   863  0FE5                     	;# 
   864  0FE6                     	;# 
   865  0FE7                     	;# 
   866  0FE8                     	;# 
   867  0FE9                     	;# 
   868  0FEA                     	;# 
   869  0FEB                     	;# 
   870  0FED                     	;# 
   871  0FEE                     	;# 
   872  0FEF                     	;# 
   873  0000                     	;# 
   874  0001                     	;# 
   875  0002                     	;# 
   876  0003                     	;# 
   877  0004                     	;# 
   878  0005                     	;# 
   879  0006                     	;# 
   880  0007                     	;# 
   881  0008                     	;# 
   882  0009                     	;# 
   883  000A                     	;# 
   884  000B                     	;# 
   885  000C                     	;# 
   886  000D                     	;# 
   887  0011                     	;# 
   888  0012                     	;# 
   889  0013                     	;# 
   890  0014                     	;# 
   891  0015                     	;# 
   892  0016                     	;# 
   893  0016                     	;# 
   894  0017                     	;# 
   895  0018                     	;# 
   896  0019                     	;# 
   897  001A                     	;# 
   898  001B                     	;# 
   899  001C                     	;# 
   900  001E                     	;# 
   901  001F                     	;# 
   902  008C                     	;# 
   903  008D                     	;# 
   904  0091                     	;# 
   905  0092                     	;# 
   906  0093                     	;# 
   907  0094                     	;# 
   908  0095                     	;# 
   909  0096                     	;# 
   910  0097                     	;# 
   911  0098                     	;# 
   912  0099                     	;# 
   913  009A                     	;# 
   914  009B                     	;# 
   915  009B                     	;# 
   916  009C                     	;# 
   917  009D                     	;# 
   918  009E                     	;# 
   919  010C                     	;# 
   920  010D                     	;# 
   921  0111                     	;# 
   922  0112                     	;# 
   923  0113                     	;# 
   924  0114                     	;# 
   925  0115                     	;# 
   926  0116                     	;# 
   927  0117                     	;# 
   928  0118                     	;# 
   929  0119                     	;# 
   930  011A                     	;# 
   931  011B                     	;# 
   932  011D                     	;# 
   933  011E                     	;# 
   934  018C                     	;# 
   935  018D                     	;# 
   936  0191                     	;# 
   937  0191                     	;# 
   938  0192                     	;# 
   939  0193                     	;# 
   940  0193                     	;# 
   941  0193                     	;# 
   942  0194                     	;# 
   943  0195                     	;# 
   944  0196                     	;# 
   945  0199                     	;# 
   946  019A                     	;# 
   947  019B                     	;# 
   948  019B                     	;# 
   949  019B                     	;# 
   950  019B                     	;# 
   951  019C                     	;# 
   952  019C                     	;# 
   953  019D                     	;# 
   954  019E                     	;# 
   955  019F                     	;# 
   956  020C                     	;# 
   957  020D                     	;# 
   958  0211                     	;# 
   959  0211                     	;# 
   960  0212                     	;# 
   961  0212                     	;# 
   962  0213                     	;# 
   963  0213                     	;# 
   964  0214                     	;# 
   965  0214                     	;# 
   966  0215                     	;# 
   967  0215                     	;# 
   968  0215                     	;# 
   969  0216                     	;# 
   970  0216                     	;# 
   971  0217                     	;# 
   972  0217                     	;# 
   973  0219                     	;# 
   974  021A                     	;# 
   975  021B                     	;# 
   976  021C                     	;# 
   977  021D                     	;# 
   978  021E                     	;# 
   979  021F                     	;# 
   980  0291                     	;# 
   981  0291                     	;# 
   982  0292                     	;# 
   983  0293                     	;# 
   984  0294                     	;# 
   985  0295                     	;# 
   986  0295                     	;# 
   987  0296                     	;# 
   988  0298                     	;# 
   989  0298                     	;# 
   990  0299                     	;# 
   991  029A                     	;# 
   992  029B                     	;# 
   993  029C                     	;# 
   994  029C                     	;# 
   995  029D                     	;# 
   996  029E                     	;# 
   997  029E                     	;# 
   998  0311                     	;# 
   999  0311                     	;# 
  1000  0312                     	;# 
  1001  0313                     	;# 
  1002  0318                     	;# 
  1003  0318                     	;# 
  1004  0319                     	;# 
  1005  031A                     	;# 
  1006  0394                     	;# 
  1007  0395                     	;# 
  1008  0396                     	;# 
  1009  039A                     	;# 
  1010  039C                     	;# 
  1011  039D                     	;# 
  1012  039E                     	;# 
  1013  039F                     	;# 
  1014  0415                     	;# 
  1015  0416                     	;# 
  1016  0417                     	;# 
  1017  041C                     	;# 
  1018  041D                     	;# 
  1019  041E                     	;# 
  1020  0FE4                     	;# 
  1021  0FE5                     	;# 
  1022  0FE6                     	;# 
  1023  0FE7                     	;# 
  1024  0FE8                     	;# 
  1025  0FE9                     	;# 
  1026  0FEA                     	;# 
  1027  0FEB                     	;# 
  1028  0FED                     	;# 
  1029  0FEE                     	;# 
  1030  0FEF                     	;# 
  1031  0000                     	;# 
  1032  0001                     	;# 
  1033  0002                     	;# 
  1034  0003                     	;# 
  1035  0004                     	;# 
  1036  0005                     	;# 
  1037  0006                     	;# 
  1038  0007                     	;# 
  1039  0008                     	;# 
  1040  0009                     	;# 
  1041  000A                     	;# 
  1042  000B                     	;# 
  1043  000C                     	;# 
  1044  000D                     	;# 
  1045  0011                     	;# 
  1046  0012                     	;# 
  1047  0013                     	;# 
  1048  0014                     	;# 
  1049  0015                     	;# 
  1050  0016                     	;# 
  1051  0016                     	;# 
  1052  0017                     	;# 
  1053  0018                     	;# 
  1054  0019                     	;# 
  1055  001A                     	;# 
  1056  001B                     	;# 
  1057  001C                     	;# 
  1058  001E                     	;# 
  1059  001F                     	;# 
  1060  008C                     	;# 
  1061  008D                     	;# 
  1062  0091                     	;# 
  1063  0092                     	;# 
  1064  0093                     	;# 
  1065  0094                     	;# 
  1066  0095                     	;# 
  1067  0096                     	;# 
  1068  0097                     	;# 
  1069  0098                     	;# 
  1070  0099                     	;# 
  1071  009A                     	;# 
  1072  009B                     	;# 
  1073  009B                     	;# 
  1074  009C                     	;# 
  1075  009D                     	;# 
  1076  009E                     	;# 
  1077  010C                     	;# 
  1078  010D                     	;# 
  1079  0111                     	;# 
  1080  0112                     	;# 
  1081  0113                     	;# 
  1082  0114                     	;# 
  1083  0115                     	;# 
  1084  0116                     	;# 
  1085  0117                     	;# 
  1086  0118                     	;# 
  1087  0119                     	;# 
  1088  011A                     	;# 
  1089  011B                     	;# 
  1090  011D                     	;# 
  1091  011E                     	;# 
  1092  018C                     	;# 
  1093  018D                     	;# 
  1094  0191                     	;# 
  1095  0191                     	;# 
  1096  0192                     	;# 
  1097  0193                     	;# 
  1098  0193                     	;# 
  1099  0193                     	;# 
  1100  0194                     	;# 
  1101  0195                     	;# 
  1102  0196                     	;# 
  1103  0199                     	;# 
  1104  019A                     	;# 
  1105  019B                     	;# 
  1106  019B                     	;# 
  1107  019B                     	;# 
  1108  019B                     	;# 
  1109  019C                     	;# 
  1110  019C                     	;# 
  1111  019D                     	;# 
  1112  019E                     	;# 
  1113  019F                     	;# 
  1114  020C                     	;# 
  1115  020D                     	;# 
  1116  0211                     	;# 
  1117  0211                     	;# 
  1118  0212                     	;# 
  1119  0212                     	;# 
  1120  0213                     	;# 
  1121  0213                     	;# 
  1122  0214                     	;# 
  1123  0214                     	;# 
  1124  0215                     	;# 
  1125  0215                     	;# 
  1126  0215                     	;# 
  1127  0216                     	;# 
  1128  0216                     	;# 
  1129  0217                     	;# 
  1130  0217                     	;# 
  1131  0219                     	;# 
  1132  021A                     	;# 
  1133  021B                     	;# 
  1134  021C                     	;# 
  1135  021D                     	;# 
  1136  021E                     	;# 
  1137  021F                     	;# 
  1138  0291                     	;# 
  1139  0291                     	;# 
  1140  0292                     	;# 
  1141  0293                     	;# 
  1142  0294                     	;# 
  1143  0295                     	;# 
  1144  0295                     	;# 
  1145  0296                     	;# 
  1146  0298                     	;# 
  1147  0298                     	;# 
  1148  0299                     	;# 
  1149  029A                     	;# 
  1150  029B                     	;# 
  1151  029C                     	;# 
  1152  029C                     	;# 
  1153  029D                     	;# 
  1154  029E                     	;# 
  1155  029E                     	;# 
  1156  0311                     	;# 
  1157  0311                     	;# 
  1158  0312                     	;# 
  1159  0313                     	;# 
  1160  0318                     	;# 
  1161  0318                     	;# 
  1162  0319                     	;# 
  1163  031A                     	;# 
  1164  0394                     	;# 
  1165  0395                     	;# 
  1166  0396                     	;# 
  1167  039A                     	;# 
  1168  039C                     	;# 
  1169  039D                     	;# 
  1170  039E                     	;# 
  1171  039F                     	;# 
  1172  0415                     	;# 
  1173  0416                     	;# 
  1174  0417                     	;# 
  1175  041C                     	;# 
  1176  041D                     	;# 
  1177  041E                     	;# 
  1178  0FE4                     	;# 
  1179  0FE5                     	;# 
  1180  0FE6                     	;# 
  1181  0FE7                     	;# 
  1182  0FE8                     	;# 
  1183  0FE9                     	;# 
  1184  0FEA                     	;# 
  1185  0FEB                     	;# 
  1186  0FED                     	;# 
  1187  0FEE                     	;# 
  1188  0FEF                     	;# 
  1189  0000                     	;# 
  1190  0001                     	;# 
  1191  0002                     	;# 
  1192  0003                     	;# 
  1193  0004                     	;# 
  1194  0005                     	;# 
  1195  0006                     	;# 
  1196  0007                     	;# 
  1197  0008                     	;# 
  1198  0009                     	;# 
  1199  000A                     	;# 
  1200  000B                     	;# 
  1201  000C                     	;# 
  1202  000D                     	;# 
  1203  0011                     	;# 
  1204  0012                     	;# 
  1205  0013                     	;# 
  1206  0014                     	;# 
  1207  0015                     	;# 
  1208  0016                     	;# 
  1209  0016                     	;# 
  1210  0017                     	;# 
  1211  0018                     	;# 
  1212  0019                     	;# 
  1213  001A                     	;# 
  1214  001B                     	;# 
  1215  001C                     	;# 
  1216  001E                     	;# 
  1217  001F                     	;# 
  1218  008C                     	;# 
  1219  008D                     	;# 
  1220  0091                     	;# 
  1221  0092                     	;# 
  1222  0093                     	;# 
  1223  0094                     	;# 
  1224  0095                     	;# 
  1225  0096                     	;# 
  1226  0097                     	;# 
  1227  0098                     	;# 
  1228  0099                     	;# 
  1229  009A                     	;# 
  1230  009B                     	;# 
  1231  009B                     	;# 
  1232  009C                     	;# 
  1233  009D                     	;# 
  1234  009E                     	;# 
  1235  010C                     	;# 
  1236  010D                     	;# 
  1237  0111                     	;# 
  1238  0112                     	;# 
  1239  0113                     	;# 
  1240  0114                     	;# 
  1241  0115                     	;# 
  1242  0116                     	;# 
  1243  0117                     	;# 
  1244  0118                     	;# 
  1245  0119                     	;# 
  1246  011A                     	;# 
  1247  011B                     	;# 
  1248  011D                     	;# 
  1249  011E                     	;# 
  1250  018C                     	;# 
  1251  018D                     	;# 
  1252  0191                     	;# 
  1253  0191                     	;# 
  1254  0192                     	;# 
  1255  0193                     	;# 
  1256  0193                     	;# 
  1257  0193                     	;# 
  1258  0194                     	;# 
  1259  0195                     	;# 
  1260  0196                     	;# 
  1261  0199                     	;# 
  1262  019A                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019C                     	;# 
  1268  019C                     	;# 
  1269  019D                     	;# 
  1270  019E                     	;# 
  1271  019F                     	;# 
  1272  020C                     	;# 
  1273  020D                     	;# 
  1274  0211                     	;# 
  1275  0211                     	;# 
  1276  0212                     	;# 
  1277  0212                     	;# 
  1278  0213                     	;# 
  1279  0213                     	;# 
  1280  0214                     	;# 
  1281  0214                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0215                     	;# 
  1285  0216                     	;# 
  1286  0216                     	;# 
  1287  0217                     	;# 
  1288  0217                     	;# 
  1289  0219                     	;# 
  1290  021A                     	;# 
  1291  021B                     	;# 
  1292  021C                     	;# 
  1293  021D                     	;# 
  1294  021E                     	;# 
  1295  021F                     	;# 
  1296  0291                     	;# 
  1297  0291                     	;# 
  1298  0292                     	;# 
  1299  0293                     	;# 
  1300  0294                     	;# 
  1301  0295                     	;# 
  1302  0295                     	;# 
  1303  0296                     	;# 
  1304  0298                     	;# 
  1305  0298                     	;# 
  1306  0299                     	;# 
  1307  029A                     	;# 
  1308  029B                     	;# 
  1309  029C                     	;# 
  1310  029C                     	;# 
  1311  029D                     	;# 
  1312  029E                     	;# 
  1313  029E                     	;# 
  1314  0311                     	;# 
  1315  0311                     	;# 
  1316  0312                     	;# 
  1317  0313                     	;# 
  1318  0318                     	;# 
  1319  0318                     	;# 
  1320  0319                     	;# 
  1321  031A                     	;# 
  1322  0394                     	;# 
  1323  0395                     	;# 
  1324  0396                     	;# 
  1325  039A                     	;# 
  1326  039C                     	;# 
  1327  039D                     	;# 
  1328  039E                     	;# 
  1329  039F                     	;# 
  1330  0415                     	;# 
  1331  0416                     	;# 
  1332  0417                     	;# 
  1333  041C                     	;# 
  1334  041D                     	;# 
  1335  041E                     	;# 
  1336  0FE4                     	;# 
  1337  0FE5                     	;# 
  1338  0FE6                     	;# 
  1339  0FE7                     	;# 
  1340  0FE8                     	;# 
  1341  0FE9                     	;# 
  1342  0FEA                     	;# 
  1343  0FEB                     	;# 
  1344  0FED                     	;# 
  1345  0FEE                     	;# 
  1346  0FEF                     	;# 
  1347  0000                     	;# 
  1348  0001                     	;# 
  1349  0002                     	;# 
  1350  0003                     	;# 
  1351  0004                     	;# 
  1352  0005                     	;# 
  1353  0006                     	;# 
  1354  0007                     	;# 
  1355  0008                     	;# 
  1356  0009                     	;# 
  1357  000A                     	;# 
  1358  000B                     	;# 
  1359  000C                     	;# 
  1360  000D                     	;# 
  1361  0011                     	;# 
  1362  0012                     	;# 
  1363  0013                     	;# 
  1364  0014                     	;# 
  1365  0015                     	;# 
  1366  0016                     	;# 
  1367  0016                     	;# 
  1368  0017                     	;# 
  1369  0018                     	;# 
  1370  0019                     	;# 
  1371  001A                     	;# 
  1372  001B                     	;# 
  1373  001C                     	;# 
  1374  001E                     	;# 
  1375  001F                     	;# 
  1376  008C                     	;# 
  1377  008D                     	;# 
  1378  0091                     	;# 
  1379  0092                     	;# 
  1380  0093                     	;# 
  1381  0094                     	;# 
  1382  0095                     	;# 
  1383  0096                     	;# 
  1384  0097                     	;# 
  1385  0098                     	;# 
  1386  0099                     	;# 
  1387  009A                     	;# 
  1388  009B                     	;# 
  1389  009B                     	;# 
  1390  009C                     	;# 
  1391  009D                     	;# 
  1392  009E                     	;# 
  1393  010C                     	;# 
  1394  010D                     	;# 
  1395  0111                     	;# 
  1396  0112                     	;# 
  1397  0113                     	;# 
  1398  0114                     	;# 
  1399  0115                     	;# 
  1400  0116                     	;# 
  1401  0117                     	;# 
  1402  0118                     	;# 
  1403  0119                     	;# 
  1404  011A                     	;# 
  1405  011B                     	;# 
  1406  011D                     	;# 
  1407  011E                     	;# 
  1408  018C                     	;# 
  1409  018D                     	;# 
  1410  0191                     	;# 
  1411  0191                     	;# 
  1412  0192                     	;# 
  1413  0193                     	;# 
  1414  0193                     	;# 
  1415  0193                     	;# 
  1416  0194                     	;# 
  1417  0195                     	;# 
  1418  0196                     	;# 
  1419  0199                     	;# 
  1420  019A                     	;# 
  1421  019B                     	;# 
  1422  019B                     	;# 
  1423  019B                     	;# 
  1424  019B                     	;# 
  1425  019C                     	;# 
  1426  019C                     	;# 
  1427  019D                     	;# 
  1428  019E                     	;# 
  1429  019F                     	;# 
  1430  020C                     	;# 
  1431  020D                     	;# 
  1432  0211                     	;# 
  1433  0211                     	;# 
  1434  0212                     	;# 
  1435  0212                     	;# 
  1436  0213                     	;# 
  1437  0213                     	;# 
  1438  0214                     	;# 
  1439  0214                     	;# 
  1440  0215                     	;# 
  1441  0215                     	;# 
  1442  0215                     	;# 
  1443  0216                     	;# 
  1444  0216                     	;# 
  1445  0217                     	;# 
  1446  0217                     	;# 
  1447  0219                     	;# 
  1448  021A                     	;# 
  1449  021B                     	;# 
  1450  021C                     	;# 
  1451  021D                     	;# 
  1452  021E                     	;# 
  1453  021F                     	;# 
  1454  0291                     	;# 
  1455  0291                     	;# 
  1456  0292                     	;# 
  1457  0293                     	;# 
  1458  0294                     	;# 
  1459  0295                     	;# 
  1460  0295                     	;# 
  1461  0296                     	;# 
  1462  0298                     	;# 
  1463  0298                     	;# 
  1464  0299                     	;# 
  1465  029A                     	;# 
  1466  029B                     	;# 
  1467  029C                     	;# 
  1468  029C                     	;# 
  1469  029D                     	;# 
  1470  029E                     	;# 
  1471  029E                     	;# 
  1472  0311                     	;# 
  1473  0311                     	;# 
  1474  0312                     	;# 
  1475  0313                     	;# 
  1476  0318                     	;# 
  1477  0318                     	;# 
  1478  0319                     	;# 
  1479  031A                     	;# 
  1480  0394                     	;# 
  1481  0395                     	;# 
  1482  0396                     	;# 
  1483  039A                     	;# 
  1484  039C                     	;# 
  1485  039D                     	;# 
  1486  039E                     	;# 
  1487  039F                     	;# 
  1488  0415                     	;# 
  1489  0416                     	;# 
  1490  0417                     	;# 
  1491  041C                     	;# 
  1492  041D                     	;# 
  1493  041E                     	;# 
  1494  0FE4                     	;# 
  1495  0FE5                     	;# 
  1496  0FE6                     	;# 
  1497  0FE7                     	;# 
  1498  0FE8                     	;# 
  1499  0FE9                     	;# 
  1500  0FEA                     	;# 
  1501  0FEB                     	;# 
  1502  0FED                     	;# 
  1503  0FEE                     	;# 
  1504  0FEF                     	;# 
  1505  0000                     	;# 
  1506  0001                     	;# 
  1507  0002                     	;# 
  1508  0003                     	;# 
  1509  0004                     	;# 
  1510  0005                     	;# 
  1511  0006                     	;# 
  1512  0007                     	;# 
  1513  0008                     	;# 
  1514  0009                     	;# 
  1515  000A                     	;# 
  1516  000B                     	;# 
  1517  000C                     	;# 
  1518  000D                     	;# 
  1519  0011                     	;# 
  1520  0012                     	;# 
  1521  0013                     	;# 
  1522  0014                     	;# 
  1523  0015                     	;# 
  1524  0016                     	;# 
  1525  0016                     	;# 
  1526  0017                     	;# 
  1527  0018                     	;# 
  1528  0019                     	;# 
  1529  001A                     	;# 
  1530  001B                     	;# 
  1531  001C                     	;# 
  1532  001E                     	;# 
  1533  001F                     	;# 
  1534  008C                     	;# 
  1535  008D                     	;# 
  1536  0091                     	;# 
  1537  0092                     	;# 
  1538  0093                     	;# 
  1539  0094                     	;# 
  1540  0095                     	;# 
  1541  0096                     	;# 
  1542  0097                     	;# 
  1543  0098                     	;# 
  1544  0099                     	;# 
  1545  009A                     	;# 
  1546  009B                     	;# 
  1547  009B                     	;# 
  1548  009C                     	;# 
  1549  009D                     	;# 
  1550  009E                     	;# 
  1551  010C                     	;# 
  1552  010D                     	;# 
  1553  0111                     	;# 
  1554  0112                     	;# 
  1555  0113                     	;# 
  1556  0114                     	;# 
  1557  0115                     	;# 
  1558  0116                     	;# 
  1559  0117                     	;# 
  1560  0118                     	;# 
  1561  0119                     	;# 
  1562  011A                     	;# 
  1563  011B                     	;# 
  1564  011D                     	;# 
  1565  011E                     	;# 
  1566  018C                     	;# 
  1567  018D                     	;# 
  1568  0191                     	;# 
  1569  0191                     	;# 
  1570  0192                     	;# 
  1571  0193                     	;# 
  1572  0193                     	;# 
  1573  0193                     	;# 
  1574  0194                     	;# 
  1575  0195                     	;# 
  1576  0196                     	;# 
  1577  0199                     	;# 
  1578  019A                     	;# 
  1579  019B                     	;# 
  1580  019B                     	;# 
  1581  019B                     	;# 
  1582  019B                     	;# 
  1583  019C                     	;# 
  1584  019C                     	;# 
  1585  019D                     	;# 
  1586  019E                     	;# 
  1587  019F                     	;# 
  1588  020C                     	;# 
  1589  020D                     	;# 
  1590  0211                     	;# 
  1591  0211                     	;# 
  1592  0212                     	;# 
  1593  0212                     	;# 
  1594  0213                     	;# 
  1595  0213                     	;# 
  1596  0214                     	;# 
  1597  0214                     	;# 
  1598  0215                     	;# 
  1599  0215                     	;# 
  1600  0215                     	;# 
  1601  0216                     	;# 
  1602  0216                     	;# 
  1603  0217                     	;# 
  1604  0217                     	;# 
  1605  0219                     	;# 
  1606  021A                     	;# 
  1607  021B                     	;# 
  1608  021C                     	;# 
  1609  021D                     	;# 
  1610  021E                     	;# 
  1611  021F                     	;# 
  1612  0291                     	;# 
  1613  0291                     	;# 
  1614  0292                     	;# 
  1615  0293                     	;# 
  1616  0294                     	;# 
  1617  0295                     	;# 
  1618  0295                     	;# 
  1619  0296                     	;# 
  1620  0298                     	;# 
  1621  0298                     	;# 
  1622  0299                     	;# 
  1623  029A                     	;# 
  1624  029B                     	;# 
  1625  029C                     	;# 
  1626  029C                     	;# 
  1627  029D                     	;# 
  1628  029E                     	;# 
  1629  029E                     	;# 
  1630  0311                     	;# 
  1631  0311                     	;# 
  1632  0312                     	;# 
  1633  0313                     	;# 
  1634  0318                     	;# 
  1635  0318                     	;# 
  1636  0319                     	;# 
  1637  031A                     	;# 
  1638  0394                     	;# 
  1639  0395                     	;# 
  1640  0396                     	;# 
  1641  039A                     	;# 
  1642  039C                     	;# 
  1643  039D                     	;# 
  1644  039E                     	;# 
  1645  039F                     	;# 
  1646  0415                     	;# 
  1647  0416                     	;# 
  1648  0417                     	;# 
  1649  041C                     	;# 
  1650  041D                     	;# 
  1651  041E                     	;# 
  1652  0FE4                     	;# 
  1653  0FE5                     	;# 
  1654  0FE6                     	;# 
  1655  0FE7                     	;# 
  1656  0FE8                     	;# 
  1657  0FE9                     	;# 
  1658  0FEA                     	;# 
  1659  0FEB                     	;# 
  1660  0FED                     	;# 
  1661  0FEE                     	;# 
  1662  0FEF                     	;# 
  1663                           
  1664                           	psect	idataBANK1
  1665  0F97                     __pidataBANK1:	
  1666                           
  1667                           ;initializer for _DAC_VoltageTable
  1668  0F97  34A8               	retlw	low (STR_7| (0+32768))
  1669  0F98  3483               	retlw	high (STR_7| (0+32768))
  1670  0F99  344C               	retlw	low (STR_8| (0+32768))
  1671  0F9A  3483               	retlw	high (STR_8| (0+32768))
  1672  0F9B  34AD               	retlw	low (STR_9| (0+32768))
  1673  0F9C  3483               	retlw	high (STR_9| (0+32768))
  1674  0F9D  3452               	retlw	low (STR_10| (0+32768))
  1675  0F9E  3483               	retlw	high (STR_10| (0+32768))
  1676  0F9F  34B2               	retlw	low (STR_11| (0+32768))
  1677  0FA0  3483               	retlw	high (STR_11| (0+32768))
  1678  0FA1  3458               	retlw	low (STR_12| (0+32768))
  1679  0FA2  3483               	retlw	high (STR_12| (0+32768))
  1680  0FA3  34B7               	retlw	low (STR_13| (0+32768))
  1681  0FA4  3483               	retlw	high (STR_13| (0+32768))
  1682  0FA5  345E               	retlw	low (STR_14| (0+32768))
  1683  0FA6  3483               	retlw	high (STR_14| (0+32768))
  1684  0FA7  34BC               	retlw	low (STR_15| (0+32768))
  1685  0FA8  3483               	retlw	high (STR_15| (0+32768))
  1686  0FA9  3464               	retlw	low (STR_16| (0+32768))
  1687  0FAA  3483               	retlw	high (STR_16| (0+32768))
  1688  0FAB  3499               	retlw	low (STR_17| (0+32768))
  1689  0FAC  3483               	retlw	high (STR_17| (0+32768))
  1690  0FAD  3440               	retlw	low (STR_18| (0+32768))
  1691  0FAE  3483               	retlw	high (STR_18| (0+32768))
  1692  0FAF  349E               	retlw	low (STR_19| (0+32768))
  1693  0FB0  3483               	retlw	high (STR_19| (0+32768))
  1694  0FB1  3446               	retlw	low (STR_20| (0+32768))
  1695  0FB2  3483               	retlw	high (STR_20| (0+32768))
  1696  0FB3  34A3               	retlw	low (STR_21| (0+32768))
  1697  0FB4  3483               	retlw	high (STR_21| (0+32768))
  1698                           
  1699                           	psect	idataBANK2
  1700  0669                     __pidataBANK2:	
  1701                           
  1702                           ;initializer for _H7826_01_Gain
  1703  0669  3476               	retlw	low (STR_37| (0+32768))
  1704  066A  3483               	retlw	high (STR_37| (0+32768))
  1705  066B  347B               	retlw	low (STR_38| (0+32768))
  1706  066C  3483               	retlw	high (STR_38| (0+32768))
  1707  066D  348F               	retlw	low (STR_39| (0+32768))
  1708  066E  3483               	retlw	high (STR_39| (0+32768))
  1709  066F  3480               	retlw	low (STR_40| (0+32768))
  1710  0670  3483               	retlw	high (STR_40| (0+32768))
  1711  0671  3422               	retlw	low (STR_41| (0+32768))
  1712  0672  3483               	retlw	high (STR_41| (0+32768))
  1713  0673  3428               	retlw	low (STR_42| (0+32768))
  1714  0674  3483               	retlw	high (STR_42| (0+32768))
  1715  0675  342E               	retlw	low (STR_43| (0+32768))
  1716  0676  3483               	retlw	high (STR_43| (0+32768))
  1717  0677  3416               	retlw	low (STR_44| (0+32768))
  1718  0678  3483               	retlw	high (STR_44| (0+32768))
  1719  0679  34C3               	retlw	low (STR_45| (0+32768))
  1720  067A  3482               	retlw	high (STR_45| (0+32768))
  1721  067B  34ED               	retlw	low (STR_46| (0+32768))
  1722  067C  3482               	retlw	high (STR_46| (0+32768))
  1723  067D  34CA               	retlw	low (STR_47| (0+32768))
  1724  067E  3482               	retlw	high (STR_47| (0+32768))
  1725  067F  34D1               	retlw	low (STR_48| (0+32768))
  1726  0680  3482               	retlw	high (STR_48| (0+32768))
  1727  0681  34FB               	retlw	low (STR_49| (0+32768))
  1728  0682  3482               	retlw	high (STR_49| (0+32768))
  1729  0683  34B5               	retlw	low (STR_50| (0+32768))
  1730  0684  3482               	retlw	high (STR_50| (0+32768))
  1731  0685  34BC               	retlw	low (STR_51| (0+32768))
  1732  0686  3482               	retlw	high (STR_51| (0+32768))
  1733                           
  1734                           ;initializer for _H7826_Gain
  1735  0687  348A               	retlw	low (STR_22| (0+32768))
  1736  0688  3483               	retlw	high (STR_22| (0+32768))
  1737  0689  3485               	retlw	low (STR_23| (0+32768))
  1738  068A  3483               	retlw	high (STR_23| (0+32768))
  1739  068B  3494               	retlw	low (STR_24| (0+32768))
  1740  068C  3483               	retlw	high (STR_24| (0+32768))
  1741  068D  343A               	retlw	low (STR_25| (0+32768))
  1742  068E  3483               	retlw	high (STR_25| (0+32768))
  1743  068F  3410               	retlw	low (STR_26| (0+32768))
  1744  0690  3483               	retlw	high (STR_26| (0+32768))
  1745  0691  341C               	retlw	low (STR_27| (0+32768))
  1746  0692  3483               	retlw	high (STR_27| (0+32768))
  1747  0693  3434               	retlw	low (STR_28| (0+32768))
  1748  0694  3483               	retlw	high (STR_28| (0+32768))
  1749  0695  34DF               	retlw	low (STR_29| (0+32768))
  1750  0696  3482               	retlw	high (STR_29| (0+32768))
  1751  0697  34D8               	retlw	low (STR_30| (0+32768))
  1752  0698  3482               	retlw	high (STR_30| (0+32768))
  1753  0699  34E6               	retlw	low (STR_31| (0+32768))
  1754  069A  3482               	retlw	high (STR_31| (0+32768))
  1755  069B  34AE               	retlw	low (STR_32| (0+32768))
  1756  069C  3482               	retlw	high (STR_32| (0+32768))
  1757  069D  34F4               	retlw	low (STR_33| (0+32768))
  1758  069E  3482               	retlw	high (STR_33| (0+32768))
  1759  069F  34A6               	retlw	low (STR_34| (0+32768))
  1760  06A0  3482               	retlw	high (STR_34| (0+32768))
  1761  06A1  349E               	retlw	low (STR_35| (0+32768))
  1762  06A2  3482               	retlw	high (STR_35| (0+32768))
  1763  06A3  3496               	retlw	low (STR_36| (0+32768))
  1764  06A4  3482               	retlw	high (STR_36| (0+32768))
  1765                           
  1766                           	psect	stringtext
  1767  026B                     __pstringtext:	
  1768  026B                     _DAC_DataTable:	
  1769  026B  3499               	retlw	153
  1770  026C  3401               	retlw	1
  1771  026D  34C2               	retlw	194
  1772  026E  3401               	retlw	1
  1773  026F  34EB               	retlw	235
  1774  0270  3401               	retlw	1
  1775  0271  3414               	retlw	20
  1776  0272  3402               	retlw	2
  1777  0273  343D               	retlw	61
  1778  0274  3402               	retlw	2
  1779  0275  3466               	retlw	102
  1780  0276  3402               	retlw	2
  1781  0277  348F               	retlw	143
  1782  0278  3402               	retlw	2
  1783  0279  34B8               	retlw	184
  1784  027A  3402               	retlw	2
  1785  027B  34E1               	retlw	225
  1786  027C  3402               	retlw	2
  1787  027D  340A               	retlw	10
  1788  027E  3403               	retlw	3
  1789  027F  3433               	retlw	51
  1790  0280  3403               	retlw	3
  1791  0281  345B               	retlw	91
  1792  0282  3403               	retlw	3
  1793  0283  3484               	retlw	132
  1794  0284  3403               	retlw	3
  1795  0285  34AD               	retlw	173
  1796  0286  3403               	retlw	3
  1797  0287  34D6               	retlw	214
  1798  0288  3403               	retlw	3
  1799  0289                     __end_of_DAC_DataTable:	
  1800  0016                     _TMR1	set	22
  1801  000C                     _PORTA	set	12
  1802  0019                     _T1GCON	set	25
  1803  0018                     _T1CON	set	24
  1804  000D                     _PORTB	set	13
  1805  001B                     _PR2	set	27
  1806  001A                     _TMR2	set	26
  1807  001C                     _T2CON	set	28
  1808  00C0                     _TMR1ON	set	192
  1809  0088                     _TMR1IF	set	136
  1810  005F                     _GIE	set	95
  1811  005E                     _PEIE	set	94
  1812  00A1                     _BCL2IF	set	161
  1813  00A0                     _SSP2IF	set	160
  1814  0093                     _BCL1IF	set	147
  1815  008B                     _SSP1IF	set	139
  1816  0099                     _OSCCON	set	153
  1817  008D                     _TRISB	set	141
  1818  008C                     _TRISA	set	140
  1819  0488                     _TMR1IE	set	1160
  1820  04A1                     _BCL2IE	set	1185
  1821  04A0                     _SSP2IE	set	1184
  1822  0493                     _BCL1IE	set	1171
  1823  048B                     _SSP1IE	set	1163
  1824  011E                     _APFCON1	set	286
  1825  011D                     _APFCON0	set	285
  1826  0866                     _LATA6	set	2150
  1827  0863                     _LATA3	set	2147
  1828  0864                     _LATA4	set	2148
  1829  018D                     _ANSELB	set	397
  1830  018C                     _ANSELA	set	396
  1831  021C                     _SSP2STATbits	set	540
  1832  0219                     _SSP2BUF	set	537
  1833  021E                     _SSP2CON2	set	542
  1834  021B                     _SSP2MSK	set	539
  1835  021E                     _SSP2CON2bits	set	542
  1836  021D                     _SSP2CON1bits	set	541
  1837  021A                     _SSP2ADD	set	538
  1838  021C                     _SSP2STAT	set	540
  1839  021D                     _SSP2CON1	set	541
  1840  0214                     _SSP1STATbits	set	532
  1841  0211                     _SSP1BUF	set	529
  1842  0216                     _SSP1CON2	set	534
  1843  0213                     _SSP1MSK	set	531
  1844  0216                     _SSP1CON2bits	set	534
  1845  0215                     _SSP1CON1bits	set	533
  1846  0212                     _SSP1ADD	set	530
  1847  0214                     _SSP1STAT	set	532
  1848  0215                     _SSP1CON1	set	533
  1849  0298                     _CCPR2L	set	664
  1850  029E                     _CCPTMRS	set	670
  1851  029A                     _CCP2CON	set	666
  1852  0289                     STR_1:	
  1853  0289  3448               	retlw	72	;'H'
  1854  028A  3465               	retlw	101	;'e'
  1855  028B  346C               	retlw	108	;'l'
  1856  028C  346C               	retlw	108	;'l'
  1857  028D  346F               	retlw	111	;'o'
  1858  028E  3477               	retlw	119	;'w'
  1859  028F  3420               	retlw	32	;' '
  1860  0290  3457               	retlw	87	;'W'
  1861  0291  346F               	retlw	111	;'o'
  1862  0292  3472               	retlw	114	;'r'
  1863  0293  346C               	retlw	108	;'l'
  1864  0294  3464               	retlw	100	;'d'
  1865  0295  3400               	retlw	0
  1866  0296                     STR_36:	
  1867  0296  3432               	retlw	50	;'2'
  1868  0297  3437               	retlw	55	;'7'
  1869  0298  3437               	retlw	55	;'7'
  1870  0299  3434               	retlw	52	;'4'
  1871  029A  3435               	retlw	53	;'5'
  1872  029B  3436               	retlw	54	;'6'
  1873  029C  3432               	retlw	50	;'2'
  1874  029D  3400               	retlw	0
  1875  029E                     STR_35:	
  1876  029E  3431               	retlw	49	;'1'
  1877  029F  3439               	retlw	57	;'9'
  1878  02A0  3434               	retlw	52	;'4'
  1879  02A1  3430               	retlw	48	;'0'
  1880  02A2  3436               	retlw	54	;'6'
  1881  02A3  3437               	retlw	55	;'7'
  1882  02A4  3433               	retlw	51	;'3'
  1883  02A5  3400               	retlw	0
  1884  02A6                     STR_34:	
  1885  02A6  3431               	retlw	49	;'1'
  1886  02A7  3433               	retlw	51	;'3'
  1887  02A8  3433               	retlw	51	;'3'
  1888  02A9  3436               	retlw	54	;'6'
  1889  02AA  3430               	retlw	48	;'0'
  1890  02AB  3430               	retlw	48	;'0'
  1891  02AC  3436               	retlw	54	;'6'
  1892  02AD  3400               	retlw	0
  1893  02AE                     STR_32:	
  1894  02AE  3436               	retlw	54	;'6'
  1895  02AF  3430               	retlw	48	;'0'
  1896  02B0  3430               	retlw	48	;'0'
  1897  02B1  3430               	retlw	48	;'0'
  1898  02B2  3430               	retlw	48	;'0'
  1899  02B3  3430               	retlw	48	;'0'
  1900  02B4  3400               	retlw	0
  1901  02B5                     STR_50:	
  1902  02B5  3437               	retlw	55	;'7'
  1903  02B6  3430               	retlw	48	;'0'
  1904  02B7  3430               	retlw	48	;'0'
  1905  02B8  3438               	retlw	56	;'8'
  1906  02B9  3439               	retlw	57	;'9'
  1907  02BA  3430               	retlw	48	;'0'
  1908  02BB  3400               	retlw	0
  1909  02BC                     STR_51:	
  1910  02BC  3439               	retlw	57	;'9'
  1911  02BD  3436               	retlw	54	;'6'
  1912  02BE  3438               	retlw	56	;'8'
  1913  02BF  3434               	retlw	52	;'4'
  1914  02C0  3437               	retlw	55	;'7'
  1915  02C1  3432               	retlw	50	;'2'
  1916  02C2  3400               	retlw	0
  1917  02C3                     STR_45:	
  1918  02C3  3431               	retlw	49	;'1'
  1919  02C4  3430               	retlw	48	;'0'
  1920  02C5  3438               	retlw	56	;'8'
  1921  02C6  3438               	retlw	56	;'8'
  1922  02C7  3434               	retlw	52	;'4'
  1923  02C8  3433               	retlw	51	;'3'
  1924  02C9  3400               	retlw	0
  1925  02CA                     STR_47:	
  1926  02CA  3432               	retlw	50	;'2'
  1927  02CB  3434               	retlw	52	;'4'
  1928  02CC  3432               	retlw	50	;'2'
  1929  02CD  3433               	retlw	51	;'3'
  1930  02CE  3436               	retlw	54	;'6'
  1931  02CF  3434               	retlw	52	;'4'
  1932  02D0  3400               	retlw	0
  1933  02D1                     STR_48:	
  1934  02D1  3433               	retlw	51	;'3'
  1935  02D2  3435               	retlw	53	;'5'
  1936  02D3  3431               	retlw	49	;'1'
  1937  02D4  3431               	retlw	49	;'1'
  1938  02D5  3432               	retlw	50	;'2'
  1939  02D6  3437               	retlw	55	;'7'
  1940  02D7  3400               	retlw	0
  1941  02D8                     STR_30:	
  1942  02D8  3432               	retlw	50	;'2'
  1943  02D9  3434               	retlw	52	;'4'
  1944  02DA  3437               	retlw	55	;'7'
  1945  02DB  3436               	retlw	54	;'6'
  1946  02DC  3434               	retlw	52	;'4'
  1947  02DD  3437               	retlw	55	;'7'
  1948  02DE  3400               	retlw	0
  1949  02DF                     STR_29:	
  1950  02DF  3431               	retlw	49	;'1'
  1951  02E0  3435               	retlw	53	;'5'
  1952  02E1  3433               	retlw	51	;'3'
  1953  02E2  3432               	retlw	50	;'2'
  1954  02E3  3432               	retlw	50	;'2'
  1955  02E4  3438               	retlw	56	;'8'
  1956  02E5  3400               	retlw	0
  1957  02E6                     STR_31:	
  1958  02E6  3433               	retlw	51	;'3'
  1959  02E7  3438               	retlw	56	;'8'
  1960  02E8  3439               	retlw	57	;'9'
  1961  02E9  3439               	retlw	57	;'9'
  1962  02EA  3438               	retlw	56	;'8'
  1963  02EB  3438               	retlw	56	;'8'
  1964  02EC  3400               	retlw	0
  1965  02ED                     STR_46:	
  1966  02ED  3431               	retlw	49	;'1'
  1967  02EE  3436               	retlw	54	;'6'
  1968  02EF  3434               	retlw	52	;'4'
  1969  02F0  3431               	retlw	49	;'1'
  1970  02F1  3433               	retlw	51	;'3'
  1971  02F2  3439               	retlw	57	;'9'
  1972  02F3  3400               	retlw	0
  1973  02F4                     STR_33:	
  1974  02F4  3439               	retlw	57	;'9'
  1975  02F5  3430               	retlw	48	;'0'
  1976  02F6  3433               	retlw	51	;'3'
  1977  02F7  3438               	retlw	56	;'8'
  1978  02F8  3439               	retlw	57	;'9'
  1979  02F9  3439               	retlw	57	;'9'
  1980  02FA  3400               	retlw	0
  1981  02FB                     STR_49:	
  1982  02FB  3434               	retlw	52	;'4'
  1983  02FC  3439               	retlw	57	;'9'
  1984  02FD  3439               	retlw	57	;'9'
  1985  02FE  3439               	retlw	57	;'9'
  1986  02FF  3439               	retlw	57	;'9'
  1987  0300  3439               	retlw	57	;'9'
  1988  0301  3400               	retlw	0
  1989  0302                     STR_3:	
  1990  0302  3425               	retlw	37	;'%'
  1991  0303  3430               	retlw	48	;'0'
  1992  0304  3438               	retlw	56	;'8'
  1993  0305  346C               	retlw	108	;'l'
  1994  0306  3458               	retlw	88	;'X'
  1995  0307  3420               	retlw	32	;' '
  1996  0308  3400               	retlw	0
  1997  0309                     STR_6:	
  1998  0309  3420               	retlw	32	;' '
  1999  030A  3425               	retlw	37	;'%'
  2000  030B  3430               	retlw	48	;'0'
  2001  030C  3438               	retlw	56	;'8'
  2002  030D  344C               	retlw	76	;'L'
  2003  030E  3458               	retlw	88	;'X'
  2004  030F  3400               	retlw	0
  2005  0310                     STR_26:	
  2006  0310  3433               	retlw	51	;'3'
  2007  0311  3430               	retlw	48	;'0'
  2008  0312  3430               	retlw	48	;'0'
  2009  0313  3430               	retlw	48	;'0'
  2010  0314  3430               	retlw	48	;'0'
  2011  0315  3400               	retlw	0
  2012  0316                     STR_44:	
  2013  0316  3437               	retlw	55	;'7'
  2014  0317  3430               	retlw	48	;'0'
  2015  0318  3435               	retlw	53	;'5'
  2016  0319  3430               	retlw	48	;'0'
  2017  031A  3430               	retlw	48	;'0'
  2018  031B  3400               	retlw	0
  2019  031C                     STR_27:	
  2020  031C  3435               	retlw	53	;'5'
  2021  031D  3433               	retlw	51	;'3'
  2022  031E  3435               	retlw	53	;'5'
  2023  031F  3435               	retlw	53	;'5'
  2024  0320  3433               	retlw	51	;'3'
  2025  0321  3400               	retlw	0
  2026  0322                     STR_41:	
  2027  0322  3431               	retlw	49	;'1'
  2028  0323  3436               	retlw	54	;'6'
  2029  0324  3431               	retlw	49	;'1'
  2030  0325  3432               	retlw	50	;'2'
  2031  0326  3435               	retlw	53	;'5'
  2032  0327  3400               	retlw	0
  2033  0328                     STR_42:	
  2034  0328  3432               	retlw	50	;'2'
  2035  0329  3437               	retlw	55	;'7'
  2036  032A  3432               	retlw	50	;'2'
  2037  032B  3433               	retlw	51	;'3'
  2038  032C  3438               	retlw	56	;'8'
  2039  032D  3400               	retlw	0
  2040  032E                     STR_43:	
  2041  032E  3434               	retlw	52	;'4'
  2042  032F  3434               	retlw	52	;'4'
  2043  0330  3434               	retlw	52	;'4'
  2044  0331  3437               	retlw	55	;'7'
  2045  0332  3438               	retlw	56	;'8'
  2046  0333  3400               	retlw	0
  2047  0334                     STR_28:	
  2048  0334  3439               	retlw	57	;'9'
  2049  0335  3432               	retlw	50	;'2'
  2050  0336  3430               	retlw	48	;'0'
  2051  0337  3438               	retlw	56	;'8'
  2052  0338  3438               	retlw	56	;'8'
  2053  0339  3400               	retlw	0
  2054  033A                     STR_25:	
  2055  033A  3431               	retlw	49	;'1'
  2056  033B  3436               	retlw	54	;'6'
  2057  033C  3430               	retlw	48	;'0'
  2058  033D  3439               	retlw	57	;'9'
  2059  033E  3439               	retlw	57	;'9'
  2060  033F  3400               	retlw	0
  2061  0340                     STR_18:	
  2062  0340  3431               	retlw	49	;'1'
  2063  0341  342E               	retlw	46	;'.'
  2064  0342  3430               	retlw	48	;'0'
  2065  0343  3435               	retlw	53	;'5'
  2066  0344  3456               	retlw	86	;'V'
  2067  0345  3400               	retlw	0
  2068  0346                     STR_20:	
  2069  0346  3431               	retlw	49	;'1'
  2070  0347  342E               	retlw	46	;'.'
  2071  0348  3431               	retlw	49	;'1'
  2072  0349  3435               	retlw	53	;'5'
  2073  034A  3456               	retlw	86	;'V'
  2074  034B  3400               	retlw	0
  2075  034C                     STR_8:	
  2076  034C  3430               	retlw	48	;'0'
  2077  034D  342E               	retlw	46	;'.'
  2078  034E  3435               	retlw	53	;'5'
  2079  034F  3435               	retlw	53	;'5'
  2080  0350  3456               	retlw	86	;'V'
  2081  0351  3400               	retlw	0
  2082  0352                     STR_10:	
  2083  0352  3430               	retlw	48	;'0'
  2084  0353  342E               	retlw	46	;'.'
  2085  0354  3436               	retlw	54	;'6'
  2086  0355  3435               	retlw	53	;'5'
  2087  0356  3456               	retlw	86	;'V'
  2088  0357  3400               	retlw	0
  2089  0358                     STR_12:	
  2090  0358  3430               	retlw	48	;'0'
  2091  0359  342E               	retlw	46	;'.'
  2092  035A  3437               	retlw	55	;'7'
  2093  035B  3435               	retlw	53	;'5'
  2094  035C  3456               	retlw	86	;'V'
  2095  035D  3400               	retlw	0
  2096  035E                     STR_14:	
  2097  035E  3430               	retlw	48	;'0'
  2098  035F  342E               	retlw	46	;'.'
  2099  0360  3438               	retlw	56	;'8'
  2100  0361  3435               	retlw	53	;'5'
  2101  0362  3456               	retlw	86	;'V'
  2102  0363  3400               	retlw	0
  2103  0364                     STR_16:	
  2104  0364  3430               	retlw	48	;'0'
  2105  0365  342E               	retlw	46	;'.'
  2106  0366  3439               	retlw	57	;'9'
  2107  0367  3435               	retlw	53	;'5'
  2108  0368  3456               	retlw	86	;'V'
  2109  0369  3400               	retlw	0
  2110  036A                     STR_4:	
  2111  036A  3420               	retlw	32	;' '
  2112  036B  3425               	retlw	37	;'%'
  2113  036C  3430               	retlw	48	;'0'
  2114  036D  3432               	retlw	50	;'2'
  2115  036E  3458               	retlw	88	;'X'
  2116  036F  3400               	retlw	0
  2117  0370                     STR_5:	
  2118  0370  3420               	retlw	32	;' '
  2119  0371  3425               	retlw	37	;'%'
  2120  0372  3430               	retlw	48	;'0'
  2121  0373  3434               	retlw	52	;'4'
  2122  0374  3458               	retlw	88	;'X'
  2123  0375  3400               	retlw	0
  2124  0376                     STR_37:	
  2125  0376  3431               	retlw	49	;'1'
  2126  0377  3432               	retlw	50	;'2'
  2127  0378  3435               	retlw	53	;'5'
  2128  0379  3430               	retlw	48	;'0'
  2129  037A  3400               	retlw	0
  2130  037B                     STR_38:	
  2131  037B  3432               	retlw	50	;'2'
  2132  037C  3435               	retlw	53	;'5'
  2133  037D  3438               	retlw	56	;'8'
  2134  037E  3430               	retlw	48	;'0'
  2135  037F  3400               	retlw	0
  2136  0380                     STR_40:	
  2137  0380  3439               	retlw	57	;'9'
  2138  0381  3431               	retlw	49	;'1'
  2139  0382  3438               	retlw	56	;'8'
  2140  0383  3432               	retlw	50	;'2'
  2141  0384  3400               	retlw	0
  2142  0385                     STR_23:	
  2143  0385  3433               	retlw	51	;'3'
  2144  0386  3439               	retlw	57	;'9'
  2145  0387  3435               	retlw	53	;'5'
  2146  0388  3437               	retlw	55	;'7'
  2147  0389  3400               	retlw	0
  2148  038A                     STR_22:	
  2149  038A  3431               	retlw	49	;'1'
  2150  038B  3437               	retlw	55	;'7'
  2151  038C  3437               	retlw	55	;'7'
  2152  038D  3437               	retlw	55	;'7'
  2153  038E  3400               	retlw	0
  2154  038F                     STR_39:	
  2155  038F  3434               	retlw	52	;'4'
  2156  0390  3439               	retlw	57	;'9'
  2157  0391  3439               	retlw	57	;'9'
  2158  0392  3438               	retlw	56	;'8'
  2159  0393  3400               	retlw	0
  2160  0394                     STR_24:	
  2161  0394  3438               	retlw	56	;'8'
  2162  0395  3432               	retlw	50	;'2'
  2163  0396  3431               	retlw	49	;'1'
  2164  0397  3439               	retlw	57	;'9'
  2165  0398  3400               	retlw	0
  2166  0399                     STR_17:	
  2167  0399  3431               	retlw	49	;'1'
  2168  039A  342E               	retlw	46	;'.'
  2169  039B  3430               	retlw	48	;'0'
  2170  039C  3456               	retlw	86	;'V'
  2171  039D  3400               	retlw	0
  2172  039E                     STR_19:	
  2173  039E  3431               	retlw	49	;'1'
  2174  039F  342E               	retlw	46	;'.'
  2175  03A0  3431               	retlw	49	;'1'
  2176  03A1  3456               	retlw	86	;'V'
  2177  03A2  3400               	retlw	0
  2178  03A3                     STR_21:	
  2179  03A3  3431               	retlw	49	;'1'
  2180  03A4  342E               	retlw	46	;'.'
  2181  03A5  3432               	retlw	50	;'2'
  2182  03A6  3456               	retlw	86	;'V'
  2183  03A7  3400               	retlw	0
  2184  03A8                     STR_7:	
  2185  03A8  3430               	retlw	48	;'0'
  2186  03A9  342E               	retlw	46	;'.'
  2187  03AA  3435               	retlw	53	;'5'
  2188  03AB  3456               	retlw	86	;'V'
  2189  03AC  3400               	retlw	0
  2190  03AD                     STR_9:	
  2191  03AD  3430               	retlw	48	;'0'
  2192  03AE  342E               	retlw	46	;'.'
  2193  03AF  3436               	retlw	54	;'6'
  2194  03B0  3456               	retlw	86	;'V'
  2195  03B1  3400               	retlw	0
  2196  03B2                     STR_11:	
  2197  03B2  3430               	retlw	48	;'0'
  2198  03B3  342E               	retlw	46	;'.'
  2199  03B4  3437               	retlw	55	;'7'
  2200  03B5  3456               	retlw	86	;'V'
  2201  03B6  3400               	retlw	0
  2202  03B7                     STR_13:	
  2203  03B7  3430               	retlw	48	;'0'
  2204  03B8  342E               	retlw	46	;'.'
  2205  03B9  3438               	retlw	56	;'8'
  2206  03BA  3456               	retlw	86	;'V'
  2207  03BB  3400               	retlw	0
  2208  03BC                     STR_15:	
  2209  03BC  3430               	retlw	48	;'0'
  2210  03BD  342E               	retlw	46	;'.'
  2211  03BE  3439               	retlw	57	;'9'
  2212  03BF  3456               	retlw	86	;'V'
  2213  03C0  3400               	retlw	0
  2214  03C1                     STR_2:	
  2215  03C1  340D               	retlw	13
  2216  03C2  3400               	retlw	0
  2217                           
  2218                           ; #config settings
  2219  0000                     
  2220                           	psect	cinit
  2221  0015                     start_initialization:	
  2222  0015                     __initialization:	
  2223                           
  2224                           ; Initialize objects allocated to BANK1
  2225  0015  3097               	movlw	low __pidataBANK1
  2226  0016  0084               	movwf	4
  2227  0017  308F               	movlw	(high __pidataBANK1)| (0+128)
  2228  0018  0085               	movwf	5
  2229  0019  30C6               	movlw	low __pdataBANK1
  2230  001A  0086               	movwf	6
  2231  001B  3000               	movlw	high __pdataBANK1
  2232  001C  0087               	movwf	7
  2233  001D  301E               	movlw	30
  2234  001E  318E  26E2  3180   	fcall	init_ram
  2235                           
  2236                           ; Initialize objects allocated to BANK2
  2237  0021  3069               	movlw	low __pidataBANK2
  2238  0022  0084               	movwf	4
  2239  0023  3086               	movlw	(high __pidataBANK2)| (0+128)
  2240  0024  0085               	movwf	5
  2241  0025  3020               	movlw	low __pdataBANK2
  2242  0026  0086               	movwf	6
  2243  0027  3001               	movlw	high __pdataBANK2
  2244  0028  0087               	movwf	7
  2245  0029  303C               	movlw	60
  2246  002A  318E  26E2  3180   	fcall	init_ram
  2247                           
  2248                           ; Clear objects allocated to COMMON
  2249  002D  01FB               	clrf	__pbssCOMMON& (0+127)
  2250                           
  2251                           ; Clear objects allocated to BANK0
  2252  002E  305F               	movlw	low __pbssBANK0
  2253  002F  0084               	movwf	4
  2254  0030  3000               	movlw	high __pbssBANK0
  2255  0031  0085               	movwf	5
  2256  0032  300A               	movlw	10
  2257  0033  318E  26DC  3180   	fcall	clear_ram0
  2258                           
  2259                           ; Clear objects allocated to BANK1
  2260  0036  30A0               	movlw	low __pbssBANK1
  2261  0037  0084               	movwf	4
  2262  0038  3000               	movlw	high __pbssBANK1
  2263  0039  0085               	movwf	5
  2264  003A  3026               	movlw	38
  2265  003B  318E  26DC         	fcall	clear_ram0
  2266  003D                     end_of_initialization:	
  2267                           ;End of C runtime variable initialization code
  2268                           
  2269  003D                     __end_of__initialization:	
  2270  003D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2271  003E  0020               	movlb	0
  2272  003F  3187  2F51         	ljmp	_main	;jump to C main() function
  2273                           
  2274                           	psect	bssCOMMON
  2275  007B                     __pbssCOMMON:	
  2276  007B                     _outptr:	
  2277  007B                     	ds	1
  2278                           
  2279                           	psect	bssBANK0
  2280  005F                     __pbssBANK0:	
  2281  005F                     _MemoryReg:	
  2282  005F                     	ds	3
  2283  0062                     _xfunc_in:	
  2284  0062                     	ds	2
  2285  0064                     _xfunc_out:	
  2286  0064                     	ds	2
  2287  0066                     _VoltageReg:	
  2288  0066                     	ds	2
  2289  0068                     _ConfigReg:	
  2290  0068                     	ds	1
  2291                           
  2292                           	psect	bssBANK1
  2293  00A0                     __pbssBANK1:	
  2294  00A0                     _I2C2_Config:	
  2295  00A0                     	ds	19
  2296  00B3                     _I2C1_Config:	
  2297  00B3                     	ds	19
  2298                           
  2299                           	psect	dataBANK1
  2300  00C6                     __pdataBANK1:	
  2301  00C6                     _DAC_VoltageTable:	
  2302  00C6                     	ds	30
  2303                           
  2304                           	psect	dataBANK2
  2305  0120                     __pdataBANK2:	
  2306  0120                     _H7826_01_Gain:	
  2307  0120                     	ds	30
  2308  013E                     _H7826_Gain:	
  2309  013E                     	ds	30
  2310                           
  2311                           	psect	inittext
  2312  0EE2                     init_ram:	
  2313  0EE2  00FE               	movwf	126
  2314  0EE3                     initloop:	
  2315  0EE3  0012               	moviw fsr0++
  2316  0EE4  001E               	movwi fsr1++
  2317  0EE5  0BFE               	decfsz	126,f
  2318  0EE6  2EE3               	goto	initloop
  2319  0EE7  3400               	retlw	0
  2320                           
  2321                           	psect	clrtext
  2322  0EDC                     clear_ram0:	
  2323                           ;	Called with FSR0 containing the base address, and
  2324                           ;	WREG with the size to clear
  2325                           
  2326  0EDC  0064               	clrwdt	;clear the watchdog before getting into this loop
  2327  0EDD                     clrloop0:	
  2328  0EDD  0180               	clrf	0	;clear RAM location pointed to by FSR
  2329  0EDE  3101               	addfsr 0,1
  2330  0EDF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2331  0EE0  2EDD               	goto	clrloop0	;have we reached the end yet?
  2332  0EE1  3400               	retlw	0	;all done for this memory range, return
  2333                           
  2334                           	psect	cstackCOMMON
  2335  0070                     __pcstackCOMMON:	
  2336  0070                     ?_LCD_DisplayClear:	
  2337  0070                     ?_Basic_Init:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ?_Buzer_Init:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     ?_I2C1_PinInit:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346  0070                     ?_I2C1_Interrupt:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349  0070                     ??_I2C1_Interrupt:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352  0070                     ?_I2C2_PinInit:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355  0070                     ?_I2C2_Interrupt:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358  0070                     ??_I2C2_Interrupt:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361  0070                     ?_I2C_CommonInterrupt:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364  0070                     ?_LCD_WriteData:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0070                     ?_LCD_Init:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ?_DAC_Initialize:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ?_Timer1_Init:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ?_Timer1_Handler:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ??_Timer1_Handler:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ?_main:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ?_Handler:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     ?_xputc:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     ?_xputs:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394                           
  2395                           ; 1 bytes @ 0x0
  2396  0070                     	ds	1
  2397  0071                     ??_I2C_CommonInterrupt:	
  2398  0071                     ??_Handler:	
  2399                           ; 1 bytes @ 0x1
  2400                           
  2401                           
  2402                           ; 1 bytes @ 0x1
  2403  0071                     	ds	1
  2404  0072                     ??_Basic_Init:	
  2405  0072                     ??_Buzer_Init:	
  2406                           ; 1 bytes @ 0x2
  2407                           
  2408  0072                     ??_I2C1_PinInit:	
  2409                           ; 1 bytes @ 0x2
  2410                           
  2411  0072                     ?_I2C1_Transmit:	
  2412                           ; 1 bytes @ 0x2
  2413                           
  2414  0072                     ??_I2C2_PinInit:	
  2415                           ; 1 bytes @ 0x2
  2416                           
  2417  0072                     ?_I2C2_Transmit:	
  2418                           ; 1 bytes @ 0x2
  2419                           
  2420  0072                     ??_LCD_WriteData:	
  2421                           ; 1 bytes @ 0x2
  2422                           
  2423  0072                     ??_Timer1_Init:	
  2424                           ; 1 bytes @ 0x2
  2425                           
  2426  0072                     ?___wmul:	
  2427                           ; 1 bytes @ 0x2
  2428                           
  2429  0072                     ?___lldiv:	
  2430                           ; 2 bytes @ 0x2
  2431                           
  2432  0072                     ?___llmod:	
  2433                           ; 4 bytes @ 0x2
  2434                           
  2435  0072                     I2C1_Transmit@pData:	
  2436                           ; 4 bytes @ 0x2
  2437                           
  2438  0072                     I2C2_Transmit@pData:	
  2439                           ; 1 bytes @ 0x2
  2440                           
  2441  0072                     ___wmul@multiplier:	
  2442                           ; 1 bytes @ 0x2
  2443                           
  2444  0072                     ___lldiv@divisor:	
  2445                           ; 2 bytes @ 0x2
  2446                           
  2447  0072                     ___llmod@divisor:	
  2448                           ; 4 bytes @ 0x2
  2449                           
  2450                           
  2451                           ; 4 bytes @ 0x2
  2452  0072                     	ds	1
  2453  0073                     ?_I2C1_Setting:	
  2454  0073                     ?_I2C2_Setting:	
  2455                           ; 1 bytes @ 0x3
  2456                           
  2457  0073                     I2C1_Setting@mode:	
  2458                           ; 1 bytes @ 0x3
  2459                           
  2460  0073                     I2C1_Transmit@size:	
  2461                           ; 1 bytes @ 0x3
  2462                           
  2463  0073                     I2C2_Setting@mode:	
  2464                           ; 1 bytes @ 0x3
  2465                           
  2466  0073                     I2C2_Transmit@size:	
  2467                           ; 1 bytes @ 0x3
  2468                           
  2469                           
  2470                           ; 1 bytes @ 0x3
  2471  0073                     	ds	1
  2472  0074                     ??_I2C1_Transmit:	
  2473  0074                     ??_I2C2_Transmit:	
  2474                           ; 1 bytes @ 0x4
  2475                           
  2476  0074                     I2C1_Setting@Speed:	
  2477                           ; 1 bytes @ 0x4
  2478                           
  2479  0074                     I2C2_Setting@Speed:	
  2480                           ; 1 bytes @ 0x4
  2481                           
  2482  0074                     LCD_WriteData@point:	
  2483                           ; 1 bytes @ 0x4
  2484                           
  2485  0074                     ___wmul@multiplicand:	
  2486                           ; 1 bytes @ 0x4
  2487                           
  2488                           
  2489                           ; 2 bytes @ 0x4
  2490  0074                     	ds	1
  2491  0075                     ??_LCD_DisplayClear:	
  2492  0075                     ??_I2C1_Setting:	
  2493                           ; 1 bytes @ 0x5
  2494                           
  2495  0075                     ??_I2C2_Setting:	
  2496                           ; 1 bytes @ 0x5
  2497                           
  2498  0075                     ?_LCD_Put:	
  2499                           ; 1 bytes @ 0x5
  2500                           
  2501  0075                     ?_LCD_CursorPosition:	
  2502                           ; 1 bytes @ 0x5
  2503                           
  2504  0075                     LCD_Put@word:	
  2505                           ; 1 bytes @ 0x5
  2506                           
  2507  0075                     LCD_CursorPosition@ty:	
  2508                           ; 1 bytes @ 0x5
  2509                           
  2510                           
  2511                           ; 1 bytes @ 0x5
  2512  0075                     	ds	1
  2513  0076                     ??_LCD_Init:	
  2514  0076                     ??_LCD_Put:	
  2515                           ; 1 bytes @ 0x6
  2516                           
  2517  0076                     ??_LCD_CursorPosition:	
  2518                           ; 1 bytes @ 0x6
  2519                           
  2520  0076                     ??_xputc:	
  2521                           ; 1 bytes @ 0x6
  2522                           
  2523  0076                     ??___wmul:	
  2524                           ; 1 bytes @ 0x6
  2525                           
  2526  0076                     I2C1_Setting@address:	
  2527                           ; 1 bytes @ 0x6
  2528                           
  2529  0076                     I2C1_Transmit@address:	
  2530                           ; 1 bytes @ 0x6
  2531                           
  2532  0076                     I2C2_Setting@address:	
  2533                           ; 1 bytes @ 0x6
  2534                           
  2535  0076                     I2C2_Transmit@address:	
  2536                           ; 1 bytes @ 0x6
  2537                           
  2538  0076                     ___wmul@product:	
  2539                           ; 1 bytes @ 0x6
  2540                           
  2541  0076                     ___lldiv@dividend:	
  2542                           ; 2 bytes @ 0x6
  2543                           
  2544  0076                     ___llmod@dividend:	
  2545                           ; 4 bytes @ 0x6
  2546                           
  2547                           
  2548                           ; 4 bytes @ 0x6
  2549  0076                     	ds	1
  2550  0077                     ?_I2C_Init:	
  2551  0077                     I2C1_Transmit@i:	
  2552                           ; 1 bytes @ 0x7
  2553                           
  2554  0077                     I2C2_Transmit@i:	
  2555                           ; 1 bytes @ 0x7
  2556                           
  2557  0077                     I2C_Init@address:	
  2558                           ; 1 bytes @ 0x7
  2559                           
  2560  0077                     LCD_CursorPosition@tx:	
  2561                           ; 1 bytes @ 0x7
  2562                           
  2563  0077                     xputc@c:	
  2564                           ; 1 bytes @ 0x7
  2565                           
  2566                           
  2567                           ; 1 bytes @ 0x7
  2568  0077                     	ds	1
  2569  0078                     ??_xputs:	
  2570  0078                     I2C1_Transmit@i_167:	
  2571                           ; 1 bytes @ 0x8
  2572                           
  2573  0078                     I2C2_Transmit@i_311:	
  2574                           ; 1 bytes @ 0x8
  2575                           
  2576  0078                     I2C_Init@mode:	
  2577                           ; 1 bytes @ 0x8
  2578                           
  2579                           
  2580                           ; 1 bytes @ 0x8
  2581  0078                     	ds	1
  2582  0079                     I2C1_Transmit@result:	
  2583  0079                     I2C2_Transmit@result:	
  2584                           ; 1 bytes @ 0x9
  2585                           
  2586  0079                     I2C_Init@Speed:	
  2587                           ; 1 bytes @ 0x9
  2588                           
  2589  0079                     xputs@str:	
  2590                           ; 1 bytes @ 0x9
  2591                           
  2592                           
  2593                           ; 1 bytes @ 0x9
  2594  0079                     	ds	1
  2595  007A                     ??___lldiv:	
  2596  007A                     ??___llmod:	
  2597                           ; 1 bytes @ 0xA
  2598                           
  2599  007A                     I2C_Init@I2Cx:	
  2600                           ; 1 bytes @ 0xA
  2601                           
  2602                           
  2603                           ; 1 bytes @ 0xA
  2604  007A                     	ds	1
  2605                           
  2606                           	psect	cstackBANK0
  2607  0020                     __pcstackBANK0:	
  2608  0020                     ??_I2C_Init:	
  2609  0020                     ?_I2C_Transmit:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612  0020                     I2C_Transmit@address:	
  2613                           ; 1 bytes @ 0x0
  2614                           
  2615  0020                     ___llmod@counter:	
  2616                           ; 1 bytes @ 0x0
  2617                           
  2618  0020                     ___lldiv@quotient:	
  2619                           ; 1 bytes @ 0x0
  2620                           
  2621                           
  2622                           ; 4 bytes @ 0x0
  2623  0020                     	ds	1
  2624  0021                     I2C_Transmit@pData:	
  2625                           
  2626                           ; 1 bytes @ 0x1
  2627  0021                     	ds	1
  2628  0022                     I2C_Transmit@size:	
  2629                           
  2630                           ; 1 bytes @ 0x2
  2631  0022                     	ds	1
  2632  0023                     ??_I2C_Transmit:	
  2633                           
  2634                           ; 1 bytes @ 0x3
  2635  0023                     	ds	1
  2636  0024                     ___lldiv@counter:	
  2637                           
  2638                           ; 1 bytes @ 0x4
  2639  0024                     	ds	1
  2640  0025                     ?_xvprintf:	
  2641  0025                     xvprintf@fmt:	
  2642                           ; 1 bytes @ 0x5
  2643                           
  2644                           
  2645                           ; 2 bytes @ 0x5
  2646  0025                     	ds	1
  2647  0026                     I2C_Transmit@I2Cx:	
  2648                           
  2649                           ; 1 bytes @ 0x6
  2650  0026                     	ds	1
  2651  0027                     I2C_Transmit@result:	
  2652  0027                     xvprintf@arp:	
  2653                           ; 1 bytes @ 0x7
  2654                           
  2655                           
  2656                           ; 1 bytes @ 0x7
  2657  0027                     	ds	1
  2658  0028                     ??_DAC_Initialize:	
  2659  0028                     ??_xvprintf:	
  2660                           ; 1 bytes @ 0x8
  2661                           
  2662                           
  2663                           ; 1 bytes @ 0x8
  2664  0028                     	ds	4
  2665  002C                     xvprintf@s:	
  2666                           
  2667                           ; 16 bytes @ 0xC
  2668  002C                     	ds	16
  2669  003C                     _xvprintf$625:	
  2670                           
  2671                           ; 4 bytes @ 0x1C
  2672  003C                     	ds	4
  2673  0040                     _xvprintf$626:	
  2674                           
  2675                           ; 2 bytes @ 0x20
  2676  0040                     	ds	2
  2677  0042                     _xvprintf$627:	
  2678                           
  2679                           ; 2 bytes @ 0x22
  2680  0042                     	ds	2
  2681  0044                     xvprintf@p:	
  2682                           
  2683                           ; 1 bytes @ 0x24
  2684  0044                     	ds	1
  2685  0045                     xvprintf@r:	
  2686                           
  2687                           ; 2 bytes @ 0x25
  2688  0045                     	ds	2
  2689  0047                     xvprintf@w:	
  2690                           
  2691                           ; 2 bytes @ 0x27
  2692  0047                     	ds	2
  2693  0049                     xvprintf@j:	
  2694                           
  2695                           ; 2 bytes @ 0x29
  2696  0049                     	ds	2
  2697  004B                     xvprintf@v:	
  2698                           
  2699                           ; 4 bytes @ 0x2B
  2700  004B                     	ds	4
  2701  004F                     xvprintf@f:	
  2702                           
  2703                           ; 2 bytes @ 0x2F
  2704  004F                     	ds	2
  2705  0051                     xvprintf@i:	
  2706                           
  2707                           ; 2 bytes @ 0x31
  2708  0051                     	ds	2
  2709  0053                     xvprintf@d:	
  2710                           
  2711                           ; 1 bytes @ 0x33
  2712  0053                     	ds	1
  2713  0054                     xvprintf@c:	
  2714                           
  2715                           ; 1 bytes @ 0x34
  2716  0054                     	ds	1
  2717  0055                     ?_xprintf:	
  2718  0055                     xprintf@fmt:	
  2719                           ; 1 bytes @ 0x35
  2720                           
  2721                           
  2722                           ; 2 bytes @ 0x35
  2723  0055                     	ds	6
  2724  005B                     ??_xprintf:	
  2725                           
  2726                           ; 1 bytes @ 0x3B
  2727  005B                     	ds	1
  2728  005C                     xprintf@arp:	
  2729                           
  2730                           ; 1 bytes @ 0x3C
  2731  005C                     	ds	1
  2732  005D                     ??_main:	
  2733                           
  2734                           ; 1 bytes @ 0x3D
  2735  005D                     	ds	2
  2736                           
  2737                           	psect	maintext
  2738  0751                     __pmaintext:	
  2739 ;;
  2740 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2741 ;;
  2742 ;; *************** function _main *****************
  2743 ;; Defined at:
  2744 ;;		line 10 in file "main.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      char 
  2751 ;; Registers used:
  2752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : B1F/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2758 ;;      Params:         0       0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0
  2760 ;;      Temps:          0       2       0       0       0       0
  2761 ;;      Totals:         0       2       0       0       0       0
  2762 ;;Total ram usage:        2 bytes
  2763 ;; Hardware stack levels required when called:    9
  2764 ;; This function calls:
  2765 ;;		_Basic_Init
  2766 ;;		_Buzer_Init
  2767 ;;		_DAC_Initialize
  2768 ;;		_LCD_CursorPosition
  2769 ;;		_LCD_Init
  2770 ;;		_Timer1_Init
  2771 ;;		_xprintf
  2772 ;; This function is called by:
  2773 ;;		Startup code after reset
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           
  2778                           ;psect for function _main
  2779  0751                     _main:	
  2780                           
  2781                           ;main.c: 12: Basic_Init();
  2782                           
  2783                           ;incstack = 0
  2784                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2785  0751  318F  2739  3187   	fcall	_Basic_Init
  2786                           
  2787                           ;main.c: 14: LATA6 = 1;
  2788  0754  0022               	movlb	2	; select bank2
  2789  0755  170C               	bsf	12,6	;volatile
  2790                           
  2791                           ;main.c: 16: LCD_Init();
  2792  0756  3184  24C0  3187   	fcall	_LCD_Init
  2793                           
  2794                           ;main.c: 17: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  2795  0759  30D6               	movlw	low _LCD_Put
  2796  075A  0020               	movlb	0	; select bank0
  2797  075B  00E4               	movwf	_xfunc_out
  2798  075C  300E               	movlw	high _LCD_Put
  2799  075D  00E5               	movwf	_xfunc_out+1
  2800                           
  2801                           ;main.c: 19: Timer1_Init();
  2802  075E  318F  2763  3187   	fcall	_Timer1_Init
  2803                           
  2804                           ;main.c: 20: TMR1ON = 1;;
  2805  0761  0020               	movlb	0	; select bank0
  2806  0762  1418               	bsf	24,0	;volatile
  2807                           
  2808                           ;main.c: 22: Buzer_Init();
  2809  0763  318F  27B5  3187   	fcall	_Buzer_Init
  2810                           
  2811                           ;main.c: 24: DAC_Initialize();
  2812  0766  3187  27DF  3187   	fcall	_DAC_Initialize
  2813  0769                     l3725:	
  2814                           ;main.c: 26: while(1)
  2815                           
  2816                           
  2817                           ;main.c: 27: {
  2818                           ;main.c: 28: LATA6 ^= 1;
  2819  0769  0022               	movlb	2	; select bank2
  2820  076A  3040               	movlw	64
  2821  076B  068C               	xorwf	12,f
  2822                           
  2823                           ;main.c: 29: _delay((unsigned long)((500)*(32000000/4000.0)));
  2824  076C  3015               	movlw	21
  2825  076D  0020               	movlb	0	; select bank0
  2826  076E  00DE               	movwf	??_main+1
  2827  076F  304B               	movlw	75
  2828  0770  00DD               	movwf	??_main
  2829  0771  30BE               	movlw	190
  2830  0772                     u3807:	
  2831  0772  0B89               	decfsz	9,f
  2832  0773  2F72               	goto	u3807
  2833  0774  0BDD               	decfsz	??_main,f
  2834  0775  2F72               	goto	u3807
  2835  0776  0BDE               	decfsz	??_main+1,f
  2836  0777  2F72               	goto	u3807
  2837  0778  0000               	nop
  2838                           
  2839                           ;main.c: 31: LCD_CursorPosition(0,0);
  2840  0779  01F5               	clrf	LCD_CursorPosition@ty
  2841  077A  3000               	movlw	0
  2842  077B  318F  274E  3187   	fcall	_LCD_CursorPosition
  2843                           
  2844                           ;main.c: 32: xprintf("Hellow World");
  2845  077E  3089               	movlw	low (STR_1| (0+32768))
  2846  077F  0020               	movlb	0	; select bank0
  2847  0780  00D5               	movwf	xprintf@fmt
  2848  0781  3082               	movlw	high (STR_1| (0+32768))
  2849  0782  00D6               	movwf	xprintf@fmt+1
  2850  0783  318F  2716  3187   	fcall	_xprintf
  2851  0786  2F69               	goto	l3725
  2852  0787                     __end_of_main:	
  2853                           ;main.c: 33: }
  2854                           ;main.c: 35: return 0;
  2855                           ;	Return value of _main is never used
  2856                           
  2857                           
  2858                           	psect	text1
  2859  0F16                     __ptext1:	
  2860 ;; *************** function _xprintf *****************
  2861 ;; Defined at:
  2862 ;;		line 165 in file "xprintf.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  2865 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  2866 ;;		 -> STR_1(13), 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  arp             1   60[BANK0 ] PTR void [1]
  2869 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2879 ;;      Params:         0       6       0       0       0       0
  2880 ;;      Locals:         0       1       0       0       0       0
  2881 ;;      Temps:          0       1       0       0       0       0
  2882 ;;      Totals:         0       8       0       0       0       0
  2883 ;;Total ram usage:        8 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    8
  2886 ;; This function calls:
  2887 ;;		_xvprintf
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;;		_put_dump
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           
  2895                           ;psect for function _xprintf
  2896  0F16                     _xprintf:	
  2897                           
  2898                           ;xprintf.c: 170: va_list arp;
  2899                           ;xprintf.c: 173: *arp = __va_start();
  2900                           
  2901                           ;incstack = 0
  2902                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2903  0F16  3057               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  2904  0F17  0020               	movlb	0	; select bank0
  2905  0F18  00DB               	movwf	??_xprintf
  2906  0F19  085B               	movf	??_xprintf,w
  2907  0F1A  00DC               	movwf	xprintf@arp
  2908                           
  2909                           ;xprintf.c: 174: xvprintf(fmt, arp);
  2910  0F1B  0856               	movf	xprintf@fmt+1,w
  2911  0F1C  00A6               	movwf	xvprintf@fmt+1
  2912  0F1D  0855               	movf	xprintf@fmt,w
  2913  0F1E  00A5               	movwf	xvprintf@fmt
  2914  0F1F  305C               	movlw	(low (xprintf@arp| 0))& (0+255)
  2915  0F20  00DB               	movwf	??_xprintf
  2916  0F21  085B               	movf	??_xprintf,w
  2917  0F22  00A7               	movwf	xvprintf@arp
  2918  0F23  3180  2041         	fcall	_xvprintf
  2919  0F25  0008               	return
  2920  0F26                     __end_of_xprintf:	
  2921                           
  2922                           	psect	text2
  2923  0041                     __ptext2:	
  2924 ;; *************** function _xvprintf *****************
  2925 ;; Defined at:
  2926 ;;		line 88 in file "xprintf.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  fmt             2    5[BANK0 ] PTR const unsigned char 
  2929 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  2930 ;;		 -> STR_1(13), 
  2931 ;;  arp             1    7[BANK0 ] PTR PTR void 
  2932 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  s              16   12[BANK0 ] unsigned char [16]
  2935 ;;  v               4   43[BANK0 ] unsigned long 
  2936 ;;  i               2   49[BANK0 ] unsigned int 
  2937 ;;  f               2   47[BANK0 ] unsigned int 
  2938 ;;  j               2   41[BANK0 ] unsigned int 
  2939 ;;  w               2   39[BANK0 ] unsigned int 
  2940 ;;  r               2   37[BANK0 ] unsigned int 
  2941 ;;  c               1   52[BANK0 ] unsigned char 
  2942 ;;  d               1   51[BANK0 ] unsigned char 
  2943 ;;  p               1   36[BANK0 ] PTR unsigned char 
  2944 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2954 ;;      Params:         0       3       0       0       0       0
  2955 ;;      Locals:         0      41       0       0       0       0
  2956 ;;      Temps:          0       4       0       0       0       0
  2957 ;;      Totals:         0      48       0       0       0       0
  2958 ;;Total ram usage:       48 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    7
  2961 ;; This function calls:
  2962 ;;		___lldiv
  2963 ;;		___llmod
  2964 ;;		___wmul
  2965 ;;		_xputc
  2966 ;;		_xputs
  2967 ;; This function is called by:
  2968 ;;		_xprintf
  2969 ;;		_xsprintf
  2970 ;;		_xfprintf
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function _xvprintf
  2976  0041                     _xvprintf:	
  2977  0041                     l537:	
  2978                           ;incstack = 0
  2979                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2980                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  2981                           ;xprintf.c: 94: unsigned long v;
  2982                           ;xprintf.c: 95: char s[16], c, d, *p;
  2983                           ;xprintf.c: 98: for (;;) {
  2984                           
  2985                           
  2986                           ;xprintf.c: 99: c = *fmt++;
  2987  0041  0020               	movlb	0	; select bank0
  2988  0042  0825               	movf	xvprintf@fmt,w
  2989  0043  0084               	movwf	4
  2990  0044  0826               	movf	xvprintf@fmt+1,w
  2991  0045  0085               	movwf	5
  2992  0046  0800               	movf	0,w	;code access
  2993  0047  00A8               	movwf	??_xvprintf
  2994  0048  0828               	movf	??_xvprintf,w
  2995  0049  00D4               	movwf	xvprintf@c
  2996  004A  3001               	movlw	1
  2997  004B  07A5               	addwf	xvprintf@fmt,f
  2998  004C  3000               	movlw	0
  2999  004D  3DA6               	addwfc	xvprintf@fmt+1,f
  3000                           
  3001                           ;xprintf.c: 100: if (!c) break;
  3002  004E  0854               	movf	xvprintf@c,w
  3003  004F  1903               	btfsc	3,2
  3004  0050  0008               	return
  3005                           
  3006                           ;xprintf.c: 101: if (c != '%') {
  3007  0051  3025               	movlw	37
  3008  0052  0654               	xorwf	xvprintf@c,w
  3009  0053  1903               	btfsc	3,2
  3010  0054  285A               	goto	l3535
  3011                           
  3012                           ;xprintf.c: 102: xputc(c); continue;
  3013  0055  0854               	movf	xvprintf@c,w
  3014  0056  3187  2787  3180   	fcall	_xputc
  3015  0059  2841               	goto	l537
  3016  005A                     l3535:	
  3017                           
  3018                           ;xprintf.c: 103: }
  3019                           ;xprintf.c: 104: f = 0;
  3020  005A  0020               	movlb	0	; select bank0
  3021  005B  01CF               	clrf	xvprintf@f
  3022  005C  01D0               	clrf	xvprintf@f+1
  3023                           
  3024                           ;xprintf.c: 105: c = *fmt++;
  3025  005D  0825               	movf	xvprintf@fmt,w
  3026  005E  0084               	movwf	4
  3027  005F  0826               	movf	xvprintf@fmt+1,w
  3028  0060  0085               	movwf	5
  3029  0061  0800               	movf	0,w	;code access
  3030  0062  00A8               	movwf	??_xvprintf
  3031  0063  0828               	movf	??_xvprintf,w
  3032  0064  00D4               	movwf	xvprintf@c
  3033  0065  3001               	movlw	1
  3034  0066  07A5               	addwf	xvprintf@fmt,f
  3035  0067  3000               	movlw	0
  3036  0068  3DA6               	addwfc	xvprintf@fmt+1,f
  3037                           
  3038                           ;xprintf.c: 106: if (c == '0') {
  3039  0069  3030               	movlw	48
  3040  006A  0654               	xorwf	xvprintf@c,w
  3041  006B  1D03               	btfss	3,2
  3042  006C  286F               	goto	l3549
  3043                           
  3044                           ;xprintf.c: 107: f = 1; c = *fmt++;
  3045  006D  3001               	movlw	1
  3046  006E  2874               	goto	L6
  3047  006F                     l3549:	
  3048                           ;xprintf.c: 108: } else {
  3049                           
  3050                           
  3051                           ;xprintf.c: 109: if (c == '-') {
  3052  006F  302D               	movlw	45
  3053  0070  0654               	xorwf	xvprintf@c,w
  3054  0071  1D03               	btfss	3,2
  3055  0072  2883               	goto	l3557
  3056                           
  3057                           ;xprintf.c: 110: f = 2; c = *fmt++;
  3058  0073  3002               	movlw	2
  3059  0074                     L6:	
  3060  0074  00CF               	movwf	xvprintf@f
  3061  0075  3000               	movlw	0
  3062  0076  00D0               	movwf	xvprintf@f+1
  3063  0077  0825               	movf	xvprintf@fmt,w
  3064  0078  0084               	movwf	4
  3065  0079  0826               	movf	xvprintf@fmt+1,w
  3066  007A  0085               	movwf	5
  3067  007B  0800               	movf	0,w	;code access
  3068  007C  00A8               	movwf	??_xvprintf
  3069  007D  0828               	movf	??_xvprintf,w
  3070  007E  00D4               	movwf	xvprintf@c
  3071  007F  3001               	movlw	1
  3072  0080  07A5               	addwf	xvprintf@fmt,f
  3073  0081  3000               	movlw	0
  3074  0082  3DA6               	addwfc	xvprintf@fmt+1,f
  3075  0083                     l3557:	
  3076                           
  3077                           ;xprintf.c: 111: }
  3078                           ;xprintf.c: 112: }
  3079                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  3080  0083  01C7               	clrf	xvprintf@w
  3081  0084  01C8               	clrf	xvprintf@w+1
  3082  0085  28AD               	goto	l3565
  3083  0086                     l3559:	
  3084                           
  3085                           ;xprintf.c: 114: w = w * 10 + c - '0';
  3086  0086  0854               	movf	xvprintf@c,w
  3087  0087  00A8               	movwf	??_xvprintf
  3088  0088  01A9               	clrf	??_xvprintf+1
  3089  0089  0848               	movf	xvprintf@w+1,w
  3090  008A  00F3               	movwf	___wmul@multiplier+1
  3091  008B  0847               	movf	xvprintf@w,w
  3092  008C  00F2               	movwf	___wmul@multiplier
  3093  008D  300A               	movlw	10
  3094  008E  00F4               	movwf	___wmul@multiplicand
  3095  008F  3000               	movlw	0
  3096  0090  00F5               	movwf	___wmul@multiplicand+1
  3097  0091  318F  277C  3180   	fcall	___wmul
  3098  0094  0020               	movlb	0	; select bank0
  3099  0095  0828               	movf	??_xvprintf,w
  3100  0096  0772               	addwf	?___wmul,w
  3101  0097  00AA               	movwf	??_xvprintf+2
  3102  0098  0829               	movf	??_xvprintf+1,w
  3103  0099  3D73               	addwfc	?___wmul+1,w
  3104  009A  00AB               	movwf	??_xvprintf+3
  3105  009B  082A               	movf	??_xvprintf+2,w
  3106  009C  3ED0               	addlw	208
  3107  009D  00C7               	movwf	xvprintf@w
  3108  009E  30FF               	movlw	255
  3109  009F  3D2B               	addwfc	??_xvprintf+3,w
  3110  00A0  00C8               	movwf	xvprintf@w+1
  3111  00A1  0825               	movf	xvprintf@fmt,w
  3112  00A2  0084               	movwf	4
  3113  00A3  0826               	movf	xvprintf@fmt+1,w
  3114  00A4  0085               	movwf	5
  3115  00A5  0800               	movf	0,w	;code access
  3116  00A6  00A8               	movwf	??_xvprintf
  3117  00A7  0828               	movf	??_xvprintf,w
  3118  00A8  00D4               	movwf	xvprintf@c
  3119  00A9  3001               	movlw	1
  3120  00AA  07A5               	addwf	xvprintf@fmt,f
  3121  00AB  3000               	movlw	0
  3122  00AC  3DA6               	addwfc	xvprintf@fmt+1,f
  3123  00AD                     l3565:	
  3124  00AD  3030               	movlw	48
  3125  00AE  0254               	subwf	xvprintf@c,w
  3126  00AF  1C03               	skipc
  3127  00B0  28B5               	goto	l3569
  3128  00B1  303A               	movlw	58
  3129  00B2  0254               	subwf	xvprintf@c,w
  3130  00B3  1C03               	skipc
  3131  00B4  2886               	goto	l3559
  3132  00B5                     l3569:	
  3133                           
  3134                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  3135  00B5  306C               	movlw	108
  3136  00B6  0654               	xorwf	xvprintf@c,w
  3137  00B7  1903               	btfsc	3,2
  3138  00B8  28BD               	goto	l552
  3139  00B9  304C               	movlw	76
  3140  00BA  0654               	xorwf	xvprintf@c,w
  3141  00BB  1D03               	btfss	3,2
  3142  00BC  28CA               	goto	l3577
  3143  00BD                     l552:	
  3144                           
  3145                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  3146  00BD  154F               	bsf	xvprintf@f,2
  3147  00BE  0825               	movf	xvprintf@fmt,w
  3148  00BF  0084               	movwf	4
  3149  00C0  0826               	movf	xvprintf@fmt+1,w
  3150  00C1  0085               	movwf	5
  3151  00C2  0800               	movf	0,w	;code access
  3152  00C3  00A8               	movwf	??_xvprintf
  3153  00C4  0828               	movf	??_xvprintf,w
  3154  00C5  00D4               	movwf	xvprintf@c
  3155  00C6  3001               	movlw	1
  3156  00C7  07A5               	addwf	xvprintf@fmt,f
  3157  00C8  3000               	movlw	0
  3158  00C9  3DA6               	addwfc	xvprintf@fmt+1,f
  3159  00CA                     l3577:	
  3160                           
  3161                           ;xprintf.c: 117: }
  3162                           ;xprintf.c: 118: if (!c) break;
  3163  00CA  0854               	movf	xvprintf@c,w
  3164  00CB  1903               	btfsc	3,2
  3165  00CC  0008               	return
  3166                           
  3167                           ;xprintf.c: 119: d = c;
  3168  00CD  0854               	movf	xvprintf@c,w
  3169  00CE  00A8               	movwf	??_xvprintf
  3170  00CF  0828               	movf	??_xvprintf,w
  3171  00D0  00D3               	movwf	xvprintf@d
  3172                           
  3173                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  3174  00D1  3061               	movlw	97
  3175  00D2  0253               	subwf	xvprintf@d,w
  3176  00D3  1C03               	skipc
  3177  00D4  2940               	goto	l3619
  3178  00D5  3020               	movlw	32
  3179  00D6  02D3               	subwf	xvprintf@d,f
  3180                           
  3181                           ;xprintf.c: 121: switch (d) {
  3182  00D7  2940               	goto	l3619
  3183  00D8                     l3585:	
  3184                           ;xprintf.c: 122: case 'S' :
  3185                           
  3186                           
  3187                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  3188  00D8  0827               	movf	xvprintf@arp,w
  3189  00D9  0086               	movwf	6
  3190  00DA  0187               	clrf	7
  3191  00DB  3F40               	moviw [0]fsr1
  3192  00DC  0084               	movwf	4
  3193  00DD  0185               	clrf	5
  3194  00DE  0A81               	incf	1,f
  3195  00DF  0800               	movf	0,w
  3196  00E0  00A8               	movwf	??_xvprintf
  3197  00E1  0828               	movf	??_xvprintf,w
  3198  00E2  00C4               	movwf	xvprintf@p
  3199                           
  3200                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  3201  00E3  01C9               	clrf	xvprintf@j
  3202  00E4  01CA               	clrf	xvprintf@j+1
  3203  00E5                     l3591:	
  3204  00E5  0849               	movf	xvprintf@j,w
  3205  00E6  0744               	addwf	xvprintf@p,w
  3206  00E7  00A8               	movwf	??_xvprintf
  3207  00E8  0828               	movf	??_xvprintf,w
  3208  00E9  0086               	movwf	6
  3209  00EA  0187               	clrf	7
  3210  00EB  0801               	movf	1,w
  3211  00EC  1903               	btfsc	3,2
  3212  00ED  28F7               	goto	l3595
  3213  00EE  3001               	movlw	1
  3214  00EF  07C9               	addwf	xvprintf@j,f
  3215  00F0  3000               	movlw	0
  3216  00F1  3DCA               	addwfc	xvprintf@j+1,f
  3217  00F2  28E5               	goto	l3591
  3218  00F3                     l3593:	
  3219                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  3220                           
  3221  00F3  3020               	movlw	32
  3222  00F4  3187  2787  3180   	fcall	_xputc
  3223  00F7                     l3595:	
  3224  00F7  0020               	movlb	0	; select bank0
  3225  00F8  18CF               	btfsc	xvprintf@f,1
  3226  00F9  2909               	goto	l3599
  3227  00FA  084A               	movf	xvprintf@j+1,w
  3228  00FB  00A9               	movwf	??_xvprintf+1
  3229  00FC  0849               	movf	xvprintf@j,w
  3230  00FD  00A8               	movwf	??_xvprintf
  3231  00FE  0AC9               	incf	xvprintf@j,f
  3232  00FF  1903               	skipnz
  3233  0100  0ACA               	incf	xvprintf@j+1,f
  3234  0101  0848               	movf	xvprintf@w+1,w
  3235  0102  0229               	subwf	??_xvprintf+1,w
  3236  0103  1D03               	skipz
  3237  0104  2907               	goto	u3585
  3238  0105  0847               	movf	xvprintf@w,w
  3239  0106  0228               	subwf	??_xvprintf,w
  3240  0107                     u3585:	
  3241  0107  1C03               	skipc
  3242  0108  28F3               	goto	l3593
  3243  0109                     l3599:	
  3244                           
  3245                           ;xprintf.c: 126: xputs(p);
  3246  0109  0844               	movf	xvprintf@p,w
  3247  010A  318F  2726  3180   	fcall	_xputs
  3248  010D                     l3603:	
  3249                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  3250                           
  3251  010D  0020               	movlb	0	; select bank0
  3252  010E  084A               	movf	xvprintf@j+1,w
  3253  010F  00A9               	movwf	??_xvprintf+1
  3254  0110  0849               	movf	xvprintf@j,w
  3255  0111  00A8               	movwf	??_xvprintf
  3256  0112  0AC9               	incf	xvprintf@j,f
  3257  0113  1903               	skipnz
  3258  0114  0ACA               	incf	xvprintf@j+1,f
  3259  0115  0848               	movf	xvprintf@w+1,w
  3260  0116  0229               	subwf	??_xvprintf+1,w
  3261  0117  1D03               	skipz
  3262  0118  291B               	goto	u3595
  3263  0119  0847               	movf	xvprintf@w,w
  3264  011A  0228               	subwf	??_xvprintf,w
  3265  011B                     u3595:	
  3266  011B  1803               	btfsc	3,0
  3267  011C  2841               	goto	l537
  3268  011D  3020               	movlw	32
  3269  011E  3187  2787  3180   	fcall	_xputc
  3270  0121  290D               	goto	l3603
  3271  0122                     l3605:	
  3272                           ;xprintf.c: 129: case 'C' :
  3273                           
  3274                           ;xprintf.c: 128: continue;
  3275                           
  3276                           
  3277                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  3278  0122  0827               	movf	xvprintf@arp,w
  3279  0123  0086               	movwf	6
  3280  0124  0187               	clrf	7
  3281  0125  0801               	movf	1,w
  3282  0126  0084               	movwf	4
  3283  0127  0185               	clrf	5
  3284  0128  3002               	movlw	2
  3285  0129  0781               	addwf	1,f
  3286  012A  0800               	movf	0,w
  3287  012B  3187  2787  3180   	fcall	_xputc
  3288  012E  2841               	goto	l537
  3289  012F                     l3607:	
  3290                           ;xprintf.c: 131: case 'B' :
  3291                           
  3292                           
  3293                           ;xprintf.c: 132: r = 2; break;
  3294  012F  3002               	movlw	2
  3295  0130  0020               	movlb	0	; select bank0
  3296  0131  2937               	goto	L3
  3297  0132                     l3609:	
  3298                           ;xprintf.c: 133: case 'O' :
  3299                           
  3300                           
  3301                           ;xprintf.c: 134: r = 8; break;
  3302  0132  3008               	movlw	8
  3303  0133  2937               	goto	L3
  3304  0134                     l3611:	
  3305                           ;xprintf.c: 135: case 'D' :
  3306                           
  3307                           
  3308                           ;xprintf.c: 136: case 'U' :
  3309                           ;xprintf.c: 137: r = 10; break;
  3310  0134  300A               	movlw	10
  3311  0135  2937               	goto	L3
  3312  0136                     l3613:	
  3313                           ;xprintf.c: 138: case 'X' :
  3314                           
  3315                           
  3316                           ;xprintf.c: 139: r = 16; break;
  3317  0136  3010               	movlw	16
  3318  0137                     L3:	
  3319  0137  00C5               	movwf	xvprintf@r
  3320  0138  3000               	movlw	0
  3321  0139  00C6               	movwf	xvprintf@r+1
  3322  013A  2958               	goto	l570
  3323  013B                     l3615:	
  3324                           ;xprintf.c: 140: default:
  3325                           
  3326                           
  3327                           ;xprintf.c: 141: xputc(c); continue;
  3328  013B  0854               	movf	xvprintf@c,w
  3329  013C  3187  2787  3180   	fcall	_xputc
  3330  013F  2841               	goto	l537
  3331  0140                     l3619:	
  3332                           ;xprintf.c: 142: }
  3333                           
  3334  0140  0020               	movlb	0	; select bank0
  3335  0141  0853               	movf	xvprintf@d,w
  3336                           
  3337                           ; Switch size 1, requested type "space"
  3338                           ; Number of cases is 7, Range of values is 66 to 88
  3339                           ; switch strategies available:
  3340                           ; Name         Instructions Cycles
  3341                           ; simple_byte           22    12 (average)
  3342                           ; direct_byte           55     9 (fixed)
  3343                           ; jumptable            263     9 (fixed)
  3344                           ;	Chosen strategy is simple_byte
  3345  0142  3A42               	xorlw	66	; case 66
  3346  0143  1903               	skipnz
  3347  0144  292F               	goto	l3607
  3348  0145  3A01               	xorlw	1	; case 67
  3349  0146  1903               	skipnz
  3350  0147  2922               	goto	l3605
  3351  0148  3A07               	xorlw	7	; case 68
  3352  0149  1903               	skipnz
  3353  014A  2934               	goto	l3611
  3354  014B  3A0B               	xorlw	11	; case 79
  3355  014C  1903               	skipnz
  3356  014D  2932               	goto	l3609
  3357  014E  3A1C               	xorlw	28	; case 83
  3358  014F  1903               	skipnz
  3359  0150  28D8               	goto	l3585
  3360  0151  3A06               	xorlw	6	; case 85
  3361  0152  1903               	skipnz
  3362  0153  2934               	goto	l3611
  3363  0154  3A0D               	xorlw	13	; case 88
  3364  0155  1903               	skipnz
  3365  0156  2936               	goto	l3613
  3366  0157  293B               	goto	l3615
  3367  0158                     l570:	
  3368                           
  3369                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  3370  0158  0020               	movlb	0	; select bank0
  3371  0159  194F               	btfsc	xvprintf@f,2
  3372  015A  2990               	goto	l3629
  3373  015B  3044               	movlw	68
  3374  015C  0653               	xorwf	xvprintf@d,w
  3375  015D  1903               	btfsc	3,2
  3376  015E  2972               	goto	l3625
  3377  015F  0827               	movf	xvprintf@arp,w
  3378  0160  0086               	movwf	6
  3379  0161  0187               	clrf	7
  3380  0162  0801               	movf	1,w
  3381  0163  0084               	movwf	4
  3382  0164  0185               	clrf	5
  3383  0165  3002               	movlw	2
  3384  0166  0781               	addwf	1,f
  3385  0167  3F00               	moviw [0]fsr0
  3386  0168  00A8               	movwf	??_xvprintf
  3387  0169  3F01               	moviw [1]fsr0
  3388  016A  00A9               	movwf	??_xvprintf+1
  3389  016B  0828               	movf	??_xvprintf,w
  3390  016C  00BC               	movwf	_xvprintf$625
  3391  016D  0829               	movf	??_xvprintf+1,w
  3392  016E  00BD               	movwf	_xvprintf$625+1
  3393  016F  01BE               	clrf	_xvprintf$625+2
  3394  0170  01BF               	clrf	_xvprintf$625+3
  3395  0171  2987               	goto	l3627
  3396  0172                     l3625:	
  3397  0172  0827               	movf	xvprintf@arp,w
  3398  0173  0086               	movwf	6
  3399  0174  0187               	clrf	7
  3400  0175  0801               	movf	1,w
  3401  0176  0084               	movwf	4
  3402  0177  0185               	clrf	5
  3403  0178  3002               	movlw	2
  3404  0179  0781               	addwf	1,f
  3405  017A  3F00               	moviw [0]fsr0
  3406  017B  00A8               	movwf	??_xvprintf
  3407  017C  3F01               	moviw [1]fsr0
  3408  017D  00A9               	movwf	??_xvprintf+1
  3409  017E  0828               	movf	??_xvprintf,w
  3410  017F  00BC               	movwf	_xvprintf$625
  3411  0180  0829               	movf	??_xvprintf+1,w
  3412  0181  00BD               	movwf	_xvprintf$625+1
  3413  0182  0D89               	rlf	9,f
  3414  0183  3B89               	subwfb	9,f
  3415  0184  0989               	comf	9,f
  3416  0185  00BE               	movwf	_xvprintf$625+2
  3417  0186  00BF               	movwf	_xvprintf$625+3
  3418  0187                     l3627:	
  3419  0187  083F               	movf	_xvprintf$625+3,w
  3420  0188  00CE               	movwf	xvprintf@v+3
  3421  0189  083E               	movf	_xvprintf$625+2,w
  3422  018A  00CD               	movwf	xvprintf@v+2
  3423  018B  083D               	movf	_xvprintf$625+1,w
  3424  018C  00CC               	movwf	xvprintf@v+1
  3425  018D  083C               	movf	_xvprintf$625,w
  3426  018E  00CB               	movwf	xvprintf@v
  3427  018F  29A0               	goto	l3631
  3428  0190                     l3629:	
  3429  0190  0827               	movf	xvprintf@arp,w
  3430  0191  0086               	movwf	6
  3431  0192  0187               	clrf	7
  3432  0193  0801               	movf	1,w
  3433  0194  0084               	movwf	4
  3434  0195  0185               	clrf	5
  3435  0196  3004               	movlw	4
  3436  0197  0781               	addwf	1,f
  3437  0198  3F00               	moviw [0]fsr0
  3438  0199  00CB               	movwf	xvprintf@v
  3439  019A  3F01               	moviw [1]fsr0
  3440  019B  00CC               	movwf	xvprintf@v+1
  3441  019C  3F02               	moviw [2]fsr0
  3442  019D  00CD               	movwf	xvprintf@v+2
  3443  019E  3F03               	moviw [3]fsr0
  3444  019F  00CE               	movwf	xvprintf@v+3
  3445  01A0                     l3631:	
  3446                           
  3447                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  3448  01A0  3044               	movlw	68
  3449  01A1  0653               	xorwf	xvprintf@d,w
  3450  01A2  1903               	btfsc	3,2
  3451  01A3  1FCE               	btfss	xvprintf@v+3,7
  3452  01A4  29B1               	goto	l3637
  3453                           
  3454                           ;xprintf.c: 147: v = 0 - v;
  3455  01A5  09CB               	comf	xvprintf@v,f
  3456  01A6  09CC               	comf	xvprintf@v+1,f
  3457  01A7  09CD               	comf	xvprintf@v+2,f
  3458  01A8  09CE               	comf	xvprintf@v+3,f
  3459  01A9  0ACB               	incf	xvprintf@v,f
  3460  01AA  1903               	skipnz
  3461  01AB  0ACC               	incf	xvprintf@v+1,f
  3462  01AC  1903               	skipnz
  3463  01AD  0ACD               	incf	xvprintf@v+2,f
  3464  01AE  1903               	skipnz
  3465  01AF  0ACE               	incf	xvprintf@v+3,f
  3466                           
  3467                           ;xprintf.c: 148: f |= 8;
  3468  01B0  15CF               	bsf	xvprintf@f,3
  3469  01B1                     l3637:	
  3470                           
  3471                           ;xprintf.c: 149: }
  3472                           ;xprintf.c: 150: i = 0;
  3473  01B1  01D1               	clrf	xvprintf@i
  3474  01B2  01D2               	clrf	xvprintf@i+1
  3475  01B3                     l3639:	
  3476                           ;xprintf.c: 151: do {
  3477                           
  3478                           
  3479                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  3480  01B3  0845               	movf	xvprintf@r,w
  3481  01B4  00F2               	movwf	___llmod@divisor
  3482  01B5  0846               	movf	xvprintf@r+1,w
  3483  01B6  00F3               	movwf	___llmod@divisor+1
  3484  01B7  01F4               	clrf	___llmod@divisor+2
  3485  01B8  01F5               	clrf	___llmod@divisor+3
  3486  01B9  084E               	movf	xvprintf@v+3,w
  3487  01BA  00F9               	movwf	___llmod@dividend+3
  3488  01BB  084D               	movf	xvprintf@v+2,w
  3489  01BC  00F8               	movwf	___llmod@dividend+2
  3490  01BD  084C               	movf	xvprintf@v+1,w
  3491  01BE  00F7               	movwf	___llmod@dividend+1
  3492  01BF  084B               	movf	xvprintf@v,w
  3493  01C0  00F6               	movwf	___llmod@dividend
  3494  01C1  3186  2626  3180   	fcall	___llmod
  3495  01C4  0872               	movf	?___llmod,w
  3496  01C5  0020               	movlb	0	; select bank0
  3497  01C6  00A8               	movwf	??_xvprintf
  3498  01C7  0828               	movf	??_xvprintf,w
  3499  01C8  00D3               	movwf	xvprintf@d
  3500  01C9  0845               	movf	xvprintf@r,w
  3501  01CA  00F2               	movwf	___lldiv@divisor
  3502  01CB  0846               	movf	xvprintf@r+1,w
  3503  01CC  00F3               	movwf	___lldiv@divisor+1
  3504  01CD  01F4               	clrf	___lldiv@divisor+2
  3505  01CE  01F5               	clrf	___lldiv@divisor+3
  3506  01CF  084E               	movf	xvprintf@v+3,w
  3507  01D0  00F9               	movwf	___lldiv@dividend+3
  3508  01D1  084D               	movf	xvprintf@v+2,w
  3509  01D2  00F8               	movwf	___lldiv@dividend+2
  3510  01D3  084C               	movf	xvprintf@v+1,w
  3511  01D4  00F7               	movwf	___lldiv@dividend+1
  3512  01D5  084B               	movf	xvprintf@v,w
  3513  01D6  00F6               	movwf	___lldiv@dividend
  3514  01D7  3185  25D3  3180   	fcall	___lldiv
  3515  01DA  0875               	movf	?___lldiv+3,w
  3516  01DB  0020               	movlb	0	; select bank0
  3517  01DC  00CE               	movwf	xvprintf@v+3
  3518  01DD  0874               	movf	?___lldiv+2,w
  3519  01DE  00CD               	movwf	xvprintf@v+2
  3520  01DF  0873               	movf	?___lldiv+1,w
  3521  01E0  00CC               	movwf	xvprintf@v+1
  3522  01E1  0872               	movf	?___lldiv,w
  3523  01E2  00CB               	movwf	xvprintf@v
  3524                           
  3525                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  3526  01E3  300A               	movlw	10
  3527  01E4  0253               	subwf	xvprintf@d,w
  3528  01E5  1C03               	skipc
  3529  01E6  29F5               	goto	l3653
  3530  01E7  3078               	movlw	120
  3531  01E8  0654               	xorwf	xvprintf@c,w
  3532  01E9  1903               	btfsc	3,2
  3533  01EA  29ED               	goto	l3649
  3534  01EB  3007               	movlw	7
  3535  01EC  29EE               	goto	L4
  3536  01ED                     l3649:	
  3537  01ED  3027               	movlw	39
  3538  01EE                     L4:	
  3539  01EE  00C0               	movwf	_xvprintf$626
  3540  01EF  3000               	movlw	0
  3541  01F0  00C1               	movwf	_xvprintf$626+1
  3542  01F1  0840               	movf	_xvprintf$626,w
  3543  01F2  00A8               	movwf	??_xvprintf
  3544  01F3  0828               	movf	??_xvprintf,w
  3545  01F4  07D3               	addwf	xvprintf@d,f
  3546  01F5                     l3653:	
  3547                           
  3548                           ;xprintf.c: 154: s[i++] = d + '0';
  3549  01F5  0853               	movf	xvprintf@d,w
  3550  01F6  3E30               	addlw	48
  3551  01F7  00A8               	movwf	??_xvprintf
  3552  01F8  0851               	movf	xvprintf@i,w
  3553  01F9  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  3554  01FA  0086               	movwf	6
  3555  01FB  0187               	clrf	7
  3556  01FC  0828               	movf	??_xvprintf,w
  3557  01FD  0081               	movwf	1
  3558  01FE  3001               	movlw	1
  3559  01FF  07D1               	addwf	xvprintf@i,f
  3560  0200  3000               	movlw	0
  3561  0201  3DD2               	addwfc	xvprintf@i+1,f
  3562                           
  3563                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  3564  0202  084E               	movf	xvprintf@v+3,w
  3565  0203  044D               	iorwf	xvprintf@v+2,w
  3566  0204  044C               	iorwf	xvprintf@v+1,w
  3567  0205  044B               	iorwf	xvprintf@v,w
  3568  0206  1903               	skipnz
  3569  0207  2A0F               	goto	l593
  3570  0208  3000               	movlw	0
  3571  0209  0252               	subwf	xvprintf@i+1,w
  3572  020A  3010               	movlw	16
  3573  020B  1903               	skipnz
  3574  020C  0251               	subwf	xvprintf@i,w
  3575  020D  1C03               	skipc
  3576  020E  29B3               	goto	l3639
  3577  020F                     l593:	
  3578                           
  3579                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  3580  020F  1DCF               	btfss	xvprintf@f,3
  3581  0210  2A1D               	goto	l3665
  3582  0211  302D               	movlw	45
  3583  0212  00A8               	movwf	??_xvprintf
  3584  0213  0851               	movf	xvprintf@i,w
  3585  0214  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  3586  0215  0086               	movwf	6
  3587  0216  0187               	clrf	7
  3588  0217  0828               	movf	??_xvprintf,w
  3589  0218  0081               	movwf	1
  3590  0219  3001               	movlw	1
  3591  021A  07D1               	addwf	xvprintf@i,f
  3592  021B  3000               	movlw	0
  3593  021C  3DD2               	addwfc	xvprintf@i+1,f
  3594  021D                     l3665:	
  3595                           
  3596                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  3597  021D  0852               	movf	xvprintf@i+1,w
  3598  021E  00CA               	movwf	xvprintf@j+1
  3599  021F  0851               	movf	xvprintf@i,w
  3600  0220  00C9               	movwf	xvprintf@j
  3601  0221  184F               	btfsc	xvprintf@f,0
  3602  0222  2A25               	goto	l3671
  3603  0223  3020               	movlw	32
  3604  0224  2A26               	goto	L5
  3605  0225                     l3671:	
  3606  0225  3030               	movlw	48
  3607  0226                     L5:	
  3608  0226  00C2               	movwf	_xvprintf$627
  3609  0227  3000               	movlw	0
  3610  0228  00C3               	movwf	_xvprintf$627+1
  3611  0229  0842               	movf	_xvprintf$627,w
  3612  022A  00A8               	movwf	??_xvprintf
  3613  022B  0828               	movf	??_xvprintf,w
  3614  022C  00D3               	movwf	xvprintf@d
  3615                           
  3616                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  3617  022D  2A32               	goto	l3675
  3618  022E                     l3673:	
  3619  022E  0853               	movf	xvprintf@d,w
  3620  022F  3187  2787  3180   	fcall	_xputc
  3621  0232                     l3675:	
  3622  0232  0020               	movlb	0	; select bank0
  3623  0233  18CF               	btfsc	xvprintf@f,1
  3624  0234  2A44               	goto	l3679
  3625  0235  084A               	movf	xvprintf@j+1,w
  3626  0236  00A9               	movwf	??_xvprintf+1
  3627  0237  0849               	movf	xvprintf@j,w
  3628  0238  00A8               	movwf	??_xvprintf
  3629  0239  0AC9               	incf	xvprintf@j,f
  3630  023A  1903               	skipnz
  3631  023B  0ACA               	incf	xvprintf@j+1,f
  3632  023C  0848               	movf	xvprintf@w+1,w
  3633  023D  0229               	subwf	??_xvprintf+1,w
  3634  023E  1D03               	skipz
  3635  023F  2A42               	goto	u3715
  3636  0240  0847               	movf	xvprintf@w,w
  3637  0241  0228               	subwf	??_xvprintf,w
  3638  0242                     u3715:	
  3639  0242  1C03               	skipc
  3640  0243  2A2E               	goto	l3673
  3641  0244                     l3679:	
  3642                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  3643                           
  3644  0244  3001               	movlw	1
  3645  0245  02D1               	subwf	xvprintf@i,f
  3646  0246  3000               	movlw	0
  3647  0247  3BD2               	subwfb	xvprintf@i+1,f
  3648  0248  0851               	movf	xvprintf@i,w
  3649  0249  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  3650  024A  0086               	movwf	6
  3651  024B  0187               	clrf	7
  3652  024C  0801               	movf	1,w
  3653  024D  3187  2787  3180   	fcall	_xputc
  3654  0250  0020               	movlb	0	; select bank0
  3655  0251  0851               	movf	xvprintf@i,w
  3656  0252  0452               	iorwf	xvprintf@i+1,w
  3657  0253  1903               	btfsc	3,2
  3658  0254  2A5A               	goto	l3685
  3659  0255  2A44               	goto	l3679
  3660  0256                     l3683:	
  3661                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  3662                           
  3663  0256  3020               	movlw	32
  3664  0257  3187  2787  3180   	fcall	_xputc
  3665  025A                     l3685:	
  3666  025A  0020               	movlb	0	; select bank0
  3667  025B  084A               	movf	xvprintf@j+1,w
  3668  025C  00A9               	movwf	??_xvprintf+1
  3669  025D  0849               	movf	xvprintf@j,w
  3670  025E  00A8               	movwf	??_xvprintf
  3671  025F  0AC9               	incf	xvprintf@j,f
  3672  0260  1903               	skipnz
  3673  0261  0ACA               	incf	xvprintf@j+1,f
  3674  0262  0848               	movf	xvprintf@w+1,w
  3675  0263  0229               	subwf	??_xvprintf+1,w
  3676  0264  1D03               	skipz
  3677  0265  2A68               	goto	u3735
  3678  0266  0847               	movf	xvprintf@w,w
  3679  0267  0228               	subwf	??_xvprintf,w
  3680  0268                     u3735:	
  3681  0268  1803               	btfsc	3,0
  3682  0269  2841               	goto	l537
  3683  026A  2A56               	goto	l3683
  3684  026B                     __end_of_xvprintf:	
  3685                           ;xprintf.c: 161: }
  3686                           
  3687                           
  3688                           	psect	text3
  3689  0F26                     __ptext3:	
  3690 ;; *************** function _xputs *****************
  3691 ;; Defined at:
  3692 ;;		line 44 in file "xprintf.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  str             1    wreg     PTR const unsigned char 
  3695 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  str             1    9[COMMON] PTR const unsigned char 
  3698 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3708 ;;      Params:         0       0       0       0       0       0
  3709 ;;      Locals:         1       0       0       0       0       0
  3710 ;;      Temps:          1       0       0       0       0       0
  3711 ;;      Totals:         2       0       0       0       0       0
  3712 ;;Total ram usage:        2 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    6
  3715 ;; This function calls:
  3716 ;;		_xputc
  3717 ;; This function is called by:
  3718 ;;		_xvprintf
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function _xputs
  3724  0F26                     _xputs:	
  3725                           
  3726                           ;incstack = 0
  3727                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3728                           ;xputs@str stored from wreg
  3729  0F26  00F9               	movwf	xputs@str
  3730  0F27                     l2533:	
  3731                           ;xprintf.c: 48: while (*str)
  3732                           
  3733  0F27  0879               	movf	xputs@str,w
  3734  0F28  0086               	movwf	6
  3735  0F29  0187               	clrf	7
  3736  0F2A  0801               	movf	1,w
  3737  0F2B  1903               	btfsc	3,2
  3738  0F2C  0008               	return
  3739                           
  3740                           ;xprintf.c: 49: xputc(*str++);
  3741  0F2D  0879               	movf	xputs@str,w
  3742  0F2E  0086               	movwf	6
  3743  0F2F  0187               	clrf	7
  3744  0F30  0801               	movf	1,w
  3745  0F31  3187  2787  318F   	fcall	_xputc
  3746  0F34  3001               	movlw	1
  3747  0F35  00F8               	movwf	??_xputs
  3748  0F36  0878               	movf	??_xputs,w
  3749  0F37  07F9               	addwf	xputs@str,f
  3750  0F38  2F27               	goto	l2533
  3751  0F39                     __end_of_xputs:	
  3752                           
  3753                           	psect	text4
  3754  0787                     __ptext4:	
  3755 ;; *************** function _xputc *****************
  3756 ;; Defined at:
  3757 ;;		line 26 in file "xprintf.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  c               1    wreg     unsigned char 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  c               1    7[COMMON] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3771 ;;      Params:         0       0       0       0       0       0
  3772 ;;      Locals:         1       0       0       0       0       0
  3773 ;;      Temps:          1       0       0       0       0       0
  3774 ;;      Totals:         2       0       0       0       0       0
  3775 ;;Total ram usage:        2 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    5
  3778 ;; This function calls:
  3779 ;;		Absolute function
  3780 ;;		_LCD_Put
  3781 ;; This function is called by:
  3782 ;;		_xputs
  3783 ;;		_xvprintf
  3784 ;;		_xfputs
  3785 ;;		_put_dump
  3786 ;;		_xgets
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function _xputc
  3792  0787                     _xputc:	
  3793                           
  3794                           ;incstack = 0
  3795                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3796                           ;xputc@c stored from wreg
  3797  0787  00F7               	movwf	xputc@c
  3798  0788  300A               	movlw	10
  3799  0789  0677               	xorwf	xputc@c,w
  3800  078A  1D03               	btfss	3,2
  3801  078B  2F96               	goto	l2343
  3802  078C  30C1               	movlw	(low (STR_2| (0+32768)))& (0+255)
  3803  078D  00F6               	movwf	??_xputc
  3804  078E  0876               	movf	??_xputc,w
  3805  078F  00F5               	movwf	LCD_Put@word
  3806  0790  0020               	movlb	0	; select bank0
  3807  0791  0865               	movf	_xfunc_out+1,w
  3808  0792  008A               	movwf	10
  3809  0793  0864               	movf	_xfunc_out,w
  3810  0794  000A               	callw
  3811  0795  3187               	pagesel	$
  3812  0796                     l2343:	
  3813                           
  3814                           ;xprintf.c: 30: if (outptr) {
  3815  0796  087B               	movf	_outptr,w
  3816  0797  1903               	btfsc	3,2
  3817  0798  2FA5               	goto	l2351
  3818                           
  3819                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  3820  0799  0877               	movf	xputc@c,w
  3821  079A  00F6               	movwf	??_xputc
  3822  079B  087B               	movf	_outptr,w
  3823  079C  0086               	movwf	6
  3824  079D  0187               	clrf	7
  3825  079E  0876               	movf	??_xputc,w
  3826  079F  0081               	movwf	1
  3827  07A0  3001               	movlw	1
  3828  07A1  00F6               	movwf	??_xputc
  3829  07A2  0876               	movf	??_xputc,w
  3830  07A3  07FB               	addwf	_outptr,f
  3831                           
  3832                           ;xprintf.c: 32: return;
  3833  07A4  0008               	return
  3834  07A5                     l2351:	
  3835                           
  3836                           ;xprintf.c: 33: }
  3837                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  3838  07A5  0020               	movlb	0	; select bank0
  3839  07A6  0864               	movf	_xfunc_out,w
  3840  07A7  0465               	iorwf	_xfunc_out+1,w
  3841  07A8  1903               	btfsc	3,2
  3842  07A9  0008               	return
  3843  07AA  0877               	movf	xputc@c,w
  3844  07AB  00F6               	movwf	??_xputc
  3845  07AC  0876               	movf	??_xputc,w
  3846  07AD  00F5               	movwf	LCD_Put@word
  3847  07AE  0865               	movf	_xfunc_out+1,w
  3848  07AF  008A               	movwf	10
  3849  07B0  0864               	movf	_xfunc_out,w
  3850  07B1  000A               	callw
  3851  07B2  3187               	pagesel	$
  3852  07B3  0008               	return
  3853  07B4                     __end_of_xputc:	
  3854                           
  3855                           	psect	text5
  3856  0ED6                     __ptext5:	
  3857 ;; *************** function _LCD_Put *****************
  3858 ;; Defined at:
  3859 ;;		line 54 in file "LCD.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  word            1    5[COMMON] char 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0, pclath, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3873 ;;      Params:         1       0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0
  3876 ;;      Totals:         1       0       0       0       0       0
  3877 ;;Total ram usage:        1 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    4
  3880 ;; This function calls:
  3881 ;;		_LCD_WriteData
  3882 ;; This function is called by:
  3883 ;;		_main
  3884 ;;		_xputc
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           
  3889                           ;psect for function _LCD_Put
  3890  0ED6                     _LCD_Put:	
  3891                           
  3892                           ;LCD.c: 56: LATA3 = 1;
  3893                           
  3894                           ;incstack = 0
  3895                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  3896  0ED6  0022               	movlb	2	; select bank2
  3897  0ED7  158C               	bsf	12,3	;volatile
  3898                           
  3899                           ;LCD.c: 57: LCD_WriteData(word);
  3900  0ED8  0875               	movf	LCD_Put@word,w
  3901  0ED9  3186  26A5         	fcall	_LCD_WriteData
  3902  0EDB  0008               	return
  3903  0EDC                     __end_of_LCD_Put:	
  3904                           
  3905                           	psect	text6
  3906  0F7C                     __ptext6:	
  3907 ;; *************** function ___wmul *****************
  3908 ;; Defined at:
  3909 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  multiplier      2    2[COMMON] unsigned int 
  3912 ;;  multiplicand    2    4[COMMON] unsigned int 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  product         2    6[COMMON] unsigned int 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  2    2[COMMON] unsigned int 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3924 ;;      Params:         4       0       0       0       0       0
  3925 ;;      Locals:         2       0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0
  3927 ;;      Totals:         6       0       0       0       0       0
  3928 ;;Total ram usage:        6 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    3
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_xvprintf
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function ___wmul
  3940  0F7C                     ___wmul:	
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3944  0F7C  01F6               	clrf	___wmul@product
  3945  0F7D  01F7               	clrf	___wmul@product+1
  3946  0F7E                     l2537:	
  3947  0F7E  1C72               	btfss	___wmul@multiplier,0
  3948  0F7F  2F84               	goto	l823
  3949  0F80  0874               	movf	___wmul@multiplicand,w
  3950  0F81  07F6               	addwf	___wmul@product,f
  3951  0F82  0875               	movf	___wmul@multiplicand+1,w
  3952  0F83  3DF7               	addwfc	___wmul@product+1,f
  3953  0F84                     l823:	
  3954  0F84  3001               	movlw	1
  3955  0F85                     u2015:	
  3956  0F85  35F4               	lslf	___wmul@multiplicand,f
  3957  0F86  0DF5               	rlf	___wmul@multiplicand+1,f
  3958  0F87  0B89               	decfsz	9,f
  3959  0F88  2F85               	goto	u2015
  3960  0F89  3001               	movlw	1
  3961  0F8A                     u2025:	
  3962  0F8A  36F3               	lsrf	___wmul@multiplier+1,f
  3963  0F8B  0CF2               	rrf	___wmul@multiplier,f
  3964  0F8C  0B89               	decfsz	9,f
  3965  0F8D  2F8A               	goto	u2025
  3966  0F8E  0872               	movf	___wmul@multiplier,w
  3967  0F8F  0473               	iorwf	___wmul@multiplier+1,w
  3968  0F90  1D03               	btfss	3,2
  3969  0F91  2F7E               	goto	l2537
  3970  0F92  0877               	movf	___wmul@product+1,w
  3971  0F93  00F3               	movwf	?___wmul+1
  3972  0F94  0876               	movf	___wmul@product,w
  3973  0F95  00F2               	movwf	?___wmul
  3974  0F96  0008               	return
  3975  0F97                     __end_of___wmul:	
  3976                           
  3977                           	psect	text7
  3978  0626                     __ptext7:	
  3979 ;; *************** function ___llmod *****************
  3980 ;; Defined at:
  3981 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  divisor         4    2[COMMON] unsigned long 
  3984 ;;  dividend        4    6[COMMON] unsigned long 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  counter         1    0[BANK0 ] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  4    2[COMMON] unsigned long 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3996 ;;      Params:         8       0       0       0       0       0
  3997 ;;      Locals:         0       1       0       0       0       0
  3998 ;;      Temps:          1       0       0       0       0       0
  3999 ;;      Totals:         9       1       0       0       0       0
  4000 ;;Total ram usage:       10 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    3
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		_xvprintf
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           
  4011                           ;psect for function ___llmod
  4012  0626                     ___llmod:	
  4013                           
  4014                           ;incstack = 0
  4015                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4016  0626  0875               	movf	___llmod@divisor+3,w
  4017  0627  0474               	iorwf	___llmod@divisor+2,w
  4018  0628  0473               	iorwf	___llmod@divisor+1,w
  4019  0629  0472               	iorwf	___llmod@divisor,w
  4020  062A  1903               	skipnz
  4021  062B  2E60               	goto	l3495
  4022  062C  0020               	movlb	0	; select bank0
  4023  062D  01A0               	clrf	___llmod@counter
  4024  062E  0AA0               	incf	___llmod@counter,f
  4025  062F                     l3485:	
  4026  062F  1BF5               	btfsc	___llmod@divisor+3,7
  4027  0630  2E3D               	goto	l3487
  4028  0631  3001               	movlw	1
  4029  0632                     u3415:	
  4030  0632  35F2               	lslf	___llmod@divisor,f
  4031  0633  0DF3               	rlf	___llmod@divisor+1,f
  4032  0634  0DF4               	rlf	___llmod@divisor+2,f
  4033  0635  0DF5               	rlf	___llmod@divisor+3,f
  4034  0636  0B89               	decfsz	9,f
  4035  0637  2E32               	goto	u3415
  4036  0638  3001               	movlw	1
  4037  0639  00FA               	movwf	??___llmod
  4038  063A  087A               	movf	??___llmod,w
  4039  063B  07A0               	addwf	___llmod@counter,f
  4040  063C  2E2F               	goto	l3485
  4041  063D                     l3487:	
  4042  063D  0875               	movf	___llmod@divisor+3,w
  4043  063E  0279               	subwf	___llmod@dividend+3,w
  4044  063F  1D03               	skipz
  4045  0640  2E4B               	goto	u3435
  4046  0641  0874               	movf	___llmod@divisor+2,w
  4047  0642  0278               	subwf	___llmod@dividend+2,w
  4048  0643  1D03               	skipz
  4049  0644  2E4B               	goto	u3435
  4050  0645  0873               	movf	___llmod@divisor+1,w
  4051  0646  0277               	subwf	___llmod@dividend+1,w
  4052  0647  1D03               	skipz
  4053  0648  2E4B               	goto	u3435
  4054  0649  0872               	movf	___llmod@divisor,w
  4055  064A  0276               	subwf	___llmod@dividend,w
  4056  064B                     u3435:	
  4057  064B  1C03               	skipc
  4058  064C  2E55               	goto	l3491
  4059  064D  0872               	movf	___llmod@divisor,w
  4060  064E  02F6               	subwf	___llmod@dividend,f
  4061  064F  0873               	movf	___llmod@divisor+1,w
  4062  0650  3BF7               	subwfb	___llmod@dividend+1,f
  4063  0651  0874               	movf	___llmod@divisor+2,w
  4064  0652  3BF8               	subwfb	___llmod@dividend+2,f
  4065  0653  0875               	movf	___llmod@divisor+3,w
  4066  0654  3BF9               	subwfb	___llmod@dividend+3,f
  4067  0655                     l3491:	
  4068  0655  3001               	movlw	1
  4069  0656                     u3445:	
  4070  0656  36F5               	lsrf	___llmod@divisor+3,f
  4071  0657  0CF4               	rrf	___llmod@divisor+2,f
  4072  0658  0CF3               	rrf	___llmod@divisor+1,f
  4073  0659  0CF2               	rrf	___llmod@divisor,f
  4074  065A  0B89               	decfsz	9,f
  4075  065B  2E56               	goto	u3445
  4076  065C  3001               	movlw	1
  4077  065D  02A0               	subwf	___llmod@counter,f
  4078  065E  1D03               	btfss	3,2
  4079  065F  2E3D               	goto	l3487
  4080  0660                     l3495:	
  4081  0660  0879               	movf	___llmod@dividend+3,w
  4082  0661  00F5               	movwf	?___llmod+3
  4083  0662  0878               	movf	___llmod@dividend+2,w
  4084  0663  00F4               	movwf	?___llmod+2
  4085  0664  0877               	movf	___llmod@dividend+1,w
  4086  0665  00F3               	movwf	?___llmod+1
  4087  0666  0876               	movf	___llmod@dividend,w
  4088  0667  00F2               	movwf	?___llmod
  4089  0668  0008               	return
  4090  0669                     __end_of___llmod:	
  4091                           
  4092                           	psect	text8
  4093  05D3                     __ptext8:	
  4094 ;; *************** function ___lldiv *****************
  4095 ;; Defined at:
  4096 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  divisor         4    2[COMMON] unsigned long 
  4099 ;;  dividend        4    6[COMMON] unsigned long 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  quotient        4    0[BANK0 ] unsigned long 
  4102 ;;  counter         1    4[BANK0 ] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  4    2[COMMON] unsigned long 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4112 ;;      Params:         8       0       0       0       0       0
  4113 ;;      Locals:         0       5       0       0       0       0
  4114 ;;      Temps:          1       0       0       0       0       0
  4115 ;;      Totals:         9       5       0       0       0       0
  4116 ;;Total ram usage:       14 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    3
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_xvprintf
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           
  4127                           ;psect for function ___lldiv
  4128  05D3                     ___lldiv:	
  4129                           
  4130                           ;incstack = 0
  4131                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4132  05D3  3000               	movlw	0
  4133  05D4  0020               	movlb	0	; select bank0
  4134  05D5  00A3               	movwf	___lldiv@quotient+3
  4135  05D6  3000               	movlw	0
  4136  05D7  00A2               	movwf	___lldiv@quotient+2
  4137  05D8  3000               	movlw	0
  4138  05D9  00A1               	movwf	___lldiv@quotient+1
  4139  05DA  3000               	movlw	0
  4140  05DB  00A0               	movwf	___lldiv@quotient
  4141  05DC  0875               	movf	___lldiv@divisor+3,w
  4142  05DD  0474               	iorwf	___lldiv@divisor+2,w
  4143  05DE  0473               	iorwf	___lldiv@divisor+1,w
  4144  05DF  0472               	iorwf	___lldiv@divisor,w
  4145  05E0  1903               	skipnz
  4146  05E1  2E1D               	goto	l2569
  4147  05E2  01A4               	clrf	___lldiv@counter
  4148  05E3  0AA4               	incf	___lldiv@counter,f
  4149  05E4                     l2555:	
  4150  05E4  1BF5               	btfsc	___lldiv@divisor+3,7
  4151  05E5  2DF2               	goto	l2557
  4152  05E6  3001               	movlw	1
  4153  05E7                     u2055:	
  4154  05E7  35F2               	lslf	___lldiv@divisor,f
  4155  05E8  0DF3               	rlf	___lldiv@divisor+1,f
  4156  05E9  0DF4               	rlf	___lldiv@divisor+2,f
  4157  05EA  0DF5               	rlf	___lldiv@divisor+3,f
  4158  05EB  0B89               	decfsz	9,f
  4159  05EC  2DE7               	goto	u2055
  4160  05ED  3001               	movlw	1
  4161  05EE  00FA               	movwf	??___lldiv
  4162  05EF  087A               	movf	??___lldiv,w
  4163  05F0  07A4               	addwf	___lldiv@counter,f
  4164  05F1  2DE4               	goto	l2555
  4165  05F2                     l2557:	
  4166  05F2  3001               	movlw	1
  4167  05F3                     u2075:	
  4168  05F3  35A0               	lslf	___lldiv@quotient,f
  4169  05F4  0DA1               	rlf	___lldiv@quotient+1,f
  4170  05F5  0DA2               	rlf	___lldiv@quotient+2,f
  4171  05F6  0DA3               	rlf	___lldiv@quotient+3,f
  4172  05F7  0B89               	decfsz	9,f
  4173  05F8  2DF3               	goto	u2075
  4174  05F9  0875               	movf	___lldiv@divisor+3,w
  4175  05FA  0279               	subwf	___lldiv@dividend+3,w
  4176  05FB  1D03               	skipz
  4177  05FC  2E07               	goto	u2085
  4178  05FD  0874               	movf	___lldiv@divisor+2,w
  4179  05FE  0278               	subwf	___lldiv@dividend+2,w
  4180  05FF  1D03               	skipz
  4181  0600  2E07               	goto	u2085
  4182  0601  0873               	movf	___lldiv@divisor+1,w
  4183  0602  0277               	subwf	___lldiv@dividend+1,w
  4184  0603  1D03               	skipz
  4185  0604  2E07               	goto	u2085
  4186  0605  0872               	movf	___lldiv@divisor,w
  4187  0606  0276               	subwf	___lldiv@dividend,w
  4188  0607                     u2085:	
  4189  0607  1C03               	skipc
  4190  0608  2E12               	goto	l2565
  4191  0609  0872               	movf	___lldiv@divisor,w
  4192  060A  02F6               	subwf	___lldiv@dividend,f
  4193  060B  0873               	movf	___lldiv@divisor+1,w
  4194  060C  3BF7               	subwfb	___lldiv@dividend+1,f
  4195  060D  0874               	movf	___lldiv@divisor+2,w
  4196  060E  3BF8               	subwfb	___lldiv@dividend+2,f
  4197  060F  0875               	movf	___lldiv@divisor+3,w
  4198  0610  3BF9               	subwfb	___lldiv@dividend+3,f
  4199  0611  1420               	bsf	___lldiv@quotient,0
  4200  0612                     l2565:	
  4201  0612  3001               	movlw	1
  4202  0613                     u2095:	
  4203  0613  36F5               	lsrf	___lldiv@divisor+3,f
  4204  0614  0CF4               	rrf	___lldiv@divisor+2,f
  4205  0615  0CF3               	rrf	___lldiv@divisor+1,f
  4206  0616  0CF2               	rrf	___lldiv@divisor,f
  4207  0617  0B89               	decfsz	9,f
  4208  0618  2E13               	goto	u2095
  4209  0619  3001               	movlw	1
  4210  061A  02A4               	subwf	___lldiv@counter,f
  4211  061B  1D03               	btfss	3,2
  4212  061C  2DF2               	goto	l2557
  4213  061D                     l2569:	
  4214  061D  0823               	movf	___lldiv@quotient+3,w
  4215  061E  00F5               	movwf	?___lldiv+3
  4216  061F  0822               	movf	___lldiv@quotient+2,w
  4217  0620  00F4               	movwf	?___lldiv+2
  4218  0621  0821               	movf	___lldiv@quotient+1,w
  4219  0622  00F3               	movwf	?___lldiv+1
  4220  0623  0820               	movf	___lldiv@quotient,w
  4221  0624  00F2               	movwf	?___lldiv
  4222  0625  0008               	return
  4223  0626                     __end_of___lldiv:	
  4224                           
  4225                           	psect	text9
  4226  0F63                     __ptext9:	
  4227 ;; *************** function _Timer1_Init *****************
  4228 ;; Defined at:
  4229 ;;		line 3 in file "Timer1.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;		None
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      void 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4243 ;;      Params:         0       0       0       0       0       0
  4244 ;;      Locals:         0       0       0       0       0       0
  4245 ;;      Temps:          1       0       0       0       0       0
  4246 ;;      Totals:         1       0       0       0       0       0
  4247 ;;Total ram usage:        1 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    3
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_main
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           
  4258                           ;psect for function _Timer1_Init
  4259  0F63                     _Timer1_Init:	
  4260                           
  4261                           ;Timer1.c: 5: TRISB |= (1<<6);
  4262                           
  4263                           ;incstack = 0
  4264                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4265  0F63  0021               	movlb	1	; select bank1
  4266  0F64  170D               	bsf	13,6	;volatile
  4267                           
  4268                           ;Timer1.c: 6: ANSELB &= ~(1<<6);
  4269  0F65  30BF               	movlw	191
  4270  0F66  00F2               	movwf	??_Timer1_Init
  4271  0F67  0872               	movf	??_Timer1_Init,w
  4272  0F68  0023               	movlb	3	; select bank3
  4273  0F69  058D               	andwf	13,f	;volatile
  4274                           
  4275                           ;Timer1.c: 8: T1CON |= (0x01<<2);
  4276  0F6A  0020               	movlb	0	; select bank0
  4277  0F6B  1518               	bsf	24,2	;volatile
  4278                           
  4279                           ;Timer1.c: 9: T1CON &= ~(0x01<<3);
  4280  0F6C  30F7               	movlw	247
  4281  0F6D  00F2               	movwf	??_Timer1_Init
  4282  0F6E  0872               	movf	??_Timer1_Init,w
  4283  0F6F  0598               	andwf	24,f	;volatile
  4284                           
  4285                           ;Timer1.c: 10: T1CON |= (0x00<<4);
  4286  0F70  0818               	movf	24,w	;volatile
  4287                           
  4288                           ;Timer1.c: 11: T1CON |= (0x02<<6);
  4289  0F71  1798               	bsf	24,7	;volatile
  4290                           
  4291                           ;Timer1.c: 13: T1GCON = 0x00;
  4292  0F72  0199               	clrf	25	;volatile
  4293                           
  4294                           ;Timer1.c: 15: TMR1 = 0x0000;
  4295  0F73  0196               	clrf	22	;volatile
  4296  0F74  0197               	clrf	23	;volatile
  4297                           
  4298                           ;Timer1.c: 17: TMR1IE = 1;
  4299  0F75  0021               	movlb	1	; select bank1
  4300  0F76  1411               	bsf	17,0	;volatile
  4301                           
  4302                           ;Timer1.c: 18: TMR1IF = 0;
  4303  0F77  0020               	movlb	0	; select bank0
  4304  0F78  1011               	bcf	17,0	;volatile
  4305                           
  4306                           ;Timer1.c: 19: PEIE = 1;
  4307  0F79  170B               	bsf	11,6	;volatile
  4308                           
  4309                           ;Timer1.c: 20: GIE = 1;
  4310  0F7A  178B               	bsf	11,7	;volatile
  4311  0F7B  0008               	return
  4312  0F7C                     __end_of_Timer1_Init:	
  4313                           
  4314                           	psect	text10
  4315  04C0                     __ptext10:	
  4316 ;; *************** function _LCD_Init *****************
  4317 ;; Defined at:
  4318 ;;		line 28 in file "LCD.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;		None
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;		None
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg, status,2, status,0, pclath, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4332 ;;      Params:         0       0       0       0       0       0
  4333 ;;      Locals:         0       0       0       0       0       0
  4334 ;;      Temps:          2       0       0       0       0       0
  4335 ;;      Totals:         2       0       0       0       0       0
  4336 ;;Total ram usage:        2 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    5
  4339 ;; This function calls:
  4340 ;;		_LCD_DisplayClear
  4341 ;;		_LCD_WriteData
  4342 ;; This function is called by:
  4343 ;;		_main
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function _LCD_Init
  4349  04C0                     _LCD_Init:	
  4350                           
  4351                           ;LCD.c: 30: LATA3 = 0;
  4352                           
  4353                           ;incstack = 0
  4354                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4355  04C0  0022               	movlb	2	; select bank2
  4356  04C1  118C               	bcf	12,3	;volatile
  4357                           
  4358                           ;LCD.c: 31: LATA4 = 0;
  4359  04C2  120C               	bcf	12,4	;volatile
  4360                           
  4361                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  4362  04C3  3002               	movlw	2
  4363  04C4  00F7               	movwf	??_LCD_Init+1
  4364  04C5  3038               	movlw	56
  4365  04C6  00F6               	movwf	??_LCD_Init
  4366  04C7  30AD               	movlw	173
  4367  04C8                     u3817:	
  4368  04C8  0B89               	decfsz	9,f
  4369  04C9  2CC8               	goto	u3817
  4370  04CA  0BF6               	decfsz	??_LCD_Init,f
  4371  04CB  2CC8               	goto	u3817
  4372  04CC  0BF7               	decfsz	??_LCD_Init+1,f
  4373  04CD  2CC8               	goto	u3817
  4374  04CE  0000               	nop
  4375                           
  4376                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  4377  04CF  3003               	movlw	3
  4378  04D0  0020               	movlb	0	; select bank0
  4379  04D1  008D               	movwf	13	;volatile
  4380                           
  4381                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4382  04D2  0022               	movlb	2	; select bank2
  4383  04D3  160C               	bsf	12,4	;volatile
  4384  04D4  3200               	nop2	;2 cycle nop
  4385  04D5  3200               	nop2	;2 cycle nop
  4386  04D6  3200               	nop2	;2 cycle nop
  4387  04D7  3200               	nop2	;2 cycle nop
  4388  04D8  0022               	movlb	2	; select bank2
  4389  04D9  120C               	bcf	12,4	;volatile
  4390  04DA  3200               	nop2	;2 cycle nop
  4391  04DB  3200               	nop2	;2 cycle nop
  4392  04DC  3200               	nop2	;2 cycle nop
  4393  04DD  3200               	nop2	;2 cycle nop
  4394                           
  4395                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  4396  04DE  3034               	movlw	52
  4397  04DF  00F6               	movwf	??_LCD_Init
  4398  04E0  30F2               	movlw	242
  4399  04E1                     u3827:	
  4400  04E1  0B89               	decfsz	9,f
  4401  04E2  2CE1               	goto	u3827
  4402  04E3  0BF6               	decfsz	??_LCD_Init,f
  4403  04E4  2CE1               	goto	u3827
  4404                           
  4405                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4406  04E5  0022               	movlb	2	; select bank2
  4407  04E6  160C               	bsf	12,4	;volatile
  4408  04E7  3200               	nop2	;2 cycle nop
  4409  04E8  3200               	nop2	;2 cycle nop
  4410  04E9  3200               	nop2	;2 cycle nop
  4411  04EA  3200               	nop2	;2 cycle nop
  4412  04EB  0022               	movlb	2	; select bank2
  4413  04EC  120C               	bcf	12,4	;volatile
  4414  04ED  3200               	nop2	;2 cycle nop
  4415  04EE  3200               	nop2	;2 cycle nop
  4416  04EF  3200               	nop2	;2 cycle nop
  4417  04F0  3200               	nop2	;2 cycle nop
  4418                           
  4419                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  4420  04F1  3005               	movlw	5
  4421  04F2  00F6               	movwf	??_LCD_Init
  4422  04F3  3026               	movlw	38
  4423  04F4                     u3837:	
  4424  04F4  0B89               	decfsz	9,f
  4425  04F5  2CF4               	goto	u3837
  4426  04F6  0BF6               	decfsz	??_LCD_Init,f
  4427  04F7  2CF4               	goto	u3837
  4428  04F8  3200               	nop2
  4429                           
  4430                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4431  04F9  0022               	movlb	2	; select bank2
  4432  04FA  160C               	bsf	12,4	;volatile
  4433  04FB  3200               	nop2	;2 cycle nop
  4434  04FC  3200               	nop2	;2 cycle nop
  4435  04FD  3200               	nop2	;2 cycle nop
  4436  04FE  3200               	nop2	;2 cycle nop
  4437  04FF  0022               	movlb	2	; select bank2
  4438  0500  120C               	bcf	12,4	;volatile
  4439  0501  3200               	nop2	;2 cycle nop
  4440  0502  3200               	nop2	;2 cycle nop
  4441  0503  3200               	nop2	;2 cycle nop
  4442  0504  3200               	nop2	;2 cycle nop
  4443                           
  4444                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  4445  0505  3005               	movlw	5
  4446  0506  00F6               	movwf	??_LCD_Init
  4447  0507  3026               	movlw	38
  4448  0508                     u3847:	
  4449  0508  0B89               	decfsz	9,f
  4450  0509  2D08               	goto	u3847
  4451  050A  0BF6               	decfsz	??_LCD_Init,f
  4452  050B  2D08               	goto	u3847
  4453  050C  3200               	nop2
  4454                           
  4455                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  4456  050D  3002               	movlw	2
  4457  050E  0020               	movlb	0	; select bank0
  4458  050F  008D               	movwf	13	;volatile
  4459                           
  4460                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4461  0510  0022               	movlb	2	; select bank2
  4462  0511  160C               	bsf	12,4	;volatile
  4463  0512  3200               	nop2	;2 cycle nop
  4464  0513  3200               	nop2	;2 cycle nop
  4465  0514  3200               	nop2	;2 cycle nop
  4466  0515  3200               	nop2	;2 cycle nop
  4467  0516  0022               	movlb	2	; select bank2
  4468  0517  120C               	bcf	12,4	;volatile
  4469  0518  3200               	nop2	;2 cycle nop
  4470  0519  3200               	nop2	;2 cycle nop
  4471  051A  3200               	nop2	;2 cycle nop
  4472  051B  3200               	nop2	;2 cycle nop
  4473                           
  4474                           ;LCD.c: 44: LCD_WriteData(0x28);
  4475  051C  3028               	movlw	40
  4476  051D  3186  26A5  3184   	fcall	_LCD_WriteData
  4477                           
  4478                           ;LCD.c: 45: LCD_WriteData(0x0c);
  4479  0520  300C               	movlw	12
  4480  0521  3186  26A5  3184   	fcall	_LCD_WriteData
  4481                           
  4482                           ;LCD.c: 46: LCD_DisplayClear();
  4483  0524  318F  2707  3184   	fcall	_LCD_DisplayClear
  4484                           
  4485                           ;LCD.c: 47: LCD_WriteData(0x06);
  4486  0527  3006               	movlw	6
  4487  0528  3186  26A5         	fcall	_LCD_WriteData
  4488  052A  0008               	return
  4489  052B                     __end_of_LCD_Init:	
  4490                           
  4491                           	psect	text11
  4492  0F07                     __ptext11:	
  4493 ;; *************** function _LCD_DisplayClear *****************
  4494 ;; Defined at:
  4495 ;;		line 64 in file "LCD.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0, pclath, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4509 ;;      Params:         0       0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0
  4511 ;;      Temps:          1       0       0       0       0       0
  4512 ;;      Totals:         1       0       0       0       0       0
  4513 ;;Total ram usage:        1 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    4
  4516 ;; This function calls:
  4517 ;;		_LCD_WriteData
  4518 ;; This function is called by:
  4519 ;;		_LCD_Init
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function _LCD_DisplayClear
  4525  0F07                     _LCD_DisplayClear:	
  4526                           
  4527                           ;LCD.c: 66: LATA3 = 0;
  4528                           
  4529                           ;incstack = 0
  4530                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  4531  0F07  0022               	movlb	2	; select bank2
  4532  0F08  118C               	bcf	12,3	;volatile
  4533                           
  4534                           ;LCD.c: 67: LCD_WriteData(0x01);
  4535  0F09  3001               	movlw	1
  4536  0F0A  3186  26A5  318F   	fcall	_LCD_WriteData
  4537                           
  4538                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  4539  0F0D  3015               	movlw	21
  4540  0F0E  00F5               	movwf	??_LCD_DisplayClear
  4541  0F0F  30C6               	movlw	198
  4542  0F10                     u3857:	
  4543  0F10  0B89               	decfsz	9,f
  4544  0F11  2F10               	goto	u3857
  4545  0F12  0BF5               	decfsz	??_LCD_DisplayClear,f
  4546  0F13  2F10               	goto	u3857
  4547  0F14  3200               	nop2
  4548  0F15  0008               	return
  4549  0F16                     __end_of_LCD_DisplayClear:	
  4550                           
  4551                           	psect	text12
  4552  0F4E                     __ptext12:	
  4553 ;; *************** function _LCD_CursorPosition *****************
  4554 ;; Defined at:
  4555 ;;		line 86 in file "LCD.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  tx              1    wreg     unsigned char 
  4558 ;;  ty              1    5[COMMON] unsigned char 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  tx              1    7[COMMON] unsigned char 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg, status,2, status,0, pclath, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4570 ;;      Params:         1       0       0       0       0       0
  4571 ;;      Locals:         1       0       0       0       0       0
  4572 ;;      Temps:          1       0       0       0       0       0
  4573 ;;      Totals:         3       0       0       0       0       0
  4574 ;;Total ram usage:        3 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    4
  4577 ;; This function calls:
  4578 ;;		_LCD_WriteData
  4579 ;; This function is called by:
  4580 ;;		_main
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           
  4585                           ;psect for function _LCD_CursorPosition
  4586  0F4E                     _LCD_CursorPosition:	
  4587                           
  4588                           ;incstack = 0
  4589                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  4590                           ;LCD_CursorPosition@tx stored from wreg
  4591  0F4E  00F7               	movwf	LCD_CursorPosition@tx
  4592                           
  4593                           ;LCD.c: 88: LATA3 = 0;
  4594  0F4F  0022               	movlb	2	; select bank2
  4595  0F50  118C               	bcf	12,3	;volatile
  4596                           
  4597                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  4598  0F51  0875               	movf	LCD_CursorPosition@ty,w
  4599  0F52  00F6               	movwf	??_LCD_CursorPosition
  4600  0F53  3005               	movlw	5
  4601  0F54                     u2935:	
  4602  0F54  35F6               	lslf	??_LCD_CursorPosition,f
  4603  0F55  3EFF               	addlw	-1
  4604  0F56  1D03               	skipz
  4605  0F57  2F54               	goto	u2935
  4606  0F58  3576               	lslf	??_LCD_CursorPosition,w
  4607  0F59  0477               	iorwf	LCD_CursorPosition@tx,w
  4608  0F5A  3880               	iorlw	-128
  4609  0F5B  3186  26A5  318F   	fcall	_LCD_WriteData
  4610                           
  4611                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  4612  0F5E  306A               	movlw	106
  4613  0F5F                     u3867:	
  4614  0F5F  0B89               	decfsz	9,f
  4615  0F60  2F5F               	goto	u3867
  4616  0F61  3200               	nop2
  4617  0F62  0008               	return
  4618  0F63                     __end_of_LCD_CursorPosition:	
  4619                           
  4620                           	psect	text13
  4621  06A5                     __ptext13:	
  4622 ;; *************** function _LCD_WriteData *****************
  4623 ;; Defined at:
  4624 ;;		line 15 in file "LCD.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  point           1    wreg     char 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  point           1    4[COMMON] char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4638 ;;      Params:         0       0       0       0       0       0
  4639 ;;      Locals:         1       0       0       0       0       0
  4640 ;;      Temps:          2       0       0       0       0       0
  4641 ;;      Totals:         3       0       0       0       0       0
  4642 ;;Total ram usage:        3 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:    3
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_LCD_Init
  4649 ;;		_LCD_Put
  4650 ;;		_LCD_DisplayClear
  4651 ;;		_LCD_CursorPosition
  4652 ;;		_LCD_CursorHome
  4653 ;;		_LCD_CursorShift
  4654 ;;		_LCD_DispShift
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           
  4659                           ;psect for function _LCD_WriteData
  4660  06A5                     _LCD_WriteData:	
  4661                           
  4662                           ;incstack = 0
  4663                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  4664                           ;LCD_WriteData@point stored from wreg
  4665  06A5  00F4               	movwf	LCD_WriteData@point
  4666                           
  4667                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  4668  06A6  30D5               	movlw	213
  4669  06A7                     u3877:	
  4670  06A7  0B89               	decfsz	9,f
  4671  06A8  2EA7               	goto	u3877
  4672  06A9  0000               	nop
  4673                           
  4674                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  4675  06AA  0874               	movf	LCD_WriteData@point,w
  4676  06AB  00F2               	movwf	??_LCD_WriteData
  4677  06AC  3004               	movlw	4
  4678  06AD                     u1675:	
  4679  06AD  1003               	clrc
  4680  06AE  1BF2               	btfsc	??_LCD_WriteData,7
  4681  06AF  1403               	setc
  4682  06B0  0CF2               	rrf	??_LCD_WriteData,f
  4683  06B1  0B89               	decfsz	9,f
  4684  06B2  2EAD               	goto	u1675
  4685  06B3  3003               	movlw	3
  4686  06B4  0572               	andwf	??_LCD_WriteData,w
  4687  06B5  00F3               	movwf	??_LCD_WriteData+1
  4688  06B6  0E74               	swapf	LCD_WriteData@point,w
  4689  06B7  390F               	andlw	15
  4690  06B8  1989               	btfsc	9,3
  4691  06B9  38F0               	iorlw	240
  4692  06BA  390C               	andlw	12
  4693  06BB  0709               	addwf	9,w
  4694  06BC  0473               	iorwf	??_LCD_WriteData+1,w
  4695  06BD  0020               	movlb	0	; select bank0
  4696  06BE  008D               	movwf	13	;volatile
  4697                           
  4698                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4699  06BF  0022               	movlb	2	; select bank2
  4700  06C0  160C               	bsf	12,4	;volatile
  4701  06C1  3200               	nop2	;2 cycle nop
  4702  06C2  3200               	nop2	;2 cycle nop
  4703  06C3  3200               	nop2	;2 cycle nop
  4704  06C4  3200               	nop2	;2 cycle nop
  4705  06C5  0022               	movlb	2	; select bank2
  4706  06C6  120C               	bcf	12,4	;volatile
  4707  06C7  3200               	nop2	;2 cycle nop
  4708  06C8  3200               	nop2	;2 cycle nop
  4709  06C9  3200               	nop2	;2 cycle nop
  4710  06CA  3200               	nop2	;2 cycle nop
  4711                           
  4712                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  4713  06CB  3003               	movlw	3
  4714  06CC  0574               	andwf	LCD_WriteData@point,w
  4715  06CD  00F2               	movwf	??_LCD_WriteData
  4716  06CE  0874               	movf	LCD_WriteData@point,w
  4717  06CF  390C               	andlw	12
  4718  06D0  0709               	addwf	9,w
  4719  06D1  0472               	iorwf	??_LCD_WriteData,w
  4720  06D2  0020               	movlb	0	; select bank0
  4721  06D3  008D               	movwf	13	;volatile
  4722                           
  4723                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4724  06D4  0022               	movlb	2	; select bank2
  4725  06D5  160C               	bsf	12,4	;volatile
  4726  06D6  3200               	nop2	;2 cycle nop
  4727  06D7  3200               	nop2	;2 cycle nop
  4728  06D8  3200               	nop2	;2 cycle nop
  4729  06D9  3200               	nop2	;2 cycle nop
  4730  06DA  0022               	movlb	2	; select bank2
  4731  06DB  120C               	bcf	12,4	;volatile
  4732  06DC  3200               	nop2	;2 cycle nop
  4733  06DD  3200               	nop2	;2 cycle nop
  4734  06DE  3200               	nop2	;2 cycle nop
  4735  06DF  3200               	nop2	;2 cycle nop
  4736  06E0  0008               	return
  4737  06E1                     __end_of_LCD_WriteData:	
  4738                           
  4739                           	psect	text14
  4740  07DF                     __ptext14:	
  4741 ;; *************** function _DAC_Initialize *****************
  4742 ;; Defined at:
  4743 ;;		line 14 in file "MCP4726.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;		None
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4757 ;;      Params:         0       0       0       0       0       0
  4758 ;;      Locals:         0       0       0       0       0       0
  4759 ;;      Temps:          0       2       0       0       0       0
  4760 ;;      Totals:         0       2       0       0       0       0
  4761 ;;Total ram usage:        2 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    6
  4764 ;; This function calls:
  4765 ;;		_I2C_Init
  4766 ;;		_I2C_Transmit
  4767 ;; This function is called by:
  4768 ;;		_main
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           
  4773                           ;psect for function _DAC_Initialize
  4774  07DF                     _DAC_Initialize:	
  4775                           
  4776                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  4777                           
  4778                           ;incstack = 0
  4779                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4780  07DF  01F7               	clrf	I2C_Init@address
  4781  07E0  01F8               	clrf	I2C_Init@mode
  4782  07E1  01F9               	clrf	I2C_Init@Speed
  4783  07E2  3001               	movlw	1
  4784  07E3  318F  27D7  3187   	fcall	_I2C_Init
  4785                           
  4786                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  4787  07E6  0020               	movlb	0	; select bank0
  4788  07E7  0868               	movf	_ConfigReg,w
  4789  07E8  391F               	andlw	-225
  4790  07E9  3880               	iorlw	128
  4791  07EA  00E8               	movwf	_ConfigReg
  4792                           
  4793                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  4794  07EB  1068               	bcf	_ConfigReg,0
  4795                           
  4796                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  4797  07EC  30F9               	movlw	-7
  4798  07ED  05E8               	andwf	_ConfigReg,f
  4799                           
  4800                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  4801  07EE  30E7               	movlw	-25
  4802  07EF  05E8               	andwf	_ConfigReg,f
  4803                           
  4804                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  4805  07F0  3060               	movlw	96
  4806  07F1  00A8               	movwf	??_DAC_Initialize
  4807  07F2  0828               	movf	??_DAC_Initialize,w
  4808  07F3  00A0               	movwf	I2C_Transmit@address
  4809  07F4  3068               	movlw	(low (_ConfigReg| 0))& (0+255)
  4810  07F5  00A9               	movwf	??_DAC_Initialize+1
  4811  07F6  0829               	movf	??_DAC_Initialize+1,w
  4812  07F7  00A1               	movwf	I2C_Transmit@pData
  4813  07F8  01A2               	clrf	I2C_Transmit@size
  4814  07F9  0AA2               	incf	I2C_Transmit@size,f
  4815  07FA  3001               	movlw	1
  4816  07FB  3187  27B4         	fcall	_I2C_Transmit
  4817  07FD  0008               	return
  4818  07FE                     __end_of_DAC_Initialize:	
  4819                           
  4820                           	psect	text15
  4821  07B4                     __ptext15:	
  4822 ;; *************** function _I2C_Transmit *****************
  4823 ;; Defined at:
  4824 ;;		line 23 in file "I2C_Common.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  I2Cx            1    wreg     enum E3054
  4827 ;;  address         1    0[BANK0 ] unsigned char 
  4828 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  4829 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4830 ;;  size            1    2[BANK0 ] unsigned char 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  I2Cx            1    6[BANK0 ] enum E3054
  4833 ;;  result          1    7[BANK0 ] char 
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      char 
  4836 ;; Registers used:
  4837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4843 ;;      Params:         0       3       0       0       0       0
  4844 ;;      Locals:         0       2       0       0       0       0
  4845 ;;      Temps:          0       3       0       0       0       0
  4846 ;;      Totals:         0       8       0       0       0       0
  4847 ;;Total ram usage:        8 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; Hardware stack levels required when called:    4
  4850 ;; This function calls:
  4851 ;;		_I2C1_Transmit
  4852 ;;		_I2C2_Transmit
  4853 ;; This function is called by:
  4854 ;;		_DAC_Initialize
  4855 ;;		_DAC_WriteVoltage
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           
  4860                           ;psect for function _I2C_Transmit
  4861  07B4                     _I2C_Transmit:	
  4862                           
  4863                           ;incstack = 0
  4864                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4865                           ;I2C_Transmit@I2Cx stored from wreg
  4866  07B4  0020               	movlb	0	; select bank0
  4867  07B5  00A6               	movwf	I2C_Transmit@I2Cx
  4868                           
  4869                           ;I2C_Common.c: 25: int8_t result;
  4870                           ;I2C_Common.c: 27: switch(I2Cx)
  4871  07B6  2FD5               	goto	l3517
  4872  07B7                     l3511:	
  4873                           ;I2C_Common.c: 28: {
  4874                           ;I2C_Common.c: 29: case I2C1_MODULE:
  4875                           
  4876                           
  4877                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  4878  07B7  0821               	movf	I2C_Transmit@pData,w
  4879  07B8  00A3               	movwf	??_I2C_Transmit
  4880  07B9  0823               	movf	??_I2C_Transmit,w
  4881  07BA  00F2               	movwf	I2C1_Transmit@pData
  4882  07BB  0822               	movf	I2C_Transmit@size,w
  4883  07BC  00A4               	movwf	??_I2C_Transmit+1
  4884  07BD  0824               	movf	??_I2C_Transmit+1,w
  4885  07BE  00F3               	movwf	I2C1_Transmit@size
  4886  07BF  0820               	movf	I2C_Transmit@address,w
  4887  07C0  3184  2442  3187   	fcall	_I2C1_Transmit
  4888  07C3  2FD0               	goto	L7
  4889  07C4                     l3513:	
  4890                           ;I2C_Common.c: 33: case I2C2_MODULE:
  4891                           
  4892                           ;I2C_Common.c: 31: break;
  4893                           
  4894                           
  4895                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  4896  07C4  0821               	movf	I2C_Transmit@pData,w
  4897  07C5  00A3               	movwf	??_I2C_Transmit
  4898  07C6  0823               	movf	??_I2C_Transmit,w
  4899  07C7  00F2               	movwf	I2C2_Transmit@pData
  4900  07C8  0822               	movf	I2C_Transmit@size,w
  4901  07C9  00A4               	movwf	??_I2C_Transmit+1
  4902  07CA  0824               	movf	??_I2C_Transmit+1,w
  4903  07CB  00F3               	movwf	I2C2_Transmit@size
  4904  07CC  0820               	movf	I2C_Transmit@address,w
  4905  07CD  3183  23C3  3187   	fcall	_I2C2_Transmit
  4906  07D0                     L7:	
  4907  07D0  0020               	movlb	0	; select bank0
  4908  07D1  00A5               	movwf	??_I2C_Transmit+2
  4909  07D2  0825               	movf	??_I2C_Transmit+2,w
  4910  07D3  00A7               	movwf	I2C_Transmit@result
  4911                           
  4912                           ;I2C_Common.c: 36: }
  4913                           
  4914                           ;I2C_Common.c: 35: break;
  4915  07D4  2FDD               	goto	l3519
  4916  07D5                     l3517:	
  4917  07D5  0826               	movf	I2C_Transmit@I2Cx,w
  4918                           
  4919                           ; Switch size 1, requested type "space"
  4920                           ; Number of cases is 2, Range of values is 0 to 1
  4921                           ; switch strategies available:
  4922                           ; Name         Instructions Cycles
  4923                           ; simple_byte            7     4 (average)
  4924                           ; direct_byte           10     6 (fixed)
  4925                           ; jumptable            260     6 (fixed)
  4926                           ;	Chosen strategy is simple_byte
  4927  07D6  3A00               	xorlw	0	; case 0
  4928  07D7  1903               	skipnz
  4929  07D8  2FB7               	goto	l3511
  4930  07D9  3A01               	xorlw	1	; case 1
  4931  07DA  1903               	skipnz
  4932  07DB  2FC4               	goto	l3513
  4933  07DC  2FDD               	goto	l3519
  4934  07DD                     l3519:	
  4935                           
  4936                           ;I2C_Common.c: 37: return result;
  4937  07DD  0827               	movf	I2C_Transmit@result,w
  4938  07DE  0008               	return
  4939  07DF                     __end_of_I2C_Transmit:	
  4940                           
  4941                           	psect	text16
  4942  03C3                     __ptext16:	
  4943 ;; *************** function _I2C2_Transmit *****************
  4944 ;; Defined at:
  4945 ;;		line 52 in file "I2C2.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  address         1    wreg     unsigned char 
  4948 ;;  pData           1    2[COMMON] PTR unsigned char 
  4949 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4950 ;;  size            1    3[COMMON] unsigned char 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  address         1    6[COMMON] unsigned char 
  4953 ;;  i               1    8[COMMON] unsigned char 
  4954 ;;  i               1    7[COMMON] unsigned char 
  4955 ;;  result          1    9[COMMON] char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      char 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4965 ;;      Params:         2       0       0       0       0       0
  4966 ;;      Locals:         4       0       0       0       0       0
  4967 ;;      Temps:          2       0       0       0       0       0
  4968 ;;      Totals:         8       0       0       0       0       0
  4969 ;;Total ram usage:        8 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    3
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_I2C_Transmit
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           
  4980                           ;psect for function _I2C2_Transmit
  4981  03C3                     _I2C2_Transmit:	
  4982                           
  4983                           ;incstack = 0
  4984                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  4985                           ;I2C2_Transmit@address stored from wreg
  4986  03C3  00F6               	movwf	I2C2_Transmit@address
  4987                           
  4988                           ;I2C2.c: 54: int8_t result = 0;
  4989  03C4  01F9               	clrf	I2C2_Transmit@result
  4990                           
  4991                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  4992  03C5  2C37               	goto	l3473
  4993  03C6                     l3429:	
  4994                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  4995                           
  4996                           ;I2C2.c: 57: {
  4997                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  4998                           
  4999  03C6  3005               	movlw	5
  5000  03C7  0024               	movlb	4	; select bank4
  5001  03C8  051C               	andwf	28,w	;volatile
  5002  03C9  00F4               	movwf	??_I2C2_Transmit
  5003  03CA  081E               	movf	30,w	;volatile
  5004  03CB  391F               	andlw	31
  5005  03CC  0474               	iorwf	??_I2C2_Transmit,w
  5006  03CD  1D03               	btfss	3,2
  5007  03CE  2BC6               	goto	l3429
  5008                           
  5009                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  5010  03CF  141E               	bsf	30,0	;volatile
  5011  03D0                     l3431:	
  5012                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5013                           
  5014  03D0  3005               	movlw	5
  5015  03D1  051C               	andwf	28,w	;volatile
  5016  03D2  00F4               	movwf	??_I2C2_Transmit
  5017  03D3  081E               	movf	30,w	;volatile
  5018  03D4  391F               	andlw	31
  5019  03D5  0474               	iorwf	??_I2C2_Transmit,w
  5020  03D6  1D03               	btfss	3,2
  5021  03D7  2BD0               	goto	l3431
  5022                           
  5023                           ;I2C2.c: 63: SSP2BUF = address << 1;
  5024  03D8  3576               	lslf	I2C2_Transmit@address,w
  5025  03D9  0099               	movwf	25	;volatile
  5026  03DA                     l217:	
  5027                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  5028                           
  5029  03DA  191C               	btfsc	28,2	;volatile
  5030  03DB  2BDA               	goto	l217
  5031                           
  5032                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  5033  03DC  3000               	movlw	0
  5034  03DD  1B1E               	btfsc	30,6	;volatile
  5035  03DE  3001               	movlw	1
  5036  03DF  00F9               	movwf	I2C2_Transmit@result
  5037                           
  5038                           ;I2C2.c: 67: if (!result)
  5039  03E0  0879               	movf	I2C2_Transmit@result,w
  5040  03E1  1D03               	btfss	3,2
  5041  03E2  2C0A               	goto	l3455
  5042                           
  5043                           ;I2C2.c: 68: {
  5044                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  5045  03E3  01F7               	clrf	I2C2_Transmit@i
  5046  03E4  2BE9               	goto	l3453
  5047  03E5                     l3451:	
  5048                           ;I2C2.c: 79: break;
  5049                           
  5050  03E5  3001               	movlw	1
  5051  03E6  00F4               	movwf	??_I2C2_Transmit
  5052  03E7  0874               	movf	??_I2C2_Transmit,w
  5053  03E8  07F7               	addwf	I2C2_Transmit@i,f
  5054  03E9                     l3453:	
  5055  03E9  0873               	movf	I2C2_Transmit@size,w
  5056  03EA  0277               	subwf	I2C2_Transmit@i,w
  5057  03EB  1803               	btfsc	3,0
  5058  03EC  2C0A               	goto	l3455
  5059  03ED                     l3441:	
  5060                           ;I2C2.c: 70: {
  5061                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5062                           
  5063  03ED  3005               	movlw	5
  5064  03EE  051C               	andwf	28,w	;volatile
  5065  03EF  00F4               	movwf	??_I2C2_Transmit
  5066  03F0  081E               	movf	30,w	;volatile
  5067  03F1  391F               	andlw	31
  5068  03F2  0474               	iorwf	??_I2C2_Transmit,w
  5069  03F3  1D03               	btfss	3,2
  5070  03F4  2BED               	goto	l3441
  5071                           
  5072                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  5073  03F5  0877               	movf	I2C2_Transmit@i,w
  5074  03F6  0772               	addwf	I2C2_Transmit@pData,w
  5075  03F7  00F4               	movwf	??_I2C2_Transmit
  5076  03F8  0874               	movf	??_I2C2_Transmit,w
  5077  03F9  0086               	movwf	6
  5078  03FA  0187               	clrf	7
  5079  03FB  0801               	movf	1,w
  5080  03FC  0099               	movwf	25	;volatile
  5081  03FD                     l226:	
  5082                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  5083                           
  5084  03FD  191C               	btfsc	28,2	;volatile
  5085  03FE  2BFD               	goto	l226
  5086                           
  5087                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  5088  03FF  3000               	movlw	0
  5089  0400  1B1E               	btfsc	30,6	;volatile
  5090  0401  3001               	movlw	1
  5091  0402  00F9               	movwf	I2C2_Transmit@result
  5092                           
  5093                           ;I2C2.c: 76: if (result)
  5094  0403  0879               	movf	I2C2_Transmit@result,w
  5095  0404  1903               	btfsc	3,2
  5096  0405  2BE5               	goto	l3451
  5097                           
  5098                           ;I2C2.c: 77: {
  5099                           ;I2C2.c: 78: result = 2;
  5100  0406  3002               	movlw	2
  5101  0407  00F4               	movwf	??_I2C2_Transmit
  5102  0408  0874               	movf	??_I2C2_Transmit,w
  5103  0409  00F9               	movwf	I2C2_Transmit@result
  5104  040A                     l3455:	
  5105                           ;I2C2.c: 80: }
  5106                           ;I2C2.c: 81: }
  5107                           ;I2C2.c: 82: }
  5108                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5109                           
  5110  040A  3005               	movlw	5
  5111  040B  051C               	andwf	28,w	;volatile
  5112  040C  00F4               	movwf	??_I2C2_Transmit
  5113  040D  081E               	movf	30,w	;volatile
  5114  040E  391F               	andlw	31
  5115  040F  0474               	iorwf	??_I2C2_Transmit,w
  5116  0410  1D03               	btfss	3,2
  5117  0411  2C0A               	goto	l3455
  5118                           
  5119                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  5120  0412  151E               	bsf	30,2	;volatile
  5121                           
  5122                           ;I2C2.c: 86: break;
  5123  0413  2C40               	goto	l3475
  5124  0414                     l235:	
  5125                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  5126                           
  5127                           
  5128                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  5129  0414  0024               	movlb	4	; select bank4
  5130  0415  1D9C               	btfss	28,3	;volatile
  5131  0416  1E1C               	btfss	28,4	;volatile
  5132  0417  2C35               	goto	l3469
  5133                           
  5134                           ;I2C2.c: 90: {
  5135                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  5136  0418  01F8               	clrf	I2C2_Transmit@i_311
  5137  0419                     l3465:	
  5138  0419  0873               	movf	I2C2_Transmit@size,w
  5139  041A  0278               	subwf	I2C2_Transmit@i_311,w
  5140  041B  1803               	btfsc	3,0
  5141  041C  2C30               	goto	l3467
  5142                           
  5143                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  5144  041D  0878               	movf	I2C2_Transmit@i_311,w
  5145  041E  0772               	addwf	I2C2_Transmit@pData,w
  5146  041F  00F4               	movwf	??_I2C2_Transmit
  5147  0420  0874               	movf	??_I2C2_Transmit,w
  5148  0421  0086               	movwf	6
  5149  0422  0187               	clrf	7
  5150  0423  0801               	movf	1,w
  5151  0424  00F5               	movwf	??_I2C2_Transmit+1
  5152  0425  0878               	movf	I2C2_Transmit@i_311,w
  5153  0426  3EA0               	addlw	(low (_I2C2_Config| 0))& (0+255)
  5154  0427  0086               	movwf	6
  5155  0428  0187               	clrf	7
  5156  0429  0875               	movf	??_I2C2_Transmit+1,w
  5157  042A  0081               	movwf	1
  5158  042B  3001               	movlw	1
  5159  042C  00F4               	movwf	??_I2C2_Transmit
  5160  042D  0874               	movf	??_I2C2_Transmit,w
  5161  042E  07F8               	addwf	I2C2_Transmit@i_311,f
  5162  042F  2C19               	goto	l3465
  5163  0430                     l3467:	
  5164                           
  5165                           ;I2C2.c: 93: result = size;
  5166  0430  0873               	movf	I2C2_Transmit@size,w
  5167  0431  00F4               	movwf	??_I2C2_Transmit
  5168  0432  0874               	movf	??_I2C2_Transmit,w
  5169  0433  00F9               	movwf	I2C2_Transmit@result
  5170                           
  5171                           ;I2C2.c: 94: }
  5172  0434  2C40               	goto	l3475
  5173  0435                     l3469:	
  5174                           
  5175                           ;I2C2.c: 95: else
  5176                           ;I2C2.c: 96: result = 0;
  5177  0435  01F9               	clrf	I2C2_Transmit@result
  5178                           
  5179                           ;I2C2.c: 98: }
  5180                           
  5181                           ;I2C2.c: 97: break;
  5182  0436  2C40               	goto	l3475
  5183  0437                     l3473:	
  5184  0437  0021               	movlb	1	; select bank1
  5185  0438  0832               	movf	(_I2C2_Config^(0+128)+18),w
  5186                           
  5187                           ; Switch size 1, requested type "space"
  5188                           ; Number of cases is 2, Range of values is 0 to 1
  5189                           ; switch strategies available:
  5190                           ; Name         Instructions Cycles
  5191                           ; simple_byte            7     4 (average)
  5192                           ; direct_byte           10     6 (fixed)
  5193                           ; jumptable            260     6 (fixed)
  5194                           ;	Chosen strategy is simple_byte
  5195  0439  3A00               	xorlw	0	; case 0
  5196  043A  1903               	skipnz
  5197  043B  2BC6               	goto	l3429
  5198  043C  3A01               	xorlw	1	; case 1
  5199  043D  1903               	skipnz
  5200  043E  2C14               	goto	l235
  5201  043F  2C40               	goto	l3475
  5202  0440                     l3475:	
  5203                           
  5204                           ;I2C2.c: 100: return result;
  5205  0440  0879               	movf	I2C2_Transmit@result,w
  5206  0441  0008               	return
  5207  0442                     __end_of_I2C2_Transmit:	
  5208                           
  5209                           	psect	text17
  5210  0442                     __ptext17:	
  5211 ;; *************** function _I2C1_Transmit *****************
  5212 ;; Defined at:
  5213 ;;		line 52 in file "I2C1.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  address         1    wreg     unsigned char 
  5216 ;;  pData           1    2[COMMON] PTR unsigned char 
  5217 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5218 ;;  size            1    3[COMMON] unsigned char 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  address         1    6[COMMON] unsigned char 
  5221 ;;  i               1    8[COMMON] unsigned char 
  5222 ;;  i               1    7[COMMON] unsigned char 
  5223 ;;  result          1    9[COMMON] char 
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  1    wreg      char 
  5226 ;; Registers used:
  5227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5233 ;;      Params:         2       0       0       0       0       0
  5234 ;;      Locals:         4       0       0       0       0       0
  5235 ;;      Temps:          2       0       0       0       0       0
  5236 ;;      Totals:         8       0       0       0       0       0
  5237 ;;Total ram usage:        8 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; Hardware stack levels required when called:    3
  5240 ;; This function calls:
  5241 ;;		Nothing
  5242 ;; This function is called by:
  5243 ;;		_I2C_Transmit
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           
  5248                           ;psect for function _I2C1_Transmit
  5249  0442                     _I2C1_Transmit:	
  5250                           
  5251                           ;incstack = 0
  5252                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  5253                           ;I2C1_Transmit@address stored from wreg
  5254  0442  00F6               	movwf	I2C1_Transmit@address
  5255                           
  5256                           ;I2C1.c: 54: int8_t result;
  5257                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  5258  0443  2CB5               	goto	l3387
  5259  0444                     l3343:	
  5260                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5261                           
  5262                           ;I2C1.c: 57: {
  5263                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  5264                           
  5265  0444  3005               	movlw	5
  5266  0445  0024               	movlb	4	; select bank4
  5267  0446  0514               	andwf	20,w	;volatile
  5268  0447  00F4               	movwf	??_I2C1_Transmit
  5269  0448  0816               	movf	22,w	;volatile
  5270  0449  391F               	andlw	31
  5271  044A  0474               	iorwf	??_I2C1_Transmit,w
  5272  044B  1D03               	btfss	3,2
  5273  044C  2C44               	goto	l3343
  5274                           
  5275                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  5276  044D  1416               	bsf	22,0	;volatile
  5277  044E                     l3345:	
  5278                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5279                           
  5280  044E  3005               	movlw	5
  5281  044F  0514               	andwf	20,w	;volatile
  5282  0450  00F4               	movwf	??_I2C1_Transmit
  5283  0451  0816               	movf	22,w	;volatile
  5284  0452  391F               	andlw	31
  5285  0453  0474               	iorwf	??_I2C1_Transmit,w
  5286  0454  1D03               	btfss	3,2
  5287  0455  2C4E               	goto	l3345
  5288                           
  5289                           ;I2C1.c: 63: SSP1BUF = address << 1;
  5290  0456  3576               	lslf	I2C1_Transmit@address,w
  5291  0457  0091               	movwf	17	;volatile
  5292  0458                     l80:	
  5293                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  5294                           
  5295  0458  1914               	btfsc	20,2	;volatile
  5296  0459  2C58               	goto	l80
  5297                           
  5298                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  5299  045A  3000               	movlw	0
  5300  045B  1B16               	btfsc	22,6	;volatile
  5301  045C  3001               	movlw	1
  5302  045D  00F9               	movwf	I2C1_Transmit@result
  5303                           
  5304                           ;I2C1.c: 67: if (!result)
  5305  045E  0879               	movf	I2C1_Transmit@result,w
  5306  045F  1D03               	btfss	3,2
  5307  0460  2C88               	goto	l3369
  5308                           
  5309                           ;I2C1.c: 68: {
  5310                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  5311  0461  01F7               	clrf	I2C1_Transmit@i
  5312  0462  2C67               	goto	l3367
  5313  0463                     l3365:	
  5314                           ;I2C1.c: 79: break;
  5315                           
  5316  0463  3001               	movlw	1
  5317  0464  00F4               	movwf	??_I2C1_Transmit
  5318  0465  0874               	movf	??_I2C1_Transmit,w
  5319  0466  07F7               	addwf	I2C1_Transmit@i,f
  5320  0467                     l3367:	
  5321  0467  0873               	movf	I2C1_Transmit@size,w
  5322  0468  0277               	subwf	I2C1_Transmit@i,w
  5323  0469  1803               	btfsc	3,0
  5324  046A  2C88               	goto	l3369
  5325  046B                     l3355:	
  5326                           ;I2C1.c: 70: {
  5327                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5328                           
  5329  046B  3005               	movlw	5
  5330  046C  0514               	andwf	20,w	;volatile
  5331  046D  00F4               	movwf	??_I2C1_Transmit
  5332  046E  0816               	movf	22,w	;volatile
  5333  046F  391F               	andlw	31
  5334  0470  0474               	iorwf	??_I2C1_Transmit,w
  5335  0471  1D03               	btfss	3,2
  5336  0472  2C6B               	goto	l3355
  5337                           
  5338                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  5339  0473  0877               	movf	I2C1_Transmit@i,w
  5340  0474  0772               	addwf	I2C1_Transmit@pData,w
  5341  0475  00F4               	movwf	??_I2C1_Transmit
  5342  0476  0874               	movf	??_I2C1_Transmit,w
  5343  0477  0086               	movwf	6
  5344  0478  0187               	clrf	7
  5345  0479  0801               	movf	1,w
  5346  047A  0091               	movwf	17	;volatile
  5347  047B                     l89:	
  5348                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  5349                           
  5350  047B  1914               	btfsc	20,2	;volatile
  5351  047C  2C7B               	goto	l89
  5352                           
  5353                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  5354  047D  3000               	movlw	0
  5355  047E  1B16               	btfsc	22,6	;volatile
  5356  047F  3001               	movlw	1
  5357  0480  00F9               	movwf	I2C1_Transmit@result
  5358                           
  5359                           ;I2C1.c: 76: if (result)
  5360  0481  0879               	movf	I2C1_Transmit@result,w
  5361  0482  1903               	btfsc	3,2
  5362  0483  2C63               	goto	l3365
  5363                           
  5364                           ;I2C1.c: 77: {
  5365                           ;I2C1.c: 78: result = 2;
  5366  0484  3002               	movlw	2
  5367  0485  00F4               	movwf	??_I2C1_Transmit
  5368  0486  0874               	movf	??_I2C1_Transmit,w
  5369  0487  00F9               	movwf	I2C1_Transmit@result
  5370  0488                     l3369:	
  5371                           ;I2C1.c: 80: }
  5372                           ;I2C1.c: 81: }
  5373                           ;I2C1.c: 82: }
  5374                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5375                           
  5376  0488  3005               	movlw	5
  5377  0489  0514               	andwf	20,w	;volatile
  5378  048A  00F4               	movwf	??_I2C1_Transmit
  5379  048B  0816               	movf	22,w	;volatile
  5380  048C  391F               	andlw	31
  5381  048D  0474               	iorwf	??_I2C1_Transmit,w
  5382  048E  1D03               	btfss	3,2
  5383  048F  2C88               	goto	l3369
  5384                           
  5385                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  5386  0490  1516               	bsf	22,2	;volatile
  5387                           
  5388                           ;I2C1.c: 86: break;
  5389  0491  2CBE               	goto	l3389
  5390  0492                     l98:	
  5391                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  5392                           
  5393                           
  5394                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  5395  0492  0024               	movlb	4	; select bank4
  5396  0493  1D94               	btfss	20,3	;volatile
  5397  0494  1E14               	btfss	20,4	;volatile
  5398  0495  2CB3               	goto	l3383
  5399                           
  5400                           ;I2C1.c: 90: {
  5401                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  5402  0496  01F8               	clrf	I2C1_Transmit@i_167
  5403  0497                     l3379:	
  5404  0497  0873               	movf	I2C1_Transmit@size,w
  5405  0498  0278               	subwf	I2C1_Transmit@i_167,w
  5406  0499  1803               	btfsc	3,0
  5407  049A  2CAE               	goto	l3381
  5408                           
  5409                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  5410  049B  0878               	movf	I2C1_Transmit@i_167,w
  5411  049C  0772               	addwf	I2C1_Transmit@pData,w
  5412  049D  00F4               	movwf	??_I2C1_Transmit
  5413  049E  0874               	movf	??_I2C1_Transmit,w
  5414  049F  0086               	movwf	6
  5415  04A0  0187               	clrf	7
  5416  04A1  0801               	movf	1,w
  5417  04A2  00F5               	movwf	??_I2C1_Transmit+1
  5418  04A3  0878               	movf	I2C1_Transmit@i_167,w
  5419  04A4  3EB3               	addlw	(low (_I2C1_Config| 0))& (0+255)
  5420  04A5  0086               	movwf	6
  5421  04A6  0187               	clrf	7
  5422  04A7  0875               	movf	??_I2C1_Transmit+1,w
  5423  04A8  0081               	movwf	1
  5424  04A9  3001               	movlw	1
  5425  04AA  00F4               	movwf	??_I2C1_Transmit
  5426  04AB  0874               	movf	??_I2C1_Transmit,w
  5427  04AC  07F8               	addwf	I2C1_Transmit@i_167,f
  5428  04AD  2C97               	goto	l3379
  5429  04AE                     l3381:	
  5430                           
  5431                           ;I2C1.c: 93: result = size;
  5432  04AE  0873               	movf	I2C1_Transmit@size,w
  5433  04AF  00F4               	movwf	??_I2C1_Transmit
  5434  04B0  0874               	movf	??_I2C1_Transmit,w
  5435  04B1  00F9               	movwf	I2C1_Transmit@result
  5436                           
  5437                           ;I2C1.c: 94: }
  5438  04B2  2CBE               	goto	l3389
  5439  04B3                     l3383:	
  5440                           
  5441                           ;I2C1.c: 95: else
  5442                           ;I2C1.c: 96: result = 0;
  5443  04B3  01F9               	clrf	I2C1_Transmit@result
  5444                           
  5445                           ;I2C1.c: 98: }
  5446                           
  5447                           ;I2C1.c: 97: break;
  5448  04B4  2CBE               	goto	l3389
  5449  04B5                     l3387:	
  5450  04B5  0021               	movlb	1	; select bank1
  5451  04B6  0845               	movf	(_I2C1_Config^(0+128)+18),w
  5452                           
  5453                           ; Switch size 1, requested type "space"
  5454                           ; Number of cases is 2, Range of values is 0 to 1
  5455                           ; switch strategies available:
  5456                           ; Name         Instructions Cycles
  5457                           ; simple_byte            7     4 (average)
  5458                           ; direct_byte           10     6 (fixed)
  5459                           ; jumptable            260     6 (fixed)
  5460                           ;	Chosen strategy is simple_byte
  5461  04B7  3A00               	xorlw	0	; case 0
  5462  04B8  1903               	skipnz
  5463  04B9  2C44               	goto	l3343
  5464  04BA  3A01               	xorlw	1	; case 1
  5465  04BB  1903               	skipnz
  5466  04BC  2C92               	goto	l98
  5467  04BD  2CBE               	goto	l3389
  5468  04BE                     l3389:	
  5469                           
  5470                           ;I2C1.c: 100: return result;
  5471  04BE  0879               	movf	I2C1_Transmit@result,w
  5472  04BF  0008               	return
  5473  04C0                     __end_of_I2C1_Transmit:	
  5474                           
  5475                           	psect	text18
  5476  0FD7                     __ptext18:	
  5477 ;; *************** function _I2C_Init *****************
  5478 ;; Defined at:
  5479 ;;		line 6 in file "I2C_Common.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  I2Cx            1    wreg     enum E3054
  5482 ;;  address         1    7[COMMON] unsigned char 
  5483 ;;  mode            1    8[COMMON] enum E3045
  5484 ;;  Speed           1    9[COMMON] enum E3049
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;  I2Cx            1   10[COMMON] enum E3054
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5496 ;;      Params:         3       0       0       0       0       0
  5497 ;;      Locals:         1       0       0       0       0       0
  5498 ;;      Temps:          0       2       0       0       0       0
  5499 ;;      Totals:         4       2       0       0       0       0
  5500 ;;Total ram usage:        6 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    5
  5503 ;; This function calls:
  5504 ;;		_I2C1_Setting
  5505 ;;		_I2C2_Setting
  5506 ;; This function is called by:
  5507 ;;		_DAC_Initialize
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           
  5512                           ;psect for function _I2C_Init
  5513  0FD7                     _I2C_Init:	
  5514                           
  5515                           ;incstack = 0
  5516                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5517                           ;I2C_Init@I2Cx stored from wreg
  5518  0FD7  00FA               	movwf	I2C_Init@I2Cx
  5519                           
  5520                           ;I2C_Common.c: 8: switch(I2Cx)
  5521  0FD8  2FF5               	goto	l3507
  5522  0FD9                     l3501:	
  5523                           ;I2C_Common.c: 9: {
  5524                           ;I2C_Common.c: 10: case I2C1_MODULE:
  5525                           
  5526                           
  5527                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  5528  0FD9  0878               	movf	I2C_Init@mode,w
  5529  0FDA  0020               	movlb	0	; select bank0
  5530  0FDB  00A0               	movwf	??_I2C_Init
  5531  0FDC  0820               	movf	??_I2C_Init,w
  5532  0FDD  00F3               	movwf	I2C1_Setting@mode
  5533  0FDE  0879               	movf	I2C_Init@Speed,w
  5534  0FDF  00A1               	movwf	??_I2C_Init+1
  5535  0FE0  0821               	movf	??_I2C_Init+1,w
  5536  0FE1  00F4               	movwf	I2C1_Setting@Speed
  5537  0FE2  0877               	movf	I2C_Init@address,w
  5538  0FE3  3187  2719  318F   	fcall	_I2C1_Setting
  5539                           
  5540                           ;I2C_Common.c: 12: break;
  5541  0FE6  2FFD               	goto	l327
  5542  0FE7                     l3503:	
  5543                           ;I2C_Common.c: 14: case I2C2_MODULE:
  5544                           
  5545                           
  5546                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  5547  0FE7  0878               	movf	I2C_Init@mode,w
  5548  0FE8  0020               	movlb	0	; select bank0
  5549  0FE9  00A0               	movwf	??_I2C_Init
  5550  0FEA  0820               	movf	??_I2C_Init,w
  5551  0FEB  00F3               	movwf	I2C2_Setting@mode
  5552  0FEC  0879               	movf	I2C_Init@Speed,w
  5553  0FED  00A1               	movwf	??_I2C_Init+1
  5554  0FEE  0821               	movf	??_I2C_Init+1,w
  5555  0FEF  00F4               	movwf	I2C2_Setting@Speed
  5556  0FF0  0877               	movf	I2C_Init@address,w
  5557  0FF1  3186  26E1  318F   	fcall	_I2C2_Setting
  5558                           
  5559                           ;I2C_Common.c: 17: }
  5560                           
  5561                           ;I2C_Common.c: 16: break;
  5562  0FF4  2FFD               	goto	l327
  5563  0FF5                     l3507:	
  5564  0FF5  087A               	movf	I2C_Init@I2Cx,w
  5565                           
  5566                           ; Switch size 1, requested type "space"
  5567                           ; Number of cases is 2, Range of values is 0 to 1
  5568                           ; switch strategies available:
  5569                           ; Name         Instructions Cycles
  5570                           ; simple_byte            7     4 (average)
  5571                           ; direct_byte           10     6 (fixed)
  5572                           ; jumptable            260     6 (fixed)
  5573                           ;	Chosen strategy is simple_byte
  5574  0FF6  3A00               	xorlw	0	; case 0
  5575  0FF7  1903               	skipnz
  5576  0FF8  2FD9               	goto	l3501
  5577  0FF9  3A01               	xorlw	1	; case 1
  5578  0FFA  1903               	skipnz
  5579  0FFB  2FE7               	goto	l3503
  5580  0FFC  2FFD               	goto	l327
  5581  0FFD                     l327:	
  5582                           
  5583                           ;I2C_Common.c: 19: PEIE = 1;
  5584  0FFD  170B               	bsf	11,6	;volatile
  5585                           
  5586                           ;I2C_Common.c: 20: GIE = 1;
  5587  0FFE  178B               	bsf	11,7	;volatile
  5588  0FFF  0008               	return
  5589  1000                     __end_of_I2C_Init:	
  5590                           
  5591                           	psect	text19
  5592  06E1                     __ptext19:	
  5593 ;; *************** function _I2C2_Setting *****************
  5594 ;; Defined at:
  5595 ;;		line 15 in file "I2C2.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  address         1    wreg     unsigned char 
  5598 ;;  mode            1    3[COMMON] enum E3045
  5599 ;;  Speed           1    4[COMMON] enum E3049
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  address         1    6[COMMON] unsigned char 
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      void 
  5604 ;; Registers used:
  5605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5611 ;;      Params:         2       0       0       0       0       0
  5612 ;;      Locals:         1       0       0       0       0       0
  5613 ;;      Temps:          1       0       0       0       0       0
  5614 ;;      Totals:         4       0       0       0       0       0
  5615 ;;Total ram usage:        4 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:    4
  5618 ;; This function calls:
  5619 ;;		_I2C2_PinInit
  5620 ;; This function is called by:
  5621 ;;		_I2C_Init
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           
  5626                           ;psect for function _I2C2_Setting
  5627  06E1                     _I2C2_Setting:	
  5628                           
  5629                           ;incstack = 0
  5630                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5631                           ;I2C2_Setting@address stored from wreg
  5632  06E1  00F6               	movwf	I2C2_Setting@address
  5633                           
  5634                           ;I2C2.c: 17: I2C2_PinInit();
  5635  06E2  318E  26FC  3186   	fcall	_I2C2_PinInit
  5636                           
  5637                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  5638  06E5  0873               	movf	I2C2_Setting@mode,w
  5639  06E6  00F5               	movwf	??_I2C2_Setting
  5640  06E7  0875               	movf	??_I2C2_Setting,w
  5641  06E8  0021               	movlb	1	; select bank1
  5642  06E9  00B2               	movwf	(_I2C2_Config^(0+128)+18)
  5643                           
  5644                           ;I2C2.c: 20: switch(mode)
  5645  06EA  2F0A               	goto	l3425
  5646  06EB                     l200:	
  5647                           ;I2C2.c: 21: {
  5648                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  5649                           
  5650                           
  5651                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  5652  06EB  0024               	movlb	4	; select bank4
  5653  06EC  159D               	bsf	29,3	;volatile
  5654                           
  5655                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5656  06ED  0874               	movf	I2C2_Setting@Speed,w
  5657  06EE  1D03               	btfss	3,2
  5658  06EF  2EF3               	goto	l3403
  5659                           
  5660                           ;I2C2.c: 25: {
  5661                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  5662  06F0  179C               	bsf	28,7	;volatile
  5663                           
  5664                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  5665  06F1  304F               	movlw	79
  5666  06F2  2EFB               	goto	L8
  5667  06F3                     l3403:	
  5668                           ;I2C2.c: 28: }
  5669                           
  5670                           
  5671                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5672  06F3  0374               	decf	I2C2_Setting@Speed,w
  5673  06F4  1D03               	btfss	3,2
  5674  06F5  2F08               	goto	l3421
  5675                           
  5676                           ;I2C2.c: 30: {
  5677                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  5678  06F6  307F               	movlw	127
  5679  06F7  00F5               	movwf	??_I2C2_Setting
  5680  06F8  0875               	movf	??_I2C2_Setting,w
  5681  06F9  059C               	andwf	28,f	;volatile
  5682                           
  5683                           ;I2C2.c: 32: SSP2ADD = 0x13;
  5684  06FA  3013               	movlw	19
  5685  06FB                     L8:	
  5686  06FB  009A               	movwf	26	;volatile
  5687  06FC  2F08               	goto	l3421
  5688  06FD                     l3411:	
  5689                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  5690                           
  5691                           ;I2C2.c: 35: break;
  5692                           
  5693                           ;I2C2.c: 33: }
  5694                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  5695                           
  5696                           
  5697                           ;I2C2.c: 38: SSP2STAT = 0x00;
  5698  06FD  0024               	movlb	4	; select bank4
  5699  06FE  019C               	clrf	28	;volatile
  5700                           
  5701                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  5702  06FF  3006               	movlw	6
  5703  0700  00F5               	movwf	??_I2C2_Setting
  5704  0701  0875               	movf	??_I2C2_Setting,w
  5705  0702  049D               	iorwf	29,f	;volatile
  5706                           
  5707                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  5708  0703  141E               	bsf	30,0	;volatile
  5709                           
  5710                           ;I2C2.c: 41: SSP2ADD = address << 1;
  5711  0704  3576               	lslf	I2C2_Setting@address,w
  5712  0705  009A               	movwf	26	;volatile
  5713                           
  5714                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  5715  0706  30FE               	movlw	254
  5716  0707  009B               	movwf	27	;volatile
  5717  0708                     l3421:	
  5718                           
  5719                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  5720  0708  169D               	bsf	29,5	;volatile
  5721                           
  5722                           ;I2C2.c: 45: }
  5723                           
  5724                           ;I2C2.c: 44: break;
  5725  0709  2F12               	goto	l204
  5726  070A                     l3425:	
  5727  070A  0873               	movf	I2C2_Setting@mode,w
  5728                           
  5729                           ; Switch size 1, requested type "space"
  5730                           ; Number of cases is 2, Range of values is 0 to 1
  5731                           ; switch strategies available:
  5732                           ; Name         Instructions Cycles
  5733                           ; simple_byte            7     4 (average)
  5734                           ; direct_byte           10     6 (fixed)
  5735                           ; jumptable            260     6 (fixed)
  5736                           ;	Chosen strategy is simple_byte
  5737  070B  3A00               	xorlw	0	; case 0
  5738  070C  1903               	skipnz
  5739  070D  2EEB               	goto	l200
  5740  070E  3A01               	xorlw	1	; case 1
  5741  070F  1903               	skipnz
  5742  0710  2EFD               	goto	l3411
  5743  0711  2F12               	goto	l204
  5744  0712                     l204:	
  5745                           
  5746                           ;I2C2.c: 46: SSP2IE = 1;
  5747  0712  0021               	movlb	1	; select bank1
  5748  0713  1414               	bsf	20,0	;volatile
  5749                           
  5750                           ;I2C2.c: 47: BCL2IE = 1;
  5751  0714  1494               	bsf	20,1	;volatile
  5752                           
  5753                           ;I2C2.c: 48: SSP2IF = 0;
  5754  0715  0020               	movlb	0	; select bank0
  5755  0716  1014               	bcf	20,0	;volatile
  5756                           
  5757                           ;I2C2.c: 49: BCL2IF = 0;
  5758  0717  1094               	bcf	20,1	;volatile
  5759  0718  0008               	return
  5760  0719                     __end_of_I2C2_Setting:	
  5761                           
  5762                           	psect	text20
  5763  0EFC                     __ptext20:	
  5764 ;; *************** function _I2C2_PinInit *****************
  5765 ;; Defined at:
  5766 ;;		line 9 in file "I2C2.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;		None
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  1    wreg      void 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5780 ;;      Params:         0       0       0       0       0       0
  5781 ;;      Locals:         0       0       0       0       0       0
  5782 ;;      Temps:          1       0       0       0       0       0
  5783 ;;      Totals:         1       0       0       0       0       0
  5784 ;;Total ram usage:        1 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    3
  5787 ;; This function calls:
  5788 ;;		Nothing
  5789 ;; This function is called by:
  5790 ;;		_I2C2_Setting
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function _I2C2_PinInit
  5796  0EFC                     _I2C2_PinInit:	
  5797                           
  5798                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  5799                           
  5800                           ;incstack = 0
  5801                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  5802  0EFC  3024               	movlw	36
  5803  0EFD  00F2               	movwf	??_I2C2_PinInit
  5804  0EFE  0872               	movf	??_I2C2_PinInit,w
  5805  0EFF  0021               	movlb	1	; select bank1
  5806  0F00  048D               	iorwf	13,f	;volatile
  5807                           
  5808                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  5809  0F01  30DB               	movlw	219
  5810  0F02  00F2               	movwf	??_I2C2_PinInit
  5811  0F03  0872               	movf	??_I2C2_PinInit,w
  5812  0F04  0023               	movlb	3	; select bank3
  5813  0F05  058D               	andwf	13,f	;volatile
  5814  0F06  0008               	return
  5815  0F07                     __end_of_I2C2_PinInit:	
  5816                           
  5817                           	psect	text21
  5818  0719                     __ptext21:	
  5819 ;; *************** function _I2C1_Setting *****************
  5820 ;; Defined at:
  5821 ;;		line 15 in file "I2C1.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;  address         1    wreg     unsigned char 
  5824 ;;  mode            1    3[COMMON] enum E3045
  5825 ;;  Speed           1    4[COMMON] enum E3049
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  address         1    6[COMMON] unsigned char 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  1    wreg      void 
  5830 ;; Registers used:
  5831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5837 ;;      Params:         2       0       0       0       0       0
  5838 ;;      Locals:         1       0       0       0       0       0
  5839 ;;      Temps:          1       0       0       0       0       0
  5840 ;;      Totals:         4       0       0       0       0       0
  5841 ;;Total ram usage:        4 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    4
  5844 ;; This function calls:
  5845 ;;		_I2C1_PinInit
  5846 ;; This function is called by:
  5847 ;;		_I2C_Init
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           
  5852                           ;psect for function _I2C1_Setting
  5853  0719                     _I2C1_Setting:	
  5854                           
  5855                           ;incstack = 0
  5856                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5857                           ;I2C1_Setting@address stored from wreg
  5858  0719  00F6               	movwf	I2C1_Setting@address
  5859                           
  5860                           ;I2C1.c: 17: I2C1_PinInit();
  5861  071A  318E  26F1  3187   	fcall	_I2C1_PinInit
  5862                           
  5863                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  5864  071D  0873               	movf	I2C1_Setting@mode,w
  5865  071E  00F5               	movwf	??_I2C1_Setting
  5866  071F  0875               	movf	??_I2C1_Setting,w
  5867  0720  0021               	movlb	1	; select bank1
  5868  0721  00C5               	movwf	(_I2C1_Config^(0+128)+18)
  5869                           
  5870                           ;I2C1.c: 20: switch(mode)
  5871  0722  2F42               	goto	l3339
  5872  0723                     l63:	
  5873                           ;I2C1.c: 21: {
  5874                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  5875                           
  5876                           
  5877                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  5878  0723  0024               	movlb	4	; select bank4
  5879  0724  1595               	bsf	21,3	;volatile
  5880                           
  5881                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5882  0725  0874               	movf	I2C1_Setting@Speed,w
  5883  0726  1D03               	btfss	3,2
  5884  0727  2F2B               	goto	l3317
  5885                           
  5886                           ;I2C1.c: 25: {
  5887                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  5888  0728  1794               	bsf	20,7	;volatile
  5889                           
  5890                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  5891  0729  304F               	movlw	79
  5892  072A  2F33               	goto	L9
  5893  072B                     l3317:	
  5894                           ;I2C1.c: 28: }
  5895                           
  5896                           
  5897                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5898  072B  0374               	decf	I2C1_Setting@Speed,w
  5899  072C  1D03               	btfss	3,2
  5900  072D  2F40               	goto	l3335
  5901                           
  5902                           ;I2C1.c: 30: {
  5903                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  5904  072E  307F               	movlw	127
  5905  072F  00F5               	movwf	??_I2C1_Setting
  5906  0730  0875               	movf	??_I2C1_Setting,w
  5907  0731  0594               	andwf	20,f	;volatile
  5908                           
  5909                           ;I2C1.c: 32: SSP1ADD = 0x13;
  5910  0732  3013               	movlw	19
  5911  0733                     L9:	
  5912  0733  0092               	movwf	18	;volatile
  5913  0734  2F40               	goto	l3335
  5914  0735                     l3325:	
  5915                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  5916                           
  5917                           ;I2C1.c: 35: break;
  5918                           
  5919                           ;I2C1.c: 33: }
  5920                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  5921                           
  5922                           
  5923                           ;I2C1.c: 38: SSP1STAT = 0x00;
  5924  0735  0024               	movlb	4	; select bank4
  5925  0736  0194               	clrf	20	;volatile
  5926                           
  5927                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  5928  0737  3006               	movlw	6
  5929  0738  00F5               	movwf	??_I2C1_Setting
  5930  0739  0875               	movf	??_I2C1_Setting,w
  5931  073A  0495               	iorwf	21,f	;volatile
  5932                           
  5933                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  5934  073B  1416               	bsf	22,0	;volatile
  5935                           
  5936                           ;I2C1.c: 41: SSP1ADD = address << 1;
  5937  073C  3576               	lslf	I2C1_Setting@address,w
  5938  073D  0092               	movwf	18	;volatile
  5939                           
  5940                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  5941  073E  30FE               	movlw	254
  5942  073F  0093               	movwf	19	;volatile
  5943  0740                     l3335:	
  5944                           
  5945                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  5946  0740  1695               	bsf	21,5	;volatile
  5947                           
  5948                           ;I2C1.c: 45: }
  5949                           
  5950                           ;I2C1.c: 44: break;
  5951  0741  2F4A               	goto	l67
  5952  0742                     l3339:	
  5953  0742  0873               	movf	I2C1_Setting@mode,w
  5954                           
  5955                           ; Switch size 1, requested type "space"
  5956                           ; Number of cases is 2, Range of values is 0 to 1
  5957                           ; switch strategies available:
  5958                           ; Name         Instructions Cycles
  5959                           ; simple_byte            7     4 (average)
  5960                           ; direct_byte           10     6 (fixed)
  5961                           ; jumptable            260     6 (fixed)
  5962                           ;	Chosen strategy is simple_byte
  5963  0743  3A00               	xorlw	0	; case 0
  5964  0744  1903               	skipnz
  5965  0745  2F23               	goto	l63
  5966  0746  3A01               	xorlw	1	; case 1
  5967  0747  1903               	skipnz
  5968  0748  2F35               	goto	l3325
  5969  0749  2F4A               	goto	l67
  5970  074A                     l67:	
  5971                           
  5972                           ;I2C1.c: 46: SSP1IE = 1;
  5973  074A  0021               	movlb	1	; select bank1
  5974  074B  1591               	bsf	17,3	;volatile
  5975                           
  5976                           ;I2C1.c: 47: BCL1IE = 1;
  5977  074C  1592               	bsf	18,3	;volatile
  5978                           
  5979                           ;I2C1.c: 48: SSP1IF = 0;
  5980  074D  0020               	movlb	0	; select bank0
  5981  074E  1191               	bcf	17,3	;volatile
  5982                           
  5983                           ;I2C1.c: 49: BCL1IF = 0;
  5984  074F  1192               	bcf	18,3	;volatile
  5985  0750  0008               	return
  5986  0751                     __end_of_I2C1_Setting:	
  5987                           
  5988                           	psect	text22
  5989  0EF1                     __ptext22:	
  5990 ;; *************** function _I2C1_PinInit *****************
  5991 ;; Defined at:
  5992 ;;		line 9 in file "I2C1.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;		None
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      void 
  5999 ;; Registers used:
  6000 ;;		wreg, status,2, status,0
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6006 ;;      Params:         0       0       0       0       0       0
  6007 ;;      Locals:         0       0       0       0       0       0
  6008 ;;      Temps:          1       0       0       0       0       0
  6009 ;;      Totals:         1       0       0       0       0       0
  6010 ;;Total ram usage:        1 bytes
  6011 ;; Hardware stack levels used:    1
  6012 ;; Hardware stack levels required when called:    3
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_I2C1_Setting
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           
  6021                           ;psect for function _I2C1_PinInit
  6022  0EF1                     _I2C1_PinInit:	
  6023                           
  6024                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  6025                           
  6026                           ;incstack = 0
  6027                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  6028  0EF1  3012               	movlw	18
  6029  0EF2  00F2               	movwf	??_I2C1_PinInit
  6030  0EF3  0872               	movf	??_I2C1_PinInit,w
  6031  0EF4  0021               	movlb	1	; select bank1
  6032  0EF5  048D               	iorwf	13,f	;volatile
  6033                           
  6034                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  6035  0EF6  30ED               	movlw	237
  6036  0EF7  00F2               	movwf	??_I2C1_PinInit
  6037  0EF8  0872               	movf	??_I2C1_PinInit,w
  6038  0EF9  0023               	movlb	3	; select bank3
  6039  0EFA  058D               	andwf	13,f	;volatile
  6040  0EFB  0008               	return
  6041  0EFC                     __end_of_I2C1_PinInit:	
  6042                           
  6043                           	psect	text23
  6044  0FB5                     __ptext23:	
  6045 ;; *************** function _Buzer_Init *****************
  6046 ;; Defined at:
  6047 ;;		line 9 in file "Buzer.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;		None
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;		None
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  1    wreg      void 
  6054 ;; Registers used:
  6055 ;;		wreg, status,2, status,0
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6061 ;;      Params:         0       0       0       0       0       0
  6062 ;;      Locals:         0       0       0       0       0       0
  6063 ;;      Temps:          1       0       0       0       0       0
  6064 ;;      Totals:         1       0       0       0       0       0
  6065 ;;Total ram usage:        1 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:    3
  6068 ;; This function calls:
  6069 ;;		Nothing
  6070 ;; This function is called by:
  6071 ;;		_main
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           
  6076                           ;psect for function _Buzer_Init
  6077  0FB5                     _Buzer_Init:	
  6078                           
  6079                           ;Buzer.c: 11: TRISA &= ~(0x01<<7);
  6080                           
  6081                           ;incstack = 0
  6082                           ; Regs used in _Buzer_Init: [wreg+status,2+status,0]
  6083  0FB5  307F               	movlw	127
  6084  0FB6  00F2               	movwf	??_Buzer_Init
  6085  0FB7  0872               	movf	??_Buzer_Init,w
  6086  0FB8  0021               	movlb	1	; select bank1
  6087  0FB9  058C               	andwf	12,f	;volatile
  6088                           
  6089                           ;Buzer.c: 12: ANSELA &= ~(0x01<<7);
  6090  0FBA  307F               	movlw	127
  6091  0FBB  00F2               	movwf	??_Buzer_Init
  6092  0FBC  0872               	movf	??_Buzer_Init,w
  6093  0FBD  0023               	movlb	3	; select bank3
  6094  0FBE  058C               	andwf	12,f	;volatile
  6095                           
  6096                           ;Buzer.c: 13: APFCON0 |= (0x01<<3);
  6097  0FBF  0022               	movlb	2	; select bank2
  6098  0FC0  159D               	bsf	29,3	;volatile
  6099                           
  6100                           ;Buzer.c: 15: T2CON |= (0x00<<3);
  6101  0FC1  0020               	movlb	0	; select bank0
  6102  0FC2  081C               	movf	28,w	;volatile
  6103                           
  6104                           ;Buzer.c: 16: T2CON |= (0x02<<0);
  6105  0FC3  149C               	bsf	28,1	;volatile
  6106                           
  6107                           ;Buzer.c: 17: T2CON |= (0x01<<2);
  6108  0FC4  151C               	bsf	28,2	;volatile
  6109                           
  6110                           ;Buzer.c: 19: TMR2 = 0x00;
  6111  0FC5  019A               	clrf	26	;volatile
  6112                           
  6113                           ;Buzer.c: 20: PR2 = 0xFF;
  6114  0FC6  30FF               	movlw	255
  6115  0FC7  009B               	movwf	27	;volatile
  6116                           
  6117                           ;Buzer.c: 22: CCP2CON &= ~(0x03<<6);
  6118  0FC8  303F               	movlw	63
  6119  0FC9  00F2               	movwf	??_Buzer_Init
  6120  0FCA  0872               	movf	??_Buzer_Init,w
  6121  0FCB  0025               	movlb	5	; select bank5
  6122  0FCC  059A               	andwf	26,f	;volatile
  6123                           
  6124                           ;Buzer.c: 23: CCP2CON |= (0x0C<<0);
  6125  0FCD  300C               	movlw	12
  6126  0FCE  00F2               	movwf	??_Buzer_Init
  6127  0FCF  0872               	movf	??_Buzer_Init,w
  6128  0FD0  049A               	iorwf	26,f	;volatile
  6129                           
  6130                           ;Buzer.c: 24: CCPTMRS &= ~(0x03<<2);
  6131  0FD1  30F3               	movlw	243
  6132  0FD2  00F2               	movwf	??_Buzer_Init
  6133  0FD3  0872               	movf	??_Buzer_Init,w
  6134  0FD4  059E               	andwf	30,f	;volatile
  6135                           
  6136                           ;Buzer.c: 26: CCPR2L = 0x00;
  6137  0FD5  0198               	clrf	24	;volatile
  6138  0FD6  0008               	return
  6139  0FD7                     __end_of_Buzer_Init:	
  6140                           
  6141                           	psect	text24
  6142  0F39                     __ptext24:	
  6143 ;; *************** function _Basic_Init *****************
  6144 ;; Defined at:
  6145 ;;		line 38 in file "main.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;		None
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      char 
  6152 ;; Registers used:
  6153 ;;		wreg, status,2
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6159 ;;      Params:         0       0       0       0       0       0
  6160 ;;      Locals:         0       0       0       0       0       0
  6161 ;;      Temps:          0       0       0       0       0       0
  6162 ;;      Totals:         0       0       0       0       0       0
  6163 ;;Total ram usage:        0 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; Hardware stack levels required when called:    3
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_main
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           
  6174                           ;psect for function _Basic_Init
  6175  0F39                     _Basic_Init:	
  6176                           
  6177                           ;main.c: 40: OSCCON = 0xF0;
  6178                           
  6179                           ;incstack = 0
  6180                           ; Regs used in _Basic_Init: [wreg+status,2]
  6181  0F39  30F0               	movlw	240
  6182  0F3A  0021               	movlb	1	; select bank1
  6183  0F3B  0099               	movwf	25	;volatile
  6184                           
  6185                           ;main.c: 44: TRISA = 0x07;
  6186  0F3C  3007               	movlw	7
  6187  0F3D  008C               	movwf	12	;volatile
  6188                           
  6189                           ;main.c: 45: ANSELA = 0x07;
  6190  0F3E  3007               	movlw	7
  6191  0F3F  0023               	movlb	3	; select bank3
  6192  0F40  008C               	movwf	12	;volatile
  6193                           
  6194                           ;main.c: 47: TRISB = 0x40;
  6195  0F41  3040               	movlw	64
  6196  0F42  0021               	movlb	1	; select bank1
  6197  0F43  008D               	movwf	13	;volatile
  6198                           
  6199                           ;main.c: 48: ANSELB = 0x00;
  6200  0F44  0023               	movlb	3	; select bank3
  6201  0F45  018D               	clrf	13	;volatile
  6202                           
  6203                           ;main.c: 50: APFCON0 = 0x08;
  6204  0F46  3008               	movlw	8
  6205  0F47  0022               	movlb	2	; select bank2
  6206  0F48  009D               	movwf	29	;volatile
  6207                           
  6208                           ;main.c: 51: APFCON1 = 0x00;
  6209  0F49  019E               	clrf	30	;volatile
  6210                           
  6211                           ;main.c: 53: PORTA = 0x00;
  6212  0F4A  0020               	movlb	0	; select bank0
  6213  0F4B  018C               	clrf	12	;volatile
  6214                           
  6215                           ;main.c: 54: PORTB = 0x00;
  6216  0F4C  018D               	clrf	13	;volatile
  6217  0F4D  0008               	return
  6218  0F4E                     __end_of_Basic_Init:	
  6219                           ;main.c: 56: return 0;
  6220                           ;	Return value of _Basic_Init is never used
  6221                           
  6222                           
  6223                           	psect	intentry
  6224  0004                     __pintentry:	
  6225 ;; *************** function _Handler *****************
  6226 ;; Defined at:
  6227 ;;		line 59 in file "main.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;		None
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;		None
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      void 
  6234 ;; Registers used:
  6235 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6241 ;;      Params:         0       0       0       0       0       0
  6242 ;;      Locals:         0       0       0       0       0       0
  6243 ;;      Temps:          1       0       0       0       0       0
  6244 ;;      Totals:         1       0       0       0       0       0
  6245 ;;Total ram usage:        1 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; Hardware stack levels required when called:    2
  6248 ;; This function calls:
  6249 ;;		_I2C_CommonInterrupt
  6250 ;;		_Timer1_Handler
  6251 ;; This function is called by:
  6252 ;;		Interrupt level 1
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256  0004                     _Handler:	
  6257                           
  6258                           ;incstack = 0
  6259  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6260                           
  6261                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6262  0005  3180               	pagesel	$
  6263  0006  0020               	movlb	0	; select bank0
  6264  0007  087F               	movf	127,w
  6265  0008  00F1               	movwf	??_Handler
  6266                           
  6267                           ;main.c: 61: Timer1_Handler();
  6268  0009  318E  26E8  3180   	fcall	_Timer1_Handler
  6269                           
  6270                           ;main.c: 62: I2C_CommonInterrupt();
  6271  000C  318E  26D0         	fcall	_I2C_CommonInterrupt
  6272  000E  0871               	movf	??_Handler,w
  6273  000F  0020               	movlb	0	; select bank0
  6274  0010  00FF               	movwf	127
  6275  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6276  0012  0009               	retfie
  6277  0013                     __end_of_Handler:	
  6278                           
  6279                           	psect	text26
  6280  0EE8                     __ptext26:	
  6281 ;; *************** function _Timer1_Handler *****************
  6282 ;; Defined at:
  6283 ;;		line 33 in file "Timer1.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;		None
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;		None
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      void 
  6290 ;; Registers used:
  6291 ;;		None
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6297 ;;      Params:         0       0       0       0       0       0
  6298 ;;      Locals:         0       0       0       0       0       0
  6299 ;;      Temps:          0       0       0       0       0       0
  6300 ;;      Totals:         0       0       0       0       0       0
  6301 ;;Total ram usage:        0 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_Handler
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           
  6311                           ;psect for function _Timer1_Handler
  6312  0EE8                     _Timer1_Handler:	
  6313                           
  6314                           ;Timer1.c: 35: if(TMR1IF&&TMR1IE)
  6315                           
  6316                           ;incstack = 0
  6317                           ; Regs used in _Timer1_Handler: []
  6318  0EE8  0020               	movlb	0	; select bank0
  6319  0EE9  1C11               	btfss	17,0	;volatile
  6320  0EEA  0008               	return
  6321  0EEB  0021               	movlb	1	; select bank1
  6322  0EEC  1C11               	btfss	17,0	;volatile
  6323  0EED  0008               	return
  6324                           
  6325                           ;Timer1.c: 36: {
  6326                           ;Timer1.c: 37: TMR1IF = 0;
  6327  0EEE  0020               	movlb	0	; select bank0
  6328  0EEF  1011               	bcf	17,0	;volatile
  6329  0EF0  0008               	return
  6330  0EF1                     __end_of_Timer1_Handler:	
  6331                           
  6332                           	psect	text27
  6333  0ED0                     __ptext27:	
  6334 ;; *************** function _I2C_CommonInterrupt *****************
  6335 ;; Defined at:
  6336 ;;		line 58 in file "I2C_Common.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;		None
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6350 ;;      Params:         0       0       0       0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0
  6353 ;;      Totals:         0       0       0       0       0       0
  6354 ;;Total ram usage:        0 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:    1
  6357 ;; This function calls:
  6358 ;;		_I2C1_Interrupt
  6359 ;;		_I2C2_Interrupt
  6360 ;; This function is called by:
  6361 ;;		_Handler
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           
  6366                           ;psect for function _I2C_CommonInterrupt
  6367  0ED0                     _I2C_CommonInterrupt:	
  6368                           
  6369                           ;I2C_Common.c: 60: I2C1_Interrupt();
  6370                           
  6371                           ;incstack = 0
  6372                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6373  0ED0  3185  257F  318E   	fcall	_I2C1_Interrupt
  6374                           
  6375                           ;I2C_Common.c: 61: I2C2_Interrupt();
  6376  0ED3  3185  252B         	fcall	_I2C2_Interrupt
  6377  0ED5  0008               	return
  6378  0ED6                     __end_of_I2C_CommonInterrupt:	
  6379                           
  6380                           	psect	text28
  6381  052B                     __ptext28:	
  6382 ;; *************** function _I2C2_Interrupt *****************
  6383 ;; Defined at:
  6384 ;;		line 152 in file "I2C2.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6398 ;;      Params:         0       0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0
  6400 ;;      Temps:          1       0       0       0       0       0
  6401 ;;      Totals:         1       0       0       0       0       0
  6402 ;;Total ram usage:        1 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_I2C_CommonInterrupt
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           
  6412                           ;psect for function _I2C2_Interrupt
  6413  052B                     _I2C2_Interrupt:	
  6414                           
  6415                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  6416                           
  6417                           ;incstack = 0
  6418                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6419  052B  0020               	movlb	0	; select bank0
  6420  052C  1C14               	btfss	20,0	;volatile
  6421  052D  2D77               	goto	i1l2687
  6422  052E  0021               	movlb	1	; select bank1
  6423  052F  1C14               	btfss	20,0	;volatile
  6424  0530  2D77               	goto	i1l2687
  6425                           
  6426                           ;I2C2.c: 155: {
  6427                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  6428  0531  0024               	movlb	4	; select bank4
  6429  0532  1E9C               	btfss	28,5	;volatile
  6430  0533  2D4E               	goto	i1l283
  6431                           
  6432                           ;I2C2.c: 157: {
  6433                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  6434  0534  1D1C               	btfss	28,2	;volatile
  6435  0535  2D41               	goto	i1l2663
  6436                           
  6437                           ;I2C2.c: 159: {
  6438                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  6439  0536  1B1E               	btfsc	30,6	;volatile
  6440  0537  2D75               	goto	i1l2685
  6441  0538                     i1l2655:	
  6442                           ;I2C2.c: 161: {
  6443                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  6444                           
  6445  0538  081C               	movf	28,w	;volatile
  6446  0539  3901               	andlw	1
  6447  053A  00F0               	movwf	??_I2C2_Interrupt
  6448  053B  0E1D               	swapf	29,w	;volatile
  6449  053C  3901               	andlw	1
  6450  053D  0470               	iorwf	??_I2C2_Interrupt,w
  6451  053E  1D03               	btfss	3,2
  6452  053F  2D38               	goto	i1l2655
  6453  0540  2D61               	goto	L10
  6454  0541                     i1l2663:	
  6455                           ;I2C2.c: 166: }
  6456                           ;I2C2.c: 167: }
  6457                           
  6458                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  6459                           
  6460                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  6461                           
  6462                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  6463                           
  6464                           
  6465                           ;I2C2.c: 168: else
  6466                           ;I2C2.c: 169: {
  6467                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  6468  0541  0819               	movf	25,w	;volatile
  6469  0542  00F0               	movwf	??_I2C2_Interrupt
  6470  0543  0021               	movlb	1	; select bank1
  6471  0544  0831               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  6472  0545  0086               	movwf	6
  6473  0546  0187               	clrf	7
  6474  0547  0870               	movf	??_I2C2_Interrupt,w
  6475  0548  0081               	movwf	1
  6476                           
  6477                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  6478  0549  3001               	movlw	1
  6479  054A  00F0               	movwf	??_I2C2_Interrupt
  6480  054B  0870               	movf	??_I2C2_Interrupt,w
  6481  054C  07B1               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  6482  054D  2D73               	goto	i1l2683
  6483  054E                     i1l283:	
  6484                           ;I2C2.c: 173: }
  6485                           ;I2C2.c: 174: }
  6486                           
  6487                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  6488                           
  6489                           
  6490                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  6491  054E  1A9C               	btfsc	28,5	;volatile
  6492  054F  2D75               	goto	i1l2685
  6493                           
  6494                           ;I2C2.c: 176: {
  6495                           ;I2C2.c: 177: SSP2BUF;
  6496  0550  0819               	movf	25,w	;volatile
  6497                           
  6498                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  6499  0551  1D1C               	btfss	28,2	;volatile
  6500  0552  2D6E               	goto	i1l2681
  6501                           
  6502                           ;I2C2.c: 180: {
  6503                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  6504  0553  30A0               	movlw	(low (_I2C2_Config| 0))& (0+255)
  6505  0554  00F0               	movwf	??_I2C2_Interrupt
  6506  0555  0870               	movf	??_I2C2_Interrupt,w
  6507  0556  0021               	movlb	1	; select bank1
  6508  0557  00B0               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  6509  0558                     i1l2675:	
  6510                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  6511                           
  6512  0558  0024               	movlb	4	; select bank4
  6513  0559  081C               	movf	28,w	;volatile
  6514  055A  3901               	andlw	1
  6515  055B  00F0               	movwf	??_I2C2_Interrupt
  6516  055C  0E1D               	swapf	29,w	;volatile
  6517  055D  3901               	andlw	1
  6518  055E  0470               	iorwf	??_I2C2_Interrupt,w
  6519  055F  1D03               	btfss	3,2
  6520  0560  2D58               	goto	i1l2675
  6521  0561                     L10:	
  6522                           
  6523                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  6524  0561  0021               	movlb	1	; select bank1
  6525  0562  0830               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  6526  0563  0086               	movwf	6
  6527  0564  0187               	clrf	7
  6528  0565  0801               	movf	1,w
  6529  0566  0024               	movlb	4	; select bank4
  6530  0567  0099               	movwf	25	;volatile
  6531                           
  6532                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  6533  0568  3001               	movlw	1
  6534  0569  00F0               	movwf	??_I2C2_Interrupt
  6535  056A  0870               	movf	??_I2C2_Interrupt,w
  6536  056B  0021               	movlb	1	; select bank1
  6537  056C  07B0               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  6538                           
  6539                           ;I2C2.c: 186: }
  6540  056D  2D73               	goto	i1l2683
  6541  056E                     i1l2681:	
  6542                           
  6543                           ;I2C2.c: 187: else
  6544                           ;I2C2.c: 188: {
  6545                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  6546  056E  30A8               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  6547  056F  00F0               	movwf	??_I2C2_Interrupt
  6548  0570  0870               	movf	??_I2C2_Interrupt,w
  6549  0571  0021               	movlb	1	; select bank1
  6550  0572  00B1               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  6551  0573                     i1l2683:	
  6552                           
  6553                           ;I2C2.c: 190: }
  6554                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  6555  0573  0024               	movlb	4	; select bank4
  6556  0574  161D               	bsf	29,4	;volatile
  6557  0575                     i1l2685:	
  6558                           
  6559                           ;I2C2.c: 192: }
  6560                           ;I2C2.c: 193: SSP2IF = 0;
  6561  0575  0020               	movlb	0	; select bank0
  6562  0576  1014               	bcf	20,0	;volatile
  6563  0577                     i1l2687:	
  6564                           
  6565                           ;I2C2.c: 194: }
  6566                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  6567  0577  0021               	movlb	1	; select bank1
  6568  0578  1C94               	btfss	20,1	;volatile
  6569  0579  0008               	return
  6570  057A  0020               	movlb	0	; select bank0
  6571  057B  1C94               	btfss	20,1	;volatile
  6572  057C  0008               	return
  6573                           
  6574                           ;I2C2.c: 197: BCL2IF = 0;
  6575  057D  1094               	bcf	20,1	;volatile
  6576  057E  0008               	return
  6577  057F                     __end_of_I2C2_Interrupt:	
  6578                           
  6579                           	psect	text29
  6580  057F                     __ptext29:	
  6581 ;; *************** function _I2C1_Interrupt *****************
  6582 ;; Defined at:
  6583 ;;		line 152 in file "I2C1.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      void 
  6590 ;; Registers used:
  6591 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6597 ;;      Params:         0       0       0       0       0       0
  6598 ;;      Locals:         0       0       0       0       0       0
  6599 ;;      Temps:          1       0       0       0       0       0
  6600 ;;      Totals:         1       0       0       0       0       0
  6601 ;;Total ram usage:        1 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		_I2C_CommonInterrupt
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           
  6611                           ;psect for function _I2C1_Interrupt
  6612  057F                     _I2C1_Interrupt:	
  6613                           
  6614                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  6615                           
  6616                           ;incstack = 0
  6617                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6618  057F  0020               	movlb	0	; select bank0
  6619  0580  1D91               	btfss	17,3	;volatile
  6620  0581  2DCB               	goto	i1l2637
  6621  0582  0021               	movlb	1	; select bank1
  6622  0583  1D91               	btfss	17,3	;volatile
  6623  0584  2DCB               	goto	i1l2637
  6624                           
  6625                           ;I2C1.c: 155: {
  6626                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  6627  0585  0024               	movlb	4	; select bank4
  6628  0586  1E94               	btfss	20,5	;volatile
  6629  0587  2DA2               	goto	i1l146
  6630                           
  6631                           ;I2C1.c: 157: {
  6632                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  6633  0588  1D14               	btfss	20,2	;volatile
  6634  0589  2D95               	goto	i1l2613
  6635                           
  6636                           ;I2C1.c: 159: {
  6637                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  6638  058A  1B16               	btfsc	22,6	;volatile
  6639  058B  2DC9               	goto	i1l2635
  6640  058C                     i1l2605:	
  6641                           ;I2C1.c: 161: {
  6642                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  6643                           
  6644  058C  0814               	movf	20,w	;volatile
  6645  058D  3901               	andlw	1
  6646  058E  00F0               	movwf	??_I2C1_Interrupt
  6647  058F  0E15               	swapf	21,w	;volatile
  6648  0590  3901               	andlw	1
  6649  0591  0470               	iorwf	??_I2C1_Interrupt,w
  6650  0592  1D03               	btfss	3,2
  6651  0593  2D8C               	goto	i1l2605
  6652  0594  2DB5               	goto	L11
  6653  0595                     i1l2613:	
  6654                           ;I2C1.c: 166: }
  6655                           ;I2C1.c: 167: }
  6656                           
  6657                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  6658                           
  6659                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  6660                           
  6661                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  6662                           
  6663                           
  6664                           ;I2C1.c: 168: else
  6665                           ;I2C1.c: 169: {
  6666                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  6667  0595  0811               	movf	17,w	;volatile
  6668  0596  00F0               	movwf	??_I2C1_Interrupt
  6669  0597  0021               	movlb	1	; select bank1
  6670  0598  0844               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  6671  0599  0086               	movwf	6
  6672  059A  0187               	clrf	7
  6673  059B  0870               	movf	??_I2C1_Interrupt,w
  6674  059C  0081               	movwf	1
  6675                           
  6676                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  6677  059D  3001               	movlw	1
  6678  059E  00F0               	movwf	??_I2C1_Interrupt
  6679  059F  0870               	movf	??_I2C1_Interrupt,w
  6680  05A0  07C4               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  6681  05A1  2DC7               	goto	i1l2633
  6682  05A2                     i1l146:	
  6683                           ;I2C1.c: 173: }
  6684                           ;I2C1.c: 174: }
  6685                           
  6686                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  6687                           
  6688                           
  6689                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  6690  05A2  1A94               	btfsc	20,5	;volatile
  6691  05A3  2DC9               	goto	i1l2635
  6692                           
  6693                           ;I2C1.c: 176: {
  6694                           ;I2C1.c: 177: SSP1BUF;
  6695  05A4  0811               	movf	17,w	;volatile
  6696                           
  6697                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  6698  05A5  1D14               	btfss	20,2	;volatile
  6699  05A6  2DC2               	goto	i1l2631
  6700                           
  6701                           ;I2C1.c: 180: {
  6702                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  6703  05A7  30B3               	movlw	(low (_I2C1_Config| 0))& (0+255)
  6704  05A8  00F0               	movwf	??_I2C1_Interrupt
  6705  05A9  0870               	movf	??_I2C1_Interrupt,w
  6706  05AA  0021               	movlb	1	; select bank1
  6707  05AB  00C3               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  6708  05AC                     i1l2625:	
  6709                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  6710                           
  6711  05AC  0024               	movlb	4	; select bank4
  6712  05AD  0814               	movf	20,w	;volatile
  6713  05AE  3901               	andlw	1
  6714  05AF  00F0               	movwf	??_I2C1_Interrupt
  6715  05B0  0E15               	swapf	21,w	;volatile
  6716  05B1  3901               	andlw	1
  6717  05B2  0470               	iorwf	??_I2C1_Interrupt,w
  6718  05B3  1D03               	btfss	3,2
  6719  05B4  2DAC               	goto	i1l2625
  6720  05B5                     L11:	
  6721                           
  6722                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  6723  05B5  0021               	movlb	1	; select bank1
  6724  05B6  0843               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  6725  05B7  0086               	movwf	6
  6726  05B8  0187               	clrf	7
  6727  05B9  0801               	movf	1,w
  6728  05BA  0024               	movlb	4	; select bank4
  6729  05BB  0091               	movwf	17	;volatile
  6730                           
  6731                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  6732  05BC  3001               	movlw	1
  6733  05BD  00F0               	movwf	??_I2C1_Interrupt
  6734  05BE  0870               	movf	??_I2C1_Interrupt,w
  6735  05BF  0021               	movlb	1	; select bank1
  6736  05C0  07C3               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  6737                           
  6738                           ;I2C1.c: 186: }
  6739  05C1  2DC7               	goto	i1l2633
  6740  05C2                     i1l2631:	
  6741                           
  6742                           ;I2C1.c: 187: else
  6743                           ;I2C1.c: 188: {
  6744                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  6745  05C2  30BB               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  6746  05C3  00F0               	movwf	??_I2C1_Interrupt
  6747  05C4  0870               	movf	??_I2C1_Interrupt,w
  6748  05C5  0021               	movlb	1	; select bank1
  6749  05C6  00C4               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  6750  05C7                     i1l2633:	
  6751                           
  6752                           ;I2C1.c: 190: }
  6753                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  6754  05C7  0024               	movlb	4	; select bank4
  6755  05C8  1615               	bsf	21,4	;volatile
  6756  05C9                     i1l2635:	
  6757                           
  6758                           ;I2C1.c: 192: }
  6759                           ;I2C1.c: 193: SSP1IF = 0;
  6760  05C9  0020               	movlb	0	; select bank0
  6761  05CA  1191               	bcf	17,3	;volatile
  6762  05CB                     i1l2637:	
  6763                           
  6764                           ;I2C1.c: 194: }
  6765                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  6766  05CB  0021               	movlb	1	; select bank1
  6767  05CC  1D92               	btfss	18,3	;volatile
  6768  05CD  0008               	return
  6769  05CE  0020               	movlb	0	; select bank0
  6770  05CF  1D92               	btfss	18,3	;volatile
  6771  05D0  0008               	return
  6772                           
  6773                           ;I2C1.c: 197: BCL1IF = 0;
  6774  05D1  1192               	bcf	18,3	;volatile
  6775  05D2  0008               	return
  6776  05D3                     __end_of_I2C1_Interrupt:	
  6777  007E                     btemp	set	126	;btemp
  6778  007E                     int$flags	set	126
  6779  007E                     wtemp0	set	126


Data Sizes:
    Strings     314
    Constant    30
    Data        90
    BSS         49
=======
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 1.41
    54                           ; Generated 25/01/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1827 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011D                     	;# 
   147  011E                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0199                     	;# 
   160  019A                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  019C                     	;# 
   167  019D                     	;# 
   168  019E                     	;# 
   169  019F                     	;# 
   170  020C                     	;# 
   171  020D                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0212                     	;# 
   176  0213                     	;# 
   177  0213                     	;# 
   178  0214                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0216                     	;# 
   184  0216                     	;# 
   185  0217                     	;# 
   186  0217                     	;# 
   187  0219                     	;# 
   188  021A                     	;# 
   189  021B                     	;# 
   190  021C                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0295                     	;# 
   200  0295                     	;# 
   201  0296                     	;# 
   202  0298                     	;# 
   203  0298                     	;# 
   204  0299                     	;# 
   205  029A                     	;# 
   206  029B                     	;# 
   207  029C                     	;# 
   208  029C                     	;# 
   209  029D                     	;# 
   210  029E                     	;# 
   211  029E                     	;# 
   212  0311                     	;# 
   213  0311                     	;# 
   214  0312                     	;# 
   215  0313                     	;# 
   216  0318                     	;# 
   217  0318                     	;# 
   218  0319                     	;# 
   219  031A                     	;# 
   220  0394                     	;# 
   221  0395                     	;# 
   222  0396                     	;# 
   223  039A                     	;# 
   224  039C                     	;# 
   225  039D                     	;# 
   226  039E                     	;# 
   227  039F                     	;# 
   228  0415                     	;# 
   229  0416                     	;# 
   230  0417                     	;# 
   231  041C                     	;# 
   232  041D                     	;# 
   233  041E                     	;# 
   234  0FE4                     	;# 
   235  0FE5                     	;# 
   236  0FE6                     	;# 
   237  0FE7                     	;# 
   238  0FE8                     	;# 
   239  0FE9                     	;# 
   240  0FEA                     	;# 
   241  0FEB                     	;# 
   242  0FED                     	;# 
   243  0FEE                     	;# 
   244  0FEF                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  0111                     	;# 
   294  0112                     	;# 
   295  0113                     	;# 
   296  0114                     	;# 
   297  0115                     	;# 
   298  0116                     	;# 
   299  0117                     	;# 
   300  0118                     	;# 
   301  0119                     	;# 
   302  011A                     	;# 
   303  011B                     	;# 
   304  011D                     	;# 
   305  011E                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0191                     	;# 
   309  0191                     	;# 
   310  0192                     	;# 
   311  0193                     	;# 
   312  0193                     	;# 
   313  0193                     	;# 
   314  0194                     	;# 
   315  0195                     	;# 
   316  0196                     	;# 
   317  0199                     	;# 
   318  019A                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019C                     	;# 
   324  019C                     	;# 
   325  019D                     	;# 
   326  019E                     	;# 
   327  019F                     	;# 
   328  020C                     	;# 
   329  020D                     	;# 
   330  0211                     	;# 
   331  0211                     	;# 
   332  0212                     	;# 
   333  0212                     	;# 
   334  0213                     	;# 
   335  0213                     	;# 
   336  0214                     	;# 
   337  0214                     	;# 
   338  0215                     	;# 
   339  0215                     	;# 
   340  0215                     	;# 
   341  0216                     	;# 
   342  0216                     	;# 
   343  0217                     	;# 
   344  0217                     	;# 
   345  0219                     	;# 
   346  021A                     	;# 
   347  021B                     	;# 
   348  021C                     	;# 
   349  021D                     	;# 
   350  021E                     	;# 
   351  021F                     	;# 
   352  0291                     	;# 
   353  0291                     	;# 
   354  0292                     	;# 
   355  0293                     	;# 
   356  0294                     	;# 
   357  0295                     	;# 
   358  0295                     	;# 
   359  0296                     	;# 
   360  0298                     	;# 
   361  0298                     	;# 
   362  0299                     	;# 
   363  029A                     	;# 
   364  029B                     	;# 
   365  029C                     	;# 
   366  029C                     	;# 
   367  029D                     	;# 
   368  029E                     	;# 
   369  029E                     	;# 
   370  0311                     	;# 
   371  0311                     	;# 
   372  0312                     	;# 
   373  0313                     	;# 
   374  0318                     	;# 
   375  0318                     	;# 
   376  0319                     	;# 
   377  031A                     	;# 
   378  0394                     	;# 
   379  0395                     	;# 
   380  0396                     	;# 
   381  039A                     	;# 
   382  039C                     	;# 
   383  039D                     	;# 
   384  039E                     	;# 
   385  039F                     	;# 
   386  0415                     	;# 
   387  0416                     	;# 
   388  0417                     	;# 
   389  041C                     	;# 
   390  041D                     	;# 
   391  041E                     	;# 
   392  0FE4                     	;# 
   393  0FE5                     	;# 
   394  0FE6                     	;# 
   395  0FE7                     	;# 
   396  0FE8                     	;# 
   397  0FE9                     	;# 
   398  0FEA                     	;# 
   399  0FEB                     	;# 
   400  0FED                     	;# 
   401  0FEE                     	;# 
   402  0FEF                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  008C                     	;# 
   433  008D                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  0111                     	;# 
   452  0112                     	;# 
   453  0113                     	;# 
   454  0114                     	;# 
   455  0115                     	;# 
   456  0116                     	;# 
   457  0117                     	;# 
   458  0118                     	;# 
   459  0119                     	;# 
   460  011A                     	;# 
   461  011B                     	;# 
   462  011D                     	;# 
   463  011E                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466  0191                     	;# 
   467  0191                     	;# 
   468  0192                     	;# 
   469  0193                     	;# 
   470  0193                     	;# 
   471  0193                     	;# 
   472  0194                     	;# 
   473  0195                     	;# 
   474  0196                     	;# 
   475  0199                     	;# 
   476  019A                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019C                     	;# 
   482  019C                     	;# 
   483  019D                     	;# 
   484  019E                     	;# 
   485  019F                     	;# 
   486  020C                     	;# 
   487  020D                     	;# 
   488  0211                     	;# 
   489  0211                     	;# 
   490  0212                     	;# 
   491  0212                     	;# 
   492  0213                     	;# 
   493  0213                     	;# 
   494  0214                     	;# 
   495  0214                     	;# 
   496  0215                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0216                     	;# 
   500  0216                     	;# 
   501  0217                     	;# 
   502  0217                     	;# 
   503  0219                     	;# 
   504  021A                     	;# 
   505  021B                     	;# 
   506  021C                     	;# 
   507  021D                     	;# 
   508  021E                     	;# 
   509  021F                     	;# 
   510  0291                     	;# 
   511  0291                     	;# 
   512  0292                     	;# 
   513  0293                     	;# 
   514  0294                     	;# 
   515  0295                     	;# 
   516  0295                     	;# 
   517  0296                     	;# 
   518  0298                     	;# 
   519  0298                     	;# 
   520  0299                     	;# 
   521  029A                     	;# 
   522  029B                     	;# 
   523  029C                     	;# 
   524  029C                     	;# 
   525  029D                     	;# 
   526  029E                     	;# 
   527  029E                     	;# 
   528  0311                     	;# 
   529  0311                     	;# 
   530  0312                     	;# 
   531  0313                     	;# 
   532  0318                     	;# 
   533  0318                     	;# 
   534  0319                     	;# 
   535  031A                     	;# 
   536  0394                     	;# 
   537  0395                     	;# 
   538  0396                     	;# 
   539  039A                     	;# 
   540  039C                     	;# 
   541  039D                     	;# 
   542  039E                     	;# 
   543  039F                     	;# 
   544  0415                     	;# 
   545  0416                     	;# 
   546  0417                     	;# 
   547  041C                     	;# 
   548  041D                     	;# 
   549  041E                     	;# 
   550  0FE4                     	;# 
   551  0FE5                     	;# 
   552  0FE6                     	;# 
   553  0FE7                     	;# 
   554  0FE8                     	;# 
   555  0FE9                     	;# 
   556  0FEA                     	;# 
   557  0FEB                     	;# 
   558  0FED                     	;# 
   559  0FEE                     	;# 
   560  0FEF                     	;# 
   561  0000                     	;# 
   562  0001                     	;# 
   563  0002                     	;# 
   564  0003                     	;# 
   565  0004                     	;# 
   566  0005                     	;# 
   567  0006                     	;# 
   568  0007                     	;# 
   569  0008                     	;# 
   570  0009                     	;# 
   571  000A                     	;# 
   572  000B                     	;# 
   573  000C                     	;# 
   574  000D                     	;# 
   575  0011                     	;# 
   576  0012                     	;# 
   577  0013                     	;# 
   578  0014                     	;# 
   579  0015                     	;# 
   580  0016                     	;# 
   581  0016                     	;# 
   582  0017                     	;# 
   583  0018                     	;# 
   584  0019                     	;# 
   585  001A                     	;# 
   586  001B                     	;# 
   587  001C                     	;# 
   588  001E                     	;# 
   589  001F                     	;# 
   590  008C                     	;# 
   591  008D                     	;# 
   592  0091                     	;# 
   593  0092                     	;# 
   594  0093                     	;# 
   595  0094                     	;# 
   596  0095                     	;# 
   597  0096                     	;# 
   598  0097                     	;# 
   599  0098                     	;# 
   600  0099                     	;# 
   601  009A                     	;# 
   602  009B                     	;# 
   603  009B                     	;# 
   604  009C                     	;# 
   605  009D                     	;# 
   606  009E                     	;# 
   607  010C                     	;# 
   608  010D                     	;# 
   609  0111                     	;# 
   610  0112                     	;# 
   611  0113                     	;# 
   612  0114                     	;# 
   613  0115                     	;# 
   614  0116                     	;# 
   615  0117                     	;# 
   616  0118                     	;# 
   617  0119                     	;# 
   618  011A                     	;# 
   619  011B                     	;# 
   620  011D                     	;# 
   621  011E                     	;# 
   622  018C                     	;# 
   623  018D                     	;# 
   624  0191                     	;# 
   625  0191                     	;# 
   626  0192                     	;# 
   627  0193                     	;# 
   628  0193                     	;# 
   629  0193                     	;# 
   630  0194                     	;# 
   631  0195                     	;# 
   632  0196                     	;# 
   633  0199                     	;# 
   634  019A                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019C                     	;# 
   640  019C                     	;# 
   641  019D                     	;# 
   642  019E                     	;# 
   643  019F                     	;# 
   644  020C                     	;# 
   645  020D                     	;# 
   646  0211                     	;# 
   647  0211                     	;# 
   648  0212                     	;# 
   649  0212                     	;# 
   650  0213                     	;# 
   651  0213                     	;# 
   652  0214                     	;# 
   653  0214                     	;# 
   654  0215                     	;# 
   655  0215                     	;# 
   656  0215                     	;# 
   657  0216                     	;# 
   658  0216                     	;# 
   659  0217                     	;# 
   660  0217                     	;# 
   661  0219                     	;# 
   662  021A                     	;# 
   663  021B                     	;# 
   664  021C                     	;# 
   665  021D                     	;# 
   666  021E                     	;# 
   667  021F                     	;# 
   668  0291                     	;# 
   669  0291                     	;# 
   670  0292                     	;# 
   671  0293                     	;# 
   672  0294                     	;# 
   673  0295                     	;# 
   674  0295                     	;# 
   675  0296                     	;# 
   676  0298                     	;# 
   677  0298                     	;# 
   678  0299                     	;# 
   679  029A                     	;# 
   680  029B                     	;# 
   681  029C                     	;# 
   682  029C                     	;# 
   683  029D                     	;# 
   684  029E                     	;# 
   685  029E                     	;# 
   686  0311                     	;# 
   687  0311                     	;# 
   688  0312                     	;# 
   689  0313                     	;# 
   690  0318                     	;# 
   691  0318                     	;# 
   692  0319                     	;# 
   693  031A                     	;# 
   694  0394                     	;# 
   695  0395                     	;# 
   696  0396                     	;# 
   697  039A                     	;# 
   698  039C                     	;# 
   699  039D                     	;# 
   700  039E                     	;# 
   701  039F                     	;# 
   702  0415                     	;# 
   703  0416                     	;# 
   704  0417                     	;# 
   705  041C                     	;# 
   706  041D                     	;# 
   707  041E                     	;# 
   708  0FE4                     	;# 
   709  0FE5                     	;# 
   710  0FE6                     	;# 
   711  0FE7                     	;# 
   712  0FE8                     	;# 
   713  0FE9                     	;# 
   714  0FEA                     	;# 
   715  0FEB                     	;# 
   716  0FED                     	;# 
   717  0FEE                     	;# 
   718  0FEF                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0008                     	;# 
   728  0009                     	;# 
   729  000A                     	;# 
   730  000B                     	;# 
   731  000C                     	;# 
   732  000D                     	;# 
   733  0011                     	;# 
   734  0012                     	;# 
   735  0013                     	;# 
   736  0014                     	;# 
   737  0015                     	;# 
   738  0016                     	;# 
   739  0016                     	;# 
   740  0017                     	;# 
   741  0018                     	;# 
   742  0019                     	;# 
   743  001A                     	;# 
   744  001B                     	;# 
   745  001C                     	;# 
   746  001E                     	;# 
   747  001F                     	;# 
   748  008C                     	;# 
   749  008D                     	;# 
   750  0091                     	;# 
   751  0092                     	;# 
   752  0093                     	;# 
   753  0094                     	;# 
   754  0095                     	;# 
   755  0096                     	;# 
   756  0097                     	;# 
   757  0098                     	;# 
   758  0099                     	;# 
   759  009A                     	;# 
   760  009B                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  0111                     	;# 
   768  0112                     	;# 
   769  0113                     	;# 
   770  0114                     	;# 
   771  0115                     	;# 
   772  0116                     	;# 
   773  0117                     	;# 
   774  0118                     	;# 
   775  0119                     	;# 
   776  011A                     	;# 
   777  011B                     	;# 
   778  011D                     	;# 
   779  011E                     	;# 
   780  018C                     	;# 
   781  018D                     	;# 
   782  0191                     	;# 
   783  0191                     	;# 
   784  0192                     	;# 
   785  0193                     	;# 
   786  0193                     	;# 
   787  0193                     	;# 
   788  0194                     	;# 
   789  0195                     	;# 
   790  0196                     	;# 
   791  0199                     	;# 
   792  019A                     	;# 
   793  019B                     	;# 
   794  019B                     	;# 
   795  019B                     	;# 
   796  019B                     	;# 
   797  019C                     	;# 
   798  019C                     	;# 
   799  019D                     	;# 
   800  019E                     	;# 
   801  019F                     	;# 
   802  020C                     	;# 
   803  020D                     	;# 
   804  0211                     	;# 
   805  0211                     	;# 
   806  0212                     	;# 
   807  0212                     	;# 
   808  0213                     	;# 
   809  0213                     	;# 
   810  0214                     	;# 
   811  0214                     	;# 
   812  0215                     	;# 
   813  0215                     	;# 
   814  0215                     	;# 
   815  0216                     	;# 
   816  0216                     	;# 
   817  0217                     	;# 
   818  0217                     	;# 
   819  0219                     	;# 
   820  021A                     	;# 
   821  021B                     	;# 
   822  021C                     	;# 
   823  021D                     	;# 
   824  021E                     	;# 
   825  021F                     	;# 
   826  0291                     	;# 
   827  0291                     	;# 
   828  0292                     	;# 
   829  0293                     	;# 
   830  0294                     	;# 
   831  0295                     	;# 
   832  0295                     	;# 
   833  0296                     	;# 
   834  0298                     	;# 
   835  0298                     	;# 
   836  0299                     	;# 
   837  029A                     	;# 
   838  029B                     	;# 
   839  029C                     	;# 
   840  029C                     	;# 
   841  029D                     	;# 
   842  029E                     	;# 
   843  029E                     	;# 
   844  0311                     	;# 
   845  0311                     	;# 
   846  0312                     	;# 
   847  0313                     	;# 
   848  0318                     	;# 
   849  0318                     	;# 
   850  0319                     	;# 
   851  031A                     	;# 
   852  0394                     	;# 
   853  0395                     	;# 
   854  0396                     	;# 
   855  039A                     	;# 
   856  039C                     	;# 
   857  039D                     	;# 
   858  039E                     	;# 
   859  039F                     	;# 
   860  0415                     	;# 
   861  0416                     	;# 
   862  0417                     	;# 
   863  041C                     	;# 
   864  041D                     	;# 
   865  041E                     	;# 
   866  0FE4                     	;# 
   867  0FE5                     	;# 
   868  0FE6                     	;# 
   869  0FE7                     	;# 
   870  0FE8                     	;# 
   871  0FE9                     	;# 
   872  0FEA                     	;# 
   873  0FEB                     	;# 
   874  0FED                     	;# 
   875  0FEE                     	;# 
   876  0FEF                     	;# 
   877  0000                     	;# 
   878  0001                     	;# 
   879  0002                     	;# 
   880  0003                     	;# 
   881  0004                     	;# 
   882  0005                     	;# 
   883  0006                     	;# 
   884  0007                     	;# 
   885  0008                     	;# 
   886  0009                     	;# 
   887  000A                     	;# 
   888  000B                     	;# 
   889  000C                     	;# 
   890  000D                     	;# 
   891  0011                     	;# 
   892  0012                     	;# 
   893  0013                     	;# 
   894  0014                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0016                     	;# 
   898  0017                     	;# 
   899  0018                     	;# 
   900  0019                     	;# 
   901  001A                     	;# 
   902  001B                     	;# 
   903  001C                     	;# 
   904  001E                     	;# 
   905  001F                     	;# 
   906  008C                     	;# 
   907  008D                     	;# 
   908  0091                     	;# 
   909  0092                     	;# 
   910  0093                     	;# 
   911  0094                     	;# 
   912  0095                     	;# 
   913  0096                     	;# 
   914  0097                     	;# 
   915  0098                     	;# 
   916  0099                     	;# 
   917  009A                     	;# 
   918  009B                     	;# 
   919  009B                     	;# 
   920  009C                     	;# 
   921  009D                     	;# 
   922  009E                     	;# 
   923  010C                     	;# 
   924  010D                     	;# 
   925  0111                     	;# 
   926  0112                     	;# 
   927  0113                     	;# 
   928  0114                     	;# 
   929  0115                     	;# 
   930  0116                     	;# 
   931  0117                     	;# 
   932  0118                     	;# 
   933  0119                     	;# 
   934  011A                     	;# 
   935  011B                     	;# 
   936  011D                     	;# 
   937  011E                     	;# 
   938  018C                     	;# 
   939  018D                     	;# 
   940  0191                     	;# 
   941  0191                     	;# 
   942  0192                     	;# 
   943  0193                     	;# 
   944  0193                     	;# 
   945  0193                     	;# 
   946  0194                     	;# 
   947  0195                     	;# 
   948  0196                     	;# 
   949  0199                     	;# 
   950  019A                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019B                     	;# 
   954  019B                     	;# 
   955  019C                     	;# 
   956  019C                     	;# 
   957  019D                     	;# 
   958  019E                     	;# 
   959  019F                     	;# 
   960  020C                     	;# 
   961  020D                     	;# 
   962  0211                     	;# 
   963  0211                     	;# 
   964  0212                     	;# 
   965  0212                     	;# 
   966  0213                     	;# 
   967  0213                     	;# 
   968  0214                     	;# 
   969  0214                     	;# 
   970  0215                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0216                     	;# 
   974  0216                     	;# 
   975  0217                     	;# 
   976  0217                     	;# 
   977  0219                     	;# 
   978  021A                     	;# 
   979  021B                     	;# 
   980  021C                     	;# 
   981  021D                     	;# 
   982  021E                     	;# 
   983  021F                     	;# 
   984  0291                     	;# 
   985  0291                     	;# 
   986  0292                     	;# 
   987  0293                     	;# 
   988  0294                     	;# 
   989  0295                     	;# 
   990  0295                     	;# 
   991  0296                     	;# 
   992  0298                     	;# 
   993  0298                     	;# 
   994  0299                     	;# 
   995  029A                     	;# 
   996  029B                     	;# 
   997  029C                     	;# 
   998  029C                     	;# 
   999  029D                     	;# 
  1000  029E                     	;# 
  1001  029E                     	;# 
  1002  0311                     	;# 
  1003  0311                     	;# 
  1004  0312                     	;# 
  1005  0313                     	;# 
  1006  0318                     	;# 
  1007  0318                     	;# 
  1008  0319                     	;# 
  1009  031A                     	;# 
  1010  0394                     	;# 
  1011  0395                     	;# 
  1012  0396                     	;# 
  1013  039A                     	;# 
  1014  039C                     	;# 
  1015  039D                     	;# 
  1016  039E                     	;# 
  1017  039F                     	;# 
  1018  0415                     	;# 
  1019  0416                     	;# 
  1020  0417                     	;# 
  1021  041C                     	;# 
  1022  041D                     	;# 
  1023  041E                     	;# 
  1024  0FE4                     	;# 
  1025  0FE5                     	;# 
  1026  0FE6                     	;# 
  1027  0FE7                     	;# 
  1028  0FE8                     	;# 
  1029  0FE9                     	;# 
  1030  0FEA                     	;# 
  1031  0FEB                     	;# 
  1032  0FED                     	;# 
  1033  0FEE                     	;# 
  1034  0FEF                     	;# 
  1035  0000                     	;# 
  1036  0001                     	;# 
  1037  0002                     	;# 
  1038  0003                     	;# 
  1039  0004                     	;# 
  1040  0005                     	;# 
  1041  0006                     	;# 
  1042  0007                     	;# 
  1043  0008                     	;# 
  1044  0009                     	;# 
  1045  000A                     	;# 
  1046  000B                     	;# 
  1047  000C                     	;# 
  1048  000D                     	;# 
  1049  0011                     	;# 
  1050  0012                     	;# 
  1051  0013                     	;# 
  1052  0014                     	;# 
  1053  0015                     	;# 
  1054  0016                     	;# 
  1055  0016                     	;# 
  1056  0017                     	;# 
  1057  0018                     	;# 
  1058  0019                     	;# 
  1059  001A                     	;# 
  1060  001B                     	;# 
  1061  001C                     	;# 
  1062  001E                     	;# 
  1063  001F                     	;# 
  1064  008C                     	;# 
  1065  008D                     	;# 
  1066  0091                     	;# 
  1067  0092                     	;# 
  1068  0093                     	;# 
  1069  0094                     	;# 
  1070  0095                     	;# 
  1071  0096                     	;# 
  1072  0097                     	;# 
  1073  0098                     	;# 
  1074  0099                     	;# 
  1075  009A                     	;# 
  1076  009B                     	;# 
  1077  009B                     	;# 
  1078  009C                     	;# 
  1079  009D                     	;# 
  1080  009E                     	;# 
  1081  010C                     	;# 
  1082  010D                     	;# 
  1083  0111                     	;# 
  1084  0112                     	;# 
  1085  0113                     	;# 
  1086  0114                     	;# 
  1087  0115                     	;# 
  1088  0116                     	;# 
  1089  0117                     	;# 
  1090  0118                     	;# 
  1091  0119                     	;# 
  1092  011A                     	;# 
  1093  011B                     	;# 
  1094  011D                     	;# 
  1095  011E                     	;# 
  1096  018C                     	;# 
  1097  018D                     	;# 
  1098  0191                     	;# 
  1099  0191                     	;# 
  1100  0192                     	;# 
  1101  0193                     	;# 
  1102  0193                     	;# 
  1103  0193                     	;# 
  1104  0194                     	;# 
  1105  0195                     	;# 
  1106  0196                     	;# 
  1107  0199                     	;# 
  1108  019A                     	;# 
  1109  019B                     	;# 
  1110  019B                     	;# 
  1111  019B                     	;# 
  1112  019B                     	;# 
  1113  019C                     	;# 
  1114  019C                     	;# 
  1115  019D                     	;# 
  1116  019E                     	;# 
  1117  019F                     	;# 
  1118  020C                     	;# 
  1119  020D                     	;# 
  1120  0211                     	;# 
  1121  0211                     	;# 
  1122  0212                     	;# 
  1123  0212                     	;# 
  1124  0213                     	;# 
  1125  0213                     	;# 
  1126  0214                     	;# 
  1127  0214                     	;# 
  1128  0215                     	;# 
  1129  0215                     	;# 
  1130  0215                     	;# 
  1131  0216                     	;# 
  1132  0216                     	;# 
  1133  0217                     	;# 
  1134  0217                     	;# 
  1135  0219                     	;# 
  1136  021A                     	;# 
  1137  021B                     	;# 
  1138  021C                     	;# 
  1139  021D                     	;# 
  1140  021E                     	;# 
  1141  021F                     	;# 
  1142  0291                     	;# 
  1143  0291                     	;# 
  1144  0292                     	;# 
  1145  0293                     	;# 
  1146  0294                     	;# 
  1147  0295                     	;# 
  1148  0295                     	;# 
  1149  0296                     	;# 
  1150  0298                     	;# 
  1151  0298                     	;# 
  1152  0299                     	;# 
  1153  029A                     	;# 
  1154  029B                     	;# 
  1155  029C                     	;# 
  1156  029C                     	;# 
  1157  029D                     	;# 
  1158  029E                     	;# 
  1159  029E                     	;# 
  1160  0311                     	;# 
  1161  0311                     	;# 
  1162  0312                     	;# 
  1163  0313                     	;# 
  1164  0318                     	;# 
  1165  0318                     	;# 
  1166  0319                     	;# 
  1167  031A                     	;# 
  1168  0394                     	;# 
  1169  0395                     	;# 
  1170  0396                     	;# 
  1171  039A                     	;# 
  1172  039C                     	;# 
  1173  039D                     	;# 
  1174  039E                     	;# 
  1175  039F                     	;# 
  1176  0415                     	;# 
  1177  0416                     	;# 
  1178  0417                     	;# 
  1179  041C                     	;# 
  1180  041D                     	;# 
  1181  041E                     	;# 
  1182  0FE4                     	;# 
  1183  0FE5                     	;# 
  1184  0FE6                     	;# 
  1185  0FE7                     	;# 
  1186  0FE8                     	;# 
  1187  0FE9                     	;# 
  1188  0FEA                     	;# 
  1189  0FEB                     	;# 
  1190  0FED                     	;# 
  1191  0FEE                     	;# 
  1192  0FEF                     	;# 
  1193  0000                     	;# 
  1194  0001                     	;# 
  1195  0002                     	;# 
  1196  0003                     	;# 
  1197  0004                     	;# 
  1198  0005                     	;# 
  1199  0006                     	;# 
  1200  0007                     	;# 
  1201  0008                     	;# 
  1202  0009                     	;# 
  1203  000A                     	;# 
  1204  000B                     	;# 
  1205  000C                     	;# 
  1206  000D                     	;# 
  1207  0011                     	;# 
  1208  0012                     	;# 
  1209  0013                     	;# 
  1210  0014                     	;# 
  1211  0015                     	;# 
  1212  0016                     	;# 
  1213  0016                     	;# 
  1214  0017                     	;# 
  1215  0018                     	;# 
  1216  0019                     	;# 
  1217  001A                     	;# 
  1218  001B                     	;# 
  1219  001C                     	;# 
  1220  001E                     	;# 
  1221  001F                     	;# 
  1222  008C                     	;# 
  1223  008D                     	;# 
  1224  0091                     	;# 
  1225  0092                     	;# 
  1226  0093                     	;# 
  1227  0094                     	;# 
  1228  0095                     	;# 
  1229  0096                     	;# 
  1230  0097                     	;# 
  1231  0098                     	;# 
  1232  0099                     	;# 
  1233  009A                     	;# 
  1234  009B                     	;# 
  1235  009B                     	;# 
  1236  009C                     	;# 
  1237  009D                     	;# 
  1238  009E                     	;# 
  1239  010C                     	;# 
  1240  010D                     	;# 
  1241  0111                     	;# 
  1242  0112                     	;# 
  1243  0113                     	;# 
  1244  0114                     	;# 
  1245  0115                     	;# 
  1246  0116                     	;# 
  1247  0117                     	;# 
  1248  0118                     	;# 
  1249  0119                     	;# 
  1250  011A                     	;# 
  1251  011B                     	;# 
  1252  011D                     	;# 
  1253  011E                     	;# 
  1254  018C                     	;# 
  1255  018D                     	;# 
  1256  0191                     	;# 
  1257  0191                     	;# 
  1258  0192                     	;# 
  1259  0193                     	;# 
  1260  0193                     	;# 
  1261  0193                     	;# 
  1262  0194                     	;# 
  1263  0195                     	;# 
  1264  0196                     	;# 
  1265  0199                     	;# 
  1266  019A                     	;# 
  1267  019B                     	;# 
  1268  019B                     	;# 
  1269  019B                     	;# 
  1270  019B                     	;# 
  1271  019C                     	;# 
  1272  019C                     	;# 
  1273  019D                     	;# 
  1274  019E                     	;# 
  1275  019F                     	;# 
  1276  020C                     	;# 
  1277  020D                     	;# 
  1278  0211                     	;# 
  1279  0211                     	;# 
  1280  0212                     	;# 
  1281  0212                     	;# 
  1282  0213                     	;# 
  1283  0213                     	;# 
  1284  0214                     	;# 
  1285  0214                     	;# 
  1286  0215                     	;# 
  1287  0215                     	;# 
  1288  0215                     	;# 
  1289  0216                     	;# 
  1290  0216                     	;# 
  1291  0217                     	;# 
  1292  0217                     	;# 
  1293  0219                     	;# 
  1294  021A                     	;# 
  1295  021B                     	;# 
  1296  021C                     	;# 
  1297  021D                     	;# 
  1298  021E                     	;# 
  1299  021F                     	;# 
  1300  0291                     	;# 
  1301  0291                     	;# 
  1302  0292                     	;# 
  1303  0293                     	;# 
  1304  0294                     	;# 
  1305  0295                     	;# 
  1306  0295                     	;# 
  1307  0296                     	;# 
  1308  0298                     	;# 
  1309  0298                     	;# 
  1310  0299                     	;# 
  1311  029A                     	;# 
  1312  029B                     	;# 
  1313  029C                     	;# 
  1314  029C                     	;# 
  1315  029D                     	;# 
  1316  029E                     	;# 
  1317  029E                     	;# 
  1318  0311                     	;# 
  1319  0311                     	;# 
  1320  0312                     	;# 
  1321  0313                     	;# 
  1322  0318                     	;# 
  1323  0318                     	;# 
  1324  0319                     	;# 
  1325  031A                     	;# 
  1326  0394                     	;# 
  1327  0395                     	;# 
  1328  0396                     	;# 
  1329  039A                     	;# 
  1330  039C                     	;# 
  1331  039D                     	;# 
  1332  039E                     	;# 
  1333  039F                     	;# 
  1334  0415                     	;# 
  1335  0416                     	;# 
  1336  0417                     	;# 
  1337  041C                     	;# 
  1338  041D                     	;# 
  1339  041E                     	;# 
  1340  0FE4                     	;# 
  1341  0FE5                     	;# 
  1342  0FE6                     	;# 
  1343  0FE7                     	;# 
  1344  0FE8                     	;# 
  1345  0FE9                     	;# 
  1346  0FEA                     	;# 
  1347  0FEB                     	;# 
  1348  0FED                     	;# 
  1349  0FEE                     	;# 
  1350  0FEF                     	;# 
  1351  0000                     	;# 
  1352  0001                     	;# 
  1353  0002                     	;# 
  1354  0003                     	;# 
  1355  0004                     	;# 
  1356  0005                     	;# 
  1357  0006                     	;# 
  1358  0007                     	;# 
  1359  0008                     	;# 
  1360  0009                     	;# 
  1361  000A                     	;# 
  1362  000B                     	;# 
  1363  000C                     	;# 
  1364  000D                     	;# 
  1365  0011                     	;# 
  1366  0012                     	;# 
  1367  0013                     	;# 
  1368  0014                     	;# 
  1369  0015                     	;# 
  1370  0016                     	;# 
  1371  0016                     	;# 
  1372  0017                     	;# 
  1373  0018                     	;# 
  1374  0019                     	;# 
  1375  001A                     	;# 
  1376  001B                     	;# 
  1377  001C                     	;# 
  1378  001E                     	;# 
  1379  001F                     	;# 
  1380  008C                     	;# 
  1381  008D                     	;# 
  1382  0091                     	;# 
  1383  0092                     	;# 
  1384  0093                     	;# 
  1385  0094                     	;# 
  1386  0095                     	;# 
  1387  0096                     	;# 
  1388  0097                     	;# 
  1389  0098                     	;# 
  1390  0099                     	;# 
  1391  009A                     	;# 
  1392  009B                     	;# 
  1393  009B                     	;# 
  1394  009C                     	;# 
  1395  009D                     	;# 
  1396  009E                     	;# 
  1397  010C                     	;# 
  1398  010D                     	;# 
  1399  0111                     	;# 
  1400  0112                     	;# 
  1401  0113                     	;# 
  1402  0114                     	;# 
  1403  0115                     	;# 
  1404  0116                     	;# 
  1405  0117                     	;# 
  1406  0118                     	;# 
  1407  0119                     	;# 
  1408  011A                     	;# 
  1409  011B                     	;# 
  1410  011D                     	;# 
  1411  011E                     	;# 
  1412  018C                     	;# 
  1413  018D                     	;# 
  1414  0191                     	;# 
  1415  0191                     	;# 
  1416  0192                     	;# 
  1417  0193                     	;# 
  1418  0193                     	;# 
  1419  0193                     	;# 
  1420  0194                     	;# 
  1421  0195                     	;# 
  1422  0196                     	;# 
  1423  0199                     	;# 
  1424  019A                     	;# 
  1425  019B                     	;# 
  1426  019B                     	;# 
  1427  019B                     	;# 
  1428  019B                     	;# 
  1429  019C                     	;# 
  1430  019C                     	;# 
  1431  019D                     	;# 
  1432  019E                     	;# 
  1433  019F                     	;# 
  1434  020C                     	;# 
  1435  020D                     	;# 
  1436  0211                     	;# 
  1437  0211                     	;# 
  1438  0212                     	;# 
  1439  0212                     	;# 
  1440  0213                     	;# 
  1441  0213                     	;# 
  1442  0214                     	;# 
  1443  0214                     	;# 
  1444  0215                     	;# 
  1445  0215                     	;# 
  1446  0215                     	;# 
  1447  0216                     	;# 
  1448  0216                     	;# 
  1449  0217                     	;# 
  1450  0217                     	;# 
  1451  0219                     	;# 
  1452  021A                     	;# 
  1453  021B                     	;# 
  1454  021C                     	;# 
  1455  021D                     	;# 
  1456  021E                     	;# 
  1457  021F                     	;# 
  1458  0291                     	;# 
  1459  0291                     	;# 
  1460  0292                     	;# 
  1461  0293                     	;# 
  1462  0294                     	;# 
  1463  0295                     	;# 
  1464  0295                     	;# 
  1465  0296                     	;# 
  1466  0298                     	;# 
  1467  0298                     	;# 
  1468  0299                     	;# 
  1469  029A                     	;# 
  1470  029B                     	;# 
  1471  029C                     	;# 
  1472  029C                     	;# 
  1473  029D                     	;# 
  1474  029E                     	;# 
  1475  029E                     	;# 
  1476  0311                     	;# 
  1477  0311                     	;# 
  1478  0312                     	;# 
  1479  0313                     	;# 
  1480  0318                     	;# 
  1481  0318                     	;# 
  1482  0319                     	;# 
  1483  031A                     	;# 
  1484  0394                     	;# 
  1485  0395                     	;# 
  1486  0396                     	;# 
  1487  039A                     	;# 
  1488  039C                     	;# 
  1489  039D                     	;# 
  1490  039E                     	;# 
  1491  039F                     	;# 
  1492  0415                     	;# 
  1493  0416                     	;# 
  1494  0417                     	;# 
  1495  041C                     	;# 
  1496  041D                     	;# 
  1497  041E                     	;# 
  1498  0FE4                     	;# 
  1499  0FE5                     	;# 
  1500  0FE6                     	;# 
  1501  0FE7                     	;# 
  1502  0FE8                     	;# 
  1503  0FE9                     	;# 
  1504  0FEA                     	;# 
  1505  0FEB                     	;# 
  1506  0FED                     	;# 
  1507  0FEE                     	;# 
  1508  0FEF                     	;# 
  1509  0000                     	;# 
  1510  0001                     	;# 
  1511  0002                     	;# 
  1512  0003                     	;# 
  1513  0004                     	;# 
  1514  0005                     	;# 
  1515  0006                     	;# 
  1516  0007                     	;# 
  1517  0008                     	;# 
  1518  0009                     	;# 
  1519  000A                     	;# 
  1520  000B                     	;# 
  1521  000C                     	;# 
  1522  000D                     	;# 
  1523  0011                     	;# 
  1524  0012                     	;# 
  1525  0013                     	;# 
  1526  0014                     	;# 
  1527  0015                     	;# 
  1528  0016                     	;# 
  1529  0016                     	;# 
  1530  0017                     	;# 
  1531  0018                     	;# 
  1532  0019                     	;# 
  1533  001A                     	;# 
  1534  001B                     	;# 
  1535  001C                     	;# 
  1536  001E                     	;# 
  1537  001F                     	;# 
  1538  008C                     	;# 
  1539  008D                     	;# 
  1540  0091                     	;# 
  1541  0092                     	;# 
  1542  0093                     	;# 
  1543  0094                     	;# 
  1544  0095                     	;# 
  1545  0096                     	;# 
  1546  0097                     	;# 
  1547  0098                     	;# 
  1548  0099                     	;# 
  1549  009A                     	;# 
  1550  009B                     	;# 
  1551  009B                     	;# 
  1552  009C                     	;# 
  1553  009D                     	;# 
  1554  009E                     	;# 
  1555  010C                     	;# 
  1556  010D                     	;# 
  1557  0111                     	;# 
  1558  0112                     	;# 
  1559  0113                     	;# 
  1560  0114                     	;# 
  1561  0115                     	;# 
  1562  0116                     	;# 
  1563  0117                     	;# 
  1564  0118                     	;# 
  1565  0119                     	;# 
  1566  011A                     	;# 
  1567  011B                     	;# 
  1568  011D                     	;# 
  1569  011E                     	;# 
  1570  018C                     	;# 
  1571  018D                     	;# 
  1572  0191                     	;# 
  1573  0191                     	;# 
  1574  0192                     	;# 
  1575  0193                     	;# 
  1576  0193                     	;# 
  1577  0193                     	;# 
  1578  0194                     	;# 
  1579  0195                     	;# 
  1580  0196                     	;# 
  1581  0199                     	;# 
  1582  019A                     	;# 
  1583  019B                     	;# 
  1584  019B                     	;# 
  1585  019B                     	;# 
  1586  019B                     	;# 
  1587  019C                     	;# 
  1588  019C                     	;# 
  1589  019D                     	;# 
  1590  019E                     	;# 
  1591  019F                     	;# 
  1592  020C                     	;# 
  1593  020D                     	;# 
  1594  0211                     	;# 
  1595  0211                     	;# 
  1596  0212                     	;# 
  1597  0212                     	;# 
  1598  0213                     	;# 
  1599  0213                     	;# 
  1600  0214                     	;# 
  1601  0214                     	;# 
  1602  0215                     	;# 
  1603  0215                     	;# 
  1604  0215                     	;# 
  1605  0216                     	;# 
  1606  0216                     	;# 
  1607  0217                     	;# 
  1608  0217                     	;# 
  1609  0219                     	;# 
  1610  021A                     	;# 
  1611  021B                     	;# 
  1612  021C                     	;# 
  1613  021D                     	;# 
  1614  021E                     	;# 
  1615  021F                     	;# 
  1616  0291                     	;# 
  1617  0291                     	;# 
  1618  0292                     	;# 
  1619  0293                     	;# 
  1620  0294                     	;# 
  1621  0295                     	;# 
  1622  0295                     	;# 
  1623  0296                     	;# 
  1624  0298                     	;# 
  1625  0298                     	;# 
  1626  0299                     	;# 
  1627  029A                     	;# 
  1628  029B                     	;# 
  1629  029C                     	;# 
  1630  029C                     	;# 
  1631  029D                     	;# 
  1632  029E                     	;# 
  1633  029E                     	;# 
  1634  0311                     	;# 
  1635  0311                     	;# 
  1636  0312                     	;# 
  1637  0313                     	;# 
  1638  0318                     	;# 
  1639  0318                     	;# 
  1640  0319                     	;# 
  1641  031A                     	;# 
  1642  0394                     	;# 
  1643  0395                     	;# 
  1644  0396                     	;# 
  1645  039A                     	;# 
  1646  039C                     	;# 
  1647  039D                     	;# 
  1648  039E                     	;# 
  1649  039F                     	;# 
  1650  0415                     	;# 
  1651  0416                     	;# 
  1652  0417                     	;# 
  1653  041C                     	;# 
  1654  041D                     	;# 
  1655  041E                     	;# 
  1656  0FE4                     	;# 
  1657  0FE5                     	;# 
  1658  0FE6                     	;# 
  1659  0FE7                     	;# 
  1660  0FE8                     	;# 
  1661  0FE9                     	;# 
  1662  0FEA                     	;# 
  1663  0FEB                     	;# 
  1664  0FED                     	;# 
  1665  0FEE                     	;# 
  1666  0FEF                     	;# 
  1667  0000                     	;# 
  1668  0001                     	;# 
  1669  0002                     	;# 
  1670  0003                     	;# 
  1671  0004                     	;# 
  1672  0005                     	;# 
  1673  0006                     	;# 
  1674  0007                     	;# 
  1675  0008                     	;# 
  1676  0009                     	;# 
  1677  000A                     	;# 
  1678  000B                     	;# 
  1679  000C                     	;# 
  1680  000D                     	;# 
  1681  0011                     	;# 
  1682  0012                     	;# 
  1683  0013                     	;# 
  1684  0014                     	;# 
  1685  0015                     	;# 
  1686  0016                     	;# 
  1687  0016                     	;# 
  1688  0017                     	;# 
  1689  0018                     	;# 
  1690  0019                     	;# 
  1691  001A                     	;# 
  1692  001B                     	;# 
  1693  001C                     	;# 
  1694  001E                     	;# 
  1695  001F                     	;# 
  1696  008C                     	;# 
  1697  008D                     	;# 
  1698  0091                     	;# 
  1699  0092                     	;# 
  1700  0093                     	;# 
  1701  0094                     	;# 
  1702  0095                     	;# 
  1703  0096                     	;# 
  1704  0097                     	;# 
  1705  0098                     	;# 
  1706  0099                     	;# 
  1707  009A                     	;# 
  1708  009B                     	;# 
  1709  009B                     	;# 
  1710  009C                     	;# 
  1711  009D                     	;# 
  1712  009E                     	;# 
  1713  010C                     	;# 
  1714  010D                     	;# 
  1715  0111                     	;# 
  1716  0112                     	;# 
  1717  0113                     	;# 
  1718  0114                     	;# 
  1719  0115                     	;# 
  1720  0116                     	;# 
  1721  0117                     	;# 
  1722  0118                     	;# 
  1723  0119                     	;# 
  1724  011A                     	;# 
  1725  011B                     	;# 
  1726  011D                     	;# 
  1727  011E                     	;# 
  1728  018C                     	;# 
  1729  018D                     	;# 
  1730  0191                     	;# 
  1731  0191                     	;# 
  1732  0192                     	;# 
  1733  0193                     	;# 
  1734  0193                     	;# 
  1735  0193                     	;# 
  1736  0194                     	;# 
  1737  0195                     	;# 
  1738  0196                     	;# 
  1739  0199                     	;# 
  1740  019A                     	;# 
  1741  019B                     	;# 
  1742  019B                     	;# 
  1743  019B                     	;# 
  1744  019B                     	;# 
  1745  019C                     	;# 
  1746  019C                     	;# 
  1747  019D                     	;# 
  1748  019E                     	;# 
  1749  019F                     	;# 
  1750  020C                     	;# 
  1751  020D                     	;# 
  1752  0211                     	;# 
  1753  0211                     	;# 
  1754  0212                     	;# 
  1755  0212                     	;# 
  1756  0213                     	;# 
  1757  0213                     	;# 
  1758  0214                     	;# 
  1759  0214                     	;# 
  1760  0215                     	;# 
  1761  0215                     	;# 
  1762  0215                     	;# 
  1763  0216                     	;# 
  1764  0216                     	;# 
  1765  0217                     	;# 
  1766  0217                     	;# 
  1767  0219                     	;# 
  1768  021A                     	;# 
  1769  021B                     	;# 
  1770  021C                     	;# 
  1771  021D                     	;# 
  1772  021E                     	;# 
  1773  021F                     	;# 
  1774  0291                     	;# 
  1775  0291                     	;# 
  1776  0292                     	;# 
  1777  0293                     	;# 
  1778  0294                     	;# 
  1779  0295                     	;# 
  1780  0295                     	;# 
  1781  0296                     	;# 
  1782  0298                     	;# 
  1783  0298                     	;# 
  1784  0299                     	;# 
  1785  029A                     	;# 
  1786  029B                     	;# 
  1787  029C                     	;# 
  1788  029C                     	;# 
  1789  029D                     	;# 
  1790  029E                     	;# 
  1791  029E                     	;# 
  1792  0311                     	;# 
  1793  0311                     	;# 
  1794  0312                     	;# 
  1795  0313                     	;# 
  1796  0318                     	;# 
  1797  0318                     	;# 
  1798  0319                     	;# 
  1799  031A                     	;# 
  1800  0394                     	;# 
  1801  0395                     	;# 
  1802  0396                     	;# 
  1803  039A                     	;# 
  1804  039C                     	;# 
  1805  039D                     	;# 
  1806  039E                     	;# 
  1807  039F                     	;# 
  1808  0415                     	;# 
  1809  0416                     	;# 
  1810  0417                     	;# 
  1811  041C                     	;# 
  1812  041D                     	;# 
  1813  041E                     	;# 
  1814  0FE4                     	;# 
  1815  0FE5                     	;# 
  1816  0FE6                     	;# 
  1817  0FE7                     	;# 
  1818  0FE8                     	;# 
  1819  0FE9                     	;# 
  1820  0FEA                     	;# 
  1821  0FEB                     	;# 
  1822  0FED                     	;# 
  1823  0FEE                     	;# 
  1824  0FEF                     	;# 
  1825  0016                     _TMR1	set	22
  1826  000C                     _PORTA	set	12
  1827  001F                     _CPSCON1	set	31
  1828  001E                     _CPSCON0	set	30
  1829  0015                     _TMR0	set	21
  1830  0019                     _T1GCON	set	25
  1831  0018                     _T1CON	set	24
  1832  000D                     _PORTB	set	13
  1833  001B                     _PR2	set	27
  1834  001A                     _TMR2	set	26
  1835  001C                     _T2CON	set	28
  1836  0099                     _TMR4IF	set	153
  1837  00C0                     _TMR1ON	set	192
  1838  0088                     _TMR1IF	set	136
  1839  005F                     _GIE	set	95
  1840  005E                     _PEIE	set	94
  1841  00A1                     _BCL2IF	set	161
  1842  00A0                     _SSP2IF	set	160
  1843  0093                     _BCL1IF	set	147
  1844  008B                     _SSP1IF	set	139
  1845  0099                     _OSCCON	set	153
  1846  0095                     _OPTION_REG	set	149
  1847  008D                     _TRISB	set	141
  1848  008C                     _TRISA	set	140
  1849  0499                     _TMR4IE	set	1177
  1850  0488                     _TMR1IE	set	1160
  1851  04A1                     _BCL2IE	set	1185
  1852  04A0                     _SSP2IE	set	1184
  1853  0493                     _BCL1IE	set	1171
  1854  048B                     _SSP1IE	set	1163
  1855  011E                     _APFCON1	set	286
  1856  011D                     _APFCON0	set	285
  1857  0866                     _LATA6	set	2150
  1858  0863                     _LATA3	set	2147
  1859  0864                     _LATA4	set	2148
  1860  018D                     _ANSELB	set	397
  1861  018C                     _ANSELA	set	396
  1862  021C                     _SSP2STATbits	set	540
  1863  0219                     _SSP2BUF	set	537
  1864  021E                     _SSP2CON2	set	542
  1865  021B                     _SSP2MSK	set	539
  1866  021E                     _SSP2CON2bits	set	542
  1867  021D                     _SSP2CON1bits	set	541
  1868  021A                     _SSP2ADD	set	538
  1869  021C                     _SSP2STAT	set	540
  1870  021D                     _SSP2CON1	set	541
  1871  0214                     _SSP1STATbits	set	532
  1872  0211                     _SSP1BUF	set	529
  1873  0216                     _SSP1CON2	set	534
  1874  0213                     _SSP1MSK	set	531
  1875  0216                     _SSP1CON2bits	set	534
  1876  0215                     _SSP1CON1bits	set	533
  1877  0212                     _SSP1ADD	set	530
  1878  0214                     _SSP1STAT	set	532
  1879  0215                     _SSP1CON1	set	533
  1880  0298                     _CCPR2L	set	664
  1881  029E                     _CCPTMRS	set	670
  1882  029A                     _CCP2CON	set	666
  1883  0417                     _T4CON	set	1047
  1884  0415                     _TMR4	set	1045
  1885  0416                     _PR4	set	1046
  1886                           
  1887                           	psect	stringtext
  1888  06D1                     __pstringtext:	
  1889  06D1                     STR_5:	
  1890  06D1  3425               	retlw	37	;'%'
  1891  06D2  3430               	retlw	48	;'0'
  1892  06D3  3438               	retlw	56	;'8'
  1893  06D4  346C               	retlw	108	;'l'
  1894  06D5  3458               	retlw	88	;'X'
  1895  06D6  3420               	retlw	32	;' '
  1896  06D7  3400               	retlw	0
  1897  06D8                     STR_8:	
  1898  06D8  3420               	retlw	32	;' '
  1899  06D9  3425               	retlw	37	;'%'
  1900  06DA  3430               	retlw	48	;'0'
  1901  06DB  3438               	retlw	56	;'8'
  1902  06DC  344C               	retlw	76	;'L'
  1903  06DD  3458               	retlw	88	;'X'
  1904  06DE  3400               	retlw	0
  1905  06DF                     STR_6:	
  1906  06DF  3420               	retlw	32	;' '
  1907  06E0  3425               	retlw	37	;'%'
  1908  06E1  3430               	retlw	48	;'0'
  1909  06E2  3432               	retlw	50	;'2'
  1910  06E3  3458               	retlw	88	;'X'
  1911  06E4  3400               	retlw	0
  1912  06E5                     STR_7:	
  1913  06E5  3420               	retlw	32	;' '
  1914  06E6  3425               	retlw	37	;'%'
  1915  06E7  3430               	retlw	48	;'0'
  1916  06E8  3434               	retlw	52	;'4'
  1917  06E9  3458               	retlw	88	;'X'
  1918  06EA  3400               	retlw	0
  1919  06EB                     STR_1:	
  1920  06EB  3443               	retlw	67	;'C'
  1921  06EC  3450               	retlw	80	;'P'
  1922  06ED  3453               	retlw	83	;'S'
  1923  06EE  3431               	retlw	49	;'1'
  1924  06EF  3400               	retlw	0
  1925  06F0                     STR_2:	
  1926  06F0  3443               	retlw	67	;'C'
  1927  06F1  3450               	retlw	80	;'P'
  1928  06F2  3453               	retlw	83	;'S'
  1929  06F3  3432               	retlw	50	;'2'
  1930  06F4  3400               	retlw	0
  1931  06F5                     STR_3:	
  1932  06F5  3443               	retlw	67	;'C'
  1933  06F6  3450               	retlw	80	;'P'
  1934  06F7  3453               	retlw	83	;'S'
  1935  06F8  3433               	retlw	51	;'3'
  1936  06F9  3400               	retlw	0
  1937  06FA                     STR_4:	
  1938  06FA  340D               	retlw	13
  1939  06FB  3400               	retlw	0
  1940                           
  1941                           ; #config settings
  1942  0000                     
  1943                           	psect	cinit
  1944  0032                     start_initialization:	
  1945  0032                     __initialization:	
  1946                           
  1947                           ; Clear objects allocated to COMMON
  1948  0032  01F6               	clrf	__pbssCOMMON& (0+127)
  1949  0033  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1950  0034  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1951  0035  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1952  0036  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  1953                           
  1954                           ; Clear objects allocated to BANK0
  1955  0037  0020               	movlb	0	; select bank0
  1956  0038  01E6               	clrf	__pbssBANK0& (0+127)
  1957  0039  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  1958  003A  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  1959  003B  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  1960  003C  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  1961  003D  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  1962                           
  1963                           ; Clear objects allocated to BANK1
  1964  003E  30A0               	movlw	low __pbssBANK1
  1965  003F  0084               	movwf	4
  1966  0040  3000               	movlw	high __pbssBANK1
  1967  0041  0085               	movwf	5
  1968  0042  3031               	movlw	49
  1969  0043  318F  2702         	fcall	clear_ram0
  1970  0045                     end_of_initialization:	
  1971                           ;End of C runtime variable initialization code
  1972                           
  1973  0045                     __end_of__initialization:	
  1974  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1975  0046  0020               	movlb	0
  1976  0047  3183  2BA2         	ljmp	_main	;jump to C main() function
  1977                           
  1978                           	psect	bssCOMMON
  1979  0076                     __pbssCOMMON:	
  1980  0076                     _xfunc_in:	
  1981  0076                     	ds	2
  1982  0078                     _count:	
  1983  0078                     	ds	2
  1984  007A                     CPSx_Read@channel:	
  1985  007A                     	ds	1
  1986                           
  1987                           	psect	bssBANK0
  1988  0066                     __pbssBANK0:	
  1989  0066                     _xfunc_out:	
  1990  0066                     	ds	2
  1991  0068                     _outptr:	
  1992  0068                     	ds	1
  1993  0069                     _VoltageReg:	
  1994  0069                     	ds	2
  1995  006B                     _ConfigReg:	
  1996  006B                     	ds	1
  1997                           
  1998                           	psect	bssBANK1
  1999  00A0                     __pbssBANK1:	
  2000  00A0                     _CPS_Data:	
  2001  00A0                     	ds	3
  2002  00A3                     _CPS_PreData:	
  2003  00A3                     	ds	3
  2004  00A6                     _MemoryReg:	
  2005  00A6                     	ds	3
  2006  00A9                     Handler@count:	
  2007  00A9                     	ds	2
  2008  00AB                     _I2C2_Config:	
  2009  00AB                     	ds	19
  2010  00BE                     _I2C1_Config:	
  2011  00BE                     	ds	19
  2012                           
  2013                           	psect	clrtext
  2014  0F02                     clear_ram0:	
  2015                           ;	Called with FSR0 containing the base address, and
  2016                           ;	WREG with the size to clear
  2017                           
  2018  0F02  0064               	clrwdt	;clear the watchdog before getting into this loop
  2019  0F03                     clrloop0:	
  2020  0F03  0180               	clrf	0	;clear RAM location pointed to by FSR
  2021  0F04  3101               	addfsr 0,1
  2022  0F05  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2023  0F06  2F03               	goto	clrloop0	;have we reached the end yet?
  2024  0F07  3400               	retlw	0	;all done for this memory range, return
  2025                           
  2026                           	psect	cstackBANK1
  2027  00D1                     __pcstackBANK1:	
  2028  00D1                     ??_main:	
  2029                           
  2030                           ; 1 bytes @ 0x0
  2031  00D1                     	ds	5
  2032                           
  2033                           	psect	cstackCOMMON
  2034  0070                     __pcstackCOMMON:	
  2035  0070                     ?_LCD_DisplayClear:	
  2036  0070                     ?_Basic_Init:	
  2037                           ; 1 bytes @ 0x0
  2038                           
  2039  0070                     ?_Buzzer_Init:	
  2040                           ; 1 bytes @ 0x0
  2041                           
  2042  0070                     ?_Buzzer_SetDuty:	
  2043                           ; 1 bytes @ 0x0
  2044                           
  2045  0070                     ?_Buzzer_Handler:	
  2046                           ; 1 bytes @ 0x0
  2047                           
  2048  0070                     ?_I2C1_PinInit:	
  2049                           ; 1 bytes @ 0x0
  2050                           
  2051  0070                     ?_I2C1_Interrupt:	
  2052                           ; 1 bytes @ 0x0
  2053                           
  2054  0070                     ??_I2C1_Interrupt:	
  2055                           ; 1 bytes @ 0x0
  2056                           
  2057  0070                     ?_I2C2_PinInit:	
  2058                           ; 1 bytes @ 0x0
  2059                           
  2060  0070                     ?_I2C2_Interrupt:	
  2061                           ; 1 bytes @ 0x0
  2062                           
  2063  0070                     ??_I2C2_Interrupt:	
  2064                           ; 1 bytes @ 0x0
  2065                           
  2066  0070                     ?_I2C_CommonInterrupt:	
  2067                           ; 1 bytes @ 0x0
  2068                           
  2069  0070                     ?_LCD_WriteData:	
  2070                           ; 1 bytes @ 0x0
  2071                           
  2072  0070                     ?_LCD_Init:	
  2073                           ; 1 bytes @ 0x0
  2074                           
  2075  0070                     ?_DAC_Initialize:	
  2076                           ; 1 bytes @ 0x0
  2077                           
  2078  0070                     ?_Timer1_Init:	
  2079                           ; 1 bytes @ 0x0
  2080                           
  2081  0070                     ?_Timer1_Handler:	
  2082                           ; 1 bytes @ 0x0
  2083                           
  2084  0070                     ??_Timer1_Handler:	
  2085                           ; 1 bytes @ 0x0
  2086                           
  2087  0070                     ?_Timer4_Init:	
  2088                           ; 1 bytes @ 0x0
  2089                           
  2090  0070                     ?_Timer4_Handler:	
  2091                           ; 1 bytes @ 0x0
  2092                           
  2093  0070                     ??_Timer4_Handler:	
  2094                           ; 1 bytes @ 0x0
  2095                           
  2096  0070                     ?_mTouch_PortInit:	
  2097                           ; 1 bytes @ 0x0
  2098                           
  2099  0070                     ?_mTouch_Init:	
  2100                           ; 1 bytes @ 0x0
  2101                           
  2102  0070                     ?_CPSx_Read:	
  2103                           ; 1 bytes @ 0x0
  2104                           
  2105  0070                     ??_CPSx_Read:	
  2106                           ; 1 bytes @ 0x0
  2107                           
  2108  0070                     ?_main:	
  2109                           ; 1 bytes @ 0x0
  2110                           
  2111  0070                     ?_Handler:	
  2112                           ; 1 bytes @ 0x0
  2113                           
  2114  0070                     ?_xputc:	
  2115                           ; 1 bytes @ 0x0
  2116                           
  2117  0070                     ?_xputs:	
  2118                           ; 1 bytes @ 0x0
  2119                           
  2120  0070                     Buzzer_SetDuty@duty:	
  2121                           ; 1 bytes @ 0x0
  2122                           
  2123                           
  2124                           ; 2 bytes @ 0x0
  2125  0070                     	ds	1
  2126  0071                     ??_I2C_CommonInterrupt:	
  2127                           
  2128                           ; 1 bytes @ 0x1
  2129  0071                     	ds	1
  2130  0072                     ??_Buzzer_SetDuty:	
  2131                           
  2132                           ; 1 bytes @ 0x2
  2133  0072                     	ds	2
  2134  0074                     Buzzer_SetDuty@CCP2CON_Pre:	
  2135                           
  2136                           ; 1 bytes @ 0x4
  2137  0074                     	ds	1
  2138  0075                     ??_Buzzer_Handler:	
  2139  0075                     ??_Handler:	
  2140                           ; 1 bytes @ 0x5
  2141                           
  2142                           
  2143                           ; 1 bytes @ 0x5
  2144  0075                     	ds	1
  2145                           
  2146                           	psect	cstackBANK0
  2147  0020                     __pcstackBANK0:	
  2148  0020                     ??_Basic_Init:	
  2149  0020                     ??_Buzzer_Init:	
  2150                           ; 1 bytes @ 0x0
  2151                           
  2152  0020                     ?_Buzzer_MiliSecond:	
  2153                           ; 1 bytes @ 0x0
  2154                           
  2155  0020                     ??_I2C1_PinInit:	
  2156                           ; 1 bytes @ 0x0
  2157                           
  2158  0020                     ?_I2C1_Transmit:	
  2159                           ; 1 bytes @ 0x0
  2160                           
  2161  0020                     ??_I2C2_PinInit:	
  2162                           ; 1 bytes @ 0x0
  2163                           
  2164  0020                     ?_I2C2_Transmit:	
  2165                           ; 1 bytes @ 0x0
  2166                           
  2167  0020                     ??_LCD_WriteData:	
  2168                           ; 1 bytes @ 0x0
  2169                           
  2170  0020                     ??_Timer1_Init:	
  2171                           ; 1 bytes @ 0x0
  2172                           
  2173  0020                     ??_Timer4_Init:	
  2174                           ; 1 bytes @ 0x0
  2175                           
  2176  0020                     ??_mTouch_PortInit:	
  2177                           ; 1 bytes @ 0x0
  2178                           
  2179  0020                     ?___wmul:	
  2180                           ; 1 bytes @ 0x0
  2181                           
  2182  0020                     ?___lldiv:	
  2183                           ; 2 bytes @ 0x0
  2184                           
  2185  0020                     ?___llmod:	
  2186                           ; 4 bytes @ 0x0
  2187                           
  2188  0020                     I2C1_Transmit@pData:	
  2189                           ; 4 bytes @ 0x0
  2190                           
  2191  0020                     I2C2_Transmit@pData:	
  2192                           ; 1 bytes @ 0x0
  2193                           
  2194  0020                     Buzzer_MiliSecond@time:	
  2195                           ; 1 bytes @ 0x0
  2196                           
  2197  0020                     ___wmul@multiplier:	
  2198                           ; 2 bytes @ 0x0
  2199                           
  2200  0020                     ___lldiv@divisor:	
  2201                           ; 2 bytes @ 0x0
  2202                           
  2203  0020                     ___llmod@divisor:	
  2204                           ; 4 bytes @ 0x0
  2205                           
  2206                           
  2207                           ; 4 bytes @ 0x0
  2208  0020                     	ds	1
  2209  0021                     ?_I2C1_Setting:	
  2210  0021                     ?_I2C2_Setting:	
  2211                           ; 1 bytes @ 0x1
  2212                           
  2213  0021                     ??_mTouch_Init:	
  2214                           ; 1 bytes @ 0x1
  2215                           
  2216  0021                     I2C1_Setting@mode:	
  2217                           ; 1 bytes @ 0x1
  2218                           
  2219  0021                     I2C1_Transmit@size:	
  2220                           ; 1 bytes @ 0x1
  2221                           
  2222  0021                     I2C2_Setting@mode:	
  2223                           ; 1 bytes @ 0x1
  2224                           
  2225  0021                     I2C2_Transmit@size:	
  2226                           ; 1 bytes @ 0x1
  2227                           
  2228                           
  2229                           ; 1 bytes @ 0x1
  2230  0021                     	ds	1
  2231  0022                     ??_Buzzer_MiliSecond:	
  2232  0022                     ??_I2C1_Transmit:	
  2233                           ; 1 bytes @ 0x2
  2234                           
  2235  0022                     ??_I2C2_Transmit:	
  2236                           ; 1 bytes @ 0x2
  2237                           
  2238  0022                     I2C1_Setting@Speed:	
  2239                           ; 1 bytes @ 0x2
  2240                           
  2241  0022                     I2C2_Setting@Speed:	
  2242                           ; 1 bytes @ 0x2
  2243                           
  2244  0022                     LCD_WriteData@point:	
  2245                           ; 1 bytes @ 0x2
  2246                           
  2247  0022                     ___wmul@multiplicand:	
  2248                           ; 1 bytes @ 0x2
  2249                           
  2250                           
  2251                           ; 2 bytes @ 0x2
  2252  0022                     	ds	1
  2253  0023                     ??_LCD_DisplayClear:	
  2254  0023                     ??_I2C1_Setting:	
  2255                           ; 1 bytes @ 0x3
  2256                           
  2257  0023                     ??_I2C2_Setting:	
  2258                           ; 1 bytes @ 0x3
  2259                           
  2260  0023                     ?_LCD_Put:	
  2261                           ; 1 bytes @ 0x3
  2262                           
  2263  0023                     ?_LCD_CursorPosition:	
  2264                           ; 1 bytes @ 0x3
  2265                           
  2266  0023                     LCD_Put@word:	
  2267                           ; 1 bytes @ 0x3
  2268                           
  2269  0023                     LCD_CursorPosition@ty:	
  2270                           ; 1 bytes @ 0x3
  2271                           
  2272                           
  2273                           ; 1 bytes @ 0x3
  2274  0023                     	ds	1
  2275  0024                     ??_LCD_Init:	
  2276  0024                     ??_LCD_Put:	
  2277                           ; 1 bytes @ 0x4
  2278                           
  2279  0024                     ??_LCD_CursorPosition:	
  2280                           ; 1 bytes @ 0x4
  2281                           
  2282  0024                     ??_xputc:	
  2283                           ; 1 bytes @ 0x4
  2284                           
  2285  0024                     ??___wmul:	
  2286                           ; 1 bytes @ 0x4
  2287                           
  2288  0024                     I2C1_Setting@address:	
  2289                           ; 1 bytes @ 0x4
  2290                           
  2291  0024                     I2C1_Transmit@address:	
  2292                           ; 1 bytes @ 0x4
  2293                           
  2294  0024                     I2C2_Setting@address:	
  2295                           ; 1 bytes @ 0x4
  2296                           
  2297  0024                     I2C2_Transmit@address:	
  2298                           ; 1 bytes @ 0x4
  2299                           
  2300  0024                     ___wmul@product:	
  2301                           ; 1 bytes @ 0x4
  2302                           
  2303  0024                     ___lldiv@dividend:	
  2304                           ; 2 bytes @ 0x4
  2305                           
  2306  0024                     ___llmod@dividend:	
  2307                           ; 4 bytes @ 0x4
  2308                           
  2309                           
  2310                           ; 4 bytes @ 0x4
  2311  0024                     	ds	1
  2312  0025                     ?_I2C_Init:	
  2313  0025                     I2C1_Transmit@i:	
  2314                           ; 1 bytes @ 0x5
  2315                           
  2316  0025                     I2C2_Transmit@i:	
  2317                           ; 1 bytes @ 0x5
  2318                           
  2319  0025                     I2C_Init@address:	
  2320                           ; 1 bytes @ 0x5
  2321                           
  2322  0025                     LCD_CursorPosition@tx:	
  2323                           ; 1 bytes @ 0x5
  2324                           
  2325  0025                     xputc@c:	
  2326                           ; 1 bytes @ 0x5
  2327                           
  2328                           
  2329                           ; 1 bytes @ 0x5
  2330  0025                     	ds	1
  2331  0026                     ??_xputs:	
  2332  0026                     I2C1_Transmit@i_172:	
  2333                           ; 1 bytes @ 0x6
  2334                           
  2335  0026                     I2C2_Transmit@i_316:	
  2336                           ; 1 bytes @ 0x6
  2337                           
  2338  0026                     I2C_Init@mode:	
  2339                           ; 1 bytes @ 0x6
  2340                           
  2341                           
  2342                           ; 1 bytes @ 0x6
  2343  0026                     	ds	1
  2344  0027                     I2C1_Transmit@result:	
  2345  0027                     I2C2_Transmit@result:	
  2346                           ; 1 bytes @ 0x7
  2347                           
  2348  0027                     I2C_Init@Speed:	
  2349                           ; 1 bytes @ 0x7
  2350                           
  2351  0027                     xputs@str:	
  2352                           ; 1 bytes @ 0x7
  2353                           
  2354                           
  2355                           ; 1 bytes @ 0x7
  2356  0027                     	ds	1
  2357  0028                     ??_I2C_Init:	
  2358  0028                     ?_I2C_Transmit:	
  2359                           ; 1 bytes @ 0x8
  2360                           
  2361  0028                     ??___lldiv:	
  2362                           ; 1 bytes @ 0x8
  2363                           
  2364  0028                     ??___llmod:	
  2365                           ; 1 bytes @ 0x8
  2366                           
  2367  0028                     I2C_Transmit@address:	
  2368                           ; 1 bytes @ 0x8
  2369                           
  2370                           
  2371                           ; 1 bytes @ 0x8
  2372  0028                     	ds	1
  2373  0029                     I2C_Transmit@pData:	
  2374  0029                     ___llmod@counter:	
  2375                           ; 1 bytes @ 0x9
  2376                           
  2377  0029                     ___lldiv@quotient:	
  2378                           ; 1 bytes @ 0x9
  2379                           
  2380                           
  2381                           ; 4 bytes @ 0x9
  2382  0029                     	ds	1
  2383  002A                     I2C_Init@I2Cx:	
  2384  002A                     I2C_Transmit@size:	
  2385                           ; 1 bytes @ 0xA
  2386                           
  2387                           
  2388                           ; 1 bytes @ 0xA
  2389  002A                     	ds	1
  2390  002B                     ??_I2C_Transmit:	
  2391                           
  2392                           ; 1 bytes @ 0xB
  2393  002B                     	ds	2
  2394  002D                     ___lldiv@counter:	
  2395                           
  2396                           ; 1 bytes @ 0xD
  2397  002D                     	ds	1
  2398  002E                     ?_xvprintf:	
  2399  002E                     I2C_Transmit@I2Cx:	
  2400                           ; 1 bytes @ 0xE
  2401                           
  2402  002E                     xvprintf@fmt:	
  2403                           ; 1 bytes @ 0xE
  2404                           
  2405                           
  2406                           ; 2 bytes @ 0xE
  2407  002E                     	ds	1
  2408  002F                     I2C_Transmit@result:	
  2409                           
  2410                           ; 1 bytes @ 0xF
  2411  002F                     	ds	1
  2412  0030                     ??_DAC_Initialize:	
  2413  0030                     xvprintf@arp:	
  2414                           ; 1 bytes @ 0x10
  2415                           
  2416                           
  2417                           ; 1 bytes @ 0x10
  2418  0030                     	ds	1
  2419  0031                     ??_xvprintf:	
  2420                           
  2421                           ; 1 bytes @ 0x11
  2422  0031                     	ds	4
  2423  0035                     xvprintf@s:	
  2424                           
  2425                           ; 16 bytes @ 0x15
  2426  0035                     	ds	16
  2427  0045                     _xvprintf$667:	
  2428                           
  2429                           ; 4 bytes @ 0x25
  2430  0045                     	ds	4
  2431  0049                     _xvprintf$668:	
  2432                           
  2433                           ; 2 bytes @ 0x29
  2434  0049                     	ds	2
  2435  004B                     _xvprintf$669:	
  2436                           
  2437                           ; 2 bytes @ 0x2B
  2438  004B                     	ds	2
  2439  004D                     xvprintf@p:	
  2440                           
  2441                           ; 1 bytes @ 0x2D
  2442  004D                     	ds	1
  2443  004E                     xvprintf@r:	
  2444                           
  2445                           ; 2 bytes @ 0x2E
  2446  004E                     	ds	2
  2447  0050                     xvprintf@w:	
  2448                           
  2449                           ; 2 bytes @ 0x30
  2450  0050                     	ds	2
  2451  0052                     xvprintf@j:	
  2452                           
  2453                           ; 2 bytes @ 0x32
  2454  0052                     	ds	2
  2455  0054                     xvprintf@v:	
  2456                           
  2457                           ; 4 bytes @ 0x34
  2458  0054                     	ds	4
  2459  0058                     xvprintf@f:	
  2460                           
  2461                           ; 2 bytes @ 0x38
  2462  0058                     	ds	2
  2463  005A                     xvprintf@i:	
  2464                           
  2465                           ; 2 bytes @ 0x3A
  2466  005A                     	ds	2
  2467  005C                     xvprintf@d:	
  2468                           
  2469                           ; 1 bytes @ 0x3C
  2470  005C                     	ds	1
  2471  005D                     xvprintf@c:	
  2472                           
  2473                           ; 1 bytes @ 0x3D
  2474  005D                     	ds	1
  2475  005E                     ?_xprintf:	
  2476  005E                     xprintf@fmt:	
  2477                           ; 1 bytes @ 0x3E
  2478                           
  2479                           
  2480                           ; 2 bytes @ 0x3E
  2481  005E                     	ds	6
  2482  0064                     ??_xprintf:	
  2483                           
  2484                           ; 1 bytes @ 0x44
  2485  0064                     	ds	1
  2486  0065                     xprintf@arp:	
  2487                           
  2488                           ; 1 bytes @ 0x45
  2489  0065                     	ds	1
  2490                           
  2491                           	psect	maintext
  2492  03A2                     __pmaintext:	
  2493 ;;
  2494 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  2495 ;;
  2496 ;; *************** function _main *****************
  2497 ;; Defined at:
  2498 ;;		line 13 in file "main.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      char 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : B1F/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2512 ;;      Params:         0       0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0
  2514 ;;      Temps:          0       0       5       0       0       0
  2515 ;;      Totals:         0       0       5       0       0       0
  2516 ;;Total ram usage:        5 bytes
  2517 ;; Hardware stack levels required when called:    9
  2518 ;; This function calls:
  2519 ;;		_Basic_Init
  2520 ;;		_Buzzer_Init
  2521 ;;		_Buzzer_MiliSecond
  2522 ;;		_DAC_Initialize
  2523 ;;		_LCD_CursorPosition
  2524 ;;		_LCD_Init
  2525 ;;		_Timer1_Init
  2526 ;;		_Timer4_Init
  2527 ;;		_mTouch_Init
  2528 ;;		_xprintf
  2529 ;; This function is called by:
  2530 ;;		Startup code after reset
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function _main
  2536  03A2                     _main:	
  2537                           
  2538                           ;main.c: 15: Basic_Init();
  2539                           
  2540                           ;incstack = 0
  2541                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2542  03A2  318F  27A5  3183   	fcall	_Basic_Init
  2543                           
  2544                           ;main.c: 17: LATA6 = 1;
  2545  03A5  0022               	movlb	2	; select bank2
  2546  03A6  170C               	bsf	12,6	;volatile
  2547                           
  2548                           ;main.c: 19: Buzzer_Init();
  2549  03A7  3187  2751  3183   	fcall	_Buzzer_Init
  2550                           
  2551                           ;main.c: 21: LCD_Init();
  2552  03AA  3184  2432  3183   	fcall	_LCD_Init
  2553                           
  2554                           ;main.c: 22: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  2555  03AD  3008               	movlw	low _LCD_Put
  2556  03AE  0020               	movlb	0	; select bank0
  2557  03AF  00E6               	movwf	_xfunc_out
  2558  03B0  300F               	movlw	high _LCD_Put
  2559  03B1  00E7               	movwf	_xfunc_out+1
  2560                           
  2561                           ;main.c: 24: Timer1_Init();
  2562  03B2  318F  27E6  3183   	fcall	_Timer1_Init
  2563                           
  2564                           ;main.c: 25: TMR1ON = 1;;
  2565  03B5  0020               	movlb	0	; select bank0
  2566  03B6  1418               	bsf	24,0	;volatile
  2567                           
  2568                           ;main.c: 27: mTouch_Init();
  2569  03B7  318F  277D  3183   	fcall	_mTouch_Init
  2570                           
  2571                           ;main.c: 29: Timer4_Init();
  2572  03BA  318F  276A  3183   	fcall	_Timer4_Init
  2573                           
  2574                           ;main.c: 31: DAC_Initialize();
  2575  03BD  3187  279E  3183   	fcall	_DAC_Initialize
  2576  03C0  2BD6               	goto	l4680
  2577  03C1                     l4684:	
  2578                           
  2579                           ;main.c: 38: {
  2580                           ;main.c: 39: Buzzer_MiliSecond(100);
  2581  03C1  3064               	movlw	100
  2582  03C2  0020               	movlb	0	; select bank0
  2583  03C3  00A0               	movwf	Buzzer_MiliSecond@time
  2584  03C4  3000               	movlw	0
  2585  03C5  00A1               	movwf	Buzzer_MiliSecond@time+1
  2586  03C6  3187  27F6  3183   	fcall	_Buzzer_MiliSecond
  2587                           
  2588                           ;main.c: 40: xprintf("CPS1");
  2589  03C9  30EB               	movlw	low (STR_1| (0+32768))
  2590  03CA  0020               	movlb	0	; select bank0
  2591  03CB  00DE               	movwf	xprintf@fmt
  2592  03CC  3086               	movlw	high (STR_1| (0+32768))
  2593  03CD  2BD2               	goto	L1
  2594  03CE                     l4690:	
  2595                           ;main.c: 41: }
  2596                           
  2597                           
  2598                           ;main.c: 43: xprintf("CPS2");
  2599  03CE  30F0               	movlw	low (STR_2| (0+32768))
  2600  03CF  0020               	movlb	0	; select bank0
  2601  03D0  00DE               	movwf	xprintf@fmt
  2602  03D1  3086               	movlw	high (STR_2| (0+32768))
  2603  03D2                     L1:	
  2604  03D2  00DF               	movwf	xprintf@fmt+1
  2605  03D3  318F  275A  3183   	fcall	_xprintf
  2606  03D6                     l4680:	
  2607                           ;main.c: 33: while(1)
  2608                           
  2609                           
  2610                           ;main.c: 34: {
  2611                           ;main.c: 36: LCD_CursorPosition(0,0);
  2612  03D6  0020               	movlb	0	; select bank0
  2613  03D7  01A3               	clrf	LCD_CursorPosition@ty
  2614  03D8  3000               	movlw	0
  2615  03D9  318F  27CF  3183   	fcall	_LCD_CursorPosition
  2616                           
  2617                           ;main.c: 37: if((CPS_PreData[0]-CPS_Data[0])>100)
  2618  03DC  0021               	movlb	1	; select bank1
  2619  03DD  0820               	movf	_CPS_Data^(0+128),w
  2620  03DE  00D1               	movwf	??_main^(0+128)
  2621  03DF  01D2               	clrf	(??_main^(0+128)+1)
  2622  03E0  09D1               	comf	??_main^(0+128),f
  2623  03E1  09D2               	comf	(??_main^(0+128)+1),f
  2624  03E2  0AD1               	incf	??_main^(0+128),f
  2625  03E3  1903               	skipnz
  2626  03E4  0AD2               	incf	(??_main^(0+128)+1),f
  2627  03E5  0823               	movf	_CPS_PreData^(0+128),w
  2628  03E6  0751               	addwf	??_main^(0+128),w
  2629  03E7  00D3               	movwf	(??_main+2)^(0+128)
  2630  03E8  0852               	movf	(??_main+1)^(0+128),w
  2631  03E9  1803               	skipnc
  2632  03EA  0A52               	incf	(??_main+1)^(0+128),w
  2633  03EB  00D4               	movwf	((??_main+2)^(0+128)+1)
  2634  03EC  0854               	movf	(??_main+3)^(0+128),w
  2635  03ED  3A80               	xorlw	128
  2636  03EE  00D5               	movwf	(??_main+4)^(0+128)
  2637  03EF  3080               	movlw	128
  2638  03F0  0255               	subwf	(??_main+4)^(0+128),w
  2639  03F1  1D03               	skipz
  2640  03F2  2BF5               	goto	u4755
  2641  03F3  3065               	movlw	101
  2642  03F4  0253               	subwf	(??_main+2)^(0+128),w
  2643  03F5                     u4755:	
  2644  03F5  1803               	btfsc	3,0
  2645  03F6  2BC1               	goto	l4684
  2646                           
  2647                           ;main.c: 42: else if((CPS_PreData[1]-CPS_Data[1])>100)
  2648  03F7  0021               	movlb	1	; select bank1
  2649  03F8  0821               	movf	(_CPS_Data^(0+128)+1),w
  2650  03F9  00D1               	movwf	??_main^(0+128)
  2651  03FA  01D2               	clrf	(??_main^(0+128)+1)
  2652  03FB  09D1               	comf	??_main^(0+128),f
  2653  03FC  09D2               	comf	(??_main^(0+128)+1),f
  2654  03FD  0AD1               	incf	??_main^(0+128),f
  2655  03FE  1903               	skipnz
  2656  03FF  0AD2               	incf	(??_main^(0+128)+1),f
  2657  0400  0824               	movf	(_CPS_PreData^(0+128)+1),w
  2658  0401  0751               	addwf	??_main^(0+128),w
  2659  0402  00D3               	movwf	(??_main+2)^(0+128)
  2660  0403  0852               	movf	(??_main+1)^(0+128),w
  2661  0404  1803               	skipnc
  2662  0405  0A52               	incf	(??_main+1)^(0+128),w
  2663  0406  00D4               	movwf	((??_main+2)^(0+128)+1)
  2664  0407  0854               	movf	(??_main+3)^(0+128),w
  2665  0408  3A80               	xorlw	128
  2666  0409  00D5               	movwf	(??_main+4)^(0+128)
  2667  040A  3080               	movlw	128
  2668  040B  0255               	subwf	(??_main+4)^(0+128),w
  2669  040C  1D03               	skipz
  2670  040D  2C10               	goto	u4765
  2671  040E  3065               	movlw	101
  2672  040F  0253               	subwf	(??_main+2)^(0+128),w
  2673  0410                     u4765:	
  2674  0410  1803               	btfsc	3,0
  2675  0411  2BCE               	goto	l4690
  2676                           
  2677                           ;main.c: 44: else if((CPS_PreData[2]-CPS_Data[2])>100)
  2678  0412  0021               	movlb	1	; select bank1
  2679  0413  0822               	movf	(_CPS_Data^(0+128)+2),w
  2680  0414  00D1               	movwf	??_main^(0+128)
  2681  0415  01D2               	clrf	(??_main^(0+128)+1)
  2682  0416  09D1               	comf	??_main^(0+128),f
  2683  0417  09D2               	comf	(??_main^(0+128)+1),f
  2684  0418  0AD1               	incf	??_main^(0+128),f
  2685  0419  1903               	skipnz
  2686  041A  0AD2               	incf	(??_main^(0+128)+1),f
  2687  041B  0825               	movf	(_CPS_PreData^(0+128)+2),w
  2688  041C  0751               	addwf	??_main^(0+128),w
  2689  041D  00D3               	movwf	(??_main+2)^(0+128)
  2690  041E  0852               	movf	(??_main+1)^(0+128),w
  2691  041F  1803               	skipnc
  2692  0420  0A52               	incf	(??_main+1)^(0+128),w
  2693  0421  00D4               	movwf	((??_main+2)^(0+128)+1)
  2694  0422  0854               	movf	(??_main+3)^(0+128),w
  2695  0423  3A80               	xorlw	128
  2696  0424  00D5               	movwf	(??_main+4)^(0+128)
  2697  0425  3080               	movlw	128
  2698  0426  0255               	subwf	(??_main+4)^(0+128),w
  2699  0427  1D03               	skipz
  2700  0428  2C2B               	goto	u4775
  2701  0429  3065               	movlw	101
  2702  042A  0253               	subwf	(??_main+2)^(0+128),w
  2703  042B                     u4775:	
  2704  042B  1C03               	skipc
  2705  042C  2BD6               	goto	l4680
  2706                           
  2707                           ;main.c: 45: xprintf("CPS3");
  2708  042D  30F5               	movlw	low (STR_3| (0+32768))
  2709  042E  0020               	movlb	0	; select bank0
  2710  042F  00DE               	movwf	xprintf@fmt
  2711  0430  3086               	movlw	high (STR_3| (0+32768))
  2712  0431  2BD2               	goto	L1
  2713  0432                     __end_of_main:	
  2714                           ;main.c: 46: }
  2715                           ;main.c: 48: return 0;
  2716                           ;	Return value of _main is never used
  2717                           
  2718                           
  2719                           	psect	text1
  2720  0F5A                     __ptext1:	
  2721 ;; *************** function _xprintf *****************
  2722 ;; Defined at:
  2723 ;;		line 165 in file "xprintf.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  2726 ;;		 -> STR_8(7), STR_7(6), STR_6(6), STR_5(7), 
  2727 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  arp             1   69[BANK0 ] PTR void [1]
  2730 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2740 ;;      Params:         0       6       0       0       0       0
  2741 ;;      Locals:         0       1       0       0       0       0
  2742 ;;      Temps:          0       1       0       0       0       0
  2743 ;;      Totals:         0       8       0       0       0       0
  2744 ;;Total ram usage:        8 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    8
  2747 ;; This function calls:
  2748 ;;		_xvprintf
  2749 ;; This function is called by:
  2750 ;;		_main
  2751 ;;		_put_dump
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           
  2756                           ;psect for function _xprintf
  2757  0F5A                     _xprintf:	
  2758                           
  2759                           ;xprintf.c: 170: va_list arp;
  2760                           ;xprintf.c: 173: *arp = __va_start();
  2761                           
  2762                           ;incstack = 0
  2763                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2764  0F5A  3060               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  2765  0F5B  0020               	movlb	0	; select bank0
  2766  0F5C  00E4               	movwf	??_xprintf
  2767  0F5D  0864               	movf	??_xprintf,w
  2768  0F5E  00E5               	movwf	xprintf@arp
  2769                           
  2770                           ;xprintf.c: 174: xvprintf(fmt, arp);
  2771  0F5F  085F               	movf	xprintf@fmt+1,w
  2772  0F60  00AF               	movwf	xvprintf@fmt+1
  2773  0F61  085E               	movf	xprintf@fmt,w
  2774  0F62  00AE               	movwf	xvprintf@fmt
  2775  0F63  3065               	movlw	(low (xprintf@arp| 0))& (0+255)
  2776  0F64  00E4               	movwf	??_xprintf
  2777  0F65  0864               	movf	??_xprintf,w
  2778  0F66  00B0               	movwf	xvprintf@arp
  2779  0F67  3180  2049         	fcall	_xvprintf
  2780  0F69  0008               	return
  2781  0F6A                     __end_of_xprintf:	
  2782                           
  2783                           	psect	text2
  2784  0049                     __ptext2:	
  2785 ;; *************** function _xvprintf *****************
  2786 ;; Defined at:
  2787 ;;		line 88 in file "xprintf.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  2790 ;;		 -> STR_8(7), STR_7(6), STR_6(6), STR_5(7), 
  2791 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2792 ;;  arp             1   16[BANK0 ] PTR PTR void 
  2793 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  s              16   21[BANK0 ] unsigned char [16]
  2796 ;;  v               4   52[BANK0 ] unsigned long 
  2797 ;;  i               2   58[BANK0 ] unsigned int 
  2798 ;;  f               2   56[BANK0 ] unsigned int 
  2799 ;;  j               2   50[BANK0 ] unsigned int 
  2800 ;;  w               2   48[BANK0 ] unsigned int 
  2801 ;;  r               2   46[BANK0 ] unsigned int 
  2802 ;;  c               1   61[BANK0 ] unsigned char 
  2803 ;;  d               1   60[BANK0 ] unsigned char 
  2804 ;;  p               1   45[BANK0 ] PTR unsigned char 
  2805 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2815 ;;      Params:         0       3       0       0       0       0
  2816 ;;      Locals:         0      41       0       0       0       0
  2817 ;;      Temps:          0       4       0       0       0       0
  2818 ;;      Totals:         0      48       0       0       0       0
  2819 ;;Total ram usage:       48 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    7
  2822 ;; This function calls:
  2823 ;;		___lldiv
  2824 ;;		___llmod
  2825 ;;		___wmul
  2826 ;;		_xputc
  2827 ;;		_xputs
  2828 ;; This function is called by:
  2829 ;;		_xprintf
  2830 ;;		_xsprintf
  2831 ;;		_xfprintf
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           
  2836                           ;psect for function _xvprintf
  2837  0049                     _xvprintf:	
  2838  0049                     l620:	
  2839                           ;incstack = 0
  2840                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2841                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  2842                           ;xprintf.c: 94: unsigned long v;
  2843                           ;xprintf.c: 95: char s[16], c, d, *p;
  2844                           ;xprintf.c: 98: for (;;) {
  2845                           
  2846                           
  2847                           ;xprintf.c: 99: c = *fmt++;
  2848  0049  0020               	movlb	0	; select bank0
  2849  004A  082E               	movf	xvprintf@fmt,w
  2850  004B  0084               	movwf	4
  2851  004C  082F               	movf	xvprintf@fmt+1,w
  2852  004D  0085               	movwf	5
  2853  004E  0800               	movf	0,w	;code access
  2854  004F  00B1               	movwf	??_xvprintf
  2855  0050  0831               	movf	??_xvprintf,w
  2856  0051  00DD               	movwf	xvprintf@c
  2857  0052  3001               	movlw	1
  2858  0053  07AE               	addwf	xvprintf@fmt,f
  2859  0054  3000               	movlw	0
  2860  0055  3DAF               	addwfc	xvprintf@fmt+1,f
  2861                           
  2862                           ;xprintf.c: 100: if (!c) break;
  2863  0056  085D               	movf	xvprintf@c,w
  2864  0057  1903               	btfsc	3,2
  2865  0058  0008               	return
  2866                           
  2867                           ;xprintf.c: 101: if (c != '%') {
  2868  0059  3025               	movlw	37
  2869  005A  065D               	xorwf	xvprintf@c,w
  2870  005B  1903               	btfsc	3,2
  2871  005C  2862               	goto	l4468
  2872                           
  2873                           ;xprintf.c: 102: xputc(c); continue;
  2874  005D  085D               	movf	xvprintf@c,w
  2875  005E  3186  26A4  3180   	fcall	_xputc
  2876  0061  2849               	goto	l620
  2877  0062                     l4468:	
  2878                           
  2879                           ;xprintf.c: 103: }
  2880                           ;xprintf.c: 104: f = 0;
  2881  0062  0020               	movlb	0	; select bank0
  2882  0063  01D8               	clrf	xvprintf@f
  2883  0064  01D9               	clrf	xvprintf@f+1
  2884                           
  2885                           ;xprintf.c: 105: c = *fmt++;
  2886  0065  082E               	movf	xvprintf@fmt,w
  2887  0066  0084               	movwf	4
  2888  0067  082F               	movf	xvprintf@fmt+1,w
  2889  0068  0085               	movwf	5
  2890  0069  0800               	movf	0,w	;code access
  2891  006A  00B1               	movwf	??_xvprintf
  2892  006B  0831               	movf	??_xvprintf,w
  2893  006C  00DD               	movwf	xvprintf@c
  2894  006D  3001               	movlw	1
  2895  006E  07AE               	addwf	xvprintf@fmt,f
  2896  006F  3000               	movlw	0
  2897  0070  3DAF               	addwfc	xvprintf@fmt+1,f
  2898                           
  2899                           ;xprintf.c: 106: if (c == '0') {
  2900  0071  3030               	movlw	48
  2901  0072  065D               	xorwf	xvprintf@c,w
  2902  0073  1D03               	btfss	3,2
  2903  0074  2877               	goto	l4482
  2904                           
  2905                           ;xprintf.c: 107: f = 1; c = *fmt++;
  2906  0075  3001               	movlw	1
  2907  0076  287C               	goto	L7
  2908  0077                     l4482:	
  2909                           ;xprintf.c: 108: } else {
  2910                           
  2911                           
  2912                           ;xprintf.c: 109: if (c == '-') {
  2913  0077  302D               	movlw	45
  2914  0078  065D               	xorwf	xvprintf@c,w
  2915  0079  1D03               	btfss	3,2
  2916  007A  288B               	goto	l4490
  2917                           
  2918                           ;xprintf.c: 110: f = 2; c = *fmt++;
  2919  007B  3002               	movlw	2
  2920  007C                     L7:	
  2921  007C  00D8               	movwf	xvprintf@f
  2922  007D  3000               	movlw	0
  2923  007E  00D9               	movwf	xvprintf@f+1
  2924  007F  082E               	movf	xvprintf@fmt,w
  2925  0080  0084               	movwf	4
  2926  0081  082F               	movf	xvprintf@fmt+1,w
  2927  0082  0085               	movwf	5
  2928  0083  0800               	movf	0,w	;code access
  2929  0084  00B1               	movwf	??_xvprintf
  2930  0085  0831               	movf	??_xvprintf,w
  2931  0086  00DD               	movwf	xvprintf@c
  2932  0087  3001               	movlw	1
  2933  0088  07AE               	addwf	xvprintf@fmt,f
  2934  0089  3000               	movlw	0
  2935  008A  3DAF               	addwfc	xvprintf@fmt+1,f
  2936  008B                     l4490:	
  2937                           
  2938                           ;xprintf.c: 111: }
  2939                           ;xprintf.c: 112: }
  2940                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  2941  008B  01D0               	clrf	xvprintf@w
  2942  008C  01D1               	clrf	xvprintf@w+1
  2943  008D  28B5               	goto	l4498
  2944  008E                     l4492:	
  2945                           
  2946                           ;xprintf.c: 114: w = w * 10 + c - '0';
  2947  008E  085D               	movf	xvprintf@c,w
  2948  008F  00B1               	movwf	??_xvprintf
  2949  0090  01B2               	clrf	??_xvprintf+1
  2950  0091  0851               	movf	xvprintf@w+1,w
  2951  0092  00A1               	movwf	___wmul@multiplier+1
  2952  0093  0850               	movf	xvprintf@w,w
  2953  0094  00A0               	movwf	___wmul@multiplier
  2954  0095  300A               	movlw	10
  2955  0096  00A2               	movwf	___wmul@multiplicand
  2956  0097  3000               	movlw	0
  2957  0098  00A3               	movwf	___wmul@multiplicand+1
  2958  0099  3187  27BE  3180   	fcall	___wmul
  2959  009C  0020               	movlb	0	; select bank0
  2960  009D  0831               	movf	??_xvprintf,w
  2961  009E  0720               	addwf	?___wmul,w
  2962  009F  00B3               	movwf	??_xvprintf+2
  2963  00A0  0832               	movf	??_xvprintf+1,w
  2964  00A1  3D21               	addwfc	?___wmul+1,w
  2965  00A2  00B4               	movwf	??_xvprintf+3
  2966  00A3  0833               	movf	??_xvprintf+2,w
  2967  00A4  3ED0               	addlw	208
  2968  00A5  00D0               	movwf	xvprintf@w
  2969  00A6  30FF               	movlw	255
  2970  00A7  3D34               	addwfc	??_xvprintf+3,w
  2971  00A8  00D1               	movwf	xvprintf@w+1
  2972  00A9  082E               	movf	xvprintf@fmt,w
  2973  00AA  0084               	movwf	4
  2974  00AB  082F               	movf	xvprintf@fmt+1,w
  2975  00AC  0085               	movwf	5
  2976  00AD  0800               	movf	0,w	;code access
  2977  00AE  00B1               	movwf	??_xvprintf
  2978  00AF  0831               	movf	??_xvprintf,w
  2979  00B0  00DD               	movwf	xvprintf@c
  2980  00B1  3001               	movlw	1
  2981  00B2  07AE               	addwf	xvprintf@fmt,f
  2982  00B3  3000               	movlw	0
  2983  00B4  3DAF               	addwfc	xvprintf@fmt+1,f
  2984  00B5                     l4498:	
  2985  00B5  3030               	movlw	48
  2986  00B6  025D               	subwf	xvprintf@c,w
  2987  00B7  1C03               	skipc
  2988  00B8  28BD               	goto	l4502
  2989  00B9  303A               	movlw	58
  2990  00BA  025D               	subwf	xvprintf@c,w
  2991  00BB  1C03               	skipc
  2992  00BC  288E               	goto	l4492
  2993  00BD                     l4502:	
  2994                           
  2995                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  2996  00BD  306C               	movlw	108
  2997  00BE  065D               	xorwf	xvprintf@c,w
  2998  00BF  1903               	btfsc	3,2
  2999  00C0  28C5               	goto	l635
  3000  00C1  304C               	movlw	76
  3001  00C2  065D               	xorwf	xvprintf@c,w
  3002  00C3  1D03               	btfss	3,2
  3003  00C4  28D2               	goto	l4510
  3004  00C5                     l635:	
  3005                           
  3006                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  3007  00C5  1558               	bsf	xvprintf@f,2
  3008  00C6  082E               	movf	xvprintf@fmt,w
  3009  00C7  0084               	movwf	4
  3010  00C8  082F               	movf	xvprintf@fmt+1,w
  3011  00C9  0085               	movwf	5
  3012  00CA  0800               	movf	0,w	;code access
  3013  00CB  00B1               	movwf	??_xvprintf
  3014  00CC  0831               	movf	??_xvprintf,w
  3015  00CD  00DD               	movwf	xvprintf@c
  3016  00CE  3001               	movlw	1
  3017  00CF  07AE               	addwf	xvprintf@fmt,f
  3018  00D0  3000               	movlw	0
  3019  00D1  3DAF               	addwfc	xvprintf@fmt+1,f
  3020  00D2                     l4510:	
  3021                           
  3022                           ;xprintf.c: 117: }
  3023                           ;xprintf.c: 118: if (!c) break;
  3024  00D2  085D               	movf	xvprintf@c,w
  3025  00D3  1903               	btfsc	3,2
  3026  00D4  0008               	return
  3027                           
  3028                           ;xprintf.c: 119: d = c;
  3029  00D5  085D               	movf	xvprintf@c,w
  3030  00D6  00B1               	movwf	??_xvprintf
  3031  00D7  0831               	movf	??_xvprintf,w
  3032  00D8  00DC               	movwf	xvprintf@d
  3033                           
  3034                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  3035  00D9  3061               	movlw	97
  3036  00DA  025C               	subwf	xvprintf@d,w
  3037  00DB  1C03               	skipc
  3038  00DC  2948               	goto	l4552
  3039  00DD  3020               	movlw	32
  3040  00DE  02DC               	subwf	xvprintf@d,f
  3041                           
  3042                           ;xprintf.c: 121: switch (d) {
  3043  00DF  2948               	goto	l4552
  3044  00E0                     l4518:	
  3045                           ;xprintf.c: 122: case 'S' :
  3046                           
  3047                           
  3048                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  3049  00E0  0830               	movf	xvprintf@arp,w
  3050  00E1  0086               	movwf	6
  3051  00E2  0187               	clrf	7
  3052  00E3  3F40               	moviw [0]fsr1
  3053  00E4  0084               	movwf	4
  3054  00E5  0185               	clrf	5
  3055  00E6  0A81               	incf	1,f
  3056  00E7  0800               	movf	0,w
  3057  00E8  00B1               	movwf	??_xvprintf
  3058  00E9  0831               	movf	??_xvprintf,w
  3059  00EA  00CD               	movwf	xvprintf@p
  3060                           
  3061                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  3062  00EB  01D2               	clrf	xvprintf@j
  3063  00EC  01D3               	clrf	xvprintf@j+1
  3064  00ED                     l4524:	
  3065  00ED  0852               	movf	xvprintf@j,w
  3066  00EE  074D               	addwf	xvprintf@p,w
  3067  00EF  00B1               	movwf	??_xvprintf
  3068  00F0  0831               	movf	??_xvprintf,w
  3069  00F1  0086               	movwf	6
  3070  00F2  0187               	clrf	7
  3071  00F3  0801               	movf	1,w
  3072  00F4  1903               	btfsc	3,2
  3073  00F5  28FF               	goto	l4528
  3074  00F6  3001               	movlw	1
  3075  00F7  07D2               	addwf	xvprintf@j,f
  3076  00F8  3000               	movlw	0
  3077  00F9  3DD3               	addwfc	xvprintf@j+1,f
  3078  00FA  28ED               	goto	l4524
  3079  00FB                     l4526:	
  3080                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  3081                           
  3082  00FB  3020               	movlw	32
  3083  00FC  3186  26A4  3180   	fcall	_xputc
  3084  00FF                     l4528:	
  3085  00FF  0020               	movlb	0	; select bank0
  3086  0100  18D8               	btfsc	xvprintf@f,1
  3087  0101  2911               	goto	l4532
  3088  0102  0853               	movf	xvprintf@j+1,w
  3089  0103  00B2               	movwf	??_xvprintf+1
  3090  0104  0852               	movf	xvprintf@j,w
  3091  0105  00B1               	movwf	??_xvprintf
  3092  0106  0AD2               	incf	xvprintf@j,f
  3093  0107  1903               	skipnz
  3094  0108  0AD3               	incf	xvprintf@j+1,f
  3095  0109  0851               	movf	xvprintf@w+1,w
  3096  010A  0232               	subwf	??_xvprintf+1,w
  3097  010B  1D03               	skipz
  3098  010C  290F               	goto	u4525
  3099  010D  0850               	movf	xvprintf@w,w
  3100  010E  0231               	subwf	??_xvprintf,w
  3101  010F                     u4525:	
  3102  010F  1C03               	skipc
  3103  0110  28FB               	goto	l4526
  3104  0111                     l4532:	
  3105                           
  3106                           ;xprintf.c: 126: xputs(p);
  3107  0111  084D               	movf	xvprintf@p,w
  3108  0112  318F  27BA  3180   	fcall	_xputs
  3109  0115                     l4536:	
  3110                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  3111                           
  3112  0115  0020               	movlb	0	; select bank0
  3113  0116  0853               	movf	xvprintf@j+1,w
  3114  0117  00B2               	movwf	??_xvprintf+1
  3115  0118  0852               	movf	xvprintf@j,w
  3116  0119  00B1               	movwf	??_xvprintf
  3117  011A  0AD2               	incf	xvprintf@j,f
  3118  011B  1903               	skipnz
  3119  011C  0AD3               	incf	xvprintf@j+1,f
  3120  011D  0851               	movf	xvprintf@w+1,w
  3121  011E  0232               	subwf	??_xvprintf+1,w
  3122  011F  1D03               	skipz
  3123  0120  2923               	goto	u4535
  3124  0121  0850               	movf	xvprintf@w,w
  3125  0122  0231               	subwf	??_xvprintf,w
  3126  0123                     u4535:	
  3127  0123  1803               	btfsc	3,0
  3128  0124  2849               	goto	l620
  3129  0125  3020               	movlw	32
  3130  0126  3186  26A4  3180   	fcall	_xputc
  3131  0129  2915               	goto	l4536
  3132  012A                     l4538:	
  3133                           ;xprintf.c: 129: case 'C' :
  3134                           
  3135                           ;xprintf.c: 128: continue;
  3136                           
  3137                           
  3138                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  3139  012A  0830               	movf	xvprintf@arp,w
  3140  012B  0086               	movwf	6
  3141  012C  0187               	clrf	7
  3142  012D  0801               	movf	1,w
  3143  012E  0084               	movwf	4
  3144  012F  0185               	clrf	5
  3145  0130  3002               	movlw	2
  3146  0131  0781               	addwf	1,f
  3147  0132  0800               	movf	0,w
  3148  0133  3186  26A4  3180   	fcall	_xputc
  3149  0136  2849               	goto	l620
  3150  0137                     l4540:	
  3151                           ;xprintf.c: 131: case 'B' :
  3152                           
  3153                           
  3154                           ;xprintf.c: 132: r = 2; break;
  3155  0137  3002               	movlw	2
  3156  0138  0020               	movlb	0	; select bank0
  3157  0139  293F               	goto	L4
  3158  013A                     l4542:	
  3159                           ;xprintf.c: 133: case 'O' :
  3160                           
  3161                           
  3162                           ;xprintf.c: 134: r = 8; break;
  3163  013A  3008               	movlw	8
  3164  013B  293F               	goto	L4
  3165  013C                     l4544:	
  3166                           ;xprintf.c: 135: case 'D' :
  3167                           
  3168                           
  3169                           ;xprintf.c: 136: case 'U' :
  3170                           ;xprintf.c: 137: r = 10; break;
  3171  013C  300A               	movlw	10
  3172  013D  293F               	goto	L4
  3173  013E                     l4546:	
  3174                           ;xprintf.c: 138: case 'X' :
  3175                           
  3176                           
  3177                           ;xprintf.c: 139: r = 16; break;
  3178  013E  3010               	movlw	16
  3179  013F                     L4:	
  3180  013F  00CE               	movwf	xvprintf@r
  3181  0140  3000               	movlw	0
  3182  0141  00CF               	movwf	xvprintf@r+1
  3183  0142  2960               	goto	l653
  3184  0143                     l4548:	
  3185                           ;xprintf.c: 140: default:
  3186                           
  3187                           
  3188                           ;xprintf.c: 141: xputc(c); continue;
  3189  0143  085D               	movf	xvprintf@c,w
  3190  0144  3186  26A4  3180   	fcall	_xputc
  3191  0147  2849               	goto	l620
  3192  0148                     l4552:	
  3193                           ;xprintf.c: 142: }
  3194                           
  3195  0148  0020               	movlb	0	; select bank0
  3196  0149  085C               	movf	xvprintf@d,w
  3197                           
  3198                           ; Switch size 1, requested type "space"
  3199                           ; Number of cases is 7, Range of values is 66 to 88
  3200                           ; switch strategies available:
  3201                           ; Name         Instructions Cycles
  3202                           ; simple_byte           22    12 (average)
  3203                           ; direct_byte           55     9 (fixed)
  3204                           ; jumptable            263     9 (fixed)
  3205                           ;	Chosen strategy is simple_byte
  3206  014A  3A42               	xorlw	66	; case 66
  3207  014B  1903               	skipnz
  3208  014C  2937               	goto	l4540
  3209  014D  3A01               	xorlw	1	; case 67
  3210  014E  1903               	skipnz
  3211  014F  292A               	goto	l4538
  3212  0150  3A07               	xorlw	7	; case 68
  3213  0151  1903               	skipnz
  3214  0152  293C               	goto	l4544
  3215  0153  3A0B               	xorlw	11	; case 79
  3216  0154  1903               	skipnz
  3217  0155  293A               	goto	l4542
  3218  0156  3A1C               	xorlw	28	; case 83
  3219  0157  1903               	skipnz
  3220  0158  28E0               	goto	l4518
  3221  0159  3A06               	xorlw	6	; case 85
  3222  015A  1903               	skipnz
  3223  015B  293C               	goto	l4544
  3224  015C  3A0D               	xorlw	13	; case 88
  3225  015D  1903               	skipnz
  3226  015E  293E               	goto	l4546
  3227  015F  2943               	goto	l4548
  3228  0160                     l653:	
  3229                           
  3230                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  3231  0160  0020               	movlb	0	; select bank0
  3232  0161  1958               	btfsc	xvprintf@f,2
  3233  0162  2998               	goto	l4562
  3234  0163  3044               	movlw	68
  3235  0164  065C               	xorwf	xvprintf@d,w
  3236  0165  1903               	btfsc	3,2
  3237  0166  297A               	goto	l4558
  3238  0167  0830               	movf	xvprintf@arp,w
  3239  0168  0086               	movwf	6
  3240  0169  0187               	clrf	7
  3241  016A  0801               	movf	1,w
  3242  016B  0084               	movwf	4
  3243  016C  0185               	clrf	5
  3244  016D  3002               	movlw	2
  3245  016E  0781               	addwf	1,f
  3246  016F  3F00               	moviw [0]fsr0
  3247  0170  00B1               	movwf	??_xvprintf
  3248  0171  3F01               	moviw [1]fsr0
  3249  0172  00B2               	movwf	??_xvprintf+1
  3250  0173  0831               	movf	??_xvprintf,w
  3251  0174  00C5               	movwf	_xvprintf$667
  3252  0175  0832               	movf	??_xvprintf+1,w
  3253  0176  00C6               	movwf	_xvprintf$667+1
  3254  0177  01C7               	clrf	_xvprintf$667+2
  3255  0178  01C8               	clrf	_xvprintf$667+3
  3256  0179  298F               	goto	l4560
  3257  017A                     l4558:	
  3258  017A  0830               	movf	xvprintf@arp,w
  3259  017B  0086               	movwf	6
  3260  017C  0187               	clrf	7
  3261  017D  0801               	movf	1,w
  3262  017E  0084               	movwf	4
  3263  017F  0185               	clrf	5
  3264  0180  3002               	movlw	2
  3265  0181  0781               	addwf	1,f
  3266  0182  3F00               	moviw [0]fsr0
  3267  0183  00B1               	movwf	??_xvprintf
  3268  0184  3F01               	moviw [1]fsr0
  3269  0185  00B2               	movwf	??_xvprintf+1
  3270  0186  0831               	movf	??_xvprintf,w
  3271  0187  00C5               	movwf	_xvprintf$667
  3272  0188  0832               	movf	??_xvprintf+1,w
  3273  0189  00C6               	movwf	_xvprintf$667+1
  3274  018A  0D89               	rlf	9,f
  3275  018B  3B89               	subwfb	9,f
  3276  018C  0989               	comf	9,f
  3277  018D  00C7               	movwf	_xvprintf$667+2
  3278  018E  00C8               	movwf	_xvprintf$667+3
  3279  018F                     l4560:	
  3280  018F  0848               	movf	_xvprintf$667+3,w
  3281  0190  00D7               	movwf	xvprintf@v+3
  3282  0191  0847               	movf	_xvprintf$667+2,w
  3283  0192  00D6               	movwf	xvprintf@v+2
  3284  0193  0846               	movf	_xvprintf$667+1,w
  3285  0194  00D5               	movwf	xvprintf@v+1
  3286  0195  0845               	movf	_xvprintf$667,w
  3287  0196  00D4               	movwf	xvprintf@v
  3288  0197  29A8               	goto	l4564
  3289  0198                     l4562:	
  3290  0198  0830               	movf	xvprintf@arp,w
  3291  0199  0086               	movwf	6
  3292  019A  0187               	clrf	7
  3293  019B  0801               	movf	1,w
  3294  019C  0084               	movwf	4
  3295  019D  0185               	clrf	5
  3296  019E  3004               	movlw	4
  3297  019F  0781               	addwf	1,f
  3298  01A0  3F00               	moviw [0]fsr0
  3299  01A1  00D4               	movwf	xvprintf@v
  3300  01A2  3F01               	moviw [1]fsr0
  3301  01A3  00D5               	movwf	xvprintf@v+1
  3302  01A4  3F02               	moviw [2]fsr0
  3303  01A5  00D6               	movwf	xvprintf@v+2
  3304  01A6  3F03               	moviw [3]fsr0
  3305  01A7  00D7               	movwf	xvprintf@v+3
  3306  01A8                     l4564:	
  3307                           
  3308                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  3309  01A8  3044               	movlw	68
  3310  01A9  065C               	xorwf	xvprintf@d,w
  3311  01AA  1903               	btfsc	3,2
  3312  01AB  1FD7               	btfss	xvprintf@v+3,7
  3313  01AC  29B9               	goto	l4570
  3314                           
  3315                           ;xprintf.c: 147: v = 0 - v;
  3316  01AD  09D4               	comf	xvprintf@v,f
  3317  01AE  09D5               	comf	xvprintf@v+1,f
  3318  01AF  09D6               	comf	xvprintf@v+2,f
  3319  01B0  09D7               	comf	xvprintf@v+3,f
  3320  01B1  0AD4               	incf	xvprintf@v,f
  3321  01B2  1903               	skipnz
  3322  01B3  0AD5               	incf	xvprintf@v+1,f
  3323  01B4  1903               	skipnz
  3324  01B5  0AD6               	incf	xvprintf@v+2,f
  3325  01B6  1903               	skipnz
  3326  01B7  0AD7               	incf	xvprintf@v+3,f
  3327                           
  3328                           ;xprintf.c: 148: f |= 8;
  3329  01B8  15D8               	bsf	xvprintf@f,3
  3330  01B9                     l4570:	
  3331                           
  3332                           ;xprintf.c: 149: }
  3333                           ;xprintf.c: 150: i = 0;
  3334  01B9  01DA               	clrf	xvprintf@i
  3335  01BA  01DB               	clrf	xvprintf@i+1
  3336  01BB                     l4572:	
  3337                           ;xprintf.c: 151: do {
  3338                           
  3339                           
  3340                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  3341  01BB  084E               	movf	xvprintf@r,w
  3342  01BC  00A0               	movwf	___llmod@divisor
  3343  01BD  084F               	movf	xvprintf@r+1,w
  3344  01BE  00A1               	movwf	___llmod@divisor+1
  3345  01BF  01A2               	clrf	___llmod@divisor+2
  3346  01C0  01A3               	clrf	___llmod@divisor+3
  3347  01C1  0857               	movf	xvprintf@v+3,w
  3348  01C2  00A7               	movwf	___llmod@dividend+3
  3349  01C3  0856               	movf	xvprintf@v+2,w
  3350  01C4  00A6               	movwf	___llmod@dividend+2
  3351  01C5  0855               	movf	xvprintf@v+1,w
  3352  01C6  00A5               	movwf	___llmod@dividend+1
  3353  01C7  0854               	movf	xvprintf@v,w
  3354  01C8  00A4               	movwf	___llmod@dividend
  3355  01C9  3186  2624  3180   	fcall	___llmod
  3356  01CC  0020               	movlb	0	; select bank0
  3357  01CD  0820               	movf	?___llmod,w
  3358  01CE  00B1               	movwf	??_xvprintf
  3359  01CF  0831               	movf	??_xvprintf,w
  3360  01D0  00DC               	movwf	xvprintf@d
  3361  01D1  084E               	movf	xvprintf@r,w
  3362  01D2  00A0               	movwf	___lldiv@divisor
  3363  01D3  084F               	movf	xvprintf@r+1,w
  3364  01D4  00A1               	movwf	___lldiv@divisor+1
  3365  01D5  01A2               	clrf	___lldiv@divisor+2
  3366  01D6  01A3               	clrf	___lldiv@divisor+3
  3367  01D7  0857               	movf	xvprintf@v+3,w
  3368  01D8  00A7               	movwf	___lldiv@dividend+3
  3369  01D9  0856               	movf	xvprintf@v+2,w
  3370  01DA  00A6               	movwf	___lldiv@dividend+2
  3371  01DB  0855               	movf	xvprintf@v+1,w
  3372  01DC  00A5               	movwf	___lldiv@dividend+1
  3373  01DD  0854               	movf	xvprintf@v,w
  3374  01DE  00A4               	movwf	___lldiv@dividend
  3375  01DF  3185  2549  3180   	fcall	___lldiv
  3376  01E2  0020               	movlb	0	; select bank0
  3377  01E3  0823               	movf	?___lldiv+3,w
  3378  01E4  00D7               	movwf	xvprintf@v+3
  3379  01E5  0822               	movf	?___lldiv+2,w
  3380  01E6  00D6               	movwf	xvprintf@v+2
  3381  01E7  0821               	movf	?___lldiv+1,w
  3382  01E8  00D5               	movwf	xvprintf@v+1
  3383  01E9  0820               	movf	?___lldiv,w
  3384  01EA  00D4               	movwf	xvprintf@v
  3385                           
  3386                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  3387  01EB  300A               	movlw	10
  3388  01EC  025C               	subwf	xvprintf@d,w
  3389  01ED  1C03               	skipc
  3390  01EE  29FD               	goto	l4586
  3391  01EF  3078               	movlw	120
  3392  01F0  065D               	xorwf	xvprintf@c,w
  3393  01F1  1903               	btfsc	3,2
  3394  01F2  29F5               	goto	l4582
  3395  01F3  3007               	movlw	7
  3396  01F4  29F6               	goto	L5
  3397  01F5                     l4582:	
  3398  01F5  3027               	movlw	39
  3399  01F6                     L5:	
  3400  01F6  00C9               	movwf	_xvprintf$668
  3401  01F7  3000               	movlw	0
  3402  01F8  00CA               	movwf	_xvprintf$668+1
  3403  01F9  0849               	movf	_xvprintf$668,w
  3404  01FA  00B1               	movwf	??_xvprintf
  3405  01FB  0831               	movf	??_xvprintf,w
  3406  01FC  07DC               	addwf	xvprintf@d,f
  3407  01FD                     l4586:	
  3408                           
  3409                           ;xprintf.c: 154: s[i++] = d + '0';
  3410  01FD  085C               	movf	xvprintf@d,w
  3411  01FE  3E30               	addlw	48
  3412  01FF  00B1               	movwf	??_xvprintf
  3413  0200  085A               	movf	xvprintf@i,w
  3414  0201  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  3415  0202  0086               	movwf	6
  3416  0203  0187               	clrf	7
  3417  0204  0831               	movf	??_xvprintf,w
  3418  0205  0081               	movwf	1
  3419  0206  3001               	movlw	1
  3420  0207  07DA               	addwf	xvprintf@i,f
  3421  0208  3000               	movlw	0
  3422  0209  3DDB               	addwfc	xvprintf@i+1,f
  3423                           
  3424                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  3425  020A  0857               	movf	xvprintf@v+3,w
  3426  020B  0456               	iorwf	xvprintf@v+2,w
  3427  020C  0455               	iorwf	xvprintf@v+1,w
  3428  020D  0454               	iorwf	xvprintf@v,w
  3429  020E  1903               	skipnz
  3430  020F  2A17               	goto	l676
  3431  0210  3000               	movlw	0
  3432  0211  025B               	subwf	xvprintf@i+1,w
  3433  0212  3010               	movlw	16
  3434  0213  1903               	skipnz
  3435  0214  025A               	subwf	xvprintf@i,w
  3436  0215  1C03               	skipc
  3437  0216  29BB               	goto	l4572
  3438  0217                     l676:	
  3439                           
  3440                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  3441  0217  1DD8               	btfss	xvprintf@f,3
  3442  0218  2A25               	goto	l4598
  3443  0219  302D               	movlw	45
  3444  021A  00B1               	movwf	??_xvprintf
  3445  021B  085A               	movf	xvprintf@i,w
  3446  021C  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  3447  021D  0086               	movwf	6
  3448  021E  0187               	clrf	7
  3449  021F  0831               	movf	??_xvprintf,w
  3450  0220  0081               	movwf	1
  3451  0221  3001               	movlw	1
  3452  0222  07DA               	addwf	xvprintf@i,f
  3453  0223  3000               	movlw	0
  3454  0224  3DDB               	addwfc	xvprintf@i+1,f
  3455  0225                     l4598:	
  3456                           
  3457                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  3458  0225  085B               	movf	xvprintf@i+1,w
  3459  0226  00D3               	movwf	xvprintf@j+1
  3460  0227  085A               	movf	xvprintf@i,w
  3461  0228  00D2               	movwf	xvprintf@j
  3462  0229  1858               	btfsc	xvprintf@f,0
  3463  022A  2A2D               	goto	l4604
  3464  022B  3020               	movlw	32
  3465  022C  2A2E               	goto	L6
  3466  022D                     l4604:	
  3467  022D  3030               	movlw	48
  3468  022E                     L6:	
  3469  022E  00CB               	movwf	_xvprintf$669
  3470  022F  3000               	movlw	0
  3471  0230  00CC               	movwf	_xvprintf$669+1
  3472  0231  084B               	movf	_xvprintf$669,w
  3473  0232  00B1               	movwf	??_xvprintf
  3474  0233  0831               	movf	??_xvprintf,w
  3475  0234  00DC               	movwf	xvprintf@d
  3476                           
  3477                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  3478  0235  2A3A               	goto	l4608
  3479  0236                     l4606:	
  3480  0236  085C               	movf	xvprintf@d,w
  3481  0237  3186  26A4  3180   	fcall	_xputc
  3482  023A                     l4608:	
  3483  023A  0020               	movlb	0	; select bank0
  3484  023B  18D8               	btfsc	xvprintf@f,1
  3485  023C  2A4C               	goto	l4612
  3486  023D  0853               	movf	xvprintf@j+1,w
  3487  023E  00B2               	movwf	??_xvprintf+1
  3488  023F  0852               	movf	xvprintf@j,w
  3489  0240  00B1               	movwf	??_xvprintf
  3490  0241  0AD2               	incf	xvprintf@j,f
  3491  0242  1903               	skipnz
  3492  0243  0AD3               	incf	xvprintf@j+1,f
  3493  0244  0851               	movf	xvprintf@w+1,w
  3494  0245  0232               	subwf	??_xvprintf+1,w
  3495  0246  1D03               	skipz
  3496  0247  2A4A               	goto	u4655
  3497  0248  0850               	movf	xvprintf@w,w
  3498  0249  0231               	subwf	??_xvprintf,w
  3499  024A                     u4655:	
  3500  024A  1C03               	skipc
  3501  024B  2A36               	goto	l4606
  3502  024C                     l4612:	
  3503                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  3504                           
  3505  024C  3001               	movlw	1
  3506  024D  02DA               	subwf	xvprintf@i,f
  3507  024E  3000               	movlw	0
  3508  024F  3BDB               	subwfb	xvprintf@i+1,f
  3509  0250  085A               	movf	xvprintf@i,w
  3510  0251  3E35               	addlw	(low (xvprintf@s| 0))& (0+255)
  3511  0252  0086               	movwf	6
  3512  0253  0187               	clrf	7
  3513  0254  0801               	movf	1,w
  3514  0255  3186  26A4  3180   	fcall	_xputc
  3515  0258  0020               	movlb	0	; select bank0
  3516  0259  085A               	movf	xvprintf@i,w
  3517  025A  045B               	iorwf	xvprintf@i+1,w
  3518  025B  1903               	btfsc	3,2
  3519  025C  2A62               	goto	l4618
  3520  025D  2A4C               	goto	l4612
  3521  025E                     l4616:	
  3522                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  3523                           
  3524  025E  3020               	movlw	32
  3525  025F  3186  26A4  3180   	fcall	_xputc
  3526  0262                     l4618:	
  3527  0262  0020               	movlb	0	; select bank0
  3528  0263  0853               	movf	xvprintf@j+1,w
  3529  0264  00B2               	movwf	??_xvprintf+1
  3530  0265  0852               	movf	xvprintf@j,w
  3531  0266  00B1               	movwf	??_xvprintf
  3532  0267  0AD2               	incf	xvprintf@j,f
  3533  0268  1903               	skipnz
  3534  0269  0AD3               	incf	xvprintf@j+1,f
  3535  026A  0851               	movf	xvprintf@w+1,w
  3536  026B  0232               	subwf	??_xvprintf+1,w
  3537  026C  1D03               	skipz
  3538  026D  2A70               	goto	u4675
  3539  026E  0850               	movf	xvprintf@w,w
  3540  026F  0231               	subwf	??_xvprintf,w
  3541  0270                     u4675:	
  3542  0270  1803               	btfsc	3,0
  3543  0271  2849               	goto	l620
  3544  0272  2A5E               	goto	l4616
  3545  0273                     __end_of_xvprintf:	
  3546                           ;xprintf.c: 161: }
  3547                           
  3548                           
  3549                           	psect	text3
  3550  0FBA                     __ptext3:	
  3551 ;; *************** function _xputs *****************
  3552 ;; Defined at:
  3553 ;;		line 44 in file "xprintf.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  str             1    wreg     PTR const unsigned char 
  3556 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  str             1    7[BANK0 ] PTR const unsigned char 
  3559 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  1    wreg      void 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3569 ;;      Params:         0       0       0       0       0       0
  3570 ;;      Locals:         0       1       0       0       0       0
  3571 ;;      Temps:          0       1       0       0       0       0
  3572 ;;      Totals:         0       2       0       0       0       0
  3573 ;;Total ram usage:        2 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    6
  3576 ;; This function calls:
  3577 ;;		_xputc
  3578 ;; This function is called by:
  3579 ;;		_xvprintf
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           
  3584                           ;psect for function _xputs
  3585  0FBA                     _xputs:	
  3586                           
  3587                           ;incstack = 0
  3588                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3589                           ;xputs@str stored from wreg
  3590  0FBA  0020               	movlb	0	; select bank0
  3591  0FBB  00A7               	movwf	xputs@str
  3592  0FBC                     l4454:	
  3593                           ;xprintf.c: 48: while (*str)
  3594                           
  3595  0FBC  0827               	movf	xputs@str,w
  3596  0FBD  0086               	movwf	6
  3597  0FBE  0187               	clrf	7
  3598  0FBF  0801               	movf	1,w
  3599  0FC0  1903               	btfsc	3,2
  3600  0FC1  0008               	return
  3601                           
  3602                           ;xprintf.c: 49: xputc(*str++);
  3603  0FC2  0827               	movf	xputs@str,w
  3604  0FC3  0086               	movwf	6
  3605  0FC4  0187               	clrf	7
  3606  0FC5  0801               	movf	1,w
  3607  0FC6  3186  26A4  318F   	fcall	_xputc
  3608  0FC9  3001               	movlw	1
  3609  0FCA  0020               	movlb	0	; select bank0
  3610  0FCB  00A6               	movwf	??_xputs
  3611  0FCC  0826               	movf	??_xputs,w
  3612  0FCD  07A7               	addwf	xputs@str,f
  3613  0FCE  2FBC               	goto	l4454
  3614  0FCF                     __end_of_xputs:	
  3615                           
  3616                           	psect	text4
  3617  06A4                     __ptext4:	
  3618 ;; *************** function _xputc *****************
  3619 ;; Defined at:
  3620 ;;		line 26 in file "xprintf.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  c               1    wreg     unsigned char 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  c               1    5[BANK0 ] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      void 
  3627 ;; Registers used:
  3628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3634 ;;      Params:         0       0       0       0       0       0
  3635 ;;      Locals:         0       1       0       0       0       0
  3636 ;;      Temps:          0       1       0       0       0       0
  3637 ;;      Totals:         0       2       0       0       0       0
  3638 ;;Total ram usage:        2 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    5
  3641 ;; This function calls:
  3642 ;;		Absolute function
  3643 ;;		_LCD_Put
  3644 ;; This function is called by:
  3645 ;;		_xputs
  3646 ;;		_xvprintf
  3647 ;;		_xfputs
  3648 ;;		_put_dump
  3649 ;;		_xgets
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           
  3654                           ;psect for function _xputc
  3655  06A4                     _xputc:	
  3656                           
  3657                           ;incstack = 0
  3658                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3659                           ;xputc@c stored from wreg
  3660  06A4  0020               	movlb	0	; select bank0
  3661  06A5  00A5               	movwf	xputc@c
  3662  06A6  300A               	movlw	10
  3663  06A7  0625               	xorwf	xputc@c,w
  3664  06A8  1D03               	btfss	3,2
  3665  06A9  2EB3               	goto	l4436
  3666  06AA  30FA               	movlw	(low (STR_4| (0+32768)))& (0+255)
  3667  06AB  00A4               	movwf	??_xputc
  3668  06AC  0824               	movf	??_xputc,w
  3669  06AD  00A3               	movwf	LCD_Put@word
  3670  06AE  0867               	movf	_xfunc_out+1,w
  3671  06AF  008A               	movwf	10
  3672  06B0  0866               	movf	_xfunc_out,w
  3673  06B1  000A               	callw
  3674  06B2  3186               	pagesel	$
  3675  06B3                     l4436:	
  3676                           
  3677                           ;xprintf.c: 30: if (outptr) {
  3678  06B3  0020               	movlb	0	; select bank0
  3679  06B4  0868               	movf	_outptr,w
  3680  06B5  1903               	btfsc	3,2
  3681  06B6  2EC3               	goto	l4444
  3682                           
  3683                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  3684  06B7  0825               	movf	xputc@c,w
  3685  06B8  00A4               	movwf	??_xputc
  3686  06B9  0868               	movf	_outptr,w
  3687  06BA  0086               	movwf	6
  3688  06BB  0187               	clrf	7
  3689  06BC  0824               	movf	??_xputc,w
  3690  06BD  0081               	movwf	1
  3691  06BE  3001               	movlw	1
  3692  06BF  00A4               	movwf	??_xputc
  3693  06C0  0824               	movf	??_xputc,w
  3694  06C1  07E8               	addwf	_outptr,f
  3695                           
  3696                           ;xprintf.c: 32: return;
  3697  06C2  0008               	return
  3698  06C3                     l4444:	
  3699                           
  3700                           ;xprintf.c: 33: }
  3701                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  3702  06C3  0866               	movf	_xfunc_out,w
  3703  06C4  0467               	iorwf	_xfunc_out+1,w
  3704  06C5  1903               	btfsc	3,2
  3705  06C6  0008               	return
  3706  06C7  0825               	movf	xputc@c,w
  3707  06C8  00A4               	movwf	??_xputc
  3708  06C9  0824               	movf	??_xputc,w
  3709  06CA  00A3               	movwf	LCD_Put@word
  3710  06CB  0867               	movf	_xfunc_out+1,w
  3711  06CC  008A               	movwf	10
  3712  06CD  0866               	movf	_xfunc_out,w
  3713  06CE  000A               	callw
  3714  06CF  3186               	pagesel	$
  3715  06D0  0008               	return
  3716  06D1                     __end_of_xputc:	
  3717                           
  3718                           	psect	text5
  3719  0F08                     __ptext5:	
  3720 ;; *************** function _LCD_Put *****************
  3721 ;; Defined at:
  3722 ;;		line 54 in file "LCD.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  word            1    3[BANK0 ] char 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0, pclath, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3736 ;;      Params:         0       1       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0
  3739 ;;      Totals:         0       1       0       0       0       0
  3740 ;;Total ram usage:        1 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    4
  3743 ;; This function calls:
  3744 ;;		_LCD_WriteData
  3745 ;; This function is called by:
  3746 ;;		_main
  3747 ;;		_xputc
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           
  3752                           ;psect for function _LCD_Put
  3753  0F08                     _LCD_Put:	
  3754                           
  3755                           ;LCD.c: 56: LATA3 = 1;
  3756                           
  3757                           ;incstack = 0
  3758                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  3759  0F08  0022               	movlb	2	; select bank2
  3760  0F09  158C               	bsf	12,3	;volatile
  3761                           
  3762                           ;LCD.c: 57: LCD_WriteData(word);
  3763  0F0A  0020               	movlb	0	; select bank0
  3764  0F0B  0823               	movf	LCD_Put@word,w
  3765  0F0C  3186  2667         	fcall	_LCD_WriteData
  3766  0F0E  0008               	return
  3767  0F0F                     __end_of_LCD_Put:	
  3768                           
  3769                           	psect	text6
  3770  07BE                     __ptext6:	
  3771 ;; *************** function ___wmul *****************
  3772 ;; Defined at:
  3773 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3776 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  product         2    4[BANK0 ] unsigned int 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  2    0[BANK0 ] unsigned int 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3788 ;;      Params:         0       4       0       0       0       0
  3789 ;;      Locals:         0       2       0       0       0       0
  3790 ;;      Temps:          0       0       0       0       0       0
  3791 ;;      Totals:         0       6       0       0       0       0
  3792 ;;Total ram usage:        6 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    3
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_xvprintf
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           
  3803                           ;psect for function ___wmul
  3804  07BE                     ___wmul:	
  3805                           
  3806                           ;incstack = 0
  3807                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3808  07BE  0020               	movlb	0	; select bank0
  3809  07BF  01A4               	clrf	___wmul@product
  3810  07C0  01A5               	clrf	___wmul@product+1
  3811  07C1                     l3826:	
  3812  07C1  1C20               	btfss	___wmul@multiplier,0
  3813  07C2  2FC7               	goto	l898
  3814  07C3  0822               	movf	___wmul@multiplicand,w
  3815  07C4  07A4               	addwf	___wmul@product,f
  3816  07C5  0823               	movf	___wmul@multiplicand+1,w
  3817  07C6  3DA5               	addwfc	___wmul@product+1,f
  3818  07C7                     l898:	
  3819  07C7  3001               	movlw	1
  3820  07C8                     u3695:	
  3821  07C8  35A2               	lslf	___wmul@multiplicand,f
  3822  07C9  0DA3               	rlf	___wmul@multiplicand+1,f
  3823  07CA  0B89               	decfsz	9,f
  3824  07CB  2FC8               	goto	u3695
  3825  07CC  3001               	movlw	1
  3826  07CD                     u3705:	
  3827  07CD  36A1               	lsrf	___wmul@multiplier+1,f
  3828  07CE  0CA0               	rrf	___wmul@multiplier,f
  3829  07CF  0B89               	decfsz	9,f
  3830  07D0  2FCD               	goto	u3705
  3831  07D1  0820               	movf	___wmul@multiplier,w
  3832  07D2  0421               	iorwf	___wmul@multiplier+1,w
  3833  07D3  1D03               	btfss	3,2
  3834  07D4  2FC1               	goto	l3826
  3835  07D5  0825               	movf	___wmul@product+1,w
  3836  07D6  00A1               	movwf	?___wmul+1
  3837  07D7  0824               	movf	___wmul@product,w
  3838  07D8  00A0               	movwf	?___wmul
  3839  07D9  0008               	return
  3840  07DA                     __end_of___wmul:	
  3841                           
  3842                           	psect	text7
  3843  0624                     __ptext7:	
  3844 ;; *************** function ___llmod *****************
  3845 ;; Defined at:
  3846 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  divisor         4    0[BANK0 ] unsigned long 
  3849 ;;  dividend        4    4[BANK0 ] unsigned long 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  counter         1    9[BANK0 ] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  4    0[BANK0 ] unsigned long 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3861 ;;      Params:         0       8       0       0       0       0
  3862 ;;      Locals:         0       1       0       0       0       0
  3863 ;;      Temps:          0       1       0       0       0       0
  3864 ;;      Totals:         0      10       0       0       0       0
  3865 ;;Total ram usage:       10 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    3
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_xvprintf
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function ___llmod
  3877  0624                     ___llmod:	
  3878                           
  3879                           ;incstack = 0
  3880                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3881  0624  0020               	movlb	0	; select bank0
  3882  0625  0823               	movf	___llmod@divisor+3,w
  3883  0626  0422               	iorwf	___llmod@divisor+2,w
  3884  0627  0421               	iorwf	___llmod@divisor+1,w
  3885  0628  0420               	iorwf	___llmod@divisor,w
  3886  0629  1903               	skipnz
  3887  062A  2E5E               	goto	l3878
  3888  062B  01A9               	clrf	___llmod@counter
  3889  062C  0AA9               	incf	___llmod@counter,f
  3890  062D                     l3868:	
  3891  062D  1BA3               	btfsc	___llmod@divisor+3,7
  3892  062E  2E3B               	goto	l3870
  3893  062F  3001               	movlw	1
  3894  0630                     u3805:	
  3895  0630  35A0               	lslf	___llmod@divisor,f
  3896  0631  0DA1               	rlf	___llmod@divisor+1,f
  3897  0632  0DA2               	rlf	___llmod@divisor+2,f
  3898  0633  0DA3               	rlf	___llmod@divisor+3,f
  3899  0634  0B89               	decfsz	9,f
  3900  0635  2E30               	goto	u3805
  3901  0636  3001               	movlw	1
  3902  0637  00A8               	movwf	??___llmod
  3903  0638  0828               	movf	??___llmod,w
  3904  0639  07A9               	addwf	___llmod@counter,f
  3905  063A  2E2D               	goto	l3868
  3906  063B                     l3870:	
  3907  063B  0823               	movf	___llmod@divisor+3,w
  3908  063C  0227               	subwf	___llmod@dividend+3,w
  3909  063D  1D03               	skipz
  3910  063E  2E49               	goto	u3825
  3911  063F  0822               	movf	___llmod@divisor+2,w
  3912  0640  0226               	subwf	___llmod@dividend+2,w
  3913  0641  1D03               	skipz
  3914  0642  2E49               	goto	u3825
  3915  0643  0821               	movf	___llmod@divisor+1,w
  3916  0644  0225               	subwf	___llmod@dividend+1,w
  3917  0645  1D03               	skipz
  3918  0646  2E49               	goto	u3825
  3919  0647  0820               	movf	___llmod@divisor,w
  3920  0648  0224               	subwf	___llmod@dividend,w
  3921  0649                     u3825:	
  3922  0649  1C03               	skipc
  3923  064A  2E53               	goto	l3874
  3924  064B  0820               	movf	___llmod@divisor,w
  3925  064C  02A4               	subwf	___llmod@dividend,f
  3926  064D  0821               	movf	___llmod@divisor+1,w
  3927  064E  3BA5               	subwfb	___llmod@dividend+1,f
  3928  064F  0822               	movf	___llmod@divisor+2,w
  3929  0650  3BA6               	subwfb	___llmod@dividend+2,f
  3930  0651  0823               	movf	___llmod@divisor+3,w
  3931  0652  3BA7               	subwfb	___llmod@dividend+3,f
  3932  0653                     l3874:	
  3933  0653  3001               	movlw	1
  3934  0654                     u3835:	
  3935  0654  36A3               	lsrf	___llmod@divisor+3,f
  3936  0655  0CA2               	rrf	___llmod@divisor+2,f
  3937  0656  0CA1               	rrf	___llmod@divisor+1,f
  3938  0657  0CA0               	rrf	___llmod@divisor,f
  3939  0658  0B89               	decfsz	9,f
  3940  0659  2E54               	goto	u3835
  3941  065A  3001               	movlw	1
  3942  065B  02A9               	subwf	___llmod@counter,f
  3943  065C  1D03               	btfss	3,2
  3944  065D  2E3B               	goto	l3870
  3945  065E                     l3878:	
  3946  065E  0827               	movf	___llmod@dividend+3,w
  3947  065F  00A3               	movwf	?___llmod+3
  3948  0660  0826               	movf	___llmod@dividend+2,w
  3949  0661  00A2               	movwf	?___llmod+2
  3950  0662  0825               	movf	___llmod@dividend+1,w
  3951  0663  00A1               	movwf	?___llmod+1
  3952  0664  0824               	movf	___llmod@dividend,w
  3953  0665  00A0               	movwf	?___llmod
  3954  0666  0008               	return
  3955  0667                     __end_of___llmod:	
  3956                           
  3957                           	psect	text8
  3958  0549                     __ptext8:	
  3959 ;; *************** function ___lldiv *****************
  3960 ;; Defined at:
  3961 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  divisor         4    0[BANK0 ] unsigned long 
  3964 ;;  dividend        4    4[BANK0 ] unsigned long 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  quotient        4    9[BANK0 ] unsigned long 
  3967 ;;  counter         1   13[BANK0 ] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  4    0[BANK0 ] unsigned long 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3977 ;;      Params:         0       8       0       0       0       0
  3978 ;;      Locals:         0       5       0       0       0       0
  3979 ;;      Temps:          0       1       0       0       0       0
  3980 ;;      Totals:         0      14       0       0       0       0
  3981 ;;Total ram usage:       14 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    3
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_xvprintf
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function ___lldiv
  3993  0549                     ___lldiv:	
  3994                           
  3995                           ;incstack = 0
  3996                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3997  0549  3000               	movlw	0
  3998  054A  0020               	movlb	0	; select bank0
  3999  054B  00AC               	movwf	___lldiv@quotient+3
  4000  054C  3000               	movlw	0
  4001  054D  00AB               	movwf	___lldiv@quotient+2
  4002  054E  3000               	movlw	0
  4003  054F  00AA               	movwf	___lldiv@quotient+1
  4004  0550  3000               	movlw	0
  4005  0551  00A9               	movwf	___lldiv@quotient
  4006  0552  0823               	movf	___lldiv@divisor+3,w
  4007  0553  0422               	iorwf	___lldiv@divisor+2,w
  4008  0554  0421               	iorwf	___lldiv@divisor+1,w
  4009  0555  0420               	iorwf	___lldiv@divisor,w
  4010  0556  1903               	skipnz
  4011  0557  2D93               	goto	l3858
  4012  0558  01AD               	clrf	___lldiv@counter
  4013  0559  0AAD               	incf	___lldiv@counter,f
  4014  055A                     l3844:	
  4015  055A  1BA3               	btfsc	___lldiv@divisor+3,7
  4016  055B  2D68               	goto	l3846
  4017  055C  3001               	movlw	1
  4018  055D                     u3735:	
  4019  055D  35A0               	lslf	___lldiv@divisor,f
  4020  055E  0DA1               	rlf	___lldiv@divisor+1,f
  4021  055F  0DA2               	rlf	___lldiv@divisor+2,f
  4022  0560  0DA3               	rlf	___lldiv@divisor+3,f
  4023  0561  0B89               	decfsz	9,f
  4024  0562  2D5D               	goto	u3735
  4025  0563  3001               	movlw	1
  4026  0564  00A8               	movwf	??___lldiv
  4027  0565  0828               	movf	??___lldiv,w
  4028  0566  07AD               	addwf	___lldiv@counter,f
  4029  0567  2D5A               	goto	l3844
  4030  0568                     l3846:	
  4031  0568  3001               	movlw	1
  4032  0569                     u3755:	
  4033  0569  35A9               	lslf	___lldiv@quotient,f
  4034  056A  0DAA               	rlf	___lldiv@quotient+1,f
  4035  056B  0DAB               	rlf	___lldiv@quotient+2,f
  4036  056C  0DAC               	rlf	___lldiv@quotient+3,f
  4037  056D  0B89               	decfsz	9,f
  4038  056E  2D69               	goto	u3755
  4039  056F  0823               	movf	___lldiv@divisor+3,w
  4040  0570  0227               	subwf	___lldiv@dividend+3,w
  4041  0571  1D03               	skipz
  4042  0572  2D7D               	goto	u3765
  4043  0573  0822               	movf	___lldiv@divisor+2,w
  4044  0574  0226               	subwf	___lldiv@dividend+2,w
  4045  0575  1D03               	skipz
  4046  0576  2D7D               	goto	u3765
  4047  0577  0821               	movf	___lldiv@divisor+1,w
  4048  0578  0225               	subwf	___lldiv@dividend+1,w
  4049  0579  1D03               	skipz
  4050  057A  2D7D               	goto	u3765
  4051  057B  0820               	movf	___lldiv@divisor,w
  4052  057C  0224               	subwf	___lldiv@dividend,w
  4053  057D                     u3765:	
  4054  057D  1C03               	skipc
  4055  057E  2D88               	goto	l3854
  4056  057F  0820               	movf	___lldiv@divisor,w
  4057  0580  02A4               	subwf	___lldiv@dividend,f
  4058  0581  0821               	movf	___lldiv@divisor+1,w
  4059  0582  3BA5               	subwfb	___lldiv@dividend+1,f
  4060  0583  0822               	movf	___lldiv@divisor+2,w
  4061  0584  3BA6               	subwfb	___lldiv@dividend+2,f
  4062  0585  0823               	movf	___lldiv@divisor+3,w
  4063  0586  3BA7               	subwfb	___lldiv@dividend+3,f
  4064  0587  1429               	bsf	___lldiv@quotient,0
  4065  0588                     l3854:	
  4066  0588  3001               	movlw	1
  4067  0589                     u3775:	
  4068  0589  36A3               	lsrf	___lldiv@divisor+3,f
  4069  058A  0CA2               	rrf	___lldiv@divisor+2,f
  4070  058B  0CA1               	rrf	___lldiv@divisor+1,f
  4071  058C  0CA0               	rrf	___lldiv@divisor,f
  4072  058D  0B89               	decfsz	9,f
  4073  058E  2D89               	goto	u3775
  4074  058F  3001               	movlw	1
  4075  0590  02AD               	subwf	___lldiv@counter,f
  4076  0591  1D03               	btfss	3,2
  4077  0592  2D68               	goto	l3846
  4078  0593                     l3858:	
  4079  0593  082C               	movf	___lldiv@quotient+3,w
  4080  0594  00A3               	movwf	?___lldiv+3
  4081  0595  082B               	movf	___lldiv@quotient+2,w
  4082  0596  00A2               	movwf	?___lldiv+2
  4083  0597  082A               	movf	___lldiv@quotient+1,w
  4084  0598  00A1               	movwf	?___lldiv+1
  4085  0599  0829               	movf	___lldiv@quotient,w
  4086  059A  00A0               	movwf	?___lldiv
  4087  059B  0008               	return
  4088  059C                     __end_of___lldiv:	
  4089                           
  4090                           	psect	text9
  4091  0F7D                     __ptext9:	
  4092 ;; *************** function _mTouch_Init *****************
  4093 ;; Defined at:
  4094 ;;		line 12 in file "mTouch.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0, pclath, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4108 ;;      Params:         0       0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0       0
  4110 ;;      Temps:          0       1       0       0       0       0
  4111 ;;      Totals:         0       1       0       0       0       0
  4112 ;;Total ram usage:        1 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    4
  4115 ;; This function calls:
  4116 ;;		_mTouch_PortInit
  4117 ;; This function is called by:
  4118 ;;		_main
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           
  4123                           ;psect for function _mTouch_Init
  4124  0F7D                     _mTouch_Init:	
  4125                           
  4126                           ;mTouch.c: 14: mTouch_PortInit();
  4127                           
  4128                           ;incstack = 0
  4129                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4130  0F7D  318F  273D         	fcall	_mTouch_PortInit
  4131                           
  4132                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4133  0F7F  0021               	movlb	1	; select bank1
  4134  0F80  0815               	movf	21,w	;volatile
  4135                           
  4136                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4137  0F81  1595               	bsf	21,3	;volatile
  4138                           
  4139                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4140  0F82  1695               	bsf	21,5	;volatile
  4141                           
  4142                           ;mTouch.c: 20: TMR0 = 0x00;
  4143  0F83  0020               	movlb	0	; select bank0
  4144  0F84  0195               	clrf	21	;volatile
  4145                           
  4146                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4147  0F85  141E               	bsf	30,0	;volatile
  4148                           
  4149                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4150  0F86  300C               	movlw	12
  4151  0F87  00A1               	movwf	??_mTouch_Init
  4152  0F88  0821               	movf	??_mTouch_Init,w
  4153  0F89  049E               	iorwf	30,f	;volatile
  4154                           
  4155                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4156  0F8A  307F               	movlw	127
  4157  0F8B  00A1               	movwf	??_mTouch_Init
  4158  0F8C  0821               	movf	??_mTouch_Init,w
  4159  0F8D  059E               	andwf	30,f	;volatile
  4160                           
  4161                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4162  0F8E  019F               	clrf	31	;volatile
  4163  0F8F  0008               	return
  4164  0F90                     __end_of_mTouch_Init:	
  4165                           
  4166                           	psect	text10
  4167  0F3D                     __ptext10:	
  4168 ;; *************** function _mTouch_PortInit *****************
  4169 ;; Defined at:
  4170 ;;		line 6 in file "mTouch.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4184 ;;      Params:         0       0       0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0       0
  4186 ;;      Temps:          0       1       0       0       0       0
  4187 ;;      Totals:         0       1       0       0       0       0
  4188 ;;Total ram usage:        1 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    3
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_mTouch_Init
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _mTouch_PortInit
  4200  0F3D                     _mTouch_PortInit:	
  4201                           
  4202                           ;mTouch.c: 8: TRISA |= (0x07);
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4206  0F3D  3007               	movlw	7
  4207  0F3E  0020               	movlb	0	; select bank0
  4208  0F3F  00A0               	movwf	??_mTouch_PortInit
  4209  0F40  0820               	movf	??_mTouch_PortInit,w
  4210  0F41  0021               	movlb	1	; select bank1
  4211  0F42  048C               	iorwf	12,f	;volatile
  4212                           
  4213                           ;mTouch.c: 9: ANSELA |= (0x07);
  4214  0F43  3007               	movlw	7
  4215  0F44  0020               	movlb	0	; select bank0
  4216  0F45  00A0               	movwf	??_mTouch_PortInit
  4217  0F46  0820               	movf	??_mTouch_PortInit,w
  4218  0F47  0023               	movlb	3	; select bank3
  4219  0F48  048C               	iorwf	12,f	;volatile
  4220  0F49  0008               	return
  4221  0F4A                     __end_of_mTouch_PortInit:	
  4222                           
  4223                           	psect	text11
  4224  0F6A                     __ptext11:	
  4225 ;; *************** function _Timer4_Init *****************
  4226 ;; Defined at:
  4227 ;;		line 3 in file "Timer4.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, status,2, status,0
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4241 ;;      Params:         0       0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0
  4243 ;;      Temps:          0       1       0       0       0       0
  4244 ;;      Totals:         0       1       0       0       0       0
  4245 ;;Total ram usage:        1 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    3
  4248 ;; This function calls:
  4249 ;;		Nothing
  4250 ;; This function is called by:
  4251 ;;		_main
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           
  4256                           ;psect for function _Timer4_Init
  4257  0F6A                     _Timer4_Init:	
  4258                           
  4259                           ;Timer4.c: 5: PR4 = 0x7D;
  4260                           
  4261                           ;incstack = 0
  4262                           ; Regs used in _Timer4_Init: [wreg+status,2+status,0]
  4263  0F6A  307D               	movlw	125
  4264  0F6B  0028               	movlb	8	; select bank8
  4265  0F6C  0096               	movwf	22	;volatile
  4266                           
  4267                           ;Timer4.c: 6: TMR4 = 0x00;
  4268  0F6D  0195               	clrf	21	;volatile
  4269                           
  4270                           ;Timer4.c: 7: T4CON |= (0x03<<0);
  4271  0F6E  3003               	movlw	3
  4272  0F6F  0020               	movlb	0	; select bank0
  4273  0F70  00A0               	movwf	??_Timer4_Init
  4274  0F71  0820               	movf	??_Timer4_Init,w
  4275  0F72  0028               	movlb	8	; select bank8
  4276  0F73  0497               	iorwf	23,f	;volatile
  4277                           
  4278                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  4279  0F74  0817               	movf	23,w	;volatile
  4280                           
  4281                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  4282  0F75  1517               	bsf	23,2	;volatile
  4283                           
  4284                           ;Timer4.c: 11: TMR4IF = 0;
  4285  0F76  0020               	movlb	0	; select bank0
  4286  0F77  1093               	bcf	19,1	;volatile
  4287                           
  4288                           ;Timer4.c: 12: TMR4IE = 1;
  4289  0F78  0021               	movlb	1	; select bank1
  4290  0F79  1493               	bsf	19,1	;volatile
  4291                           
  4292                           ;Timer4.c: 13: PEIE = 1;
  4293  0F7A  170B               	bsf	11,6	;volatile
  4294                           
  4295                           ;Timer4.c: 14: GIE = 1;
  4296  0F7B  178B               	bsf	11,7	;volatile
  4297  0F7C  0008               	return
  4298  0F7D                     __end_of_Timer4_Init:	
  4299                           
  4300                           	psect	text12
  4301  0FE6                     __ptext12:	
  4302 ;; *************** function _Timer1_Init *****************
  4303 ;; Defined at:
  4304 ;;		line 3 in file "Timer1.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4318 ;;      Params:         0       0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0
  4320 ;;      Temps:          0       1       0       0       0       0
  4321 ;;      Totals:         0       1       0       0       0       0
  4322 ;;Total ram usage:        1 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    3
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_main
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           
  4333                           ;psect for function _Timer1_Init
  4334  0FE6                     _Timer1_Init:	
  4335                           
  4336                           ;Timer1.c: 5: TRISB |= (1<<6);
  4337                           
  4338                           ;incstack = 0
  4339                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4340  0FE6  0021               	movlb	1	; select bank1
  4341  0FE7  170D               	bsf	13,6	;volatile
  4342                           
  4343                           ;Timer1.c: 6: ANSELB &= ~(1<<6);
  4344  0FE8  30BF               	movlw	191
  4345  0FE9  0020               	movlb	0	; select bank0
  4346  0FEA  00A0               	movwf	??_Timer1_Init
  4347  0FEB  0820               	movf	??_Timer1_Init,w
  4348  0FEC  0023               	movlb	3	; select bank3
  4349  0FED  058D               	andwf	13,f	;volatile
  4350                           
  4351                           ;Timer1.c: 8: T1CON |= (0x01<<2);
  4352  0FEE  0020               	movlb	0	; select bank0
  4353  0FEF  1518               	bsf	24,2	;volatile
  4354                           
  4355                           ;Timer1.c: 9: T1CON &= ~(0x01<<3);
  4356  0FF0  30F7               	movlw	247
  4357  0FF1  00A0               	movwf	??_Timer1_Init
  4358  0FF2  0820               	movf	??_Timer1_Init,w
  4359  0FF3  0598               	andwf	24,f	;volatile
  4360                           
  4361                           ;Timer1.c: 10: T1CON |= (0x00<<4);
  4362  0FF4  0818               	movf	24,w	;volatile
  4363                           
  4364                           ;Timer1.c: 11: T1CON |= (0x02<<6);
  4365  0FF5  1798               	bsf	24,7	;volatile
  4366                           
  4367                           ;Timer1.c: 13: T1GCON = 0x00;
  4368  0FF6  0199               	clrf	25	;volatile
  4369                           
  4370                           ;Timer1.c: 15: TMR1 = 0x0000;
  4371  0FF7  0196               	clrf	22	;volatile
  4372  0FF8  0197               	clrf	23	;volatile
  4373                           
  4374                           ;Timer1.c: 17: TMR1IE = 1;
  4375  0FF9  0021               	movlb	1	; select bank1
  4376  0FFA  1411               	bsf	17,0	;volatile
  4377                           
  4378                           ;Timer1.c: 18: TMR1IF = 0;
  4379  0FFB  0020               	movlb	0	; select bank0
  4380  0FFC  1011               	bcf	17,0	;volatile
  4381                           
  4382                           ;Timer1.c: 19: PEIE = 1;
  4383  0FFD  170B               	bsf	11,6	;volatile
  4384                           
  4385                           ;Timer1.c: 20: GIE = 1;
  4386  0FFE  178B               	bsf	11,7	;volatile
  4387  0FFF  0008               	return
  4388  1000                     __end_of_Timer1_Init:	
  4389                           
  4390                           	psect	text13
  4391  0432                     __ptext13:	
  4392 ;; *************** function _LCD_Init *****************
  4393 ;; Defined at:
  4394 ;;		line 28 in file "LCD.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0, pclath, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4408 ;;      Params:         0       0       0       0       0       0
  4409 ;;      Locals:         0       0       0       0       0       0
  4410 ;;      Temps:          0       2       0       0       0       0
  4411 ;;      Totals:         0       2       0       0       0       0
  4412 ;;Total ram usage:        2 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    5
  4415 ;; This function calls:
  4416 ;;		_LCD_DisplayClear
  4417 ;;		_LCD_WriteData
  4418 ;; This function is called by:
  4419 ;;		_main
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function _LCD_Init
  4425  0432                     _LCD_Init:	
  4426                           
  4427                           ;LCD.c: 30: LATA3 = 0;
  4428                           
  4429                           ;incstack = 0
  4430                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4431  0432  0022               	movlb	2	; select bank2
  4432  0433  118C               	bcf	12,3	;volatile
  4433                           
  4434                           ;LCD.c: 31: LATA4 = 0;
  4435  0434  120C               	bcf	12,4	;volatile
  4436                           
  4437                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  4438  0435  3002               	movlw	2
  4439  0436  0020               	movlb	0	; select bank0
  4440  0437  00A5               	movwf	??_LCD_Init+1
  4441  0438  3038               	movlw	56
  4442  0439  00A4               	movwf	??_LCD_Init
  4443  043A  30AD               	movlw	173
  4444  043B                     u4857:	
  4445  043B  0B89               	decfsz	9,f
  4446  043C  2C3B               	goto	u4857
  4447  043D  0BA4               	decfsz	??_LCD_Init,f
  4448  043E  2C3B               	goto	u4857
  4449  043F  0BA5               	decfsz	??_LCD_Init+1,f
  4450  0440  2C3B               	goto	u4857
  4451                           
  4452                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  4453  0441  3003               	movlw	3
  4454  0442  0020               	movlb	0	; select bank0
  4455  0443  008D               	movwf	13	;volatile
  4456                           
  4457                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4458  0444  0022               	movlb	2	; select bank2
  4459  0445  160C               	bsf	12,4	;volatile
  4460  0446  3200               	nop2	;2 cycle nop
  4461  0447  3200               	nop2	;2 cycle nop
  4462  0448  3200               	nop2	;2 cycle nop
  4463  0449  3200               	nop2	;2 cycle nop
  4464  044A  0022               	movlb	2	; select bank2
  4465  044B  120C               	bcf	12,4	;volatile
  4466  044C  3200               	nop2	;2 cycle nop
  4467  044D  3200               	nop2	;2 cycle nop
  4468  044E  3200               	nop2	;2 cycle nop
  4469  044F  3200               	nop2	;2 cycle nop
  4470                           
  4471                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  4472  0450  3034               	movlw	52
  4473  0451  0020               	movlb	0	; select bank0
  4474  0452  00A4               	movwf	??_LCD_Init
  4475  0453  30F1               	movlw	241
  4476  0454                     u4867:	
  4477  0454  0B89               	decfsz	9,f
  4478  0455  2C54               	goto	u4867
  4479  0456  0BA4               	decfsz	??_LCD_Init,f
  4480  0457  2C54               	goto	u4867
  4481  0458  3200               	nop2
  4482                           
  4483                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4484  0459  0022               	movlb	2	; select bank2
  4485  045A  160C               	bsf	12,4	;volatile
  4486  045B  3200               	nop2	;2 cycle nop
  4487  045C  3200               	nop2	;2 cycle nop
  4488  045D  3200               	nop2	;2 cycle nop
  4489  045E  3200               	nop2	;2 cycle nop
  4490  045F  0022               	movlb	2	; select bank2
  4491  0460  120C               	bcf	12,4	;volatile
  4492  0461  3200               	nop2	;2 cycle nop
  4493  0462  3200               	nop2	;2 cycle nop
  4494  0463  3200               	nop2	;2 cycle nop
  4495  0464  3200               	nop2	;2 cycle nop
  4496                           
  4497                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  4498  0465  3005               	movlw	5
  4499  0466  0020               	movlb	0	; select bank0
  4500  0467  00A4               	movwf	??_LCD_Init
  4501  0468  3026               	movlw	38
  4502  0469                     u4877:	
  4503  0469  0B89               	decfsz	9,f
  4504  046A  2C69               	goto	u4877
  4505  046B  0BA4               	decfsz	??_LCD_Init,f
  4506  046C  2C69               	goto	u4877
  4507  046D  0000               	nop
  4508                           
  4509                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4510  046E  0022               	movlb	2	; select bank2
  4511  046F  160C               	bsf	12,4	;volatile
  4512  0470  3200               	nop2	;2 cycle nop
  4513  0471  3200               	nop2	;2 cycle nop
  4514  0472  3200               	nop2	;2 cycle nop
  4515  0473  3200               	nop2	;2 cycle nop
  4516  0474  0022               	movlb	2	; select bank2
  4517  0475  120C               	bcf	12,4	;volatile
  4518  0476  3200               	nop2	;2 cycle nop
  4519  0477  3200               	nop2	;2 cycle nop
  4520  0478  3200               	nop2	;2 cycle nop
  4521  0479  3200               	nop2	;2 cycle nop
  4522                           
  4523                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  4524  047A  3005               	movlw	5
  4525  047B  0020               	movlb	0	; select bank0
  4526  047C  00A4               	movwf	??_LCD_Init
  4527  047D  3026               	movlw	38
  4528  047E                     u4887:	
  4529  047E  0B89               	decfsz	9,f
  4530  047F  2C7E               	goto	u4887
  4531  0480  0BA4               	decfsz	??_LCD_Init,f
  4532  0481  2C7E               	goto	u4887
  4533  0482  0000               	nop
  4534                           
  4535                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  4536  0483  3002               	movlw	2
  4537  0484  0020               	movlb	0	; select bank0
  4538  0485  008D               	movwf	13	;volatile
  4539                           
  4540                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4541  0486  0022               	movlb	2	; select bank2
  4542  0487  160C               	bsf	12,4	;volatile
  4543  0488  3200               	nop2	;2 cycle nop
  4544  0489  3200               	nop2	;2 cycle nop
  4545  048A  3200               	nop2	;2 cycle nop
  4546  048B  3200               	nop2	;2 cycle nop
  4547  048C  0022               	movlb	2	; select bank2
  4548  048D  120C               	bcf	12,4	;volatile
  4549  048E  3200               	nop2	;2 cycle nop
  4550  048F  3200               	nop2	;2 cycle nop
  4551  0490  3200               	nop2	;2 cycle nop
  4552  0491  3200               	nop2	;2 cycle nop
  4553                           
  4554                           ;LCD.c: 44: LCD_WriteData(0x28);
  4555  0492  3028               	movlw	40
  4556  0493  3186  2667  3184   	fcall	_LCD_WriteData
  4557                           
  4558                           ;LCD.c: 45: LCD_WriteData(0x0c);
  4559  0496  300C               	movlw	12
  4560  0497  3186  2667  3184   	fcall	_LCD_WriteData
  4561                           
  4562                           ;LCD.c: 46: LCD_DisplayClear();
  4563  049A  318F  274A  3184   	fcall	_LCD_DisplayClear
  4564                           
  4565                           ;LCD.c: 47: LCD_WriteData(0x06);
  4566  049D  3006               	movlw	6
  4567  049E  3186  2667         	fcall	_LCD_WriteData
  4568  04A0  0008               	return
  4569  04A1                     __end_of_LCD_Init:	
  4570                           
  4571                           	psect	text14
  4572  0F4A                     __ptext14:	
  4573 ;; *************** function _LCD_DisplayClear *****************
  4574 ;; Defined at:
  4575 ;;		line 64 in file "LCD.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;		None
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;		None
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  1    wreg      void 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0, pclath, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4589 ;;      Params:         0       0       0       0       0       0
  4590 ;;      Locals:         0       0       0       0       0       0
  4591 ;;      Temps:          0       1       0       0       0       0
  4592 ;;      Totals:         0       1       0       0       0       0
  4593 ;;Total ram usage:        1 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    4
  4596 ;; This function calls:
  4597 ;;		_LCD_WriteData
  4598 ;; This function is called by:
  4599 ;;		_LCD_Init
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _LCD_DisplayClear
  4605  0F4A                     _LCD_DisplayClear:	
  4606                           
  4607                           ;LCD.c: 66: LATA3 = 0;
  4608                           
  4609                           ;incstack = 0
  4610                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  4611  0F4A  0022               	movlb	2	; select bank2
  4612  0F4B  118C               	bcf	12,3	;volatile
  4613                           
  4614                           ;LCD.c: 67: LCD_WriteData(0x01);
  4615  0F4C  3001               	movlw	1
  4616  0F4D  3186  2667  318F   	fcall	_LCD_WriteData
  4617                           
  4618                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  4619  0F50  3015               	movlw	21
  4620  0F51  0020               	movlb	0	; select bank0
  4621  0F52  00A3               	movwf	??_LCD_DisplayClear
  4622  0F53  30C6               	movlw	198
  4623  0F54                     u4897:	
  4624  0F54  0B89               	decfsz	9,f
  4625  0F55  2F54               	goto	u4897
  4626  0F56  0BA3               	decfsz	??_LCD_DisplayClear,f
  4627  0F57  2F54               	goto	u4897
  4628  0F58  0000               	nop
  4629  0F59  0008               	return
  4630  0F5A                     __end_of_LCD_DisplayClear:	
  4631                           
  4632                           	psect	text15
  4633  0FCF                     __ptext15:	
  4634 ;; *************** function _LCD_CursorPosition *****************
  4635 ;; Defined at:
  4636 ;;		line 86 in file "LCD.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  tx              1    wreg     unsigned char 
  4639 ;;  ty              1    3[BANK0 ] unsigned char 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  tx              1    5[BANK0 ] unsigned char 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2, status,0, pclath, cstack
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4651 ;;      Params:         0       1       0       0       0       0
  4652 ;;      Locals:         0       1       0       0       0       0
  4653 ;;      Temps:          0       1       0       0       0       0
  4654 ;;      Totals:         0       3       0       0       0       0
  4655 ;;Total ram usage:        3 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; Hardware stack levels required when called:    4
  4658 ;; This function calls:
  4659 ;;		_LCD_WriteData
  4660 ;; This function is called by:
  4661 ;;		_main
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           
  4666                           ;psect for function _LCD_CursorPosition
  4667  0FCF                     _LCD_CursorPosition:	
  4668                           
  4669                           ;incstack = 0
  4670                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  4671                           ;LCD_CursorPosition@tx stored from wreg
  4672  0FCF  0020               	movlb	0	; select bank0
  4673  0FD0  00A5               	movwf	LCD_CursorPosition@tx
  4674                           
  4675                           ;LCD.c: 88: LATA3 = 0;
  4676  0FD1  0022               	movlb	2	; select bank2
  4677  0FD2  118C               	bcf	12,3	;volatile
  4678                           
  4679                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  4680  0FD3  0020               	movlb	0	; select bank0
  4681  0FD4  0823               	movf	LCD_CursorPosition@ty,w
  4682  0FD5  00A4               	movwf	??_LCD_CursorPosition
  4683  0FD6  3005               	movlw	5
  4684  0FD7                     u4145:	
  4685  0FD7  35A4               	lslf	??_LCD_CursorPosition,f
  4686  0FD8  3EFF               	addlw	-1
  4687  0FD9  1D03               	skipz
  4688  0FDA  2FD7               	goto	u4145
  4689  0FDB  3524               	lslf	??_LCD_CursorPosition,w
  4690  0FDC  0425               	iorwf	LCD_CursorPosition@tx,w
  4691  0FDD  3880               	iorlw	-128
  4692  0FDE  3186  2667  318F   	fcall	_LCD_WriteData
  4693                           
  4694                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  4695  0FE1  306A               	movlw	106
  4696  0FE2                     u4907:	
  4697  0FE2  0B89               	decfsz	9,f
  4698  0FE3  2FE2               	goto	u4907
  4699  0FE4  3200               	nop2
  4700  0FE5  0008               	return
  4701  0FE6                     __end_of_LCD_CursorPosition:	
  4702                           
  4703                           	psect	text16
  4704  0667                     __ptext16:	
  4705 ;; *************** function _LCD_WriteData *****************
  4706 ;; Defined at:
  4707 ;;		line 15 in file "LCD.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  point           1    wreg     char 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  point           1    2[BANK0 ] char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4721 ;;      Params:         0       0       0       0       0       0
  4722 ;;      Locals:         0       1       0       0       0       0
  4723 ;;      Temps:          0       2       0       0       0       0
  4724 ;;      Totals:         0       3       0       0       0       0
  4725 ;;Total ram usage:        3 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    3
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_LCD_Init
  4732 ;;		_LCD_Put
  4733 ;;		_LCD_DisplayClear
  4734 ;;		_LCD_CursorPosition
  4735 ;;		_LCD_CursorHome
  4736 ;;		_LCD_CursorShift
  4737 ;;		_LCD_DispShift
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function _LCD_WriteData
  4743  0667                     _LCD_WriteData:	
  4744                           
  4745                           ;incstack = 0
  4746                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  4747                           ;LCD_WriteData@point stored from wreg
  4748  0667  0020               	movlb	0	; select bank0
  4749  0668  00A2               	movwf	LCD_WriteData@point
  4750                           
  4751                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  4752  0669  30D5               	movlw	213
  4753  066A                     u4917:	
  4754  066A  0B89               	decfsz	9,f
  4755  066B  2E6A               	goto	u4917
  4756  066C  0000               	nop
  4757                           
  4758                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  4759  066D  0020               	movlb	0	; select bank0
  4760  066E  0822               	movf	LCD_WriteData@point,w
  4761  066F  00A0               	movwf	??_LCD_WriteData
  4762  0670  3004               	movlw	4
  4763  0671                     u3355:	
  4764  0671  1003               	clrc
  4765  0672  1BA0               	btfsc	??_LCD_WriteData,7
  4766  0673  1403               	setc
  4767  0674  0CA0               	rrf	??_LCD_WriteData,f
  4768  0675  0B89               	decfsz	9,f
  4769  0676  2E71               	goto	u3355
  4770  0677  3003               	movlw	3
  4771  0678  0520               	andwf	??_LCD_WriteData,w
  4772  0679  00A1               	movwf	??_LCD_WriteData+1
  4773  067A  0E22               	swapf	LCD_WriteData@point,w
  4774  067B  390F               	andlw	15
  4775  067C  1989               	btfsc	9,3
  4776  067D  38F0               	iorlw	240
  4777  067E  390C               	andlw	12
  4778  067F  0709               	addwf	9,w
  4779  0680  0421               	iorwf	??_LCD_WriteData+1,w
  4780  0681  008D               	movwf	13	;volatile
  4781                           
  4782                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4783  0682  0022               	movlb	2	; select bank2
  4784  0683  160C               	bsf	12,4	;volatile
  4785  0684  3200               	nop2	;2 cycle nop
  4786  0685  3200               	nop2	;2 cycle nop
  4787  0686  3200               	nop2	;2 cycle nop
  4788  0687  3200               	nop2	;2 cycle nop
  4789  0688  0022               	movlb	2	; select bank2
  4790  0689  120C               	bcf	12,4	;volatile
  4791  068A  3200               	nop2	;2 cycle nop
  4792  068B  3200               	nop2	;2 cycle nop
  4793  068C  3200               	nop2	;2 cycle nop
  4794  068D  3200               	nop2	;2 cycle nop
  4795                           
  4796                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  4797  068E  3003               	movlw	3
  4798  068F  0020               	movlb	0	; select bank0
  4799  0690  0522               	andwf	LCD_WriteData@point,w
  4800  0691  00A0               	movwf	??_LCD_WriteData
  4801  0692  0822               	movf	LCD_WriteData@point,w
  4802  0693  390C               	andlw	12
  4803  0694  0709               	addwf	9,w
  4804  0695  0420               	iorwf	??_LCD_WriteData,w
  4805  0696  008D               	movwf	13	;volatile
  4806                           
  4807                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4808  0697  0022               	movlb	2	; select bank2
  4809  0698  160C               	bsf	12,4	;volatile
  4810  0699  3200               	nop2	;2 cycle nop
  4811  069A  3200               	nop2	;2 cycle nop
  4812  069B  3200               	nop2	;2 cycle nop
  4813  069C  3200               	nop2	;2 cycle nop
  4814  069D  0022               	movlb	2	; select bank2
  4815  069E  120C               	bcf	12,4	;volatile
  4816  069F  3200               	nop2	;2 cycle nop
  4817  06A0  3200               	nop2	;2 cycle nop
  4818  06A1  3200               	nop2	;2 cycle nop
  4819  06A2  3200               	nop2	;2 cycle nop
  4820  06A3  0008               	return
  4821  06A4                     __end_of_LCD_WriteData:	
  4822                           
  4823                           	psect	text17
  4824  079E                     __ptext17:	
  4825 ;; *************** function _DAC_Initialize *****************
  4826 ;; Defined at:
  4827 ;;		line 14 in file "MCP4726.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4841 ;;      Params:         0       0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0
  4843 ;;      Temps:          0       2       0       0       0       0
  4844 ;;      Totals:         0       2       0       0       0       0
  4845 ;;Total ram usage:        2 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    6
  4848 ;; This function calls:
  4849 ;;		_I2C_Init
  4850 ;;		_I2C_Transmit
  4851 ;; This function is called by:
  4852 ;;		_main
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function _DAC_Initialize
  4858  079E                     _DAC_Initialize:	
  4859                           
  4860                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  4861                           
  4862                           ;incstack = 0
  4863                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4864  079E  0020               	movlb	0	; select bank0
  4865  079F  01A5               	clrf	I2C_Init@address
  4866  07A0  01A6               	clrf	I2C_Init@mode
  4867  07A1  01A7               	clrf	I2C_Init@Speed
  4868  07A2  3001               	movlw	1
  4869  07A3  3187  2727  3187   	fcall	_I2C_Init
  4870                           
  4871                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  4872  07A6  0020               	movlb	0	; select bank0
  4873  07A7  086B               	movf	_ConfigReg,w
  4874  07A8  391F               	andlw	-225
  4875  07A9  3880               	iorlw	128
  4876  07AA  00EB               	movwf	_ConfigReg
  4877                           
  4878                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  4879  07AB  106B               	bcf	_ConfigReg,0
  4880                           
  4881                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  4882  07AC  30F9               	movlw	-7
  4883  07AD  05EB               	andwf	_ConfigReg,f
  4884                           
  4885                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  4886  07AE  30E7               	movlw	-25
  4887  07AF  05EB               	andwf	_ConfigReg,f
  4888                           
  4889                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  4890  07B0  3060               	movlw	96
  4891  07B1  00B0               	movwf	??_DAC_Initialize
  4892  07B2  0830               	movf	??_DAC_Initialize,w
  4893  07B3  00A8               	movwf	I2C_Transmit@address
  4894  07B4  306B               	movlw	(low (_ConfigReg| 0))& (0+255)
  4895  07B5  00B1               	movwf	??_DAC_Initialize+1
  4896  07B6  0831               	movf	??_DAC_Initialize+1,w
  4897  07B7  00A9               	movwf	I2C_Transmit@pData
  4898  07B8  01AA               	clrf	I2C_Transmit@size
  4899  07B9  0AAA               	incf	I2C_Transmit@size,f
  4900  07BA  3001               	movlw	1
  4901  07BB  3186  26FC         	fcall	_I2C_Transmit
  4902  07BD  0008               	return
  4903  07BE                     __end_of_DAC_Initialize:	
  4904                           
  4905                           	psect	text18
  4906  06FC                     __ptext18:	
  4907 ;; *************** function _I2C_Transmit *****************
  4908 ;; Defined at:
  4909 ;;		line 23 in file "I2C_Common.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  I2Cx            1    wreg     enum E3066
  4912 ;;  address         1    8[BANK0 ] unsigned char 
  4913 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  4914 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4915 ;;  size            1   10[BANK0 ] unsigned char 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  I2Cx            1   14[BANK0 ] enum E3066
  4918 ;;  result          1   15[BANK0 ] char 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      char 
  4921 ;; Registers used:
  4922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4928 ;;      Params:         0       3       0       0       0       0
  4929 ;;      Locals:         0       2       0       0       0       0
  4930 ;;      Temps:          0       3       0       0       0       0
  4931 ;;      Totals:         0       8       0       0       0       0
  4932 ;;Total ram usage:        8 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    4
  4935 ;; This function calls:
  4936 ;;		_I2C1_Transmit
  4937 ;;		_I2C2_Transmit
  4938 ;; This function is called by:
  4939 ;;		_DAC_Initialize
  4940 ;;		_DAC_WriteVoltage
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           
  4945                           ;psect for function _I2C_Transmit
  4946  06FC                     _I2C_Transmit:	
  4947                           
  4948                           ;incstack = 0
  4949                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4950                           ;I2C_Transmit@I2Cx stored from wreg
  4951  06FC  0020               	movlb	0	; select bank0
  4952  06FD  00AE               	movwf	I2C_Transmit@I2Cx
  4953                           
  4954                           ;I2C_Common.c: 25: int8_t result;
  4955                           ;I2C_Common.c: 27: switch(I2Cx)
  4956  06FE  2F1D               	goto	l3900
  4957  06FF                     l3894:	
  4958                           ;I2C_Common.c: 28: {
  4959                           ;I2C_Common.c: 29: case I2C1_MODULE:
  4960                           
  4961                           
  4962                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  4963  06FF  0829               	movf	I2C_Transmit@pData,w
  4964  0700  00AB               	movwf	??_I2C_Transmit
  4965  0701  082B               	movf	??_I2C_Transmit,w
  4966  0702  00A0               	movwf	I2C1_Transmit@pData
  4967  0703  082A               	movf	I2C_Transmit@size,w
  4968  0704  00AC               	movwf	??_I2C_Transmit+1
  4969  0705  082C               	movf	??_I2C_Transmit+1,w
  4970  0706  00A1               	movwf	I2C1_Transmit@size
  4971  0707  0828               	movf	I2C_Transmit@address,w
  4972  0708  3183  230B  3186   	fcall	_I2C1_Transmit
  4973  070B  2F18               	goto	L8
  4974  070C                     l3896:	
  4975                           ;I2C_Common.c: 33: case I2C2_MODULE:
  4976                           
  4977                           ;I2C_Common.c: 31: break;
  4978                           
  4979                           
  4980                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  4981  070C  0829               	movf	I2C_Transmit@pData,w
  4982  070D  00AB               	movwf	??_I2C_Transmit
  4983  070E  082B               	movf	??_I2C_Transmit,w
  4984  070F  00A0               	movwf	I2C2_Transmit@pData
  4985  0710  082A               	movf	I2C_Transmit@size,w
  4986  0711  00AC               	movwf	??_I2C_Transmit+1
  4987  0712  082C               	movf	??_I2C_Transmit+1,w
  4988  0713  00A1               	movwf	I2C2_Transmit@size
  4989  0714  0828               	movf	I2C_Transmit@address,w
  4990  0715  3182  2273  3186   	fcall	_I2C2_Transmit
  4991  0718                     L8:	
  4992  0718  0020               	movlb	0	; select bank0
  4993  0719  00AD               	movwf	??_I2C_Transmit+2
  4994  071A  082D               	movf	??_I2C_Transmit+2,w
  4995  071B  00AF               	movwf	I2C_Transmit@result
  4996                           
  4997                           ;I2C_Common.c: 36: }
  4998                           
  4999                           ;I2C_Common.c: 35: break;
  5000  071C  2F25               	goto	l3902
  5001  071D                     l3900:	
  5002  071D  082E               	movf	I2C_Transmit@I2Cx,w
  5003                           
  5004                           ; Switch size 1, requested type "space"
  5005                           ; Number of cases is 2, Range of values is 0 to 1
  5006                           ; switch strategies available:
  5007                           ; Name         Instructions Cycles
  5008                           ; simple_byte            7     4 (average)
  5009                           ; direct_byte           10     6 (fixed)
  5010                           ; jumptable            260     6 (fixed)
  5011                           ;	Chosen strategy is simple_byte
  5012  071E  3A00               	xorlw	0	; case 0
  5013  071F  1903               	skipnz
  5014  0720  2EFF               	goto	l3894
  5015  0721  3A01               	xorlw	1	; case 1
  5016  0722  1903               	skipnz
  5017  0723  2F0C               	goto	l3896
  5018  0724  2F25               	goto	l3902
  5019  0725                     l3902:	
  5020                           
  5021                           ;I2C_Common.c: 37: return result;
  5022  0725  082F               	movf	I2C_Transmit@result,w
  5023  0726  0008               	return
  5024  0727                     __end_of_I2C_Transmit:	
  5025                           
  5026                           	psect	text19
  5027  0273                     __ptext19:	
  5028 ;; *************** function _I2C2_Transmit *****************
  5029 ;; Defined at:
  5030 ;;		line 52 in file "I2C2.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  address         1    wreg     unsigned char 
  5033 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  5034 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5035 ;;  size            1    1[BANK0 ] unsigned char 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;  address         1    4[BANK0 ] unsigned char 
  5038 ;;  i               1    6[BANK0 ] unsigned char 
  5039 ;;  i               1    5[BANK0 ] unsigned char 
  5040 ;;  result          1    7[BANK0 ] char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      char 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5050 ;;      Params:         0       2       0       0       0       0
  5051 ;;      Locals:         0       4       0       0       0       0
  5052 ;;      Temps:          0       2       0       0       0       0
  5053 ;;      Totals:         0       8       0       0       0       0
  5054 ;;Total ram usage:        8 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    3
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_I2C_Transmit
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           
  5065                           ;psect for function _I2C2_Transmit
  5066  0273                     _I2C2_Transmit:	
  5067                           
  5068                           ;incstack = 0
  5069                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  5070                           ;I2C2_Transmit@address stored from wreg
  5071  0273  0020               	movlb	0	; select bank0
  5072  0274  00A4               	movwf	I2C2_Transmit@address
  5073                           
  5074                           ;I2C2.c: 54: int8_t result = 0;
  5075  0275  01A7               	clrf	I2C2_Transmit@result
  5076                           
  5077                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  5078  0276  2AFF               	goto	l3810
  5079  0277                     l3766:	
  5080                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5081                           
  5082                           ;I2C2.c: 57: {
  5083                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  5084                           
  5085  0277  3005               	movlw	5
  5086  0278  0024               	movlb	4	; select bank4
  5087  0279  051C               	andwf	28,w	;volatile
  5088  027A  0020               	movlb	0	; select bank0
  5089  027B  00A2               	movwf	??_I2C2_Transmit
  5090  027C  0024               	movlb	4	; select bank4
  5091  027D  081E               	movf	30,w	;volatile
  5092  027E  391F               	andlw	31
  5093  027F  0020               	movlb	0	; select bank0
  5094  0280  0422               	iorwf	??_I2C2_Transmit,w
  5095  0281  1D03               	btfss	3,2
  5096  0282  2A77               	goto	l3766
  5097                           
  5098                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  5099  0283  0024               	movlb	4	; select bank4
  5100  0284  141E               	bsf	30,0	;volatile
  5101  0285                     l3768:	
  5102                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5103                           
  5104  0285  3005               	movlw	5
  5105  0286  0024               	movlb	4	; select bank4
  5106  0287  051C               	andwf	28,w	;volatile
  5107  0288  0020               	movlb	0	; select bank0
  5108  0289  00A2               	movwf	??_I2C2_Transmit
  5109  028A  0024               	movlb	4	; select bank4
  5110  028B  081E               	movf	30,w	;volatile
  5111  028C  391F               	andlw	31
  5112  028D  0020               	movlb	0	; select bank0
  5113  028E  0422               	iorwf	??_I2C2_Transmit,w
  5114  028F  1D03               	btfss	3,2
  5115  0290  2A85               	goto	l3768
  5116                           
  5117                           ;I2C2.c: 63: SSP2BUF = address << 1;
  5118  0291  3524               	lslf	I2C2_Transmit@address,w
  5119  0292  0024               	movlb	4	; select bank4
  5120  0293  0099               	movwf	25	;volatile
  5121  0294                     l228:	
  5122                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  5123                           
  5124  0294  191C               	btfsc	28,2	;volatile
  5125  0295  2A94               	goto	l228
  5126                           
  5127                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  5128  0296  3000               	movlw	0
  5129  0297  1B1E               	btfsc	30,6	;volatile
  5130  0298  3001               	movlw	1
  5131  0299  0020               	movlb	0	; select bank0
  5132  029A  00A7               	movwf	I2C2_Transmit@result
  5133                           
  5134                           ;I2C2.c: 67: if (!result)
  5135  029B  0827               	movf	I2C2_Transmit@result,w
  5136  029C  1D03               	btfss	3,2
  5137  029D  2ACB               	goto	l3792
  5138                           
  5139                           ;I2C2.c: 68: {
  5140                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  5141  029E  01A5               	clrf	I2C2_Transmit@i
  5142  029F  2AA4               	goto	l3790
  5143  02A0                     l3788:	
  5144                           ;I2C2.c: 79: break;
  5145                           
  5146  02A0  3001               	movlw	1
  5147  02A1  00A2               	movwf	??_I2C2_Transmit
  5148  02A2  0822               	movf	??_I2C2_Transmit,w
  5149  02A3  07A5               	addwf	I2C2_Transmit@i,f
  5150  02A4                     l3790:	
  5151  02A4  0821               	movf	I2C2_Transmit@size,w
  5152  02A5  0225               	subwf	I2C2_Transmit@i,w
  5153  02A6  1803               	btfsc	3,0
  5154  02A7  2ACB               	goto	l3792
  5155  02A8                     l3778:	
  5156                           ;I2C2.c: 70: {
  5157                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5158                           
  5159  02A8  3005               	movlw	5
  5160  02A9  0024               	movlb	4	; select bank4
  5161  02AA  051C               	andwf	28,w	;volatile
  5162  02AB  0020               	movlb	0	; select bank0
  5163  02AC  00A2               	movwf	??_I2C2_Transmit
  5164  02AD  0024               	movlb	4	; select bank4
  5165  02AE  081E               	movf	30,w	;volatile
  5166  02AF  391F               	andlw	31
  5167  02B0  0020               	movlb	0	; select bank0
  5168  02B1  0422               	iorwf	??_I2C2_Transmit,w
  5169  02B2  1D03               	btfss	3,2
  5170  02B3  2AA8               	goto	l3778
  5171                           
  5172                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  5173  02B4  0825               	movf	I2C2_Transmit@i,w
  5174  02B5  0720               	addwf	I2C2_Transmit@pData,w
  5175  02B6  00A2               	movwf	??_I2C2_Transmit
  5176  02B7  0822               	movf	??_I2C2_Transmit,w
  5177  02B8  0086               	movwf	6
  5178  02B9  0187               	clrf	7
  5179  02BA  0801               	movf	1,w
  5180  02BB  0024               	movlb	4	; select bank4
  5181  02BC  0099               	movwf	25	;volatile
  5182  02BD                     l237:	
  5183                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  5184                           
  5185  02BD  191C               	btfsc	28,2	;volatile
  5186  02BE  2ABD               	goto	l237
  5187                           
  5188                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  5189  02BF  3000               	movlw	0
  5190  02C0  1B1E               	btfsc	30,6	;volatile
  5191  02C1  3001               	movlw	1
  5192  02C2  0020               	movlb	0	; select bank0
  5193  02C3  00A7               	movwf	I2C2_Transmit@result
  5194                           
  5195                           ;I2C2.c: 76: if (result)
  5196  02C4  0827               	movf	I2C2_Transmit@result,w
  5197  02C5  1903               	btfsc	3,2
  5198  02C6  2AA0               	goto	l3788
  5199                           
  5200                           ;I2C2.c: 77: {
  5201                           ;I2C2.c: 78: result = 2;
  5202  02C7  3002               	movlw	2
  5203  02C8  00A2               	movwf	??_I2C2_Transmit
  5204  02C9  0822               	movf	??_I2C2_Transmit,w
  5205  02CA  00A7               	movwf	I2C2_Transmit@result
  5206  02CB                     l3792:	
  5207                           ;I2C2.c: 80: }
  5208                           ;I2C2.c: 81: }
  5209                           ;I2C2.c: 82: }
  5210                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5211                           
  5212  02CB  3005               	movlw	5
  5213  02CC  0024               	movlb	4	; select bank4
  5214  02CD  051C               	andwf	28,w	;volatile
  5215  02CE  0020               	movlb	0	; select bank0
  5216  02CF  00A2               	movwf	??_I2C2_Transmit
  5217  02D0  0024               	movlb	4	; select bank4
  5218  02D1  081E               	movf	30,w	;volatile
  5219  02D2  391F               	andlw	31
  5220  02D3  0020               	movlb	0	; select bank0
  5221  02D4  0422               	iorwf	??_I2C2_Transmit,w
  5222  02D5  1D03               	btfss	3,2
  5223  02D6  2ACB               	goto	l3792
  5224                           
  5225                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  5226  02D7  0024               	movlb	4	; select bank4
  5227  02D8  151E               	bsf	30,2	;volatile
  5228                           
  5229                           ;I2C2.c: 86: break;
  5230  02D9  2B08               	goto	l3812
  5231  02DA                     l246:	
  5232                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  5233                           
  5234                           
  5235                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  5236  02DA  0024               	movlb	4	; select bank4
  5237  02DB  1D9C               	btfss	28,3	;volatile
  5238  02DC  1E1C               	btfss	28,4	;volatile
  5239  02DD  2AFC               	goto	l3806
  5240                           
  5241                           ;I2C2.c: 90: {
  5242                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  5243  02DE  0020               	movlb	0	; select bank0
  5244  02DF  01A6               	clrf	I2C2_Transmit@i_316
  5245  02E0                     l3802:	
  5246  02E0  0821               	movf	I2C2_Transmit@size,w
  5247  02E1  0226               	subwf	I2C2_Transmit@i_316,w
  5248  02E2  1803               	btfsc	3,0
  5249  02E3  2AF7               	goto	l3804
  5250                           
  5251                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  5252  02E4  0826               	movf	I2C2_Transmit@i_316,w
  5253  02E5  0720               	addwf	I2C2_Transmit@pData,w
  5254  02E6  00A2               	movwf	??_I2C2_Transmit
  5255  02E7  0822               	movf	??_I2C2_Transmit,w
  5256  02E8  0086               	movwf	6
  5257  02E9  0187               	clrf	7
  5258  02EA  0801               	movf	1,w
  5259  02EB  00A3               	movwf	??_I2C2_Transmit+1
  5260  02EC  0826               	movf	I2C2_Transmit@i_316,w
  5261  02ED  3EAB               	addlw	(low (_I2C2_Config| 0))& (0+255)
  5262  02EE  0086               	movwf	6
  5263  02EF  0187               	clrf	7
  5264  02F0  0823               	movf	??_I2C2_Transmit+1,w
  5265  02F1  0081               	movwf	1
  5266  02F2  3001               	movlw	1
  5267  02F3  00A2               	movwf	??_I2C2_Transmit
  5268  02F4  0822               	movf	??_I2C2_Transmit,w
  5269  02F5  07A6               	addwf	I2C2_Transmit@i_316,f
  5270  02F6  2AE0               	goto	l3802
  5271  02F7                     l3804:	
  5272                           
  5273                           ;I2C2.c: 93: result = size;
  5274  02F7  0821               	movf	I2C2_Transmit@size,w
  5275  02F8  00A2               	movwf	??_I2C2_Transmit
  5276  02F9  0822               	movf	??_I2C2_Transmit,w
  5277  02FA  00A7               	movwf	I2C2_Transmit@result
  5278                           
  5279                           ;I2C2.c: 94: }
  5280  02FB  2B08               	goto	l3812
  5281  02FC                     l3806:	
  5282                           
  5283                           ;I2C2.c: 95: else
  5284                           ;I2C2.c: 96: result = 0;
  5285  02FC  0020               	movlb	0	; select bank0
  5286  02FD  01A7               	clrf	I2C2_Transmit@result
  5287                           
  5288                           ;I2C2.c: 98: }
  5289                           
  5290                           ;I2C2.c: 97: break;
  5291  02FE  2B08               	goto	l3812
  5292  02FF                     l3810:	
  5293  02FF  0021               	movlb	1	; select bank1
  5294  0300  083D               	movf	(_I2C2_Config^(0+128)+18),w
  5295                           
  5296                           ; Switch size 1, requested type "space"
  5297                           ; Number of cases is 2, Range of values is 0 to 1
  5298                           ; switch strategies available:
  5299                           ; Name         Instructions Cycles
  5300                           ; simple_byte            7     4 (average)
  5301                           ; direct_byte           10     6 (fixed)
  5302                           ; jumptable            260     6 (fixed)
  5303                           ;	Chosen strategy is simple_byte
  5304  0301  3A00               	xorlw	0	; case 0
  5305  0302  1903               	skipnz
  5306  0303  2A77               	goto	l3766
  5307  0304  3A01               	xorlw	1	; case 1
  5308  0305  1903               	skipnz
  5309  0306  2ADA               	goto	l246
  5310  0307  2B08               	goto	l3812
  5311  0308                     l3812:	
  5312                           
  5313                           ;I2C2.c: 100: return result;
  5314  0308  0020               	movlb	0	; select bank0
  5315  0309  0827               	movf	I2C2_Transmit@result,w
  5316  030A  0008               	return
  5317  030B                     __end_of_I2C2_Transmit:	
  5318                           
  5319                           	psect	text20
  5320  030B                     __ptext20:	
  5321 ;; *************** function _I2C1_Transmit *****************
  5322 ;; Defined at:
  5323 ;;		line 52 in file "I2C1.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  address         1    wreg     unsigned char 
  5326 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  5327 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5328 ;;  size            1    1[BANK0 ] unsigned char 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  address         1    4[BANK0 ] unsigned char 
  5331 ;;  i               1    6[BANK0 ] unsigned char 
  5332 ;;  i               1    5[BANK0 ] unsigned char 
  5333 ;;  result          1    7[BANK0 ] char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      char 
  5336 ;; Registers used:
  5337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5343 ;;      Params:         0       2       0       0       0       0
  5344 ;;      Locals:         0       4       0       0       0       0
  5345 ;;      Temps:          0       2       0       0       0       0
  5346 ;;      Totals:         0       8       0       0       0       0
  5347 ;;Total ram usage:        8 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    3
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		_I2C_Transmit
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           
  5358                           ;psect for function _I2C1_Transmit
  5359  030B                     _I2C1_Transmit:	
  5360                           
  5361                           ;incstack = 0
  5362                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  5363                           ;I2C1_Transmit@address stored from wreg
  5364  030B  0020               	movlb	0	; select bank0
  5365  030C  00A4               	movwf	I2C1_Transmit@address
  5366                           
  5367                           ;I2C1.c: 54: int8_t result;
  5368                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  5369  030D  2B96               	goto	l3724
  5370  030E                     l3680:	
  5371                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5372                           
  5373                           ;I2C1.c: 57: {
  5374                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  5375                           
  5376  030E  3005               	movlw	5
  5377  030F  0024               	movlb	4	; select bank4
  5378  0310  0514               	andwf	20,w	;volatile
  5379  0311  0020               	movlb	0	; select bank0
  5380  0312  00A2               	movwf	??_I2C1_Transmit
  5381  0313  0024               	movlb	4	; select bank4
  5382  0314  0816               	movf	22,w	;volatile
  5383  0315  391F               	andlw	31
  5384  0316  0020               	movlb	0	; select bank0
  5385  0317  0422               	iorwf	??_I2C1_Transmit,w
  5386  0318  1D03               	btfss	3,2
  5387  0319  2B0E               	goto	l3680
  5388                           
  5389                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  5390  031A  0024               	movlb	4	; select bank4
  5391  031B  1416               	bsf	22,0	;volatile
  5392  031C                     l3682:	
  5393                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5394                           
  5395  031C  3005               	movlw	5
  5396  031D  0024               	movlb	4	; select bank4
  5397  031E  0514               	andwf	20,w	;volatile
  5398  031F  0020               	movlb	0	; select bank0
  5399  0320  00A2               	movwf	??_I2C1_Transmit
  5400  0321  0024               	movlb	4	; select bank4
  5401  0322  0816               	movf	22,w	;volatile
  5402  0323  391F               	andlw	31
  5403  0324  0020               	movlb	0	; select bank0
  5404  0325  0422               	iorwf	??_I2C1_Transmit,w
  5405  0326  1D03               	btfss	3,2
  5406  0327  2B1C               	goto	l3682
  5407                           
  5408                           ;I2C1.c: 63: SSP1BUF = address << 1;
  5409  0328  3524               	lslf	I2C1_Transmit@address,w
  5410  0329  0024               	movlb	4	; select bank4
  5411  032A  0091               	movwf	17	;volatile
  5412  032B                     l91:	
  5413                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  5414                           
  5415  032B  1914               	btfsc	20,2	;volatile
  5416  032C  2B2B               	goto	l91
  5417                           
  5418                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  5419  032D  3000               	movlw	0
  5420  032E  1B16               	btfsc	22,6	;volatile
  5421  032F  3001               	movlw	1
  5422  0330  0020               	movlb	0	; select bank0
  5423  0331  00A7               	movwf	I2C1_Transmit@result
  5424                           
  5425                           ;I2C1.c: 67: if (!result)
  5426  0332  0827               	movf	I2C1_Transmit@result,w
  5427  0333  1D03               	btfss	3,2
  5428  0334  2B62               	goto	l3706
  5429                           
  5430                           ;I2C1.c: 68: {
  5431                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  5432  0335  01A5               	clrf	I2C1_Transmit@i
  5433  0336  2B3B               	goto	l3704
  5434  0337                     l3702:	
  5435                           ;I2C1.c: 79: break;
  5436                           
  5437  0337  3001               	movlw	1
  5438  0338  00A2               	movwf	??_I2C1_Transmit
  5439  0339  0822               	movf	??_I2C1_Transmit,w
  5440  033A  07A5               	addwf	I2C1_Transmit@i,f
  5441  033B                     l3704:	
  5442  033B  0821               	movf	I2C1_Transmit@size,w
  5443  033C  0225               	subwf	I2C1_Transmit@i,w
  5444  033D  1803               	btfsc	3,0
  5445  033E  2B62               	goto	l3706
  5446  033F                     l3692:	
  5447                           ;I2C1.c: 70: {
  5448                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5449                           
  5450  033F  3005               	movlw	5
  5451  0340  0024               	movlb	4	; select bank4
  5452  0341  0514               	andwf	20,w	;volatile
  5453  0342  0020               	movlb	0	; select bank0
  5454  0343  00A2               	movwf	??_I2C1_Transmit
  5455  0344  0024               	movlb	4	; select bank4
  5456  0345  0816               	movf	22,w	;volatile
  5457  0346  391F               	andlw	31
  5458  0347  0020               	movlb	0	; select bank0
  5459  0348  0422               	iorwf	??_I2C1_Transmit,w
  5460  0349  1D03               	btfss	3,2
  5461  034A  2B3F               	goto	l3692
  5462                           
  5463                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  5464  034B  0825               	movf	I2C1_Transmit@i,w
  5465  034C  0720               	addwf	I2C1_Transmit@pData,w
  5466  034D  00A2               	movwf	??_I2C1_Transmit
  5467  034E  0822               	movf	??_I2C1_Transmit,w
  5468  034F  0086               	movwf	6
  5469  0350  0187               	clrf	7
  5470  0351  0801               	movf	1,w
  5471  0352  0024               	movlb	4	; select bank4
  5472  0353  0091               	movwf	17	;volatile
  5473  0354                     l100:	
  5474                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  5475                           
  5476  0354  1914               	btfsc	20,2	;volatile
  5477  0355  2B54               	goto	l100
  5478                           
  5479                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  5480  0356  3000               	movlw	0
  5481  0357  1B16               	btfsc	22,6	;volatile
  5482  0358  3001               	movlw	1
  5483  0359  0020               	movlb	0	; select bank0
  5484  035A  00A7               	movwf	I2C1_Transmit@result
  5485                           
  5486                           ;I2C1.c: 76: if (result)
  5487  035B  0827               	movf	I2C1_Transmit@result,w
  5488  035C  1903               	btfsc	3,2
  5489  035D  2B37               	goto	l3702
  5490                           
  5491                           ;I2C1.c: 77: {
  5492                           ;I2C1.c: 78: result = 2;
  5493  035E  3002               	movlw	2
  5494  035F  00A2               	movwf	??_I2C1_Transmit
  5495  0360  0822               	movf	??_I2C1_Transmit,w
  5496  0361  00A7               	movwf	I2C1_Transmit@result
  5497  0362                     l3706:	
  5498                           ;I2C1.c: 80: }
  5499                           ;I2C1.c: 81: }
  5500                           ;I2C1.c: 82: }
  5501                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5502                           
  5503  0362  3005               	movlw	5
  5504  0363  0024               	movlb	4	; select bank4
  5505  0364  0514               	andwf	20,w	;volatile
  5506  0365  0020               	movlb	0	; select bank0
  5507  0366  00A2               	movwf	??_I2C1_Transmit
  5508  0367  0024               	movlb	4	; select bank4
  5509  0368  0816               	movf	22,w	;volatile
  5510  0369  391F               	andlw	31
  5511  036A  0020               	movlb	0	; select bank0
  5512  036B  0422               	iorwf	??_I2C1_Transmit,w
  5513  036C  1D03               	btfss	3,2
  5514  036D  2B62               	goto	l3706
  5515                           
  5516                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  5517  036E  0024               	movlb	4	; select bank4
  5518  036F  1516               	bsf	22,2	;volatile
  5519                           
  5520                           ;I2C1.c: 86: break;
  5521  0370  2B9F               	goto	l3726
  5522  0371                     l109:	
  5523                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  5524                           
  5525                           
  5526                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  5527  0371  0024               	movlb	4	; select bank4
  5528  0372  1D94               	btfss	20,3	;volatile
  5529  0373  1E14               	btfss	20,4	;volatile
  5530  0374  2B93               	goto	l3720
  5531                           
  5532                           ;I2C1.c: 90: {
  5533                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  5534  0375  0020               	movlb	0	; select bank0
  5535  0376  01A6               	clrf	I2C1_Transmit@i_172
  5536  0377                     l3716:	
  5537  0377  0821               	movf	I2C1_Transmit@size,w
  5538  0378  0226               	subwf	I2C1_Transmit@i_172,w
  5539  0379  1803               	btfsc	3,0
  5540  037A  2B8E               	goto	l3718
  5541                           
  5542                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  5543  037B  0826               	movf	I2C1_Transmit@i_172,w
  5544  037C  0720               	addwf	I2C1_Transmit@pData,w
  5545  037D  00A2               	movwf	??_I2C1_Transmit
  5546  037E  0822               	movf	??_I2C1_Transmit,w
  5547  037F  0086               	movwf	6
  5548  0380  0187               	clrf	7
  5549  0381  0801               	movf	1,w
  5550  0382  00A3               	movwf	??_I2C1_Transmit+1
  5551  0383  0826               	movf	I2C1_Transmit@i_172,w
  5552  0384  3EBE               	addlw	(low (_I2C1_Config| 0))& (0+255)
  5553  0385  0086               	movwf	6
  5554  0386  0187               	clrf	7
  5555  0387  0823               	movf	??_I2C1_Transmit+1,w
  5556  0388  0081               	movwf	1
  5557  0389  3001               	movlw	1
  5558  038A  00A2               	movwf	??_I2C1_Transmit
  5559  038B  0822               	movf	??_I2C1_Transmit,w
  5560  038C  07A6               	addwf	I2C1_Transmit@i_172,f
  5561  038D  2B77               	goto	l3716
  5562  038E                     l3718:	
  5563                           
  5564                           ;I2C1.c: 93: result = size;
  5565  038E  0821               	movf	I2C1_Transmit@size,w
  5566  038F  00A2               	movwf	??_I2C1_Transmit
  5567  0390  0822               	movf	??_I2C1_Transmit,w
  5568  0391  00A7               	movwf	I2C1_Transmit@result
  5569                           
  5570                           ;I2C1.c: 94: }
  5571  0392  2B9F               	goto	l3726
  5572  0393                     l3720:	
  5573                           
  5574                           ;I2C1.c: 95: else
  5575                           ;I2C1.c: 96: result = 0;
  5576  0393  0020               	movlb	0	; select bank0
  5577  0394  01A7               	clrf	I2C1_Transmit@result
  5578                           
  5579                           ;I2C1.c: 98: }
  5580                           
  5581                           ;I2C1.c: 97: break;
  5582  0395  2B9F               	goto	l3726
  5583  0396                     l3724:	
  5584  0396  0021               	movlb	1	; select bank1
  5585  0397  0850               	movf	(_I2C1_Config^(0+128)+18),w
  5586                           
  5587                           ; Switch size 1, requested type "space"
  5588                           ; Number of cases is 2, Range of values is 0 to 1
  5589                           ; switch strategies available:
  5590                           ; Name         Instructions Cycles
  5591                           ; simple_byte            7     4 (average)
  5592                           ; direct_byte           10     6 (fixed)
  5593                           ; jumptable            260     6 (fixed)
  5594                           ;	Chosen strategy is simple_byte
  5595  0398  3A00               	xorlw	0	; case 0
  5596  0399  1903               	skipnz
  5597  039A  2B0E               	goto	l3680
  5598  039B  3A01               	xorlw	1	; case 1
  5599  039C  1903               	skipnz
  5600  039D  2B71               	goto	l109
  5601  039E  2B9F               	goto	l3726
  5602  039F                     l3726:	
  5603                           
  5604                           ;I2C1.c: 100: return result;
  5605  039F  0020               	movlb	0	; select bank0
  5606  03A0  0827               	movf	I2C1_Transmit@result,w
  5607  03A1  0008               	return
  5608  03A2                     __end_of_I2C1_Transmit:	
  5609                           
  5610                           	psect	text21
  5611  0727                     __ptext21:	
  5612 ;; *************** function _I2C_Init *****************
  5613 ;; Defined at:
  5614 ;;		line 6 in file "I2C_Common.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  I2Cx            1    wreg     enum E3066
  5617 ;;  address         1    5[BANK0 ] unsigned char 
  5618 ;;  mode            1    6[BANK0 ] enum E3057
  5619 ;;  Speed           1    7[BANK0 ] enum E3061
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  I2Cx            1   10[BANK0 ] enum E3066
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5631 ;;      Params:         0       3       0       0       0       0
  5632 ;;      Locals:         0       1       0       0       0       0
  5633 ;;      Temps:          0       2       0       0       0       0
  5634 ;;      Totals:         0       6       0       0       0       0
  5635 ;;Total ram usage:        6 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    5
  5638 ;; This function calls:
  5639 ;;		_I2C1_Setting
  5640 ;;		_I2C2_Setting
  5641 ;; This function is called by:
  5642 ;;		_DAC_Initialize
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           
  5647                           ;psect for function _I2C_Init
  5648  0727                     _I2C_Init:	
  5649                           
  5650                           ;incstack = 0
  5651                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5652                           ;I2C_Init@I2Cx stored from wreg
  5653  0727  0020               	movlb	0	; select bank0
  5654  0728  00AA               	movwf	I2C_Init@I2Cx
  5655                           
  5656                           ;I2C_Common.c: 8: switch(I2Cx)
  5657  0729  2F45               	goto	l3890
  5658  072A                     l3884:	
  5659                           ;I2C_Common.c: 9: {
  5660                           ;I2C_Common.c: 10: case I2C1_MODULE:
  5661                           
  5662                           
  5663                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  5664  072A  0826               	movf	I2C_Init@mode,w
  5665  072B  00A8               	movwf	??_I2C_Init
  5666  072C  0828               	movf	??_I2C_Init,w
  5667  072D  00A1               	movwf	I2C1_Setting@mode
  5668  072E  0827               	movf	I2C_Init@Speed,w
  5669  072F  00A9               	movwf	??_I2C_Init+1
  5670  0730  0829               	movf	??_I2C_Init+1,w
  5671  0731  00A2               	movwf	I2C1_Setting@Speed
  5672  0732  0825               	movf	I2C_Init@address,w
  5673  0733  3185  25E0  3187   	fcall	_I2C1_Setting
  5674                           
  5675                           ;I2C_Common.c: 12: break;
  5676  0736  2F4E               	goto	l338
  5677  0737                     l3886:	
  5678                           ;I2C_Common.c: 14: case I2C2_MODULE:
  5679                           
  5680                           
  5681                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  5682  0737  0020               	movlb	0	; select bank0
  5683  0738  0826               	movf	I2C_Init@mode,w
  5684  0739  00A8               	movwf	??_I2C_Init
  5685  073A  0828               	movf	??_I2C_Init,w
  5686  073B  00A1               	movwf	I2C2_Setting@mode
  5687  073C  0827               	movf	I2C_Init@Speed,w
  5688  073D  00A9               	movwf	??_I2C_Init+1
  5689  073E  0829               	movf	??_I2C_Init+1,w
  5690  073F  00A2               	movwf	I2C2_Setting@Speed
  5691  0740  0825               	movf	I2C_Init@address,w
  5692  0741  3185  259C  3187   	fcall	_I2C2_Setting
  5693                           
  5694                           ;I2C_Common.c: 17: }
  5695                           
  5696                           ;I2C_Common.c: 16: break;
  5697  0744  2F4E               	goto	l338
  5698  0745                     l3890:	
  5699  0745  0020               	movlb	0	; select bank0
  5700  0746  082A               	movf	I2C_Init@I2Cx,w
  5701                           
  5702                           ; Switch size 1, requested type "space"
  5703                           ; Number of cases is 2, Range of values is 0 to 1
  5704                           ; switch strategies available:
  5705                           ; Name         Instructions Cycles
  5706                           ; simple_byte            7     4 (average)
  5707                           ; direct_byte           10     6 (fixed)
  5708                           ; jumptable            260     6 (fixed)
  5709                           ;	Chosen strategy is simple_byte
  5710  0747  3A00               	xorlw	0	; case 0
  5711  0748  1903               	skipnz
  5712  0749  2F2A               	goto	l3884
  5713  074A  3A01               	xorlw	1	; case 1
  5714  074B  1903               	skipnz
  5715  074C  2F37               	goto	l3886
  5716  074D  2F4E               	goto	l338
  5717  074E                     l338:	
  5718                           
  5719                           ;I2C_Common.c: 19: PEIE = 1;
  5720  074E  170B               	bsf	11,6	;volatile
  5721                           
  5722                           ;I2C_Common.c: 20: GIE = 1;
  5723  074F  178B               	bsf	11,7	;volatile
  5724  0750  0008               	return
  5725  0751                     __end_of_I2C_Init:	
  5726                           
  5727                           	psect	text22
  5728  059C                     __ptext22:	
  5729 ;; *************** function _I2C2_Setting *****************
  5730 ;; Defined at:
  5731 ;;		line 15 in file "I2C2.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  address         1    wreg     unsigned char 
  5734 ;;  mode            1    1[BANK0 ] enum E3057
  5735 ;;  Speed           1    2[BANK0 ] enum E3061
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  address         1    4[BANK0 ] unsigned char 
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  1    wreg      void 
  5740 ;; Registers used:
  5741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5747 ;;      Params:         0       2       0       0       0       0
  5748 ;;      Locals:         0       1       0       0       0       0
  5749 ;;      Temps:          0       1       0       0       0       0
  5750 ;;      Totals:         0       4       0       0       0       0
  5751 ;;Total ram usage:        4 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:    4
  5754 ;; This function calls:
  5755 ;;		_I2C2_PinInit
  5756 ;; This function is called by:
  5757 ;;		_I2C_Init
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function _I2C2_Setting
  5763  059C                     _I2C2_Setting:	
  5764                           
  5765                           ;incstack = 0
  5766                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5767                           ;I2C2_Setting@address stored from wreg
  5768  059C  0020               	movlb	0	; select bank0
  5769  059D  00A4               	movwf	I2C2_Setting@address
  5770                           
  5771                           ;I2C2.c: 17: I2C2_PinInit();
  5772  059E  318F  2730  3185   	fcall	_I2C2_PinInit
  5773                           
  5774                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  5775  05A1  0020               	movlb	0	; select bank0
  5776  05A2  0821               	movf	I2C2_Setting@mode,w
  5777  05A3  00A3               	movwf	??_I2C2_Setting
  5778  05A4  0823               	movf	??_I2C2_Setting,w
  5779  05A5  0021               	movlb	1	; select bank1
  5780  05A6  00BD               	movwf	(_I2C2_Config^(0+128)+18)
  5781                           
  5782                           ;I2C2.c: 20: switch(mode)
  5783  05A7  2DD0               	goto	l3762
  5784  05A8                     l211:	
  5785                           ;I2C2.c: 21: {
  5786                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  5787                           
  5788                           
  5789                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  5790  05A8  0024               	movlb	4	; select bank4
  5791  05A9  159D               	bsf	29,3	;volatile
  5792                           
  5793                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5794  05AA  0020               	movlb	0	; select bank0
  5795  05AB  0822               	movf	I2C2_Setting@Speed,w
  5796  05AC  1D03               	btfss	3,2
  5797  05AD  2DB2               	goto	l3740
  5798                           
  5799                           ;I2C2.c: 25: {
  5800                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  5801  05AE  0024               	movlb	4	; select bank4
  5802  05AF  179C               	bsf	28,7	;volatile
  5803                           
  5804                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  5805  05B0  304F               	movlw	79
  5806  05B1  2DBC               	goto	L9
  5807  05B2                     l3740:	
  5808                           ;I2C2.c: 28: }
  5809                           
  5810                           
  5811                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5812  05B2  0020               	movlb	0	; select bank0
  5813  05B3  0322               	decf	I2C2_Setting@Speed,w
  5814  05B4  1D03               	btfss	3,2
  5815  05B5  2DBD               	goto	l3746
  5816                           
  5817                           ;I2C2.c: 30: {
  5818                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  5819  05B6  307F               	movlw	127
  5820  05B7  00A3               	movwf	??_I2C2_Setting
  5821  05B8  0823               	movf	??_I2C2_Setting,w
  5822  05B9  0024               	movlb	4	; select bank4
  5823  05BA  059C               	andwf	28,f	;volatile
  5824                           
  5825                           ;I2C2.c: 32: SSP2ADD = 0x13;
  5826  05BB  3013               	movlw	19
  5827  05BC                     L9:	
  5828  05BC  009A               	movwf	26	;volatile
  5829  05BD                     l3746:	
  5830                           
  5831                           ;I2C2.c: 33: }
  5832                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  5833  05BD  0024               	movlb	4	; select bank4
  5834  05BE  2DCE               	goto	l3758
  5835  05BF                     l3748:	
  5836                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  5837                           
  5838                           ;I2C2.c: 35: break;
  5839                           
  5840                           
  5841                           ;I2C2.c: 38: SSP2STAT = 0x00;
  5842  05BF  0024               	movlb	4	; select bank4
  5843  05C0  019C               	clrf	28	;volatile
  5844                           
  5845                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  5846  05C1  3006               	movlw	6
  5847  05C2  0020               	movlb	0	; select bank0
  5848  05C3  00A3               	movwf	??_I2C2_Setting
  5849  05C4  0823               	movf	??_I2C2_Setting,w
  5850  05C5  0024               	movlb	4	; select bank4
  5851  05C6  049D               	iorwf	29,f	;volatile
  5852                           
  5853                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  5854  05C7  141E               	bsf	30,0	;volatile
  5855                           
  5856                           ;I2C2.c: 41: SSP2ADD = address << 1;
  5857  05C8  0020               	movlb	0	; select bank0
  5858  05C9  3524               	lslf	I2C2_Setting@address,w
  5859  05CA  0024               	movlb	4	; select bank4
  5860  05CB  009A               	movwf	26	;volatile
  5861                           
  5862                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  5863  05CC  30FE               	movlw	254
  5864  05CD  009B               	movwf	27	;volatile
  5865  05CE                     l3758:	
  5866                           
  5867                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  5868  05CE  169D               	bsf	29,5	;volatile
  5869                           
  5870                           ;I2C2.c: 45: }
  5871                           
  5872                           ;I2C2.c: 44: break;
  5873  05CF  2DD9               	goto	l215
  5874  05D0                     l3762:	
  5875  05D0  0020               	movlb	0	; select bank0
  5876  05D1  0821               	movf	I2C2_Setting@mode,w
  5877                           
  5878                           ; Switch size 1, requested type "space"
  5879                           ; Number of cases is 2, Range of values is 0 to 1
  5880                           ; switch strategies available:
  5881                           ; Name         Instructions Cycles
  5882                           ; simple_byte            7     4 (average)
  5883                           ; direct_byte           10     6 (fixed)
  5884                           ; jumptable            260     6 (fixed)
  5885                           ;	Chosen strategy is simple_byte
  5886  05D2  3A00               	xorlw	0	; case 0
  5887  05D3  1903               	skipnz
  5888  05D4  2DA8               	goto	l211
  5889  05D5  3A01               	xorlw	1	; case 1
  5890  05D6  1903               	skipnz
  5891  05D7  2DBF               	goto	l3748
  5892  05D8  2DD9               	goto	l215
  5893  05D9                     l215:	
  5894                           
  5895                           ;I2C2.c: 46: SSP2IE = 1;
  5896  05D9  0021               	movlb	1	; select bank1
  5897  05DA  1414               	bsf	20,0	;volatile
  5898                           
  5899                           ;I2C2.c: 47: BCL2IE = 1;
  5900  05DB  1494               	bsf	20,1	;volatile
  5901                           
  5902                           ;I2C2.c: 48: SSP2IF = 0;
  5903  05DC  0020               	movlb	0	; select bank0
  5904  05DD  1014               	bcf	20,0	;volatile
  5905                           
  5906                           ;I2C2.c: 49: BCL2IF = 0;
  5907  05DE  1094               	bcf	20,1	;volatile
  5908  05DF  0008               	return
  5909  05E0                     __end_of_I2C2_Setting:	
  5910                           
  5911                           	psect	text23
  5912  0F30                     __ptext23:	
  5913 ;; *************** function _I2C2_PinInit *****************
  5914 ;; Defined at:
  5915 ;;		line 9 in file "I2C2.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      void 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5929 ;;      Params:         0       0       0       0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0
  5931 ;;      Temps:          0       1       0       0       0       0
  5932 ;;      Totals:         0       1       0       0       0       0
  5933 ;;Total ram usage:        1 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    3
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_I2C2_Setting
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           
  5944                           ;psect for function _I2C2_PinInit
  5945  0F30                     _I2C2_PinInit:	
  5946                           
  5947                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  5948                           
  5949                           ;incstack = 0
  5950                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  5951  0F30  3024               	movlw	36
  5952  0F31  0020               	movlb	0	; select bank0
  5953  0F32  00A0               	movwf	??_I2C2_PinInit
  5954  0F33  0820               	movf	??_I2C2_PinInit,w
  5955  0F34  0021               	movlb	1	; select bank1
  5956  0F35  048D               	iorwf	13,f	;volatile
  5957                           
  5958                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  5959  0F36  30DB               	movlw	219
  5960  0F37  0020               	movlb	0	; select bank0
  5961  0F38  00A0               	movwf	??_I2C2_PinInit
  5962  0F39  0820               	movf	??_I2C2_PinInit,w
  5963  0F3A  0023               	movlb	3	; select bank3
  5964  0F3B  058D               	andwf	13,f	;volatile
  5965  0F3C  0008               	return
  5966  0F3D                     __end_of_I2C2_PinInit:	
  5967                           
  5968                           	psect	text24
  5969  05E0                     __ptext24:	
  5970 ;; *************** function _I2C1_Setting *****************
  5971 ;; Defined at:
  5972 ;;		line 15 in file "I2C1.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  address         1    wreg     unsigned char 
  5975 ;;  mode            1    1[BANK0 ] enum E3057
  5976 ;;  Speed           1    2[BANK0 ] enum E3061
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  address         1    4[BANK0 ] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      void 
  5981 ;; Registers used:
  5982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5988 ;;      Params:         0       2       0       0       0       0
  5989 ;;      Locals:         0       1       0       0       0       0
  5990 ;;      Temps:          0       1       0       0       0       0
  5991 ;;      Totals:         0       4       0       0       0       0
  5992 ;;Total ram usage:        4 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    4
  5995 ;; This function calls:
  5996 ;;		_I2C1_PinInit
  5997 ;; This function is called by:
  5998 ;;		_I2C_Init
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           
  6003                           ;psect for function _I2C1_Setting
  6004  05E0                     _I2C1_Setting:	
  6005                           
  6006                           ;incstack = 0
  6007                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6008                           ;I2C1_Setting@address stored from wreg
  6009  05E0  0020               	movlb	0	; select bank0
  6010  05E1  00A4               	movwf	I2C1_Setting@address
  6011                           
  6012                           ;I2C1.c: 17: I2C1_PinInit();
  6013  05E2  318F  2723  3185   	fcall	_I2C1_PinInit
  6014                           
  6015                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  6016  05E5  0020               	movlb	0	; select bank0
  6017  05E6  0821               	movf	I2C1_Setting@mode,w
  6018  05E7  00A3               	movwf	??_I2C1_Setting
  6019  05E8  0823               	movf	??_I2C1_Setting,w
  6020  05E9  0021               	movlb	1	; select bank1
  6021  05EA  00D0               	movwf	(_I2C1_Config^(0+128)+18)
  6022                           
  6023                           ;I2C1.c: 20: switch(mode)
  6024  05EB  2E14               	goto	l3676
  6025  05EC                     l74:	
  6026                           ;I2C1.c: 21: {
  6027                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  6028                           
  6029                           
  6030                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  6031  05EC  0024               	movlb	4	; select bank4
  6032  05ED  1595               	bsf	21,3	;volatile
  6033                           
  6034                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  6035  05EE  0020               	movlb	0	; select bank0
  6036  05EF  0822               	movf	I2C1_Setting@Speed,w
  6037  05F0  1D03               	btfss	3,2
  6038  05F1  2DF6               	goto	l3654
  6039                           
  6040                           ;I2C1.c: 25: {
  6041                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  6042  05F2  0024               	movlb	4	; select bank4
  6043  05F3  1794               	bsf	20,7	;volatile
  6044                           
  6045                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  6046  05F4  304F               	movlw	79
  6047  05F5  2E00               	goto	L10
  6048  05F6                     l3654:	
  6049                           ;I2C1.c: 28: }
  6050                           
  6051                           
  6052                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  6053  05F6  0020               	movlb	0	; select bank0
  6054  05F7  0322               	decf	I2C1_Setting@Speed,w
  6055  05F8  1D03               	btfss	3,2
  6056  05F9  2E01               	goto	l3660
  6057                           
  6058                           ;I2C1.c: 30: {
  6059                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  6060  05FA  307F               	movlw	127
  6061  05FB  00A3               	movwf	??_I2C1_Setting
  6062  05FC  0823               	movf	??_I2C1_Setting,w
  6063  05FD  0024               	movlb	4	; select bank4
  6064  05FE  0594               	andwf	20,f	;volatile
  6065                           
  6066                           ;I2C1.c: 32: SSP1ADD = 0x13;
  6067  05FF  3013               	movlw	19
  6068  0600                     L10:	
  6069  0600  0092               	movwf	18	;volatile
  6070  0601                     l3660:	
  6071                           
  6072                           ;I2C1.c: 33: }
  6073                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  6074  0601  0024               	movlb	4	; select bank4
  6075  0602  2E12               	goto	l3672
  6076  0603                     l3662:	
  6077                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  6078                           
  6079                           ;I2C1.c: 35: break;
  6080                           
  6081                           
  6082                           ;I2C1.c: 38: SSP1STAT = 0x00;
  6083  0603  0024               	movlb	4	; select bank4
  6084  0604  0194               	clrf	20	;volatile
  6085                           
  6086                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  6087  0605  3006               	movlw	6
  6088  0606  0020               	movlb	0	; select bank0
  6089  0607  00A3               	movwf	??_I2C1_Setting
  6090  0608  0823               	movf	??_I2C1_Setting,w
  6091  0609  0024               	movlb	4	; select bank4
  6092  060A  0495               	iorwf	21,f	;volatile
  6093                           
  6094                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  6095  060B  1416               	bsf	22,0	;volatile
  6096                           
  6097                           ;I2C1.c: 41: SSP1ADD = address << 1;
  6098  060C  0020               	movlb	0	; select bank0
  6099  060D  3524               	lslf	I2C1_Setting@address,w
  6100  060E  0024               	movlb	4	; select bank4
  6101  060F  0092               	movwf	18	;volatile
  6102                           
  6103                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  6104  0610  30FE               	movlw	254
  6105  0611  0093               	movwf	19	;volatile
  6106  0612                     l3672:	
  6107                           
  6108                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  6109  0612  1695               	bsf	21,5	;volatile
  6110                           
  6111                           ;I2C1.c: 45: }
  6112                           
  6113                           ;I2C1.c: 44: break;
  6114  0613  2E1D               	goto	l78
  6115  0614                     l3676:	
  6116  0614  0020               	movlb	0	; select bank0
  6117  0615  0821               	movf	I2C1_Setting@mode,w
  6118                           
  6119                           ; Switch size 1, requested type "space"
  6120                           ; Number of cases is 2, Range of values is 0 to 1
  6121                           ; switch strategies available:
  6122                           ; Name         Instructions Cycles
  6123                           ; simple_byte            7     4 (average)
  6124                           ; direct_byte           10     6 (fixed)
  6125                           ; jumptable            260     6 (fixed)
  6126                           ;	Chosen strategy is simple_byte
  6127  0616  3A00               	xorlw	0	; case 0
  6128  0617  1903               	skipnz
  6129  0618  2DEC               	goto	l74
  6130  0619  3A01               	xorlw	1	; case 1
  6131  061A  1903               	skipnz
  6132  061B  2E03               	goto	l3662
  6133  061C  2E1D               	goto	l78
  6134  061D                     l78:	
  6135                           
  6136                           ;I2C1.c: 46: SSP1IE = 1;
  6137  061D  0021               	movlb	1	; select bank1
  6138  061E  1591               	bsf	17,3	;volatile
  6139                           
  6140                           ;I2C1.c: 47: BCL1IE = 1;
  6141  061F  1592               	bsf	18,3	;volatile
  6142                           
  6143                           ;I2C1.c: 48: SSP1IF = 0;
  6144  0620  0020               	movlb	0	; select bank0
  6145  0621  1191               	bcf	17,3	;volatile
  6146                           
  6147                           ;I2C1.c: 49: BCL1IF = 0;
  6148  0622  1192               	bcf	18,3	;volatile
  6149  0623  0008               	return
  6150  0624                     __end_of_I2C1_Setting:	
  6151                           
  6152                           	psect	text25
  6153  0F23                     __ptext25:	
  6154 ;; *************** function _I2C1_PinInit *****************
  6155 ;; Defined at:
  6156 ;;		line 9 in file "I2C1.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;		None
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;		None
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  1    wreg      void 
  6163 ;; Registers used:
  6164 ;;		wreg, status,2, status,0
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6170 ;;      Params:         0       0       0       0       0       0
  6171 ;;      Locals:         0       0       0       0       0       0
  6172 ;;      Temps:          0       1       0       0       0       0
  6173 ;;      Totals:         0       1       0       0       0       0
  6174 ;;Total ram usage:        1 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    3
  6177 ;; This function calls:
  6178 ;;		Nothing
  6179 ;; This function is called by:
  6180 ;;		_I2C1_Setting
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           
  6185                           ;psect for function _I2C1_PinInit
  6186  0F23                     _I2C1_PinInit:	
  6187                           
  6188                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  6189                           
  6190                           ;incstack = 0
  6191                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  6192  0F23  3012               	movlw	18
  6193  0F24  0020               	movlb	0	; select bank0
  6194  0F25  00A0               	movwf	??_I2C1_PinInit
  6195  0F26  0820               	movf	??_I2C1_PinInit,w
  6196  0F27  0021               	movlb	1	; select bank1
  6197  0F28  048D               	iorwf	13,f	;volatile
  6198                           
  6199                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  6200  0F29  30ED               	movlw	237
  6201  0F2A  0020               	movlb	0	; select bank0
  6202  0F2B  00A0               	movwf	??_I2C1_PinInit
  6203  0F2C  0820               	movf	??_I2C1_PinInit,w
  6204  0F2D  0023               	movlb	3	; select bank3
  6205  0F2E  058D               	andwf	13,f	;volatile
  6206  0F2F  0008               	return
  6207  0F30                     __end_of_I2C1_PinInit:	
  6208                           
  6209                           	psect	text26
  6210  07F6                     __ptext26:	
  6211 ;; *************** function _Buzzer_MiliSecond *****************
  6212 ;; Defined at:
  6213 ;;		line 38 in file "Buzzer.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  time            2    0[BANK0 ] unsigned int 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1    wreg      void 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6227 ;;      Params:         0       2       0       0       0       0
  6228 ;;      Locals:         0       0       0       0       0       0
  6229 ;;      Temps:          0       0       0       0       0       0
  6230 ;;      Totals:         0       2       0       0       0       0
  6231 ;;Total ram usage:        2 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    3
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_main
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           
  6242                           ;psect for function _Buzzer_MiliSecond
  6243  07F6                     _Buzzer_MiliSecond:	
  6244                           
  6245                           ;Buzzer.c: 40: if(count==0)
  6246                           
  6247                           ;incstack = 0
  6248                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  6249  07F6  0878               	movf	_count,w
  6250  07F7  0479               	iorwf	_count+1,w
  6251  07F8  1D03               	btfss	3,2
  6252  07F9  0008               	return
  6253                           
  6254                           ;Buzzer.c: 41: count = time;
  6255  07FA  0020               	movlb	0	; select bank0
  6256  07FB  0821               	movf	Buzzer_MiliSecond@time+1,w
  6257  07FC  00F9               	movwf	_count+1
  6258  07FD  0820               	movf	Buzzer_MiliSecond@time,w
  6259  07FE  00F8               	movwf	_count
  6260  07FF  0008               	return
  6261  0800                     __end_of_Buzzer_MiliSecond:	
  6262                           
  6263                           	psect	text27
  6264  0751                     __ptext27:	
  6265 ;; *************** function _Buzzer_Init *****************
  6266 ;; Defined at:
  6267 ;;		line 11 in file "Buzzer.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;		None
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;		None
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  1    wreg      void 
  6274 ;; Registers used:
  6275 ;;		wreg, status,2, status,0
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6281 ;;      Params:         0       0       0       0       0       0
  6282 ;;      Locals:         0       0       0       0       0       0
  6283 ;;      Temps:          0       1       0       0       0       0
  6284 ;;      Totals:         0       1       0       0       0       0
  6285 ;;Total ram usage:        1 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; Hardware stack levels required when called:    3
  6288 ;; This function calls:
  6289 ;;		Nothing
  6290 ;; This function is called by:
  6291 ;;		_main
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           
  6296                           ;psect for function _Buzzer_Init
  6297  0751                     _Buzzer_Init:	
  6298                           
  6299                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  6300                           
  6301                           ;incstack = 0
  6302                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  6303  0751  307F               	movlw	127
  6304  0752  0020               	movlb	0	; select bank0
  6305  0753  00A0               	movwf	??_Buzzer_Init
  6306  0754  0820               	movf	??_Buzzer_Init,w
  6307  0755  0021               	movlb	1	; select bank1
  6308  0756  058C               	andwf	12,f	;volatile
  6309                           
  6310                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  6311  0757  307F               	movlw	127
  6312  0758  0020               	movlb	0	; select bank0
  6313  0759  00A0               	movwf	??_Buzzer_Init
  6314  075A  0820               	movf	??_Buzzer_Init,w
  6315  075B  0023               	movlb	3	; select bank3
  6316  075C  058C               	andwf	12,f	;volatile
  6317                           
  6318                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  6319  075D  0022               	movlb	2	; select bank2
  6320  075E  159D               	bsf	29,3	;volatile
  6321                           
  6322                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  6323  075F  0020               	movlb	0	; select bank0
  6324  0760  081C               	movf	28,w	;volatile
  6325                           
  6326                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  6327  0761  149C               	bsf	28,1	;volatile
  6328                           
  6329                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  6330  0762  151C               	bsf	28,2	;volatile
  6331                           
  6332                           ;Buzzer.c: 21: TMR2 = 0x00;
  6333  0763  019A               	clrf	26	;volatile
  6334                           
  6335                           ;Buzzer.c: 22: PR2 = 0xFF;
  6336  0764  30FF               	movlw	255
  6337  0765  009B               	movwf	27	;volatile
  6338                           
  6339                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  6340  0766  303F               	movlw	63
  6341  0767  00A0               	movwf	??_Buzzer_Init
  6342  0768  0820               	movf	??_Buzzer_Init,w
  6343  0769  0025               	movlb	5	; select bank5
  6344  076A  059A               	andwf	26,f	;volatile
  6345                           
  6346                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  6347  076B  300C               	movlw	12
  6348  076C  0020               	movlb	0	; select bank0
  6349  076D  00A0               	movwf	??_Buzzer_Init
  6350  076E  0820               	movf	??_Buzzer_Init,w
  6351  076F  0025               	movlb	5	; select bank5
  6352  0770  049A               	iorwf	26,f	;volatile
  6353                           
  6354                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  6355  0771  30F3               	movlw	243
  6356  0772  0020               	movlb	0	; select bank0
  6357  0773  00A0               	movwf	??_Buzzer_Init
  6358  0774  0820               	movf	??_Buzzer_Init,w
  6359  0775  0025               	movlb	5	; select bank5
  6360  0776  059E               	andwf	30,f	;volatile
  6361                           
  6362                           ;Buzzer.c: 28: CCPR2L = 0x00;
  6363  0777  0198               	clrf	24	;volatile
  6364  0778  0008               	return
  6365  0779                     __end_of_Buzzer_Init:	
  6366                           
  6367                           	psect	text28
  6368  0FA5                     __ptext28:	
  6369 ;; *************** function _Basic_Init *****************
  6370 ;; Defined at:
  6371 ;;		line 51 in file "main.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;		None
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;		None
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1    wreg      char 
  6378 ;; Registers used:
  6379 ;;		wreg, status,2
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6385 ;;      Params:         0       0       0       0       0       0
  6386 ;;      Locals:         0       0       0       0       0       0
  6387 ;;      Temps:          0       0       0       0       0       0
  6388 ;;      Totals:         0       0       0       0       0       0
  6389 ;;Total ram usage:        0 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    3
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_main
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           
  6400                           ;psect for function _Basic_Init
  6401  0FA5                     _Basic_Init:	
  6402                           
  6403                           ;main.c: 53: OSCCON = 0xF0;
  6404                           
  6405                           ;incstack = 0
  6406                           ; Regs used in _Basic_Init: [wreg+status,2]
  6407  0FA5  30F0               	movlw	240
  6408  0FA6  0021               	movlb	1	; select bank1
  6409  0FA7  0099               	movwf	25	;volatile
  6410                           
  6411                           ;main.c: 57: TRISA = 0x07;
  6412  0FA8  3007               	movlw	7
  6413  0FA9  008C               	movwf	12	;volatile
  6414                           
  6415                           ;main.c: 58: ANSELA = 0x07;
  6416  0FAA  3007               	movlw	7
  6417  0FAB  0023               	movlb	3	; select bank3
  6418  0FAC  008C               	movwf	12	;volatile
  6419                           
  6420                           ;main.c: 60: TRISB = 0x40;
  6421  0FAD  3040               	movlw	64
  6422  0FAE  0021               	movlb	1	; select bank1
  6423  0FAF  008D               	movwf	13	;volatile
  6424                           
  6425                           ;main.c: 61: ANSELB = 0x00;
  6426  0FB0  0023               	movlb	3	; select bank3
  6427  0FB1  018D               	clrf	13	;volatile
  6428                           
  6429                           ;main.c: 63: APFCON0 = 0x08;
  6430  0FB2  3008               	movlw	8
  6431  0FB3  0022               	movlb	2	; select bank2
  6432  0FB4  009D               	movwf	29	;volatile
  6433                           
  6434                           ;main.c: 64: APFCON1 = 0x00;
  6435  0FB5  019E               	clrf	30	;volatile
  6436                           
  6437                           ;main.c: 66: PORTA = 0x00;
  6438  0FB6  0020               	movlb	0	; select bank0
  6439  0FB7  018C               	clrf	12	;volatile
  6440                           
  6441                           ;main.c: 67: PORTB = 0x00;
  6442  0FB8  018D               	clrf	13	;volatile
  6443  0FB9  0008               	return
  6444  0FBA                     __end_of_Basic_Init:	
  6445                           ;main.c: 69: return 0;
  6446                           ;	Return value of _Basic_Init is never used
  6447                           
  6448                           
  6449                           	psect	intentry
  6450  0004                     __pintentry:	
  6451 ;; *************** function _Handler *****************
  6452 ;; Defined at:
  6453 ;;		line 72 in file "main.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;		None
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;		None
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6467 ;;      Params:         0       0       0       0       0       0
  6468 ;;      Locals:         0       0       0       0       0       0
  6469 ;;      Temps:          1       0       0       0       0       0
  6470 ;;      Totals:         1       0       0       0       0       0
  6471 ;;Total ram usage:        1 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:    2
  6474 ;; This function calls:
  6475 ;;		_Buzzer_Handler
  6476 ;;		_CPSx_Read
  6477 ;;		_I2C_CommonInterrupt
  6478 ;;		_Timer1_Handler
  6479 ;;		_Timer4_Handler
  6480 ;; This function is called by:
  6481 ;;		Interrupt level 1
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485  0004                     _Handler:	
  6486                           
  6487                           ;incstack = 0
  6488  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6489                           
  6490                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6491  0005  3180               	pagesel	$
  6492  0006  0020               	movlb	0	; select bank0
  6493  0007  087F               	movf	127,w
  6494  0008  00F5               	movwf	??_Handler
  6495                           
  6496                           ;main.c: 74: static uint16_t count = 0;
  6497                           ;main.c: 75: if(Timer4_Handler())
  6498  0009  318F  2718  3180   	fcall	_Timer4_Handler
  6499  000C  3A00               	xorlw	0
  6500  000D  1903               	skipnz
  6501  000E  2826               	goto	i1l3506
  6502                           
  6503                           ;main.c: 76: {
  6504                           ;main.c: 77: CPSx_Read();
  6505  000F  3187  2779  3180   	fcall	_CPSx_Read
  6506                           
  6507                           ;main.c: 78: Buzzer_Handler();
  6508  0012  318F  2790  3180   	fcall	_Buzzer_Handler
  6509                           
  6510                           ;main.c: 79: count++;
  6511  0015  3001               	movlw	1
  6512  0016  0021               	movlb	1	; select bank1
  6513  0017  07A9               	addwf	Handler@count^(0+128),f
  6514  0018  3000               	movlw	0
  6515  0019  3DAA               	addwfc	(Handler@count+1)^(0+128),f
  6516                           
  6517                           ;main.c: 80: if(count>1000)
  6518  001A  3003               	movlw	3
  6519  001B  022A               	subwf	(Handler@count+1)^(0+128),w
  6520  001C  30E9               	movlw	233
  6521  001D  1903               	skipnz
  6522  001E  0229               	subwf	Handler@count^(0+128),w
  6523  001F  1C03               	skipc
  6524  0020  2826               	goto	i1l3506
  6525                           
  6526                           ;main.c: 81: {
  6527                           ;main.c: 82: count = 0;
  6528  0021  01A9               	clrf	Handler@count^(0+128)
  6529  0022  01AA               	clrf	(Handler@count+1)^(0+128)
  6530                           
  6531                           ;main.c: 83: LATA6 ^= 1;
  6532  0023  0022               	movlb	2	; select bank2
  6533  0024  3040               	movlw	64
  6534  0025  068C               	xorwf	12,f
  6535  0026                     i1l3506:	
  6536                           
  6537                           ;main.c: 84: }
  6538                           ;main.c: 85: }
  6539                           ;main.c: 87: Timer1_Handler();
  6540  0026  318F  270F  3180   	fcall	_Timer1_Handler
  6541                           
  6542                           ;main.c: 88: I2C_CommonInterrupt();
  6543  0029  318E  26FC         	fcall	_I2C_CommonInterrupt
  6544  002B  0875               	movf	??_Handler,w
  6545  002C  0020               	movlb	0	; select bank0
  6546  002D  00FF               	movwf	127
  6547  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6548  002F  0009               	retfie
  6549  0030                     __end_of_Handler:	
  6550                           
  6551                           	psect	text30
  6552  0F18                     __ptext30:	
  6553 ;; *************** function _Timer4_Handler *****************
  6554 ;; Defined at:
  6555 ;;		line 17 in file "Timer4.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      unsigned char 
  6562 ;; Registers used:
  6563 ;;		wreg
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6569 ;;      Params:         0       0       0       0       0       0
  6570 ;;      Locals:         0       0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0
  6572 ;;      Totals:         0       0       0       0       0       0
  6573 ;;Total ram usage:        0 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; This function calls:
  6576 ;;		Nothing
  6577 ;; This function is called by:
  6578 ;;		_Handler
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           
  6583                           ;psect for function _Timer4_Handler
  6584  0F18                     _Timer4_Handler:	
  6585                           
  6586                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  6587                           
  6588                           ;incstack = 0
  6589                           ; Regs used in _Timer4_Handler: [wreg]
  6590  0F18  0021               	movlb	1	; select bank1
  6591  0F19  1C93               	btfss	19,1	;volatile
  6592  0F1A  2F21               	goto	i1l3322
  6593  0F1B  0020               	movlb	0	; select bank0
  6594  0F1C  1C93               	btfss	19,1	;volatile
  6595  0F1D  2F21               	goto	i1l3322
  6596                           
  6597                           ;Timer4.c: 20: {
  6598                           ;Timer4.c: 21: TMR4IF = 0;
  6599  0F1E  1093               	bcf	19,1	;volatile
  6600                           
  6601                           ;Timer4.c: 22: return 1;
  6602  0F1F  3001               	movlw	1
  6603  0F20  0008               	return
  6604  0F21                     i1l3322:	
  6605                           
  6606                           ;Timer4.c: 23: }
  6607                           ;Timer4.c: 24: return 0;
  6608  0F21  3000               	movlw	0
  6609  0F22  0008               	return
  6610  0F23                     __end_of_Timer4_Handler:	
  6611                           
  6612                           	psect	text31
  6613  0F0F                     __ptext31:	
  6614 ;; *************** function _Timer1_Handler *****************
  6615 ;; Defined at:
  6616 ;;		line 33 in file "Timer1.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;		None
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;		None
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  1    wreg      void 
  6623 ;; Registers used:
  6624 ;;		None
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6630 ;;      Params:         0       0       0       0       0       0
  6631 ;;      Locals:         0       0       0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0
  6633 ;;      Totals:         0       0       0       0       0       0
  6634 ;;Total ram usage:        0 bytes
  6635 ;; Hardware stack levels used:    1
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_Handler
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           
  6644                           ;psect for function _Timer1_Handler
  6645  0F0F                     _Timer1_Handler:	
  6646                           
  6647                           ;Timer1.c: 35: if(TMR1IF&&TMR1IE)
  6648                           
  6649                           ;incstack = 0
  6650                           ; Regs used in _Timer1_Handler: []
  6651  0F0F  0020               	movlb	0	; select bank0
  6652  0F10  1C11               	btfss	17,0	;volatile
  6653  0F11  0008               	return
  6654  0F12  0021               	movlb	1	; select bank1
  6655  0F13  1C11               	btfss	17,0	;volatile
  6656  0F14  0008               	return
  6657                           
  6658                           ;Timer1.c: 36: {
  6659                           ;Timer1.c: 37: TMR1IF = 0;
  6660  0F15  0020               	movlb	0	; select bank0
  6661  0F16  1011               	bcf	17,0	;volatile
  6662  0F17  0008               	return
  6663  0F18                     __end_of_Timer1_Handler:	
  6664                           
  6665                           	psect	text32
  6666  0EFC                     __ptext32:	
  6667 ;; *************** function _I2C_CommonInterrupt *****************
  6668 ;; Defined at:
  6669 ;;		line 58 in file "I2C_Common.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;		None
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;		None
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  1    wreg      void 
  6676 ;; Registers used:
  6677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6683 ;;      Params:         0       0       0       0       0       0
  6684 ;;      Locals:         0       0       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0       0
  6686 ;;      Totals:         0       0       0       0       0       0
  6687 ;;Total ram usage:        0 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    1
  6690 ;; This function calls:
  6691 ;;		_I2C1_Interrupt
  6692 ;;		_I2C2_Interrupt
  6693 ;; This function is called by:
  6694 ;;		_Handler
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           
  6699                           ;psect for function _I2C_CommonInterrupt
  6700  0EFC                     _I2C_CommonInterrupt:	
  6701                           
  6702                           ;I2C_Common.c: 60: I2C1_Interrupt();
  6703                           
  6704                           ;incstack = 0
  6705                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6706  0EFC  3184  24F5  318E   	fcall	_I2C1_Interrupt
  6707                           
  6708                           ;I2C_Common.c: 61: I2C2_Interrupt();
  6709  0EFF  3184  24A1         	fcall	_I2C2_Interrupt
  6710  0F01  0008               	return
  6711  0F02                     __end_of_I2C_CommonInterrupt:	
  6712                           
  6713                           	psect	text33
  6714  04A1                     __ptext33:	
  6715 ;; *************** function _I2C2_Interrupt *****************
  6716 ;; Defined at:
  6717 ;;		line 152 in file "I2C2.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;		None
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  1    wreg      void 
  6724 ;; Registers used:
  6725 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6731 ;;      Params:         0       0       0       0       0       0
  6732 ;;      Locals:         0       0       0       0       0       0
  6733 ;;      Temps:          1       0       0       0       0       0
  6734 ;;      Totals:         1       0       0       0       0       0
  6735 ;;Total ram usage:        1 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_I2C_CommonInterrupt
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           
  6745                           ;psect for function _I2C2_Interrupt
  6746  04A1                     _I2C2_Interrupt:	
  6747                           
  6748                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  6749                           
  6750                           ;incstack = 0
  6751                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6752  04A1  0020               	movlb	0	; select bank0
  6753  04A2  1C14               	btfss	20,0	;volatile
  6754  04A3  2CED               	goto	i1l2872
  6755  04A4  0021               	movlb	1	; select bank1
  6756  04A5  1C14               	btfss	20,0	;volatile
  6757  04A6  2CED               	goto	i1l2872
  6758                           
  6759                           ;I2C2.c: 155: {
  6760                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  6761  04A7  0024               	movlb	4	; select bank4
  6762  04A8  1E9C               	btfss	28,5	;volatile
  6763  04A9  2CC4               	goto	i1l294
  6764                           
  6765                           ;I2C2.c: 157: {
  6766                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  6767  04AA  1D1C               	btfss	28,2	;volatile
  6768  04AB  2CB7               	goto	i1l2848
  6769                           
  6770                           ;I2C2.c: 159: {
  6771                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  6772  04AC  1B1E               	btfsc	30,6	;volatile
  6773  04AD  2CEB               	goto	i1l2870
  6774  04AE                     i1l2840:	
  6775                           ;I2C2.c: 161: {
  6776                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  6777                           
  6778  04AE  081C               	movf	28,w	;volatile
  6779  04AF  3901               	andlw	1
  6780  04B0  00F0               	movwf	??_I2C2_Interrupt
  6781  04B1  0E1D               	swapf	29,w	;volatile
  6782  04B2  3901               	andlw	1
  6783  04B3  0470               	iorwf	??_I2C2_Interrupt,w
  6784  04B4  1D03               	btfss	3,2
  6785  04B5  2CAE               	goto	i1l2840
  6786  04B6  2CD7               	goto	L11
  6787  04B7                     i1l2848:	
  6788                           ;I2C2.c: 166: }
  6789                           ;I2C2.c: 167: }
  6790                           
  6791                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  6792                           
  6793                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  6794                           
  6795                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  6796                           
  6797                           
  6798                           ;I2C2.c: 168: else
  6799                           ;I2C2.c: 169: {
  6800                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  6801  04B7  0819               	movf	25,w	;volatile
  6802  04B8  00F0               	movwf	??_I2C2_Interrupt
  6803  04B9  0021               	movlb	1	; select bank1
  6804  04BA  083C               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  6805  04BB  0086               	movwf	6
  6806  04BC  0187               	clrf	7
  6807  04BD  0870               	movf	??_I2C2_Interrupt,w
  6808  04BE  0081               	movwf	1
  6809                           
  6810                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  6811  04BF  3001               	movlw	1
  6812  04C0  00F0               	movwf	??_I2C2_Interrupt
  6813  04C1  0870               	movf	??_I2C2_Interrupt,w
  6814  04C2  07BC               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  6815  04C3  2CE9               	goto	i1l2868
  6816  04C4                     i1l294:	
  6817                           ;I2C2.c: 173: }
  6818                           ;I2C2.c: 174: }
  6819                           
  6820                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  6821                           
  6822                           
  6823                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  6824  04C4  1A9C               	btfsc	28,5	;volatile
  6825  04C5  2CEB               	goto	i1l2870
  6826                           
  6827                           ;I2C2.c: 176: {
  6828                           ;I2C2.c: 177: SSP2BUF;
  6829  04C6  0819               	movf	25,w	;volatile
  6830                           
  6831                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  6832  04C7  1D1C               	btfss	28,2	;volatile
  6833  04C8  2CE4               	goto	i1l2866
  6834                           
  6835                           ;I2C2.c: 180: {
  6836                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  6837  04C9  30AB               	movlw	(low (_I2C2_Config| 0))& (0+255)
  6838  04CA  00F0               	movwf	??_I2C2_Interrupt
  6839  04CB  0870               	movf	??_I2C2_Interrupt,w
  6840  04CC  0021               	movlb	1	; select bank1
  6841  04CD  00BB               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  6842  04CE                     i1l2860:	
  6843                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  6844                           
  6845  04CE  0024               	movlb	4	; select bank4
  6846  04CF  081C               	movf	28,w	;volatile
  6847  04D0  3901               	andlw	1
  6848  04D1  00F0               	movwf	??_I2C2_Interrupt
  6849  04D2  0E1D               	swapf	29,w	;volatile
  6850  04D3  3901               	andlw	1
  6851  04D4  0470               	iorwf	??_I2C2_Interrupt,w
  6852  04D5  1D03               	btfss	3,2
  6853  04D6  2CCE               	goto	i1l2860
  6854  04D7                     L11:	
  6855                           
  6856                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  6857  04D7  0021               	movlb	1	; select bank1
  6858  04D8  083B               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  6859  04D9  0086               	movwf	6
  6860  04DA  0187               	clrf	7
  6861  04DB  0801               	movf	1,w
  6862  04DC  0024               	movlb	4	; select bank4
  6863  04DD  0099               	movwf	25	;volatile
  6864                           
  6865                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  6866  04DE  3001               	movlw	1
  6867  04DF  00F0               	movwf	??_I2C2_Interrupt
  6868  04E0  0870               	movf	??_I2C2_Interrupt,w
  6869  04E1  0021               	movlb	1	; select bank1
  6870  04E2  07BB               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  6871                           
  6872                           ;I2C2.c: 186: }
  6873  04E3  2CE9               	goto	i1l2868
  6874  04E4                     i1l2866:	
  6875                           
  6876                           ;I2C2.c: 187: else
  6877                           ;I2C2.c: 188: {
  6878                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  6879  04E4  30B3               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  6880  04E5  00F0               	movwf	??_I2C2_Interrupt
  6881  04E6  0870               	movf	??_I2C2_Interrupt,w
  6882  04E7  0021               	movlb	1	; select bank1
  6883  04E8  00BC               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  6884  04E9                     i1l2868:	
  6885                           
  6886                           ;I2C2.c: 190: }
  6887                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  6888  04E9  0024               	movlb	4	; select bank4
  6889  04EA  161D               	bsf	29,4	;volatile
  6890  04EB                     i1l2870:	
  6891                           
  6892                           ;I2C2.c: 192: }
  6893                           ;I2C2.c: 193: SSP2IF = 0;
  6894  04EB  0020               	movlb	0	; select bank0
  6895  04EC  1014               	bcf	20,0	;volatile
  6896  04ED                     i1l2872:	
  6897                           
  6898                           ;I2C2.c: 194: }
  6899                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  6900  04ED  0021               	movlb	1	; select bank1
  6901  04EE  1C94               	btfss	20,1	;volatile
  6902  04EF  0008               	return
  6903  04F0  0020               	movlb	0	; select bank0
  6904  04F1  1C94               	btfss	20,1	;volatile
  6905  04F2  0008               	return
  6906                           
  6907                           ;I2C2.c: 197: BCL2IF = 0;
  6908  04F3  1094               	bcf	20,1	;volatile
  6909  04F4  0008               	return
  6910  04F5                     __end_of_I2C2_Interrupt:	
  6911                           
  6912                           	psect	text34
  6913  04F5                     __ptext34:	
  6914 ;; *************** function _I2C1_Interrupt *****************
  6915 ;; Defined at:
  6916 ;;		line 152 in file "I2C1.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;		None
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;		None
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  1    wreg      void 
  6923 ;; Registers used:
  6924 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6930 ;;      Params:         0       0       0       0       0       0
  6931 ;;      Locals:         0       0       0       0       0       0
  6932 ;;      Temps:          1       0       0       0       0       0
  6933 ;;      Totals:         1       0       0       0       0       0
  6934 ;;Total ram usage:        1 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; This function calls:
  6937 ;;		Nothing
  6938 ;; This function is called by:
  6939 ;;		_I2C_CommonInterrupt
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           
  6944                           ;psect for function _I2C1_Interrupt
  6945  04F5                     _I2C1_Interrupt:	
  6946                           
  6947                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  6948                           
  6949                           ;incstack = 0
  6950                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6951  04F5  0020               	movlb	0	; select bank0
  6952  04F6  1D91               	btfss	17,3	;volatile
  6953  04F7  2D41               	goto	i1l2822
  6954  04F8  0021               	movlb	1	; select bank1
  6955  04F9  1D91               	btfss	17,3	;volatile
  6956  04FA  2D41               	goto	i1l2822
  6957                           
  6958                           ;I2C1.c: 155: {
  6959                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  6960  04FB  0024               	movlb	4	; select bank4
  6961  04FC  1E94               	btfss	20,5	;volatile
  6962  04FD  2D18               	goto	i1l157
  6963                           
  6964                           ;I2C1.c: 157: {
  6965                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  6966  04FE  1D14               	btfss	20,2	;volatile
  6967  04FF  2D0B               	goto	i1l2798
  6968                           
  6969                           ;I2C1.c: 159: {
  6970                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  6971  0500  1B16               	btfsc	22,6	;volatile
  6972  0501  2D3F               	goto	i1l2820
  6973  0502                     i1l2790:	
  6974                           ;I2C1.c: 161: {
  6975                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  6976                           
  6977  0502  0814               	movf	20,w	;volatile
  6978  0503  3901               	andlw	1
  6979  0504  00F0               	movwf	??_I2C1_Interrupt
  6980  0505  0E15               	swapf	21,w	;volatile
  6981  0506  3901               	andlw	1
  6982  0507  0470               	iorwf	??_I2C1_Interrupt,w
  6983  0508  1D03               	btfss	3,2
  6984  0509  2D02               	goto	i1l2790
  6985  050A  2D2B               	goto	L12
  6986  050B                     i1l2798:	
  6987                           ;I2C1.c: 166: }
  6988                           ;I2C1.c: 167: }
  6989                           
  6990                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  6991                           
  6992                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  6993                           
  6994                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  6995                           
  6996                           
  6997                           ;I2C1.c: 168: else
  6998                           ;I2C1.c: 169: {
  6999                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  7000  050B  0811               	movf	17,w	;volatile
  7001  050C  00F0               	movwf	??_I2C1_Interrupt
  7002  050D  0021               	movlb	1	; select bank1
  7003  050E  084F               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  7004  050F  0086               	movwf	6
  7005  0510  0187               	clrf	7
  7006  0511  0870               	movf	??_I2C1_Interrupt,w
  7007  0512  0081               	movwf	1
  7008                           
  7009                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  7010  0513  3001               	movlw	1
  7011  0514  00F0               	movwf	??_I2C1_Interrupt
  7012  0515  0870               	movf	??_I2C1_Interrupt,w
  7013  0516  07CF               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  7014  0517  2D3D               	goto	i1l2818
  7015  0518                     i1l157:	
  7016                           ;I2C1.c: 173: }
  7017                           ;I2C1.c: 174: }
  7018                           
  7019                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  7020                           
  7021                           
  7022                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  7023  0518  1A94               	btfsc	20,5	;volatile
  7024  0519  2D3F               	goto	i1l2820
  7025                           
  7026                           ;I2C1.c: 176: {
  7027                           ;I2C1.c: 177: SSP1BUF;
  7028  051A  0811               	movf	17,w	;volatile
  7029                           
  7030                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  7031  051B  1D14               	btfss	20,2	;volatile
  7032  051C  2D38               	goto	i1l2816
  7033                           
  7034                           ;I2C1.c: 180: {
  7035                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  7036  051D  30BE               	movlw	(low (_I2C1_Config| 0))& (0+255)
  7037  051E  00F0               	movwf	??_I2C1_Interrupt
  7038  051F  0870               	movf	??_I2C1_Interrupt,w
  7039  0520  0021               	movlb	1	; select bank1
  7040  0521  00CE               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  7041  0522                     i1l2810:	
  7042                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  7043                           
  7044  0522  0024               	movlb	4	; select bank4
  7045  0523  0814               	movf	20,w	;volatile
  7046  0524  3901               	andlw	1
  7047  0525  00F0               	movwf	??_I2C1_Interrupt
  7048  0526  0E15               	swapf	21,w	;volatile
  7049  0527  3901               	andlw	1
  7050  0528  0470               	iorwf	??_I2C1_Interrupt,w
  7051  0529  1D03               	btfss	3,2
  7052  052A  2D22               	goto	i1l2810
  7053  052B                     L12:	
  7054                           
  7055                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  7056  052B  0021               	movlb	1	; select bank1
  7057  052C  084E               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  7058  052D  0086               	movwf	6
  7059  052E  0187               	clrf	7
  7060  052F  0801               	movf	1,w
  7061  0530  0024               	movlb	4	; select bank4
  7062  0531  0091               	movwf	17	;volatile
  7063                           
  7064                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  7065  0532  3001               	movlw	1
  7066  0533  00F0               	movwf	??_I2C1_Interrupt
  7067  0534  0870               	movf	??_I2C1_Interrupt,w
  7068  0535  0021               	movlb	1	; select bank1
  7069  0536  07CE               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  7070                           
  7071                           ;I2C1.c: 186: }
  7072  0537  2D3D               	goto	i1l2818
  7073  0538                     i1l2816:	
  7074                           
  7075                           ;I2C1.c: 187: else
  7076                           ;I2C1.c: 188: {
  7077                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  7078  0538  30C6               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  7079  0539  00F0               	movwf	??_I2C1_Interrupt
  7080  053A  0870               	movf	??_I2C1_Interrupt,w
  7081  053B  0021               	movlb	1	; select bank1
  7082  053C  00CF               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  7083  053D                     i1l2818:	
  7084                           
  7085                           ;I2C1.c: 190: }
  7086                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  7087  053D  0024               	movlb	4	; select bank4
  7088  053E  1615               	bsf	21,4	;volatile
  7089  053F                     i1l2820:	
  7090                           
  7091                           ;I2C1.c: 192: }
  7092                           ;I2C1.c: 193: SSP1IF = 0;
  7093  053F  0020               	movlb	0	; select bank0
  7094  0540  1191               	bcf	17,3	;volatile
  7095  0541                     i1l2822:	
  7096                           
  7097                           ;I2C1.c: 194: }
  7098                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  7099  0541  0021               	movlb	1	; select bank1
  7100  0542  1D92               	btfss	18,3	;volatile
  7101  0543  0008               	return
  7102  0544  0020               	movlb	0	; select bank0
  7103  0545  1D92               	btfss	18,3	;volatile
  7104  0546  0008               	return
  7105                           
  7106                           ;I2C1.c: 197: BCL1IF = 0;
  7107  0547  1192               	bcf	18,3	;volatile
  7108  0548  0008               	return
  7109  0549                     __end_of_I2C1_Interrupt:	
  7110                           
  7111                           	psect	text35
  7112  0779                     __ptext35:	
  7113 ;; *************** function _CPSx_Read *****************
  7114 ;; Defined at:
  7115 ;;		line 29 in file "mTouch.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;		None
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;		None
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      void 
  7122 ;; Registers used:
  7123 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7129 ;;      Params:         0       0       0       0       0       0
  7130 ;;      Locals:         0       0       0       0       0       0
  7131 ;;      Temps:          1       0       0       0       0       0
  7132 ;;      Totals:         1       0       0       0       0       0
  7133 ;;Total ram usage:        1 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_Handler
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           
  7143                           ;psect for function _CPSx_Read
  7144  0779                     _CPSx_Read:	
  7145                           
  7146                           ;mTouch.c: 31: static uint8_t channel=0;
  7147                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  7148                           
  7149                           ;incstack = 0
  7150                           ; Regs used in _CPSx_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7151  0779  087A               	movf	CPSx_Read@channel,w
  7152  077A  3EA0               	addlw	(low (_CPS_Data| 0))& (0+255)
  7153  077B  0086               	movwf	6
  7154  077C  0187               	clrf	7
  7155  077D  0801               	movf	1,w
  7156  077E  00F0               	movwf	??_CPSx_Read
  7157  077F  087A               	movf	CPSx_Read@channel,w
  7158  0780  3EA3               	addlw	(low (_CPS_PreData| 0))& (0+255)
  7159  0781  0086               	movwf	6
  7160  0782  0187               	clrf	7
  7161  0783  0870               	movf	??_CPSx_Read,w
  7162  0784  0081               	movwf	1
  7163                           
  7164                           ;mTouch.c: 34: CPSCON0 &= ~(0x01<<7);;
  7165  0785  307F               	movlw	127
  7166  0786  00F0               	movwf	??_CPSx_Read
  7167  0787  0870               	movf	??_CPSx_Read,w
  7168  0788  0020               	movlb	0	; select bank0
  7169  0789  059E               	andwf	30,f	;volatile
  7170                           
  7171                           ;mTouch.c: 35: CPS_Data[channel] = TMR0;
  7172  078A  0815               	movf	21,w	;volatile
  7173  078B  00F0               	movwf	??_CPSx_Read
  7174  078C  087A               	movf	CPSx_Read@channel,w
  7175  078D  3EA0               	addlw	(low (_CPS_Data| 0))& (0+255)
  7176  078E  0086               	movwf	6
  7177  078F  0187               	clrf	7
  7178  0790  0870               	movf	??_CPSx_Read,w
  7179  0791  0081               	movwf	1
  7180                           
  7181                           ;mTouch.c: 36: TMR0 = 0x00;
  7182  0792  0195               	clrf	21	;volatile
  7183                           
  7184                           ;mTouch.c: 37: CPSCON0 |= (0x01<<7);;
  7185  0793  179E               	bsf	30,7	;volatile
  7186                           
  7187                           ;mTouch.c: 39: if(channel++>2)channel = 0;
  7188  0794  087A               	movf	CPSx_Read@channel,w
  7189  0795  0AFA               	incf	CPSx_Read@channel,f
  7190  0796  00F0               	movwf	??_CPSx_Read
  7191  0797  3003               	movlw	3
  7192  0798  0270               	subwf	??_CPSx_Read,w
  7193  0799  1803               	btfsc	3,0
  7194  079A  01FA               	clrf	CPSx_Read@channel
  7195                           
  7196                           ;mTouch.c: 40: CPSCON1 = (uint8_t)channel;
  7197  079B  087A               	movf	CPSx_Read@channel,w
  7198  079C  009F               	movwf	31	;volatile
  7199  079D  0008               	return
  7200  079E                     __end_of_CPSx_Read:	
  7201                           
  7202                           	psect	text36
  7203  0F90                     __ptext36:	
  7204 ;; *************** function _Buzzer_Handler *****************
  7205 ;; Defined at:
  7206 ;;		line 44 in file "Buzzer.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;		None
  7209 ;; Auto vars:     Size  Location     Type
  7210 ;;		None
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  1    wreg      void 
  7213 ;; Registers used:
  7214 ;;		wreg, status,2, status,0, pclath, cstack
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7220 ;;      Params:         0       0       0       0       0       0
  7221 ;;      Locals:         0       0       0       0       0       0
  7222 ;;      Temps:          0       0       0       0       0       0
  7223 ;;      Totals:         0       0       0       0       0       0
  7224 ;;Total ram usage:        0 bytes
  7225 ;; Hardware stack levels used:    1
  7226 ;; Hardware stack levels required when called:    1
  7227 ;; This function calls:
  7228 ;;		_Buzzer_SetDuty
  7229 ;; This function is called by:
  7230 ;;		_Handler
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           
  7235                           ;psect for function _Buzzer_Handler
  7236  0F90                     _Buzzer_Handler:	
  7237                           
  7238                           ;Buzzer.c: 46: if(count>0)
  7239                           
  7240                           ;incstack = 0
  7241                           ; Regs used in _Buzzer_Handler: [wreg+status,2+status,0+pclath+cstack]
  7242  0F90  0878               	movf	_count,w
  7243  0F91  0479               	iorwf	_count+1,w
  7244  0F92  1903               	btfsc	3,2
  7245  0F93  2F9F               	goto	i1l3104
  7246                           
  7247                           ;Buzzer.c: 47: {
  7248                           ;Buzzer.c: 48: count--;
  7249  0F94  3001               	movlw	1
  7250  0F95  02F8               	subwf	_count,f
  7251  0F96  3000               	movlw	0
  7252  0F97  3BF9               	subwfb	_count+1,f
  7253                           
  7254                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
  7255  0F98  30FF               	movlw	255
  7256  0F99  00F0               	movwf	Buzzer_SetDuty@duty
  7257  0F9A  3001               	movlw	1
  7258  0F9B  00F1               	movwf	Buzzer_SetDuty@duty+1
  7259  0F9C  3187  27DA         	fcall	_Buzzer_SetDuty
  7260                           
  7261                           ;Buzzer.c: 50: }
  7262  0F9E  0008               	return
  7263  0F9F                     i1l3104:	
  7264                           
  7265                           ;Buzzer.c: 51: else
  7266                           ;Buzzer.c: 52: {
  7267                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
  7268  0F9F  3000               	movlw	0
  7269  0FA0  00F0               	movwf	Buzzer_SetDuty@duty
  7270  0FA1  00F1               	movwf	Buzzer_SetDuty@duty+1
  7271  0FA2  3187  27DA         	fcall	_Buzzer_SetDuty
  7272  0FA4  0008               	return
  7273  0FA5                     __end_of_Buzzer_Handler:	
  7274                           
  7275                           	psect	text37
  7276  07DA                     __ptext37:	
  7277 ;; *************** function _Buzzer_SetDuty *****************
  7278 ;; Defined at:
  7279 ;;		line 31 in file "Buzzer.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  duty            2    0[COMMON] unsigned int 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      void 
  7286 ;; Registers used:
  7287 ;;		wreg, status,2, status,0
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7293 ;;      Params:         2       0       0       0       0       0
  7294 ;;      Locals:         1       0       0       0       0       0
  7295 ;;      Temps:          2       0       0       0       0       0
  7296 ;;      Totals:         5       0       0       0       0       0
  7297 ;;Total ram usage:        5 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; This function calls:
  7300 ;;		Nothing
  7301 ;; This function is called by:
  7302 ;;		_Buzzer_Handler
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           
  7306                           
  7307                           ;psect for function _Buzzer_SetDuty
  7308  07DA                     _Buzzer_SetDuty:	
  7309                           
  7310                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
  7311                           
  7312                           ;incstack = 0
  7313                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
  7314  07DA  0025               	movlb	5	; select bank5
  7315  07DB  081A               	movf	26,w	;volatile
  7316  07DC  39CF               	andlw	207
  7317  07DD  00F2               	movwf	??_Buzzer_SetDuty
  7318  07DE  0872               	movf	??_Buzzer_SetDuty,w
  7319  07DF  00F4               	movwf	Buzzer_SetDuty@CCP2CON_Pre
  7320                           
  7321                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
  7322  07E0  0871               	movf	Buzzer_SetDuty@duty+1,w
  7323  07E1  00F3               	movwf	??_Buzzer_SetDuty+1
  7324  07E2  0870               	movf	Buzzer_SetDuty@duty,w
  7325  07E3  00F2               	movwf	??_Buzzer_SetDuty
  7326  07E4  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  7327  07E5  0CF2               	rrf	??_Buzzer_SetDuty,f
  7328  07E6  36F3               	lsrf	??_Buzzer_SetDuty+1,f
  7329  07E7  0CF2               	rrf	??_Buzzer_SetDuty,f
  7330  07E8  0872               	movf	??_Buzzer_SetDuty,w
  7331  07E9  0098               	movwf	24	;volatile
  7332                           
  7333                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
  7334  07EA  0870               	movf	Buzzer_SetDuty@duty,w
  7335  07EB  3903               	andlw	3
  7336  07EC  00F2               	movwf	??_Buzzer_SetDuty
  7337  07ED  3003               	movlw	3
  7338  07EE                     u227_25:	
  7339  07EE  35F2               	lslf	??_Buzzer_SetDuty,f
  7340  07EF  3EFF               	addlw	-1
  7341  07F0  1D03               	skipz
  7342  07F1  2FEE               	goto	u227_25
  7343  07F2  3572               	lslf	??_Buzzer_SetDuty,w
  7344  07F3  0474               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
  7345  07F4  009A               	movwf	26	;volatile
  7346  07F5  0008               	return
  7347  07F6                     __end_of_Buzzer_SetDuty:	
  7348  007E                     btemp	set	126	;btemp
  7349  007E                     int$flags	set	126
  7350  007E                     wtemp0	set	126


Data Sizes:
    Strings     43
    Constant    0
    Data        0
    BSS         60
>>>>>>> CPS
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
<<<<<<< HEAD
    COMMON           14     11      12
    BANK0            80     63      73
    BANK1            80      0      68
    BANK2            80      0      60
=======
    COMMON           14      6      11
    BANK0            80     70      76
    BANK1            80      5      54
    BANK2            80      0       0
>>>>>>> CPS
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

<<<<<<< HEAD
    H7826_01_Gain	PTR const unsigned char [15] size(2) Largest target is 7
		 -> STR_51(CODE[7]), STR_50(CODE[7]), STR_49(CODE[7]), STR_48(CODE[7]), 
		 -> STR_47(CODE[7]), STR_46(CODE[7]), STR_45(CODE[7]), STR_44(CODE[6]), 
		 -> STR_43(CODE[6]), STR_42(CODE[6]), STR_41(CODE[6]), STR_40(CODE[5]), 
		 -> STR_39(CODE[5]), STR_38(CODE[5]), STR_37(CODE[5]), 
=======
    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[7]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[7]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 
>>>>>>> CPS

    H7826_Gain	PTR const unsigned char [15] size(2) Largest target is 8
		 -> STR_36(CODE[8]), STR_35(CODE[8]), STR_34(CODE[8]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[7]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[6]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), 

<<<<<<< HEAD
    DAC_VoltageTable	PTR const unsigned char [15] size(2) Largest target is 6
		 -> STR_21(CODE[5]), STR_20(CODE[6]), STR_19(CODE[5]), STR_18(CODE[6]), 
		 -> STR_17(CODE[5]), STR_16(CODE[6]), STR_15(CODE[5]), STR_14(CODE[6]), 
		 -> STR_13(CODE[5]), STR_12(CODE[6]), STR_11(CODE[5]), STR_10(CODE[6]), 
		 -> STR_9(CODE[5]), STR_8(CODE[6]), STR_7(CODE[5]), 
=======
    S46$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S46$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 
>>>>>>> CPS


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

<<<<<<< HEAD
    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S41$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S41$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

=======
    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Handler->_Buzzer_SetDuty
>>>>>>> CPS

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _mTouch_Init->_mTouch_PortInit
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   10111
                                              0 BANK1      5     5      0
                         _Basic_Init
                        _Buzzer_Init
                  _Buzzer_MiliSecond
                     _DAC_Initialize
                 _LCD_CursorPosition
                           _LCD_Init
                        _Timer1_Init
                        _Timer4_Init
                        _mTouch_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                              8     2      6    6477
                                             62 BANK0      8     2      6
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    5683
                                             14 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     515
                                              6 BANK0      2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     389
                                              4 BANK0      2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     263
                                              3 BANK0      1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              4 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     263
                                              3 BANK0      3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    3015
                                             16 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              8 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3    1066
                                              5 BANK0      6     3      3
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     309
                                              1 BANK0      4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_MiliSecond                                    2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0     195
                                              5 COMMON     1     1      0
                     _Buzzer_Handler
                          _CPSx_Read
                _I2C_CommonInterrupt
                     _Timer1_Handler
                     _Timer4_Handler
 ---------------------------------------------------------------------------------
 (8) _Timer4_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer1_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CPSx_Read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Buzzer_Handler                                       0     0      0     195
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (9) _Buzzer_SetDuty                                       5     3      2     195
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _Buzzer_MiliSecond
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_Init
   _Timer4_Init
   _mTouch_Init
     _mTouch_PortInit
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Handler
     _Buzzer_SetDuty
   _CPSx_Read
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Handler
   _Timer4_Handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
<<<<<<< HEAD
ABS                  0      0      D5       4        0.0%
=======
ABS                  0      0      8D       4        0.0%
>>>>>>> CPS
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     46      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
<<<<<<< HEAD
BANK1               50      0      44       8       85.0%
=======
BANK1               50      5      36       8       67.5%
>>>>>>> CPS
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
<<<<<<< HEAD
DATA                 0      0      D5      15        0.0%
=======
DATA                 0      0      8D      15        0.0%
>>>>>>> CPS
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
<<<<<<< HEAD
Symbol Table                                                                                   Sat May 13 11:34:09 2017

                 __CFG_CP$OFF 0000                            l63 0723                            l80 0458  
                          l67 074A                            l89 047B                            l98 0492  
              I2C2_Transmit@i 0077         ??_I2C_CommonInterrupt 0071           ___wmul@multiplicand 0074  
                         l200 06EB                           l204 0712                           l217 03DA  
                         l226 03FD                           l235 0414                           l327 0FFD  
                         l552 00BD                           l537 0041                           l570 0158  
                         l823 0F84                           l593 020F                           _GIE 005F  
                         _PR2 001B                  __CFG_CPD$OFF 0000                  __CFG_BORV$LO 0000  
                         wreg 0009                    _Basic_Init 0F39                  __CFG_LVP$OFF 0000  
             __end_of_LCD_Put 0EDC                          l2351 07A5                          l2343 0796  
                        l3411 06FD                          l3403 06F3                          l3325 0735  
                        l3317 072B                          l3421 0708                          l3501 0FD9  
                        l2533 0F27                          l3335 0740                          l3503 0FE7  
                        l3343 0444                          l3431 03D0                          l3511 07B7  
                        l3425 070A                          l3345 044E                          l3441 03ED  
                        l3513 07C4                          l2537 0F7E                          l3339 0742  
                        l3507 0FF5                          l3355 046B                          l3451 03E5  
                        l2555 05E4                          l3611 0134                          l3603 010D  
                        l3381 04AE                          l3365 0463                          l3453 03E9  
                        l3429 03C6                          l3517 07D5                          l2565 0612  
                        l2557 05F2                          l3613 0136                          l3605 0122  
                        l3383 04B3                          l3367 0467                          l3455 040A  
                        l3519 07DD                          l3631 01A0                          l3615 013B  
                        l3607 012F                          l3535 005A                          l3369 0488  
                        l3465 0419                          l3473 0437                          l2569 061D  
                        l3625 0172                          l3609 0132                          l3379 0497  
                        l3387 04B5                          l3467 0430                          l3475 0440  
                        l3491 0655                          l3627 0187                          l3619 0140  
                        l3389 04BE                          l3469 0435                          l3485 062F  
                        l3653 01F5                          l3637 01B1                          l3629 0190  
                        l3565 00AD                          l3557 0083                          l3549 006F  
                        l3725 0769                          l3487 063D                          l3495 0660  
                        l3671 0225                          l3639 01B3                          l3591 00E5  
                        l3559 0086                          l3673 022E                          l3665 021D  
                        l3649 01ED                          l3593 00F3                          l3585 00D8  
                        l3577 00CA                          l3569 00B5                          l3683 0256  
                        l3675 0232                          l3595 00F7                          l3685 025A  
                        l3679 0244                          l3599 0109                          STR_1 0289  
                        STR_2 03C1                          STR_3 0302                          STR_4 036A  
                        STR_5 0370                          STR_6 0309                          STR_7 03A8  
                        STR_8 034C                          STR_9 03AD                          u2015 0F85  
                        u2025 0F8A                          u2055 05E7                          u2075 05F3  
                        u2085 0607                          u2095 0613                          u3415 0632  
                        u1675 06AD                          u3435 064B                          u3445 0656  
                        u3715 0242                          _PEIE 005E                          u2935 0F54  
                        u3735 0268                          u3807 0772                          u3817 04C8  
                        u3585 0107                          u3827 04E1                          u3595 011B  
                        u3837 04F4                          u3847 0508                          u3857 0F10  
                        u3867 0F5F                          u3877 06A7                          _TMR1 0016  
                        _TMR2 001A               ??_I2C1_Transmit 0074                  __CFG_WRT$OFF 0000  
                        _main 0751              __end_of_I2C_Init 1000                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
               __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0074              ??_I2C1_Interrupt 0070  
                        start 0013                 __CFG_IESO$OFF 0000               __end_of_Handler 0013  
               _LCD_WriteData 06A5                 __CFG_MCLRE$ON 0000              ??_I2C2_Interrupt 0070  
    __end_of_LCD_DisplayClear 0F16         __size_of_I2C_Transmit 002B              __end_of_LCD_Init 052B  
               __CFG_PLLEN$ON 0000                   LCD_Put@word 0075                         ?_main 0070  
                       STR_10 0352                         STR_11 03B2                         STR_20 0346  
                       STR_12 0358                         STR_21 03A3                         STR_13 03B7  
                       STR_30 02D8                         STR_22 038A                         STR_14 035E  
                       STR_31 02E6                         STR_23 0385                         STR_15 03BC  
                       STR_32 02AE                         STR_24 0394                         STR_40 0380  
                       STR_16 0364                         STR_33 02F4                         STR_25 033A  
                       STR_41 0322                         STR_17 0399                 __CFG_WDTE$OFF 0000  
                       STR_34 02A6                         STR_26 0310                         STR_50 02B5  
                       STR_42 0328                         STR_18 0340                         STR_35 029E  
                       STR_27 031C                         STR_51 02BC                         STR_43 032E  
                       STR_19 039E                         STR_36 0296                         STR_28 0334  
                       STR_44 0316                         STR_29 02DF                         STR_45 02C3  
                       STR_37 0376                         STR_46 02ED                         STR_38 037B  
                       STR_47 02CA                         STR_39 038F                         STR_48 02D1  
                       STR_49 02FB               __end_of___lldiv 0626                         _T1CON 0018  
             __end_of___llmod 0669                         _T2CON 001C                         _LATA3 0863  
                       _LATA4 0864                         _LATA6 0866                         i1l146 05A2  
                       i1l283 054E                         _PORTA 000C                         _PORTB 000D  
                       _TRISA 008C                         _TRISB 008D             I2C2_Transmit@size 0073  
               __CFG_PWRTE$ON 0000                __CFG_FCMEN$OFF 0000                         _xputc 0787  
                       _xputs 0F26                         pclath 000A                         status 0003  
                       wtemp0 007E               __end_of_xprintf 0F26                  _I2C_Transmit 07B4  
          _LCD_CursorPosition 0F4E                ?_LCD_WriteData 0070              ??_DAC_Initialize 0028  
             __initialization 0015                    _Buzer_Init 0FB5                  __end_of_main 0787  
         ?_LCD_CursorPosition 0075                        ??_main 005D                     ??_LCD_Put 0076  
                 ?_Basic_Init 0070                        _BCL1IE 0493                        _BCL1IF 0093  
                      _BCL2IE 04A1                        _BCL2IF 00A1                _Timer1_Handler 0EE8  
            ___llmod@dividend 0076                        _CCPR2L 0298          ??_LCD_CursorPosition 0076  
                      _ANSELA 018C                        _ANSELB 018D                        _T1GCON 0019  
                      ?_xputc 0070                        ?_xputs 0070                        i1l2605 058C  
                      i1l2613 0595                        i1l2631 05C2                        i1l2633 05C7  
                      i1l2625 05AC                        i1l2635 05C9                        i1l2637 05CB  
                      i1l2655 0538                        i1l2663 0541            I2C2_Transmit@i_311 0078  
                      i1l2681 056E                        i1l2683 0573                        i1l2675 0558  
                      i1l2685 0575                        i1l2687 0577                        _OSCCON 0099  
          I2C2_Transmit@pData 0072                        _TMR1IE 0488                        _TMR1IF 0088  
                   ??_Handler 0071                        _TMR1ON 00C0                        _SSP1IE 048B  
                      _SSP1IF 008B                        _SSP2IE 04A0                        _SSP2IF 00A0  
               ??_Timer1_Init 0072                        ___wmul 0F7C                     ??___lldiv 007A  
                   ??___llmod 007A                        _outptr 007B              I2C_Transmit@I2Cx 0026  
                   ?_I2C_Init 0077        __end_of_Timer1_Handler 0EF1              I2C_Transmit@size 0022  
                      xputc@c 0077                     ??_xprintf 005B       __end_of__initialization 003D  
                   ?_LCD_Init 0070               ??_LCD_WriteData 0072              __end_of_xvprintf 026B  
                  _VoltageReg 0066                __pcstackCOMMON 0070                   ?_Buzer_Init 0070  
         __size_of_Basic_Init 0015                  __pidataBANK1 0F97                  __pidataBANK2 0669  
         __end_of_Timer1_Init 0F7C                 __end_of_xputc 07B4                 __end_of_xputs 0F39  
                  ??_I2C_Init 0020               ?_Timer1_Handler 0070           I2C1_Transmit@result 0079  
                     ??_xputc 0076                       ??_xputs 0078                    __pbssBANK0 005F  
                  __pbssBANK1 00A0                    ??_LCD_Init 0076                 _DAC_DataTable 026B  
                I2C_Init@I2Cx 007A   __end_of_I2C_CommonInterrupt 0ED6                  I2C_Init@mode 0078  
                  __pmaintext 0751                       ?___wmul 0072                    __pintentry 0004  
                     _CCP2CON 029A             ?_LCD_DisplayClear 0070                       _APFCON0 011D  
                     _APFCON1 011E                       _CCPTMRS 029E            ??_LCD_DisplayClear 0075  
                     _LCD_Put 0ED6                  _xvprintf$625 003C                  _xvprintf$626 0040  
                _xvprintf$627 0042                       _SSP1ADD 0212                       _SSP2ADD 021A  
                     _SSP1BUF 0211                       _SSP2BUF 0219                       _SSP1MSK 0213  
                     _SSP2MSK 021B           __size_of_Buzer_Init 0022           I2C2_Transmit@result 0079  
                     _Handler 0004         __end_of_I2C1_Transmit 04C0         __end_of_I2C2_Transmit 0442  
                 _Timer1_Init 0F63                       ___lldiv 05D3               __size_of___wmul 001B  
                     ___llmod 0626               __CFG_STVREN$OFF 0000                       __ptext1 0F16  
                     __ptext2 0041                       __ptext3 0F26                       __ptext4 0787  
                     __ptext5 0ED6                       __ptext6 0F7C                       __ptext7 0626  
                     __ptext8 05D3                       __ptext9 0F63                     ?_xvprintf 0025  
                ??_Basic_Init 0072                       clrloop0 0EDD          end_of_initialization 003D  
                     _xprintf 0F16                 ?_I2C1_PinInit 0070                       init_ram 0EE2  
                     initloop 0EE3                 ?_I2C2_PinInit 0070                   _I2C1_Config 00B3  
                 _I2C2_Config 00A0                 ?_I2C1_Setting 0073               ___lldiv@divisor 0072  
               ?_I2C2_Setting 0073               ___lldiv@counter 0024             I2C_Transmit@pData 0021  
          __end_of_Basic_Init 0F4E              _DAC_VoltageTable 00C6                  __pstringtext 026B  
     __size_of_I2C1_Interrupt 0054              __CFG_FOSC$INTOSC 0000                    ??_xvprintf 0028  
     __size_of_I2C2_Interrupt 0054             __size_of_I2C_Init 0029           I2C1_Setting@address 0076  
 __size_of_LCD_CursorPosition 0015                ??_I2C1_PinInit 0072                ??_I2C2_PinInit 0072  
              ??_I2C1_Setting 0075                ??_I2C2_Setting 0075                 _H7826_01_Gain 0120  
           __size_of_LCD_Init 006B                  ??_Buzer_Init 0072                __end_of___wmul 0F97  
                   _ConfigReg 0068              ??_Timer1_Handler 0070       __size_of_DAC_Initialize 001F  
         start_initialization 0015          I2C1_Transmit@address 0076                     _MemoryReg 005F  
          __end_of_Buzer_Init 0FD7           I2C2_Setting@address 0076               ___llmod@divisor 0072  
             ___llmod@counter 0020          LCD_CursorPosition@tx 0077          LCD_CursorPosition@ty 0075  
       __end_of_LCD_WriteData 06E1                      ??___wmul 0076                   __pdataBANK1 00C6  
                 __pdataBANK2 0120             I2C1_Setting@Speed 0074                      ?_LCD_Put 0075  
                 __pbssCOMMON 007B                     ___latbits 0001                 __pcstackBANK0 0020  
          I2C1_Transmit@i_167 0078            I2C1_Transmit@pData 0072     __size_of_LCD_DisplayClear 000F  
             I2C_Init@address 0077                      ?_Handler 0070                 ?_I2C_Transmit 0020  
               I2C_Init@Speed 0079                  ?_Timer1_Init 0070                      ?___lldiv 0072  
                    ?___llmod 0072                _I2C1_Interrupt 057F          __end_of_I2C1_PinInit 0EFC  
__size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 0F07          __end_of_I2C1_Setting 0751  
                    _I2C_Init 0FD7          __end_of_I2C2_Setting 0719                _I2C2_Interrupt 052B  
                  _H7826_Gain 013E             __size_of_xvprintf 022A                      ?_xprintf 0055  
              __size_of_xputc 002D                __size_of_xputs 0013                      _LCD_Init 04C0  
              ___wmul@product 0076                ??_I2C_Transmit 0023                     clear_ram0 0EDC  
      __end_of_I2C1_Interrupt 05D3                      _SSP1CON1 0215                      _SSP1CON2 0216  
        I2C2_Transmit@address 0076                      _SSP2CON1 021D                      _SSP2CON2 021E  
                    _SSP1STAT 0214                      _SSP2STAT 021C             ___wmul@multiplier 0072  
              _DAC_Initialize 07DF        __end_of_I2C2_Interrupt 057F        __size_of_I2C1_Transmit 007E  
                   _xfunc_out 0064              __size_of_LCD_Put 0006        __size_of_I2C2_Transmit 007F  
            __size_of_Handler 000F               ?_I2C1_Interrupt 0070        __end_of_DAC_Initialize 07FE  
            __size_of___lldiv 0053              __size_of___llmod 0043              I2C1_Setting@mode 0073  
          LCD_WriteData@point 0074               ?_I2C2_Interrupt 0070             I2C1_Transmit@size 0073  
  __end_of_LCD_CursorPosition 0F63                      __ptext10 04C0                      __ptext11 0F07  
                    __ptext20 0EFC                      __ptext12 0F4E                      __ptext21 0719  
                    __ptext13 06A5                      __ptext22 0EF1                      __ptext14 07DF  
                    __ptext23 0FB5                      __ptext15 07B4                      __ptext24 0F39  
                    __ptext16 03C3                      __ptext17 0442                      __ptext26 0EE8  
                    __ptext18 0FD7                      __ptext27 0ED0                      __ptext19 06E1  
                    __ptext28 052B                      __ptext29 057F                  _SSP1CON1bits 0215  
                _SSP1CON2bits 0216              _LCD_DisplayClear 0F07                  _SSP2CON1bits 021D  
                _SSP2CON2bits 021E              __size_of_xprintf 0010         __end_of_DAC_DataTable 0289  
               __size_of_main 0036                 _I2C1_Transmit 0442                 _I2C2_Transmit 03C3  
       __size_of_I2C1_PinInit 000B          __size_of_Timer1_Init 0019                      int$flags 007E  
       __size_of_I2C2_PinInit 000B           I2C_Transmit@address 0020         __size_of_I2C1_Setting 0038  
             ?_DAC_Initialize 0070                  _SSP1STATbits 0214                      _xfunc_in 0062  
       __size_of_I2C2_Setting 0038                  _SSP2STATbits 021C          __end_of_I2C_Transmit 07DF  
           I2C2_Setting@Speed 0074                      _xvprintf 0041                    xprintf@arp 005C  
                  xprintf@fmt 0055                      intlevel1 0000           _I2C_CommonInterrupt 0ED0  
                _I2C1_PinInit 0EF1              ___lldiv@dividend 0076                ?_I2C1_Transmit 0072  
           __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 0EFC                  _I2C1_Setting 0719  
              ?_I2C2_Transmit 0072                  _I2C2_Setting 06E1                   xvprintf@arp 0027  
                 xvprintf@fmt 0025            I2C_Transmit@result 0027              I2C2_Setting@mode 0073  
        ?_I2C_CommonInterrupt 0070              ___lldiv@quotient 0020        __size_of_LCD_WriteData 003C  
     __size_of_Timer1_Handler 0009                I2C1_Transmit@i 0077                      xputs@str 0079  
                   xvprintf@c 0054                     xvprintf@d 0053                     xvprintf@f 004F  
                   xvprintf@i 0051                     xvprintf@j 0049                     xvprintf@p 0044  
                   xvprintf@r 0045                     xvprintf@s 002C                     xvprintf@v 004B  
                   xvprintf@w 0047  
=======
Symbol Table                                                                                   Sat May 13 03:06:16 2017

                 __CFG_CP$OFF 0000                            l74 05EC                            l91 032B  
                          l78 061D                I2C2_Transmit@i 0025         ??_I2C_CommonInterrupt 0071  
         ___wmul@multiplicand 0022                           l100 0354                           l211 05A8  
                         l109 0371                           l215 05D9                           l228 0294  
                         l237 02BD                           l246 02DA                           l338 074E  
                         l620 0049                           l635 00C5                           l653 0160  
                         l676 0217                           l898 07C7                           _GIE 005F  
                         _PR2 001B                           _PR4 0416                  __CFG_CPD$OFF 0000  
                __CFG_BORV$LO 0000                           wreg 0009                    _Basic_Init 0FA5  
                __CFG_LVP$OFF 0000               __end_of_LCD_Put 0F0F                          l3702 0337  
                        l4510 00D2                          l4502 00BD                          l3720 0393  
                        l3704 033B                          l3706 0362                          l3802 02E0  
                        l3810 02FF                          l3660 0601                          l3740 05B2  
                        l3716 0377                          l3724 0396                          l3804 02F7  
                        l3812 0308                          l3900 071D                          l4444 06C3  
                        l4436 06B3                          l4612 024C                          l4604 022D  
                        l4540 0137                          l4532 0111                          l4524 00ED  
                        l3662 0603                          l3654 05F6                          l3718 038E  
                        l3726 039F                          l3806 02FC                          l3902 0725  
                        l4454 0FBC                          l4606 0236                          l4542 013A  
                        l4526 00FB                          l4518 00E0                          l3672 0612  
                        l3680 030E                          l4616 025E                          l4608 023A  
                        l4560 018F                          l4544 013C                          l4536 0115  
                        l4528 00FF                          l4552 0148                          l3746 05BD  
                        l3762 05D0                          l3682 031C                          l3826 07C1  
                        l4618 0262                          l4570 01B9                          l4562 0198  
                        l4546 013E                          l4538 012A                          l4490 008B  
                        l4482 0077                          l3676 0614                          l3748 05BF  
                        l3692 033F                          l3844 055A                          l4572 01BB  
                        l4564 01A8                          l4548 0143                          l4492 008E  
                        l4468 0062                          l3758 05CE                          l3790 02A4  
                        l3766 0277                          l3854 0588                          l3846 0568  
                        l3870 063B                          l4582 01F5                          l4558 017A  
                        l3792 02CB                          l3768 0285                          l4680 03D6  
                        l3890 0745                          l3778 02A8                          l3858 0593  
                        l3874 0653                          l4586 01FD                          l4498 00B5  
                        l4690 03CE                          l3884 072A                          l3788 02A0  
                        l3868 062D                          l4684 03C1                          l3886 0737  
                        l3894 06FF                          l3878 065E                          l4598 0225  
                        l3896 070C                          STR_1 06EB                          STR_2 06F0  
                        STR_3 06F5                          STR_4 06FA                          STR_5 06D1  
                        STR_6 06DF                          STR_7 06E5                          STR_8 06D8  
                        u4145 0FD7                          u3355 0671                          u3705 07CD  
                        _PEIE 005E                          u3805 0630                          u4525 010F  
                        u3735 055D                          u4535 0123                          u3825 0649  
                        u3755 0569                          u3835 0654                          u3765 057D  
                        u3775 0589                          u3695 07C8                          u4655 024A  
                        u4907 0FE2                          u4675 0270                          u4755 03F5  
                        u4917 066A                          u4765 0410                          u4775 042B  
                        u4857 043B                          u4867 0454                          u4877 0469  
                        u4887 047E                          u4897 0F54         Buzzer_MiliSecond@time 0020  
                        _TMR0 0015                          _TMR1 0016                          _TMR2 001A  
                        _TMR4 0415               ??_I2C1_Transmit 0022                  __CFG_WRT$OFF 0000  
                        _main 03A2              __end_of_I2C_Init 0751                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
               __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0022              ??_I2C1_Interrupt 0070  
                        start 0030                 __CFG_IESO$OFF 0000               __end_of_Handler 0030  
               _LCD_WriteData 0667                 __CFG_MCLRE$ON 0000              ??_I2C2_Interrupt 0070  
          __size_of_CPSx_Read 0025      __end_of_LCD_DisplayClear 0F5A         __size_of_I2C_Transmit 002B  
            __end_of_LCD_Init 04A1                 __CFG_PLLEN$ON 0000                   LCD_Put@word 0023  
                       ?_main 0070                 __CFG_WDTE$OFF 0000               __end_of___lldiv 059C  
                       _T1CON 0018               __end_of___llmod 0667                         _T2CON 001C  
                       _LATA3 0863                         _LATA4 0864                         _LATA6 0866  
                       _T4CON 0417                         i1l157 0518                         i1l294 04C4  
                       _PORTA 000C                         _PORTB 000D                         _TRISA 008C  
                       _TRISB 008D             I2C2_Transmit@size 0021                 __CFG_PWRTE$ON 0000  
              __CFG_FCMEN$OFF 0000                         _count 0078                 ??_Buzzer_Init 0020  
                       _xputc 06A4                         _xputs 0FBA                         pclath 000A  
                       status 0003                         wtemp0 007E             _Buzzer_MiliSecond 07F6  
             __end_of_xprintf 0F6A                  _I2C_Transmit 06FC            _LCD_CursorPosition 0FCF  
              ?_LCD_WriteData 0070            ?_Buzzer_MiliSecond 0020              ??_DAC_Initialize 0030  
             __initialization 0032                  __end_of_main 0432           ?_LCD_CursorPosition 0023  
         ??_Buzzer_MiliSecond 0022                        ??_main 00D1                     ??_LCD_Put 0024  
            CPSx_Read@channel 007A                   ?_Basic_Init 0070                        _BCL1IE 0493  
                      _BCL1IF 0093                        _BCL2IE 04A1                        _BCL2IF 00A1  
              _Timer1_Handler 0F0F              ___llmod@dividend 0024          __size_of_mTouch_Init 0013  
                      _CCPR2L 0298          ??_LCD_CursorPosition 0024                        _ANSELA 018C  
                      _ANSELB 018D                        _T1GCON 0019             __end_of_CPSx_Read 079E  
                      ?_xputc 0070                        ?_xputs 0070                        i1l3104 0F9F  
                      i1l3322 0F21                        i1l2810 0522                        i1l3506 0026  
                      i1l2820 053F                        i1l2822 0541                        i1l2816 0538  
                      i1l2840 04AE                        i1l2818 053D                        i1l2860 04CE  
          I2C2_Transmit@i_316 0026                        i1l2790 0502                        i1l2870 04EB  
                      i1l2848 04B7                        i1l2872 04ED                        i1l2866 04E4  
                      i1l2868 04E9                        i1l2798 050B     __end_of_Buzzer_MiliSecond 0800  
                      u227_25 07EE                        _OSCCON 0099            I2C2_Transmit@pData 0020  
              _Timer4_Handler 0F18                        _TMR1IE 0488                        _TMR1IF 0088  
                   ??_Handler 0075                        _TMR4IE 0499                        _TMR4IF 0099  
                      _TMR1ON 00C0                        _SSP1IE 048B                        _SSP1IF 008B  
                      _SSP2IE 04A0                        _SSP2IF 00A0               _mTouch_PortInit 0F3D  
               ??_Timer1_Init 0020                 ??_Timer4_Init 0020           __end_of_Buzzer_Init 0779  
                      ___wmul 07BE                     ??___lldiv 0028                     ??___llmod 0028  
                      _outptr 0068              I2C_Transmit@I2Cx 002E                     ?_I2C_Init 0025  
      __end_of_Timer1_Handler 0F18              I2C_Transmit@size 002A        __end_of_Timer4_Handler 0F23  
                      xputc@c 0025                     ??_xprintf 0064       __end_of__initialization 0045  
                   ?_LCD_Init 0070               ??_LCD_WriteData 0020              __end_of_xvprintf 0273  
                  _VoltageReg 0069            Buzzer_SetDuty@duty 0070                __pcstackCOMMON 0070  
         __size_of_Basic_Init 0015           __end_of_Timer1_Init 1000           __end_of_Timer4_Init 0F7D  
               __end_of_xputc 06D1                 __end_of_xputs 0FCF     Buzzer_SetDuty@CCP2CON_Pre 0074  
                  ??_I2C_Init 0028               ?_Timer1_Handler 0070           I2C1_Transmit@result 0027  
     __size_of_Buzzer_Handler 0015               ?_Timer4_Handler 0070       __end_of_mTouch_PortInit 0F4A  
                     ??_xputc 0024                       ??_xputs 0026                    __pbssBANK0 0066  
                  __pbssBANK1 00A0    __size_of_Buzzer_MiliSecond 000A                   _Buzzer_Init 0751  
                  ??_LCD_Init 0024       __size_of_Buzzer_SetDuty 001C                  I2C_Init@I2Cx 002A  
 __end_of_I2C_CommonInterrupt 0F02                  I2C_Init@mode 0026                    __pmaintext 03A2  
                     ?___wmul 0020                    __pintentry 0004                       _CCP2CON 029A  
           ?_LCD_DisplayClear 0070                       _APFCON0 011D                       _APFCON1 011E  
                     _CCPTMRS 029E            ??_LCD_DisplayClear 0023                       _CPSCON0 001E  
                     _CPSCON1 001F                       _LCD_Put 0F08                  _xvprintf$667 0045  
                _xvprintf$668 0049                  _xvprintf$669 004B                       _SSP1ADD 0212  
                     _SSP2ADD 021A                       _SSP1BUF 0211                       _SSP2BUF 0219  
                     _SSP1MSK 0213                       _SSP2MSK 021B           I2C2_Transmit@result 0027  
                     _Handler 0004         __end_of_I2C1_Transmit 03A2         __end_of_I2C2_Transmit 030B  
                 _Timer1_Init 0FE6                   _Timer4_Init 0F6A                       ___lldiv 0549  
             __size_of___wmul 001C                       ___llmod 0624               __CFG_STVREN$OFF 0000  
                     __ptext1 0F5A                       __ptext2 0049                       __ptext3 0FBA  
                     __ptext4 06A4                       __ptext5 0F08                       __ptext6 07BE  
                     __ptext7 0624                       __ptext8 0549                       __ptext9 0F7D  
                   ?_xvprintf 002E                  ??_Basic_Init 0020                       clrloop0 0F03  
        end_of_initialization 0045              ?_mTouch_PortInit 0070                       _xprintf 0F5A  
               ?_I2C1_PinInit 0070                 ?_I2C2_PinInit 0070                   _I2C1_Config 00BE  
                   _CPSx_Read 0779                   _I2C2_Config 00AB                 ?_I2C1_Setting 0021  
             ___lldiv@divisor 0020                 ?_I2C2_Setting 0021               ___lldiv@counter 002D  
           I2C_Transmit@pData 0029            __end_of_Basic_Init 0FBA                  __pstringtext 06D1  
     __size_of_I2C1_Interrupt 0054              __CFG_FOSC$INTOSC 0000                 ??_mTouch_Init 0021  
                  ??_xvprintf 0031       __size_of_I2C2_Interrupt 0054             __size_of_I2C_Init 002A  
         I2C1_Setting@address 0024                _Buzzer_Handler 0F90   __size_of_LCD_CursorPosition 0017  
              ??_I2C1_PinInit 0020                ??_I2C2_PinInit 0020                _Buzzer_SetDuty 07DA  
              ??_I2C1_Setting 0023                    ?_CPSx_Read 0070                ??_I2C2_Setting 0023  
           __size_of_LCD_Init 006F                __end_of___wmul 07DA                     _ConfigReg 006B  
            ??_Timer1_Handler 0070       __size_of_DAC_Initialize 0020              ??_Timer4_Handler 0070  
         start_initialization 0032        __end_of_Buzzer_Handler 0FA5          I2C1_Transmit@address 0024  
                   _MemoryReg 00A6        __end_of_Buzzer_SetDuty 07F6                  ?_Buzzer_Init 0070  
         __end_of_mTouch_Init 0F90           I2C2_Setting@address 0024               ___llmod@divisor 0020  
             ___llmod@counter 0029          LCD_CursorPosition@tx 0025          LCD_CursorPosition@ty 0023  
       __end_of_LCD_WriteData 06A4                      ??___wmul 0024             I2C1_Setting@Speed 0022  
                    ?_LCD_Put 0023                   __pbssCOMMON 0076                     ___latbits 0001  
               __pcstackBANK0 0020                 __pcstackBANK1 00D1               ?_Buzzer_Handler 0070  
          I2C1_Transmit@i_172 0026            I2C1_Transmit@pData 0020     __size_of_LCD_DisplayClear 0010  
             ?_Buzzer_SetDuty 0070               I2C_Init@address 0025                      ?_Handler 0070  
                 ??_CPSx_Read 0070                 ?_I2C_Transmit 0028                 I2C_Init@Speed 0027  
                ?_Timer1_Init 0070                  ?_Timer4_Init 0070                      ?___lldiv 0020  
                    ?___llmod 0020                _I2C1_Interrupt 04F5          __end_of_I2C1_PinInit 0F30  
__size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 0F3D          __end_of_I2C1_Setting 0624  
                    _I2C_Init 0727          __end_of_I2C2_Setting 05E0                _I2C2_Interrupt 04A1  
                 _mTouch_Init 0F7D             __size_of_xvprintf 022A                      ?_xprintf 005E  
              __size_of_xputc 002D                __size_of_xputs 0015                      _LCD_Init 0432  
              ___wmul@product 0024                      _CPS_Data 00A0                ??_I2C_Transmit 002B  
                   clear_ram0 0F02        __end_of_I2C1_Interrupt 0549                      _SSP1CON1 0215  
                    _SSP1CON2 0216          I2C2_Transmit@address 0024                      _SSP2CON1 021D  
                    _SSP2CON2 021E                      _SSP1STAT 0214                      _SSP2STAT 021C  
                Handler@count 00A9             ___wmul@multiplier 0020                _DAC_Initialize 079E  
      __end_of_I2C2_Interrupt 04F5        __size_of_I2C1_Transmit 0097                     _xfunc_out 0066  
            __size_of_LCD_Put 0007        __size_of_I2C2_Transmit 0098                   _CPS_PreData 00A3  
            __size_of_Handler 002C          __size_of_Buzzer_Init 0028      __size_of_mTouch_PortInit 000D  
             ?_I2C1_Interrupt 0070        __end_of_DAC_Initialize 07BE              __size_of___lldiv 0053  
            __size_of___llmod 0043              I2C1_Setting@mode 0021            LCD_WriteData@point 0022  
             ?_I2C2_Interrupt 0070             I2C1_Transmit@size 0021    __end_of_LCD_CursorPosition 0FE6  
                    __ptext10 0F3D                      __ptext11 0F6A                      __ptext20 030B  
                    __ptext12 0FE6                      __ptext21 0727                      __ptext13 0432  
                    __ptext30 0F18                      __ptext22 059C                      __ptext14 0F4A  
                    __ptext31 0F0F                      __ptext23 0F30                      __ptext15 0FCF  
                    __ptext32 0EFC                      __ptext24 05E0                      __ptext16 0667  
                    __ptext33 04A1                      __ptext25 0F23                      __ptext17 079E  
                    __ptext34 04F5                      __ptext26 07F6                      __ptext18 06FC  
                    __ptext35 0779                      __ptext27 0751                      __ptext19 0273  
                    __ptext36 0F90                      __ptext28 0FA5                      __ptext37 07DA  
                _SSP1CON1bits 0215                  _SSP1CON2bits 0216              _LCD_DisplayClear 0F4A  
                _SSP2CON1bits 021D                  _SSP2CON2bits 021E              __size_of_xprintf 0010  
               __size_of_main 0090                 _I2C1_Transmit 030B                 _I2C2_Transmit 0273  
       __size_of_I2C1_PinInit 000D          __size_of_Timer1_Init 001A                      int$flags 007E  
       __size_of_I2C2_PinInit 000D          __size_of_Timer4_Init 0013           I2C_Transmit@address 0028  
       __size_of_I2C1_Setting 0044               ?_DAC_Initialize 0070                  _SSP1STATbits 0214  
                    _xfunc_in 0076         __size_of_I2C2_Setting 0044                  _SSP2STATbits 021C  
            ??_Buzzer_Handler 0075          __end_of_I2C_Transmit 0727             I2C2_Setting@Speed 0022  
            ??_Buzzer_SetDuty 0072                      _xvprintf 0049                    xprintf@arp 0065  
                  xprintf@fmt 005E                      intlevel1 0000           _I2C_CommonInterrupt 0EFC  
                _I2C1_PinInit 0F23              ___lldiv@dividend 0024                ?_I2C1_Transmit 0020  
           __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 0F30                  _I2C1_Setting 05E0  
              ?_I2C2_Transmit 0020                  _I2C2_Setting 059C                   xvprintf@arp 0030  
                 xvprintf@fmt 002E            I2C_Transmit@result 002F             ??_mTouch_PortInit 0020  
            I2C2_Setting@mode 0021          ?_I2C_CommonInterrupt 0070                    _OPTION_REG 0095  
            ___lldiv@quotient 0029                  ?_mTouch_Init 0070        __size_of_LCD_WriteData 003D  
     __size_of_Timer1_Handler 0009                I2C1_Transmit@i 0025                      xputs@str 0027  
                   xvprintf@c 005D                     xvprintf@d 005C                     xvprintf@f 0058  
                   xvprintf@i 005A                     xvprintf@j 0052                     xvprintf@p 004D  
                   xvprintf@r 004E                     xvprintf@s 0035                     xvprintf@v 0054  
                   xvprintf@w 0050       __size_of_Timer4_Handler 000B  
>>>>>>> CPS
