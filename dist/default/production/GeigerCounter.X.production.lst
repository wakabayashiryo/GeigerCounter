

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon May  1 23:13:04 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 1.41
    50                           ; Generated 25/01/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1827 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  0111                     	;# 
   132  0112                     	;# 
   133  0113                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011B                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0191                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0199                     	;# 
   156  019A                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0219                     	;# 
   184  021A                     	;# 
   185  021B                     	;# 
   186  021C                     	;# 
   187  021D                     	;# 
   188  021E                     	;# 
   189  021F                     	;# 
   190  0291                     	;# 
   191  0291                     	;# 
   192  0292                     	;# 
   193  0293                     	;# 
   194  0294                     	;# 
   195  0295                     	;# 
   196  0295                     	;# 
   197  0296                     	;# 
   198  0298                     	;# 
   199  0298                     	;# 
   200  0299                     	;# 
   201  029A                     	;# 
   202  029B                     	;# 
   203  029C                     	;# 
   204  029C                     	;# 
   205  029D                     	;# 
   206  029E                     	;# 
   207  029E                     	;# 
   208  0311                     	;# 
   209  0311                     	;# 
   210  0312                     	;# 
   211  0313                     	;# 
   212  0318                     	;# 
   213  0318                     	;# 
   214  0319                     	;# 
   215  031A                     	;# 
   216  0394                     	;# 
   217  0395                     	;# 
   218  0396                     	;# 
   219  039A                     	;# 
   220  039C                     	;# 
   221  039D                     	;# 
   222  039E                     	;# 
   223  039F                     	;# 
   224  0415                     	;# 
   225  0416                     	;# 
   226  0417                     	;# 
   227  041C                     	;# 
   228  041D                     	;# 
   229  041E                     	;# 
   230  0FE4                     	;# 
   231  0FE5                     	;# 
   232  0FE6                     	;# 
   233  0FE7                     	;# 
   234  0FE8                     	;# 
   235  0FE9                     	;# 
   236  0FEA                     	;# 
   237  0FEB                     	;# 
   238  0FED                     	;# 
   239  0FEE                     	;# 
   240  0FEF                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  0111                     	;# 
   290  0112                     	;# 
   291  0113                     	;# 
   292  0114                     	;# 
   293  0115                     	;# 
   294  0116                     	;# 
   295  0117                     	;# 
   296  0118                     	;# 
   297  0119                     	;# 
   298  011A                     	;# 
   299  011B                     	;# 
   300  011D                     	;# 
   301  011E                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0191                     	;# 
   305  0191                     	;# 
   306  0192                     	;# 
   307  0193                     	;# 
   308  0193                     	;# 
   309  0193                     	;# 
   310  0194                     	;# 
   311  0195                     	;# 
   312  0196                     	;# 
   313  0199                     	;# 
   314  019A                     	;# 
   315  019B                     	;# 
   316  019B                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019C                     	;# 
   320  019C                     	;# 
   321  019D                     	;# 
   322  019E                     	;# 
   323  019F                     	;# 
   324  020C                     	;# 
   325  020D                     	;# 
   326  0211                     	;# 
   327  0211                     	;# 
   328  0212                     	;# 
   329  0212                     	;# 
   330  0213                     	;# 
   331  0213                     	;# 
   332  0214                     	;# 
   333  0214                     	;# 
   334  0215                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0216                     	;# 
   338  0216                     	;# 
   339  0217                     	;# 
   340  0217                     	;# 
   341  0219                     	;# 
   342  021A                     	;# 
   343  021B                     	;# 
   344  021C                     	;# 
   345  021D                     	;# 
   346  021E                     	;# 
   347  021F                     	;# 
   348  0291                     	;# 
   349  0291                     	;# 
   350  0292                     	;# 
   351  0293                     	;# 
   352  0294                     	;# 
   353  0295                     	;# 
   354  0295                     	;# 
   355  0296                     	;# 
   356  0298                     	;# 
   357  0298                     	;# 
   358  0299                     	;# 
   359  029A                     	;# 
   360  029B                     	;# 
   361  029C                     	;# 
   362  029C                     	;# 
   363  029D                     	;# 
   364  029E                     	;# 
   365  029E                     	;# 
   366  0311                     	;# 
   367  0311                     	;# 
   368  0312                     	;# 
   369  0313                     	;# 
   370  0318                     	;# 
   371  0318                     	;# 
   372  0319                     	;# 
   373  031A                     	;# 
   374  0394                     	;# 
   375  0395                     	;# 
   376  0396                     	;# 
   377  039A                     	;# 
   378  039C                     	;# 
   379  039D                     	;# 
   380  039E                     	;# 
   381  039F                     	;# 
   382  0415                     	;# 
   383  0416                     	;# 
   384  0417                     	;# 
   385  041C                     	;# 
   386  041D                     	;# 
   387  041E                     	;# 
   388  0FE4                     	;# 
   389  0FE5                     	;# 
   390  0FE6                     	;# 
   391  0FE7                     	;# 
   392  0FE8                     	;# 
   393  0FE9                     	;# 
   394  0FEA                     	;# 
   395  0FEB                     	;# 
   396  0FED                     	;# 
   397  0FEE                     	;# 
   398  0FEF                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0008                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000D                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0013                     	;# 
   416  0014                     	;# 
   417  0015                     	;# 
   418  0016                     	;# 
   419  0016                     	;# 
   420  0017                     	;# 
   421  0018                     	;# 
   422  0019                     	;# 
   423  001A                     	;# 
   424  001B                     	;# 
   425  001C                     	;# 
   426  001E                     	;# 
   427  001F                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  0111                     	;# 
   448  0112                     	;# 
   449  0113                     	;# 
   450  0114                     	;# 
   451  0115                     	;# 
   452  0116                     	;# 
   453  0117                     	;# 
   454  0118                     	;# 
   455  0119                     	;# 
   456  011A                     	;# 
   457  011B                     	;# 
   458  011D                     	;# 
   459  011E                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  0191                     	;# 
   463  0191                     	;# 
   464  0192                     	;# 
   465  0193                     	;# 
   466  0193                     	;# 
   467  0193                     	;# 
   468  0194                     	;# 
   469  0195                     	;# 
   470  0196                     	;# 
   471  0199                     	;# 
   472  019A                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019C                     	;# 
   478  019C                     	;# 
   479  019D                     	;# 
   480  019E                     	;# 
   481  019F                     	;# 
   482  020C                     	;# 
   483  020D                     	;# 
   484  0211                     	;# 
   485  0211                     	;# 
   486  0212                     	;# 
   487  0212                     	;# 
   488  0213                     	;# 
   489  0213                     	;# 
   490  0214                     	;# 
   491  0214                     	;# 
   492  0215                     	;# 
   493  0215                     	;# 
   494  0215                     	;# 
   495  0216                     	;# 
   496  0216                     	;# 
   497  0217                     	;# 
   498  0217                     	;# 
   499  0219                     	;# 
   500  021A                     	;# 
   501  021B                     	;# 
   502  021C                     	;# 
   503  021D                     	;# 
   504  021E                     	;# 
   505  021F                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0294                     	;# 
   511  0295                     	;# 
   512  0295                     	;# 
   513  0296                     	;# 
   514  0298                     	;# 
   515  0298                     	;# 
   516  0299                     	;# 
   517  029A                     	;# 
   518  029B                     	;# 
   519  029C                     	;# 
   520  029C                     	;# 
   521  029D                     	;# 
   522  029E                     	;# 
   523  029E                     	;# 
   524  0311                     	;# 
   525  0311                     	;# 
   526  0312                     	;# 
   527  0313                     	;# 
   528  0318                     	;# 
   529  0318                     	;# 
   530  0319                     	;# 
   531  031A                     	;# 
   532  0394                     	;# 
   533  0395                     	;# 
   534  0396                     	;# 
   535  039A                     	;# 
   536  039C                     	;# 
   537  039D                     	;# 
   538  039E                     	;# 
   539  039F                     	;# 
   540  0415                     	;# 
   541  0416                     	;# 
   542  0417                     	;# 
   543  041C                     	;# 
   544  041D                     	;# 
   545  041E                     	;# 
   546  0FE4                     	;# 
   547  0FE5                     	;# 
   548  0FE6                     	;# 
   549  0FE7                     	;# 
   550  0FE8                     	;# 
   551  0FE9                     	;# 
   552  0FEA                     	;# 
   553  0FEB                     	;# 
   554  0FED                     	;# 
   555  0FEE                     	;# 
   556  0FEF                     	;# 
   557  0000                     	;# 
   558  0001                     	;# 
   559  0002                     	;# 
   560  0003                     	;# 
   561  0004                     	;# 
   562  0005                     	;# 
   563  0006                     	;# 
   564  0007                     	;# 
   565  0008                     	;# 
   566  0009                     	;# 
   567  000A                     	;# 
   568  000B                     	;# 
   569  000C                     	;# 
   570  000D                     	;# 
   571  0011                     	;# 
   572  0012                     	;# 
   573  0013                     	;# 
   574  0014                     	;# 
   575  0015                     	;# 
   576  0016                     	;# 
   577  0016                     	;# 
   578  0017                     	;# 
   579  0018                     	;# 
   580  0019                     	;# 
   581  001A                     	;# 
   582  001B                     	;# 
   583  001C                     	;# 
   584  001E                     	;# 
   585  001F                     	;# 
   586  008C                     	;# 
   587  008D                     	;# 
   588  0091                     	;# 
   589  0092                     	;# 
   590  0093                     	;# 
   591  0094                     	;# 
   592  0095                     	;# 
   593  0096                     	;# 
   594  0097                     	;# 
   595  0098                     	;# 
   596  0099                     	;# 
   597  009A                     	;# 
   598  009B                     	;# 
   599  009B                     	;# 
   600  009C                     	;# 
   601  009D                     	;# 
   602  009E                     	;# 
   603  010C                     	;# 
   604  010D                     	;# 
   605  0111                     	;# 
   606  0112                     	;# 
   607  0113                     	;# 
   608  0114                     	;# 
   609  0115                     	;# 
   610  0116                     	;# 
   611  0117                     	;# 
   612  0118                     	;# 
   613  0119                     	;# 
   614  011A                     	;# 
   615  011B                     	;# 
   616  011D                     	;# 
   617  011E                     	;# 
   618  018C                     	;# 
   619  018D                     	;# 
   620  0191                     	;# 
   621  0191                     	;# 
   622  0192                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0193                     	;# 
   626  0194                     	;# 
   627  0195                     	;# 
   628  0196                     	;# 
   629  0199                     	;# 
   630  019A                     	;# 
   631  019B                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019C                     	;# 
   636  019C                     	;# 
   637  019D                     	;# 
   638  019E                     	;# 
   639  019F                     	;# 
   640  020C                     	;# 
   641  020D                     	;# 
   642  0211                     	;# 
   643  0211                     	;# 
   644  0212                     	;# 
   645  0212                     	;# 
   646  0213                     	;# 
   647  0213                     	;# 
   648  0214                     	;# 
   649  0214                     	;# 
   650  0215                     	;# 
   651  0215                     	;# 
   652  0215                     	;# 
   653  0216                     	;# 
   654  0216                     	;# 
   655  0217                     	;# 
   656  0217                     	;# 
   657  0219                     	;# 
   658  021A                     	;# 
   659  021B                     	;# 
   660  021C                     	;# 
   661  021D                     	;# 
   662  021E                     	;# 
   663  021F                     	;# 
   664  0291                     	;# 
   665  0291                     	;# 
   666  0292                     	;# 
   667  0293                     	;# 
   668  0294                     	;# 
   669  0295                     	;# 
   670  0295                     	;# 
   671  0296                     	;# 
   672  0298                     	;# 
   673  0298                     	;# 
   674  0299                     	;# 
   675  029A                     	;# 
   676  029B                     	;# 
   677  029C                     	;# 
   678  029C                     	;# 
   679  029D                     	;# 
   680  029E                     	;# 
   681  029E                     	;# 
   682  0311                     	;# 
   683  0311                     	;# 
   684  0312                     	;# 
   685  0313                     	;# 
   686  0318                     	;# 
   687  0318                     	;# 
   688  0319                     	;# 
   689  031A                     	;# 
   690  0394                     	;# 
   691  0395                     	;# 
   692  0396                     	;# 
   693  039A                     	;# 
   694  039C                     	;# 
   695  039D                     	;# 
   696  039E                     	;# 
   697  039F                     	;# 
   698  0415                     	;# 
   699  0416                     	;# 
   700  0417                     	;# 
   701  041C                     	;# 
   702  041D                     	;# 
   703  041E                     	;# 
   704  0FE4                     	;# 
   705  0FE5                     	;# 
   706  0FE6                     	;# 
   707  0FE7                     	;# 
   708  0FE8                     	;# 
   709  0FE9                     	;# 
   710  0FEA                     	;# 
   711  0FEB                     	;# 
   712  0FED                     	;# 
   713  0FEE                     	;# 
   714  0FEF                     	;# 
   715  0000                     	;# 
   716  0001                     	;# 
   717  0002                     	;# 
   718  0003                     	;# 
   719  0004                     	;# 
   720  0005                     	;# 
   721  0006                     	;# 
   722  0007                     	;# 
   723  0008                     	;# 
   724  0009                     	;# 
   725  000A                     	;# 
   726  000B                     	;# 
   727  000C                     	;# 
   728  000D                     	;# 
   729  0011                     	;# 
   730  0012                     	;# 
   731  0013                     	;# 
   732  0014                     	;# 
   733  0015                     	;# 
   734  0016                     	;# 
   735  0016                     	;# 
   736  0017                     	;# 
   737  0018                     	;# 
   738  0019                     	;# 
   739  001A                     	;# 
   740  001B                     	;# 
   741  001C                     	;# 
   742  001E                     	;# 
   743  001F                     	;# 
   744  008C                     	;# 
   745  008D                     	;# 
   746  0091                     	;# 
   747  0092                     	;# 
   748  0093                     	;# 
   749  0094                     	;# 
   750  0095                     	;# 
   751  0096                     	;# 
   752  0097                     	;# 
   753  0098                     	;# 
   754  0099                     	;# 
   755  009A                     	;# 
   756  009B                     	;# 
   757  009B                     	;# 
   758  009C                     	;# 
   759  009D                     	;# 
   760  009E                     	;# 
   761  010C                     	;# 
   762  010D                     	;# 
   763  0111                     	;# 
   764  0112                     	;# 
   765  0113                     	;# 
   766  0114                     	;# 
   767  0115                     	;# 
   768  0116                     	;# 
   769  0117                     	;# 
   770  0118                     	;# 
   771  0119                     	;# 
   772  011A                     	;# 
   773  011B                     	;# 
   774  011D                     	;# 
   775  011E                     	;# 
   776  018C                     	;# 
   777  018D                     	;# 
   778  0191                     	;# 
   779  0191                     	;# 
   780  0192                     	;# 
   781  0193                     	;# 
   782  0193                     	;# 
   783  0193                     	;# 
   784  0194                     	;# 
   785  0195                     	;# 
   786  0196                     	;# 
   787  0199                     	;# 
   788  019A                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019B                     	;# 
   793  019C                     	;# 
   794  019C                     	;# 
   795  019D                     	;# 
   796  019E                     	;# 
   797  019F                     	;# 
   798  020C                     	;# 
   799  020D                     	;# 
   800  0211                     	;# 
   801  0211                     	;# 
   802  0212                     	;# 
   803  0212                     	;# 
   804  0213                     	;# 
   805  0213                     	;# 
   806  0214                     	;# 
   807  0214                     	;# 
   808  0215                     	;# 
   809  0215                     	;# 
   810  0215                     	;# 
   811  0216                     	;# 
   812  0216                     	;# 
   813  0217                     	;# 
   814  0217                     	;# 
   815  0219                     	;# 
   816  021A                     	;# 
   817  021B                     	;# 
   818  021C                     	;# 
   819  021D                     	;# 
   820  021E                     	;# 
   821  021F                     	;# 
   822  0291                     	;# 
   823  0291                     	;# 
   824  0292                     	;# 
   825  0293                     	;# 
   826  0294                     	;# 
   827  0295                     	;# 
   828  0295                     	;# 
   829  0296                     	;# 
   830  0298                     	;# 
   831  0298                     	;# 
   832  0299                     	;# 
   833  029A                     	;# 
   834  029B                     	;# 
   835  029C                     	;# 
   836  029C                     	;# 
   837  029D                     	;# 
   838  029E                     	;# 
   839  029E                     	;# 
   840  0311                     	;# 
   841  0311                     	;# 
   842  0312                     	;# 
   843  0313                     	;# 
   844  0318                     	;# 
   845  0318                     	;# 
   846  0319                     	;# 
   847  031A                     	;# 
   848  0394                     	;# 
   849  0395                     	;# 
   850  0396                     	;# 
   851  039A                     	;# 
   852  039C                     	;# 
   853  039D                     	;# 
   854  039E                     	;# 
   855  039F                     	;# 
   856  0415                     	;# 
   857  0416                     	;# 
   858  0417                     	;# 
   859  041C                     	;# 
   860  041D                     	;# 
   861  041E                     	;# 
   862  0FE4                     	;# 
   863  0FE5                     	;# 
   864  0FE6                     	;# 
   865  0FE7                     	;# 
   866  0FE8                     	;# 
   867  0FE9                     	;# 
   868  0FEA                     	;# 
   869  0FEB                     	;# 
   870  0FED                     	;# 
   871  0FEE                     	;# 
   872  0FEF                     	;# 
   873  0000                     	;# 
   874  0001                     	;# 
   875  0002                     	;# 
   876  0003                     	;# 
   877  0004                     	;# 
   878  0005                     	;# 
   879  0006                     	;# 
   880  0007                     	;# 
   881  0008                     	;# 
   882  0009                     	;# 
   883  000A                     	;# 
   884  000B                     	;# 
   885  000C                     	;# 
   886  000D                     	;# 
   887  0011                     	;# 
   888  0012                     	;# 
   889  0013                     	;# 
   890  0014                     	;# 
   891  0015                     	;# 
   892  0016                     	;# 
   893  0016                     	;# 
   894  0017                     	;# 
   895  0018                     	;# 
   896  0019                     	;# 
   897  001A                     	;# 
   898  001B                     	;# 
   899  001C                     	;# 
   900  001E                     	;# 
   901  001F                     	;# 
   902  008C                     	;# 
   903  008D                     	;# 
   904  0091                     	;# 
   905  0092                     	;# 
   906  0093                     	;# 
   907  0094                     	;# 
   908  0095                     	;# 
   909  0096                     	;# 
   910  0097                     	;# 
   911  0098                     	;# 
   912  0099                     	;# 
   913  009A                     	;# 
   914  009B                     	;# 
   915  009B                     	;# 
   916  009C                     	;# 
   917  009D                     	;# 
   918  009E                     	;# 
   919  010C                     	;# 
   920  010D                     	;# 
   921  0111                     	;# 
   922  0112                     	;# 
   923  0113                     	;# 
   924  0114                     	;# 
   925  0115                     	;# 
   926  0116                     	;# 
   927  0117                     	;# 
   928  0118                     	;# 
   929  0119                     	;# 
   930  011A                     	;# 
   931  011B                     	;# 
   932  011D                     	;# 
   933  011E                     	;# 
   934  018C                     	;# 
   935  018D                     	;# 
   936  0191                     	;# 
   937  0191                     	;# 
   938  0192                     	;# 
   939  0193                     	;# 
   940  0193                     	;# 
   941  0193                     	;# 
   942  0194                     	;# 
   943  0195                     	;# 
   944  0196                     	;# 
   945  0199                     	;# 
   946  019A                     	;# 
   947  019B                     	;# 
   948  019B                     	;# 
   949  019B                     	;# 
   950  019B                     	;# 
   951  019C                     	;# 
   952  019C                     	;# 
   953  019D                     	;# 
   954  019E                     	;# 
   955  019F                     	;# 
   956  020C                     	;# 
   957  020D                     	;# 
   958  0211                     	;# 
   959  0211                     	;# 
   960  0212                     	;# 
   961  0212                     	;# 
   962  0213                     	;# 
   963  0213                     	;# 
   964  0214                     	;# 
   965  0214                     	;# 
   966  0215                     	;# 
   967  0215                     	;# 
   968  0215                     	;# 
   969  0216                     	;# 
   970  0216                     	;# 
   971  0217                     	;# 
   972  0217                     	;# 
   973  0219                     	;# 
   974  021A                     	;# 
   975  021B                     	;# 
   976  021C                     	;# 
   977  021D                     	;# 
   978  021E                     	;# 
   979  021F                     	;# 
   980  0291                     	;# 
   981  0291                     	;# 
   982  0292                     	;# 
   983  0293                     	;# 
   984  0294                     	;# 
   985  0295                     	;# 
   986  0295                     	;# 
   987  0296                     	;# 
   988  0298                     	;# 
   989  0298                     	;# 
   990  0299                     	;# 
   991  029A                     	;# 
   992  029B                     	;# 
   993  029C                     	;# 
   994  029C                     	;# 
   995  029D                     	;# 
   996  029E                     	;# 
   997  029E                     	;# 
   998  0311                     	;# 
   999  0311                     	;# 
  1000  0312                     	;# 
  1001  0313                     	;# 
  1002  0318                     	;# 
  1003  0318                     	;# 
  1004  0319                     	;# 
  1005  031A                     	;# 
  1006  0394                     	;# 
  1007  0395                     	;# 
  1008  0396                     	;# 
  1009  039A                     	;# 
  1010  039C                     	;# 
  1011  039D                     	;# 
  1012  039E                     	;# 
  1013  039F                     	;# 
  1014  0415                     	;# 
  1015  0416                     	;# 
  1016  0417                     	;# 
  1017  041C                     	;# 
  1018  041D                     	;# 
  1019  041E                     	;# 
  1020  0FE4                     	;# 
  1021  0FE5                     	;# 
  1022  0FE6                     	;# 
  1023  0FE7                     	;# 
  1024  0FE8                     	;# 
  1025  0FE9                     	;# 
  1026  0FEA                     	;# 
  1027  0FEB                     	;# 
  1028  0FED                     	;# 
  1029  0FEE                     	;# 
  1030  0FEF                     	;# 
  1031  0000                     	;# 
  1032  0001                     	;# 
  1033  0002                     	;# 
  1034  0003                     	;# 
  1035  0004                     	;# 
  1036  0005                     	;# 
  1037  0006                     	;# 
  1038  0007                     	;# 
  1039  0008                     	;# 
  1040  0009                     	;# 
  1041  000A                     	;# 
  1042  000B                     	;# 
  1043  000C                     	;# 
  1044  000D                     	;# 
  1045  0011                     	;# 
  1046  0012                     	;# 
  1047  0013                     	;# 
  1048  0014                     	;# 
  1049  0015                     	;# 
  1050  0016                     	;# 
  1051  0016                     	;# 
  1052  0017                     	;# 
  1053  0018                     	;# 
  1054  0019                     	;# 
  1055  001A                     	;# 
  1056  001B                     	;# 
  1057  001C                     	;# 
  1058  001E                     	;# 
  1059  001F                     	;# 
  1060  008C                     	;# 
  1061  008D                     	;# 
  1062  0091                     	;# 
  1063  0092                     	;# 
  1064  0093                     	;# 
  1065  0094                     	;# 
  1066  0095                     	;# 
  1067  0096                     	;# 
  1068  0097                     	;# 
  1069  0098                     	;# 
  1070  0099                     	;# 
  1071  009A                     	;# 
  1072  009B                     	;# 
  1073  009B                     	;# 
  1074  009C                     	;# 
  1075  009D                     	;# 
  1076  009E                     	;# 
  1077  010C                     	;# 
  1078  010D                     	;# 
  1079  0111                     	;# 
  1080  0112                     	;# 
  1081  0113                     	;# 
  1082  0114                     	;# 
  1083  0115                     	;# 
  1084  0116                     	;# 
  1085  0117                     	;# 
  1086  0118                     	;# 
  1087  0119                     	;# 
  1088  011A                     	;# 
  1089  011B                     	;# 
  1090  011D                     	;# 
  1091  011E                     	;# 
  1092  018C                     	;# 
  1093  018D                     	;# 
  1094  0191                     	;# 
  1095  0191                     	;# 
  1096  0192                     	;# 
  1097  0193                     	;# 
  1098  0193                     	;# 
  1099  0193                     	;# 
  1100  0194                     	;# 
  1101  0195                     	;# 
  1102  0196                     	;# 
  1103  0199                     	;# 
  1104  019A                     	;# 
  1105  019B                     	;# 
  1106  019B                     	;# 
  1107  019B                     	;# 
  1108  019B                     	;# 
  1109  019C                     	;# 
  1110  019C                     	;# 
  1111  019D                     	;# 
  1112  019E                     	;# 
  1113  019F                     	;# 
  1114  020C                     	;# 
  1115  020D                     	;# 
  1116  0211                     	;# 
  1117  0211                     	;# 
  1118  0212                     	;# 
  1119  0212                     	;# 
  1120  0213                     	;# 
  1121  0213                     	;# 
  1122  0214                     	;# 
  1123  0214                     	;# 
  1124  0215                     	;# 
  1125  0215                     	;# 
  1126  0215                     	;# 
  1127  0216                     	;# 
  1128  0216                     	;# 
  1129  0217                     	;# 
  1130  0217                     	;# 
  1131  0219                     	;# 
  1132  021A                     	;# 
  1133  021B                     	;# 
  1134  021C                     	;# 
  1135  021D                     	;# 
  1136  021E                     	;# 
  1137  021F                     	;# 
  1138  0291                     	;# 
  1139  0291                     	;# 
  1140  0292                     	;# 
  1141  0293                     	;# 
  1142  0294                     	;# 
  1143  0295                     	;# 
  1144  0295                     	;# 
  1145  0296                     	;# 
  1146  0298                     	;# 
  1147  0298                     	;# 
  1148  0299                     	;# 
  1149  029A                     	;# 
  1150  029B                     	;# 
  1151  029C                     	;# 
  1152  029C                     	;# 
  1153  029D                     	;# 
  1154  029E                     	;# 
  1155  029E                     	;# 
  1156  0311                     	;# 
  1157  0311                     	;# 
  1158  0312                     	;# 
  1159  0313                     	;# 
  1160  0318                     	;# 
  1161  0318                     	;# 
  1162  0319                     	;# 
  1163  031A                     	;# 
  1164  0394                     	;# 
  1165  0395                     	;# 
  1166  0396                     	;# 
  1167  039A                     	;# 
  1168  039C                     	;# 
  1169  039D                     	;# 
  1170  039E                     	;# 
  1171  039F                     	;# 
  1172  0415                     	;# 
  1173  0416                     	;# 
  1174  0417                     	;# 
  1175  041C                     	;# 
  1176  041D                     	;# 
  1177  041E                     	;# 
  1178  0FE4                     	;# 
  1179  0FE5                     	;# 
  1180  0FE6                     	;# 
  1181  0FE7                     	;# 
  1182  0FE8                     	;# 
  1183  0FE9                     	;# 
  1184  0FEA                     	;# 
  1185  0FEB                     	;# 
  1186  0FED                     	;# 
  1187  0FEE                     	;# 
  1188  0FEF                     	;# 
  1189  0000                     	;# 
  1190  0001                     	;# 
  1191  0002                     	;# 
  1192  0003                     	;# 
  1193  0004                     	;# 
  1194  0005                     	;# 
  1195  0006                     	;# 
  1196  0007                     	;# 
  1197  0008                     	;# 
  1198  0009                     	;# 
  1199  000A                     	;# 
  1200  000B                     	;# 
  1201  000C                     	;# 
  1202  000D                     	;# 
  1203  0011                     	;# 
  1204  0012                     	;# 
  1205  0013                     	;# 
  1206  0014                     	;# 
  1207  0015                     	;# 
  1208  0016                     	;# 
  1209  0016                     	;# 
  1210  0017                     	;# 
  1211  0018                     	;# 
  1212  0019                     	;# 
  1213  001A                     	;# 
  1214  001B                     	;# 
  1215  001C                     	;# 
  1216  001E                     	;# 
  1217  001F                     	;# 
  1218  008C                     	;# 
  1219  008D                     	;# 
  1220  0091                     	;# 
  1221  0092                     	;# 
  1222  0093                     	;# 
  1223  0094                     	;# 
  1224  0095                     	;# 
  1225  0096                     	;# 
  1226  0097                     	;# 
  1227  0098                     	;# 
  1228  0099                     	;# 
  1229  009A                     	;# 
  1230  009B                     	;# 
  1231  009B                     	;# 
  1232  009C                     	;# 
  1233  009D                     	;# 
  1234  009E                     	;# 
  1235  010C                     	;# 
  1236  010D                     	;# 
  1237  0111                     	;# 
  1238  0112                     	;# 
  1239  0113                     	;# 
  1240  0114                     	;# 
  1241  0115                     	;# 
  1242  0116                     	;# 
  1243  0117                     	;# 
  1244  0118                     	;# 
  1245  0119                     	;# 
  1246  011A                     	;# 
  1247  011B                     	;# 
  1248  011D                     	;# 
  1249  011E                     	;# 
  1250  018C                     	;# 
  1251  018D                     	;# 
  1252  0191                     	;# 
  1253  0191                     	;# 
  1254  0192                     	;# 
  1255  0193                     	;# 
  1256  0193                     	;# 
  1257  0193                     	;# 
  1258  0194                     	;# 
  1259  0195                     	;# 
  1260  0196                     	;# 
  1261  0199                     	;# 
  1262  019A                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019C                     	;# 
  1268  019C                     	;# 
  1269  019D                     	;# 
  1270  019E                     	;# 
  1271  019F                     	;# 
  1272  020C                     	;# 
  1273  020D                     	;# 
  1274  0211                     	;# 
  1275  0211                     	;# 
  1276  0212                     	;# 
  1277  0212                     	;# 
  1278  0213                     	;# 
  1279  0213                     	;# 
  1280  0214                     	;# 
  1281  0214                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0215                     	;# 
  1285  0216                     	;# 
  1286  0216                     	;# 
  1287  0217                     	;# 
  1288  0217                     	;# 
  1289  0219                     	;# 
  1290  021A                     	;# 
  1291  021B                     	;# 
  1292  021C                     	;# 
  1293  021D                     	;# 
  1294  021E                     	;# 
  1295  021F                     	;# 
  1296  0291                     	;# 
  1297  0291                     	;# 
  1298  0292                     	;# 
  1299  0293                     	;# 
  1300  0294                     	;# 
  1301  0295                     	;# 
  1302  0295                     	;# 
  1303  0296                     	;# 
  1304  0298                     	;# 
  1305  0298                     	;# 
  1306  0299                     	;# 
  1307  029A                     	;# 
  1308  029B                     	;# 
  1309  029C                     	;# 
  1310  029C                     	;# 
  1311  029D                     	;# 
  1312  029E                     	;# 
  1313  029E                     	;# 
  1314  0311                     	;# 
  1315  0311                     	;# 
  1316  0312                     	;# 
  1317  0313                     	;# 
  1318  0318                     	;# 
  1319  0318                     	;# 
  1320  0319                     	;# 
  1321  031A                     	;# 
  1322  0394                     	;# 
  1323  0395                     	;# 
  1324  0396                     	;# 
  1325  039A                     	;# 
  1326  039C                     	;# 
  1327  039D                     	;# 
  1328  039E                     	;# 
  1329  039F                     	;# 
  1330  0415                     	;# 
  1331  0416                     	;# 
  1332  0417                     	;# 
  1333  041C                     	;# 
  1334  041D                     	;# 
  1335  041E                     	;# 
  1336  0FE4                     	;# 
  1337  0FE5                     	;# 
  1338  0FE6                     	;# 
  1339  0FE7                     	;# 
  1340  0FE8                     	;# 
  1341  0FE9                     	;# 
  1342  0FEA                     	;# 
  1343  0FEB                     	;# 
  1344  0FED                     	;# 
  1345  0FEE                     	;# 
  1346  0FEF                     	;# 
  1347  0000                     	;# 
  1348  0001                     	;# 
  1349  0002                     	;# 
  1350  0003                     	;# 
  1351  0004                     	;# 
  1352  0005                     	;# 
  1353  0006                     	;# 
  1354  0007                     	;# 
  1355  0008                     	;# 
  1356  0009                     	;# 
  1357  000A                     	;# 
  1358  000B                     	;# 
  1359  000C                     	;# 
  1360  000D                     	;# 
  1361  0011                     	;# 
  1362  0012                     	;# 
  1363  0013                     	;# 
  1364  0014                     	;# 
  1365  0015                     	;# 
  1366  0016                     	;# 
  1367  0016                     	;# 
  1368  0017                     	;# 
  1369  0018                     	;# 
  1370  0019                     	;# 
  1371  001A                     	;# 
  1372  001B                     	;# 
  1373  001C                     	;# 
  1374  001E                     	;# 
  1375  001F                     	;# 
  1376  008C                     	;# 
  1377  008D                     	;# 
  1378  0091                     	;# 
  1379  0092                     	;# 
  1380  0093                     	;# 
  1381  0094                     	;# 
  1382  0095                     	;# 
  1383  0096                     	;# 
  1384  0097                     	;# 
  1385  0098                     	;# 
  1386  0099                     	;# 
  1387  009A                     	;# 
  1388  009B                     	;# 
  1389  009B                     	;# 
  1390  009C                     	;# 
  1391  009D                     	;# 
  1392  009E                     	;# 
  1393  010C                     	;# 
  1394  010D                     	;# 
  1395  0111                     	;# 
  1396  0112                     	;# 
  1397  0113                     	;# 
  1398  0114                     	;# 
  1399  0115                     	;# 
  1400  0116                     	;# 
  1401  0117                     	;# 
  1402  0118                     	;# 
  1403  0119                     	;# 
  1404  011A                     	;# 
  1405  011B                     	;# 
  1406  011D                     	;# 
  1407  011E                     	;# 
  1408  018C                     	;# 
  1409  018D                     	;# 
  1410  0191                     	;# 
  1411  0191                     	;# 
  1412  0192                     	;# 
  1413  0193                     	;# 
  1414  0193                     	;# 
  1415  0193                     	;# 
  1416  0194                     	;# 
  1417  0195                     	;# 
  1418  0196                     	;# 
  1419  0199                     	;# 
  1420  019A                     	;# 
  1421  019B                     	;# 
  1422  019B                     	;# 
  1423  019B                     	;# 
  1424  019B                     	;# 
  1425  019C                     	;# 
  1426  019C                     	;# 
  1427  019D                     	;# 
  1428  019E                     	;# 
  1429  019F                     	;# 
  1430  020C                     	;# 
  1431  020D                     	;# 
  1432  0211                     	;# 
  1433  0211                     	;# 
  1434  0212                     	;# 
  1435  0212                     	;# 
  1436  0213                     	;# 
  1437  0213                     	;# 
  1438  0214                     	;# 
  1439  0214                     	;# 
  1440  0215                     	;# 
  1441  0215                     	;# 
  1442  0215                     	;# 
  1443  0216                     	;# 
  1444  0216                     	;# 
  1445  0217                     	;# 
  1446  0217                     	;# 
  1447  0219                     	;# 
  1448  021A                     	;# 
  1449  021B                     	;# 
  1450  021C                     	;# 
  1451  021D                     	;# 
  1452  021E                     	;# 
  1453  021F                     	;# 
  1454  0291                     	;# 
  1455  0291                     	;# 
  1456  0292                     	;# 
  1457  0293                     	;# 
  1458  0294                     	;# 
  1459  0295                     	;# 
  1460  0295                     	;# 
  1461  0296                     	;# 
  1462  0298                     	;# 
  1463  0298                     	;# 
  1464  0299                     	;# 
  1465  029A                     	;# 
  1466  029B                     	;# 
  1467  029C                     	;# 
  1468  029C                     	;# 
  1469  029D                     	;# 
  1470  029E                     	;# 
  1471  029E                     	;# 
  1472  0311                     	;# 
  1473  0311                     	;# 
  1474  0312                     	;# 
  1475  0313                     	;# 
  1476  0318                     	;# 
  1477  0318                     	;# 
  1478  0319                     	;# 
  1479  031A                     	;# 
  1480  0394                     	;# 
  1481  0395                     	;# 
  1482  0396                     	;# 
  1483  039A                     	;# 
  1484  039C                     	;# 
  1485  039D                     	;# 
  1486  039E                     	;# 
  1487  039F                     	;# 
  1488  0415                     	;# 
  1489  0416                     	;# 
  1490  0417                     	;# 
  1491  041C                     	;# 
  1492  041D                     	;# 
  1493  041E                     	;# 
  1494  0FE4                     	;# 
  1495  0FE5                     	;# 
  1496  0FE6                     	;# 
  1497  0FE7                     	;# 
  1498  0FE8                     	;# 
  1499  0FE9                     	;# 
  1500  0FEA                     	;# 
  1501  0FEB                     	;# 
  1502  0FED                     	;# 
  1503  0FEE                     	;# 
  1504  0FEF                     	;# 
  1505  0000                     	;# 
  1506  0001                     	;# 
  1507  0002                     	;# 
  1508  0003                     	;# 
  1509  0004                     	;# 
  1510  0005                     	;# 
  1511  0006                     	;# 
  1512  0007                     	;# 
  1513  0008                     	;# 
  1514  0009                     	;# 
  1515  000A                     	;# 
  1516  000B                     	;# 
  1517  000C                     	;# 
  1518  000D                     	;# 
  1519  0011                     	;# 
  1520  0012                     	;# 
  1521  0013                     	;# 
  1522  0014                     	;# 
  1523  0015                     	;# 
  1524  0016                     	;# 
  1525  0016                     	;# 
  1526  0017                     	;# 
  1527  0018                     	;# 
  1528  0019                     	;# 
  1529  001A                     	;# 
  1530  001B                     	;# 
  1531  001C                     	;# 
  1532  001E                     	;# 
  1533  001F                     	;# 
  1534  008C                     	;# 
  1535  008D                     	;# 
  1536  0091                     	;# 
  1537  0092                     	;# 
  1538  0093                     	;# 
  1539  0094                     	;# 
  1540  0095                     	;# 
  1541  0096                     	;# 
  1542  0097                     	;# 
  1543  0098                     	;# 
  1544  0099                     	;# 
  1545  009A                     	;# 
  1546  009B                     	;# 
  1547  009B                     	;# 
  1548  009C                     	;# 
  1549  009D                     	;# 
  1550  009E                     	;# 
  1551  010C                     	;# 
  1552  010D                     	;# 
  1553  0111                     	;# 
  1554  0112                     	;# 
  1555  0113                     	;# 
  1556  0114                     	;# 
  1557  0115                     	;# 
  1558  0116                     	;# 
  1559  0117                     	;# 
  1560  0118                     	;# 
  1561  0119                     	;# 
  1562  011A                     	;# 
  1563  011B                     	;# 
  1564  011D                     	;# 
  1565  011E                     	;# 
  1566  018C                     	;# 
  1567  018D                     	;# 
  1568  0191                     	;# 
  1569  0191                     	;# 
  1570  0192                     	;# 
  1571  0193                     	;# 
  1572  0193                     	;# 
  1573  0193                     	;# 
  1574  0194                     	;# 
  1575  0195                     	;# 
  1576  0196                     	;# 
  1577  0199                     	;# 
  1578  019A                     	;# 
  1579  019B                     	;# 
  1580  019B                     	;# 
  1581  019B                     	;# 
  1582  019B                     	;# 
  1583  019C                     	;# 
  1584  019C                     	;# 
  1585  019D                     	;# 
  1586  019E                     	;# 
  1587  019F                     	;# 
  1588  020C                     	;# 
  1589  020D                     	;# 
  1590  0211                     	;# 
  1591  0211                     	;# 
  1592  0212                     	;# 
  1593  0212                     	;# 
  1594  0213                     	;# 
  1595  0213                     	;# 
  1596  0214                     	;# 
  1597  0214                     	;# 
  1598  0215                     	;# 
  1599  0215                     	;# 
  1600  0215                     	;# 
  1601  0216                     	;# 
  1602  0216                     	;# 
  1603  0217                     	;# 
  1604  0217                     	;# 
  1605  0219                     	;# 
  1606  021A                     	;# 
  1607  021B                     	;# 
  1608  021C                     	;# 
  1609  021D                     	;# 
  1610  021E                     	;# 
  1611  021F                     	;# 
  1612  0291                     	;# 
  1613  0291                     	;# 
  1614  0292                     	;# 
  1615  0293                     	;# 
  1616  0294                     	;# 
  1617  0295                     	;# 
  1618  0295                     	;# 
  1619  0296                     	;# 
  1620  0298                     	;# 
  1621  0298                     	;# 
  1622  0299                     	;# 
  1623  029A                     	;# 
  1624  029B                     	;# 
  1625  029C                     	;# 
  1626  029C                     	;# 
  1627  029D                     	;# 
  1628  029E                     	;# 
  1629  029E                     	;# 
  1630  0311                     	;# 
  1631  0311                     	;# 
  1632  0312                     	;# 
  1633  0313                     	;# 
  1634  0318                     	;# 
  1635  0318                     	;# 
  1636  0319                     	;# 
  1637  031A                     	;# 
  1638  0394                     	;# 
  1639  0395                     	;# 
  1640  0396                     	;# 
  1641  039A                     	;# 
  1642  039C                     	;# 
  1643  039D                     	;# 
  1644  039E                     	;# 
  1645  039F                     	;# 
  1646  0415                     	;# 
  1647  0416                     	;# 
  1648  0417                     	;# 
  1649  041C                     	;# 
  1650  041D                     	;# 
  1651  041E                     	;# 
  1652  0FE4                     	;# 
  1653  0FE5                     	;# 
  1654  0FE6                     	;# 
  1655  0FE7                     	;# 
  1656  0FE8                     	;# 
  1657  0FE9                     	;# 
  1658  0FEA                     	;# 
  1659  0FEB                     	;# 
  1660  0FED                     	;# 
  1661  0FEE                     	;# 
  1662  0FEF                     	;# 
  1663  0000                     	;# 
  1664  0001                     	;# 
  1665  0002                     	;# 
  1666  0003                     	;# 
  1667  0004                     	;# 
  1668  0005                     	;# 
  1669  0006                     	;# 
  1670  0007                     	;# 
  1671  0008                     	;# 
  1672  0009                     	;# 
  1673  000A                     	;# 
  1674  000B                     	;# 
  1675  000C                     	;# 
  1676  000D                     	;# 
  1677  0011                     	;# 
  1678  0012                     	;# 
  1679  0013                     	;# 
  1680  0014                     	;# 
  1681  0015                     	;# 
  1682  0016                     	;# 
  1683  0016                     	;# 
  1684  0017                     	;# 
  1685  0018                     	;# 
  1686  0019                     	;# 
  1687  001A                     	;# 
  1688  001B                     	;# 
  1689  001C                     	;# 
  1690  001E                     	;# 
  1691  001F                     	;# 
  1692  008C                     	;# 
  1693  008D                     	;# 
  1694  0091                     	;# 
  1695  0092                     	;# 
  1696  0093                     	;# 
  1697  0094                     	;# 
  1698  0095                     	;# 
  1699  0096                     	;# 
  1700  0097                     	;# 
  1701  0098                     	;# 
  1702  0099                     	;# 
  1703  009A                     	;# 
  1704  009B                     	;# 
  1705  009B                     	;# 
  1706  009C                     	;# 
  1707  009D                     	;# 
  1708  009E                     	;# 
  1709  010C                     	;# 
  1710  010D                     	;# 
  1711  0111                     	;# 
  1712  0112                     	;# 
  1713  0113                     	;# 
  1714  0114                     	;# 
  1715  0115                     	;# 
  1716  0116                     	;# 
  1717  0117                     	;# 
  1718  0118                     	;# 
  1719  0119                     	;# 
  1720  011A                     	;# 
  1721  011B                     	;# 
  1722  011D                     	;# 
  1723  011E                     	;# 
  1724  018C                     	;# 
  1725  018D                     	;# 
  1726  0191                     	;# 
  1727  0191                     	;# 
  1728  0192                     	;# 
  1729  0193                     	;# 
  1730  0193                     	;# 
  1731  0193                     	;# 
  1732  0194                     	;# 
  1733  0195                     	;# 
  1734  0196                     	;# 
  1735  0199                     	;# 
  1736  019A                     	;# 
  1737  019B                     	;# 
  1738  019B                     	;# 
  1739  019B                     	;# 
  1740  019B                     	;# 
  1741  019C                     	;# 
  1742  019C                     	;# 
  1743  019D                     	;# 
  1744  019E                     	;# 
  1745  019F                     	;# 
  1746  020C                     	;# 
  1747  020D                     	;# 
  1748  0211                     	;# 
  1749  0211                     	;# 
  1750  0212                     	;# 
  1751  0212                     	;# 
  1752  0213                     	;# 
  1753  0213                     	;# 
  1754  0214                     	;# 
  1755  0214                     	;# 
  1756  0215                     	;# 
  1757  0215                     	;# 
  1758  0215                     	;# 
  1759  0216                     	;# 
  1760  0216                     	;# 
  1761  0217                     	;# 
  1762  0217                     	;# 
  1763  0219                     	;# 
  1764  021A                     	;# 
  1765  021B                     	;# 
  1766  021C                     	;# 
  1767  021D                     	;# 
  1768  021E                     	;# 
  1769  021F                     	;# 
  1770  0291                     	;# 
  1771  0291                     	;# 
  1772  0292                     	;# 
  1773  0293                     	;# 
  1774  0294                     	;# 
  1775  0295                     	;# 
  1776  0295                     	;# 
  1777  0296                     	;# 
  1778  0298                     	;# 
  1779  0298                     	;# 
  1780  0299                     	;# 
  1781  029A                     	;# 
  1782  029B                     	;# 
  1783  029C                     	;# 
  1784  029C                     	;# 
  1785  029D                     	;# 
  1786  029E                     	;# 
  1787  029E                     	;# 
  1788  0311                     	;# 
  1789  0311                     	;# 
  1790  0312                     	;# 
  1791  0313                     	;# 
  1792  0318                     	;# 
  1793  0318                     	;# 
  1794  0319                     	;# 
  1795  031A                     	;# 
  1796  0394                     	;# 
  1797  0395                     	;# 
  1798  0396                     	;# 
  1799  039A                     	;# 
  1800  039C                     	;# 
  1801  039D                     	;# 
  1802  039E                     	;# 
  1803  039F                     	;# 
  1804  0415                     	;# 
  1805  0416                     	;# 
  1806  0417                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  0FE4                     	;# 
  1811  0FE5                     	;# 
  1812  0FE6                     	;# 
  1813  0FE7                     	;# 
  1814  0FE8                     	;# 
  1815  0FE9                     	;# 
  1816  0FEA                     	;# 
  1817  0FEB                     	;# 
  1818  0FED                     	;# 
  1819  0FEE                     	;# 
  1820  0FEF                     	;# 
  1821  0016                     _TMR1	set	22
  1822  001F                     _CPSCON1	set	31
  1823  001E                     _CPSCON0	set	30
  1824  0015                     _TMR0	set	21
  1825  0019                     _T1GCON	set	25
  1826  0018                     _T1CON	set	24
  1827  001B                     _PR2	set	27
  1828  001A                     _TMR2	set	26
  1829  001C                     _T2CON	set	28
  1830  000D                     _PORTB	set	13
  1831  000C                     _PORTA	set	12
  1832  0099                     _TMR4IF	set	153
  1833  0088                     _TMR1IF	set	136
  1834  005F                     _GIE	set	95
  1835  005E                     _PEIE	set	94
  1836  00A1                     _BCL2IF	set	161
  1837  00A0                     _SSP2IF	set	160
  1838  0093                     _BCL1IF	set	147
  1839  008B                     _SSP1IF	set	139
  1840  00C0                     _TMR1ON	set	192
  1841  0095                     _OPTION_REG	set	149
  1842  008D                     _TRISB	set	141
  1843  008C                     _TRISA	set	140
  1844  0099                     _OSCCON	set	153
  1845  0499                     _TMR4IE	set	1177
  1846  0488                     _TMR1IE	set	1160
  1847  04A1                     _BCL2IE	set	1185
  1848  04A0                     _SSP2IE	set	1184
  1849  0493                     _BCL1IE	set	1171
  1850  048B                     _SSP1IE	set	1163
  1851  011E                     _APFCON1	set	286
  1852  011D                     _APFCON0	set	285
  1853  0863                     _LATA3	set	2147
  1854  0864                     _LATA4	set	2148
  1855  0866                     _LATA6	set	2150
  1856  018D                     _ANSELB	set	397
  1857  018C                     _ANSELA	set	396
  1858  021C                     _SSP2STATbits	set	540
  1859  0219                     _SSP2BUF	set	537
  1860  021E                     _SSP2CON2	set	542
  1861  021B                     _SSP2MSK	set	539
  1862  021E                     _SSP2CON2bits	set	542
  1863  021D                     _SSP2CON1bits	set	541
  1864  021A                     _SSP2ADD	set	538
  1865  021C                     _SSP2STAT	set	540
  1866  021D                     _SSP2CON1	set	541
  1867  0214                     _SSP1STATbits	set	532
  1868  0211                     _SSP1BUF	set	529
  1869  0216                     _SSP1CON2	set	534
  1870  0213                     _SSP1MSK	set	531
  1871  0216                     _SSP1CON2bits	set	534
  1872  0215                     _SSP1CON1bits	set	533
  1873  0212                     _SSP1ADD	set	530
  1874  0214                     _SSP1STAT	set	532
  1875  0215                     _SSP1CON1	set	533
  1876  0298                     _CCPR2L	set	664
  1877  029E                     _CCPTMRS	set	670
  1878  029A                     _CCP2CON	set	666
  1879  0417                     _T4CON	set	1047
  1880  0415                     _TMR4	set	1045
  1881  0416                     _PR4	set	1046
  1882                           
  1883                           	psect	stringtext
  1884  067A                     __pstringtext:	
  1885  067A                     STR_5:	
  1886  067A  3425               	retlw	37	;'%'
  1887  067B  3430               	retlw	48	;'0'
  1888  067C  3438               	retlw	56	;'8'
  1889  067D  346C               	retlw	108	;'l'
  1890  067E  3458               	retlw	88	;'X'
  1891  067F  3420               	retlw	32	;' '
  1892  0680  3400               	retlw	0
  1893  0681                     STR_8:	
  1894  0681  3420               	retlw	32	;' '
  1895  0682  3425               	retlw	37	;'%'
  1896  0683  3430               	retlw	48	;'0'
  1897  0684  3438               	retlw	56	;'8'
  1898  0685  344C               	retlw	76	;'L'
  1899  0686  3458               	retlw	88	;'X'
  1900  0687  3400               	retlw	0
  1901  0688                     STR_6:	
  1902  0688  3420               	retlw	32	;' '
  1903  0689  3425               	retlw	37	;'%'
  1904  068A  3430               	retlw	48	;'0'
  1905  068B  3432               	retlw	50	;'2'
  1906  068C  3458               	retlw	88	;'X'
  1907  068D  3400               	retlw	0
  1908  068E                     STR_7:	
  1909  068E  3420               	retlw	32	;' '
  1910  068F  3425               	retlw	37	;'%'
  1911  0690  3430               	retlw	48	;'0'
  1912  0691  3434               	retlw	52	;'4'
  1913  0692  3458               	retlw	88	;'X'
  1914  0693  3400               	retlw	0
  1915  0694                     STR_1:	
  1916  0694  3443               	retlw	67	;'C'
  1917  0695  3450               	retlw	80	;'P'
  1918  0696  3453               	retlw	83	;'S'
  1919  0697  3431               	retlw	49	;'1'
  1920  0698  3400               	retlw	0
  1921  0699                     STR_2:	
  1922  0699  3443               	retlw	67	;'C'
  1923  069A  3450               	retlw	80	;'P'
  1924  069B  3453               	retlw	83	;'S'
  1925  069C  3432               	retlw	50	;'2'
  1926  069D  3400               	retlw	0
  1927  069E                     STR_3:	
  1928  069E  3443               	retlw	67	;'C'
  1929  069F  3450               	retlw	80	;'P'
  1930  06A0  3453               	retlw	83	;'S'
  1931  06A1  3433               	retlw	51	;'3'
  1932  06A2  3400               	retlw	0
  1933  06A3                     STR_4:	
  1934  06A3  340D               	retlw	13
  1935  06A4  3400               	retlw	0
  1936                           
  1937                           ; #config settings
  1938  0000                     
  1939                           	psect	cinit
  1940  002F                     start_initialization:	
  1941  002F                     __initialization:	
  1942                           
  1943                           ; Clear objects allocated to COMMON
  1944  002F  01FA               	clrf	__pbssCOMMON& (0+127)
  1945  0030  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1946                           
  1947                           ; Clear objects allocated to BANK0
  1948  0031  3063               	movlw	low __pbssBANK0
  1949  0032  0084               	movwf	4
  1950  0033  3000               	movlw	high __pbssBANK0
  1951  0034  0085               	movwf	5
  1952  0035  300C               	movlw	12
  1953  0036  318F  27B1  3180   	fcall	clear_ram0
  1954                           
  1955                           ; Clear objects allocated to BANK1
  1956  0039  30A0               	movlw	low __pbssBANK1
  1957  003A  0084               	movwf	4
  1958  003B  3000               	movlw	high __pbssBANK1
  1959  003C  0085               	movwf	5
  1960  003D  302C               	movlw	44
  1961  003E  318F  27B1         	fcall	clear_ram0
  1962  0040                     end_of_initialization:	
  1963                           ;End of C runtime variable initialization code
  1964                           
  1965  0040                     __end_of__initialization:	
  1966  0040  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1967  0041  0020               	movlb	0
  1968  0042  3182  2A6E         	ljmp	_main	;jump to C main() function
  1969                           
  1970                           	psect	bssCOMMON
  1971  007A                     __pbssCOMMON:	
  1972  007A                     CPSx_Read@channel:	
  1973  007A                     	ds	1
  1974  007B                     _outptr:	
  1975  007B                     	ds	1
  1976                           
  1977                           	psect	bssBANK0
  1978  0063                     __pbssBANK0:	
  1979  0063                     _CPS_Data:	
  1980  0063                     	ds	3
  1981  0066                     _xfunc_in:	
  1982  0066                     	ds	2
  1983  0068                     Handler@count:	
  1984  0068                     	ds	2
  1985  006A                     _xfunc_out:	
  1986  006A                     	ds	2
  1987  006C                     _VoltageReg:	
  1988  006C                     	ds	2
  1989  006E                     _ConfigReg:	
  1990  006E                     	ds	1
  1991                           
  1992                           	psect	bssBANK1
  1993  00A0                     __pbssBANK1:	
  1994  00A0                     _MemoryReg:	
  1995  00A0                     	ds	3
  1996  00A3                     _CPS_PreData:	
  1997  00A3                     	ds	3
  1998  00A6                     _I2C2_Config:	
  1999  00A6                     	ds	19
  2000  00B9                     _I2C1_Config:	
  2001  00B9                     	ds	19
  2002                           
  2003                           	psect	clrtext
  2004  0FB1                     clear_ram0:	
  2005                           ;	Called with FSR0 containing the base address, and
  2006                           ;	WREG with the size to clear
  2007                           
  2008  0FB1  0064               	clrwdt	;clear the watchdog before getting into this loop
  2009  0FB2                     clrloop0:	
  2010  0FB2  0180               	clrf	0	;clear RAM location pointed to by FSR
  2011  0FB3  3101               	addfsr 0,1
  2012  0FB4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2013  0FB5  2FB2               	goto	clrloop0	;have we reached the end yet?
  2014  0FB6  3400               	retlw	0	;all done for this memory range, return
  2015                           
  2016                           	psect	cstackCOMMON
  2017  0070                     __pcstackCOMMON:	
  2018  0070                     ?_Basic_Init:	
  2019  0070                     ?_LCD_Init:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022  0070                     ?_Timer1_Init:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025  0070                     ?_mTouch_Init:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028  0070                     ?_Timer4_Init:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031  0070                     ?_Buzer_Init:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034  0070                     ?_DAC_Initialize:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037  0070                     ?_Timer4_Handler:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040  0070                     ??_Timer4_Handler:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043  0070                     ?_CPSx_Read:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046  0070                     ??_CPSx_Read:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049  0070                     ?_Timer1_Handler:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052  0070                     ??_Timer1_Handler:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0070                     ?_I2C_CommonInterrupt:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0070                     ?_LCD_DisplayClear:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0070                     ?_main:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0070                     ?_Handler:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0070                     ?_LCD_WriteData:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0070                     ?_xputc:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0070                     ?_xputs:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0070                     ?_I2C1_PinInit:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0070                     ?_I2C1_Interrupt:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0070                     ??_I2C1_Interrupt:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0070                     ?_I2C2_PinInit:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0070                     ?_I2C2_Interrupt:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0070                     ??_I2C2_Interrupt:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0070                     ?_mTouch_PortInit:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097                           
  2098                           ; 1 bytes @ 0x0
  2099  0070                     	ds	1
  2100  0071                     ??_I2C_CommonInterrupt:	
  2101  0071                     ??_Handler:	
  2102                           ; 1 bytes @ 0x1
  2103                           
  2104                           
  2105                           ; 1 bytes @ 0x1
  2106  0071                     	ds	1
  2107  0072                     ??_Basic_Init:	
  2108  0072                     ??_Timer1_Init:	
  2109                           ; 1 bytes @ 0x2
  2110                           
  2111  0072                     ??_Timer4_Init:	
  2112                           ; 1 bytes @ 0x2
  2113                           
  2114  0072                     ??_Buzer_Init:	
  2115                           ; 1 bytes @ 0x2
  2116                           
  2117  0072                     ??_LCD_WriteData:	
  2118                           ; 1 bytes @ 0x2
  2119                           
  2120  0072                     ??_I2C1_PinInit:	
  2121                           ; 1 bytes @ 0x2
  2122                           
  2123  0072                     ?_I2C1_Transmit:	
  2124                           ; 1 bytes @ 0x2
  2125                           
  2126  0072                     ??_I2C2_PinInit:	
  2127                           ; 1 bytes @ 0x2
  2128                           
  2129  0072                     ?_I2C2_Transmit:	
  2130                           ; 1 bytes @ 0x2
  2131                           
  2132  0072                     ??_mTouch_PortInit:	
  2133                           ; 1 bytes @ 0x2
  2134                           
  2135  0072                     ?___wmul:	
  2136                           ; 1 bytes @ 0x2
  2137                           
  2138  0072                     ?___lldiv:	
  2139                           ; 2 bytes @ 0x2
  2140                           
  2141  0072                     ?___llmod:	
  2142                           ; 4 bytes @ 0x2
  2143                           
  2144  0072                     I2C1_Transmit@pData:	
  2145                           ; 4 bytes @ 0x2
  2146                           
  2147  0072                     I2C2_Transmit@pData:	
  2148                           ; 1 bytes @ 0x2
  2149                           
  2150  0072                     ___wmul@multiplier:	
  2151                           ; 1 bytes @ 0x2
  2152                           
  2153  0072                     ___lldiv@divisor:	
  2154                           ; 2 bytes @ 0x2
  2155                           
  2156  0072                     ___llmod@divisor:	
  2157                           ; 4 bytes @ 0x2
  2158                           
  2159                           
  2160                           ; 4 bytes @ 0x2
  2161  0072                     	ds	1
  2162  0073                     ??_mTouch_Init:	
  2163  0073                     ?_I2C1_Setting:	
  2164                           ; 1 bytes @ 0x3
  2165                           
  2166  0073                     ?_I2C2_Setting:	
  2167                           ; 1 bytes @ 0x3
  2168                           
  2169  0073                     I2C1_Setting@mode:	
  2170                           ; 1 bytes @ 0x3
  2171                           
  2172  0073                     I2C1_Transmit@size:	
  2173                           ; 1 bytes @ 0x3
  2174                           
  2175  0073                     I2C2_Setting@mode:	
  2176                           ; 1 bytes @ 0x3
  2177                           
  2178  0073                     I2C2_Transmit@size:	
  2179                           ; 1 bytes @ 0x3
  2180                           
  2181                           
  2182                           ; 1 bytes @ 0x3
  2183  0073                     	ds	1
  2184  0074                     ??_I2C1_Transmit:	
  2185  0074                     ??_I2C2_Transmit:	
  2186                           ; 1 bytes @ 0x4
  2187                           
  2188  0074                     LCD_WriteData@point:	
  2189                           ; 1 bytes @ 0x4
  2190                           
  2191  0074                     I2C1_Setting@Speed:	
  2192                           ; 1 bytes @ 0x4
  2193                           
  2194  0074                     I2C2_Setting@Speed:	
  2195                           ; 1 bytes @ 0x4
  2196                           
  2197  0074                     ___wmul@multiplicand:	
  2198                           ; 1 bytes @ 0x4
  2199                           
  2200                           
  2201                           ; 2 bytes @ 0x4
  2202  0074                     	ds	1
  2203  0075                     ?_LCD_Put:	
  2204  0075                     ?_LCD_CursorPosition:	
  2205                           ; 1 bytes @ 0x5
  2206                           
  2207  0075                     ??_LCD_DisplayClear:	
  2208                           ; 1 bytes @ 0x5
  2209                           
  2210  0075                     ??_I2C1_Setting:	
  2211                           ; 1 bytes @ 0x5
  2212                           
  2213  0075                     ??_I2C2_Setting:	
  2214                           ; 1 bytes @ 0x5
  2215                           
  2216  0075                     LCD_Put@word:	
  2217                           ; 1 bytes @ 0x5
  2218                           
  2219  0075                     LCD_CursorPosition@ty:	
  2220                           ; 1 bytes @ 0x5
  2221                           
  2222                           
  2223                           ; 1 bytes @ 0x5
  2224  0075                     	ds	1
  2225  0076                     ??_LCD_Init:	
  2226  0076                     ??_LCD_Put:	
  2227                           ; 1 bytes @ 0x6
  2228                           
  2229  0076                     ??_LCD_CursorPosition:	
  2230                           ; 1 bytes @ 0x6
  2231                           
  2232  0076                     ??_xputc:	
  2233                           ; 1 bytes @ 0x6
  2234                           
  2235  0076                     ??___wmul:	
  2236                           ; 1 bytes @ 0x6
  2237                           
  2238  0076                     I2C1_Setting@address:	
  2239                           ; 1 bytes @ 0x6
  2240                           
  2241  0076                     I2C1_Transmit@address:	
  2242                           ; 1 bytes @ 0x6
  2243                           
  2244  0076                     I2C2_Setting@address:	
  2245                           ; 1 bytes @ 0x6
  2246                           
  2247  0076                     I2C2_Transmit@address:	
  2248                           ; 1 bytes @ 0x6
  2249                           
  2250  0076                     ___wmul@product:	
  2251                           ; 1 bytes @ 0x6
  2252                           
  2253  0076                     ___lldiv@dividend:	
  2254                           ; 2 bytes @ 0x6
  2255                           
  2256  0076                     ___llmod@dividend:	
  2257                           ; 4 bytes @ 0x6
  2258                           
  2259                           
  2260                           ; 4 bytes @ 0x6
  2261  0076                     	ds	1
  2262  0077                     ?_I2C_Init:	
  2263  0077                     LCD_CursorPosition@tx:	
  2264                           ; 1 bytes @ 0x7
  2265                           
  2266  0077                     xputc@c:	
  2267                           ; 1 bytes @ 0x7
  2268                           
  2269  0077                     I2C1_Transmit@i:	
  2270                           ; 1 bytes @ 0x7
  2271                           
  2272  0077                     I2C2_Transmit@i:	
  2273                           ; 1 bytes @ 0x7
  2274                           
  2275  0077                     I2C_Init@address:	
  2276                           ; 1 bytes @ 0x7
  2277                           
  2278                           
  2279                           ; 1 bytes @ 0x7
  2280  0077                     	ds	1
  2281  0078                     ??_xputs:	
  2282  0078                     I2C1_Transmit@i_416:	
  2283                           ; 1 bytes @ 0x8
  2284                           
  2285  0078                     I2C2_Transmit@i_560:	
  2286                           ; 1 bytes @ 0x8
  2287                           
  2288  0078                     I2C_Init@mode:	
  2289                           ; 1 bytes @ 0x8
  2290                           
  2291                           
  2292                           ; 1 bytes @ 0x8
  2293  0078                     	ds	1
  2294  0079                     xputs@str:	
  2295  0079                     I2C1_Transmit@result:	
  2296                           ; 1 bytes @ 0x9
  2297                           
  2298  0079                     I2C2_Transmit@result:	
  2299                           ; 1 bytes @ 0x9
  2300                           
  2301  0079                     I2C_Init@Speed:	
  2302                           ; 1 bytes @ 0x9
  2303                           
  2304                           
  2305                           ; 1 bytes @ 0x9
  2306  0079                     	ds	1
  2307                           
  2308                           	psect	cstackBANK0
  2309  0020                     __pcstackBANK0:	
  2310  0020                     ??_I2C_Init:	
  2311  0020                     ?_I2C_Transmit:	
  2312                           ; 1 bytes @ 0x0
  2313                           
  2314  0020                     ??___lldiv:	
  2315                           ; 1 bytes @ 0x0
  2316                           
  2317  0020                     ??___llmod:	
  2318                           ; 1 bytes @ 0x0
  2319                           
  2320  0020                     I2C_Transmit@address:	
  2321                           ; 1 bytes @ 0x0
  2322                           
  2323                           
  2324                           ; 1 bytes @ 0x0
  2325  0020                     	ds	1
  2326  0021                     I2C_Transmit@pData:	
  2327  0021                     ___llmod@counter:	
  2328                           ; 1 bytes @ 0x1
  2329                           
  2330  0021                     ___lldiv@quotient:	
  2331                           ; 1 bytes @ 0x1
  2332                           
  2333                           
  2334                           ; 4 bytes @ 0x1
  2335  0021                     	ds	1
  2336  0022                     I2C_Init@I2Cx:	
  2337  0022                     I2C_Transmit@size:	
  2338                           ; 1 bytes @ 0x2
  2339                           
  2340                           
  2341                           ; 1 bytes @ 0x2
  2342  0022                     	ds	1
  2343  0023                     ??_I2C_Transmit:	
  2344                           
  2345                           ; 1 bytes @ 0x3
  2346  0023                     	ds	2
  2347  0025                     ___lldiv@counter:	
  2348                           
  2349                           ; 1 bytes @ 0x5
  2350  0025                     	ds	1
  2351  0026                     ?_xvprintf:	
  2352  0026                     I2C_Transmit@I2Cx:	
  2353                           ; 1 bytes @ 0x6
  2354                           
  2355  0026                     xvprintf@fmt:	
  2356                           ; 1 bytes @ 0x6
  2357                           
  2358                           
  2359                           ; 2 bytes @ 0x6
  2360  0026                     	ds	1
  2361  0027                     I2C_Transmit@result:	
  2362                           
  2363                           ; 1 bytes @ 0x7
  2364  0027                     	ds	1
  2365  0028                     ??_DAC_Initialize:	
  2366  0028                     xvprintf@arp:	
  2367                           ; 1 bytes @ 0x8
  2368                           
  2369                           
  2370                           ; 1 bytes @ 0x8
  2371  0028                     	ds	1
  2372  0029                     ??_xvprintf:	
  2373                           
  2374                           ; 1 bytes @ 0x9
  2375  0029                     	ds	4
  2376  002D                     xvprintf@s:	
  2377                           
  2378                           ; 16 bytes @ 0xD
  2379  002D                     	ds	16
  2380  003D                     _xvprintf$199:	
  2381                           
  2382                           ; 4 bytes @ 0x1D
  2383  003D                     	ds	4
  2384  0041                     _xvprintf$200:	
  2385                           
  2386                           ; 2 bytes @ 0x21
  2387  0041                     	ds	2
  2388  0043                     _xvprintf$201:	
  2389                           
  2390                           ; 2 bytes @ 0x23
  2391  0043                     	ds	2
  2392  0045                     xvprintf@p:	
  2393                           
  2394                           ; 1 bytes @ 0x25
  2395  0045                     	ds	1
  2396  0046                     xvprintf@r:	
  2397                           
  2398                           ; 2 bytes @ 0x26
  2399  0046                     	ds	2
  2400  0048                     xvprintf@w:	
  2401                           
  2402                           ; 2 bytes @ 0x28
  2403  0048                     	ds	2
  2404  004A                     xvprintf@j:	
  2405                           
  2406                           ; 2 bytes @ 0x2A
  2407  004A                     	ds	2
  2408  004C                     xvprintf@v:	
  2409                           
  2410                           ; 4 bytes @ 0x2C
  2411  004C                     	ds	4
  2412  0050                     xvprintf@f:	
  2413                           
  2414                           ; 2 bytes @ 0x30
  2415  0050                     	ds	2
  2416  0052                     xvprintf@i:	
  2417                           
  2418                           ; 2 bytes @ 0x32
  2419  0052                     	ds	2
  2420  0054                     xvprintf@d:	
  2421                           
  2422                           ; 1 bytes @ 0x34
  2423  0054                     	ds	1
  2424  0055                     xvprintf@c:	
  2425                           
  2426                           ; 1 bytes @ 0x35
  2427  0055                     	ds	1
  2428  0056                     ?_xprintf:	
  2429  0056                     xprintf@fmt:	
  2430                           ; 1 bytes @ 0x36
  2431                           
  2432                           
  2433                           ; 2 bytes @ 0x36
  2434  0056                     	ds	6
  2435  005C                     ??_xprintf:	
  2436                           
  2437                           ; 1 bytes @ 0x3C
  2438  005C                     	ds	1
  2439  005D                     xprintf@arp:	
  2440                           
  2441                           ; 1 bytes @ 0x3D
  2442  005D                     	ds	1
  2443  005E                     ??_main:	
  2444                           
  2445                           ; 1 bytes @ 0x3E
  2446  005E                     	ds	5
  2447                           
  2448                           	psect	maintext
  2449  026E                     __pmaintext:	
  2450 ;;
  2451 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  2452 ;;
  2453 ;; *************** function _main *****************
  2454 ;; Defined at:
  2455 ;;		line 13 in file "main.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      char 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : B1F/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2469 ;;      Params:         0       0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0
  2471 ;;      Temps:          0       5       0       0       0       0
  2472 ;;      Totals:         0       5       0       0       0       0
  2473 ;;Total ram usage:        5 bytes
  2474 ;; Hardware stack levels required when called:    9
  2475 ;; This function calls:
  2476 ;;		_Basic_Init
  2477 ;;		_Buzer_Init
  2478 ;;		_DAC_Initialize
  2479 ;;		_LCD_CursorPosition
  2480 ;;		_LCD_Init
  2481 ;;		_Timer1_Init
  2482 ;;		_Timer4_Init
  2483 ;;		_mTouch_Init
  2484 ;;		_xprintf
  2485 ;; This function is called by:
  2486 ;;		Startup code after reset
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           
  2491                           ;psect for function _main
  2492  026E                     _main:	
  2493                           
  2494                           ;main.c: 15: Basic_Init();
  2495                           
  2496                           ;incstack = 0
  2497                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2498  026E  3187  27A9  3182   	fcall	_Basic_Init
  2499                           
  2500                           ;main.c: 17: LATA6 = 1;
  2501  0271  0022               	movlb	2	; select bank2
  2502  0272  170C               	bsf	12,6	;volatile
  2503                           
  2504                           ;main.c: 19: LCD_Init();
  2505  0273  3183  23F8  3182   	fcall	_LCD_Init
  2506                           
  2507                           ;main.c: 20: xfunc_out = (void(*)(unsigned char))(LCD_Put);
  2508  0276  30AB               	movlw	low _LCD_Put
  2509  0277  0020               	movlb	0	; select bank0
  2510  0278  00EA               	movwf	_xfunc_out
  2511  0279  300F               	movlw	high _LCD_Put
  2512  027A  00EB               	movwf	_xfunc_out+1
  2513                           
  2514                           ;main.c: 22: Timer1_Init();
  2515  027B  3187  277B  3182   	fcall	_Timer1_Init
  2516                           
  2517                           ;main.c: 23: TMR1ON = 1;;
  2518  027E  0020               	movlb	0	; select bank0
  2519  027F  1418               	bsf	24,0	;volatile
  2520                           
  2521                           ;main.c: 25: mTouch_Init();
  2522  0280  3187  27D1  3182   	fcall	_mTouch_Init
  2523                           
  2524                           ;main.c: 27: Timer4_Init();
  2525  0283  3187  27E4  3182   	fcall	_Timer4_Init
  2526                           
  2527                           ;main.c: 29: Buzer_Init();
  2528  0286  3187  271F  3182   	fcall	_Buzer_Init
  2529                           
  2530                           ;main.c: 31: DAC_Initialize();
  2531  0289  3187  2741  3182   	fcall	_DAC_Initialize
  2532  028C  2A9A               	goto	l3919
  2533  028D                     l3923:	
  2534                           
  2535                           ;main.c: 38: xprintf("CPS1");
  2536  028D  3094               	movlw	low (STR_1| (0+32768))
  2537  028E  0020               	movlb	0	; select bank0
  2538  028F  00D6               	movwf	xprintf@fmt
  2539  0290  3086               	movlw	high (STR_1| (0+32768))
  2540  0291  2A96               	goto	L1
  2541  0292                     l3927:	
  2542                           
  2543                           ;main.c: 40: xprintf("CPS2");
  2544  0292  3099               	movlw	low (STR_2| (0+32768))
  2545  0293  0020               	movlb	0	; select bank0
  2546  0294  00D6               	movwf	xprintf@fmt
  2547  0295  3086               	movlw	high (STR_2| (0+32768))
  2548  0296                     L1:	
  2549  0296  00D7               	movwf	xprintf@fmt+1
  2550  0297  318F  27F0  3182   	fcall	_xprintf
  2551  029A                     l3919:	
  2552                           ;main.c: 33: while(1)
  2553                           
  2554                           
  2555                           ;main.c: 34: {
  2556                           ;main.c: 36: LCD_CursorPosition(0,0);
  2557  029A  01F5               	clrf	LCD_CursorPosition@ty
  2558  029B  3000               	movlw	0
  2559  029C  3187  2794  3182   	fcall	_LCD_CursorPosition
  2560                           
  2561                           ;main.c: 37: if((CPS_PreData[0]-CPS_Data[0])>150)
  2562  029F  0020               	movlb	0	; select bank0
  2563  02A0  0863               	movf	_CPS_Data,w
  2564  02A1  00DE               	movwf	??_main
  2565  02A2  01DF               	clrf	??_main+1
  2566  02A3  09DE               	comf	??_main,f
  2567  02A4  09DF               	comf	??_main+1,f
  2568  02A5  0ADE               	incf	??_main,f
  2569  02A6  1903               	skipnz
  2570  02A7  0ADF               	incf	??_main+1,f
  2571  02A8  0021               	movlb	1	; select bank1
  2572  02A9  0823               	movf	_CPS_PreData^(0+128),w
  2573  02AA  0020               	movlb	0	; select bank0
  2574  02AB  075E               	addwf	??_main,w
  2575  02AC  00E0               	movwf	??_main+2
  2576  02AD  085F               	movf	??_main+1,w
  2577  02AE  1803               	skipnc
  2578  02AF  0A5F               	incf	??_main+1,w
  2579  02B0  00E1               	movwf	??_main+3
  2580  02B1  0861               	movf	??_main+3,w
  2581  02B2  3A80               	xorlw	128
  2582  02B3  00E2               	movwf	??_main+4
  2583  02B4  3080               	movlw	128
  2584  02B5  0262               	subwf	??_main+4,w
  2585  02B6  1D03               	skipz
  2586  02B7  2ABA               	goto	u3955
  2587  02B8  3097               	movlw	151
  2588  02B9  0260               	subwf	??_main+2,w
  2589  02BA                     u3955:	
  2590  02BA  1803               	btfsc	3,0
  2591  02BB  2A8D               	goto	l3923
  2592                           
  2593                           ;main.c: 39: else if((CPS_PreData[1]-CPS_Data[1])>150)
  2594  02BC  0020               	movlb	0	; select bank0
  2595  02BD  0864               	movf	_CPS_Data+1,w
  2596  02BE  00DE               	movwf	??_main
  2597  02BF  01DF               	clrf	??_main+1
  2598  02C0  09DE               	comf	??_main,f
  2599  02C1  09DF               	comf	??_main+1,f
  2600  02C2  0ADE               	incf	??_main,f
  2601  02C3  1903               	skipnz
  2602  02C4  0ADF               	incf	??_main+1,f
  2603  02C5  0021               	movlb	1	; select bank1
  2604  02C6  0824               	movf	(_CPS_PreData^(0+128)+1),w
  2605  02C7  0020               	movlb	0	; select bank0
  2606  02C8  075E               	addwf	??_main,w
  2607  02C9  00E0               	movwf	??_main+2
  2608  02CA  085F               	movf	??_main+1,w
  2609  02CB  1803               	skipnc
  2610  02CC  0A5F               	incf	??_main+1,w
  2611  02CD  00E1               	movwf	??_main+3
  2612  02CE  0861               	movf	??_main+3,w
  2613  02CF  3A80               	xorlw	128
  2614  02D0  00E2               	movwf	??_main+4
  2615  02D1  3080               	movlw	128
  2616  02D2  0262               	subwf	??_main+4,w
  2617  02D3  1D03               	skipz
  2618  02D4  2AD7               	goto	u3965
  2619  02D5  3097               	movlw	151
  2620  02D6  0260               	subwf	??_main+2,w
  2621  02D7                     u3965:	
  2622  02D7  1803               	btfsc	3,0
  2623  02D8  2A92               	goto	l3927
  2624                           
  2625                           ;main.c: 41: else if((CPS_PreData[2]-CPS_Data[2])>150)
  2626  02D9  0020               	movlb	0	; select bank0
  2627  02DA  0865               	movf	_CPS_Data+2,w
  2628  02DB  00DE               	movwf	??_main
  2629  02DC  01DF               	clrf	??_main+1
  2630  02DD  09DE               	comf	??_main,f
  2631  02DE  09DF               	comf	??_main+1,f
  2632  02DF  0ADE               	incf	??_main,f
  2633  02E0  1903               	skipnz
  2634  02E1  0ADF               	incf	??_main+1,f
  2635  02E2  0021               	movlb	1	; select bank1
  2636  02E3  0825               	movf	(_CPS_PreData^(0+128)+2),w
  2637  02E4  0020               	movlb	0	; select bank0
  2638  02E5  075E               	addwf	??_main,w
  2639  02E6  00E0               	movwf	??_main+2
  2640  02E7  085F               	movf	??_main+1,w
  2641  02E8  1803               	skipnc
  2642  02E9  0A5F               	incf	??_main+1,w
  2643  02EA  00E1               	movwf	??_main+3
  2644  02EB  0861               	movf	??_main+3,w
  2645  02EC  3A80               	xorlw	128
  2646  02ED  00E2               	movwf	??_main+4
  2647  02EE  3080               	movlw	128
  2648  02EF  0262               	subwf	??_main+4,w
  2649  02F0  1D03               	skipz
  2650  02F1  2AF4               	goto	u3975
  2651  02F2  3097               	movlw	151
  2652  02F3  0260               	subwf	??_main+2,w
  2653  02F4                     u3975:	
  2654  02F4  1C03               	skipc
  2655  02F5  2A9A               	goto	l3919
  2656                           
  2657                           ;main.c: 42: xprintf("CPS3");
  2658  02F6  309E               	movlw	low (STR_3| (0+32768))
  2659  02F7  0020               	movlb	0	; select bank0
  2660  02F8  00D6               	movwf	xprintf@fmt
  2661  02F9  3086               	movlw	high (STR_3| (0+32768))
  2662  02FA  2A96               	goto	L1
  2663  02FB                     __end_of_main:	
  2664                           ;main.c: 43: }
  2665                           ;main.c: 45: return 0;
  2666                           ;	Return value of _main is never used
  2667                           
  2668                           
  2669                           	psect	text1
  2670  0FF0                     __ptext1:	
  2671 ;; *************** function _xprintf *****************
  2672 ;; Defined at:
  2673 ;;		line 165 in file "xprintf.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  fmt             2   54[BANK0 ] PTR const unsigned char 
  2676 ;;		 -> STR_8(7), STR_7(6), STR_6(6), STR_5(7), 
  2677 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  arp             1   61[BANK0 ] PTR void [1]
  2680 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2690 ;;      Params:         0       6       0       0       0       0
  2691 ;;      Locals:         0       1       0       0       0       0
  2692 ;;      Temps:          0       1       0       0       0       0
  2693 ;;      Totals:         0       8       0       0       0       0
  2694 ;;Total ram usage:        8 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    8
  2697 ;; This function calls:
  2698 ;;		_xvprintf
  2699 ;; This function is called by:
  2700 ;;		_main
  2701 ;;		_put_dump
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           
  2706                           ;psect for function _xprintf
  2707  0FF0                     _xprintf:	
  2708                           
  2709                           ;xprintf.c: 170: va_list arp;
  2710                           ;xprintf.c: 173: *arp = __va_start();
  2711                           
  2712                           ;incstack = 0
  2713                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2714  0FF0  3058               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  2715  0FF1  0020               	movlb	0	; select bank0
  2716  0FF2  00DC               	movwf	??_xprintf
  2717  0FF3  085C               	movf	??_xprintf,w
  2718  0FF4  00DD               	movwf	xprintf@arp
  2719                           
  2720                           ;xprintf.c: 174: xvprintf(fmt, arp);
  2721  0FF5  0857               	movf	xprintf@fmt+1,w
  2722  0FF6  00A7               	movwf	xvprintf@fmt+1
  2723  0FF7  0856               	movf	xprintf@fmt,w
  2724  0FF8  00A6               	movwf	xvprintf@fmt
  2725  0FF9  305D               	movlw	(low (xprintf@arp| 0))& (0+255)
  2726  0FFA  00DC               	movwf	??_xprintf
  2727  0FFB  085C               	movf	??_xprintf,w
  2728  0FFC  00A8               	movwf	xvprintf@arp
  2729  0FFD  3180  2044         	fcall	_xvprintf
  2730  0FFF  0008               	return
  2731  1000                     __end_of_xprintf:	
  2732                           
  2733                           	psect	text2
  2734  0044                     __ptext2:	
  2735 ;; *************** function _xvprintf *****************
  2736 ;; Defined at:
  2737 ;;		line 88 in file "xprintf.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  fmt             2    6[BANK0 ] PTR const unsigned char 
  2740 ;;		 -> STR_8(7), STR_7(6), STR_6(6), STR_5(7), 
  2741 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  2742 ;;  arp             1    8[BANK0 ] PTR PTR void 
  2743 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  s              16   13[BANK0 ] unsigned char [16]
  2746 ;;  v               4   44[BANK0 ] unsigned long 
  2747 ;;  i               2   50[BANK0 ] unsigned int 
  2748 ;;  f               2   48[BANK0 ] unsigned int 
  2749 ;;  j               2   42[BANK0 ] unsigned int 
  2750 ;;  w               2   40[BANK0 ] unsigned int 
  2751 ;;  r               2   38[BANK0 ] unsigned int 
  2752 ;;  c               1   53[BANK0 ] unsigned char 
  2753 ;;  d               1   52[BANK0 ] unsigned char 
  2754 ;;  p               1   37[BANK0 ] PTR unsigned char 
  2755 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2765 ;;      Params:         0       3       0       0       0       0
  2766 ;;      Locals:         0      41       0       0       0       0
  2767 ;;      Temps:          0       4       0       0       0       0
  2768 ;;      Totals:         0      48       0       0       0       0
  2769 ;;Total ram usage:       48 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:    7
  2772 ;; This function calls:
  2773 ;;		___lldiv
  2774 ;;		___llmod
  2775 ;;		___wmul
  2776 ;;		_xputc
  2777 ;;		_xputs
  2778 ;; This function is called by:
  2779 ;;		_xprintf
  2780 ;;		_xsprintf
  2781 ;;		_xfprintf
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           
  2786                           ;psect for function _xvprintf
  2787  0044                     _xvprintf:	
  2788  0044                     l146:	
  2789                           ;incstack = 0
  2790                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2791                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  2792                           ;xprintf.c: 94: unsigned long v;
  2793                           ;xprintf.c: 95: char s[16], c, d, *p;
  2794                           ;xprintf.c: 98: for (;;) {
  2795                           
  2796                           
  2797                           ;xprintf.c: 99: c = *fmt++;
  2798  0044  0020               	movlb	0	; select bank0
  2799  0045  0826               	movf	xvprintf@fmt,w
  2800  0046  0084               	movwf	4
  2801  0047  0827               	movf	xvprintf@fmt+1,w
  2802  0048  0085               	movwf	5
  2803  0049  0800               	movf	0,w	;code access
  2804  004A  00A9               	movwf	??_xvprintf
  2805  004B  0829               	movf	??_xvprintf,w
  2806  004C  00D5               	movwf	xvprintf@c
  2807  004D  3001               	movlw	1
  2808  004E  07A6               	addwf	xvprintf@fmt,f
  2809  004F  3000               	movlw	0
  2810  0050  3DA7               	addwfc	xvprintf@fmt+1,f
  2811                           
  2812                           ;xprintf.c: 100: if (!c) break;
  2813  0051  0855               	movf	xvprintf@c,w
  2814  0052  1903               	btfsc	3,2
  2815  0053  0008               	return
  2816                           
  2817                           ;xprintf.c: 101: if (c != '%') {
  2818  0054  3025               	movlw	37
  2819  0055  0655               	xorwf	xvprintf@c,w
  2820  0056  1903               	btfsc	3,2
  2821  0057  285D               	goto	l3709
  2822                           
  2823                           ;xprintf.c: 102: xputc(c); continue;
  2824  0058  0855               	movf	xvprintf@c,w
  2825  0059  3186  264D  3180   	fcall	_xputc
  2826  005C  2844               	goto	l146
  2827  005D                     l3709:	
  2828                           
  2829                           ;xprintf.c: 103: }
  2830                           ;xprintf.c: 104: f = 0;
  2831  005D  0020               	movlb	0	; select bank0
  2832  005E  01D0               	clrf	xvprintf@f
  2833  005F  01D1               	clrf	xvprintf@f+1
  2834                           
  2835                           ;xprintf.c: 105: c = *fmt++;
  2836  0060  0826               	movf	xvprintf@fmt,w
  2837  0061  0084               	movwf	4
  2838  0062  0827               	movf	xvprintf@fmt+1,w
  2839  0063  0085               	movwf	5
  2840  0064  0800               	movf	0,w	;code access
  2841  0065  00A9               	movwf	??_xvprintf
  2842  0066  0829               	movf	??_xvprintf,w
  2843  0067  00D5               	movwf	xvprintf@c
  2844  0068  3001               	movlw	1
  2845  0069  07A6               	addwf	xvprintf@fmt,f
  2846  006A  3000               	movlw	0
  2847  006B  3DA7               	addwfc	xvprintf@fmt+1,f
  2848                           
  2849                           ;xprintf.c: 106: if (c == '0') {
  2850  006C  3030               	movlw	48
  2851  006D  0655               	xorwf	xvprintf@c,w
  2852  006E  1D03               	btfss	3,2
  2853  006F  2872               	goto	l3723
  2854                           
  2855                           ;xprintf.c: 107: f = 1; c = *fmt++;
  2856  0070  3001               	movlw	1
  2857  0071  2877               	goto	L7
  2858  0072                     l3723:	
  2859                           ;xprintf.c: 108: } else {
  2860                           
  2861                           
  2862                           ;xprintf.c: 109: if (c == '-') {
  2863  0072  302D               	movlw	45
  2864  0073  0655               	xorwf	xvprintf@c,w
  2865  0074  1D03               	btfss	3,2
  2866  0075  2886               	goto	l3731
  2867                           
  2868                           ;xprintf.c: 110: f = 2; c = *fmt++;
  2869  0076  3002               	movlw	2
  2870  0077                     L7:	
  2871  0077  00D0               	movwf	xvprintf@f
  2872  0078  3000               	movlw	0
  2873  0079  00D1               	movwf	xvprintf@f+1
  2874  007A  0826               	movf	xvprintf@fmt,w
  2875  007B  0084               	movwf	4
  2876  007C  0827               	movf	xvprintf@fmt+1,w
  2877  007D  0085               	movwf	5
  2878  007E  0800               	movf	0,w	;code access
  2879  007F  00A9               	movwf	??_xvprintf
  2880  0080  0829               	movf	??_xvprintf,w
  2881  0081  00D5               	movwf	xvprintf@c
  2882  0082  3001               	movlw	1
  2883  0083  07A6               	addwf	xvprintf@fmt,f
  2884  0084  3000               	movlw	0
  2885  0085  3DA7               	addwfc	xvprintf@fmt+1,f
  2886  0086                     l3731:	
  2887                           
  2888                           ;xprintf.c: 111: }
  2889                           ;xprintf.c: 112: }
  2890                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  2891  0086  01C8               	clrf	xvprintf@w
  2892  0087  01C9               	clrf	xvprintf@w+1
  2893  0088  28B0               	goto	l3739
  2894  0089                     l3733:	
  2895                           
  2896                           ;xprintf.c: 114: w = w * 10 + c - '0';
  2897  0089  0855               	movf	xvprintf@c,w
  2898  008A  00A9               	movwf	??_xvprintf
  2899  008B  01AA               	clrf	??_xvprintf+1
  2900  008C  0849               	movf	xvprintf@w+1,w
  2901  008D  00F3               	movwf	___wmul@multiplier+1
  2902  008E  0848               	movf	xvprintf@w,w
  2903  008F  00F2               	movwf	___wmul@multiplier
  2904  0090  300A               	movlw	10
  2905  0091  00F4               	movwf	___wmul@multiplicand
  2906  0092  3000               	movlw	0
  2907  0093  00F5               	movwf	___wmul@multiplicand+1
  2908  0094  3187  2760  3180   	fcall	___wmul
  2909  0097  0020               	movlb	0	; select bank0
  2910  0098  0829               	movf	??_xvprintf,w
  2911  0099  0772               	addwf	?___wmul,w
  2912  009A  00AB               	movwf	??_xvprintf+2
  2913  009B  082A               	movf	??_xvprintf+1,w
  2914  009C  3D73               	addwfc	?___wmul+1,w
  2915  009D  00AC               	movwf	??_xvprintf+3
  2916  009E  082B               	movf	??_xvprintf+2,w
  2917  009F  3ED0               	addlw	208
  2918  00A0  00C8               	movwf	xvprintf@w
  2919  00A1  30FF               	movlw	255
  2920  00A2  3D2C               	addwfc	??_xvprintf+3,w
  2921  00A3  00C9               	movwf	xvprintf@w+1
  2922  00A4  0826               	movf	xvprintf@fmt,w
  2923  00A5  0084               	movwf	4
  2924  00A6  0827               	movf	xvprintf@fmt+1,w
  2925  00A7  0085               	movwf	5
  2926  00A8  0800               	movf	0,w	;code access
  2927  00A9  00A9               	movwf	??_xvprintf
  2928  00AA  0829               	movf	??_xvprintf,w
  2929  00AB  00D5               	movwf	xvprintf@c
  2930  00AC  3001               	movlw	1
  2931  00AD  07A6               	addwf	xvprintf@fmt,f
  2932  00AE  3000               	movlw	0
  2933  00AF  3DA7               	addwfc	xvprintf@fmt+1,f
  2934  00B0                     l3739:	
  2935  00B0  3030               	movlw	48
  2936  00B1  0255               	subwf	xvprintf@c,w
  2937  00B2  1C03               	skipc
  2938  00B3  28B8               	goto	l3743
  2939  00B4  303A               	movlw	58
  2940  00B5  0255               	subwf	xvprintf@c,w
  2941  00B6  1C03               	skipc
  2942  00B7  2889               	goto	l3733
  2943  00B8                     l3743:	
  2944                           
  2945                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  2946  00B8  306C               	movlw	108
  2947  00B9  0655               	xorwf	xvprintf@c,w
  2948  00BA  1903               	btfsc	3,2
  2949  00BB  28C0               	goto	l161
  2950  00BC  304C               	movlw	76
  2951  00BD  0655               	xorwf	xvprintf@c,w
  2952  00BE  1D03               	btfss	3,2
  2953  00BF  28CD               	goto	l3751
  2954  00C0                     l161:	
  2955                           
  2956                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  2957  00C0  1550               	bsf	xvprintf@f,2
  2958  00C1  0826               	movf	xvprintf@fmt,w
  2959  00C2  0084               	movwf	4
  2960  00C3  0827               	movf	xvprintf@fmt+1,w
  2961  00C4  0085               	movwf	5
  2962  00C5  0800               	movf	0,w	;code access
  2963  00C6  00A9               	movwf	??_xvprintf
  2964  00C7  0829               	movf	??_xvprintf,w
  2965  00C8  00D5               	movwf	xvprintf@c
  2966  00C9  3001               	movlw	1
  2967  00CA  07A6               	addwf	xvprintf@fmt,f
  2968  00CB  3000               	movlw	0
  2969  00CC  3DA7               	addwfc	xvprintf@fmt+1,f
  2970  00CD                     l3751:	
  2971                           
  2972                           ;xprintf.c: 117: }
  2973                           ;xprintf.c: 118: if (!c) break;
  2974  00CD  0855               	movf	xvprintf@c,w
  2975  00CE  1903               	btfsc	3,2
  2976  00CF  0008               	return
  2977                           
  2978                           ;xprintf.c: 119: d = c;
  2979  00D0  0855               	movf	xvprintf@c,w
  2980  00D1  00A9               	movwf	??_xvprintf
  2981  00D2  0829               	movf	??_xvprintf,w
  2982  00D3  00D4               	movwf	xvprintf@d
  2983                           
  2984                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  2985  00D4  3061               	movlw	97
  2986  00D5  0254               	subwf	xvprintf@d,w
  2987  00D6  1C03               	skipc
  2988  00D7  2943               	goto	l3793
  2989  00D8  3020               	movlw	32
  2990  00D9  02D4               	subwf	xvprintf@d,f
  2991                           
  2992                           ;xprintf.c: 121: switch (d) {
  2993  00DA  2943               	goto	l3793
  2994  00DB                     l3759:	
  2995                           ;xprintf.c: 122: case 'S' :
  2996                           
  2997                           
  2998                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  2999  00DB  0828               	movf	xvprintf@arp,w
  3000  00DC  0086               	movwf	6
  3001  00DD  0187               	clrf	7
  3002  00DE  3F40               	moviw [0]fsr1
  3003  00DF  0084               	movwf	4
  3004  00E0  0185               	clrf	5
  3005  00E1  0A81               	incf	1,f
  3006  00E2  0800               	movf	0,w
  3007  00E3  00A9               	movwf	??_xvprintf
  3008  00E4  0829               	movf	??_xvprintf,w
  3009  00E5  00C5               	movwf	xvprintf@p
  3010                           
  3011                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  3012  00E6  01CA               	clrf	xvprintf@j
  3013  00E7  01CB               	clrf	xvprintf@j+1
  3014  00E8                     l3765:	
  3015  00E8  084A               	movf	xvprintf@j,w
  3016  00E9  0745               	addwf	xvprintf@p,w
  3017  00EA  00A9               	movwf	??_xvprintf
  3018  00EB  0829               	movf	??_xvprintf,w
  3019  00EC  0086               	movwf	6
  3020  00ED  0187               	clrf	7
  3021  00EE  0801               	movf	1,w
  3022  00EF  1903               	btfsc	3,2
  3023  00F0  28FA               	goto	l3769
  3024  00F1  3001               	movlw	1
  3025  00F2  07CA               	addwf	xvprintf@j,f
  3026  00F3  3000               	movlw	0
  3027  00F4  3DCB               	addwfc	xvprintf@j+1,f
  3028  00F5  28E8               	goto	l3765
  3029  00F6                     l3767:	
  3030                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  3031                           
  3032  00F6  3020               	movlw	32
  3033  00F7  3186  264D  3180   	fcall	_xputc
  3034  00FA                     l3769:	
  3035  00FA  0020               	movlb	0	; select bank0
  3036  00FB  18D0               	btfsc	xvprintf@f,1
  3037  00FC  290C               	goto	l3773
  3038  00FD  084B               	movf	xvprintf@j+1,w
  3039  00FE  00AA               	movwf	??_xvprintf+1
  3040  00FF  084A               	movf	xvprintf@j,w
  3041  0100  00A9               	movwf	??_xvprintf
  3042  0101  0ACA               	incf	xvprintf@j,f
  3043  0102  1903               	skipnz
  3044  0103  0ACB               	incf	xvprintf@j+1,f
  3045  0104  0849               	movf	xvprintf@w+1,w
  3046  0105  022A               	subwf	??_xvprintf+1,w
  3047  0106  1D03               	skipz
  3048  0107  290A               	goto	u3795
  3049  0108  0848               	movf	xvprintf@w,w
  3050  0109  0229               	subwf	??_xvprintf,w
  3051  010A                     u3795:	
  3052  010A  1C03               	skipc
  3053  010B  28F6               	goto	l3767
  3054  010C                     l3773:	
  3055                           
  3056                           ;xprintf.c: 126: xputs(p);
  3057  010C  0845               	movf	xvprintf@p,w
  3058  010D  3187  27BE  3180   	fcall	_xputs
  3059  0110                     l3777:	
  3060                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  3061                           
  3062  0110  0020               	movlb	0	; select bank0
  3063  0111  084B               	movf	xvprintf@j+1,w
  3064  0112  00AA               	movwf	??_xvprintf+1
  3065  0113  084A               	movf	xvprintf@j,w
  3066  0114  00A9               	movwf	??_xvprintf
  3067  0115  0ACA               	incf	xvprintf@j,f
  3068  0116  1903               	skipnz
  3069  0117  0ACB               	incf	xvprintf@j+1,f
  3070  0118  0849               	movf	xvprintf@w+1,w
  3071  0119  022A               	subwf	??_xvprintf+1,w
  3072  011A  1D03               	skipz
  3073  011B  291E               	goto	u3805
  3074  011C  0848               	movf	xvprintf@w,w
  3075  011D  0229               	subwf	??_xvprintf,w
  3076  011E                     u3805:	
  3077  011E  1803               	btfsc	3,0
  3078  011F  2844               	goto	l146
  3079  0120  3020               	movlw	32
  3080  0121  3186  264D  3180   	fcall	_xputc
  3081  0124  2910               	goto	l3777
  3082  0125                     l3779:	
  3083                           ;xprintf.c: 129: case 'C' :
  3084                           
  3085                           ;xprintf.c: 128: continue;
  3086                           
  3087                           
  3088                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  3089  0125  0828               	movf	xvprintf@arp,w
  3090  0126  0086               	movwf	6
  3091  0127  0187               	clrf	7
  3092  0128  0801               	movf	1,w
  3093  0129  0084               	movwf	4
  3094  012A  0185               	clrf	5
  3095  012B  3002               	movlw	2
  3096  012C  0781               	addwf	1,f
  3097  012D  0800               	movf	0,w
  3098  012E  3186  264D  3180   	fcall	_xputc
  3099  0131  2844               	goto	l146
  3100  0132                     l3781:	
  3101                           ;xprintf.c: 131: case 'B' :
  3102                           
  3103                           
  3104                           ;xprintf.c: 132: r = 2; break;
  3105  0132  3002               	movlw	2
  3106  0133  0020               	movlb	0	; select bank0
  3107  0134  293A               	goto	L4
  3108  0135                     l3783:	
  3109                           ;xprintf.c: 133: case 'O' :
  3110                           
  3111                           
  3112                           ;xprintf.c: 134: r = 8; break;
  3113  0135  3008               	movlw	8
  3114  0136  293A               	goto	L4
  3115  0137                     l3785:	
  3116                           ;xprintf.c: 135: case 'D' :
  3117                           
  3118                           
  3119                           ;xprintf.c: 136: case 'U' :
  3120                           ;xprintf.c: 137: r = 10; break;
  3121  0137  300A               	movlw	10
  3122  0138  293A               	goto	L4
  3123  0139                     l3787:	
  3124                           ;xprintf.c: 138: case 'X' :
  3125                           
  3126                           
  3127                           ;xprintf.c: 139: r = 16; break;
  3128  0139  3010               	movlw	16
  3129  013A                     L4:	
  3130  013A  00C6               	movwf	xvprintf@r
  3131  013B  3000               	movlw	0
  3132  013C  00C7               	movwf	xvprintf@r+1
  3133  013D  295B               	goto	l179
  3134  013E                     l3789:	
  3135                           ;xprintf.c: 140: default:
  3136                           
  3137                           
  3138                           ;xprintf.c: 141: xputc(c); continue;
  3139  013E  0855               	movf	xvprintf@c,w
  3140  013F  3186  264D  3180   	fcall	_xputc
  3141  0142  2844               	goto	l146
  3142  0143                     l3793:	
  3143                           ;xprintf.c: 142: }
  3144                           
  3145  0143  0020               	movlb	0	; select bank0
  3146  0144  0854               	movf	xvprintf@d,w
  3147                           
  3148                           ; Switch size 1, requested type "space"
  3149                           ; Number of cases is 7, Range of values is 66 to 88
  3150                           ; switch strategies available:
  3151                           ; Name         Instructions Cycles
  3152                           ; simple_byte           22    12 (average)
  3153                           ; direct_byte           55     9 (fixed)
  3154                           ; jumptable            263     9 (fixed)
  3155                           ;	Chosen strategy is simple_byte
  3156  0145  3A42               	xorlw	66	; case 66
  3157  0146  1903               	skipnz
  3158  0147  2932               	goto	l3781
  3159  0148  3A01               	xorlw	1	; case 67
  3160  0149  1903               	skipnz
  3161  014A  2925               	goto	l3779
  3162  014B  3A07               	xorlw	7	; case 68
  3163  014C  1903               	skipnz
  3164  014D  2937               	goto	l3785
  3165  014E  3A0B               	xorlw	11	; case 79
  3166  014F  1903               	skipnz
  3167  0150  2935               	goto	l3783
  3168  0151  3A1C               	xorlw	28	; case 83
  3169  0152  1903               	skipnz
  3170  0153  28DB               	goto	l3759
  3171  0154  3A06               	xorlw	6	; case 85
  3172  0155  1903               	skipnz
  3173  0156  2937               	goto	l3785
  3174  0157  3A0D               	xorlw	13	; case 88
  3175  0158  1903               	skipnz
  3176  0159  2939               	goto	l3787
  3177  015A  293E               	goto	l3789
  3178  015B                     l179:	
  3179                           
  3180                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  3181  015B  0020               	movlb	0	; select bank0
  3182  015C  1950               	btfsc	xvprintf@f,2
  3183  015D  2993               	goto	l3803
  3184  015E  3044               	movlw	68
  3185  015F  0654               	xorwf	xvprintf@d,w
  3186  0160  1903               	btfsc	3,2
  3187  0161  2975               	goto	l3799
  3188  0162  0828               	movf	xvprintf@arp,w
  3189  0163  0086               	movwf	6
  3190  0164  0187               	clrf	7
  3191  0165  0801               	movf	1,w
  3192  0166  0084               	movwf	4
  3193  0167  0185               	clrf	5
  3194  0168  3002               	movlw	2
  3195  0169  0781               	addwf	1,f
  3196  016A  3F00               	moviw [0]fsr0
  3197  016B  00A9               	movwf	??_xvprintf
  3198  016C  3F01               	moviw [1]fsr0
  3199  016D  00AA               	movwf	??_xvprintf+1
  3200  016E  0829               	movf	??_xvprintf,w
  3201  016F  00BD               	movwf	_xvprintf$199
  3202  0170  082A               	movf	??_xvprintf+1,w
  3203  0171  00BE               	movwf	_xvprintf$199+1
  3204  0172  01BF               	clrf	_xvprintf$199+2
  3205  0173  01C0               	clrf	_xvprintf$199+3
  3206  0174  298A               	goto	l3801
  3207  0175                     l3799:	
  3208  0175  0828               	movf	xvprintf@arp,w
  3209  0176  0086               	movwf	6
  3210  0177  0187               	clrf	7
  3211  0178  0801               	movf	1,w
  3212  0179  0084               	movwf	4
  3213  017A  0185               	clrf	5
  3214  017B  3002               	movlw	2
  3215  017C  0781               	addwf	1,f
  3216  017D  3F00               	moviw [0]fsr0
  3217  017E  00A9               	movwf	??_xvprintf
  3218  017F  3F01               	moviw [1]fsr0
  3219  0180  00AA               	movwf	??_xvprintf+1
  3220  0181  0829               	movf	??_xvprintf,w
  3221  0182  00BD               	movwf	_xvprintf$199
  3222  0183  082A               	movf	??_xvprintf+1,w
  3223  0184  00BE               	movwf	_xvprintf$199+1
  3224  0185  0D89               	rlf	9,f
  3225  0186  3B89               	subwfb	9,f
  3226  0187  0989               	comf	9,f
  3227  0188  00BF               	movwf	_xvprintf$199+2
  3228  0189  00C0               	movwf	_xvprintf$199+3
  3229  018A                     l3801:	
  3230  018A  0840               	movf	_xvprintf$199+3,w
  3231  018B  00CF               	movwf	xvprintf@v+3
  3232  018C  083F               	movf	_xvprintf$199+2,w
  3233  018D  00CE               	movwf	xvprintf@v+2
  3234  018E  083E               	movf	_xvprintf$199+1,w
  3235  018F  00CD               	movwf	xvprintf@v+1
  3236  0190  083D               	movf	_xvprintf$199,w
  3237  0191  00CC               	movwf	xvprintf@v
  3238  0192  29A3               	goto	l3805
  3239  0193                     l3803:	
  3240  0193  0828               	movf	xvprintf@arp,w
  3241  0194  0086               	movwf	6
  3242  0195  0187               	clrf	7
  3243  0196  0801               	movf	1,w
  3244  0197  0084               	movwf	4
  3245  0198  0185               	clrf	5
  3246  0199  3004               	movlw	4
  3247  019A  0781               	addwf	1,f
  3248  019B  3F00               	moviw [0]fsr0
  3249  019C  00CC               	movwf	xvprintf@v
  3250  019D  3F01               	moviw [1]fsr0
  3251  019E  00CD               	movwf	xvprintf@v+1
  3252  019F  3F02               	moviw [2]fsr0
  3253  01A0  00CE               	movwf	xvprintf@v+2
  3254  01A1  3F03               	moviw [3]fsr0
  3255  01A2  00CF               	movwf	xvprintf@v+3
  3256  01A3                     l3805:	
  3257                           
  3258                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  3259  01A3  3044               	movlw	68
  3260  01A4  0654               	xorwf	xvprintf@d,w
  3261  01A5  1903               	btfsc	3,2
  3262  01A6  1FCF               	btfss	xvprintf@v+3,7
  3263  01A7  29B4               	goto	l3811
  3264                           
  3265                           ;xprintf.c: 147: v = 0 - v;
  3266  01A8  09CC               	comf	xvprintf@v,f
  3267  01A9  09CD               	comf	xvprintf@v+1,f
  3268  01AA  09CE               	comf	xvprintf@v+2,f
  3269  01AB  09CF               	comf	xvprintf@v+3,f
  3270  01AC  0ACC               	incf	xvprintf@v,f
  3271  01AD  1903               	skipnz
  3272  01AE  0ACD               	incf	xvprintf@v+1,f
  3273  01AF  1903               	skipnz
  3274  01B0  0ACE               	incf	xvprintf@v+2,f
  3275  01B1  1903               	skipnz
  3276  01B2  0ACF               	incf	xvprintf@v+3,f
  3277                           
  3278                           ;xprintf.c: 148: f |= 8;
  3279  01B3  15D0               	bsf	xvprintf@f,3
  3280  01B4                     l3811:	
  3281                           
  3282                           ;xprintf.c: 149: }
  3283                           ;xprintf.c: 150: i = 0;
  3284  01B4  01D2               	clrf	xvprintf@i
  3285  01B5  01D3               	clrf	xvprintf@i+1
  3286  01B6                     l3813:	
  3287                           ;xprintf.c: 151: do {
  3288                           
  3289                           
  3290                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  3291  01B6  0846               	movf	xvprintf@r,w
  3292  01B7  00F2               	movwf	___llmod@divisor
  3293  01B8  0847               	movf	xvprintf@r+1,w
  3294  01B9  00F3               	movwf	___llmod@divisor+1
  3295  01BA  01F4               	clrf	___llmod@divisor+2
  3296  01BB  01F5               	clrf	___llmod@divisor+3
  3297  01BC  084F               	movf	xvprintf@v+3,w
  3298  01BD  00F9               	movwf	___llmod@dividend+3
  3299  01BE  084E               	movf	xvprintf@v+2,w
  3300  01BF  00F8               	movwf	___llmod@dividend+2
  3301  01C0  084D               	movf	xvprintf@v+1,w
  3302  01C1  00F7               	movwf	___llmod@dividend+1
  3303  01C2  084C               	movf	xvprintf@v,w
  3304  01C3  00F6               	movwf	___llmod@dividend
  3305  01C4  3185  255E  3180   	fcall	___llmod
  3306  01C7  0872               	movf	?___llmod,w
  3307  01C8  0020               	movlb	0	; select bank0
  3308  01C9  00A9               	movwf	??_xvprintf
  3309  01CA  0829               	movf	??_xvprintf,w
  3310  01CB  00D4               	movwf	xvprintf@d
  3311  01CC  0846               	movf	xvprintf@r,w
  3312  01CD  00F2               	movwf	___lldiv@divisor
  3313  01CE  0847               	movf	xvprintf@r+1,w
  3314  01CF  00F3               	movwf	___lldiv@divisor+1
  3315  01D0  01F4               	clrf	___lldiv@divisor+2
  3316  01D1  01F5               	clrf	___lldiv@divisor+3
  3317  01D2  084F               	movf	xvprintf@v+3,w
  3318  01D3  00F9               	movwf	___lldiv@dividend+3
  3319  01D4  084E               	movf	xvprintf@v+2,w
  3320  01D5  00F8               	movwf	___lldiv@dividend+2
  3321  01D6  084D               	movf	xvprintf@v+1,w
  3322  01D7  00F7               	movwf	___lldiv@dividend+1
  3323  01D8  084C               	movf	xvprintf@v,w
  3324  01D9  00F6               	movwf	___lldiv@dividend
  3325  01DA  3185  250B  3180   	fcall	___lldiv
  3326  01DD  0875               	movf	?___lldiv+3,w
  3327  01DE  0020               	movlb	0	; select bank0
  3328  01DF  00CF               	movwf	xvprintf@v+3
  3329  01E0  0874               	movf	?___lldiv+2,w
  3330  01E1  00CE               	movwf	xvprintf@v+2
  3331  01E2  0873               	movf	?___lldiv+1,w
  3332  01E3  00CD               	movwf	xvprintf@v+1
  3333  01E4  0872               	movf	?___lldiv,w
  3334  01E5  00CC               	movwf	xvprintf@v
  3335                           
  3336                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  3337  01E6  300A               	movlw	10
  3338  01E7  0254               	subwf	xvprintf@d,w
  3339  01E8  1C03               	skipc
  3340  01E9  29F8               	goto	l3827
  3341  01EA  3078               	movlw	120
  3342  01EB  0655               	xorwf	xvprintf@c,w
  3343  01EC  1903               	btfsc	3,2
  3344  01ED  29F0               	goto	l3823
  3345  01EE  3007               	movlw	7
  3346  01EF  29F1               	goto	L5
  3347  01F0                     l3823:	
  3348  01F0  3027               	movlw	39
  3349  01F1                     L5:	
  3350  01F1  00C1               	movwf	_xvprintf$200
  3351  01F2  3000               	movlw	0
  3352  01F3  00C2               	movwf	_xvprintf$200+1
  3353  01F4  0841               	movf	_xvprintf$200,w
  3354  01F5  00A9               	movwf	??_xvprintf
  3355  01F6  0829               	movf	??_xvprintf,w
  3356  01F7  07D4               	addwf	xvprintf@d,f
  3357  01F8                     l3827:	
  3358                           
  3359                           ;xprintf.c: 154: s[i++] = d + '0';
  3360  01F8  0854               	movf	xvprintf@d,w
  3361  01F9  3E30               	addlw	48
  3362  01FA  00A9               	movwf	??_xvprintf
  3363  01FB  0852               	movf	xvprintf@i,w
  3364  01FC  3E2D               	addlw	(low (xvprintf@s| 0))& (0+255)
  3365  01FD  0086               	movwf	6
  3366  01FE  0187               	clrf	7
  3367  01FF  0829               	movf	??_xvprintf,w
  3368  0200  0081               	movwf	1
  3369  0201  3001               	movlw	1
  3370  0202  07D2               	addwf	xvprintf@i,f
  3371  0203  3000               	movlw	0
  3372  0204  3DD3               	addwfc	xvprintf@i+1,f
  3373                           
  3374                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  3375  0205  084F               	movf	xvprintf@v+3,w
  3376  0206  044E               	iorwf	xvprintf@v+2,w
  3377  0207  044D               	iorwf	xvprintf@v+1,w
  3378  0208  044C               	iorwf	xvprintf@v,w
  3379  0209  1903               	skipnz
  3380  020A  2A12               	goto	l202
  3381  020B  3000               	movlw	0
  3382  020C  0253               	subwf	xvprintf@i+1,w
  3383  020D  3010               	movlw	16
  3384  020E  1903               	skipnz
  3385  020F  0252               	subwf	xvprintf@i,w
  3386  0210  1C03               	skipc
  3387  0211  29B6               	goto	l3813
  3388  0212                     l202:	
  3389                           
  3390                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  3391  0212  1DD0               	btfss	xvprintf@f,3
  3392  0213  2A20               	goto	l3839
  3393  0214  302D               	movlw	45
  3394  0215  00A9               	movwf	??_xvprintf
  3395  0216  0852               	movf	xvprintf@i,w
  3396  0217  3E2D               	addlw	(low (xvprintf@s| 0))& (0+255)
  3397  0218  0086               	movwf	6
  3398  0219  0187               	clrf	7
  3399  021A  0829               	movf	??_xvprintf,w
  3400  021B  0081               	movwf	1
  3401  021C  3001               	movlw	1
  3402  021D  07D2               	addwf	xvprintf@i,f
  3403  021E  3000               	movlw	0
  3404  021F  3DD3               	addwfc	xvprintf@i+1,f
  3405  0220                     l3839:	
  3406                           
  3407                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  3408  0220  0853               	movf	xvprintf@i+1,w
  3409  0221  00CB               	movwf	xvprintf@j+1
  3410  0222  0852               	movf	xvprintf@i,w
  3411  0223  00CA               	movwf	xvprintf@j
  3412  0224  1850               	btfsc	xvprintf@f,0
  3413  0225  2A28               	goto	l3845
  3414  0226  3020               	movlw	32
  3415  0227  2A29               	goto	L6
  3416  0228                     l3845:	
  3417  0228  3030               	movlw	48
  3418  0229                     L6:	
  3419  0229  00C3               	movwf	_xvprintf$201
  3420  022A  3000               	movlw	0
  3421  022B  00C4               	movwf	_xvprintf$201+1
  3422  022C  0843               	movf	_xvprintf$201,w
  3423  022D  00A9               	movwf	??_xvprintf
  3424  022E  0829               	movf	??_xvprintf,w
  3425  022F  00D4               	movwf	xvprintf@d
  3426                           
  3427                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  3428  0230  2A35               	goto	l3849
  3429  0231                     l3847:	
  3430  0231  0854               	movf	xvprintf@d,w
  3431  0232  3186  264D  3180   	fcall	_xputc
  3432  0235                     l3849:	
  3433  0235  0020               	movlb	0	; select bank0
  3434  0236  18D0               	btfsc	xvprintf@f,1
  3435  0237  2A47               	goto	l3853
  3436  0238  084B               	movf	xvprintf@j+1,w
  3437  0239  00AA               	movwf	??_xvprintf+1
  3438  023A  084A               	movf	xvprintf@j,w
  3439  023B  00A9               	movwf	??_xvprintf
  3440  023C  0ACA               	incf	xvprintf@j,f
  3441  023D  1903               	skipnz
  3442  023E  0ACB               	incf	xvprintf@j+1,f
  3443  023F  0849               	movf	xvprintf@w+1,w
  3444  0240  022A               	subwf	??_xvprintf+1,w
  3445  0241  1D03               	skipz
  3446  0242  2A45               	goto	u3925
  3447  0243  0848               	movf	xvprintf@w,w
  3448  0244  0229               	subwf	??_xvprintf,w
  3449  0245                     u3925:	
  3450  0245  1C03               	skipc
  3451  0246  2A31               	goto	l3847
  3452  0247                     l3853:	
  3453                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  3454                           
  3455  0247  3001               	movlw	1
  3456  0248  02D2               	subwf	xvprintf@i,f
  3457  0249  3000               	movlw	0
  3458  024A  3BD3               	subwfb	xvprintf@i+1,f
  3459  024B  0852               	movf	xvprintf@i,w
  3460  024C  3E2D               	addlw	(low (xvprintf@s| 0))& (0+255)
  3461  024D  0086               	movwf	6
  3462  024E  0187               	clrf	7
  3463  024F  0801               	movf	1,w
  3464  0250  3186  264D  3180   	fcall	_xputc
  3465  0253  0020               	movlb	0	; select bank0
  3466  0254  0852               	movf	xvprintf@i,w
  3467  0255  0453               	iorwf	xvprintf@i+1,w
  3468  0256  1903               	btfsc	3,2
  3469  0257  2A5D               	goto	l3859
  3470  0258  2A47               	goto	l3853
  3471  0259                     l3857:	
  3472                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  3473                           
  3474  0259  3020               	movlw	32
  3475  025A  3186  264D  3180   	fcall	_xputc
  3476  025D                     l3859:	
  3477  025D  0020               	movlb	0	; select bank0
  3478  025E  084B               	movf	xvprintf@j+1,w
  3479  025F  00AA               	movwf	??_xvprintf+1
  3480  0260  084A               	movf	xvprintf@j,w
  3481  0261  00A9               	movwf	??_xvprintf
  3482  0262  0ACA               	incf	xvprintf@j,f
  3483  0263  1903               	skipnz
  3484  0264  0ACB               	incf	xvprintf@j+1,f
  3485  0265  0849               	movf	xvprintf@w+1,w
  3486  0266  022A               	subwf	??_xvprintf+1,w
  3487  0267  1D03               	skipz
  3488  0268  2A6B               	goto	u3945
  3489  0269  0848               	movf	xvprintf@w,w
  3490  026A  0229               	subwf	??_xvprintf,w
  3491  026B                     u3945:	
  3492  026B  1803               	btfsc	3,0
  3493  026C  2844               	goto	l146
  3494  026D  2A59               	goto	l3857
  3495  026E                     __end_of_xvprintf:	
  3496                           ;xprintf.c: 161: }
  3497                           
  3498                           
  3499                           	psect	text3
  3500  07BE                     __ptext3:	
  3501 ;; *************** function _xputs *****************
  3502 ;; Defined at:
  3503 ;;		line 44 in file "xprintf.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  str             1    wreg     PTR const unsigned char 
  3506 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  str             1    9[COMMON] PTR const unsigned char 
  3509 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      void 
  3512 ;; Registers used:
  3513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3519 ;;      Params:         0       0       0       0       0       0
  3520 ;;      Locals:         1       0       0       0       0       0
  3521 ;;      Temps:          1       0       0       0       0       0
  3522 ;;      Totals:         2       0       0       0       0       0
  3523 ;;Total ram usage:        2 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    6
  3526 ;; This function calls:
  3527 ;;		_xputc
  3528 ;; This function is called by:
  3529 ;;		_xvprintf
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           
  3534                           ;psect for function _xputs
  3535  07BE                     _xputs:	
  3536                           
  3537                           ;incstack = 0
  3538                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3539                           ;xputs@str stored from wreg
  3540  07BE  00F9               	movwf	xputs@str
  3541  07BF                     l2511:	
  3542                           ;xprintf.c: 48: while (*str)
  3543                           
  3544  07BF  0879               	movf	xputs@str,w
  3545  07C0  0086               	movwf	6
  3546  07C1  0187               	clrf	7
  3547  07C2  0801               	movf	1,w
  3548  07C3  1903               	btfsc	3,2
  3549  07C4  0008               	return
  3550                           
  3551                           ;xprintf.c: 49: xputc(*str++);
  3552  07C5  0879               	movf	xputs@str,w
  3553  07C6  0086               	movwf	6
  3554  07C7  0187               	clrf	7
  3555  07C8  0801               	movf	1,w
  3556  07C9  3186  264D  3187   	fcall	_xputc
  3557  07CC  3001               	movlw	1
  3558  07CD  00F8               	movwf	??_xputs
  3559  07CE  0878               	movf	??_xputs,w
  3560  07CF  07F9               	addwf	xputs@str,f
  3561  07D0  2FBF               	goto	l2511
  3562  07D1                     __end_of_xputs:	
  3563                           
  3564                           	psect	text4
  3565  064D                     __ptext4:	
  3566 ;; *************** function _xputc *****************
  3567 ;; Defined at:
  3568 ;;		line 26 in file "xprintf.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  c               1    wreg     unsigned char 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  c               1    7[COMMON] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3582 ;;      Params:         0       0       0       0       0       0
  3583 ;;      Locals:         1       0       0       0       0       0
  3584 ;;      Temps:          1       0       0       0       0       0
  3585 ;;      Totals:         2       0       0       0       0       0
  3586 ;;Total ram usage:        2 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    5
  3589 ;; This function calls:
  3590 ;;		Absolute function
  3591 ;;		_LCD_Put
  3592 ;; This function is called by:
  3593 ;;		_xputs
  3594 ;;		_xvprintf
  3595 ;;		_xfputs
  3596 ;;		_put_dump
  3597 ;;		_xgets
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           
  3602                           ;psect for function _xputc
  3603  064D                     _xputc:	
  3604                           
  3605                           ;incstack = 0
  3606                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3607                           ;xputc@c stored from wreg
  3608  064D  00F7               	movwf	xputc@c
  3609  064E  300A               	movlw	10
  3610  064F  0677               	xorwf	xputc@c,w
  3611  0650  1D03               	btfss	3,2
  3612  0651  2E5C               	goto	l2489
  3613  0652  30A3               	movlw	(low (STR_4| (0+32768)))& (0+255)
  3614  0653  00F6               	movwf	??_xputc
  3615  0654  0876               	movf	??_xputc,w
  3616  0655  00F5               	movwf	LCD_Put@word
  3617  0656  0020               	movlb	0	; select bank0
  3618  0657  086B               	movf	_xfunc_out+1,w
  3619  0658  008A               	movwf	10
  3620  0659  086A               	movf	_xfunc_out,w
  3621  065A  000A               	callw
  3622  065B  3186               	pagesel	$
  3623  065C                     l2489:	
  3624                           
  3625                           ;xprintf.c: 30: if (outptr) {
  3626  065C  087B               	movf	_outptr,w
  3627  065D  1903               	btfsc	3,2
  3628  065E  2E6B               	goto	l2497
  3629                           
  3630                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  3631  065F  0877               	movf	xputc@c,w
  3632  0660  00F6               	movwf	??_xputc
  3633  0661  087B               	movf	_outptr,w
  3634  0662  0086               	movwf	6
  3635  0663  0187               	clrf	7
  3636  0664  0876               	movf	??_xputc,w
  3637  0665  0081               	movwf	1
  3638  0666  3001               	movlw	1
  3639  0667  00F6               	movwf	??_xputc
  3640  0668  0876               	movf	??_xputc,w
  3641  0669  07FB               	addwf	_outptr,f
  3642                           
  3643                           ;xprintf.c: 32: return;
  3644  066A  0008               	return
  3645  066B                     l2497:	
  3646                           
  3647                           ;xprintf.c: 33: }
  3648                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  3649  066B  0020               	movlb	0	; select bank0
  3650  066C  086A               	movf	_xfunc_out,w
  3651  066D  046B               	iorwf	_xfunc_out+1,w
  3652  066E  1903               	btfsc	3,2
  3653  066F  0008               	return
  3654  0670  0877               	movf	xputc@c,w
  3655  0671  00F6               	movwf	??_xputc
  3656  0672  0876               	movf	??_xputc,w
  3657  0673  00F5               	movwf	LCD_Put@word
  3658  0674  086B               	movf	_xfunc_out+1,w
  3659  0675  008A               	movwf	10
  3660  0676  086A               	movf	_xfunc_out,w
  3661  0677  000A               	callw
  3662  0678  3186               	pagesel	$
  3663  0679  0008               	return
  3664  067A                     __end_of_xputc:	
  3665                           
  3666                           	psect	text5
  3667  0FAB                     __ptext5:	
  3668 ;; *************** function _LCD_Put *****************
  3669 ;; Defined at:
  3670 ;;		line 54 in file "LCD.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  word            1    5[COMMON] char 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0, pclath, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3684 ;;      Params:         1       0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0
  3687 ;;      Totals:         1       0       0       0       0       0
  3688 ;;Total ram usage:        1 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    4
  3691 ;; This function calls:
  3692 ;;		_LCD_WriteData
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;;		_xputc
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           
  3700                           ;psect for function _LCD_Put
  3701  0FAB                     _LCD_Put:	
  3702                           
  3703                           ;LCD.c: 56: LATA3 = 1;
  3704                           
  3705                           ;incstack = 0
  3706                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  3707  0FAB  0022               	movlb	2	; select bank2
  3708  0FAC  158C               	bsf	12,3	;volatile
  3709                           
  3710                           ;LCD.c: 57: LCD_WriteData(word);
  3711  0FAD  0875               	movf	LCD_Put@word,w
  3712  0FAE  3185  25A1         	fcall	_LCD_WriteData
  3713  0FB0  0008               	return
  3714  0FB1                     __end_of_LCD_Put:	
  3715                           
  3716                           	psect	text6
  3717  0760                     __ptext6:	
  3718 ;; *************** function ___wmul *****************
  3719 ;; Defined at:
  3720 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  multiplier      2    2[COMMON] unsigned int 
  3723 ;;  multiplicand    2    4[COMMON] unsigned int 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  product         2    6[COMMON] unsigned int 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  2    2[COMMON] unsigned int 
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, status,0
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3735 ;;      Params:         4       0       0       0       0       0
  3736 ;;      Locals:         2       0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0
  3738 ;;      Totals:         6       0       0       0       0       0
  3739 ;;Total ram usage:        6 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    3
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_xvprintf
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           
  3750                           ;psect for function ___wmul
  3751  0760                     ___wmul:	
  3752                           
  3753                           ;incstack = 0
  3754                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3755  0760  01F6               	clrf	___wmul@product
  3756  0761  01F7               	clrf	___wmul@product+1
  3757  0762                     l2687:	
  3758  0762  1C72               	btfss	___wmul@multiplier,0
  3759  0763  2F68               	goto	l883
  3760  0764  0874               	movf	___wmul@multiplicand,w
  3761  0765  07F6               	addwf	___wmul@product,f
  3762  0766  0875               	movf	___wmul@multiplicand+1,w
  3763  0767  3DF7               	addwfc	___wmul@product+1,f
  3764  0768                     l883:	
  3765  0768  3001               	movlw	1
  3766  0769                     u2095:	
  3767  0769  35F4               	lslf	___wmul@multiplicand,f
  3768  076A  0DF5               	rlf	___wmul@multiplicand+1,f
  3769  076B  0B89               	decfsz	9,f
  3770  076C  2F69               	goto	u2095
  3771  076D  3001               	movlw	1
  3772  076E                     u2105:	
  3773  076E  36F3               	lsrf	___wmul@multiplier+1,f
  3774  076F  0CF2               	rrf	___wmul@multiplier,f
  3775  0770  0B89               	decfsz	9,f
  3776  0771  2F6E               	goto	u2105
  3777  0772  0872               	movf	___wmul@multiplier,w
  3778  0773  0473               	iorwf	___wmul@multiplier+1,w
  3779  0774  1D03               	btfss	3,2
  3780  0775  2F62               	goto	l2687
  3781  0776  0877               	movf	___wmul@product+1,w
  3782  0777  00F3               	movwf	?___wmul+1
  3783  0778  0876               	movf	___wmul@product,w
  3784  0779  00F2               	movwf	?___wmul
  3785  077A  0008               	return
  3786  077B                     __end_of___wmul:	
  3787                           
  3788                           	psect	text7
  3789  055E                     __ptext7:	
  3790 ;; *************** function ___llmod *****************
  3791 ;; Defined at:
  3792 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  divisor         4    2[COMMON] unsigned long 
  3795 ;;  dividend        4    6[COMMON] unsigned long 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  counter         1    1[BANK0 ] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  4    2[COMMON] unsigned long 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3807 ;;      Params:         8       0       0       0       0       0
  3808 ;;      Locals:         0       1       0       0       0       0
  3809 ;;      Temps:          0       1       0       0       0       0
  3810 ;;      Totals:         8       2       0       0       0       0
  3811 ;;Total ram usage:       10 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    3
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_xvprintf
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function ___llmod
  3823  055E                     ___llmod:	
  3824                           
  3825                           ;incstack = 0
  3826                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3827  055E  0875               	movf	___llmod@divisor+3,w
  3828  055F  0474               	iorwf	___llmod@divisor+2,w
  3829  0560  0473               	iorwf	___llmod@divisor+1,w
  3830  0561  0472               	iorwf	___llmod@divisor,w
  3831  0562  1903               	skipnz
  3832  0563  2D98               	goto	l3693
  3833  0564  0020               	movlb	0	; select bank0
  3834  0565  01A1               	clrf	___llmod@counter
  3835  0566  0AA1               	incf	___llmod@counter,f
  3836  0567                     l3683:	
  3837  0567  1BF5               	btfsc	___llmod@divisor+3,7
  3838  0568  2D75               	goto	l3685
  3839  0569  3001               	movlw	1
  3840  056A                     u3625:	
  3841  056A  35F2               	lslf	___llmod@divisor,f
  3842  056B  0DF3               	rlf	___llmod@divisor+1,f
  3843  056C  0DF4               	rlf	___llmod@divisor+2,f
  3844  056D  0DF5               	rlf	___llmod@divisor+3,f
  3845  056E  0B89               	decfsz	9,f
  3846  056F  2D6A               	goto	u3625
  3847  0570  3001               	movlw	1
  3848  0571  00A0               	movwf	??___llmod
  3849  0572  0820               	movf	??___llmod,w
  3850  0573  07A1               	addwf	___llmod@counter,f
  3851  0574  2D67               	goto	l3683
  3852  0575                     l3685:	
  3853  0575  0875               	movf	___llmod@divisor+3,w
  3854  0576  0279               	subwf	___llmod@dividend+3,w
  3855  0577  1D03               	skipz
  3856  0578  2D83               	goto	u3645
  3857  0579  0874               	movf	___llmod@divisor+2,w
  3858  057A  0278               	subwf	___llmod@dividend+2,w
  3859  057B  1D03               	skipz
  3860  057C  2D83               	goto	u3645
  3861  057D  0873               	movf	___llmod@divisor+1,w
  3862  057E  0277               	subwf	___llmod@dividend+1,w
  3863  057F  1D03               	skipz
  3864  0580  2D83               	goto	u3645
  3865  0581  0872               	movf	___llmod@divisor,w
  3866  0582  0276               	subwf	___llmod@dividend,w
  3867  0583                     u3645:	
  3868  0583  1C03               	skipc
  3869  0584  2D8D               	goto	l3689
  3870  0585  0872               	movf	___llmod@divisor,w
  3871  0586  02F6               	subwf	___llmod@dividend,f
  3872  0587  0873               	movf	___llmod@divisor+1,w
  3873  0588  3BF7               	subwfb	___llmod@dividend+1,f
  3874  0589  0874               	movf	___llmod@divisor+2,w
  3875  058A  3BF8               	subwfb	___llmod@dividend+2,f
  3876  058B  0875               	movf	___llmod@divisor+3,w
  3877  058C  3BF9               	subwfb	___llmod@dividend+3,f
  3878  058D                     l3689:	
  3879  058D  3001               	movlw	1
  3880  058E                     u3655:	
  3881  058E  36F5               	lsrf	___llmod@divisor+3,f
  3882  058F  0CF4               	rrf	___llmod@divisor+2,f
  3883  0590  0CF3               	rrf	___llmod@divisor+1,f
  3884  0591  0CF2               	rrf	___llmod@divisor,f
  3885  0592  0B89               	decfsz	9,f
  3886  0593  2D8E               	goto	u3655
  3887  0594  3001               	movlw	1
  3888  0595  02A1               	subwf	___llmod@counter,f
  3889  0596  1D03               	btfss	3,2
  3890  0597  2D75               	goto	l3685
  3891  0598                     l3693:	
  3892  0598  0879               	movf	___llmod@dividend+3,w
  3893  0599  00F5               	movwf	?___llmod+3
  3894  059A  0878               	movf	___llmod@dividend+2,w
  3895  059B  00F4               	movwf	?___llmod+2
  3896  059C  0877               	movf	___llmod@dividend+1,w
  3897  059D  00F3               	movwf	?___llmod+1
  3898  059E  0876               	movf	___llmod@dividend,w
  3899  059F  00F2               	movwf	?___llmod
  3900  05A0  0008               	return
  3901  05A1                     __end_of___llmod:	
  3902                           
  3903                           	psect	text8
  3904  050B                     __ptext8:	
  3905 ;; *************** function ___lldiv *****************
  3906 ;; Defined at:
  3907 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  divisor         4    2[COMMON] unsigned long 
  3910 ;;  dividend        4    6[COMMON] unsigned long 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;  quotient        4    1[BANK0 ] unsigned long 
  3913 ;;  counter         1    5[BANK0 ] unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  4    2[COMMON] unsigned long 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3923 ;;      Params:         8       0       0       0       0       0
  3924 ;;      Locals:         0       5       0       0       0       0
  3925 ;;      Temps:          0       1       0       0       0       0
  3926 ;;      Totals:         8       6       0       0       0       0
  3927 ;;Total ram usage:       14 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    3
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_xvprintf
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           
  3938                           ;psect for function ___lldiv
  3939  050B                     ___lldiv:	
  3940                           
  3941                           ;incstack = 0
  3942                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3943  050B  3000               	movlw	0
  3944  050C  0020               	movlb	0	; select bank0
  3945  050D  00A4               	movwf	___lldiv@quotient+3
  3946  050E  3000               	movlw	0
  3947  050F  00A3               	movwf	___lldiv@quotient+2
  3948  0510  3000               	movlw	0
  3949  0511  00A2               	movwf	___lldiv@quotient+1
  3950  0512  3000               	movlw	0
  3951  0513  00A1               	movwf	___lldiv@quotient
  3952  0514  0875               	movf	___lldiv@divisor+3,w
  3953  0515  0474               	iorwf	___lldiv@divisor+2,w
  3954  0516  0473               	iorwf	___lldiv@divisor+1,w
  3955  0517  0472               	iorwf	___lldiv@divisor,w
  3956  0518  1903               	skipnz
  3957  0519  2D55               	goto	l3673
  3958  051A  01A5               	clrf	___lldiv@counter
  3959  051B  0AA5               	incf	___lldiv@counter,f
  3960  051C                     l3659:	
  3961  051C  1BF5               	btfsc	___lldiv@divisor+3,7
  3962  051D  2D2A               	goto	l3661
  3963  051E  3001               	movlw	1
  3964  051F                     u3555:	
  3965  051F  35F2               	lslf	___lldiv@divisor,f
  3966  0520  0DF3               	rlf	___lldiv@divisor+1,f
  3967  0521  0DF4               	rlf	___lldiv@divisor+2,f
  3968  0522  0DF5               	rlf	___lldiv@divisor+3,f
  3969  0523  0B89               	decfsz	9,f
  3970  0524  2D1F               	goto	u3555
  3971  0525  3001               	movlw	1
  3972  0526  00A0               	movwf	??___lldiv
  3973  0527  0820               	movf	??___lldiv,w
  3974  0528  07A5               	addwf	___lldiv@counter,f
  3975  0529  2D1C               	goto	l3659
  3976  052A                     l3661:	
  3977  052A  3001               	movlw	1
  3978  052B                     u3575:	
  3979  052B  35A1               	lslf	___lldiv@quotient,f
  3980  052C  0DA2               	rlf	___lldiv@quotient+1,f
  3981  052D  0DA3               	rlf	___lldiv@quotient+2,f
  3982  052E  0DA4               	rlf	___lldiv@quotient+3,f
  3983  052F  0B89               	decfsz	9,f
  3984  0530  2D2B               	goto	u3575
  3985  0531  0875               	movf	___lldiv@divisor+3,w
  3986  0532  0279               	subwf	___lldiv@dividend+3,w
  3987  0533  1D03               	skipz
  3988  0534  2D3F               	goto	u3585
  3989  0535  0874               	movf	___lldiv@divisor+2,w
  3990  0536  0278               	subwf	___lldiv@dividend+2,w
  3991  0537  1D03               	skipz
  3992  0538  2D3F               	goto	u3585
  3993  0539  0873               	movf	___lldiv@divisor+1,w
  3994  053A  0277               	subwf	___lldiv@dividend+1,w
  3995  053B  1D03               	skipz
  3996  053C  2D3F               	goto	u3585
  3997  053D  0872               	movf	___lldiv@divisor,w
  3998  053E  0276               	subwf	___lldiv@dividend,w
  3999  053F                     u3585:	
  4000  053F  1C03               	skipc
  4001  0540  2D4A               	goto	l3669
  4002  0541  0872               	movf	___lldiv@divisor,w
  4003  0542  02F6               	subwf	___lldiv@dividend,f
  4004  0543  0873               	movf	___lldiv@divisor+1,w
  4005  0544  3BF7               	subwfb	___lldiv@dividend+1,f
  4006  0545  0874               	movf	___lldiv@divisor+2,w
  4007  0546  3BF8               	subwfb	___lldiv@dividend+2,f
  4008  0547  0875               	movf	___lldiv@divisor+3,w
  4009  0548  3BF9               	subwfb	___lldiv@dividend+3,f
  4010  0549  1421               	bsf	___lldiv@quotient,0
  4011  054A                     l3669:	
  4012  054A  3001               	movlw	1
  4013  054B                     u3595:	
  4014  054B  36F5               	lsrf	___lldiv@divisor+3,f
  4015  054C  0CF4               	rrf	___lldiv@divisor+2,f
  4016  054D  0CF3               	rrf	___lldiv@divisor+1,f
  4017  054E  0CF2               	rrf	___lldiv@divisor,f
  4018  054F  0B89               	decfsz	9,f
  4019  0550  2D4B               	goto	u3595
  4020  0551  3001               	movlw	1
  4021  0552  02A5               	subwf	___lldiv@counter,f
  4022  0553  1D03               	btfss	3,2
  4023  0554  2D2A               	goto	l3661
  4024  0555                     l3673:	
  4025  0555  0824               	movf	___lldiv@quotient+3,w
  4026  0556  00F5               	movwf	?___lldiv+3
  4027  0557  0823               	movf	___lldiv@quotient+2,w
  4028  0558  00F4               	movwf	?___lldiv+2
  4029  0559  0822               	movf	___lldiv@quotient+1,w
  4030  055A  00F3               	movwf	?___lldiv+1
  4031  055B  0821               	movf	___lldiv@quotient,w
  4032  055C  00F2               	movwf	?___lldiv
  4033  055D  0008               	return
  4034  055E                     __end_of___lldiv:	
  4035                           
  4036                           	psect	text9
  4037  07D1                     __ptext9:	
  4038 ;; *************** function _mTouch_Init *****************
  4039 ;; Defined at:
  4040 ;;		line 12 in file "mTouch.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;		None
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;		None
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, status,2, status,0, pclath, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4054 ;;      Params:         0       0       0       0       0       0
  4055 ;;      Locals:         0       0       0       0       0       0
  4056 ;;      Temps:          1       0       0       0       0       0
  4057 ;;      Totals:         1       0       0       0       0       0
  4058 ;;Total ram usage:        1 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:    4
  4061 ;; This function calls:
  4062 ;;		_mTouch_PortInit
  4063 ;; This function is called by:
  4064 ;;		_main
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           
  4069                           ;psect for function _mTouch_Init
  4070  07D1                     _mTouch_Init:	
  4071                           
  4072                           ;mTouch.c: 14: mTouch_PortInit();
  4073                           
  4074                           ;incstack = 0
  4075                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4076  07D1  3187  27F5         	fcall	_mTouch_PortInit
  4077                           
  4078                           ;mTouch.c: 17: OPTION_REG |= (0x0<<0);
  4079  07D3  0021               	movlb	1	; select bank1
  4080  07D4  0815               	movf	21,w	;volatile
  4081                           
  4082                           ;mTouch.c: 18: OPTION_REG |= (0x1<<3);
  4083  07D5  1595               	bsf	21,3	;volatile
  4084                           
  4085                           ;mTouch.c: 19: OPTION_REG |= (0x1<<5);
  4086  07D6  1695               	bsf	21,5	;volatile
  4087                           
  4088                           ;mTouch.c: 20: TMR0 = 0x00;
  4089  07D7  0020               	movlb	0	; select bank0
  4090  07D8  0195               	clrf	21	;volatile
  4091                           
  4092                           ;mTouch.c: 23: CPSCON0 |= (0x01<<0);
  4093  07D9  141E               	bsf	30,0	;volatile
  4094                           
  4095                           ;mTouch.c: 24: CPSCON0 |= (0x03<<2);
  4096  07DA  300C               	movlw	12
  4097  07DB  00F3               	movwf	??_mTouch_Init
  4098  07DC  0873               	movf	??_mTouch_Init,w
  4099  07DD  049E               	iorwf	30,f	;volatile
  4100                           
  4101                           ;mTouch.c: 25: CPSCON0 &= ~(0x01<<7);;
  4102  07DE  307F               	movlw	127
  4103  07DF  00F3               	movwf	??_mTouch_Init
  4104  07E0  0873               	movf	??_mTouch_Init,w
  4105  07E1  059E               	andwf	30,f	;volatile
  4106                           
  4107                           ;mTouch.c: 26: CPSCON1 = (uint8_t)0x00;
  4108  07E2  019F               	clrf	31	;volatile
  4109  07E3  0008               	return
  4110  07E4                     __end_of_mTouch_Init:	
  4111                           
  4112                           	psect	text10
  4113  07F5                     __ptext10:	
  4114 ;; *************** function _mTouch_PortInit *****************
  4115 ;; Defined at:
  4116 ;;		line 6 in file "mTouch.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg, status,2, status,0
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4130 ;;      Params:         0       0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0
  4132 ;;      Temps:          1       0       0       0       0       0
  4133 ;;      Totals:         1       0       0       0       0       0
  4134 ;;Total ram usage:        1 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    3
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_mTouch_Init
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           
  4145                           ;psect for function _mTouch_PortInit
  4146  07F5                     _mTouch_PortInit:	
  4147                           
  4148                           ;mTouch.c: 8: TRISA |= (0x07);
  4149                           
  4150                           ;incstack = 0
  4151                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4152  07F5  3007               	movlw	7
  4153  07F6  00F2               	movwf	??_mTouch_PortInit
  4154  07F7  0872               	movf	??_mTouch_PortInit,w
  4155  07F8  0021               	movlb	1	; select bank1
  4156  07F9  048C               	iorwf	12,f	;volatile
  4157                           
  4158                           ;mTouch.c: 9: ANSELA |= (0x07);
  4159  07FA  3007               	movlw	7
  4160  07FB  00F2               	movwf	??_mTouch_PortInit
  4161  07FC  0872               	movf	??_mTouch_PortInit,w
  4162  07FD  0023               	movlb	3	; select bank3
  4163  07FE  048C               	iorwf	12,f	;volatile
  4164  07FF  0008               	return
  4165  0800                     __end_of_mTouch_PortInit:	
  4166                           
  4167                           	psect	text11
  4168  07E4                     __ptext11:	
  4169 ;; *************** function _Timer4_Init *****************
  4170 ;; Defined at:
  4171 ;;		line 3 in file "Timer4.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2, status,0
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4185 ;;      Params:         0       0       0       0       0       0
  4186 ;;      Locals:         0       0       0       0       0       0
  4187 ;;      Temps:          1       0       0       0       0       0
  4188 ;;      Totals:         1       0       0       0       0       0
  4189 ;;Total ram usage:        1 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    3
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _Timer4_Init
  4201  07E4                     _Timer4_Init:	
  4202                           
  4203                           ;Timer4.c: 5: PR4 = 0x7D;
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in _Timer4_Init: [wreg+status,2+status,0]
  4207  07E4  307D               	movlw	125
  4208  07E5  0028               	movlb	8	; select bank8
  4209  07E6  0096               	movwf	22	;volatile
  4210                           
  4211                           ;Timer4.c: 6: TMR4 = 0x00;
  4212  07E7  0195               	clrf	21	;volatile
  4213                           
  4214                           ;Timer4.c: 7: T4CON |= (0x03<<0);
  4215  07E8  3003               	movlw	3
  4216  07E9  00F2               	movwf	??_Timer4_Init
  4217  07EA  0872               	movf	??_Timer4_Init,w
  4218  07EB  0497               	iorwf	23,f	;volatile
  4219                           
  4220                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  4221  07EC  0817               	movf	23,w	;volatile
  4222                           
  4223                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  4224  07ED  1517               	bsf	23,2	;volatile
  4225                           
  4226                           ;Timer4.c: 11: TMR4IF = 0;
  4227  07EE  0020               	movlb	0	; select bank0
  4228  07EF  1093               	bcf	19,1	;volatile
  4229                           
  4230                           ;Timer4.c: 12: TMR4IE = 1;
  4231  07F0  0021               	movlb	1	; select bank1
  4232  07F1  1493               	bsf	19,1	;volatile
  4233                           
  4234                           ;Timer4.c: 13: PEIE = 1;
  4235  07F2  170B               	bsf	11,6	;volatile
  4236                           
  4237                           ;Timer4.c: 14: GIE = 1;
  4238  07F3  178B               	bsf	11,7	;volatile
  4239  07F4  0008               	return
  4240  07F5                     __end_of_Timer4_Init:	
  4241                           
  4242                           	psect	text12
  4243  077B                     __ptext12:	
  4244 ;; *************** function _Timer1_Init *****************
  4245 ;; Defined at:
  4246 ;;		line 3 in file "Timer1.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4260 ;;      Params:         0       0       0       0       0       0
  4261 ;;      Locals:         0       0       0       0       0       0
  4262 ;;      Temps:          1       0       0       0       0       0
  4263 ;;      Totals:         1       0       0       0       0       0
  4264 ;;Total ram usage:        1 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    3
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_main
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           
  4275                           ;psect for function _Timer1_Init
  4276  077B                     _Timer1_Init:	
  4277                           
  4278                           ;Timer1.c: 5: TRISB |= (1<<6);
  4279                           
  4280                           ;incstack = 0
  4281                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4282  077B  0021               	movlb	1	; select bank1
  4283  077C  170D               	bsf	13,6	;volatile
  4284                           
  4285                           ;Timer1.c: 6: ANSELB &= ~(1<<6);
  4286  077D  30BF               	movlw	191
  4287  077E  00F2               	movwf	??_Timer1_Init
  4288  077F  0872               	movf	??_Timer1_Init,w
  4289  0780  0023               	movlb	3	; select bank3
  4290  0781  058D               	andwf	13,f	;volatile
  4291                           
  4292                           ;Timer1.c: 8: T1CON |= (0x01<<2);
  4293  0782  0020               	movlb	0	; select bank0
  4294  0783  1518               	bsf	24,2	;volatile
  4295                           
  4296                           ;Timer1.c: 9: T1CON &= ~(0x01<<3);
  4297  0784  30F7               	movlw	247
  4298  0785  00F2               	movwf	??_Timer1_Init
  4299  0786  0872               	movf	??_Timer1_Init,w
  4300  0787  0598               	andwf	24,f	;volatile
  4301                           
  4302                           ;Timer1.c: 10: T1CON |= (0x00<<4);
  4303  0788  0818               	movf	24,w	;volatile
  4304                           
  4305                           ;Timer1.c: 11: T1CON |= (0x02<<6);
  4306  0789  1798               	bsf	24,7	;volatile
  4307                           
  4308                           ;Timer1.c: 13: T1GCON = 0x00;
  4309  078A  0199               	clrf	25	;volatile
  4310                           
  4311                           ;Timer1.c: 15: TMR1 = 0x0000;
  4312  078B  0196               	clrf	22	;volatile
  4313  078C  0197               	clrf	23	;volatile
  4314                           
  4315                           ;Timer1.c: 17: TMR1IE = 1;
  4316  078D  0021               	movlb	1	; select bank1
  4317  078E  1411               	bsf	17,0	;volatile
  4318                           
  4319                           ;Timer1.c: 18: TMR1IF = 0;
  4320  078F  0020               	movlb	0	; select bank0
  4321  0790  1011               	bcf	17,0	;volatile
  4322                           
  4323                           ;Timer1.c: 19: PEIE = 1;
  4324  0791  170B               	bsf	11,6	;volatile
  4325                           
  4326                           ;Timer1.c: 20: GIE = 1;
  4327  0792  178B               	bsf	11,7	;volatile
  4328  0793  0008               	return
  4329  0794                     __end_of_Timer1_Init:	
  4330                           
  4331                           	psect	text13
  4332  03F8                     __ptext13:	
  4333 ;; *************** function _LCD_Init *****************
  4334 ;; Defined at:
  4335 ;;		line 28 in file "LCD.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0, pclath, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4349 ;;      Params:         0       0       0       0       0       0
  4350 ;;      Locals:         0       0       0       0       0       0
  4351 ;;      Temps:          2       0       0       0       0       0
  4352 ;;      Totals:         2       0       0       0       0       0
  4353 ;;Total ram usage:        2 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    5
  4356 ;; This function calls:
  4357 ;;		_LCD_DisplayClear
  4358 ;;		_LCD_WriteData
  4359 ;; This function is called by:
  4360 ;;		_main
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           
  4365                           ;psect for function _LCD_Init
  4366  03F8                     _LCD_Init:	
  4367                           
  4368                           ;LCD.c: 30: LATA3 = 0;
  4369                           
  4370                           ;incstack = 0
  4371                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4372  03F8  0022               	movlb	2	; select bank2
  4373  03F9  118C               	bcf	12,3	;volatile
  4374                           
  4375                           ;LCD.c: 31: LATA4 = 0;
  4376  03FA  120C               	bcf	12,4	;volatile
  4377                           
  4378                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  4379  03FB  3002               	movlw	2
  4380  03FC  00F7               	movwf	??_LCD_Init+1
  4381  03FD  3038               	movlw	56
  4382  03FE  00F6               	movwf	??_LCD_Init
  4383  03FF  30AD               	movlw	173
  4384  0400                     u4047:	
  4385  0400  0B89               	decfsz	9,f
  4386  0401  2C00               	goto	u4047
  4387  0402  0BF6               	decfsz	??_LCD_Init,f
  4388  0403  2C00               	goto	u4047
  4389  0404  0BF7               	decfsz	??_LCD_Init+1,f
  4390  0405  2C00               	goto	u4047
  4391  0406  0000               	nop
  4392                           
  4393                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  4394  0407  3003               	movlw	3
  4395  0408  0020               	movlb	0	; select bank0
  4396  0409  008D               	movwf	13	;volatile
  4397                           
  4398                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4399  040A  0022               	movlb	2	; select bank2
  4400  040B  160C               	bsf	12,4	;volatile
  4401  040C  3200               	nop2	;2 cycle nop
  4402  040D  3200               	nop2	;2 cycle nop
  4403  040E  3200               	nop2	;2 cycle nop
  4404  040F  3200               	nop2	;2 cycle nop
  4405  0410  0022               	movlb	2	; select bank2
  4406  0411  120C               	bcf	12,4	;volatile
  4407  0412  3200               	nop2	;2 cycle nop
  4408  0413  3200               	nop2	;2 cycle nop
  4409  0414  3200               	nop2	;2 cycle nop
  4410  0415  3200               	nop2	;2 cycle nop
  4411                           
  4412                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  4413  0416  3034               	movlw	52
  4414  0417  00F6               	movwf	??_LCD_Init
  4415  0418  30F2               	movlw	242
  4416  0419                     u4057:	
  4417  0419  0B89               	decfsz	9,f
  4418  041A  2C19               	goto	u4057
  4419  041B  0BF6               	decfsz	??_LCD_Init,f
  4420  041C  2C19               	goto	u4057
  4421                           
  4422                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4423  041D  0022               	movlb	2	; select bank2
  4424  041E  160C               	bsf	12,4	;volatile
  4425  041F  3200               	nop2	;2 cycle nop
  4426  0420  3200               	nop2	;2 cycle nop
  4427  0421  3200               	nop2	;2 cycle nop
  4428  0422  3200               	nop2	;2 cycle nop
  4429  0423  0022               	movlb	2	; select bank2
  4430  0424  120C               	bcf	12,4	;volatile
  4431  0425  3200               	nop2	;2 cycle nop
  4432  0426  3200               	nop2	;2 cycle nop
  4433  0427  3200               	nop2	;2 cycle nop
  4434  0428  3200               	nop2	;2 cycle nop
  4435                           
  4436                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  4437  0429  3005               	movlw	5
  4438  042A  00F6               	movwf	??_LCD_Init
  4439  042B  3026               	movlw	38
  4440  042C                     u4067:	
  4441  042C  0B89               	decfsz	9,f
  4442  042D  2C2C               	goto	u4067
  4443  042E  0BF6               	decfsz	??_LCD_Init,f
  4444  042F  2C2C               	goto	u4067
  4445  0430  3200               	nop2
  4446                           
  4447                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4448  0431  0022               	movlb	2	; select bank2
  4449  0432  160C               	bsf	12,4	;volatile
  4450  0433  3200               	nop2	;2 cycle nop
  4451  0434  3200               	nop2	;2 cycle nop
  4452  0435  3200               	nop2	;2 cycle nop
  4453  0436  3200               	nop2	;2 cycle nop
  4454  0437  0022               	movlb	2	; select bank2
  4455  0438  120C               	bcf	12,4	;volatile
  4456  0439  3200               	nop2	;2 cycle nop
  4457  043A  3200               	nop2	;2 cycle nop
  4458  043B  3200               	nop2	;2 cycle nop
  4459  043C  3200               	nop2	;2 cycle nop
  4460                           
  4461                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  4462  043D  3005               	movlw	5
  4463  043E  00F6               	movwf	??_LCD_Init
  4464  043F  3026               	movlw	38
  4465  0440                     u4077:	
  4466  0440  0B89               	decfsz	9,f
  4467  0441  2C40               	goto	u4077
  4468  0442  0BF6               	decfsz	??_LCD_Init,f
  4469  0443  2C40               	goto	u4077
  4470  0444  3200               	nop2
  4471                           
  4472                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  4473  0445  3002               	movlw	2
  4474  0446  0020               	movlb	0	; select bank0
  4475  0447  008D               	movwf	13	;volatile
  4476                           
  4477                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4478  0448  0022               	movlb	2	; select bank2
  4479  0449  160C               	bsf	12,4	;volatile
  4480  044A  3200               	nop2	;2 cycle nop
  4481  044B  3200               	nop2	;2 cycle nop
  4482  044C  3200               	nop2	;2 cycle nop
  4483  044D  3200               	nop2	;2 cycle nop
  4484  044E  0022               	movlb	2	; select bank2
  4485  044F  120C               	bcf	12,4	;volatile
  4486  0450  3200               	nop2	;2 cycle nop
  4487  0451  3200               	nop2	;2 cycle nop
  4488  0452  3200               	nop2	;2 cycle nop
  4489  0453  3200               	nop2	;2 cycle nop
  4490                           
  4491                           ;LCD.c: 44: LCD_WriteData(0x28);
  4492  0454  3028               	movlw	40
  4493  0455  3185  25A1  3183   	fcall	_LCD_WriteData
  4494                           
  4495                           ;LCD.c: 45: LCD_WriteData(0x0c);
  4496  0458  300C               	movlw	12
  4497  0459  3185  25A1  3183   	fcall	_LCD_WriteData
  4498                           
  4499                           ;LCD.c: 46: LCD_DisplayClear();
  4500  045C  318F  27E1  3183   	fcall	_LCD_DisplayClear
  4501                           
  4502                           ;LCD.c: 47: LCD_WriteData(0x06);
  4503  045F  3006               	movlw	6
  4504  0460  3185  25A1         	fcall	_LCD_WriteData
  4505  0462  0008               	return
  4506  0463                     __end_of_LCD_Init:	
  4507                           
  4508                           	psect	text14
  4509  0FE1                     __ptext14:	
  4510 ;; *************** function _LCD_DisplayClear *****************
  4511 ;; Defined at:
  4512 ;;		line 64 in file "LCD.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;		None
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		wreg, status,2, status,0, pclath, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4526 ;;      Params:         0       0       0       0       0       0
  4527 ;;      Locals:         0       0       0       0       0       0
  4528 ;;      Temps:          1       0       0       0       0       0
  4529 ;;      Totals:         1       0       0       0       0       0
  4530 ;;Total ram usage:        1 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    4
  4533 ;; This function calls:
  4534 ;;		_LCD_WriteData
  4535 ;; This function is called by:
  4536 ;;		_LCD_Init
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           
  4541                           ;psect for function _LCD_DisplayClear
  4542  0FE1                     _LCD_DisplayClear:	
  4543                           
  4544                           ;LCD.c: 66: LATA3 = 0;
  4545                           
  4546                           ;incstack = 0
  4547                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  4548  0FE1  0022               	movlb	2	; select bank2
  4549  0FE2  118C               	bcf	12,3	;volatile
  4550                           
  4551                           ;LCD.c: 67: LCD_WriteData(0x01);
  4552  0FE3  3001               	movlw	1
  4553  0FE4  3185  25A1  318F   	fcall	_LCD_WriteData
  4554                           
  4555                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  4556  0FE7  3015               	movlw	21
  4557  0FE8  00F5               	movwf	??_LCD_DisplayClear
  4558  0FE9  30C6               	movlw	198
  4559  0FEA                     u4087:	
  4560  0FEA  0B89               	decfsz	9,f
  4561  0FEB  2FEA               	goto	u4087
  4562  0FEC  0BF5               	decfsz	??_LCD_DisplayClear,f
  4563  0FED  2FEA               	goto	u4087
  4564  0FEE  3200               	nop2
  4565  0FEF  0008               	return
  4566  0FF0                     __end_of_LCD_DisplayClear:	
  4567                           
  4568                           	psect	text15
  4569  0794                     __ptext15:	
  4570 ;; *************** function _LCD_CursorPosition *****************
  4571 ;; Defined at:
  4572 ;;		line 86 in file "LCD.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  tx              1    wreg     unsigned char 
  4575 ;;  ty              1    5[COMMON] unsigned char 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  tx              1    7[COMMON] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0, pclath, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4587 ;;      Params:         1       0       0       0       0       0
  4588 ;;      Locals:         1       0       0       0       0       0
  4589 ;;      Temps:          1       0       0       0       0       0
  4590 ;;      Totals:         3       0       0       0       0       0
  4591 ;;Total ram usage:        3 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    4
  4594 ;; This function calls:
  4595 ;;		_LCD_WriteData
  4596 ;; This function is called by:
  4597 ;;		_main
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function _LCD_CursorPosition
  4603  0794                     _LCD_CursorPosition:	
  4604                           
  4605                           ;incstack = 0
  4606                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  4607                           ;LCD_CursorPosition@tx stored from wreg
  4608  0794  00F7               	movwf	LCD_CursorPosition@tx
  4609                           
  4610                           ;LCD.c: 88: LATA3 = 0;
  4611  0795  0022               	movlb	2	; select bank2
  4612  0796  118C               	bcf	12,3	;volatile
  4613                           
  4614                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  4615  0797  0875               	movf	LCD_CursorPosition@ty,w
  4616  0798  00F6               	movwf	??_LCD_CursorPosition
  4617  0799  3005               	movlw	5
  4618  079A                     u2755:	
  4619  079A  35F6               	lslf	??_LCD_CursorPosition,f
  4620  079B  3EFF               	addlw	-1
  4621  079C  1D03               	skipz
  4622  079D  2F9A               	goto	u2755
  4623  079E  3576               	lslf	??_LCD_CursorPosition,w
  4624  079F  0477               	iorwf	LCD_CursorPosition@tx,w
  4625  07A0  3880               	iorlw	-128
  4626  07A1  3185  25A1  3187   	fcall	_LCD_WriteData
  4627                           
  4628                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  4629  07A4  306A               	movlw	106
  4630  07A5                     u4097:	
  4631  07A5  0B89               	decfsz	9,f
  4632  07A6  2FA5               	goto	u4097
  4633  07A7  3200               	nop2
  4634  07A8  0008               	return
  4635  07A9                     __end_of_LCD_CursorPosition:	
  4636                           
  4637                           	psect	text16
  4638  05A1                     __ptext16:	
  4639 ;; *************** function _LCD_WriteData *****************
  4640 ;; Defined at:
  4641 ;;		line 15 in file "LCD.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  point           1    wreg     char 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  point           1    4[COMMON] char 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2, status,0
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4655 ;;      Params:         0       0       0       0       0       0
  4656 ;;      Locals:         1       0       0       0       0       0
  4657 ;;      Temps:          2       0       0       0       0       0
  4658 ;;      Totals:         3       0       0       0       0       0
  4659 ;;Total ram usage:        3 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    3
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_LCD_Init
  4666 ;;		_LCD_Put
  4667 ;;		_LCD_DisplayClear
  4668 ;;		_LCD_CursorPosition
  4669 ;;		_LCD_CursorHome
  4670 ;;		_LCD_CursorShift
  4671 ;;		_LCD_DispShift
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _LCD_WriteData
  4677  05A1                     _LCD_WriteData:	
  4678                           
  4679                           ;incstack = 0
  4680                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  4681                           ;LCD_WriteData@point stored from wreg
  4682  05A1  00F4               	movwf	LCD_WriteData@point
  4683                           
  4684                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  4685  05A2  30D5               	movlw	213
  4686  05A3                     u4107:	
  4687  05A3  0B89               	decfsz	9,f
  4688  05A4  2DA3               	goto	u4107
  4689  05A5  0000               	nop
  4690                           
  4691                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  4692  05A6  0874               	movf	LCD_WriteData@point,w
  4693  05A7  00F2               	movwf	??_LCD_WriteData
  4694  05A8  3004               	movlw	4
  4695  05A9                     u1755:	
  4696  05A9  1003               	clrc
  4697  05AA  1BF2               	btfsc	??_LCD_WriteData,7
  4698  05AB  1403               	setc
  4699  05AC  0CF2               	rrf	??_LCD_WriteData,f
  4700  05AD  0B89               	decfsz	9,f
  4701  05AE  2DA9               	goto	u1755
  4702  05AF  3003               	movlw	3
  4703  05B0  0572               	andwf	??_LCD_WriteData,w
  4704  05B1  00F3               	movwf	??_LCD_WriteData+1
  4705  05B2  0E74               	swapf	LCD_WriteData@point,w
  4706  05B3  390F               	andlw	15
  4707  05B4  1989               	btfsc	9,3
  4708  05B5  38F0               	iorlw	240
  4709  05B6  390C               	andlw	12
  4710  05B7  0709               	addwf	9,w
  4711  05B8  0473               	iorwf	??_LCD_WriteData+1,w
  4712  05B9  0020               	movlb	0	; select bank0
  4713  05BA  008D               	movwf	13	;volatile
  4714                           
  4715                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4716  05BB  0022               	movlb	2	; select bank2
  4717  05BC  160C               	bsf	12,4	;volatile
  4718  05BD  3200               	nop2	;2 cycle nop
  4719  05BE  3200               	nop2	;2 cycle nop
  4720  05BF  3200               	nop2	;2 cycle nop
  4721  05C0  3200               	nop2	;2 cycle nop
  4722  05C1  0022               	movlb	2	; select bank2
  4723  05C2  120C               	bcf	12,4	;volatile
  4724  05C3  3200               	nop2	;2 cycle nop
  4725  05C4  3200               	nop2	;2 cycle nop
  4726  05C5  3200               	nop2	;2 cycle nop
  4727  05C6  3200               	nop2	;2 cycle nop
  4728                           
  4729                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  4730  05C7  3003               	movlw	3
  4731  05C8  0574               	andwf	LCD_WriteData@point,w
  4732  05C9  00F2               	movwf	??_LCD_WriteData
  4733  05CA  0874               	movf	LCD_WriteData@point,w
  4734  05CB  390C               	andlw	12
  4735  05CC  0709               	addwf	9,w
  4736  05CD  0472               	iorwf	??_LCD_WriteData,w
  4737  05CE  0020               	movlb	0	; select bank0
  4738  05CF  008D               	movwf	13	;volatile
  4739                           
  4740                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  4741  05D0  0022               	movlb	2	; select bank2
  4742  05D1  160C               	bsf	12,4	;volatile
  4743  05D2  3200               	nop2	;2 cycle nop
  4744  05D3  3200               	nop2	;2 cycle nop
  4745  05D4  3200               	nop2	;2 cycle nop
  4746  05D5  3200               	nop2	;2 cycle nop
  4747  05D6  0022               	movlb	2	; select bank2
  4748  05D7  120C               	bcf	12,4	;volatile
  4749  05D8  3200               	nop2	;2 cycle nop
  4750  05D9  3200               	nop2	;2 cycle nop
  4751  05DA  3200               	nop2	;2 cycle nop
  4752  05DB  3200               	nop2	;2 cycle nop
  4753  05DC  0008               	return
  4754  05DD                     __end_of_LCD_WriteData:	
  4755                           
  4756                           	psect	text17
  4757  0741                     __ptext17:	
  4758 ;; *************** function _DAC_Initialize *****************
  4759 ;; Defined at:
  4760 ;;		line 14 in file "MCP4726.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      void 
  4767 ;; Registers used:
  4768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4774 ;;      Params:         0       0       0       0       0       0
  4775 ;;      Locals:         0       0       0       0       0       0
  4776 ;;      Temps:          0       2       0       0       0       0
  4777 ;;      Totals:         0       2       0       0       0       0
  4778 ;;Total ram usage:        2 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    6
  4781 ;; This function calls:
  4782 ;;		_I2C_Init
  4783 ;;		_I2C_Transmit
  4784 ;; This function is called by:
  4785 ;;		_main
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           
  4790                           ;psect for function _DAC_Initialize
  4791  0741                     _DAC_Initialize:	
  4792                           
  4793                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  4794                           
  4795                           ;incstack = 0
  4796                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4797  0741  01F7               	clrf	I2C_Init@address
  4798  0742  01F8               	clrf	I2C_Init@mode
  4799  0743  01F9               	clrf	I2C_Init@Speed
  4800  0744  3001               	movlw	1
  4801  0745  3186  26D0  3187   	fcall	_I2C_Init
  4802                           
  4803                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  4804  0748  0020               	movlb	0	; select bank0
  4805  0749  086E               	movf	_ConfigReg,w
  4806  074A  391F               	andlw	-225
  4807  074B  3880               	iorlw	128
  4808  074C  00EE               	movwf	_ConfigReg
  4809                           
  4810                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  4811  074D  106E               	bcf	_ConfigReg,0
  4812                           
  4813                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  4814  074E  30F9               	movlw	-7
  4815  074F  05EE               	andwf	_ConfigReg,f
  4816                           
  4817                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  4818  0750  30E7               	movlw	-25
  4819  0751  05EE               	andwf	_ConfigReg,f
  4820                           
  4821                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  4822  0752  3060               	movlw	96
  4823  0753  00A8               	movwf	??_DAC_Initialize
  4824  0754  0828               	movf	??_DAC_Initialize,w
  4825  0755  00A0               	movwf	I2C_Transmit@address
  4826  0756  306E               	movlw	(low (_ConfigReg| 0))& (0+255)
  4827  0757  00A9               	movwf	??_DAC_Initialize+1
  4828  0758  0829               	movf	??_DAC_Initialize+1,w
  4829  0759  00A1               	movwf	I2C_Transmit@pData
  4830  075A  01A2               	clrf	I2C_Transmit@size
  4831  075B  0AA2               	incf	I2C_Transmit@size,f
  4832  075C  3001               	movlw	1
  4833  075D  3186  26A5         	fcall	_I2C_Transmit
  4834  075F  0008               	return
  4835  0760                     __end_of_DAC_Initialize:	
  4836                           
  4837                           	psect	text18
  4838  06A5                     __ptext18:	
  4839 ;; *************** function _I2C_Transmit *****************
  4840 ;; Defined at:
  4841 ;;		line 23 in file "I2C_Common.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  I2Cx            1    wreg     enum E3062
  4844 ;;  address         1    0[BANK0 ] unsigned char 
  4845 ;;  pData           1    1[BANK0 ] PTR unsigned char 
  4846 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4847 ;;  size            1    2[BANK0 ] unsigned char 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  I2Cx            1    6[BANK0 ] enum E3062
  4850 ;;  result          1    7[BANK0 ] char 
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  1    wreg      char 
  4853 ;; Registers used:
  4854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4860 ;;      Params:         0       3       0       0       0       0
  4861 ;;      Locals:         0       2       0       0       0       0
  4862 ;;      Temps:          0       3       0       0       0       0
  4863 ;;      Totals:         0       8       0       0       0       0
  4864 ;;Total ram usage:        8 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    4
  4867 ;; This function calls:
  4868 ;;		_I2C1_Transmit
  4869 ;;		_I2C2_Transmit
  4870 ;; This function is called by:
  4871 ;;		_DAC_Initialize
  4872 ;;		_DAC_WriteVoltage
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           
  4877                           ;psect for function _I2C_Transmit
  4878  06A5                     _I2C_Transmit:	
  4879                           
  4880                           ;incstack = 0
  4881                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4882                           ;I2C_Transmit@I2Cx stored from wreg
  4883  06A5  0020               	movlb	0	; select bank0
  4884  06A6  00A6               	movwf	I2C_Transmit@I2Cx
  4885                           
  4886                           ;I2C_Common.c: 25: int8_t result;
  4887                           ;I2C_Common.c: 27: switch(I2Cx)
  4888  06A7  2EC6               	goto	l3879
  4889  06A8                     l3873:	
  4890                           ;I2C_Common.c: 28: {
  4891                           ;I2C_Common.c: 29: case I2C1_MODULE:
  4892                           
  4893                           
  4894                           ;I2C_Common.c: 30: result = I2C1_Transmit(address,pData,size);
  4895  06A8  0821               	movf	I2C_Transmit@pData,w
  4896  06A9  00A3               	movwf	??_I2C_Transmit
  4897  06AA  0823               	movf	??_I2C_Transmit,w
  4898  06AB  00F2               	movwf	I2C1_Transmit@pData
  4899  06AC  0822               	movf	I2C_Transmit@size,w
  4900  06AD  00A4               	movwf	??_I2C_Transmit+1
  4901  06AE  0824               	movf	??_I2C_Transmit+1,w
  4902  06AF  00F3               	movwf	I2C1_Transmit@size
  4903  06B0  0820               	movf	I2C_Transmit@address,w
  4904  06B1  3183  237A  3186   	fcall	_I2C1_Transmit
  4905  06B4  2EC1               	goto	L8
  4906  06B5                     l3875:	
  4907                           ;I2C_Common.c: 33: case I2C2_MODULE:
  4908                           
  4909                           ;I2C_Common.c: 31: break;
  4910                           
  4911                           
  4912                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  4913  06B5  0821               	movf	I2C_Transmit@pData,w
  4914  06B6  00A3               	movwf	??_I2C_Transmit
  4915  06B7  0823               	movf	??_I2C_Transmit,w
  4916  06B8  00F2               	movwf	I2C2_Transmit@pData
  4917  06B9  0822               	movf	I2C_Transmit@size,w
  4918  06BA  00A4               	movwf	??_I2C_Transmit+1
  4919  06BB  0824               	movf	??_I2C_Transmit+1,w
  4920  06BC  00F3               	movwf	I2C2_Transmit@size
  4921  06BD  0820               	movf	I2C_Transmit@address,w
  4922  06BE  3182  22FB  3186   	fcall	_I2C2_Transmit
  4923  06C1                     L8:	
  4924  06C1  0020               	movlb	0	; select bank0
  4925  06C2  00A5               	movwf	??_I2C_Transmit+2
  4926  06C3  0825               	movf	??_I2C_Transmit+2,w
  4927  06C4  00A7               	movwf	I2C_Transmit@result
  4928                           
  4929                           ;I2C_Common.c: 36: }
  4930                           
  4931                           ;I2C_Common.c: 35: break;
  4932  06C5  2ECE               	goto	l3881
  4933  06C6                     l3879:	
  4934  06C6  0826               	movf	I2C_Transmit@I2Cx,w
  4935                           
  4936                           ; Switch size 1, requested type "space"
  4937                           ; Number of cases is 2, Range of values is 0 to 1
  4938                           ; switch strategies available:
  4939                           ; Name         Instructions Cycles
  4940                           ; simple_byte            7     4 (average)
  4941                           ; direct_byte           10     6 (fixed)
  4942                           ; jumptable            260     6 (fixed)
  4943                           ;	Chosen strategy is simple_byte
  4944  06C7  3A00               	xorlw	0	; case 0
  4945  06C8  1903               	skipnz
  4946  06C9  2EA8               	goto	l3873
  4947  06CA  3A01               	xorlw	1	; case 1
  4948  06CB  1903               	skipnz
  4949  06CC  2EB5               	goto	l3875
  4950  06CD  2ECE               	goto	l3881
  4951  06CE                     l3881:	
  4952                           
  4953                           ;I2C_Common.c: 37: return result;
  4954  06CE  0827               	movf	I2C_Transmit@result,w
  4955  06CF  0008               	return
  4956  06D0                     __end_of_I2C_Transmit:	
  4957                           
  4958                           	psect	text19
  4959  02FB                     __ptext19:	
  4960 ;; *************** function _I2C2_Transmit *****************
  4961 ;; Defined at:
  4962 ;;		line 52 in file "I2C2.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  address         1    wreg     unsigned char 
  4965 ;;  pData           1    2[COMMON] PTR unsigned char 
  4966 ;;		 -> VoltageReg(2), ConfigReg(1), 
  4967 ;;  size            1    3[COMMON] unsigned char 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  address         1    6[COMMON] unsigned char 
  4970 ;;  i               1    8[COMMON] unsigned char 
  4971 ;;  i               1    7[COMMON] unsigned char 
  4972 ;;  result          1    9[COMMON] char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      char 
  4975 ;; Registers used:
  4976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4982 ;;      Params:         2       0       0       0       0       0
  4983 ;;      Locals:         4       0       0       0       0       0
  4984 ;;      Temps:          2       0       0       0       0       0
  4985 ;;      Totals:         8       0       0       0       0       0
  4986 ;;Total ram usage:        8 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    3
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_I2C_Transmit
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           
  4997                           ;psect for function _I2C2_Transmit
  4998  02FB                     _I2C2_Transmit:	
  4999                           
  5000                           ;incstack = 0
  5001                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  5002                           ;I2C2_Transmit@address stored from wreg
  5003  02FB  00F6               	movwf	I2C2_Transmit@address
  5004                           
  5005                           ;I2C2.c: 54: int8_t result = 0;
  5006  02FC  01F9               	clrf	I2C2_Transmit@result
  5007                           
  5008                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  5009  02FD  2B6F               	goto	l3647
  5010  02FE                     l3603:	
  5011                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5012                           
  5013                           ;I2C2.c: 57: {
  5014                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  5015                           
  5016  02FE  3005               	movlw	5
  5017  02FF  0024               	movlb	4	; select bank4
  5018  0300  051C               	andwf	28,w	;volatile
  5019  0301  00F4               	movwf	??_I2C2_Transmit
  5020  0302  081E               	movf	30,w	;volatile
  5021  0303  391F               	andlw	31
  5022  0304  0474               	iorwf	??_I2C2_Transmit,w
  5023  0305  1D03               	btfss	3,2
  5024  0306  2AFE               	goto	l3603
  5025                           
  5026                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  5027  0307  141E               	bsf	30,0	;volatile
  5028  0308                     l3605:	
  5029                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5030                           
  5031  0308  3005               	movlw	5
  5032  0309  051C               	andwf	28,w	;volatile
  5033  030A  00F4               	movwf	??_I2C2_Transmit
  5034  030B  081E               	movf	30,w	;volatile
  5035  030C  391F               	andlw	31
  5036  030D  0474               	iorwf	??_I2C2_Transmit,w
  5037  030E  1D03               	btfss	3,2
  5038  030F  2B08               	goto	l3605
  5039                           
  5040                           ;I2C2.c: 63: SSP2BUF = address << 1;
  5041  0310  3576               	lslf	I2C2_Transmit@address,w
  5042  0311  0099               	movwf	25	;volatile
  5043  0312                     l516:	
  5044                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  5045                           
  5046  0312  191C               	btfsc	28,2	;volatile
  5047  0313  2B12               	goto	l516
  5048                           
  5049                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  5050  0314  3000               	movlw	0
  5051  0315  1B1E               	btfsc	30,6	;volatile
  5052  0316  3001               	movlw	1
  5053  0317  00F9               	movwf	I2C2_Transmit@result
  5054                           
  5055                           ;I2C2.c: 67: if (!result)
  5056  0318  0879               	movf	I2C2_Transmit@result,w
  5057  0319  1D03               	btfss	3,2
  5058  031A  2B42               	goto	l3629
  5059                           
  5060                           ;I2C2.c: 68: {
  5061                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  5062  031B  01F7               	clrf	I2C2_Transmit@i
  5063  031C  2B21               	goto	l3627
  5064  031D                     l3625:	
  5065                           ;I2C2.c: 79: break;
  5066                           
  5067  031D  3001               	movlw	1
  5068  031E  00F4               	movwf	??_I2C2_Transmit
  5069  031F  0874               	movf	??_I2C2_Transmit,w
  5070  0320  07F7               	addwf	I2C2_Transmit@i,f
  5071  0321                     l3627:	
  5072  0321  0873               	movf	I2C2_Transmit@size,w
  5073  0322  0277               	subwf	I2C2_Transmit@i,w
  5074  0323  1803               	btfsc	3,0
  5075  0324  2B42               	goto	l3629
  5076  0325                     l3615:	
  5077                           ;I2C2.c: 70: {
  5078                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5079                           
  5080  0325  3005               	movlw	5
  5081  0326  051C               	andwf	28,w	;volatile
  5082  0327  00F4               	movwf	??_I2C2_Transmit
  5083  0328  081E               	movf	30,w	;volatile
  5084  0329  391F               	andlw	31
  5085  032A  0474               	iorwf	??_I2C2_Transmit,w
  5086  032B  1D03               	btfss	3,2
  5087  032C  2B25               	goto	l3615
  5088                           
  5089                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  5090  032D  0877               	movf	I2C2_Transmit@i,w
  5091  032E  0772               	addwf	I2C2_Transmit@pData,w
  5092  032F  00F4               	movwf	??_I2C2_Transmit
  5093  0330  0874               	movf	??_I2C2_Transmit,w
  5094  0331  0086               	movwf	6
  5095  0332  0187               	clrf	7
  5096  0333  0801               	movf	1,w
  5097  0334  0099               	movwf	25	;volatile
  5098  0335                     l525:	
  5099                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  5100                           
  5101  0335  191C               	btfsc	28,2	;volatile
  5102  0336  2B35               	goto	l525
  5103                           
  5104                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  5105  0337  3000               	movlw	0
  5106  0338  1B1E               	btfsc	30,6	;volatile
  5107  0339  3001               	movlw	1
  5108  033A  00F9               	movwf	I2C2_Transmit@result
  5109                           
  5110                           ;I2C2.c: 76: if (result)
  5111  033B  0879               	movf	I2C2_Transmit@result,w
  5112  033C  1903               	btfsc	3,2
  5113  033D  2B1D               	goto	l3625
  5114                           
  5115                           ;I2C2.c: 77: {
  5116                           ;I2C2.c: 78: result = 2;
  5117  033E  3002               	movlw	2
  5118  033F  00F4               	movwf	??_I2C2_Transmit
  5119  0340  0874               	movf	??_I2C2_Transmit,w
  5120  0341  00F9               	movwf	I2C2_Transmit@result
  5121  0342                     l3629:	
  5122                           ;I2C2.c: 80: }
  5123                           ;I2C2.c: 81: }
  5124                           ;I2C2.c: 82: }
  5125                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  5126                           
  5127  0342  3005               	movlw	5
  5128  0343  051C               	andwf	28,w	;volatile
  5129  0344  00F4               	movwf	??_I2C2_Transmit
  5130  0345  081E               	movf	30,w	;volatile
  5131  0346  391F               	andlw	31
  5132  0347  0474               	iorwf	??_I2C2_Transmit,w
  5133  0348  1D03               	btfss	3,2
  5134  0349  2B42               	goto	l3629
  5135                           
  5136                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  5137  034A  151E               	bsf	30,2	;volatile
  5138                           
  5139                           ;I2C2.c: 86: break;
  5140  034B  2B78               	goto	l3649
  5141  034C                     l534:	
  5142                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  5143                           
  5144                           
  5145                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  5146  034C  0024               	movlb	4	; select bank4
  5147  034D  1D9C               	btfss	28,3	;volatile
  5148  034E  1E1C               	btfss	28,4	;volatile
  5149  034F  2B6D               	goto	l3643
  5150                           
  5151                           ;I2C2.c: 90: {
  5152                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  5153  0350  01F8               	clrf	I2C2_Transmit@i_560
  5154  0351                     l3639:	
  5155  0351  0873               	movf	I2C2_Transmit@size,w
  5156  0352  0278               	subwf	I2C2_Transmit@i_560,w
  5157  0353  1803               	btfsc	3,0
  5158  0354  2B68               	goto	l3641
  5159                           
  5160                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  5161  0355  0878               	movf	I2C2_Transmit@i_560,w
  5162  0356  0772               	addwf	I2C2_Transmit@pData,w
  5163  0357  00F4               	movwf	??_I2C2_Transmit
  5164  0358  0874               	movf	??_I2C2_Transmit,w
  5165  0359  0086               	movwf	6
  5166  035A  0187               	clrf	7
  5167  035B  0801               	movf	1,w
  5168  035C  00F5               	movwf	??_I2C2_Transmit+1
  5169  035D  0878               	movf	I2C2_Transmit@i_560,w
  5170  035E  3EA6               	addlw	(low (_I2C2_Config| 0))& (0+255)
  5171  035F  0086               	movwf	6
  5172  0360  0187               	clrf	7
  5173  0361  0875               	movf	??_I2C2_Transmit+1,w
  5174  0362  0081               	movwf	1
  5175  0363  3001               	movlw	1
  5176  0364  00F4               	movwf	??_I2C2_Transmit
  5177  0365  0874               	movf	??_I2C2_Transmit,w
  5178  0366  07F8               	addwf	I2C2_Transmit@i_560,f
  5179  0367  2B51               	goto	l3639
  5180  0368                     l3641:	
  5181                           
  5182                           ;I2C2.c: 93: result = size;
  5183  0368  0873               	movf	I2C2_Transmit@size,w
  5184  0369  00F4               	movwf	??_I2C2_Transmit
  5185  036A  0874               	movf	??_I2C2_Transmit,w
  5186  036B  00F9               	movwf	I2C2_Transmit@result
  5187                           
  5188                           ;I2C2.c: 94: }
  5189  036C  2B78               	goto	l3649
  5190  036D                     l3643:	
  5191                           
  5192                           ;I2C2.c: 95: else
  5193                           ;I2C2.c: 96: result = 0;
  5194  036D  01F9               	clrf	I2C2_Transmit@result
  5195                           
  5196                           ;I2C2.c: 98: }
  5197                           
  5198                           ;I2C2.c: 97: break;
  5199  036E  2B78               	goto	l3649
  5200  036F                     l3647:	
  5201  036F  0021               	movlb	1	; select bank1
  5202  0370  0838               	movf	(_I2C2_Config^(0+128)+18),w
  5203                           
  5204                           ; Switch size 1, requested type "space"
  5205                           ; Number of cases is 2, Range of values is 0 to 1
  5206                           ; switch strategies available:
  5207                           ; Name         Instructions Cycles
  5208                           ; simple_byte            7     4 (average)
  5209                           ; direct_byte           10     6 (fixed)
  5210                           ; jumptable            260     6 (fixed)
  5211                           ;	Chosen strategy is simple_byte
  5212  0371  3A00               	xorlw	0	; case 0
  5213  0372  1903               	skipnz
  5214  0373  2AFE               	goto	l3603
  5215  0374  3A01               	xorlw	1	; case 1
  5216  0375  1903               	skipnz
  5217  0376  2B4C               	goto	l534
  5218  0377  2B78               	goto	l3649
  5219  0378                     l3649:	
  5220                           
  5221                           ;I2C2.c: 100: return result;
  5222  0378  0879               	movf	I2C2_Transmit@result,w
  5223  0379  0008               	return
  5224  037A                     __end_of_I2C2_Transmit:	
  5225                           
  5226                           	psect	text20
  5227  037A                     __ptext20:	
  5228 ;; *************** function _I2C1_Transmit *****************
  5229 ;; Defined at:
  5230 ;;		line 52 in file "I2C1.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  address         1    wreg     unsigned char 
  5233 ;;  pData           1    2[COMMON] PTR unsigned char 
  5234 ;;		 -> VoltageReg(2), ConfigReg(1), 
  5235 ;;  size            1    3[COMMON] unsigned char 
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;  address         1    6[COMMON] unsigned char 
  5238 ;;  i               1    8[COMMON] unsigned char 
  5239 ;;  i               1    7[COMMON] unsigned char 
  5240 ;;  result          1    9[COMMON] char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1    wreg      char 
  5243 ;; Registers used:
  5244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5250 ;;      Params:         2       0       0       0       0       0
  5251 ;;      Locals:         4       0       0       0       0       0
  5252 ;;      Temps:          2       0       0       0       0       0
  5253 ;;      Totals:         8       0       0       0       0       0
  5254 ;;Total ram usage:        8 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    3
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_I2C_Transmit
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           
  5265                           ;psect for function _I2C1_Transmit
  5266  037A                     _I2C1_Transmit:	
  5267                           
  5268                           ;incstack = 0
  5269                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  5270                           ;I2C1_Transmit@address stored from wreg
  5271  037A  00F6               	movwf	I2C1_Transmit@address
  5272                           
  5273                           ;I2C1.c: 54: int8_t result;
  5274                           ;I2C1.c: 56: switch(I2C1_Config.Mode)
  5275  037B  2BED               	goto	l3595
  5276  037C                     l3551:	
  5277                           ;I2C1.c: 59: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5278                           
  5279                           ;I2C1.c: 57: {
  5280                           ;I2C1.c: 58: case I2C_MODE_MASTER:
  5281                           
  5282  037C  3005               	movlw	5
  5283  037D  0024               	movlb	4	; select bank4
  5284  037E  0514               	andwf	20,w	;volatile
  5285  037F  00F4               	movwf	??_I2C1_Transmit
  5286  0380  0816               	movf	22,w	;volatile
  5287  0381  391F               	andlw	31
  5288  0382  0474               	iorwf	??_I2C1_Transmit,w
  5289  0383  1D03               	btfss	3,2
  5290  0384  2B7C               	goto	l3551
  5291                           
  5292                           ;I2C1.c: 60: SSP1CON2bits.SEN = 1;
  5293  0385  1416               	bsf	22,0	;volatile
  5294  0386                     l3553:	
  5295                           ;I2C1.c: 62: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5296                           
  5297  0386  3005               	movlw	5
  5298  0387  0514               	andwf	20,w	;volatile
  5299  0388  00F4               	movwf	??_I2C1_Transmit
  5300  0389  0816               	movf	22,w	;volatile
  5301  038A  391F               	andlw	31
  5302  038B  0474               	iorwf	??_I2C1_Transmit,w
  5303  038C  1D03               	btfss	3,2
  5304  038D  2B86               	goto	l3553
  5305                           
  5306                           ;I2C1.c: 63: SSP1BUF = address << 1;
  5307  038E  3576               	lslf	I2C1_Transmit@address,w
  5308  038F  0091               	movwf	17	;volatile
  5309  0390                     l379:	
  5310                           ;I2C1.c: 64: while(SSP1STATbits.R_nW);
  5311                           
  5312  0390  1914               	btfsc	20,2	;volatile
  5313  0391  2B90               	goto	l379
  5314                           
  5315                           ;I2C1.c: 66: result = SSP1CON2bits.ACKSTAT;
  5316  0392  3000               	movlw	0
  5317  0393  1B16               	btfsc	22,6	;volatile
  5318  0394  3001               	movlw	1
  5319  0395  00F9               	movwf	I2C1_Transmit@result
  5320                           
  5321                           ;I2C1.c: 67: if (!result)
  5322  0396  0879               	movf	I2C1_Transmit@result,w
  5323  0397  1D03               	btfss	3,2
  5324  0398  2BC0               	goto	l3577
  5325                           
  5326                           ;I2C1.c: 68: {
  5327                           ;I2C1.c: 69: for(uint8_t i=0;i<size;i++)
  5328  0399  01F7               	clrf	I2C1_Transmit@i
  5329  039A  2B9F               	goto	l3575
  5330  039B                     l3573:	
  5331                           ;I2C1.c: 79: break;
  5332                           
  5333  039B  3001               	movlw	1
  5334  039C  00F4               	movwf	??_I2C1_Transmit
  5335  039D  0874               	movf	??_I2C1_Transmit,w
  5336  039E  07F7               	addwf	I2C1_Transmit@i,f
  5337  039F                     l3575:	
  5338  039F  0873               	movf	I2C1_Transmit@size,w
  5339  03A0  0277               	subwf	I2C1_Transmit@i,w
  5340  03A1  1803               	btfsc	3,0
  5341  03A2  2BC0               	goto	l3577
  5342  03A3                     l3563:	
  5343                           ;I2C1.c: 70: {
  5344                           ;I2C1.c: 71: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5345                           
  5346  03A3  3005               	movlw	5
  5347  03A4  0514               	andwf	20,w	;volatile
  5348  03A5  00F4               	movwf	??_I2C1_Transmit
  5349  03A6  0816               	movf	22,w	;volatile
  5350  03A7  391F               	andlw	31
  5351  03A8  0474               	iorwf	??_I2C1_Transmit,w
  5352  03A9  1D03               	btfss	3,2
  5353  03AA  2BA3               	goto	l3563
  5354                           
  5355                           ;I2C1.c: 72: SSP1BUF = *(pData+i);
  5356  03AB  0877               	movf	I2C1_Transmit@i,w
  5357  03AC  0772               	addwf	I2C1_Transmit@pData,w
  5358  03AD  00F4               	movwf	??_I2C1_Transmit
  5359  03AE  0874               	movf	??_I2C1_Transmit,w
  5360  03AF  0086               	movwf	6
  5361  03B0  0187               	clrf	7
  5362  03B1  0801               	movf	1,w
  5363  03B2  0091               	movwf	17	;volatile
  5364  03B3                     l388:	
  5365                           ;I2C1.c: 73: while(SSP1STATbits.R_nW);
  5366                           
  5367  03B3  1914               	btfsc	20,2	;volatile
  5368  03B4  2BB3               	goto	l388
  5369                           
  5370                           ;I2C1.c: 75: result = SSP1CON2bits.ACKSTAT;
  5371  03B5  3000               	movlw	0
  5372  03B6  1B16               	btfsc	22,6	;volatile
  5373  03B7  3001               	movlw	1
  5374  03B8  00F9               	movwf	I2C1_Transmit@result
  5375                           
  5376                           ;I2C1.c: 76: if (result)
  5377  03B9  0879               	movf	I2C1_Transmit@result,w
  5378  03BA  1903               	btfsc	3,2
  5379  03BB  2B9B               	goto	l3573
  5380                           
  5381                           ;I2C1.c: 77: {
  5382                           ;I2C1.c: 78: result = 2;
  5383  03BC  3002               	movlw	2
  5384  03BD  00F4               	movwf	??_I2C1_Transmit
  5385  03BE  0874               	movf	??_I2C1_Transmit,w
  5386  03BF  00F9               	movwf	I2C1_Transmit@result
  5387  03C0                     l3577:	
  5388                           ;I2C1.c: 80: }
  5389                           ;I2C1.c: 81: }
  5390                           ;I2C1.c: 82: }
  5391                           ;I2C1.c: 84: while((SSP1CON2&0x1F)|(SSP1STAT&0x05));
  5392                           
  5393  03C0  3005               	movlw	5
  5394  03C1  0514               	andwf	20,w	;volatile
  5395  03C2  00F4               	movwf	??_I2C1_Transmit
  5396  03C3  0816               	movf	22,w	;volatile
  5397  03C4  391F               	andlw	31
  5398  03C5  0474               	iorwf	??_I2C1_Transmit,w
  5399  03C6  1D03               	btfss	3,2
  5400  03C7  2BC0               	goto	l3577
  5401                           
  5402                           ;I2C1.c: 85: SSP1CON2bits.PEN = 1;
  5403  03C8  1516               	bsf	22,2	;volatile
  5404                           
  5405                           ;I2C1.c: 86: break;
  5406  03C9  2BF6               	goto	l3597
  5407  03CA                     l397:	
  5408                           ;I2C1.c: 88: case I2C_MODE_SLAVE:
  5409                           
  5410                           
  5411                           ;I2C1.c: 89: if((SSP1STATbits.S==0)&&(SSP1STATbits.P==1))
  5412  03CA  0024               	movlb	4	; select bank4
  5413  03CB  1D94               	btfss	20,3	;volatile
  5414  03CC  1E14               	btfss	20,4	;volatile
  5415  03CD  2BEB               	goto	l3591
  5416                           
  5417                           ;I2C1.c: 90: {
  5418                           ;I2C1.c: 91: for(uint8_t i = 0;i<size;i++)
  5419  03CE  01F8               	clrf	I2C1_Transmit@i_416
  5420  03CF                     l3587:	
  5421  03CF  0873               	movf	I2C1_Transmit@size,w
  5422  03D0  0278               	subwf	I2C1_Transmit@i_416,w
  5423  03D1  1803               	btfsc	3,0
  5424  03D2  2BE6               	goto	l3589
  5425                           
  5426                           ;I2C1.c: 92: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  5427  03D3  0878               	movf	I2C1_Transmit@i_416,w
  5428  03D4  0772               	addwf	I2C1_Transmit@pData,w
  5429  03D5  00F4               	movwf	??_I2C1_Transmit
  5430  03D6  0874               	movf	??_I2C1_Transmit,w
  5431  03D7  0086               	movwf	6
  5432  03D8  0187               	clrf	7
  5433  03D9  0801               	movf	1,w
  5434  03DA  00F5               	movwf	??_I2C1_Transmit+1
  5435  03DB  0878               	movf	I2C1_Transmit@i_416,w
  5436  03DC  3EB9               	addlw	(low (_I2C1_Config| 0))& (0+255)
  5437  03DD  0086               	movwf	6
  5438  03DE  0187               	clrf	7
  5439  03DF  0875               	movf	??_I2C1_Transmit+1,w
  5440  03E0  0081               	movwf	1
  5441  03E1  3001               	movlw	1
  5442  03E2  00F4               	movwf	??_I2C1_Transmit
  5443  03E3  0874               	movf	??_I2C1_Transmit,w
  5444  03E4  07F8               	addwf	I2C1_Transmit@i_416,f
  5445  03E5  2BCF               	goto	l3587
  5446  03E6                     l3589:	
  5447                           
  5448                           ;I2C1.c: 93: result = size;
  5449  03E6  0873               	movf	I2C1_Transmit@size,w
  5450  03E7  00F4               	movwf	??_I2C1_Transmit
  5451  03E8  0874               	movf	??_I2C1_Transmit,w
  5452  03E9  00F9               	movwf	I2C1_Transmit@result
  5453                           
  5454                           ;I2C1.c: 94: }
  5455  03EA  2BF6               	goto	l3597
  5456  03EB                     l3591:	
  5457                           
  5458                           ;I2C1.c: 95: else
  5459                           ;I2C1.c: 96: result = 0;
  5460  03EB  01F9               	clrf	I2C1_Transmit@result
  5461                           
  5462                           ;I2C1.c: 98: }
  5463                           
  5464                           ;I2C1.c: 97: break;
  5465  03EC  2BF6               	goto	l3597
  5466  03ED                     l3595:	
  5467  03ED  0021               	movlb	1	; select bank1
  5468  03EE  084B               	movf	(_I2C1_Config^(0+128)+18),w
  5469                           
  5470                           ; Switch size 1, requested type "space"
  5471                           ; Number of cases is 2, Range of values is 0 to 1
  5472                           ; switch strategies available:
  5473                           ; Name         Instructions Cycles
  5474                           ; simple_byte            7     4 (average)
  5475                           ; direct_byte           10     6 (fixed)
  5476                           ; jumptable            260     6 (fixed)
  5477                           ;	Chosen strategy is simple_byte
  5478  03EF  3A00               	xorlw	0	; case 0
  5479  03F0  1903               	skipnz
  5480  03F1  2B7C               	goto	l3551
  5481  03F2  3A01               	xorlw	1	; case 1
  5482  03F3  1903               	skipnz
  5483  03F4  2BCA               	goto	l397
  5484  03F5  2BF6               	goto	l3597
  5485  03F6                     l3597:	
  5486                           
  5487                           ;I2C1.c: 100: return result;
  5488  03F6  0879               	movf	I2C1_Transmit@result,w
  5489  03F7  0008               	return
  5490  03F8                     __end_of_I2C1_Transmit:	
  5491                           
  5492                           	psect	text21
  5493  06D0                     __ptext21:	
  5494 ;; *************** function _I2C_Init *****************
  5495 ;; Defined at:
  5496 ;;		line 6 in file "I2C_Common.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  I2Cx            1    wreg     enum E3062
  5499 ;;  address         1    7[COMMON] unsigned char 
  5500 ;;  mode            1    8[COMMON] enum E3053
  5501 ;;  Speed           1    9[COMMON] enum E3057
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  I2Cx            1    2[BANK0 ] enum E3062
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  1    wreg      void 
  5506 ;; Registers used:
  5507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5513 ;;      Params:         3       0       0       0       0       0
  5514 ;;      Locals:         0       1       0       0       0       0
  5515 ;;      Temps:          0       2       0       0       0       0
  5516 ;;      Totals:         3       3       0       0       0       0
  5517 ;;Total ram usage:        6 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:    5
  5520 ;; This function calls:
  5521 ;;		_I2C1_Setting
  5522 ;;		_I2C2_Setting
  5523 ;; This function is called by:
  5524 ;;		_DAC_Initialize
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           
  5529                           ;psect for function _I2C_Init
  5530  06D0                     _I2C_Init:	
  5531                           
  5532                           ;incstack = 0
  5533                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5534                           ;I2C_Init@I2Cx stored from wreg
  5535  06D0  0020               	movlb	0	; select bank0
  5536  06D1  00A2               	movwf	I2C_Init@I2Cx
  5537                           
  5538                           ;I2C_Common.c: 8: switch(I2Cx)
  5539  06D2  2EEE               	goto	l3869
  5540  06D3                     l3863:	
  5541                           ;I2C_Common.c: 9: {
  5542                           ;I2C_Common.c: 10: case I2C1_MODULE:
  5543                           
  5544                           
  5545                           ;I2C_Common.c: 11: I2C1_Setting(address,mode,Speed);
  5546  06D3  0878               	movf	I2C_Init@mode,w
  5547  06D4  00A0               	movwf	??_I2C_Init
  5548  06D5  0820               	movf	??_I2C_Init,w
  5549  06D6  00F3               	movwf	I2C1_Setting@mode
  5550  06D7  0879               	movf	I2C_Init@Speed,w
  5551  06D8  00A1               	movwf	??_I2C_Init+1
  5552  06D9  0821               	movf	??_I2C_Init+1,w
  5553  06DA  00F4               	movwf	I2C1_Setting@Speed
  5554  06DB  0877               	movf	I2C_Init@address,w
  5555  06DC  3186  2615  3186   	fcall	_I2C1_Setting
  5556                           
  5557                           ;I2C_Common.c: 12: break;
  5558  06DF  2EF7               	goto	l626
  5559  06E0                     l3865:	
  5560                           ;I2C_Common.c: 14: case I2C2_MODULE:
  5561                           
  5562                           
  5563                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  5564  06E0  0878               	movf	I2C_Init@mode,w
  5565  06E1  0020               	movlb	0	; select bank0
  5566  06E2  00A0               	movwf	??_I2C_Init
  5567  06E3  0820               	movf	??_I2C_Init,w
  5568  06E4  00F3               	movwf	I2C2_Setting@mode
  5569  06E5  0879               	movf	I2C_Init@Speed,w
  5570  06E6  00A1               	movwf	??_I2C_Init+1
  5571  06E7  0821               	movf	??_I2C_Init+1,w
  5572  06E8  00F4               	movwf	I2C2_Setting@Speed
  5573  06E9  0877               	movf	I2C_Init@address,w
  5574  06EA  3185  25DD  3186   	fcall	_I2C2_Setting
  5575                           
  5576                           ;I2C_Common.c: 17: }
  5577                           
  5578                           ;I2C_Common.c: 16: break;
  5579  06ED  2EF7               	goto	l626
  5580  06EE                     l3869:	
  5581  06EE  0020               	movlb	0	; select bank0
  5582  06EF  0822               	movf	I2C_Init@I2Cx,w
  5583                           
  5584                           ; Switch size 1, requested type "space"
  5585                           ; Number of cases is 2, Range of values is 0 to 1
  5586                           ; switch strategies available:
  5587                           ; Name         Instructions Cycles
  5588                           ; simple_byte            7     4 (average)
  5589                           ; direct_byte           10     6 (fixed)
  5590                           ; jumptable            260     6 (fixed)
  5591                           ;	Chosen strategy is simple_byte
  5592  06F0  3A00               	xorlw	0	; case 0
  5593  06F1  1903               	skipnz
  5594  06F2  2ED3               	goto	l3863
  5595  06F3  3A01               	xorlw	1	; case 1
  5596  06F4  1903               	skipnz
  5597  06F5  2EE0               	goto	l3865
  5598  06F6  2EF7               	goto	l626
  5599  06F7                     l626:	
  5600                           
  5601                           ;I2C_Common.c: 19: PEIE = 1;
  5602  06F7  170B               	bsf	11,6	;volatile
  5603                           
  5604                           ;I2C_Common.c: 20: GIE = 1;
  5605  06F8  178B               	bsf	11,7	;volatile
  5606  06F9  0008               	return
  5607  06FA                     __end_of_I2C_Init:	
  5608                           
  5609                           	psect	text22
  5610  05DD                     __ptext22:	
  5611 ;; *************** function _I2C2_Setting *****************
  5612 ;; Defined at:
  5613 ;;		line 15 in file "I2C2.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  address         1    wreg     unsigned char 
  5616 ;;  mode            1    3[COMMON] enum E3053
  5617 ;;  Speed           1    4[COMMON] enum E3057
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  address         1    6[COMMON] unsigned char 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5629 ;;      Params:         2       0       0       0       0       0
  5630 ;;      Locals:         1       0       0       0       0       0
  5631 ;;      Temps:          1       0       0       0       0       0
  5632 ;;      Totals:         4       0       0       0       0       0
  5633 ;;Total ram usage:        4 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    4
  5636 ;; This function calls:
  5637 ;;		_I2C2_PinInit
  5638 ;; This function is called by:
  5639 ;;		_I2C_Init
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           
  5644                           ;psect for function _I2C2_Setting
  5645  05DD                     _I2C2_Setting:	
  5646                           
  5647                           ;incstack = 0
  5648                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5649                           ;I2C2_Setting@address stored from wreg
  5650  05DD  00F6               	movwf	I2C2_Setting@address
  5651                           
  5652                           ;I2C2.c: 17: I2C2_PinInit();
  5653  05DE  318F  27D6  3185   	fcall	_I2C2_PinInit
  5654                           
  5655                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  5656  05E1  0873               	movf	I2C2_Setting@mode,w
  5657  05E2  00F5               	movwf	??_I2C2_Setting
  5658  05E3  0875               	movf	??_I2C2_Setting,w
  5659  05E4  0021               	movlb	1	; select bank1
  5660  05E5  00B8               	movwf	(_I2C2_Config^(0+128)+18)
  5661                           
  5662                           ;I2C2.c: 20: switch(mode)
  5663  05E6  2E06               	goto	l2631
  5664  05E7                     l499:	
  5665                           ;I2C2.c: 21: {
  5666                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  5667                           
  5668                           
  5669                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  5670  05E7  0024               	movlb	4	; select bank4
  5671  05E8  159D               	bsf	29,3	;volatile
  5672                           
  5673                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5674  05E9  0874               	movf	I2C2_Setting@Speed,w
  5675  05EA  1D03               	btfss	3,2
  5676  05EB  2DEF               	goto	l2609
  5677                           
  5678                           ;I2C2.c: 25: {
  5679                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  5680  05EC  179C               	bsf	28,7	;volatile
  5681                           
  5682                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  5683  05ED  304F               	movlw	79
  5684  05EE  2DF7               	goto	L9
  5685  05EF                     l2609:	
  5686                           ;I2C2.c: 28: }
  5687                           
  5688                           
  5689                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5690  05EF  0374               	decf	I2C2_Setting@Speed,w
  5691  05F0  1D03               	btfss	3,2
  5692  05F1  2E04               	goto	l2627
  5693                           
  5694                           ;I2C2.c: 30: {
  5695                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  5696  05F2  307F               	movlw	127
  5697  05F3  00F5               	movwf	??_I2C2_Setting
  5698  05F4  0875               	movf	??_I2C2_Setting,w
  5699  05F5  059C               	andwf	28,f	;volatile
  5700                           
  5701                           ;I2C2.c: 32: SSP2ADD = 0x13;
  5702  05F6  3013               	movlw	19
  5703  05F7                     L9:	
  5704  05F7  009A               	movwf	26	;volatile
  5705  05F8  2E04               	goto	l2627
  5706  05F9                     l2617:	
  5707                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  5708                           
  5709                           ;I2C2.c: 35: break;
  5710                           
  5711                           ;I2C2.c: 33: }
  5712                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  5713                           
  5714                           
  5715                           ;I2C2.c: 38: SSP2STAT = 0x00;
  5716  05F9  0024               	movlb	4	; select bank4
  5717  05FA  019C               	clrf	28	;volatile
  5718                           
  5719                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  5720  05FB  3006               	movlw	6
  5721  05FC  00F5               	movwf	??_I2C2_Setting
  5722  05FD  0875               	movf	??_I2C2_Setting,w
  5723  05FE  049D               	iorwf	29,f	;volatile
  5724                           
  5725                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  5726  05FF  141E               	bsf	30,0	;volatile
  5727                           
  5728                           ;I2C2.c: 41: SSP2ADD = address << 1;
  5729  0600  3576               	lslf	I2C2_Setting@address,w
  5730  0601  009A               	movwf	26	;volatile
  5731                           
  5732                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  5733  0602  30FE               	movlw	254
  5734  0603  009B               	movwf	27	;volatile
  5735  0604                     l2627:	
  5736                           
  5737                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  5738  0604  169D               	bsf	29,5	;volatile
  5739                           
  5740                           ;I2C2.c: 45: }
  5741                           
  5742                           ;I2C2.c: 44: break;
  5743  0605  2E0E               	goto	l503
  5744  0606                     l2631:	
  5745  0606  0873               	movf	I2C2_Setting@mode,w
  5746                           
  5747                           ; Switch size 1, requested type "space"
  5748                           ; Number of cases is 2, Range of values is 0 to 1
  5749                           ; switch strategies available:
  5750                           ; Name         Instructions Cycles
  5751                           ; simple_byte            7     4 (average)
  5752                           ; direct_byte           10     6 (fixed)
  5753                           ; jumptable            260     6 (fixed)
  5754                           ;	Chosen strategy is simple_byte
  5755  0607  3A00               	xorlw	0	; case 0
  5756  0608  1903               	skipnz
  5757  0609  2DE7               	goto	l499
  5758  060A  3A01               	xorlw	1	; case 1
  5759  060B  1903               	skipnz
  5760  060C  2DF9               	goto	l2617
  5761  060D  2E0E               	goto	l503
  5762  060E                     l503:	
  5763                           
  5764                           ;I2C2.c: 46: SSP2IE = 1;
  5765  060E  0021               	movlb	1	; select bank1
  5766  060F  1414               	bsf	20,0	;volatile
  5767                           
  5768                           ;I2C2.c: 47: BCL2IE = 1;
  5769  0610  1494               	bsf	20,1	;volatile
  5770                           
  5771                           ;I2C2.c: 48: SSP2IF = 0;
  5772  0611  0020               	movlb	0	; select bank0
  5773  0612  1014               	bcf	20,0	;volatile
  5774                           
  5775                           ;I2C2.c: 49: BCL2IF = 0;
  5776  0613  1094               	bcf	20,1	;volatile
  5777  0614  0008               	return
  5778  0615                     __end_of_I2C2_Setting:	
  5779                           
  5780                           	psect	text23
  5781  0FD6                     __ptext23:	
  5782 ;; *************** function _I2C2_PinInit *****************
  5783 ;; Defined at:
  5784 ;;		line 9 in file "I2C2.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;		None
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;		None
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  1    wreg      void 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5798 ;;      Params:         0       0       0       0       0       0
  5799 ;;      Locals:         0       0       0       0       0       0
  5800 ;;      Temps:          1       0       0       0       0       0
  5801 ;;      Totals:         1       0       0       0       0       0
  5802 ;;Total ram usage:        1 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    3
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_I2C2_Setting
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           
  5813                           ;psect for function _I2C2_PinInit
  5814  0FD6                     _I2C2_PinInit:	
  5815                           
  5816                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  5817                           
  5818                           ;incstack = 0
  5819                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  5820  0FD6  3024               	movlw	36
  5821  0FD7  00F2               	movwf	??_I2C2_PinInit
  5822  0FD8  0872               	movf	??_I2C2_PinInit,w
  5823  0FD9  0021               	movlb	1	; select bank1
  5824  0FDA  048D               	iorwf	13,f	;volatile
  5825                           
  5826                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  5827  0FDB  30DB               	movlw	219
  5828  0FDC  00F2               	movwf	??_I2C2_PinInit
  5829  0FDD  0872               	movf	??_I2C2_PinInit,w
  5830  0FDE  0023               	movlb	3	; select bank3
  5831  0FDF  058D               	andwf	13,f	;volatile
  5832  0FE0  0008               	return
  5833  0FE1                     __end_of_I2C2_PinInit:	
  5834                           
  5835                           	psect	text24
  5836  0615                     __ptext24:	
  5837 ;; *************** function _I2C1_Setting *****************
  5838 ;; Defined at:
  5839 ;;		line 15 in file "I2C1.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  address         1    wreg     unsigned char 
  5842 ;;  mode            1    3[COMMON] enum E3053
  5843 ;;  Speed           1    4[COMMON] enum E3057
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  address         1    6[COMMON] unsigned char 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      void 
  5848 ;; Registers used:
  5849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5855 ;;      Params:         2       0       0       0       0       0
  5856 ;;      Locals:         1       0       0       0       0       0
  5857 ;;      Temps:          1       0       0       0       0       0
  5858 ;;      Totals:         4       0       0       0       0       0
  5859 ;;Total ram usage:        4 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    4
  5862 ;; This function calls:
  5863 ;;		_I2C1_PinInit
  5864 ;; This function is called by:
  5865 ;;		_I2C_Init
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           
  5870                           ;psect for function _I2C1_Setting
  5871  0615                     _I2C1_Setting:	
  5872                           
  5873                           ;incstack = 0
  5874                           ; Regs used in _I2C1_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5875                           ;I2C1_Setting@address stored from wreg
  5876  0615  00F6               	movwf	I2C1_Setting@address
  5877                           
  5878                           ;I2C1.c: 17: I2C1_PinInit();
  5879  0616  318F  27CB  3186   	fcall	_I2C1_PinInit
  5880                           
  5881                           ;I2C1.c: 18: I2C1_Config.Mode = mode;
  5882  0619  0873               	movf	I2C1_Setting@mode,w
  5883  061A  00F5               	movwf	??_I2C1_Setting
  5884  061B  0875               	movf	??_I2C1_Setting,w
  5885  061C  0021               	movlb	1	; select bank1
  5886  061D  00CB               	movwf	(_I2C1_Config^(0+128)+18)
  5887                           
  5888                           ;I2C1.c: 20: switch(mode)
  5889  061E  2E3E               	goto	l2545
  5890  061F                     l362:	
  5891                           ;I2C1.c: 21: {
  5892                           ;I2C1.c: 22: case I2C_MODE_MASTER:
  5893                           
  5894                           
  5895                           ;I2C1.c: 23: SSP1CON1 |= (0x08<<0);
  5896  061F  0024               	movlb	4	; select bank4
  5897  0620  1595               	bsf	21,3	;volatile
  5898                           
  5899                           ;I2C1.c: 24: if(Speed==I2C_SPEED_STANDARD)
  5900  0621  0874               	movf	I2C1_Setting@Speed,w
  5901  0622  1D03               	btfss	3,2
  5902  0623  2E27               	goto	l2523
  5903                           
  5904                           ;I2C1.c: 25: {
  5905                           ;I2C1.c: 26: SSP1STAT |= (1<<7);
  5906  0624  1794               	bsf	20,7	;volatile
  5907                           
  5908                           ;I2C1.c: 27: SSP1ADD = 0x4F;
  5909  0625  304F               	movlw	79
  5910  0626  2E2F               	goto	L10
  5911  0627                     l2523:	
  5912                           ;I2C1.c: 28: }
  5913                           
  5914                           
  5915                           ;I2C1.c: 29: else if(Speed==I2C_SPEED_HIGH)
  5916  0627  0374               	decf	I2C1_Setting@Speed,w
  5917  0628  1D03               	btfss	3,2
  5918  0629  2E3C               	goto	l2541
  5919                           
  5920                           ;I2C1.c: 30: {
  5921                           ;I2C1.c: 31: SSP1STAT &= ~(1<<7);
  5922  062A  307F               	movlw	127
  5923  062B  00F5               	movwf	??_I2C1_Setting
  5924  062C  0875               	movf	??_I2C1_Setting,w
  5925  062D  0594               	andwf	20,f	;volatile
  5926                           
  5927                           ;I2C1.c: 32: SSP1ADD = 0x13;
  5928  062E  3013               	movlw	19
  5929  062F                     L10:	
  5930  062F  0092               	movwf	18	;volatile
  5931  0630  2E3C               	goto	l2541
  5932  0631                     l2531:	
  5933                           ;I2C1.c: 37: case I2C_MODE_SLAVE:
  5934                           
  5935                           ;I2C1.c: 35: break;
  5936                           
  5937                           ;I2C1.c: 33: }
  5938                           ;I2C1.c: 34: SSP1CON1bits.SSPEN = 1;
  5939                           
  5940                           
  5941                           ;I2C1.c: 38: SSP1STAT = 0x00;
  5942  0631  0024               	movlb	4	; select bank4
  5943  0632  0194               	clrf	20	;volatile
  5944                           
  5945                           ;I2C1.c: 39: SSP1CON1 |= (0x06<<0);
  5946  0633  3006               	movlw	6
  5947  0634  00F5               	movwf	??_I2C1_Setting
  5948  0635  0875               	movf	??_I2C1_Setting,w
  5949  0636  0495               	iorwf	21,f	;volatile
  5950                           
  5951                           ;I2C1.c: 40: SSP1CON2bits.SEN= 1;
  5952  0637  1416               	bsf	22,0	;volatile
  5953                           
  5954                           ;I2C1.c: 41: SSP1ADD = address << 1;
  5955  0638  3576               	lslf	I2C1_Setting@address,w
  5956  0639  0092               	movwf	18	;volatile
  5957                           
  5958                           ;I2C1.c: 42: SSP1MSK = 0xFE;
  5959  063A  30FE               	movlw	254
  5960  063B  0093               	movwf	19	;volatile
  5961  063C                     l2541:	
  5962                           
  5963                           ;I2C1.c: 43: SSP1CON1bits.SSPEN = 1;
  5964  063C  1695               	bsf	21,5	;volatile
  5965                           
  5966                           ;I2C1.c: 45: }
  5967                           
  5968                           ;I2C1.c: 44: break;
  5969  063D  2E46               	goto	l366
  5970  063E                     l2545:	
  5971  063E  0873               	movf	I2C1_Setting@mode,w
  5972                           
  5973                           ; Switch size 1, requested type "space"
  5974                           ; Number of cases is 2, Range of values is 0 to 1
  5975                           ; switch strategies available:
  5976                           ; Name         Instructions Cycles
  5977                           ; simple_byte            7     4 (average)
  5978                           ; direct_byte           10     6 (fixed)
  5979                           ; jumptable            260     6 (fixed)
  5980                           ;	Chosen strategy is simple_byte
  5981  063F  3A00               	xorlw	0	; case 0
  5982  0640  1903               	skipnz
  5983  0641  2E1F               	goto	l362
  5984  0642  3A01               	xorlw	1	; case 1
  5985  0643  1903               	skipnz
  5986  0644  2E31               	goto	l2531
  5987  0645  2E46               	goto	l366
  5988  0646                     l366:	
  5989                           
  5990                           ;I2C1.c: 46: SSP1IE = 1;
  5991  0646  0021               	movlb	1	; select bank1
  5992  0647  1591               	bsf	17,3	;volatile
  5993                           
  5994                           ;I2C1.c: 47: BCL1IE = 1;
  5995  0648  1592               	bsf	18,3	;volatile
  5996                           
  5997                           ;I2C1.c: 48: SSP1IF = 0;
  5998  0649  0020               	movlb	0	; select bank0
  5999  064A  1191               	bcf	17,3	;volatile
  6000                           
  6001                           ;I2C1.c: 49: BCL1IF = 0;
  6002  064B  1192               	bcf	18,3	;volatile
  6003  064C  0008               	return
  6004  064D                     __end_of_I2C1_Setting:	
  6005                           
  6006                           	psect	text25
  6007  0FCB                     __ptext25:	
  6008 ;; *************** function _I2C1_PinInit *****************
  6009 ;; Defined at:
  6010 ;;		line 9 in file "I2C1.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;		None
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;		None
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2, status,0
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6024 ;;      Params:         0       0       0       0       0       0
  6025 ;;      Locals:         0       0       0       0       0       0
  6026 ;;      Temps:          1       0       0       0       0       0
  6027 ;;      Totals:         1       0       0       0       0       0
  6028 ;;Total ram usage:        1 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    3
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_I2C1_Setting
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           
  6039                           ;psect for function _I2C1_PinInit
  6040  0FCB                     _I2C1_PinInit:	
  6041                           
  6042                           ;I2C1.c: 11: TRISB |= ((1<<1)|(1<<4));
  6043                           
  6044                           ;incstack = 0
  6045                           ; Regs used in _I2C1_PinInit: [wreg+status,2+status,0]
  6046  0FCB  3012               	movlw	18
  6047  0FCC  00F2               	movwf	??_I2C1_PinInit
  6048  0FCD  0872               	movf	??_I2C1_PinInit,w
  6049  0FCE  0021               	movlb	1	; select bank1
  6050  0FCF  048D               	iorwf	13,f	;volatile
  6051                           
  6052                           ;I2C1.c: 12: ANSELB &= ~((1<<1)|(1<<4));
  6053  0FD0  30ED               	movlw	237
  6054  0FD1  00F2               	movwf	??_I2C1_PinInit
  6055  0FD2  0872               	movf	??_I2C1_PinInit,w
  6056  0FD3  0023               	movlb	3	; select bank3
  6057  0FD4  058D               	andwf	13,f	;volatile
  6058  0FD5  0008               	return
  6059  0FD6                     __end_of_I2C1_PinInit:	
  6060                           
  6061                           	psect	text26
  6062  071F                     __ptext26:	
  6063 ;; *************** function _Buzer_Init *****************
  6064 ;; Defined at:
  6065 ;;		line 9 in file "Buzer.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6079 ;;      Params:         0       0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0
  6081 ;;      Temps:          1       0       0       0       0       0
  6082 ;;      Totals:         1       0       0       0       0       0
  6083 ;;Total ram usage:        1 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    3
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_main
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           
  6094                           ;psect for function _Buzer_Init
  6095  071F                     _Buzer_Init:	
  6096                           
  6097                           ;Buzer.c: 11: TRISA &= ~(0x01<<7);
  6098                           
  6099                           ;incstack = 0
  6100                           ; Regs used in _Buzer_Init: [wreg+status,2+status,0]
  6101  071F  307F               	movlw	127
  6102  0720  00F2               	movwf	??_Buzer_Init
  6103  0721  0872               	movf	??_Buzer_Init,w
  6104  0722  0021               	movlb	1	; select bank1
  6105  0723  058C               	andwf	12,f	;volatile
  6106                           
  6107                           ;Buzer.c: 12: ANSELA &= ~(0x01<<7);
  6108  0724  307F               	movlw	127
  6109  0725  00F2               	movwf	??_Buzer_Init
  6110  0726  0872               	movf	??_Buzer_Init,w
  6111  0727  0023               	movlb	3	; select bank3
  6112  0728  058C               	andwf	12,f	;volatile
  6113                           
  6114                           ;Buzer.c: 13: APFCON0 |= (0x01<<3);
  6115  0729  0022               	movlb	2	; select bank2
  6116  072A  159D               	bsf	29,3	;volatile
  6117                           
  6118                           ;Buzer.c: 15: T2CON |= (0x00<<3);
  6119  072B  0020               	movlb	0	; select bank0
  6120  072C  081C               	movf	28,w	;volatile
  6121                           
  6122                           ;Buzer.c: 16: T2CON |= (0x02<<0);
  6123  072D  149C               	bsf	28,1	;volatile
  6124                           
  6125                           ;Buzer.c: 17: T2CON |= (0x01<<2);
  6126  072E  151C               	bsf	28,2	;volatile
  6127                           
  6128                           ;Buzer.c: 19: TMR2 = 0x00;
  6129  072F  019A               	clrf	26	;volatile
  6130                           
  6131                           ;Buzer.c: 20: PR2 = 0xFF;
  6132  0730  30FF               	movlw	255
  6133  0731  009B               	movwf	27	;volatile
  6134                           
  6135                           ;Buzer.c: 22: CCP2CON &= ~(0x03<<6);
  6136  0732  303F               	movlw	63
  6137  0733  00F2               	movwf	??_Buzer_Init
  6138  0734  0872               	movf	??_Buzer_Init,w
  6139  0735  0025               	movlb	5	; select bank5
  6140  0736  059A               	andwf	26,f	;volatile
  6141                           
  6142                           ;Buzer.c: 23: CCP2CON |= (0x0C<<0);
  6143  0737  300C               	movlw	12
  6144  0738  00F2               	movwf	??_Buzer_Init
  6145  0739  0872               	movf	??_Buzer_Init,w
  6146  073A  049A               	iorwf	26,f	;volatile
  6147                           
  6148                           ;Buzer.c: 24: CCPTMRS &= ~(0x03<<2);
  6149  073B  30F3               	movlw	243
  6150  073C  00F2               	movwf	??_Buzer_Init
  6151  073D  0872               	movf	??_Buzer_Init,w
  6152  073E  059E               	andwf	30,f	;volatile
  6153                           
  6154                           ;Buzer.c: 26: CCPR2L = 0x00;
  6155  073F  0198               	clrf	24	;volatile
  6156  0740  0008               	return
  6157  0741                     __end_of_Buzer_Init:	
  6158                           
  6159                           	psect	text27
  6160  07A9                     __ptext27:	
  6161 ;; *************** function _Basic_Init *****************
  6162 ;; Defined at:
  6163 ;;		line 48 in file "main.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;		None
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;		None
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      char 
  6170 ;; Registers used:
  6171 ;;		wreg, status,2
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6177 ;;      Params:         0       0       0       0       0       0
  6178 ;;      Locals:         0       0       0       0       0       0
  6179 ;;      Temps:          0       0       0       0       0       0
  6180 ;;      Totals:         0       0       0       0       0       0
  6181 ;;Total ram usage:        0 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    3
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_main
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           
  6192                           ;psect for function _Basic_Init
  6193  07A9                     _Basic_Init:	
  6194                           
  6195                           ;main.c: 50: OSCCON = 0xF0;
  6196                           
  6197                           ;incstack = 0
  6198                           ; Regs used in _Basic_Init: [wreg+status,2]
  6199  07A9  30F0               	movlw	240
  6200  07AA  0021               	movlb	1	; select bank1
  6201  07AB  0099               	movwf	25	;volatile
  6202                           
  6203                           ;main.c: 54: TRISA = 0x07;
  6204  07AC  3007               	movlw	7
  6205  07AD  008C               	movwf	12	;volatile
  6206                           
  6207                           ;main.c: 55: ANSELA = 0x07;
  6208  07AE  3007               	movlw	7
  6209  07AF  0023               	movlb	3	; select bank3
  6210  07B0  008C               	movwf	12	;volatile
  6211                           
  6212                           ;main.c: 57: TRISB = 0x40;
  6213  07B1  3040               	movlw	64
  6214  07B2  0021               	movlb	1	; select bank1
  6215  07B3  008D               	movwf	13	;volatile
  6216                           
  6217                           ;main.c: 58: ANSELB = 0x00;
  6218  07B4  0023               	movlb	3	; select bank3
  6219  07B5  018D               	clrf	13	;volatile
  6220                           
  6221                           ;main.c: 60: APFCON0 = 0x08;
  6222  07B6  3008               	movlw	8
  6223  07B7  0022               	movlb	2	; select bank2
  6224  07B8  009D               	movwf	29	;volatile
  6225                           
  6226                           ;main.c: 61: APFCON1 = 0x00;
  6227  07B9  019E               	clrf	30	;volatile
  6228                           
  6229                           ;main.c: 63: PORTA = 0x00;
  6230  07BA  0020               	movlb	0	; select bank0
  6231  07BB  018C               	clrf	12	;volatile
  6232                           
  6233                           ;main.c: 64: PORTB = 0x00;
  6234  07BC  018D               	clrf	13	;volatile
  6235  07BD  0008               	return
  6236  07BE                     __end_of_Basic_Init:	
  6237                           ;main.c: 66: return 0;
  6238                           ;	Return value of _Basic_Init is never used
  6239                           
  6240                           
  6241                           	psect	intentry
  6242  0004                     __pintentry:	
  6243 ;; *************** function _Handler *****************
  6244 ;; Defined at:
  6245 ;;		line 69 in file "main.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;		None
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;		None
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  1    wreg      void 
  6252 ;; Registers used:
  6253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6259 ;;      Params:         0       0       0       0       0       0
  6260 ;;      Locals:         0       0       0       0       0       0
  6261 ;;      Temps:          1       0       0       0       0       0
  6262 ;;      Totals:         1       0       0       0       0       0
  6263 ;;Total ram usage:        1 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:    2
  6266 ;; This function calls:
  6267 ;;		_CPSx_Read
  6268 ;;		_I2C_CommonInterrupt
  6269 ;;		_Timer1_Handler
  6270 ;;		_Timer4_Handler
  6271 ;; This function is called by:
  6272 ;;		Interrupt level 1
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276  0004                     _Handler:	
  6277                           
  6278                           ;incstack = 0
  6279  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6280                           
  6281                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6282  0005  3180               	pagesel	$
  6283  0006  0020               	movlb	0	; select bank0
  6284  0007  087F               	movf	127,w
  6285  0008  00F1               	movwf	??_Handler
  6286                           
  6287                           ;main.c: 71: static uint16_t count = 0;
  6288                           ;main.c: 72: if(Timer4_Handler())
  6289  0009  318F  27C0  3180   	fcall	_Timer4_Handler
  6290  000C  3A00               	xorlw	0
  6291  000D  1903               	skipnz
  6292  000E  2823               	goto	i1l3409
  6293                           
  6294                           ;main.c: 73: {
  6295                           ;main.c: 74: CPSx_Read();
  6296  000F  3186  26FA  3180   	fcall	_CPSx_Read
  6297                           
  6298                           ;main.c: 75: count++;
  6299  0012  3001               	movlw	1
  6300  0013  0020               	movlb	0	; select bank0
  6301  0014  07E8               	addwf	Handler@count,f
  6302  0015  3000               	movlw	0
  6303  0016  3DE9               	addwfc	Handler@count+1,f
  6304                           
  6305                           ;main.c: 76: if(count>1000)
  6306  0017  3003               	movlw	3
  6307  0018  0269               	subwf	Handler@count+1,w
  6308  0019  30E9               	movlw	233
  6309  001A  1903               	skipnz
  6310  001B  0268               	subwf	Handler@count,w
  6311  001C  1C03               	skipc
  6312  001D  2823               	goto	i1l3409
  6313                           
  6314                           ;main.c: 77: {
  6315                           ;main.c: 78: count = 0;
  6316  001E  01E8               	clrf	Handler@count
  6317  001F  01E9               	clrf	Handler@count+1
  6318                           
  6319                           ;main.c: 79: LATA6 ^= 1;
  6320  0020  0022               	movlb	2	; select bank2
  6321  0021  3040               	movlw	64
  6322  0022  068C               	xorwf	12,f
  6323  0023                     i1l3409:	
  6324                           
  6325                           ;main.c: 80: }
  6326                           ;main.c: 81: }
  6327                           ;main.c: 83: Timer1_Handler();
  6328  0023  318F  27B7  3180   	fcall	_Timer1_Handler
  6329                           
  6330                           ;main.c: 84: I2C_CommonInterrupt();
  6331  0026  318F  27A5         	fcall	_I2C_CommonInterrupt
  6332  0028  0871               	movf	??_Handler,w
  6333  0029  0020               	movlb	0	; select bank0
  6334  002A  00FF               	movwf	127
  6335  002B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6336  002C  0009               	retfie
  6337  002D                     __end_of_Handler:	
  6338                           
  6339                           	psect	text29
  6340  0FC0                     __ptext29:	
  6341 ;; *************** function _Timer4_Handler *****************
  6342 ;; Defined at:
  6343 ;;		line 17 in file "Timer4.c"
  6344 ;; Parameters:    Size  Location     Type
  6345 ;;		None
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;		None
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  1    wreg      unsigned char 
  6350 ;; Registers used:
  6351 ;;		wreg
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6357 ;;      Params:         0       0       0       0       0       0
  6358 ;;      Locals:         0       0       0       0       0       0
  6359 ;;      Temps:          0       0       0       0       0       0
  6360 ;;      Totals:         0       0       0       0       0       0
  6361 ;;Total ram usage:        0 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_Handler
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           
  6371                           ;psect for function _Timer4_Handler
  6372  0FC0                     _Timer4_Handler:	
  6373                           
  6374                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  6375                           
  6376                           ;incstack = 0
  6377                           ; Regs used in _Timer4_Handler: [wreg]
  6378  0FC0  0021               	movlb	1	; select bank1
  6379  0FC1  1C93               	btfss	19,1	;volatile
  6380  0FC2  2FC9               	goto	i1l3201
  6381  0FC3  0020               	movlb	0	; select bank0
  6382  0FC4  1C93               	btfss	19,1	;volatile
  6383  0FC5  2FC9               	goto	i1l3201
  6384                           
  6385                           ;Timer4.c: 20: {
  6386                           ;Timer4.c: 21: TMR4IF = 0;
  6387  0FC6  1093               	bcf	19,1	;volatile
  6388                           
  6389                           ;Timer4.c: 22: return 1;
  6390  0FC7  3001               	movlw	1
  6391  0FC8  0008               	return
  6392  0FC9                     i1l3201:	
  6393                           
  6394                           ;Timer4.c: 23: }
  6395                           ;Timer4.c: 24: return 0;
  6396  0FC9  3000               	movlw	0
  6397  0FCA  0008               	return
  6398  0FCB                     __end_of_Timer4_Handler:	
  6399                           
  6400                           	psect	text30
  6401  0FB7                     __ptext30:	
  6402 ;; *************** function _Timer1_Handler *****************
  6403 ;; Defined at:
  6404 ;;		line 33 in file "Timer1.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      void 
  6411 ;; Registers used:
  6412 ;;		None
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6418 ;;      Params:         0       0       0       0       0       0
  6419 ;;      Locals:         0       0       0       0       0       0
  6420 ;;      Temps:          0       0       0       0       0       0
  6421 ;;      Totals:         0       0       0       0       0       0
  6422 ;;Total ram usage:        0 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; This function calls:
  6425 ;;		Nothing
  6426 ;; This function is called by:
  6427 ;;		_Handler
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           
  6432                           ;psect for function _Timer1_Handler
  6433  0FB7                     _Timer1_Handler:	
  6434                           
  6435                           ;Timer1.c: 35: if(TMR1IF&&TMR1IE)
  6436                           
  6437                           ;incstack = 0
  6438                           ; Regs used in _Timer1_Handler: []
  6439  0FB7  0020               	movlb	0	; select bank0
  6440  0FB8  1C11               	btfss	17,0	;volatile
  6441  0FB9  0008               	return
  6442  0FBA  0021               	movlb	1	; select bank1
  6443  0FBB  1C11               	btfss	17,0	;volatile
  6444  0FBC  0008               	return
  6445                           
  6446                           ;Timer1.c: 36: {
  6447                           ;Timer1.c: 37: TMR1IF = 0;
  6448  0FBD  0020               	movlb	0	; select bank0
  6449  0FBE  1011               	bcf	17,0	;volatile
  6450  0FBF  0008               	return
  6451  0FC0                     __end_of_Timer1_Handler:	
  6452                           
  6453                           	psect	text31
  6454  0FA5                     __ptext31:	
  6455 ;; *************** function _I2C_CommonInterrupt *****************
  6456 ;; Defined at:
  6457 ;;		line 58 in file "I2C_Common.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;		None
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      void 
  6464 ;; Registers used:
  6465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6471 ;;      Params:         0       0       0       0       0       0
  6472 ;;      Locals:         0       0       0       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0
  6474 ;;      Totals:         0       0       0       0       0       0
  6475 ;;Total ram usage:        0 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    1
  6478 ;; This function calls:
  6479 ;;		_I2C1_Interrupt
  6480 ;;		_I2C2_Interrupt
  6481 ;; This function is called by:
  6482 ;;		_Handler
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           
  6487                           ;psect for function _I2C_CommonInterrupt
  6488  0FA5                     _I2C_CommonInterrupt:	
  6489                           
  6490                           ;I2C_Common.c: 60: I2C1_Interrupt();
  6491                           
  6492                           ;incstack = 0
  6493                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6494  0FA5  3184  24B7  318F   	fcall	_I2C1_Interrupt
  6495                           
  6496                           ;I2C_Common.c: 61: I2C2_Interrupt();
  6497  0FA8  3184  2463         	fcall	_I2C2_Interrupt
  6498  0FAA  0008               	return
  6499  0FAB                     __end_of_I2C_CommonInterrupt:	
  6500                           
  6501                           	psect	text32
  6502  0463                     __ptext32:	
  6503 ;; *************** function _I2C2_Interrupt *****************
  6504 ;; Defined at:
  6505 ;;		line 152 in file "I2C2.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;		None
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      void 
  6512 ;; Registers used:
  6513 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6519 ;;      Params:         0       0       0       0       0       0
  6520 ;;      Locals:         0       0       0       0       0       0
  6521 ;;      Temps:          1       0       0       0       0       0
  6522 ;;      Totals:         1       0       0       0       0       0
  6523 ;;Total ram usage:        1 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		_I2C_CommonInterrupt
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           
  6533                           ;psect for function _I2C2_Interrupt
  6534  0463                     _I2C2_Interrupt:	
  6535                           
  6536                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  6537                           
  6538                           ;incstack = 0
  6539                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6540  0463  0020               	movlb	0	; select bank0
  6541  0464  1C14               	btfss	20,0	;volatile
  6542  0465  2CAF               	goto	i1l3007
  6543  0466  0021               	movlb	1	; select bank1
  6544  0467  1C14               	btfss	20,0	;volatile
  6545  0468  2CAF               	goto	i1l3007
  6546                           
  6547                           ;I2C2.c: 155: {
  6548                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  6549  0469  0024               	movlb	4	; select bank4
  6550  046A  1E9C               	btfss	28,5	;volatile
  6551  046B  2C86               	goto	i1l582
  6552                           
  6553                           ;I2C2.c: 157: {
  6554                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  6555  046C  1D1C               	btfss	28,2	;volatile
  6556  046D  2C79               	goto	i1l2983
  6557                           
  6558                           ;I2C2.c: 159: {
  6559                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  6560  046E  1B1E               	btfsc	30,6	;volatile
  6561  046F  2CAD               	goto	i1l3005
  6562  0470                     i1l2975:	
  6563                           ;I2C2.c: 161: {
  6564                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  6565                           
  6566  0470  081C               	movf	28,w	;volatile
  6567  0471  3901               	andlw	1
  6568  0472  00F0               	movwf	??_I2C2_Interrupt
  6569  0473  0E1D               	swapf	29,w	;volatile
  6570  0474  3901               	andlw	1
  6571  0475  0470               	iorwf	??_I2C2_Interrupt,w
  6572  0476  1D03               	btfss	3,2
  6573  0477  2C70               	goto	i1l2975
  6574  0478  2C99               	goto	L11
  6575  0479                     i1l2983:	
  6576                           ;I2C2.c: 166: }
  6577                           ;I2C2.c: 167: }
  6578                           
  6579                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  6580                           
  6581                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  6582                           
  6583                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  6584                           
  6585                           
  6586                           ;I2C2.c: 168: else
  6587                           ;I2C2.c: 169: {
  6588                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  6589  0479  0819               	movf	25,w	;volatile
  6590  047A  00F0               	movwf	??_I2C2_Interrupt
  6591  047B  0021               	movlb	1	; select bank1
  6592  047C  0837               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  6593  047D  0086               	movwf	6
  6594  047E  0187               	clrf	7
  6595  047F  0870               	movf	??_I2C2_Interrupt,w
  6596  0480  0081               	movwf	1
  6597                           
  6598                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  6599  0481  3001               	movlw	1
  6600  0482  00F0               	movwf	??_I2C2_Interrupt
  6601  0483  0870               	movf	??_I2C2_Interrupt,w
  6602  0484  07B7               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  6603  0485  2CAB               	goto	i1l3003
  6604  0486                     i1l582:	
  6605                           ;I2C2.c: 173: }
  6606                           ;I2C2.c: 174: }
  6607                           
  6608                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  6609                           
  6610                           
  6611                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  6612  0486  1A9C               	btfsc	28,5	;volatile
  6613  0487  2CAD               	goto	i1l3005
  6614                           
  6615                           ;I2C2.c: 176: {
  6616                           ;I2C2.c: 177: SSP2BUF;
  6617  0488  0819               	movf	25,w	;volatile
  6618                           
  6619                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  6620  0489  1D1C               	btfss	28,2	;volatile
  6621  048A  2CA6               	goto	i1l3001
  6622                           
  6623                           ;I2C2.c: 180: {
  6624                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  6625  048B  30A6               	movlw	(low (_I2C2_Config| 0))& (0+255)
  6626  048C  00F0               	movwf	??_I2C2_Interrupt
  6627  048D  0870               	movf	??_I2C2_Interrupt,w
  6628  048E  0021               	movlb	1	; select bank1
  6629  048F  00B6               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  6630  0490                     i1l2995:	
  6631                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  6632                           
  6633  0490  0024               	movlb	4	; select bank4
  6634  0491  081C               	movf	28,w	;volatile
  6635  0492  3901               	andlw	1
  6636  0493  00F0               	movwf	??_I2C2_Interrupt
  6637  0494  0E1D               	swapf	29,w	;volatile
  6638  0495  3901               	andlw	1
  6639  0496  0470               	iorwf	??_I2C2_Interrupt,w
  6640  0497  1D03               	btfss	3,2
  6641  0498  2C90               	goto	i1l2995
  6642  0499                     L11:	
  6643                           
  6644                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
  6645  0499  0021               	movlb	1	; select bank1
  6646  049A  0836               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
  6647  049B  0086               	movwf	6
  6648  049C  0187               	clrf	7
  6649  049D  0801               	movf	1,w
  6650  049E  0024               	movlb	4	; select bank4
  6651  049F  0099               	movwf	25	;volatile
  6652                           
  6653                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
  6654  04A0  3001               	movlw	1
  6655  04A1  00F0               	movwf	??_I2C2_Interrupt
  6656  04A2  0870               	movf	??_I2C2_Interrupt,w
  6657  04A3  0021               	movlb	1	; select bank1
  6658  04A4  07B6               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
  6659                           
  6660                           ;I2C2.c: 186: }
  6661  04A5  2CAB               	goto	i1l3003
  6662  04A6                     i1l3001:	
  6663                           
  6664                           ;I2C2.c: 187: else
  6665                           ;I2C2.c: 188: {
  6666                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
  6667  04A6  30AE               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
  6668  04A7  00F0               	movwf	??_I2C2_Interrupt
  6669  04A8  0870               	movf	??_I2C2_Interrupt,w
  6670  04A9  0021               	movlb	1	; select bank1
  6671  04AA  00B7               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
  6672  04AB                     i1l3003:	
  6673                           
  6674                           ;I2C2.c: 190: }
  6675                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
  6676  04AB  0024               	movlb	4	; select bank4
  6677  04AC  161D               	bsf	29,4	;volatile
  6678  04AD                     i1l3005:	
  6679                           
  6680                           ;I2C2.c: 192: }
  6681                           ;I2C2.c: 193: SSP2IF = 0;
  6682  04AD  0020               	movlb	0	; select bank0
  6683  04AE  1014               	bcf	20,0	;volatile
  6684  04AF                     i1l3007:	
  6685                           
  6686                           ;I2C2.c: 194: }
  6687                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
  6688  04AF  0021               	movlb	1	; select bank1
  6689  04B0  1C94               	btfss	20,1	;volatile
  6690  04B1  0008               	return
  6691  04B2  0020               	movlb	0	; select bank0
  6692  04B3  1C94               	btfss	20,1	;volatile
  6693  04B4  0008               	return
  6694                           
  6695                           ;I2C2.c: 197: BCL2IF = 0;
  6696  04B5  1094               	bcf	20,1	;volatile
  6697  04B6  0008               	return
  6698  04B7                     __end_of_I2C2_Interrupt:	
  6699                           
  6700                           	psect	text33
  6701  04B7                     __ptext33:	
  6702 ;; *************** function _I2C1_Interrupt *****************
  6703 ;; Defined at:
  6704 ;;		line 152 in file "I2C1.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;		None
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;		None
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      void 
  6711 ;; Registers used:
  6712 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6718 ;;      Params:         0       0       0       0       0       0
  6719 ;;      Locals:         0       0       0       0       0       0
  6720 ;;      Temps:          1       0       0       0       0       0
  6721 ;;      Totals:         1       0       0       0       0       0
  6722 ;;Total ram usage:        1 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_I2C_CommonInterrupt
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           
  6732                           ;psect for function _I2C1_Interrupt
  6733  04B7                     _I2C1_Interrupt:	
  6734                           
  6735                           ;I2C1.c: 154: if(SSP1IF&&SSP1IE)
  6736                           
  6737                           ;incstack = 0
  6738                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  6739  04B7  0020               	movlb	0	; select bank0
  6740  04B8  1D91               	btfss	17,3	;volatile
  6741  04B9  2D03               	goto	i1l2957
  6742  04BA  0021               	movlb	1	; select bank1
  6743  04BB  1D91               	btfss	17,3	;volatile
  6744  04BC  2D03               	goto	i1l2957
  6745                           
  6746                           ;I2C1.c: 155: {
  6747                           ;I2C1.c: 156: if(SSP1STATbits.D_nA)
  6748  04BD  0024               	movlb	4	; select bank4
  6749  04BE  1E94               	btfss	20,5	;volatile
  6750  04BF  2CDA               	goto	i1l445
  6751                           
  6752                           ;I2C1.c: 157: {
  6753                           ;I2C1.c: 158: if(SSP1STATbits.R_nW)
  6754  04C0  1D14               	btfss	20,2	;volatile
  6755  04C1  2CCD               	goto	i1l2933
  6756                           
  6757                           ;I2C1.c: 159: {
  6758                           ;I2C1.c: 160: if(!SSP1CON2bits.ACKSTAT)
  6759  04C2  1B16               	btfsc	22,6	;volatile
  6760  04C3  2D01               	goto	i1l2955
  6761  04C4                     i1l2925:	
  6762                           ;I2C1.c: 161: {
  6763                           ;I2C1.c: 162: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  6764                           
  6765  04C4  0814               	movf	20,w	;volatile
  6766  04C5  3901               	andlw	1
  6767  04C6  00F0               	movwf	??_I2C1_Interrupt
  6768  04C7  0E15               	swapf	21,w	;volatile
  6769  04C8  3901               	andlw	1
  6770  04C9  0470               	iorwf	??_I2C1_Interrupt,w
  6771  04CA  1D03               	btfss	3,2
  6772  04CB  2CC4               	goto	i1l2925
  6773  04CC  2CED               	goto	L12
  6774  04CD                     i1l2933:	
  6775                           ;I2C1.c: 166: }
  6776                           ;I2C1.c: 167: }
  6777                           
  6778                           ;I2C1.c: 165: SSP1CON1bits.CKP = 1;
  6779                           
  6780                           ;I2C1.c: 164: I2C1_Config.TransmitPoint++;
  6781                           
  6782                           ;I2C1.c: 163: SSP1BUF = *I2C1_Config.TransmitPoint;
  6783                           
  6784                           
  6785                           ;I2C1.c: 168: else
  6786                           ;I2C1.c: 169: {
  6787                           ;I2C1.c: 170: *I2C1_Config.ReceivePoint = SSP1BUF;
  6788  04CD  0811               	movf	17,w	;volatile
  6789  04CE  00F0               	movwf	??_I2C1_Interrupt
  6790  04CF  0021               	movlb	1	; select bank1
  6791  04D0  084A               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  6792  04D1  0086               	movwf	6
  6793  04D2  0187               	clrf	7
  6794  04D3  0870               	movf	??_I2C1_Interrupt,w
  6795  04D4  0081               	movwf	1
  6796                           
  6797                           ;I2C1.c: 171: I2C1_Config.ReceivePoint++;
  6798  04D5  3001               	movlw	1
  6799  04D6  00F0               	movwf	??_I2C1_Interrupt
  6800  04D7  0870               	movf	??_I2C1_Interrupt,w
  6801  04D8  07CA               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  6802  04D9  2CFF               	goto	i1l2953
  6803  04DA                     i1l445:	
  6804                           ;I2C1.c: 173: }
  6805                           ;I2C1.c: 174: }
  6806                           
  6807                           ;I2C1.c: 172: SSP1CON1bits.CKP = 1;
  6808                           
  6809                           
  6810                           ;I2C1.c: 175: else if(!SSP1STATbits.D_nA)
  6811  04DA  1A94               	btfsc	20,5	;volatile
  6812  04DB  2D01               	goto	i1l2955
  6813                           
  6814                           ;I2C1.c: 176: {
  6815                           ;I2C1.c: 177: SSP1BUF;
  6816  04DC  0811               	movf	17,w	;volatile
  6817                           
  6818                           ;I2C1.c: 179: if(SSP1STATbits.R_nW)
  6819  04DD  1D14               	btfss	20,2	;volatile
  6820  04DE  2CFA               	goto	i1l2951
  6821                           
  6822                           ;I2C1.c: 180: {
  6823                           ;I2C1.c: 181: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  6824  04DF  30B9               	movlw	(low (_I2C1_Config| 0))& (0+255)
  6825  04E0  00F0               	movwf	??_I2C1_Interrupt
  6826  04E1  0870               	movf	??_I2C1_Interrupt,w
  6827  04E2  0021               	movlb	1	; select bank1
  6828  04E3  00C9               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  6829  04E4                     i1l2945:	
  6830                           ;I2C1.c: 183: while((SSP1CON1bits.CKP)|(SSP1STATbits.BF));
  6831                           
  6832  04E4  0024               	movlb	4	; select bank4
  6833  04E5  0814               	movf	20,w	;volatile
  6834  04E6  3901               	andlw	1
  6835  04E7  00F0               	movwf	??_I2C1_Interrupt
  6836  04E8  0E15               	swapf	21,w	;volatile
  6837  04E9  3901               	andlw	1
  6838  04EA  0470               	iorwf	??_I2C1_Interrupt,w
  6839  04EB  1D03               	btfss	3,2
  6840  04EC  2CE4               	goto	i1l2945
  6841  04ED                     L12:	
  6842                           
  6843                           ;I2C1.c: 184: SSP1BUF = *I2C1_Config.TransmitPoint;
  6844  04ED  0021               	movlb	1	; select bank1
  6845  04EE  0849               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  6846  04EF  0086               	movwf	6
  6847  04F0  0187               	clrf	7
  6848  04F1  0801               	movf	1,w
  6849  04F2  0024               	movlb	4	; select bank4
  6850  04F3  0091               	movwf	17	;volatile
  6851                           
  6852                           ;I2C1.c: 185: I2C1_Config.TransmitPoint++;
  6853  04F4  3001               	movlw	1
  6854  04F5  00F0               	movwf	??_I2C1_Interrupt
  6855  04F6  0870               	movf	??_I2C1_Interrupt,w
  6856  04F7  0021               	movlb	1	; select bank1
  6857  04F8  07C9               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  6858                           
  6859                           ;I2C1.c: 186: }
  6860  04F9  2CFF               	goto	i1l2953
  6861  04FA                     i1l2951:	
  6862                           
  6863                           ;I2C1.c: 187: else
  6864                           ;I2C1.c: 188: {
  6865                           ;I2C1.c: 189: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  6866  04FA  30C1               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  6867  04FB  00F0               	movwf	??_I2C1_Interrupt
  6868  04FC  0870               	movf	??_I2C1_Interrupt,w
  6869  04FD  0021               	movlb	1	; select bank1
  6870  04FE  00CA               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  6871  04FF                     i1l2953:	
  6872                           
  6873                           ;I2C1.c: 190: }
  6874                           ;I2C1.c: 191: SSP1CON1bits.CKP = 1;
  6875  04FF  0024               	movlb	4	; select bank4
  6876  0500  1615               	bsf	21,4	;volatile
  6877  0501                     i1l2955:	
  6878                           
  6879                           ;I2C1.c: 192: }
  6880                           ;I2C1.c: 193: SSP1IF = 0;
  6881  0501  0020               	movlb	0	; select bank0
  6882  0502  1191               	bcf	17,3	;volatile
  6883  0503                     i1l2957:	
  6884                           
  6885                           ;I2C1.c: 194: }
  6886                           ;I2C1.c: 196: if(BCL1IE&&BCL1IF)
  6887  0503  0021               	movlb	1	; select bank1
  6888  0504  1D92               	btfss	18,3	;volatile
  6889  0505  0008               	return
  6890  0506  0020               	movlb	0	; select bank0
  6891  0507  1D92               	btfss	18,3	;volatile
  6892  0508  0008               	return
  6893                           
  6894                           ;I2C1.c: 197: BCL1IF = 0;
  6895  0509  1192               	bcf	18,3	;volatile
  6896  050A  0008               	return
  6897  050B                     __end_of_I2C1_Interrupt:	
  6898                           
  6899                           	psect	text34
  6900  06FA                     __ptext34:	
  6901 ;; *************** function _CPSx_Read *****************
  6902 ;; Defined at:
  6903 ;;		line 29 in file "mTouch.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;		None
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  1    wreg      void 
  6910 ;; Registers used:
  6911 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6917 ;;      Params:         0       0       0       0       0       0
  6918 ;;      Locals:         0       0       0       0       0       0
  6919 ;;      Temps:          1       0       0       0       0       0
  6920 ;;      Totals:         1       0       0       0       0       0
  6921 ;;Total ram usage:        1 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; This function calls:
  6924 ;;		Nothing
  6925 ;; This function is called by:
  6926 ;;		_Handler
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           
  6931                           ;psect for function _CPSx_Read
  6932  06FA                     _CPSx_Read:	
  6933                           
  6934                           ;mTouch.c: 31: static uint8_t channel=0;
  6935                           ;mTouch.c: 33: CPS_PreData[channel] = CPS_Data[channel];
  6936                           
  6937                           ;incstack = 0
  6938                           ; Regs used in _CPSx_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6939  06FA  087A               	movf	CPSx_Read@channel,w
  6940  06FB  3E63               	addlw	(low (_CPS_Data| 0))& (0+255)
  6941  06FC  0086               	movwf	6
  6942  06FD  0187               	clrf	7
  6943  06FE  0801               	movf	1,w
  6944  06FF  00F0               	movwf	??_CPSx_Read
  6945  0700  087A               	movf	CPSx_Read@channel,w
  6946  0701  3EA3               	addlw	(low (_CPS_PreData| 0))& (0+255)
  6947  0702  0086               	movwf	6
  6948  0703  0187               	clrf	7
  6949  0704  0870               	movf	??_CPSx_Read,w
  6950  0705  0081               	movwf	1
  6951                           
  6952                           ;mTouch.c: 34: CPSCON0 &= ~(0x01<<7);;
  6953  0706  307F               	movlw	127
  6954  0707  00F0               	movwf	??_CPSx_Read
  6955  0708  0870               	movf	??_CPSx_Read,w
  6956  0709  0020               	movlb	0	; select bank0
  6957  070A  059E               	andwf	30,f	;volatile
  6958                           
  6959                           ;mTouch.c: 35: CPS_Data[channel] = TMR0;
  6960  070B  0815               	movf	21,w	;volatile
  6961  070C  00F0               	movwf	??_CPSx_Read
  6962  070D  087A               	movf	CPSx_Read@channel,w
  6963  070E  3E63               	addlw	(low (_CPS_Data| 0))& (0+255)
  6964  070F  0086               	movwf	6
  6965  0710  0187               	clrf	7
  6966  0711  0870               	movf	??_CPSx_Read,w
  6967  0712  0081               	movwf	1
  6968                           
  6969                           ;mTouch.c: 36: TMR0 = 0x00;
  6970  0713  0195               	clrf	21	;volatile
  6971                           
  6972                           ;mTouch.c: 37: CPSCON0 |= (0x01<<7);;
  6973  0714  179E               	bsf	30,7	;volatile
  6974                           
  6975                           ;mTouch.c: 39: if(channel++>2)channel = 0;
  6976  0715  087A               	movf	CPSx_Read@channel,w
  6977  0716  0AFA               	incf	CPSx_Read@channel,f
  6978  0717  00F0               	movwf	??_CPSx_Read
  6979  0718  3003               	movlw	3
  6980  0719  0270               	subwf	??_CPSx_Read,w
  6981  071A  1803               	btfsc	3,0
  6982  071B  01FA               	clrf	CPSx_Read@channel
  6983                           
  6984                           ;mTouch.c: 40: CPSCON1 = (uint8_t)channel;
  6985  071C  087A               	movf	CPSx_Read@channel,w
  6986  071D  009F               	movwf	31	;volatile
  6987  071E  0008               	return
  6988  071F                     __end_of_CPSx_Read:	
  6989  007E                     btemp	set	126	;btemp
  6990  007E                     int$flags	set	126
  6991  007E                     wtemp0	set	126


Data Sizes:
    Strings     43
    Constant    0
    Data        0
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     67      79
    BANK1            80      0      44
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S290$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S290$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[7]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[7]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _xvprintf->___lldiv
    _xvprintf->___llmod
    _xvprintf->_xputs
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _mTouch_Init->_mTouch_PortInit
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData
    _DAC_Initialize->_I2C_Init
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C1_Setting
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit
    _I2C1_Setting->_I2C1_PinInit

Critical Paths under _Handler in COMMON

    _Handler->_CPSx_Read
    _I2C_CommonInterrupt->_I2C1_Interrupt
    _I2C_CommonInterrupt->_I2C2_Interrupt

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv
    _DAC_Initialize->_I2C_Transmit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    8199
                                             62 BANK0      5     5      0
                         _Basic_Init
                         _Buzer_Init
                     _DAC_Initialize
                 _LCD_CursorPosition
                           _LCD_Init
                        _Timer1_Init
                        _Timer4_Init
                        _mTouch_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                              8     2      6    4954
                                             54 BANK0      8     2      6
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    4320
                                              6 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     337
                                              8 COMMON     2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     262
                                              6 COMMON     2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     196
                                              5 COMMON     1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     220
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              2 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              3 COMMON     1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              6 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              5 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     196
                                              5 COMMON     3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0      88
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    2873
                                              8 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1949
                                              0 BANK0      8     5      3
                      _I2C1_Transmit
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C2_Transmit                                        8     6      2     618
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              2 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3     924
                                              7 COMMON     3     0      3
                                              0 BANK0      3     3      0
                       _I2C1_Setting
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     238
                                              3 COMMON     4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Setting                                         4     2      2     238
                                              3 COMMON     4     2      2
                       _I2C1_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C1_PinInit                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzer_Init                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0       0
                                              1 COMMON     1     1      0
                          _CPSx_Read
                _I2C_CommonInterrupt
                     _Timer1_Handler
                     _Timer4_Handler
 ---------------------------------------------------------------------------------
 (8) _Timer4_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer1_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C1_Interrupt
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (9) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CPSx_Read                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C1_Setting
         _I2C1_PinInit
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C1_Transmit
       _I2C2_Transmit
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_Init
   _Timer4_Init
   _mTouch_Init
     _mTouch_PortInit
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _Handler (ROOT)
   _CPSx_Read
   _I2C_CommonInterrupt
     _I2C1_Interrupt
     _I2C2_Interrupt
   _Timer1_Handler
   _Timer4_Handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      87       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     43      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      2C       8       55.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      87      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon May  1 23:13:04 2017

                 __CFG_CP$OFF 0000                I2C2_Transmit@i 0077         ??_I2C_CommonInterrupt 0071  
         ___wmul@multiplicand 0074                           l202 0212                           l161 00C0  
                         l146 0044                           l503 060E                           l362 061F  
                         l179 015B                           l516 0312                           l525 0335  
                         l366 0646                           l534 034C                           l626 06F7  
                         l379 0390                           l388 03B3                           l397 03CA  
                         l499 05E7                           l883 0768                           _GIE 005F  
                         _PR2 001B                           _PR4 0416                  __CFG_CPD$OFF 0000  
                __CFG_BORV$LO 0000                           wreg 0009                    _Basic_Init 07A9  
                __CFG_LVP$OFF 0000               __end_of_LCD_Put 0FB1                          l2511 07BF  
                        l2531 0631                          l2523 0627                          l2541 063C  
                        l2631 0606                          l2545 063E                          l2617 05F9  
                        l2609 05EF                          l2627 0604                          l3603 02FE  
                        l3605 0308                          l3551 037C                          l3615 0325  
                        l3553 0386                          l3641 0368                          l3625 031D  
                        l2497 066B                          l2489 065C                          l3801 018A  
                        l3563 03A3                          l3643 036D                          l3627 0321  
                        l3811 01B4                          l3803 0193                          l3731 0086  
                        l3723 0072                          l3573 039B                          l3629 0342  
                        l3661 052A                          l3813 01B6                          l3805 01A3  
                        l3733 0089                          l3709 005D                          l3591 03EB  
                        l3575 039F                          l3639 0351                          l3647 036F  
                        l2687 0762                          l3823 01F0                          l3751 00CD  
                        l3743 00B8                          l3577 03C0                          l3649 0378  
                        l3673 0555                          l3587 03CF                          l3595 03ED  
                        l3659 051C                          l3683 0567                          l3827 01F8  
                        l3739 00B0                          l3923 028D                          l3589 03E6  
                        l3597 03F6                          l3669 054A                          l3685 0575  
                        l3693 0598                          l3853 0247                          l3845 0228  
                        l3781 0132                          l3773 010C                          l3765 00E8  
                        l3863 06D3                          l3847 0231                          l3839 0220  
                        l3783 0135                          l3767 00F6                          l3759 00DB  
                        l3927 0292                          l3919 029A                          l3865 06E0  
                        l3881 06CE                          l3873 06A8                          l3689 058D  
                        l3857 0259                          l3849 0235                          l3785 0137  
                        l3777 0110                          l3769 00FA                          l3793 0143  
                        l3875 06B5                          l3859 025D                          l3787 0139  
                        l3779 0125                          l3869 06EE                          l3789 013E  
                        l3879 06C6                          l3799 0175                          STR_1 0694  
                        STR_2 0699                          STR_3 069E                          STR_4 06A3  
                        STR_5 067A                          STR_6 0688                          STR_7 068E  
                        STR_8 0681                          u2105 076E                          u2095 0769  
                        u4107 05A3                          u4047 0400                          u4057 0419  
                        u1755 05A9                          u4067 042C                          u4077 0440  
                        u4087 0FEA                          u4097 07A5                          u3625 056A  
                        u2755 079A                          u3555 051F                          _PEIE 005E  
                        u3645 0583                          u3805 011E                          u3575 052B  
                        u3655 058E                          u3585 053F                          u3595 054B  
                        u3925 0245                          u3945 026B                          u3795 010A  
                        u3955 02BA                          u3965 02D7                          u3975 02F4  
                        _TMR0 0015                          _TMR1 0016                          _TMR2 001A  
                        _TMR4 0415               ??_I2C1_Transmit 0074                  __CFG_WRT$OFF 0000  
                        _main 026E              __end_of_I2C_Init 06FA                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
               __CFG_BOREN$ON 0000               ??_I2C2_Transmit 0074              ??_I2C1_Interrupt 0070  
                        start 002D                 __CFG_IESO$OFF 0000               __end_of_Handler 002D  
               _LCD_WriteData 05A1                 __CFG_MCLRE$ON 0000              ??_I2C2_Interrupt 0070  
          __size_of_CPSx_Read 0025      __end_of_LCD_DisplayClear 0FF0         __size_of_I2C_Transmit 002B  
            __end_of_LCD_Init 0463                 __CFG_PLLEN$ON 0000                   LCD_Put@word 0075  
                       ?_main 0070                 __CFG_WDTE$OFF 0000               __end_of___lldiv 055E  
                       _T1CON 0018               __end_of___llmod 05A1                         _T2CON 001C  
                       _LATA3 0863                         _LATA4 0864                         _LATA6 0866  
                       _T4CON 0417                         i1l445 04DA                         i1l582 0486  
                       _PORTA 000C                         _PORTB 000D                         _TRISA 008C  
                       _TRISB 008D             I2C2_Transmit@size 0073                 __CFG_PWRTE$ON 0000  
              __CFG_FCMEN$OFF 0000                         _xputc 064D                         _xputs 07BE  
                       pclath 000A                         status 0003                         wtemp0 007E  
             __end_of_xprintf 1000                  _I2C_Transmit 06A5            _LCD_CursorPosition 0794  
              ?_LCD_WriteData 0070              ??_DAC_Initialize 0028               __initialization 002F  
                  _Buzer_Init 071F                  __end_of_main 02FB           ?_LCD_CursorPosition 0075  
                      ??_main 005E                     ??_LCD_Put 0076              CPSx_Read@channel 007A  
                 ?_Basic_Init 0070                        _BCL1IE 0493                        _BCL1IF 0093  
                      _BCL2IE 04A1                        _BCL2IF 00A1                _Timer1_Handler 0FB7  
            ___llmod@dividend 0076          __size_of_mTouch_Init 0013                        _CCPR2L 0298  
        ??_LCD_CursorPosition 0076                        _ANSELA 018C                        _ANSELB 018D  
                      _T1GCON 0019             __end_of_CPSx_Read 071F                        ?_xputc 0070  
                      ?_xputs 0070                        i1l3001 04A6                        i1l3003 04AB  
                      i1l3005 04AD                        i1l3007 04AF                        i1l3201 0FC9  
                      i1l3409 0023                        i1l2925 04C4                        i1l2933 04CD  
                      i1l2951 04FA                        i1l2953 04FF                        i1l2945 04E4  
                      i1l2955 0501                        i1l2957 0503                        i1l2975 0470  
                      i1l2983 0479            I2C2_Transmit@i_560 0078                        i1l2995 0490  
                      _OSCCON 0099            I2C2_Transmit@pData 0072                _Timer4_Handler 0FC0  
                      _TMR1IE 0488                        _TMR1IF 0088                     ??_Handler 0071  
                      _TMR4IE 0499                        _TMR4IF 0099                        _TMR1ON 00C0  
                      _SSP1IE 048B                        _SSP1IF 008B                        _SSP2IE 04A0  
                      _SSP2IF 00A0               _mTouch_PortInit 07F5                 ??_Timer1_Init 0072  
               ??_Timer4_Init 0072                        ___wmul 0760                     ??___lldiv 0020  
                   ??___llmod 0020                        _outptr 007B              I2C_Transmit@I2Cx 0026  
                   ?_I2C_Init 0077        __end_of_Timer1_Handler 0FC0              I2C_Transmit@size 0022  
      __end_of_Timer4_Handler 0FCB                        xputc@c 0077                     ??_xprintf 005C  
     __end_of__initialization 0040                     ?_LCD_Init 0070               ??_LCD_WriteData 0072  
            __end_of_xvprintf 026E                    _VoltageReg 006C                __pcstackCOMMON 0070  
                 ?_Buzer_Init 0070           __size_of_Basic_Init 0015           __end_of_Timer1_Init 0794  
         __end_of_Timer4_Init 07F5                 __end_of_xputc 067A                 __end_of_xputs 07D1  
                  ??_I2C_Init 0020               ?_Timer1_Handler 0070           I2C1_Transmit@result 0079  
             ?_Timer4_Handler 0070       __end_of_mTouch_PortInit 0800                       ??_xputc 0076  
                     ??_xputs 0078                    __pbssBANK0 0063                    __pbssBANK1 00A0  
                  ??_LCD_Init 0076                  I2C_Init@I2Cx 0022   __end_of_I2C_CommonInterrupt 0FAB  
                I2C_Init@mode 0078                    __pmaintext 026E                       ?___wmul 0072  
                  __pintentry 0004                       _CCP2CON 029A             ?_LCD_DisplayClear 0070  
                     _APFCON0 011D                       _APFCON1 011E                       _CCPTMRS 029E  
          ??_LCD_DisplayClear 0075                       _CPSCON0 001E                       _CPSCON1 001F  
                     _LCD_Put 0FAB                  _xvprintf$200 0041                  _xvprintf$201 0043  
                _xvprintf$199 003D                       _SSP1ADD 0212                       _SSP2ADD 021A  
                     _SSP1BUF 0211                       _SSP2BUF 0219                       _SSP1MSK 0213  
                     _SSP2MSK 021B           __size_of_Buzer_Init 0022           I2C2_Transmit@result 0079  
                     _Handler 0004         __end_of_I2C1_Transmit 03F8         __end_of_I2C2_Transmit 037A  
                 _Timer1_Init 077B                   _Timer4_Init 07E4                       ___lldiv 050B  
             __size_of___wmul 001B                       ___llmod 055E               __CFG_STVREN$OFF 0000  
                     __ptext1 0FF0                       __ptext2 0044                       __ptext3 07BE  
                     __ptext4 064D                       __ptext5 0FAB                       __ptext6 0760  
                     __ptext7 055E                       __ptext8 050B                       __ptext9 07D1  
                   ?_xvprintf 0026                  ??_Basic_Init 0072                       clrloop0 0FB2  
        end_of_initialization 0040              ?_mTouch_PortInit 0070                       _xprintf 0FF0  
               ?_I2C1_PinInit 0070                 ?_I2C2_PinInit 0070                   _I2C1_Config 00B9  
                   _CPSx_Read 06FA                   _I2C2_Config 00A6                 ?_I2C1_Setting 0073  
             ___lldiv@divisor 0072                 ?_I2C2_Setting 0073               ___lldiv@counter 0025  
           I2C_Transmit@pData 0021            __end_of_Basic_Init 07BE                  __pstringtext 067A  
     __size_of_I2C1_Interrupt 0054              __CFG_FOSC$INTOSC 0000                 ??_mTouch_Init 0073  
                  ??_xvprintf 0029       __size_of_I2C2_Interrupt 0054             __size_of_I2C_Init 002A  
         I2C1_Setting@address 0076   __size_of_LCD_CursorPosition 0015                ??_I2C1_PinInit 0072  
              ??_I2C2_PinInit 0072                ??_I2C1_Setting 0075                    ?_CPSx_Read 0070  
              ??_I2C2_Setting 0075             __size_of_LCD_Init 006B                  ??_Buzer_Init 0072  
              __end_of___wmul 077B                     _ConfigReg 006E              ??_Timer1_Handler 0070  
     __size_of_DAC_Initialize 001F              ??_Timer4_Handler 0070           start_initialization 002F  
        I2C1_Transmit@address 0076                     _MemoryReg 00A0            __end_of_Buzer_Init 0741  
         __end_of_mTouch_Init 07E4           I2C2_Setting@address 0076               ___llmod@divisor 0072  
             ___llmod@counter 0021          LCD_CursorPosition@tx 0077          LCD_CursorPosition@ty 0075  
       __end_of_LCD_WriteData 05DD                      ??___wmul 0076             I2C1_Setting@Speed 0074  
                    ?_LCD_Put 0075                   __pbssCOMMON 007A                     ___latbits 0001  
               __pcstackBANK0 0020            I2C1_Transmit@i_416 0078            I2C1_Transmit@pData 0072  
   __size_of_LCD_DisplayClear 000F               I2C_Init@address 0077                      ?_Handler 0070  
                 ??_CPSx_Read 0070                 ?_I2C_Transmit 0020                 I2C_Init@Speed 0079  
                ?_Timer1_Init 0070                  ?_Timer4_Init 0070                      ?___lldiv 0072  
                    ?___llmod 0072                _I2C1_Interrupt 04B7          __end_of_I2C1_PinInit 0FD6  
__size_of_I2C_CommonInterrupt 0006          __end_of_I2C2_PinInit 0FE1          __end_of_I2C1_Setting 064D  
                    _I2C_Init 06D0          __end_of_I2C2_Setting 0615                _I2C2_Interrupt 0463  
                 _mTouch_Init 07D1             __size_of_xvprintf 022A                      ?_xprintf 0056  
              __size_of_xputc 002D                __size_of_xputs 0013                      _LCD_Init 03F8  
              ___wmul@product 0076                      _CPS_Data 0063                ??_I2C_Transmit 0023  
                   clear_ram0 0FB1        __end_of_I2C1_Interrupt 050B                      _SSP1CON1 0215  
                    _SSP1CON2 0216          I2C2_Transmit@address 0076                      _SSP2CON1 021D  
                    _SSP2CON2 021E                      _SSP1STAT 0214                      _SSP2STAT 021C  
                Handler@count 0068             ___wmul@multiplier 0072                _DAC_Initialize 0741  
      __end_of_I2C2_Interrupt 04B7        __size_of_I2C1_Transmit 007E                     _xfunc_out 006A  
            __size_of_LCD_Put 0006        __size_of_I2C2_Transmit 007F                   _CPS_PreData 00A3  
            __size_of_Handler 0029      __size_of_mTouch_PortInit 000B               ?_I2C1_Interrupt 0070  
      __end_of_DAC_Initialize 0760              __size_of___lldiv 0053              __size_of___llmod 0043  
            I2C1_Setting@mode 0073            LCD_WriteData@point 0074               ?_I2C2_Interrupt 0070  
           I2C1_Transmit@size 0073    __end_of_LCD_CursorPosition 07A9                      __ptext10 07F5  
                    __ptext11 07E4                      __ptext20 037A                      __ptext12 077B  
                    __ptext21 06D0                      __ptext13 03F8                      __ptext30 0FB7  
                    __ptext22 05DD                      __ptext14 0FE1                      __ptext31 0FA5  
                    __ptext23 0FD6                      __ptext15 0794                      __ptext32 0463  
                    __ptext24 0615                      __ptext16 05A1                      __ptext33 04B7  
                    __ptext25 0FCB                      __ptext17 0741                      __ptext34 06FA  
                    __ptext26 071F                      __ptext18 06A5                      __ptext27 07A9  
                    __ptext19 02FB                      __ptext29 0FC0                  _SSP1CON1bits 0215  
                _SSP1CON2bits 0216              _LCD_DisplayClear 0FE1                  _SSP2CON1bits 021D  
                _SSP2CON2bits 021E              __size_of_xprintf 0010                 __size_of_main 008D  
               _I2C1_Transmit 037A                 _I2C2_Transmit 02FB         __size_of_I2C1_PinInit 000B  
        __size_of_Timer1_Init 0019                      int$flags 007E         __size_of_I2C2_PinInit 000B  
        __size_of_Timer4_Init 0011           I2C_Transmit@address 0020         __size_of_I2C1_Setting 0038  
             ?_DAC_Initialize 0070                  _SSP1STATbits 0214                      _xfunc_in 0066  
       __size_of_I2C2_Setting 0038                  _SSP2STATbits 021C          __end_of_I2C_Transmit 06D0  
           I2C2_Setting@Speed 0074                      _xvprintf 0044                    xprintf@arp 005D  
                  xprintf@fmt 0056                      intlevel1 0000           _I2C_CommonInterrupt 0FA5  
                _I2C1_PinInit 0FCB              ___lldiv@dividend 0076                ?_I2C1_Transmit 0072  
           __CFG_CLKOUTEN$OFF 0000                  _I2C2_PinInit 0FD6                  _I2C1_Setting 0615  
              ?_I2C2_Transmit 0072                  _I2C2_Setting 05DD                   xvprintf@arp 0028  
                 xvprintf@fmt 0026            I2C_Transmit@result 0027             ??_mTouch_PortInit 0072  
            I2C2_Setting@mode 0073          ?_I2C_CommonInterrupt 0070                    _OPTION_REG 0095  
            ___lldiv@quotient 0021                  ?_mTouch_Init 0070        __size_of_LCD_WriteData 003C  
     __size_of_Timer1_Handler 0009                I2C1_Transmit@i 0077                      xputs@str 0079  
                   xvprintf@c 0055                     xvprintf@d 0054                     xvprintf@f 0050  
                   xvprintf@i 0052                     xvprintf@j 004A                     xvprintf@p 0045  
                   xvprintf@r 0046                     xvprintf@s 002D                     xvprintf@v 004C  
                   xvprintf@w 0048       __size_of_Timer4_Handler 000B  
