

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May 16 14:31:42 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 1.41
    29                           ; Generated 25/01/2017 GMT
    30                           ; 
    31                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F1827 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0113                     	;# 
   113  0114                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011D                     	;# 
   122  011E                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0199                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019C                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  020C                     	;# 
   146  020D                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  0219                     	;# 
   163  021A                     	;# 
   164  021B                     	;# 
   165  021C                     	;# 
   166  021D                     	;# 
   167  021E                     	;# 
   168  021F                     	;# 
   169  0291                     	;# 
   170  0291                     	;# 
   171  0292                     	;# 
   172  0293                     	;# 
   173  0294                     	;# 
   174  0295                     	;# 
   175  0295                     	;# 
   176  0296                     	;# 
   177  0298                     	;# 
   178  0298                     	;# 
   179  0299                     	;# 
   180  029A                     	;# 
   181  029B                     	;# 
   182  029C                     	;# 
   183  029C                     	;# 
   184  029D                     	;# 
   185  029E                     	;# 
   186  029E                     	;# 
   187  0311                     	;# 
   188  0311                     	;# 
   189  0312                     	;# 
   190  0313                     	;# 
   191  0318                     	;# 
   192  0318                     	;# 
   193  0319                     	;# 
   194  031A                     	;# 
   195  0394                     	;# 
   196  0395                     	;# 
   197  0396                     	;# 
   198  039A                     	;# 
   199  039C                     	;# 
   200  039D                     	;# 
   201  039E                     	;# 
   202  039F                     	;# 
   203  0415                     	;# 
   204  0416                     	;# 
   205  0417                     	;# 
   206  041C                     	;# 
   207  041D                     	;# 
   208  041E                     	;# 
   209  0FE4                     	;# 
   210  0FE5                     	;# 
   211  0FE6                     	;# 
   212  0FE7                     	;# 
   213  0FE8                     	;# 
   214  0FE9                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  0111                     	;# 
   269  0112                     	;# 
   270  0113                     	;# 
   271  0114                     	;# 
   272  0115                     	;# 
   273  0116                     	;# 
   274  0117                     	;# 
   275  0118                     	;# 
   276  0119                     	;# 
   277  011A                     	;# 
   278  011B                     	;# 
   279  011D                     	;# 
   280  011E                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0191                     	;# 
   284  0191                     	;# 
   285  0192                     	;# 
   286  0193                     	;# 
   287  0193                     	;# 
   288  0193                     	;# 
   289  0194                     	;# 
   290  0195                     	;# 
   291  0196                     	;# 
   292  0199                     	;# 
   293  019A                     	;# 
   294  019B                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019C                     	;# 
   299  019C                     	;# 
   300  019D                     	;# 
   301  019E                     	;# 
   302  019F                     	;# 
   303  020C                     	;# 
   304  020D                     	;# 
   305  0211                     	;# 
   306  0211                     	;# 
   307  0212                     	;# 
   308  0212                     	;# 
   309  0213                     	;# 
   310  0213                     	;# 
   311  0214                     	;# 
   312  0214                     	;# 
   313  0215                     	;# 
   314  0215                     	;# 
   315  0215                     	;# 
   316  0216                     	;# 
   317  0216                     	;# 
   318  0217                     	;# 
   319  0217                     	;# 
   320  0219                     	;# 
   321  021A                     	;# 
   322  021B                     	;# 
   323  021C                     	;# 
   324  021D                     	;# 
   325  021E                     	;# 
   326  021F                     	;# 
   327  0291                     	;# 
   328  0291                     	;# 
   329  0292                     	;# 
   330  0293                     	;# 
   331  0294                     	;# 
   332  0295                     	;# 
   333  0295                     	;# 
   334  0296                     	;# 
   335  0298                     	;# 
   336  0298                     	;# 
   337  0299                     	;# 
   338  029A                     	;# 
   339  029B                     	;# 
   340  029C                     	;# 
   341  029C                     	;# 
   342  029D                     	;# 
   343  029E                     	;# 
   344  029E                     	;# 
   345  0311                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0318                     	;# 
   350  0318                     	;# 
   351  0319                     	;# 
   352  031A                     	;# 
   353  0394                     	;# 
   354  0395                     	;# 
   355  0396                     	;# 
   356  039A                     	;# 
   357  039C                     	;# 
   358  039D                     	;# 
   359  039E                     	;# 
   360  039F                     	;# 
   361  0415                     	;# 
   362  0416                     	;# 
   363  0417                     	;# 
   364  041C                     	;# 
   365  041D                     	;# 
   366  041E                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  0091                     	;# 
   410  0092                     	;# 
   411  0093                     	;# 
   412  0094                     	;# 
   413  0095                     	;# 
   414  0096                     	;# 
   415  0097                     	;# 
   416  0098                     	;# 
   417  0099                     	;# 
   418  009A                     	;# 
   419  009B                     	;# 
   420  009B                     	;# 
   421  009C                     	;# 
   422  009D                     	;# 
   423  009E                     	;# 
   424  010C                     	;# 
   425  010D                     	;# 
   426  0111                     	;# 
   427  0112                     	;# 
   428  0113                     	;# 
   429  0114                     	;# 
   430  0115                     	;# 
   431  0116                     	;# 
   432  0117                     	;# 
   433  0118                     	;# 
   434  0119                     	;# 
   435  011A                     	;# 
   436  011B                     	;# 
   437  011D                     	;# 
   438  011E                     	;# 
   439  018C                     	;# 
   440  018D                     	;# 
   441  0191                     	;# 
   442  0191                     	;# 
   443  0192                     	;# 
   444  0193                     	;# 
   445  0193                     	;# 
   446  0193                     	;# 
   447  0194                     	;# 
   448  0195                     	;# 
   449  0196                     	;# 
   450  0199                     	;# 
   451  019A                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019C                     	;# 
   457  019C                     	;# 
   458  019D                     	;# 
   459  019E                     	;# 
   460  019F                     	;# 
   461  020C                     	;# 
   462  020D                     	;# 
   463  0211                     	;# 
   464  0211                     	;# 
   465  0212                     	;# 
   466  0212                     	;# 
   467  0213                     	;# 
   468  0213                     	;# 
   469  0214                     	;# 
   470  0214                     	;# 
   471  0215                     	;# 
   472  0215                     	;# 
   473  0215                     	;# 
   474  0216                     	;# 
   475  0216                     	;# 
   476  0217                     	;# 
   477  0217                     	;# 
   478  0219                     	;# 
   479  021A                     	;# 
   480  021B                     	;# 
   481  021C                     	;# 
   482  021D                     	;# 
   483  021E                     	;# 
   484  021F                     	;# 
   485  0291                     	;# 
   486  0291                     	;# 
   487  0292                     	;# 
   488  0293                     	;# 
   489  0294                     	;# 
   490  0295                     	;# 
   491  0295                     	;# 
   492  0296                     	;# 
   493  0298                     	;# 
   494  0298                     	;# 
   495  0299                     	;# 
   496  029A                     	;# 
   497  029B                     	;# 
   498  029C                     	;# 
   499  029C                     	;# 
   500  029D                     	;# 
   501  029E                     	;# 
   502  029E                     	;# 
   503  0311                     	;# 
   504  0311                     	;# 
   505  0312                     	;# 
   506  0313                     	;# 
   507  0318                     	;# 
   508  0318                     	;# 
   509  0319                     	;# 
   510  031A                     	;# 
   511  0394                     	;# 
   512  0395                     	;# 
   513  0396                     	;# 
   514  039A                     	;# 
   515  039C                     	;# 
   516  039D                     	;# 
   517  039E                     	;# 
   518  039F                     	;# 
   519  0415                     	;# 
   520  0416                     	;# 
   521  0417                     	;# 
   522  041C                     	;# 
   523  041D                     	;# 
   524  041E                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0016                     _TMR1	set	22
   537  000C                     _PORTA	set	12
   538  0019                     _T1GCON	set	25
   539  0018                     _T1CON	set	24
   540  000D                     _PORTB	set	13
   541  00C0                     _TMR1ON	set	192
   542  005F                     _GIE	set	95
   543  005E                     _PEIE	set	94
   544  0088                     _TMR1IF	set	136
   545  0063                     _RA3	set	99
   546  0064                     _RA4	set	100
   547  008C                     _TRISA	set	140
   548  0099                     _OSCCON	set	153
   549  008D                     _TRISB	set	141
   550  0488                     _TMR1IE	set	1160
   551  011E                     _APFCON1	set	286
   552  011D                     _APFCON0	set	285
   553  018C                     _ANSELA	set	396
   554  018D                     _ANSELB	set	397
   555                           
   556                           	psect	stringtext
   557  03D1                     __pstringtext:	
   558  03D1                     STR_3:	
   559  03D1  3425               	retlw	37	;'%'
   560  03D2  3430               	retlw	48	;'0'
   561  03D3  3438               	retlw	56	;'8'
   562  03D4  346C               	retlw	108	;'l'
   563  03D5  3458               	retlw	88	;'X'
   564  03D6  3420               	retlw	32	;' '
   565  03D7  3400               	retlw	0
   566  03D8                     STR_6:	
   567  03D8  3420               	retlw	32	;' '
   568  03D9  3425               	retlw	37	;'%'
   569  03DA  3430               	retlw	48	;'0'
   570  03DB  3438               	retlw	56	;'8'
   571  03DC  344C               	retlw	76	;'L'
   572  03DD  3458               	retlw	88	;'X'
   573  03DE  3400               	retlw	0
   574  03DF                     STR_4:	
   575  03DF  3420               	retlw	32	;' '
   576  03E0  3425               	retlw	37	;'%'
   577  03E1  3430               	retlw	48	;'0'
   578  03E2  3432               	retlw	50	;'2'
   579  03E3  3458               	retlw	88	;'X'
   580  03E4  3400               	retlw	0
   581  03E5                     STR_5:	
   582  03E5  3420               	retlw	32	;' '
   583  03E6  3425               	retlw	37	;'%'
   584  03E7  3430               	retlw	48	;'0'
   585  03E8  3434               	retlw	52	;'4'
   586  03E9  3458               	retlw	88	;'X'
   587  03EA  3400               	retlw	0
   588  03EB                     STR_1:	
   589  03EB  3425               	retlw	37	;'%'
   590  03EC  3455               	retlw	85	;'U'
   591  03ED  3420               	retlw	32	;' '
   592  03EE  3400               	retlw	0
   593  03EF                     STR_2:	
   594  03EF  340D               	retlw	13
   595  03F0  3400               	retlw	0
   596                           
   597                           ; #config settings
   598  0000                     
   599                           	psect	cinit
   600  000F                     start_initialization:	
   601  000F                     __initialization:	
   602                           
   603                           ; Clear objects allocated to COMMON
   604  000F  01FC               	clrf	__pbssCOMMON& (0+127)
   605                           
   606                           ; Clear objects allocated to BANK0
   607  0010  01DC               	clrf	__pbssBANK0& (0+127)
   608  0011  01DD               	clrf	(__pbssBANK0+1)& (0+127)
   609  0012  01DE               	clrf	(__pbssBANK0+2)& (0+127)
   610  0013  01DF               	clrf	(__pbssBANK0+3)& (0+127)
   611  0014  01E0               	clrf	(__pbssBANK0+4)& (0+127)
   612  0015  01E1               	clrf	(__pbssBANK0+5)& (0+127)
   613  0016  01E2               	clrf	(__pbssBANK0+6)& (0+127)
   614  0017  01E3               	clrf	(__pbssBANK0+7)& (0+127)
   615  0018  01E4               	clrf	(__pbssBANK0+8)& (0+127)
   616  0019  01E5               	clrf	(__pbssBANK0+9)& (0+127)
   617  001A  01E6               	clrf	(__pbssBANK0+10)& (0+127)
   618  001B  01E7               	clrf	(__pbssBANK0+11)& (0+127)
   619  001C                     end_of_initialization:	
   620                           ;End of C runtime variable initialization code
   621                           
   622  001C                     __end_of__initialization:	
   623  001C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   624  001D  0020               	movlb	0
   625  001E  3183  2BAF         	ljmp	_main	;jump to C main() function
   626                           
   627                           	psect	bssCOMMON
   628  007C                     __pbssCOMMON:	
   629  007C                     _outptr:	
   630  007C                     	ds	1
   631                           
   632                           	psect	bssBANK0
   633  005C                     __pbssBANK0:	
   634  005C                     _countsum:	
   635  005C                     	ds	4
   636  0060                     _xfunc_in:	
   637  0060                     	ds	2
   638  0062                     _xfunc_out:	
   639  0062                     	ds	2
   640  0064                     _resulttime:	
   641  0064                     	ds	2
   642  0066                     _count10us:	
   643  0066                     	ds	2
   644                           
   645                           	psect	cstackCOMMON
   646  0070                     __pcstackCOMMON:	
   647  0070                     ?_LCD_DisplayClear:	
   648  0070                     ?_Basic_Init:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_LCD_WriteData:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_LCD_Init:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_Timer1_Init:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_main:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_Handler:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ??_Handler:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_xputc:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_xputs:	
   673                           ; 1 bytes @ 0x0
   674                           
   675                           
   676                           ; 1 bytes @ 0x0
   677  0070                     	ds	1
   678  0071                     ??_Basic_Init:	
   679  0071                     ??_LCD_WriteData:	
   680                           ; 1 bytes @ 0x1
   681                           
   682  0071                     ??_Timer1_Init:	
   683                           ; 1 bytes @ 0x1
   684                           
   685  0071                     ?___wmul:	
   686                           ; 1 bytes @ 0x1
   687                           
   688  0071                     ?___lldiv:	
   689                           ; 2 bytes @ 0x1
   690                           
   691  0071                     ?___llmod:	
   692                           ; 4 bytes @ 0x1
   693                           
   694  0071                     ___wmul@multiplier:	
   695                           ; 4 bytes @ 0x1
   696                           
   697  0071                     ___lldiv@divisor:	
   698                           ; 2 bytes @ 0x1
   699                           
   700  0071                     ___llmod@divisor:	
   701                           ; 4 bytes @ 0x1
   702                           
   703                           
   704                           ; 4 bytes @ 0x1
   705  0071                     	ds	2
   706  0073                     LCD_WriteData@point:	
   707  0073                     ___wmul@multiplicand:	
   708                           ; 1 bytes @ 0x3
   709                           
   710                           
   711                           ; 2 bytes @ 0x3
   712  0073                     	ds	1
   713  0074                     ??_LCD_DisplayClear:	
   714  0074                     ?_LCD_Put:	
   715                           ; 1 bytes @ 0x4
   716                           
   717  0074                     ?_LCD_CursorPosition:	
   718                           ; 1 bytes @ 0x4
   719                           
   720  0074                     LCD_Put@word:	
   721                           ; 1 bytes @ 0x4
   722                           
   723  0074                     LCD_CursorPosition@ty:	
   724                           ; 1 bytes @ 0x4
   725                           
   726                           
   727                           ; 1 bytes @ 0x4
   728  0074                     	ds	1
   729  0075                     ??_LCD_Init:	
   730  0075                     ??_LCD_Put:	
   731                           ; 1 bytes @ 0x5
   732                           
   733  0075                     ??_LCD_CursorPosition:	
   734                           ; 1 bytes @ 0x5
   735                           
   736  0075                     ??_xputc:	
   737                           ; 1 bytes @ 0x5
   738                           
   739  0075                     ??___wmul:	
   740                           ; 1 bytes @ 0x5
   741                           
   742  0075                     ___wmul@product:	
   743                           ; 1 bytes @ 0x5
   744                           
   745  0075                     ___lldiv@dividend:	
   746                           ; 2 bytes @ 0x5
   747                           
   748  0075                     ___llmod@dividend:	
   749                           ; 4 bytes @ 0x5
   750                           
   751                           
   752                           ; 4 bytes @ 0x5
   753  0075                     	ds	1
   754  0076                     LCD_CursorPosition@tx:	
   755  0076                     xputc@c:	
   756                           ; 1 bytes @ 0x6
   757                           
   758                           
   759                           ; 1 bytes @ 0x6
   760  0076                     	ds	1
   761  0077                     ??_xputs:	
   762                           
   763                           ; 1 bytes @ 0x7
   764  0077                     	ds	1
   765  0078                     xputs@str:	
   766                           
   767                           ; 1 bytes @ 0x8
   768  0078                     	ds	1
   769  0079                     ??___lldiv:	
   770  0079                     ??___llmod:	
   771                           ; 1 bytes @ 0x9
   772                           
   773                           
   774                           ; 1 bytes @ 0x9
   775  0079                     	ds	1
   776  007A                     ___llmod@counter:	
   777                           
   778                           ; 1 bytes @ 0xA
   779  007A                     	ds	1
   780  007B                     ??_xprintf:	
   781                           
   782                           ; 1 bytes @ 0xB
   783  007B                     	ds	1
   784  007C                     ??_main:	
   785                           
   786                           	psect	cstackBANK0
   787  0020                     __pcstackBANK0:	
   788                           ; 1 bytes @ 0xC
   789                           
   790  0020                     ___lldiv@quotient:	
   791                           
   792                           ; 4 bytes @ 0x0
   793  0020                     	ds	4
   794  0024                     ___lldiv@counter:	
   795                           
   796                           ; 1 bytes @ 0x4
   797  0024                     	ds	1
   798  0025                     ?_xvprintf:	
   799  0025                     xvprintf@fmt:	
   800                           ; 1 bytes @ 0x5
   801                           
   802                           
   803                           ; 2 bytes @ 0x5
   804  0025                     	ds	2
   805  0027                     xvprintf@arp:	
   806                           
   807                           ; 1 bytes @ 0x7
   808  0027                     	ds	1
   809  0028                     ??_xvprintf:	
   810                           
   811                           ; 1 bytes @ 0x8
   812  0028                     	ds	4
   813  002C                     xvprintf@s:	
   814                           
   815                           ; 16 bytes @ 0xC
   816  002C                     	ds	16
   817  003C                     _xvprintf$170:	
   818                           
   819                           ; 4 bytes @ 0x1C
   820  003C                     	ds	4
   821  0040                     _xvprintf$171:	
   822                           
   823                           ; 2 bytes @ 0x20
   824  0040                     	ds	2
   825  0042                     _xvprintf$172:	
   826                           
   827                           ; 2 bytes @ 0x22
   828  0042                     	ds	2
   829  0044                     xvprintf@p:	
   830                           
   831                           ; 1 bytes @ 0x24
   832  0044                     	ds	1
   833  0045                     xvprintf@r:	
   834                           
   835                           ; 2 bytes @ 0x25
   836  0045                     	ds	2
   837  0047                     xvprintf@w:	
   838                           
   839                           ; 2 bytes @ 0x27
   840  0047                     	ds	2
   841  0049                     xvprintf@j:	
   842                           
   843                           ; 2 bytes @ 0x29
   844  0049                     	ds	2
   845  004B                     xvprintf@v:	
   846                           
   847                           ; 4 bytes @ 0x2B
   848  004B                     	ds	4
   849  004F                     xvprintf@f:	
   850                           
   851                           ; 2 bytes @ 0x2F
   852  004F                     	ds	2
   853  0051                     xvprintf@i:	
   854                           
   855                           ; 2 bytes @ 0x31
   856  0051                     	ds	2
   857  0053                     xvprintf@d:	
   858                           
   859                           ; 1 bytes @ 0x33
   860  0053                     	ds	1
   861  0054                     xvprintf@c:	
   862                           
   863                           ; 1 bytes @ 0x34
   864  0054                     	ds	1
   865  0055                     ?_xprintf:	
   866  0055                     xprintf@fmt:	
   867                           ; 1 bytes @ 0x35
   868                           
   869                           
   870                           ; 2 bytes @ 0x35
   871  0055                     	ds	6
   872  005B                     xprintf@arp:	
   873                           
   874                           ; 1 bytes @ 0x3B
   875  005B                     	ds	1
   876                           
   877                           	psect	maintext
   878  03AF                     __pmaintext:	
   879 ;;
   880 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   881 ;;
   882 ;; *************** function _main *****************
   883 ;; Defined at:
   884 ;;		line 13 in file "main.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      char 
   891 ;; Registers used:
   892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : B1F/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   898 ;;      Params:         0       0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0
   901 ;;      Totals:         0       0       0       0       0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels required when called:    7
   904 ;; This function calls:
   905 ;;		_Basic_Init
   906 ;;		_LCD_CursorPosition
   907 ;;		_LCD_Init
   908 ;;		_Timer1_Init
   909 ;;		_xprintf
   910 ;; This function is called by:
   911 ;;		Startup code after reset
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function _main
   917  03AF                     _main:	
   918                           
   919                           ;main.c: 15: Basic_Init();
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   923  03AF  3184  243D  3183   	fcall	_Basic_Init
   924                           
   925                           ;main.c: 17: Timer1_Init();
   926  03B2  3183  23F1  3183   	fcall	_Timer1_Init
   927                           
   928                           ;main.c: 18: TMR1ON = 1;;
   929  03B5  0020               	movlb	0	; select bank0
   930  03B6  1418               	bsf	24,0	;volatile
   931                           
   932                           ;main.c: 20: LCD_Init();
   933  03B7  3182  224A  3183   	fcall	_LCD_Init
   934                           
   935                           ;main.c: 21: xfunc_out = (void(*)(unsigned char))(LCD_Put);
   936  03BA  3084               	movlw	low _LCD_Put
   937  03BB  0020               	movlb	0	; select bank0
   938  03BC  00E2               	movwf	_xfunc_out
   939  03BD  3004               	movlw	high _LCD_Put
   940  03BE  00E3               	movwf	_xfunc_out+1
   941  03BF                     l2348:	
   942                           ;main.c: 23: while(1)
   943                           
   944                           
   945                           ;main.c: 24: {
   946                           ;main.c: 25: LCD_CursorPosition(0,0);
   947  03BF  01F4               	clrf	LCD_CursorPosition@ty
   948  03C0  3000               	movlw	0
   949  03C1  3184  2428  3183   	fcall	_LCD_CursorPosition
   950                           
   951                           ;main.c: 26: xprintf("%U ",(uint16_t)TMR1);
   952  03C4  30EB               	movlw	low (STR_1| (0+32768))
   953  03C5  0020               	movlb	0	; select bank0
   954  03C6  00D5               	movwf	xprintf@fmt
   955  03C7  3083               	movlw	high (STR_1| (0+32768))
   956  03C8  00D6               	movwf	xprintf@fmt+1
   957  03C9  0817               	movf	23,w	;volatile
   958  03CA  00D8               	movwf	?_xprintf+3
   959  03CB  0816               	movf	22,w	;volatile
   960  03CC  00D7               	movwf	?_xprintf+2
   961  03CD  3184  2465  3183   	fcall	_xprintf
   962  03D0  2BBF               	goto	l2348
   963  03D1                     __end_of_main:	
   964                           ;main.c: 27: }
   965                           ;main.c: 29: return 0;
   966                           ;	Return value of _main is never used
   967                           
   968                           
   969                           	psect	text1
   970  0465                     __ptext1:	
   971 ;; *************** function _xprintf *****************
   972 ;; Defined at:
   973 ;;		line 165 in file "xprintf.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
   976 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
   977 ;;		 -> STR_1(4), 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  arp             1   59[BANK0 ] PTR void [1]
   980 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   990 ;;      Params:         0       6       0       0       0       0
   991 ;;      Locals:         0       1       0       0       0       0
   992 ;;      Temps:          1       0       0       0       0       0
   993 ;;      Totals:         1       7       0       0       0       0
   994 ;;Total ram usage:        8 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    6
   997 ;; This function calls:
   998 ;;		_xvprintf
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;;		_put_dump
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           
  1006                           ;psect for function _xprintf
  1007  0465                     _xprintf:	
  1008                           
  1009                           ;xprintf.c: 170: va_list arp;
  1010                           ;xprintf.c: 173: *arp = __va_start();
  1011                           
  1012                           ;incstack = 0
  1013                           ; Regs used in _xprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1014  0465  3057               	movlw	(low ((?_xprintf| 0+2)))& (0+255)
  1015  0466  00FB               	movwf	??_xprintf
  1016  0467  087B               	movf	??_xprintf,w
  1017  0468  0020               	movlb	0	; select bank0
  1018  0469  00DB               	movwf	xprintf@arp
  1019                           
  1020                           ;xprintf.c: 174: xvprintf(fmt, arp);
  1021  046A  0856               	movf	xprintf@fmt+1,w
  1022  046B  00A6               	movwf	xvprintf@fmt+1
  1023  046C  0855               	movf	xprintf@fmt,w
  1024  046D  00A5               	movwf	xvprintf@fmt
  1025  046E  305B               	movlw	(low (xprintf@arp| 0))& (0+255)
  1026  046F  00FB               	movwf	??_xprintf
  1027  0470  087B               	movf	??_xprintf,w
  1028  0471  00A7               	movwf	xvprintf@arp
  1029  0472  3180  2020         	fcall	_xvprintf
  1030  0474  0008               	return
  1031  0475                     __end_of_xprintf:	
  1032                           
  1033                           	psect	text2
  1034  0020                     __ptext2:	
  1035 ;; *************** function _xvprintf *****************
  1036 ;; Defined at:
  1037 ;;		line 88 in file "xprintf.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  fmt             2    5[BANK0 ] PTR const unsigned char 
  1040 ;;		 -> STR_6(7), STR_5(6), STR_4(6), STR_3(7), 
  1041 ;;		 -> STR_1(4), 
  1042 ;;  arp             1    7[BANK0 ] PTR PTR void 
  1043 ;;		 -> xfprintf@arp(1), xsprintf@arp(1), xprintf@arp(1), 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  s              16   12[BANK0 ] unsigned char [16]
  1046 ;;  v               4   43[BANK0 ] unsigned long 
  1047 ;;  i               2   49[BANK0 ] unsigned int 
  1048 ;;  f               2   47[BANK0 ] unsigned int 
  1049 ;;  j               2   41[BANK0 ] unsigned int 
  1050 ;;  w               2   39[BANK0 ] unsigned int 
  1051 ;;  r               2   37[BANK0 ] unsigned int 
  1052 ;;  c               1   52[BANK0 ] unsigned char 
  1053 ;;  d               1   51[BANK0 ] unsigned char 
  1054 ;;  p               1   36[BANK0 ] PTR unsigned char 
  1055 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1065 ;;      Params:         0       3       0       0       0       0
  1066 ;;      Locals:         0      41       0       0       0       0
  1067 ;;      Temps:          0       4       0       0       0       0
  1068 ;;      Totals:         0      48       0       0       0       0
  1069 ;;Total ram usage:       48 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    5
  1072 ;; This function calls:
  1073 ;;		___lldiv
  1074 ;;		___llmod
  1075 ;;		___wmul
  1076 ;;		_xputc
  1077 ;;		_xputs
  1078 ;; This function is called by:
  1079 ;;		_xprintf
  1080 ;;		_xsprintf
  1081 ;;		_xfprintf
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _xvprintf
  1087  0020                     _xvprintf:	
  1088  0020                     l157:	
  1089                           ;incstack = 0
  1090                           ; Regs used in _xvprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1091                           ;xprintf.c: 93: unsigned int r, i, j, w, f;
  1092                           ;xprintf.c: 94: unsigned long v;
  1093                           ;xprintf.c: 95: char s[16], c, d, *p;
  1094                           ;xprintf.c: 98: for (;;) {
  1095                           
  1096                           
  1097                           ;xprintf.c: 99: c = *fmt++;
  1098  0020  0020               	movlb	0	; select bank0
  1099  0021  0825               	movf	xvprintf@fmt,w
  1100  0022  0084               	movwf	4
  1101  0023  0826               	movf	xvprintf@fmt+1,w
  1102  0024  0085               	movwf	5
  1103  0025  0800               	movf	0,w	;code access
  1104  0026  00A8               	movwf	??_xvprintf
  1105  0027  0828               	movf	??_xvprintf,w
  1106  0028  00D4               	movwf	xvprintf@c
  1107  0029  3001               	movlw	1
  1108  002A  07A5               	addwf	xvprintf@fmt,f
  1109  002B  3000               	movlw	0
  1110  002C  3DA6               	addwfc	xvprintf@fmt+1,f
  1111                           
  1112                           ;xprintf.c: 100: if (!c) break;
  1113  002D  0854               	movf	xvprintf@c,w
  1114  002E  1903               	btfsc	3,2
  1115  002F  0008               	return
  1116                           
  1117                           ;xprintf.c: 101: if (c != '%') {
  1118  0030  3025               	movlw	37
  1119  0031  0654               	xorwf	xvprintf@c,w
  1120  0032  1903               	btfsc	3,2
  1121  0033  2839               	goto	l2066
  1122                           
  1123                           ;xprintf.c: 102: xputc(c); continue;
  1124  0034  0854               	movf	xvprintf@c,w
  1125  0035  3183  2382  3180   	fcall	_xputc
  1126  0038  2820               	goto	l157
  1127  0039                     l2066:	
  1128                           
  1129                           ;xprintf.c: 103: }
  1130                           ;xprintf.c: 104: f = 0;
  1131  0039  0020               	movlb	0	; select bank0
  1132  003A  01CF               	clrf	xvprintf@f
  1133  003B  01D0               	clrf	xvprintf@f+1
  1134                           
  1135                           ;xprintf.c: 105: c = *fmt++;
  1136  003C  0825               	movf	xvprintf@fmt,w
  1137  003D  0084               	movwf	4
  1138  003E  0826               	movf	xvprintf@fmt+1,w
  1139  003F  0085               	movwf	5
  1140  0040  0800               	movf	0,w	;code access
  1141  0041  00A8               	movwf	??_xvprintf
  1142  0042  0828               	movf	??_xvprintf,w
  1143  0043  00D4               	movwf	xvprintf@c
  1144  0044  3001               	movlw	1
  1145  0045  07A5               	addwf	xvprintf@fmt,f
  1146  0046  3000               	movlw	0
  1147  0047  3DA6               	addwfc	xvprintf@fmt+1,f
  1148                           
  1149                           ;xprintf.c: 106: if (c == '0') {
  1150  0048  3030               	movlw	48
  1151  0049  0654               	xorwf	xvprintf@c,w
  1152  004A  1D03               	btfss	3,2
  1153  004B  284E               	goto	l2080
  1154                           
  1155                           ;xprintf.c: 107: f = 1; c = *fmt++;
  1156  004C  3001               	movlw	1
  1157  004D  2853               	goto	L6
  1158  004E                     l2080:	
  1159                           ;xprintf.c: 108: } else {
  1160                           
  1161                           
  1162                           ;xprintf.c: 109: if (c == '-') {
  1163  004E  302D               	movlw	45
  1164  004F  0654               	xorwf	xvprintf@c,w
  1165  0050  1D03               	btfss	3,2
  1166  0051  2862               	goto	l2088
  1167                           
  1168                           ;xprintf.c: 110: f = 2; c = *fmt++;
  1169  0052  3002               	movlw	2
  1170  0053                     L6:	
  1171  0053  00CF               	movwf	xvprintf@f
  1172  0054  3000               	movlw	0
  1173  0055  00D0               	movwf	xvprintf@f+1
  1174  0056  0825               	movf	xvprintf@fmt,w
  1175  0057  0084               	movwf	4
  1176  0058  0826               	movf	xvprintf@fmt+1,w
  1177  0059  0085               	movwf	5
  1178  005A  0800               	movf	0,w	;code access
  1179  005B  00A8               	movwf	??_xvprintf
  1180  005C  0828               	movf	??_xvprintf,w
  1181  005D  00D4               	movwf	xvprintf@c
  1182  005E  3001               	movlw	1
  1183  005F  07A5               	addwf	xvprintf@fmt,f
  1184  0060  3000               	movlw	0
  1185  0061  3DA6               	addwfc	xvprintf@fmt+1,f
  1186  0062                     l2088:	
  1187                           
  1188                           ;xprintf.c: 111: }
  1189                           ;xprintf.c: 112: }
  1190                           ;xprintf.c: 113: for (w = 0; c >= '0' && c <= '9'; c = *fmt++)
  1191  0062  01C7               	clrf	xvprintf@w
  1192  0063  01C8               	clrf	xvprintf@w+1
  1193  0064  288C               	goto	l2096
  1194  0065                     l2090:	
  1195                           
  1196                           ;xprintf.c: 114: w = w * 10 + c - '0';
  1197  0065  0854               	movf	xvprintf@c,w
  1198  0066  00A8               	movwf	??_xvprintf
  1199  0067  01A9               	clrf	??_xvprintf+1
  1200  0068  0848               	movf	xvprintf@w+1,w
  1201  0069  00F2               	movwf	___wmul@multiplier+1
  1202  006A  0847               	movf	xvprintf@w,w
  1203  006B  00F1               	movwf	___wmul@multiplier
  1204  006C  300A               	movlw	10
  1205  006D  00F3               	movwf	___wmul@multiplicand
  1206  006E  3000               	movlw	0
  1207  006F  00F4               	movwf	___wmul@multiplicand+1
  1208  0070  3184  240D  3180   	fcall	___wmul
  1209  0073  0020               	movlb	0	; select bank0
  1210  0074  0828               	movf	??_xvprintf,w
  1211  0075  0771               	addwf	?___wmul,w
  1212  0076  00AA               	movwf	??_xvprintf+2
  1213  0077  0829               	movf	??_xvprintf+1,w
  1214  0078  3D72               	addwfc	?___wmul+1,w
  1215  0079  00AB               	movwf	??_xvprintf+3
  1216  007A  082A               	movf	??_xvprintf+2,w
  1217  007B  3ED0               	addlw	208
  1218  007C  00C7               	movwf	xvprintf@w
  1219  007D  30FF               	movlw	255
  1220  007E  3D2B               	addwfc	??_xvprintf+3,w
  1221  007F  00C8               	movwf	xvprintf@w+1
  1222  0080  0825               	movf	xvprintf@fmt,w
  1223  0081  0084               	movwf	4
  1224  0082  0826               	movf	xvprintf@fmt+1,w
  1225  0083  0085               	movwf	5
  1226  0084  0800               	movf	0,w	;code access
  1227  0085  00A8               	movwf	??_xvprintf
  1228  0086  0828               	movf	??_xvprintf,w
  1229  0087  00D4               	movwf	xvprintf@c
  1230  0088  3001               	movlw	1
  1231  0089  07A5               	addwf	xvprintf@fmt,f
  1232  008A  3000               	movlw	0
  1233  008B  3DA6               	addwfc	xvprintf@fmt+1,f
  1234  008C                     l2096:	
  1235  008C  3030               	movlw	48
  1236  008D  0254               	subwf	xvprintf@c,w
  1237  008E  1C03               	skipc
  1238  008F  2894               	goto	l2100
  1239  0090  303A               	movlw	58
  1240  0091  0254               	subwf	xvprintf@c,w
  1241  0092  1C03               	skipc
  1242  0093  2865               	goto	l2090
  1243  0094                     l2100:	
  1244                           
  1245                           ;xprintf.c: 115: if (c == 'l' || c == 'L') {
  1246  0094  306C               	movlw	108
  1247  0095  0654               	xorwf	xvprintf@c,w
  1248  0096  1903               	btfsc	3,2
  1249  0097  289C               	goto	l172
  1250  0098  304C               	movlw	76
  1251  0099  0654               	xorwf	xvprintf@c,w
  1252  009A  1D03               	btfss	3,2
  1253  009B  28A9               	goto	l2108
  1254  009C                     l172:	
  1255                           
  1256                           ;xprintf.c: 116: f |= 4; c = *fmt++;
  1257  009C  154F               	bsf	xvprintf@f,2
  1258  009D  0825               	movf	xvprintf@fmt,w
  1259  009E  0084               	movwf	4
  1260  009F  0826               	movf	xvprintf@fmt+1,w
  1261  00A0  0085               	movwf	5
  1262  00A1  0800               	movf	0,w	;code access
  1263  00A2  00A8               	movwf	??_xvprintf
  1264  00A3  0828               	movf	??_xvprintf,w
  1265  00A4  00D4               	movwf	xvprintf@c
  1266  00A5  3001               	movlw	1
  1267  00A6  07A5               	addwf	xvprintf@fmt,f
  1268  00A7  3000               	movlw	0
  1269  00A8  3DA6               	addwfc	xvprintf@fmt+1,f
  1270  00A9                     l2108:	
  1271                           
  1272                           ;xprintf.c: 117: }
  1273                           ;xprintf.c: 118: if (!c) break;
  1274  00A9  0854               	movf	xvprintf@c,w
  1275  00AA  1903               	btfsc	3,2
  1276  00AB  0008               	return
  1277                           
  1278                           ;xprintf.c: 119: d = c;
  1279  00AC  0854               	movf	xvprintf@c,w
  1280  00AD  00A8               	movwf	??_xvprintf
  1281  00AE  0828               	movf	??_xvprintf,w
  1282  00AF  00D3               	movwf	xvprintf@d
  1283                           
  1284                           ;xprintf.c: 120: if (d >= 'a') d -= 0x20;
  1285  00B0  3061               	movlw	97
  1286  00B1  0253               	subwf	xvprintf@d,w
  1287  00B2  1C03               	skipc
  1288  00B3  291F               	goto	l2150
  1289  00B4  3020               	movlw	32
  1290  00B5  02D3               	subwf	xvprintf@d,f
  1291                           
  1292                           ;xprintf.c: 121: switch (d) {
  1293  00B6  291F               	goto	l2150
  1294  00B7                     l2116:	
  1295                           ;xprintf.c: 122: case 'S' :
  1296                           
  1297                           
  1298                           ;xprintf.c: 123: p = (*(char* *)__va_arg((*(char* **)arp), (char*)0));
  1299  00B7  0827               	movf	xvprintf@arp,w
  1300  00B8  0086               	movwf	6
  1301  00B9  0187               	clrf	7
  1302  00BA  3F40               	moviw [0]fsr1
  1303  00BB  0084               	movwf	4
  1304  00BC  0185               	clrf	5
  1305  00BD  0A81               	incf	1,f
  1306  00BE  0800               	movf	0,w
  1307  00BF  00A8               	movwf	??_xvprintf
  1308  00C0  0828               	movf	??_xvprintf,w
  1309  00C1  00C4               	movwf	xvprintf@p
  1310                           
  1311                           ;xprintf.c: 124: for (j = 0; p[j]; j++) ;
  1312  00C2  01C9               	clrf	xvprintf@j
  1313  00C3  01CA               	clrf	xvprintf@j+1
  1314  00C4                     l2122:	
  1315  00C4  0849               	movf	xvprintf@j,w
  1316  00C5  0744               	addwf	xvprintf@p,w
  1317  00C6  00A8               	movwf	??_xvprintf
  1318  00C7  0828               	movf	??_xvprintf,w
  1319  00C8  0086               	movwf	6
  1320  00C9  0187               	clrf	7
  1321  00CA  0801               	movf	1,w
  1322  00CB  1903               	btfsc	3,2
  1323  00CC  28D6               	goto	l2126
  1324  00CD  3001               	movlw	1
  1325  00CE  07C9               	addwf	xvprintf@j,f
  1326  00CF  3000               	movlw	0
  1327  00D0  3DCA               	addwfc	xvprintf@j+1,f
  1328  00D1  28C4               	goto	l2122
  1329  00D2                     l2124:	
  1330                           ;xprintf.c: 125: while (!(f & 2) && j++ < w) xputc(' ');
  1331                           
  1332  00D2  3020               	movlw	32
  1333  00D3  3183  2382  3180   	fcall	_xputc
  1334  00D6                     l2126:	
  1335  00D6  0020               	movlb	0	; select bank0
  1336  00D7  18CF               	btfsc	xvprintf@f,1
  1337  00D8  28E8               	goto	l2130
  1338  00D9  084A               	movf	xvprintf@j+1,w
  1339  00DA  00A9               	movwf	??_xvprintf+1
  1340  00DB  0849               	movf	xvprintf@j,w
  1341  00DC  00A8               	movwf	??_xvprintf
  1342  00DD  0AC9               	incf	xvprintf@j,f
  1343  00DE  1903               	skipnz
  1344  00DF  0ACA               	incf	xvprintf@j+1,f
  1345  00E0  0848               	movf	xvprintf@w+1,w
  1346  00E1  0229               	subwf	??_xvprintf+1,w
  1347  00E2  1D03               	skipz
  1348  00E3  28E6               	goto	u1915
  1349  00E4  0847               	movf	xvprintf@w,w
  1350  00E5  0228               	subwf	??_xvprintf,w
  1351  00E6                     u1915:	
  1352  00E6  1C03               	skipc
  1353  00E7  28D2               	goto	l2124
  1354  00E8                     l2130:	
  1355                           
  1356                           ;xprintf.c: 126: xputs(p);
  1357  00E8  0844               	movf	xvprintf@p,w
  1358  00E9  3184  2452  3180   	fcall	_xputs
  1359  00EC                     l2134:	
  1360                           ;xprintf.c: 127: while (j++ < w) xputc(' ');
  1361                           
  1362  00EC  0020               	movlb	0	; select bank0
  1363  00ED  084A               	movf	xvprintf@j+1,w
  1364  00EE  00A9               	movwf	??_xvprintf+1
  1365  00EF  0849               	movf	xvprintf@j,w
  1366  00F0  00A8               	movwf	??_xvprintf
  1367  00F1  0AC9               	incf	xvprintf@j,f
  1368  00F2  1903               	skipnz
  1369  00F3  0ACA               	incf	xvprintf@j+1,f
  1370  00F4  0848               	movf	xvprintf@w+1,w
  1371  00F5  0229               	subwf	??_xvprintf+1,w
  1372  00F6  1D03               	skipz
  1373  00F7  28FA               	goto	u1925
  1374  00F8  0847               	movf	xvprintf@w,w
  1375  00F9  0228               	subwf	??_xvprintf,w
  1376  00FA                     u1925:	
  1377  00FA  1803               	btfsc	3,0
  1378  00FB  2820               	goto	l157
  1379  00FC  3020               	movlw	32
  1380  00FD  3183  2382  3180   	fcall	_xputc
  1381  0100  28EC               	goto	l2134
  1382  0101                     l2136:	
  1383                           ;xprintf.c: 129: case 'C' :
  1384                           
  1385                           ;xprintf.c: 128: continue;
  1386                           
  1387                           
  1388                           ;xprintf.c: 130: xputc((char)(*(int *)__va_arg((*(int **)arp), (int)0))); continue;
  1389  0101  0827               	movf	xvprintf@arp,w
  1390  0102  0086               	movwf	6
  1391  0103  0187               	clrf	7
  1392  0104  0801               	movf	1,w
  1393  0105  0084               	movwf	4
  1394  0106  0185               	clrf	5
  1395  0107  3002               	movlw	2
  1396  0108  0781               	addwf	1,f
  1397  0109  0800               	movf	0,w
  1398  010A  3183  2382  3180   	fcall	_xputc
  1399  010D  2820               	goto	l157
  1400  010E                     l2138:	
  1401                           ;xprintf.c: 131: case 'B' :
  1402                           
  1403                           
  1404                           ;xprintf.c: 132: r = 2; break;
  1405  010E  3002               	movlw	2
  1406  010F  0020               	movlb	0	; select bank0
  1407  0110  2916               	goto	L3
  1408  0111                     l2140:	
  1409                           ;xprintf.c: 133: case 'O' :
  1410                           
  1411                           
  1412                           ;xprintf.c: 134: r = 8; break;
  1413  0111  3008               	movlw	8
  1414  0112  2916               	goto	L3
  1415  0113                     l2142:	
  1416                           ;xprintf.c: 135: case 'D' :
  1417                           
  1418                           
  1419                           ;xprintf.c: 136: case 'U' :
  1420                           ;xprintf.c: 137: r = 10; break;
  1421  0113  300A               	movlw	10
  1422  0114  2916               	goto	L3
  1423  0115                     l2144:	
  1424                           ;xprintf.c: 138: case 'X' :
  1425                           
  1426                           
  1427                           ;xprintf.c: 139: r = 16; break;
  1428  0115  3010               	movlw	16
  1429  0116                     L3:	
  1430  0116  00C5               	movwf	xvprintf@r
  1431  0117  3000               	movlw	0
  1432  0118  00C6               	movwf	xvprintf@r+1
  1433  0119  2937               	goto	l190
  1434  011A                     l2146:	
  1435                           ;xprintf.c: 140: default:
  1436                           
  1437                           
  1438                           ;xprintf.c: 141: xputc(c); continue;
  1439  011A  0854               	movf	xvprintf@c,w
  1440  011B  3183  2382  3180   	fcall	_xputc
  1441  011E  2820               	goto	l157
  1442  011F                     l2150:	
  1443                           ;xprintf.c: 142: }
  1444                           
  1445  011F  0020               	movlb	0	; select bank0
  1446  0120  0853               	movf	xvprintf@d,w
  1447                           
  1448                           ; Switch size 1, requested type "space"
  1449                           ; Number of cases is 7, Range of values is 66 to 88
  1450                           ; switch strategies available:
  1451                           ; Name         Instructions Cycles
  1452                           ; simple_byte           22    12 (average)
  1453                           ; direct_byte           55     9 (fixed)
  1454                           ; jumptable            263     9 (fixed)
  1455                           ;	Chosen strategy is simple_byte
  1456  0121  3A42               	xorlw	66	; case 66
  1457  0122  1903               	skipnz
  1458  0123  290E               	goto	l2138
  1459  0124  3A01               	xorlw	1	; case 67
  1460  0125  1903               	skipnz
  1461  0126  2901               	goto	l2136
  1462  0127  3A07               	xorlw	7	; case 68
  1463  0128  1903               	skipnz
  1464  0129  2913               	goto	l2142
  1465  012A  3A0B               	xorlw	11	; case 79
  1466  012B  1903               	skipnz
  1467  012C  2911               	goto	l2140
  1468  012D  3A1C               	xorlw	28	; case 83
  1469  012E  1903               	skipnz
  1470  012F  28B7               	goto	l2116
  1471  0130  3A06               	xorlw	6	; case 85
  1472  0131  1903               	skipnz
  1473  0132  2913               	goto	l2142
  1474  0133  3A0D               	xorlw	13	; case 88
  1475  0134  1903               	skipnz
  1476  0135  2915               	goto	l2144
  1477  0136  291A               	goto	l2146
  1478  0137                     l190:	
  1479                           
  1480                           ;xprintf.c: 145: v = (f & 4) ? (*(long *)__va_arg((*(long **)arp), (long)0)) : ((d == 'D
      +                          ') ? (long)(*(int *)__va_arg((*(int **)arp), (int)0)) : (long)(*(unsigned int *)__va_arg
      +                          ((*(unsigned int **)arp), (unsigned int)0)));
  1481  0137  0020               	movlb	0	; select bank0
  1482  0138  194F               	btfsc	xvprintf@f,2
  1483  0139  296F               	goto	l2160
  1484  013A  3044               	movlw	68
  1485  013B  0653               	xorwf	xvprintf@d,w
  1486  013C  1903               	btfsc	3,2
  1487  013D  2951               	goto	l2156
  1488  013E  0827               	movf	xvprintf@arp,w
  1489  013F  0086               	movwf	6
  1490  0140  0187               	clrf	7
  1491  0141  0801               	movf	1,w
  1492  0142  0084               	movwf	4
  1493  0143  0185               	clrf	5
  1494  0144  3002               	movlw	2
  1495  0145  0781               	addwf	1,f
  1496  0146  3F00               	moviw [0]fsr0
  1497  0147  00A8               	movwf	??_xvprintf
  1498  0148  3F01               	moviw [1]fsr0
  1499  0149  00A9               	movwf	??_xvprintf+1
  1500  014A  0828               	movf	??_xvprintf,w
  1501  014B  00BC               	movwf	_xvprintf$170
  1502  014C  0829               	movf	??_xvprintf+1,w
  1503  014D  00BD               	movwf	_xvprintf$170+1
  1504  014E  01BE               	clrf	_xvprintf$170+2
  1505  014F  01BF               	clrf	_xvprintf$170+3
  1506  0150  2966               	goto	l2158
  1507  0151                     l2156:	
  1508  0151  0827               	movf	xvprintf@arp,w
  1509  0152  0086               	movwf	6
  1510  0153  0187               	clrf	7
  1511  0154  0801               	movf	1,w
  1512  0155  0084               	movwf	4
  1513  0156  0185               	clrf	5
  1514  0157  3002               	movlw	2
  1515  0158  0781               	addwf	1,f
  1516  0159  3F00               	moviw [0]fsr0
  1517  015A  00A8               	movwf	??_xvprintf
  1518  015B  3F01               	moviw [1]fsr0
  1519  015C  00A9               	movwf	??_xvprintf+1
  1520  015D  0828               	movf	??_xvprintf,w
  1521  015E  00BC               	movwf	_xvprintf$170
  1522  015F  0829               	movf	??_xvprintf+1,w
  1523  0160  00BD               	movwf	_xvprintf$170+1
  1524  0161  0D89               	rlf	9,f
  1525  0162  3B89               	subwfb	9,f
  1526  0163  0989               	comf	9,f
  1527  0164  00BE               	movwf	_xvprintf$170+2
  1528  0165  00BF               	movwf	_xvprintf$170+3
  1529  0166                     l2158:	
  1530  0166  083F               	movf	_xvprintf$170+3,w
  1531  0167  00CE               	movwf	xvprintf@v+3
  1532  0168  083E               	movf	_xvprintf$170+2,w
  1533  0169  00CD               	movwf	xvprintf@v+2
  1534  016A  083D               	movf	_xvprintf$170+1,w
  1535  016B  00CC               	movwf	xvprintf@v+1
  1536  016C  083C               	movf	_xvprintf$170,w
  1537  016D  00CB               	movwf	xvprintf@v
  1538  016E  297F               	goto	l2162
  1539  016F                     l2160:	
  1540  016F  0827               	movf	xvprintf@arp,w
  1541  0170  0086               	movwf	6
  1542  0171  0187               	clrf	7
  1543  0172  0801               	movf	1,w
  1544  0173  0084               	movwf	4
  1545  0174  0185               	clrf	5
  1546  0175  3004               	movlw	4
  1547  0176  0781               	addwf	1,f
  1548  0177  3F00               	moviw [0]fsr0
  1549  0178  00CB               	movwf	xvprintf@v
  1550  0179  3F01               	moviw [1]fsr0
  1551  017A  00CC               	movwf	xvprintf@v+1
  1552  017B  3F02               	moviw [2]fsr0
  1553  017C  00CD               	movwf	xvprintf@v+2
  1554  017D  3F03               	moviw [3]fsr0
  1555  017E  00CE               	movwf	xvprintf@v+3
  1556  017F                     l2162:	
  1557                           
  1558                           ;xprintf.c: 146: if (d == 'D' && (v & 0x80000000)) {
  1559  017F  3044               	movlw	68
  1560  0180  0653               	xorwf	xvprintf@d,w
  1561  0181  1903               	btfsc	3,2
  1562  0182  1FCE               	btfss	xvprintf@v+3,7
  1563  0183  2990               	goto	l2168
  1564                           
  1565                           ;xprintf.c: 147: v = 0 - v;
  1566  0184  09CB               	comf	xvprintf@v,f
  1567  0185  09CC               	comf	xvprintf@v+1,f
  1568  0186  09CD               	comf	xvprintf@v+2,f
  1569  0187  09CE               	comf	xvprintf@v+3,f
  1570  0188  0ACB               	incf	xvprintf@v,f
  1571  0189  1903               	skipnz
  1572  018A  0ACC               	incf	xvprintf@v+1,f
  1573  018B  1903               	skipnz
  1574  018C  0ACD               	incf	xvprintf@v+2,f
  1575  018D  1903               	skipnz
  1576  018E  0ACE               	incf	xvprintf@v+3,f
  1577                           
  1578                           ;xprintf.c: 148: f |= 8;
  1579  018F  15CF               	bsf	xvprintf@f,3
  1580  0190                     l2168:	
  1581                           
  1582                           ;xprintf.c: 149: }
  1583                           ;xprintf.c: 150: i = 0;
  1584  0190  01D1               	clrf	xvprintf@i
  1585  0191  01D2               	clrf	xvprintf@i+1
  1586  0192                     l2170:	
  1587                           ;xprintf.c: 151: do {
  1588                           
  1589                           
  1590                           ;xprintf.c: 152: d = (char)(v % r); v /= r;
  1591  0192  0845               	movf	xvprintf@r,w
  1592  0193  00F1               	movwf	___llmod@divisor
  1593  0194  0846               	movf	xvprintf@r+1,w
  1594  0195  00F2               	movwf	___llmod@divisor+1
  1595  0196  01F3               	clrf	___llmod@divisor+2
  1596  0197  01F4               	clrf	___llmod@divisor+3
  1597  0198  084E               	movf	xvprintf@v+3,w
  1598  0199  00F8               	movwf	___llmod@dividend+3
  1599  019A  084D               	movf	xvprintf@v+2,w
  1600  019B  00F7               	movwf	___llmod@dividend+2
  1601  019C  084C               	movf	xvprintf@v+1,w
  1602  019D  00F6               	movwf	___llmod@dividend+1
  1603  019E  084B               	movf	xvprintf@v,w
  1604  019F  00F5               	movwf	___llmod@dividend
  1605  01A0  3183  2306  3180   	fcall	___llmod
  1606  01A3  0871               	movf	?___llmod,w
  1607  01A4  0020               	movlb	0	; select bank0
  1608  01A5  00A8               	movwf	??_xvprintf
  1609  01A6  0828               	movf	??_xvprintf,w
  1610  01A7  00D3               	movwf	xvprintf@d
  1611  01A8  0845               	movf	xvprintf@r,w
  1612  01A9  00F1               	movwf	___lldiv@divisor
  1613  01AA  0846               	movf	xvprintf@r+1,w
  1614  01AB  00F2               	movwf	___lldiv@divisor+1
  1615  01AC  01F3               	clrf	___lldiv@divisor+2
  1616  01AD  01F4               	clrf	___lldiv@divisor+3
  1617  01AE  084E               	movf	xvprintf@v+3,w
  1618  01AF  00F8               	movwf	___lldiv@dividend+3
  1619  01B0  084D               	movf	xvprintf@v+2,w
  1620  01B1  00F7               	movwf	___lldiv@dividend+2
  1621  01B2  084C               	movf	xvprintf@v+1,w
  1622  01B3  00F6               	movwf	___lldiv@dividend+1
  1623  01B4  084B               	movf	xvprintf@v,w
  1624  01B5  00F5               	movwf	___lldiv@dividend
  1625  01B6  3182  22B3  3180   	fcall	___lldiv
  1626  01B9  0874               	movf	?___lldiv+3,w
  1627  01BA  0020               	movlb	0	; select bank0
  1628  01BB  00CE               	movwf	xvprintf@v+3
  1629  01BC  0873               	movf	?___lldiv+2,w
  1630  01BD  00CD               	movwf	xvprintf@v+2
  1631  01BE  0872               	movf	?___lldiv+1,w
  1632  01BF  00CC               	movwf	xvprintf@v+1
  1633  01C0  0871               	movf	?___lldiv,w
  1634  01C1  00CB               	movwf	xvprintf@v
  1635                           
  1636                           ;xprintf.c: 153: if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
  1637  01C2  300A               	movlw	10
  1638  01C3  0253               	subwf	xvprintf@d,w
  1639  01C4  1C03               	skipc
  1640  01C5  29D4               	goto	l2184
  1641  01C6  3078               	movlw	120
  1642  01C7  0654               	xorwf	xvprintf@c,w
  1643  01C8  1903               	btfsc	3,2
  1644  01C9  29CC               	goto	l2180
  1645  01CA  3007               	movlw	7
  1646  01CB  29CD               	goto	L4
  1647  01CC                     l2180:	
  1648  01CC  3027               	movlw	39
  1649  01CD                     L4:	
  1650  01CD  00C0               	movwf	_xvprintf$171
  1651  01CE  3000               	movlw	0
  1652  01CF  00C1               	movwf	_xvprintf$171+1
  1653  01D0  0840               	movf	_xvprintf$171,w
  1654  01D1  00A8               	movwf	??_xvprintf
  1655  01D2  0828               	movf	??_xvprintf,w
  1656  01D3  07D3               	addwf	xvprintf@d,f
  1657  01D4                     l2184:	
  1658                           
  1659                           ;xprintf.c: 154: s[i++] = d + '0';
  1660  01D4  0853               	movf	xvprintf@d,w
  1661  01D5  3E30               	addlw	48
  1662  01D6  00A8               	movwf	??_xvprintf
  1663  01D7  0851               	movf	xvprintf@i,w
  1664  01D8  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  1665  01D9  0086               	movwf	6
  1666  01DA  0187               	clrf	7
  1667  01DB  0828               	movf	??_xvprintf,w
  1668  01DC  0081               	movwf	1
  1669  01DD  3001               	movlw	1
  1670  01DE  07D1               	addwf	xvprintf@i,f
  1671  01DF  3000               	movlw	0
  1672  01E0  3DD2               	addwfc	xvprintf@i+1,f
  1673                           
  1674                           ;xprintf.c: 155: } while (v && i < sizeof(s));
  1675  01E1  084E               	movf	xvprintf@v+3,w
  1676  01E2  044D               	iorwf	xvprintf@v+2,w
  1677  01E3  044C               	iorwf	xvprintf@v+1,w
  1678  01E4  044B               	iorwf	xvprintf@v,w
  1679  01E5  1903               	skipnz
  1680  01E6  29EE               	goto	l213
  1681  01E7  3000               	movlw	0
  1682  01E8  0252               	subwf	xvprintf@i+1,w
  1683  01E9  3010               	movlw	16
  1684  01EA  1903               	skipnz
  1685  01EB  0251               	subwf	xvprintf@i,w
  1686  01EC  1C03               	skipc
  1687  01ED  2992               	goto	l2170
  1688  01EE                     l213:	
  1689                           
  1690                           ;xprintf.c: 156: if (f & 8) s[i++] = '-';
  1691  01EE  1DCF               	btfss	xvprintf@f,3
  1692  01EF  29FC               	goto	l2196
  1693  01F0  302D               	movlw	45
  1694  01F1  00A8               	movwf	??_xvprintf
  1695  01F2  0851               	movf	xvprintf@i,w
  1696  01F3  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  1697  01F4  0086               	movwf	6
  1698  01F5  0187               	clrf	7
  1699  01F6  0828               	movf	??_xvprintf,w
  1700  01F7  0081               	movwf	1
  1701  01F8  3001               	movlw	1
  1702  01F9  07D1               	addwf	xvprintf@i,f
  1703  01FA  3000               	movlw	0
  1704  01FB  3DD2               	addwfc	xvprintf@i+1,f
  1705  01FC                     l2196:	
  1706                           
  1707                           ;xprintf.c: 157: j = i; d = (f & 1) ? '0' : ' ';
  1708  01FC  0852               	movf	xvprintf@i+1,w
  1709  01FD  00CA               	movwf	xvprintf@j+1
  1710  01FE  0851               	movf	xvprintf@i,w
  1711  01FF  00C9               	movwf	xvprintf@j
  1712  0200  184F               	btfsc	xvprintf@f,0
  1713  0201  2A04               	goto	l2202
  1714  0202  3020               	movlw	32
  1715  0203  2A05               	goto	L5
  1716  0204                     l2202:	
  1717  0204  3030               	movlw	48
  1718  0205                     L5:	
  1719  0205  00C2               	movwf	_xvprintf$172
  1720  0206  3000               	movlw	0
  1721  0207  00C3               	movwf	_xvprintf$172+1
  1722  0208  0842               	movf	_xvprintf$172,w
  1723  0209  00A8               	movwf	??_xvprintf
  1724  020A  0828               	movf	??_xvprintf,w
  1725  020B  00D3               	movwf	xvprintf@d
  1726                           
  1727                           ;xprintf.c: 158: while (!(f & 2) && j++ < w) xputc(d);
  1728  020C  2A11               	goto	l2206
  1729  020D                     l2204:	
  1730  020D  0853               	movf	xvprintf@d,w
  1731  020E  3183  2382  3180   	fcall	_xputc
  1732  0211                     l2206:	
  1733  0211  0020               	movlb	0	; select bank0
  1734  0212  18CF               	btfsc	xvprintf@f,1
  1735  0213  2A23               	goto	l2210
  1736  0214  084A               	movf	xvprintf@j+1,w
  1737  0215  00A9               	movwf	??_xvprintf+1
  1738  0216  0849               	movf	xvprintf@j,w
  1739  0217  00A8               	movwf	??_xvprintf
  1740  0218  0AC9               	incf	xvprintf@j,f
  1741  0219  1903               	skipnz
  1742  021A  0ACA               	incf	xvprintf@j+1,f
  1743  021B  0848               	movf	xvprintf@w+1,w
  1744  021C  0229               	subwf	??_xvprintf+1,w
  1745  021D  1D03               	skipz
  1746  021E  2A21               	goto	u2045
  1747  021F  0847               	movf	xvprintf@w,w
  1748  0220  0228               	subwf	??_xvprintf,w
  1749  0221                     u2045:	
  1750  0221  1C03               	skipc
  1751  0222  2A0D               	goto	l2204
  1752  0223                     l2210:	
  1753                           ;xprintf.c: 159: do xputc(s[--i]); while(i);
  1754                           
  1755  0223  3001               	movlw	1
  1756  0224  02D1               	subwf	xvprintf@i,f
  1757  0225  3000               	movlw	0
  1758  0226  3BD2               	subwfb	xvprintf@i+1,f
  1759  0227  0851               	movf	xvprintf@i,w
  1760  0228  3E2C               	addlw	(low (xvprintf@s| 0))& (0+255)
  1761  0229  0086               	movwf	6
  1762  022A  0187               	clrf	7
  1763  022B  0801               	movf	1,w
  1764  022C  3183  2382  3180   	fcall	_xputc
  1765  022F  0020               	movlb	0	; select bank0
  1766  0230  0851               	movf	xvprintf@i,w
  1767  0231  0452               	iorwf	xvprintf@i+1,w
  1768  0232  1903               	btfsc	3,2
  1769  0233  2A39               	goto	l2216
  1770  0234  2A23               	goto	l2210
  1771  0235                     l2214:	
  1772                           ;xprintf.c: 160: while (j++ < w) xputc(' ');
  1773                           
  1774  0235  3020               	movlw	32
  1775  0236  3183  2382  3180   	fcall	_xputc
  1776  0239                     l2216:	
  1777  0239  0020               	movlb	0	; select bank0
  1778  023A  084A               	movf	xvprintf@j+1,w
  1779  023B  00A9               	movwf	??_xvprintf+1
  1780  023C  0849               	movf	xvprintf@j,w
  1781  023D  00A8               	movwf	??_xvprintf
  1782  023E  0AC9               	incf	xvprintf@j,f
  1783  023F  1903               	skipnz
  1784  0240  0ACA               	incf	xvprintf@j+1,f
  1785  0241  0848               	movf	xvprintf@w+1,w
  1786  0242  0229               	subwf	??_xvprintf+1,w
  1787  0243  1D03               	skipz
  1788  0244  2A47               	goto	u2065
  1789  0245  0847               	movf	xvprintf@w,w
  1790  0246  0228               	subwf	??_xvprintf,w
  1791  0247                     u2065:	
  1792  0247  1803               	btfsc	3,0
  1793  0248  2820               	goto	l157
  1794  0249  2A35               	goto	l2214
  1795  024A                     __end_of_xvprintf:	
  1796                           ;xprintf.c: 161: }
  1797                           
  1798                           
  1799                           	psect	text3
  1800  0452                     __ptext3:	
  1801 ;; *************** function _xputs *****************
  1802 ;; Defined at:
  1803 ;;		line 44 in file "xprintf.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  str             1    wreg     PTR const unsigned char 
  1806 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  str             1    8[COMMON] PTR const unsigned char 
  1809 ;;		 -> ?_xfprintf(1), ?_xsprintf(1), ?_xprintf(1), 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1819 ;;      Params:         0       0       0       0       0       0
  1820 ;;      Locals:         1       0       0       0       0       0
  1821 ;;      Temps:          1       0       0       0       0       0
  1822 ;;      Totals:         2       0       0       0       0       0
  1823 ;;Total ram usage:        2 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    4
  1826 ;; This function calls:
  1827 ;;		_xputc
  1828 ;; This function is called by:
  1829 ;;		_xvprintf
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _xputs
  1835  0452                     _xputs:	
  1836                           
  1837                           ;incstack = 0
  1838                           ; Regs used in _xputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1839                           ;xputs@str stored from wreg
  1840  0452  00F8               	movwf	xputs@str
  1841  0453                     l1988:	
  1842                           ;xprintf.c: 48: while (*str)
  1843                           
  1844  0453  0878               	movf	xputs@str,w
  1845  0454  0086               	movwf	6
  1846  0455  0187               	clrf	7
  1847  0456  0801               	movf	1,w
  1848  0457  1903               	btfsc	3,2
  1849  0458  0008               	return
  1850                           
  1851                           ;xprintf.c: 49: xputc(*str++);
  1852  0459  0878               	movf	xputs@str,w
  1853  045A  0086               	movwf	6
  1854  045B  0187               	clrf	7
  1855  045C  0801               	movf	1,w
  1856  045D  3183  2382  3184   	fcall	_xputc
  1857  0460  3001               	movlw	1
  1858  0461  00F7               	movwf	??_xputs
  1859  0462  0877               	movf	??_xputs,w
  1860  0463  07F8               	addwf	xputs@str,f
  1861  0464  2C53               	goto	l1988
  1862  0465                     __end_of_xputs:	
  1863                           
  1864                           	psect	text4
  1865  0382                     __ptext4:	
  1866 ;; *************** function _xputc *****************
  1867 ;; Defined at:
  1868 ;;		line 26 in file "xprintf.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  c               1    wreg     unsigned char 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  c               1    6[COMMON] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1882 ;;      Params:         0       0       0       0       0       0
  1883 ;;      Locals:         1       0       0       0       0       0
  1884 ;;      Temps:          1       0       0       0       0       0
  1885 ;;      Totals:         2       0       0       0       0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    3
  1889 ;; This function calls:
  1890 ;;		Absolute function
  1891 ;;		_LCD_Put
  1892 ;; This function is called by:
  1893 ;;		_xputs
  1894 ;;		_xvprintf
  1895 ;;		_xfputs
  1896 ;;		_put_dump
  1897 ;;		_xgets
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function _xputc
  1903  0382                     _xputc:	
  1904                           
  1905                           ;incstack = 0
  1906                           ; Regs used in _xputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1907                           ;xputc@c stored from wreg
  1908  0382  00F6               	movwf	xputc@c
  1909  0383  300A               	movlw	10
  1910  0384  0676               	xorwf	xputc@c,w
  1911  0385  1D03               	btfss	3,2
  1912  0386  2B91               	goto	l1970
  1913  0387  30EF               	movlw	(low (STR_2| (0+32768)))& (0+255)
  1914  0388  00F5               	movwf	??_xputc
  1915  0389  0875               	movf	??_xputc,w
  1916  038A  00F4               	movwf	LCD_Put@word
  1917  038B  0020               	movlb	0	; select bank0
  1918  038C  0863               	movf	_xfunc_out+1,w
  1919  038D  008A               	movwf	10
  1920  038E  0862               	movf	_xfunc_out,w
  1921  038F  000A               	callw
  1922  0390  3183               	pagesel	$
  1923  0391                     l1970:	
  1924                           
  1925                           ;xprintf.c: 30: if (outptr) {
  1926  0391  087C               	movf	_outptr,w
  1927  0392  1903               	btfsc	3,2
  1928  0393  2BA0               	goto	l1978
  1929                           
  1930                           ;xprintf.c: 31: *outptr++ = (unsigned char)c;
  1931  0394  0876               	movf	xputc@c,w
  1932  0395  00F5               	movwf	??_xputc
  1933  0396  087C               	movf	_outptr,w
  1934  0397  0086               	movwf	6
  1935  0398  0187               	clrf	7
  1936  0399  0875               	movf	??_xputc,w
  1937  039A  0081               	movwf	1
  1938  039B  3001               	movlw	1
  1939  039C  00F5               	movwf	??_xputc
  1940  039D  0875               	movf	??_xputc,w
  1941  039E  07FC               	addwf	_outptr,f
  1942                           
  1943                           ;xprintf.c: 32: return;
  1944  039F  0008               	return
  1945  03A0                     l1978:	
  1946                           
  1947                           ;xprintf.c: 33: }
  1948                           ;xprintf.c: 35: if (xfunc_out) xfunc_out((unsigned char)c);
  1949  03A0  0020               	movlb	0	; select bank0
  1950  03A1  0862               	movf	_xfunc_out,w
  1951  03A2  0463               	iorwf	_xfunc_out+1,w
  1952  03A3  1903               	btfsc	3,2
  1953  03A4  0008               	return
  1954  03A5  0876               	movf	xputc@c,w
  1955  03A6  00F5               	movwf	??_xputc
  1956  03A7  0875               	movf	??_xputc,w
  1957  03A8  00F4               	movwf	LCD_Put@word
  1958  03A9  0863               	movf	_xfunc_out+1,w
  1959  03AA  008A               	movwf	10
  1960  03AB  0862               	movf	_xfunc_out,w
  1961  03AC  000A               	callw
  1962  03AD  3183               	pagesel	$
  1963  03AE  0008               	return
  1964  03AF                     __end_of_xputc:	
  1965                           
  1966                           	psect	text5
  1967  0484                     __ptext5:	
  1968 ;; *************** function _LCD_Put *****************
  1969 ;; Defined at:
  1970 ;;		line 54 in file "LCD.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  word            1    4[COMMON] char 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0, pclath, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1984 ;;      Params:         1       0       0       0       0       0
  1985 ;;      Locals:         0       0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0       0
  1987 ;;      Totals:         1       0       0       0       0       0
  1988 ;;Total ram usage:        1 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    2
  1991 ;; This function calls:
  1992 ;;		_LCD_WriteData
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;;		_xputc
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           
  2000                           ;psect for function _LCD_Put
  2001  0484                     _LCD_Put:	
  2002                           
  2003                           ;LCD.c: 56: RA3 = 1;
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in _LCD_Put: [wreg+status,2+status,0+pclath+cstack]
  2007  0484  0020               	movlb	0	; select bank0
  2008  0485  158C               	bsf	12,3	;volatile
  2009                           
  2010                           ;LCD.c: 57: LCD_WriteData(word);
  2011  0486  0874               	movf	LCD_Put@word,w
  2012  0487  3183  2348         	fcall	_LCD_WriteData
  2013  0489  0008               	return
  2014  048A                     __end_of_LCD_Put:	
  2015                           
  2016                           	psect	text6
  2017  040D                     __ptext6:	
  2018 ;; *************** function ___wmul *****************
  2019 ;; Defined at:
  2020 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  multiplier      2    1[COMMON] unsigned int 
  2023 ;;  multiplicand    2    3[COMMON] unsigned int 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  product         2    5[COMMON] unsigned int 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  2    1[COMMON] unsigned int 
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2035 ;;      Params:         4       0       0       0       0       0
  2036 ;;      Locals:         2       0       0       0       0       0
  2037 ;;      Temps:          0       0       0       0       0       0
  2038 ;;      Totals:         6       0       0       0       0       0
  2039 ;;Total ram usage:        6 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    1
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_xvprintf
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function ___wmul
  2051  040D                     ___wmul:	
  2052                           
  2053                           ;incstack = 0
  2054                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2055  040D  01F5               	clrf	___wmul@product
  2056  040E  01F6               	clrf	___wmul@product+1
  2057  040F                     l1992:	
  2058  040F  1C71               	btfss	___wmul@multiplier,0
  2059  0410  2C15               	goto	l394
  2060  0411  0873               	movf	___wmul@multiplicand,w
  2061  0412  07F5               	addwf	___wmul@product,f
  2062  0413  0874               	movf	___wmul@multiplicand+1,w
  2063  0414  3DF6               	addwfc	___wmul@product+1,f
  2064  0415                     l394:	
  2065  0415  3001               	movlw	1
  2066  0416                     u1635:	
  2067  0416  35F3               	lslf	___wmul@multiplicand,f
  2068  0417  0DF4               	rlf	___wmul@multiplicand+1,f
  2069  0418  0B89               	decfsz	9,f
  2070  0419  2C16               	goto	u1635
  2071  041A  3001               	movlw	1
  2072  041B                     u1645:	
  2073  041B  36F2               	lsrf	___wmul@multiplier+1,f
  2074  041C  0CF1               	rrf	___wmul@multiplier,f
  2075  041D  0B89               	decfsz	9,f
  2076  041E  2C1B               	goto	u1645
  2077  041F  0871               	movf	___wmul@multiplier,w
  2078  0420  0472               	iorwf	___wmul@multiplier+1,w
  2079  0421  1D03               	btfss	3,2
  2080  0422  2C0F               	goto	l1992
  2081  0423  0876               	movf	___wmul@product+1,w
  2082  0424  00F2               	movwf	?___wmul+1
  2083  0425  0875               	movf	___wmul@product,w
  2084  0426  00F1               	movwf	?___wmul
  2085  0427  0008               	return
  2086  0428                     __end_of___wmul:	
  2087                           
  2088                           	psect	text7
  2089  0306                     __ptext7:	
  2090 ;; *************** function ___llmod *****************
  2091 ;; Defined at:
  2092 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  divisor         4    1[COMMON] unsigned long 
  2095 ;;  dividend        4    5[COMMON] unsigned long 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  counter         1   10[COMMON] unsigned char 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  4    1[COMMON] unsigned long 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2107 ;;      Params:         8       0       0       0       0       0
  2108 ;;      Locals:         1       0       0       0       0       0
  2109 ;;      Temps:          1       0       0       0       0       0
  2110 ;;      Totals:        10       0       0       0       0       0
  2111 ;;Total ram usage:       10 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_xvprintf
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function ___llmod
  2123  0306                     ___llmod:	
  2124                           
  2125                           ;incstack = 0
  2126                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2127  0306  0874               	movf	___llmod@divisor+3,w
  2128  0307  0473               	iorwf	___llmod@divisor+2,w
  2129  0308  0472               	iorwf	___llmod@divisor+1,w
  2130  0309  0471               	iorwf	___llmod@divisor,w
  2131  030A  1903               	skipnz
  2132  030B  2B3F               	goto	l2044
  2133  030C  01FA               	clrf	___llmod@counter
  2134  030D  0AFA               	incf	___llmod@counter,f
  2135  030E                     l2034:	
  2136  030E  1BF4               	btfsc	___llmod@divisor+3,7
  2137  030F  2B1C               	goto	l2036
  2138  0310  3001               	movlw	1
  2139  0311                     u1745:	
  2140  0311  35F1               	lslf	___llmod@divisor,f
  2141  0312  0DF2               	rlf	___llmod@divisor+1,f
  2142  0313  0DF3               	rlf	___llmod@divisor+2,f
  2143  0314  0DF4               	rlf	___llmod@divisor+3,f
  2144  0315  0B89               	decfsz	9,f
  2145  0316  2B11               	goto	u1745
  2146  0317  3001               	movlw	1
  2147  0318  00F9               	movwf	??___llmod
  2148  0319  0879               	movf	??___llmod,w
  2149  031A  07FA               	addwf	___llmod@counter,f
  2150  031B  2B0E               	goto	l2034
  2151  031C                     l2036:	
  2152  031C  0874               	movf	___llmod@divisor+3,w
  2153  031D  0278               	subwf	___llmod@dividend+3,w
  2154  031E  1D03               	skipz
  2155  031F  2B2A               	goto	u1765
  2156  0320  0873               	movf	___llmod@divisor+2,w
  2157  0321  0277               	subwf	___llmod@dividend+2,w
  2158  0322  1D03               	skipz
  2159  0323  2B2A               	goto	u1765
  2160  0324  0872               	movf	___llmod@divisor+1,w
  2161  0325  0276               	subwf	___llmod@dividend+1,w
  2162  0326  1D03               	skipz
  2163  0327  2B2A               	goto	u1765
  2164  0328  0871               	movf	___llmod@divisor,w
  2165  0329  0275               	subwf	___llmod@dividend,w
  2166  032A                     u1765:	
  2167  032A  1C03               	skipc
  2168  032B  2B34               	goto	l2040
  2169  032C  0871               	movf	___llmod@divisor,w
  2170  032D  02F5               	subwf	___llmod@dividend,f
  2171  032E  0872               	movf	___llmod@divisor+1,w
  2172  032F  3BF6               	subwfb	___llmod@dividend+1,f
  2173  0330  0873               	movf	___llmod@divisor+2,w
  2174  0331  3BF7               	subwfb	___llmod@dividend+2,f
  2175  0332  0874               	movf	___llmod@divisor+3,w
  2176  0333  3BF8               	subwfb	___llmod@dividend+3,f
  2177  0334                     l2040:	
  2178  0334  3001               	movlw	1
  2179  0335                     u1775:	
  2180  0335  36F4               	lsrf	___llmod@divisor+3,f
  2181  0336  0CF3               	rrf	___llmod@divisor+2,f
  2182  0337  0CF2               	rrf	___llmod@divisor+1,f
  2183  0338  0CF1               	rrf	___llmod@divisor,f
  2184  0339  0B89               	decfsz	9,f
  2185  033A  2B35               	goto	u1775
  2186  033B  3001               	movlw	1
  2187  033C  02FA               	subwf	___llmod@counter,f
  2188  033D  1D03               	btfss	3,2
  2189  033E  2B1C               	goto	l2036
  2190  033F                     l2044:	
  2191  033F  0878               	movf	___llmod@dividend+3,w
  2192  0340  00F4               	movwf	?___llmod+3
  2193  0341  0877               	movf	___llmod@dividend+2,w
  2194  0342  00F3               	movwf	?___llmod+2
  2195  0343  0876               	movf	___llmod@dividend+1,w
  2196  0344  00F2               	movwf	?___llmod+1
  2197  0345  0875               	movf	___llmod@dividend,w
  2198  0346  00F1               	movwf	?___llmod
  2199  0347  0008               	return
  2200  0348                     __end_of___llmod:	
  2201                           
  2202                           	psect	text8
  2203  02B3                     __ptext8:	
  2204 ;; *************** function ___lldiv *****************
  2205 ;; Defined at:
  2206 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  divisor         4    1[COMMON] unsigned long 
  2209 ;;  dividend        4    5[COMMON] unsigned long 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  quotient        4    0[BANK0 ] unsigned long 
  2212 ;;  counter         1    4[BANK0 ] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  4    1[COMMON] unsigned long 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2222 ;;      Params:         8       0       0       0       0       0
  2223 ;;      Locals:         0       5       0       0       0       0
  2224 ;;      Temps:          1       0       0       0       0       0
  2225 ;;      Totals:         9       5       0       0       0       0
  2226 ;;Total ram usage:       14 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    1
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_xvprintf
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           
  2237                           ;psect for function ___lldiv
  2238  02B3                     ___lldiv:	
  2239                           
  2240                           ;incstack = 0
  2241                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2242  02B3  3000               	movlw	0
  2243  02B4  0020               	movlb	0	; select bank0
  2244  02B5  00A3               	movwf	___lldiv@quotient+3
  2245  02B6  3000               	movlw	0
  2246  02B7  00A2               	movwf	___lldiv@quotient+2
  2247  02B8  3000               	movlw	0
  2248  02B9  00A1               	movwf	___lldiv@quotient+1
  2249  02BA  3000               	movlw	0
  2250  02BB  00A0               	movwf	___lldiv@quotient
  2251  02BC  0874               	movf	___lldiv@divisor+3,w
  2252  02BD  0473               	iorwf	___lldiv@divisor+2,w
  2253  02BE  0472               	iorwf	___lldiv@divisor+1,w
  2254  02BF  0471               	iorwf	___lldiv@divisor,w
  2255  02C0  1903               	skipnz
  2256  02C1  2AFD               	goto	l2024
  2257  02C2  01A4               	clrf	___lldiv@counter
  2258  02C3  0AA4               	incf	___lldiv@counter,f
  2259  02C4                     l2010:	
  2260  02C4  1BF4               	btfsc	___lldiv@divisor+3,7
  2261  02C5  2AD2               	goto	l2012
  2262  02C6  3001               	movlw	1
  2263  02C7                     u1675:	
  2264  02C7  35F1               	lslf	___lldiv@divisor,f
  2265  02C8  0DF2               	rlf	___lldiv@divisor+1,f
  2266  02C9  0DF3               	rlf	___lldiv@divisor+2,f
  2267  02CA  0DF4               	rlf	___lldiv@divisor+3,f
  2268  02CB  0B89               	decfsz	9,f
  2269  02CC  2AC7               	goto	u1675
  2270  02CD  3001               	movlw	1
  2271  02CE  00F9               	movwf	??___lldiv
  2272  02CF  0879               	movf	??___lldiv,w
  2273  02D0  07A4               	addwf	___lldiv@counter,f
  2274  02D1  2AC4               	goto	l2010
  2275  02D2                     l2012:	
  2276  02D2  3001               	movlw	1
  2277  02D3                     u1695:	
  2278  02D3  35A0               	lslf	___lldiv@quotient,f
  2279  02D4  0DA1               	rlf	___lldiv@quotient+1,f
  2280  02D5  0DA2               	rlf	___lldiv@quotient+2,f
  2281  02D6  0DA3               	rlf	___lldiv@quotient+3,f
  2282  02D7  0B89               	decfsz	9,f
  2283  02D8  2AD3               	goto	u1695
  2284  02D9  0874               	movf	___lldiv@divisor+3,w
  2285  02DA  0278               	subwf	___lldiv@dividend+3,w
  2286  02DB  1D03               	skipz
  2287  02DC  2AE7               	goto	u1705
  2288  02DD  0873               	movf	___lldiv@divisor+2,w
  2289  02DE  0277               	subwf	___lldiv@dividend+2,w
  2290  02DF  1D03               	skipz
  2291  02E0  2AE7               	goto	u1705
  2292  02E1  0872               	movf	___lldiv@divisor+1,w
  2293  02E2  0276               	subwf	___lldiv@dividend+1,w
  2294  02E3  1D03               	skipz
  2295  02E4  2AE7               	goto	u1705
  2296  02E5  0871               	movf	___lldiv@divisor,w
  2297  02E6  0275               	subwf	___lldiv@dividend,w
  2298  02E7                     u1705:	
  2299  02E7  1C03               	skipc
  2300  02E8  2AF2               	goto	l2020
  2301  02E9  0871               	movf	___lldiv@divisor,w
  2302  02EA  02F5               	subwf	___lldiv@dividend,f
  2303  02EB  0872               	movf	___lldiv@divisor+1,w
  2304  02EC  3BF6               	subwfb	___lldiv@dividend+1,f
  2305  02ED  0873               	movf	___lldiv@divisor+2,w
  2306  02EE  3BF7               	subwfb	___lldiv@dividend+2,f
  2307  02EF  0874               	movf	___lldiv@divisor+3,w
  2308  02F0  3BF8               	subwfb	___lldiv@dividend+3,f
  2309  02F1  1420               	bsf	___lldiv@quotient,0
  2310  02F2                     l2020:	
  2311  02F2  3001               	movlw	1
  2312  02F3                     u1715:	
  2313  02F3  36F4               	lsrf	___lldiv@divisor+3,f
  2314  02F4  0CF3               	rrf	___lldiv@divisor+2,f
  2315  02F5  0CF2               	rrf	___lldiv@divisor+1,f
  2316  02F6  0CF1               	rrf	___lldiv@divisor,f
  2317  02F7  0B89               	decfsz	9,f
  2318  02F8  2AF3               	goto	u1715
  2319  02F9  3001               	movlw	1
  2320  02FA  02A4               	subwf	___lldiv@counter,f
  2321  02FB  1D03               	btfss	3,2
  2322  02FC  2AD2               	goto	l2012
  2323  02FD                     l2024:	
  2324  02FD  0823               	movf	___lldiv@quotient+3,w
  2325  02FE  00F4               	movwf	?___lldiv+3
  2326  02FF  0822               	movf	___lldiv@quotient+2,w
  2327  0300  00F3               	movwf	?___lldiv+2
  2328  0301  0821               	movf	___lldiv@quotient+1,w
  2329  0302  00F2               	movwf	?___lldiv+1
  2330  0303  0820               	movf	___lldiv@quotient,w
  2331  0304  00F1               	movwf	?___lldiv
  2332  0305  0008               	return
  2333  0306                     __end_of___lldiv:	
  2334                           
  2335                           	psect	text9
  2336  03F1                     __ptext9:	
  2337 ;; *************** function _Timer1_Init *****************
  2338 ;; Defined at:
  2339 ;;		line 6 in file "Timer1.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;		None
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, status,2, status,0
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2353 ;;      Params:         0       0       0       0       0       0
  2354 ;;      Locals:         0       0       0       0       0       0
  2355 ;;      Temps:          1       0       0       0       0       0
  2356 ;;      Totals:         1       0       0       0       0       0
  2357 ;;Total ram usage:        1 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    1
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function _Timer1_Init
  2369  03F1                     _Timer1_Init:	
  2370                           
  2371                           ;Timer1.c: 8: TRISB |= (1<<6);
  2372                           
  2373                           ;incstack = 0
  2374                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  2375  03F1  0021               	movlb	1	; select bank1
  2376  03F2  170D               	bsf	13,6	;volatile
  2377                           
  2378                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  2379  03F3  30BF               	movlw	191
  2380  03F4  00F1               	movwf	??_Timer1_Init
  2381  03F5  0871               	movf	??_Timer1_Init,w
  2382  03F6  0023               	movlb	3	; select bank3
  2383  03F7  058D               	andwf	13,f	;volatile
  2384                           
  2385                           ;Timer1.c: 11: T1CON |= (0x01<<2);
  2386  03F8  0020               	movlb	0	; select bank0
  2387  03F9  1518               	bsf	24,2	;volatile
  2388                           
  2389                           ;Timer1.c: 12: T1CON &= ~(0x01<<3);
  2390  03FA  30F7               	movlw	247
  2391  03FB  00F1               	movwf	??_Timer1_Init
  2392  03FC  0871               	movf	??_Timer1_Init,w
  2393  03FD  0598               	andwf	24,f	;volatile
  2394                           
  2395                           ;Timer1.c: 13: T1CON |= (0x00<<4);
  2396  03FE  0818               	movf	24,w	;volatile
  2397                           
  2398                           ;Timer1.c: 14: T1CON |= (0x02<<6);
  2399  03FF  1798               	bsf	24,7	;volatile
  2400                           
  2401                           ;Timer1.c: 16: T1GCON = 0x00;
  2402  0400  0199               	clrf	25	;volatile
  2403                           
  2404                           ;Timer1.c: 18: TMR1 = 0xFFFF-100;
  2405  0401  30FF               	movlw	255
  2406  0402  0097               	movwf	23	;volatile
  2407  0403  309B               	movlw	155
  2408  0404  0096               	movwf	22	;volatile
  2409                           
  2410                           ;Timer1.c: 19: count10us = 0x0000;
  2411  0405  01E6               	clrf	_count10us
  2412  0406  01E7               	clrf	_count10us+1
  2413                           
  2414                           ;Timer1.c: 21: TMR1IF = 0;
  2415  0407  1011               	bcf	17,0	;volatile
  2416                           
  2417                           ;Timer1.c: 22: TMR1IE = 1;
  2418  0408  0021               	movlb	1	; select bank1
  2419  0409  1411               	bsf	17,0	;volatile
  2420                           
  2421                           ;Timer1.c: 23: PEIE = 1;
  2422  040A  170B               	bsf	11,6	;volatile
  2423                           
  2424                           ;Timer1.c: 24: GIE = 1;
  2425  040B  178B               	bsf	11,7	;volatile
  2426  040C  0008               	return
  2427  040D                     __end_of_Timer1_Init:	
  2428                           
  2429                           	psect	text10
  2430  024A                     __ptext10:	
  2431 ;; *************** function _LCD_Init *****************
  2432 ;; Defined at:
  2433 ;;		line 28 in file "LCD.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0, pclath, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2447 ;;      Params:         0       0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0       0
  2449 ;;      Temps:          2       0       0       0       0       0
  2450 ;;      Totals:         2       0       0       0       0       0
  2451 ;;Total ram usage:        2 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    3
  2454 ;; This function calls:
  2455 ;;		_LCD_DisplayClear
  2456 ;;		_LCD_WriteData
  2457 ;; This function is called by:
  2458 ;;		_main
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _LCD_Init
  2464  024A                     _LCD_Init:	
  2465                           
  2466                           ;LCD.c: 30: RA3 = 0;
  2467                           
  2468                           ;incstack = 0
  2469                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2470  024A  0020               	movlb	0	; select bank0
  2471  024B  118C               	bcf	12,3	;volatile
  2472                           
  2473                           ;LCD.c: 31: RA4 = 0;
  2474  024C  120C               	bcf	12,4	;volatile
  2475                           
  2476                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  2477  024D  3002               	movlw	2
  2478  024E  00F6               	movwf	??_LCD_Init+1
  2479  024F  3038               	movlw	56
  2480  0250  00F5               	movwf	??_LCD_Init
  2481  0251  30AD               	movlw	173
  2482  0252                     u2267:	
  2483  0252  0B89               	decfsz	9,f
  2484  0253  2A52               	goto	u2267
  2485  0254  0BF5               	decfsz	??_LCD_Init,f
  2486  0255  2A52               	goto	u2267
  2487  0256  0BF6               	decfsz	??_LCD_Init+1,f
  2488  0257  2A52               	goto	u2267
  2489  0258  0000               	nop
  2490                           
  2491                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  2492  0259  3003               	movlw	3
  2493  025A  0020               	movlb	0	; select bank0
  2494  025B  008D               	movwf	13	;volatile
  2495                           
  2496                           ;LCD.c: 35: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2497  025C  160C               	bsf	12,4	;volatile
  2498  025D  3200               	nop2	;2 cycle nop
  2499  025E  3200               	nop2	;2 cycle nop
  2500  025F  3200               	nop2	;2 cycle nop
  2501  0260  3200               	nop2	;2 cycle nop
  2502  0261  0020               	movlb	0	; select bank0
  2503  0262  120C               	bcf	12,4	;volatile
  2504  0263  3200               	nop2	;2 cycle nop
  2505  0264  3200               	nop2	;2 cycle nop
  2506  0265  3200               	nop2	;2 cycle nop
  2507  0266  3200               	nop2	;2 cycle nop
  2508                           
  2509                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  2510  0267  3034               	movlw	52
  2511  0268  00F5               	movwf	??_LCD_Init
  2512  0269  30F2               	movlw	242
  2513  026A                     u2277:	
  2514  026A  0B89               	decfsz	9,f
  2515  026B  2A6A               	goto	u2277
  2516  026C  0BF5               	decfsz	??_LCD_Init,f
  2517  026D  2A6A               	goto	u2277
  2518                           
  2519                           ;LCD.c: 37: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2520  026E  0020               	movlb	0	; select bank0
  2521  026F  160C               	bsf	12,4	;volatile
  2522  0270  3200               	nop2	;2 cycle nop
  2523  0271  3200               	nop2	;2 cycle nop
  2524  0272  3200               	nop2	;2 cycle nop
  2525  0273  3200               	nop2	;2 cycle nop
  2526  0274  0020               	movlb	0	; select bank0
  2527  0275  120C               	bcf	12,4	;volatile
  2528  0276  3200               	nop2	;2 cycle nop
  2529  0277  3200               	nop2	;2 cycle nop
  2530  0278  3200               	nop2	;2 cycle nop
  2531  0279  3200               	nop2	;2 cycle nop
  2532                           
  2533                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2534  027A  3005               	movlw	5
  2535  027B  00F5               	movwf	??_LCD_Init
  2536  027C  3026               	movlw	38
  2537  027D                     u2287:	
  2538  027D  0B89               	decfsz	9,f
  2539  027E  2A7D               	goto	u2287
  2540  027F  0BF5               	decfsz	??_LCD_Init,f
  2541  0280  2A7D               	goto	u2287
  2542  0281  3200               	nop2
  2543                           
  2544                           ;LCD.c: 39: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2545  0282  0020               	movlb	0	; select bank0
  2546  0283  160C               	bsf	12,4	;volatile
  2547  0284  3200               	nop2	;2 cycle nop
  2548  0285  3200               	nop2	;2 cycle nop
  2549  0286  3200               	nop2	;2 cycle nop
  2550  0287  3200               	nop2	;2 cycle nop
  2551  0288  0020               	movlb	0	; select bank0
  2552  0289  120C               	bcf	12,4	;volatile
  2553  028A  3200               	nop2	;2 cycle nop
  2554  028B  3200               	nop2	;2 cycle nop
  2555  028C  3200               	nop2	;2 cycle nop
  2556  028D  3200               	nop2	;2 cycle nop
  2557                           
  2558                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2559  028E  3005               	movlw	5
  2560  028F  00F5               	movwf	??_LCD_Init
  2561  0290  3026               	movlw	38
  2562  0291                     u2297:	
  2563  0291  0B89               	decfsz	9,f
  2564  0292  2A91               	goto	u2297
  2565  0293  0BF5               	decfsz	??_LCD_Init,f
  2566  0294  2A91               	goto	u2297
  2567  0295  3200               	nop2
  2568                           
  2569                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  2570  0296  3002               	movlw	2
  2571  0297  0020               	movlb	0	; select bank0
  2572  0298  008D               	movwf	13	;volatile
  2573                           
  2574                           ;LCD.c: 42: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2575  0299  160C               	bsf	12,4	;volatile
  2576  029A  3200               	nop2	;2 cycle nop
  2577  029B  3200               	nop2	;2 cycle nop
  2578  029C  3200               	nop2	;2 cycle nop
  2579  029D  3200               	nop2	;2 cycle nop
  2580  029E  0020               	movlb	0	; select bank0
  2581  029F  120C               	bcf	12,4	;volatile
  2582  02A0  3200               	nop2	;2 cycle nop
  2583  02A1  3200               	nop2	;2 cycle nop
  2584  02A2  3200               	nop2	;2 cycle nop
  2585  02A3  3200               	nop2	;2 cycle nop
  2586                           
  2587                           ;LCD.c: 44: LCD_WriteData(0x28);
  2588  02A4  3028               	movlw	40
  2589  02A5  3183  2348  3182   	fcall	_LCD_WriteData
  2590                           
  2591                           ;LCD.c: 45: LCD_WriteData(0x0c);
  2592  02A8  300C               	movlw	12
  2593  02A9  3183  2348  3182   	fcall	_LCD_WriteData
  2594                           
  2595                           ;LCD.c: 46: LCD_DisplayClear();
  2596  02AC  3184  2475  3182   	fcall	_LCD_DisplayClear
  2597                           
  2598                           ;LCD.c: 47: LCD_WriteData(0x06);
  2599  02AF  3006               	movlw	6
  2600  02B0  3183  2348         	fcall	_LCD_WriteData
  2601  02B2  0008               	return
  2602  02B3                     __end_of_LCD_Init:	
  2603                           
  2604                           	psect	text11
  2605  0475                     __ptext11:	
  2606 ;; *************** function _LCD_DisplayClear *****************
  2607 ;; Defined at:
  2608 ;;		line 64 in file "LCD.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, pclath, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2622 ;;      Params:         0       0       0       0       0       0
  2623 ;;      Locals:         0       0       0       0       0       0
  2624 ;;      Temps:          1       0       0       0       0       0
  2625 ;;      Totals:         1       0       0       0       0       0
  2626 ;;Total ram usage:        1 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    2
  2629 ;; This function calls:
  2630 ;;		_LCD_WriteData
  2631 ;; This function is called by:
  2632 ;;		_LCD_Init
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           
  2637                           ;psect for function _LCD_DisplayClear
  2638  0475                     _LCD_DisplayClear:	
  2639                           
  2640                           ;LCD.c: 66: RA3 = 0;
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  2644  0475  0020               	movlb	0	; select bank0
  2645  0476  118C               	bcf	12,3	;volatile
  2646                           
  2647                           ;LCD.c: 67: LCD_WriteData(0x01);
  2648  0477  3001               	movlw	1
  2649  0478  3183  2348  3184   	fcall	_LCD_WriteData
  2650                           
  2651                           ;LCD.c: 68: _delay((unsigned long)((2)*(32000000/4000.0)));
  2652  047B  3015               	movlw	21
  2653  047C  00F4               	movwf	??_LCD_DisplayClear
  2654  047D  30C6               	movlw	198
  2655  047E                     u2307:	
  2656  047E  0B89               	decfsz	9,f
  2657  047F  2C7E               	goto	u2307
  2658  0480  0BF4               	decfsz	??_LCD_DisplayClear,f
  2659  0481  2C7E               	goto	u2307
  2660  0482  3200               	nop2
  2661  0483  0008               	return
  2662  0484                     __end_of_LCD_DisplayClear:	
  2663                           
  2664                           	psect	text12
  2665  0428                     __ptext12:	
  2666 ;; *************** function _LCD_CursorPosition *****************
  2667 ;; Defined at:
  2668 ;;		line 86 in file "LCD.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  tx              1    wreg     unsigned char 
  2671 ;;  ty              1    4[COMMON] unsigned char 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  tx              1    6[COMMON] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2683 ;;      Params:         1       0       0       0       0       0
  2684 ;;      Locals:         1       0       0       0       0       0
  2685 ;;      Temps:          1       0       0       0       0       0
  2686 ;;      Totals:         3       0       0       0       0       0
  2687 ;;Total ram usage:        3 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    2
  2690 ;; This function calls:
  2691 ;;		_LCD_WriteData
  2692 ;; This function is called by:
  2693 ;;		_main
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           
  2698                           ;psect for function _LCD_CursorPosition
  2699  0428                     _LCD_CursorPosition:	
  2700                           
  2701                           ;incstack = 0
  2702                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  2703                           ;LCD_CursorPosition@tx stored from wreg
  2704  0428  00F6               	movwf	LCD_CursorPosition@tx
  2705                           
  2706                           ;LCD.c: 88: RA3 = 0;
  2707  0429  0020               	movlb	0	; select bank0
  2708  042A  118C               	bcf	12,3	;volatile
  2709                           
  2710                           ;LCD.c: 89: LCD_WriteData(0x80|tx|(0x40*ty));
  2711  042B  0874               	movf	LCD_CursorPosition@ty,w
  2712  042C  00F5               	movwf	??_LCD_CursorPosition
  2713  042D  3005               	movlw	5
  2714  042E                     u2075:	
  2715  042E  35F5               	lslf	??_LCD_CursorPosition,f
  2716  042F  3EFF               	addlw	-1
  2717  0430  1D03               	skipz
  2718  0431  2C2E               	goto	u2075
  2719  0432  3575               	lslf	??_LCD_CursorPosition,w
  2720  0433  0476               	iorwf	LCD_CursorPosition@tx,w
  2721  0434  3880               	iorlw	-128
  2722  0435  3183  2348  3184   	fcall	_LCD_WriteData
  2723                           
  2724                           ;LCD.c: 90: _delay((unsigned long)((40)*(32000000/4000000.0)));
  2725  0438  306A               	movlw	106
  2726  0439                     u2317:	
  2727  0439  0B89               	decfsz	9,f
  2728  043A  2C39               	goto	u2317
  2729  043B  3200               	nop2
  2730  043C  0008               	return
  2731  043D                     __end_of_LCD_CursorPosition:	
  2732                           
  2733                           	psect	text13
  2734  0348                     __ptext13:	
  2735 ;; *************** function _LCD_WriteData *****************
  2736 ;; Defined at:
  2737 ;;		line 15 in file "LCD.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  point           1    wreg     char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  point           1    3[COMMON] char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2751 ;;      Params:         0       0       0       0       0       0
  2752 ;;      Locals:         1       0       0       0       0       0
  2753 ;;      Temps:          2       0       0       0       0       0
  2754 ;;      Totals:         3       0       0       0       0       0
  2755 ;;Total ram usage:        3 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_LCD_Init
  2762 ;;		_LCD_Put
  2763 ;;		_LCD_DisplayClear
  2764 ;;		_LCD_CursorPosition
  2765 ;;		_LCD_CursorHome
  2766 ;;		_LCD_CursorShift
  2767 ;;		_LCD_DispShift
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           
  2772                           ;psect for function _LCD_WriteData
  2773  0348                     _LCD_WriteData:	
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  2777                           ;LCD_WriteData@point stored from wreg
  2778  0348  00F3               	movwf	LCD_WriteData@point
  2779                           
  2780                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  2781  0349  30D5               	movlw	213
  2782  034A                     u2327:	
  2783  034A  0B89               	decfsz	9,f
  2784  034B  2B4A               	goto	u2327
  2785  034C  0000               	nop
  2786                           
  2787                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  2788  034D  0873               	movf	LCD_WriteData@point,w
  2789  034E  00F1               	movwf	??_LCD_WriteData
  2790  034F  3004               	movlw	4
  2791  0350                     u1575:	
  2792  0350  1003               	clrc
  2793  0351  1BF1               	btfsc	??_LCD_WriteData,7
  2794  0352  1403               	setc
  2795  0353  0CF1               	rrf	??_LCD_WriteData,f
  2796  0354  0B89               	decfsz	9,f
  2797  0355  2B50               	goto	u1575
  2798  0356  3003               	movlw	3
  2799  0357  0571               	andwf	??_LCD_WriteData,w
  2800  0358  00F2               	movwf	??_LCD_WriteData+1
  2801  0359  0E73               	swapf	LCD_WriteData@point,w
  2802  035A  390F               	andlw	15
  2803  035B  1989               	btfsc	9,3
  2804  035C  38F0               	iorlw	240
  2805  035D  390C               	andlw	12
  2806  035E  0709               	addwf	9,w
  2807  035F  0472               	iorwf	??_LCD_WriteData+1,w
  2808  0360  0020               	movlb	0	; select bank0
  2809  0361  008D               	movwf	13	;volatile
  2810                           
  2811                           ;LCD.c: 19: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2812  0362  160C               	bsf	12,4	;volatile
  2813  0363  3200               	nop2	;2 cycle nop
  2814  0364  3200               	nop2	;2 cycle nop
  2815  0365  3200               	nop2	;2 cycle nop
  2816  0366  3200               	nop2	;2 cycle nop
  2817  0367  0020               	movlb	0	; select bank0
  2818  0368  120C               	bcf	12,4	;volatile
  2819  0369  3200               	nop2	;2 cycle nop
  2820  036A  3200               	nop2	;2 cycle nop
  2821  036B  3200               	nop2	;2 cycle nop
  2822  036C  3200               	nop2	;2 cycle nop
  2823                           
  2824                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  2825  036D  3003               	movlw	3
  2826  036E  0573               	andwf	LCD_WriteData@point,w
  2827  036F  00F1               	movwf	??_LCD_WriteData
  2828  0370  0873               	movf	LCD_WriteData@point,w
  2829  0371  390C               	andlw	12
  2830  0372  0709               	addwf	9,w
  2831  0373  0471               	iorwf	??_LCD_WriteData,w
  2832  0374  0020               	movlb	0	; select bank0
  2833  0375  008D               	movwf	13	;volatile
  2834                           
  2835                           ;LCD.c: 21: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2836  0376  160C               	bsf	12,4	;volatile
  2837  0377  3200               	nop2	;2 cycle nop
  2838  0378  3200               	nop2	;2 cycle nop
  2839  0379  3200               	nop2	;2 cycle nop
  2840  037A  3200               	nop2	;2 cycle nop
  2841  037B  0020               	movlb	0	; select bank0
  2842  037C  120C               	bcf	12,4	;volatile
  2843  037D  3200               	nop2	;2 cycle nop
  2844  037E  3200               	nop2	;2 cycle nop
  2845  037F  3200               	nop2	;2 cycle nop
  2846  0380  3200               	nop2	;2 cycle nop
  2847  0381  0008               	return
  2848  0382                     __end_of_LCD_WriteData:	
  2849                           
  2850                           	psect	text14
  2851  043D                     __ptext14:	
  2852 ;; *************** function _Basic_Init *****************
  2853 ;; Defined at:
  2854 ;;		line 32 in file "main.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;		None
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      char 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2868 ;;      Params:         0       0       0       0       0       0
  2869 ;;      Locals:         0       0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0
  2871 ;;      Totals:         0       0       0       0       0       0
  2872 ;;Total ram usage:        0 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    1
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_main
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function _Basic_Init
  2884  043D                     _Basic_Init:	
  2885                           
  2886                           ;main.c: 34: OSCCON = 0xF0;
  2887                           
  2888                           ;incstack = 0
  2889                           ; Regs used in _Basic_Init: [wreg+status,2]
  2890  043D  30F0               	movlw	240
  2891  043E  0021               	movlb	1	; select bank1
  2892  043F  0099               	movwf	25	;volatile
  2893                           
  2894                           ;main.c: 38: TRISA = 0x07;
  2895  0440  3007               	movlw	7
  2896  0441  008C               	movwf	12	;volatile
  2897                           
  2898                           ;main.c: 39: ANSELA = 0x07;
  2899  0442  3007               	movlw	7
  2900  0443  0023               	movlb	3	; select bank3
  2901  0444  008C               	movwf	12	;volatile
  2902                           
  2903                           ;main.c: 41: TRISB = 0x40;
  2904  0445  3040               	movlw	64
  2905  0446  0021               	movlb	1	; select bank1
  2906  0447  008D               	movwf	13	;volatile
  2907                           
  2908                           ;main.c: 42: ANSELB = 0x00;
  2909  0448  0023               	movlb	3	; select bank3
  2910  0449  018D               	clrf	13	;volatile
  2911                           
  2912                           ;main.c: 44: APFCON0 = 0x08;
  2913  044A  3008               	movlw	8
  2914  044B  0022               	movlb	2	; select bank2
  2915  044C  009D               	movwf	29	;volatile
  2916                           
  2917                           ;main.c: 45: APFCON1 = 0x00;
  2918  044D  019E               	clrf	30	;volatile
  2919                           
  2920                           ;main.c: 47: PORTA = 0x00;
  2921  044E  0020               	movlb	0	; select bank0
  2922  044F  018C               	clrf	12	;volatile
  2923                           
  2924                           ;main.c: 48: PORTB = 0x00;
  2925  0450  018D               	clrf	13	;volatile
  2926  0451  0008               	return
  2927  0452                     __end_of_Basic_Init:	
  2928                           ;main.c: 50: return 0;
  2929                           ;	Return value of _Basic_Init is never used
  2930                           
  2931                           
  2932                           	psect	intentry
  2933  0004                     __pintentry:	
  2934 ;; *************** function _Handler *****************
  2935 ;; Defined at:
  2936 ;;		line 53 in file "main.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		None
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2950 ;;      Params:         0       0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0       0
  2952 ;;      Temps:          1       0       0       0       0       0
  2953 ;;      Totals:         1       0       0       0       0       0
  2954 ;;Total ram usage:        1 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		Interrupt level 1
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963  0004                     _Handler:	
  2964                           
  2965                           ;incstack = 0
  2966  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2967                           
  2968                           ; Regs used in _Handler: []
  2969  0005  3180               	pagesel	$
  2970  0006  0020               	movlb	0	; select bank0
  2971  0007  087F               	movf	127,w
  2972  0008  00F0               	movwf	??_Handler
  2973  0009  0870               	movf	??_Handler,w
  2974  000A  00FF               	movwf	127
  2975  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2976  000C  0009               	retfie
  2977  000D                     __end_of_Handler:	
  2978  007E                     btemp	set	126	;btemp
  2979  007E                     int$flags	set	126
  2980  007E                     wtemp0	set	126


Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     60      72
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    xfunc_in	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    xprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[4]), 

    xprintf@arp	PTR void [1] size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@arp	PTR PTR void  size(1) Largest target is 1
		 -> xfprintf@arp(COMMON[1]), xsprintf@arp(COMMON[1]), xprintf@arp(BANK0[1]), 

    xvprintf@p	PTR unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    xvprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_6(CODE[7]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[7]), 
		 -> STR_1(CODE[4]), 

    xputs@str	PTR const unsigned char  size(1) Largest target is 1
		 -> ?_xfprintf(COMMON[1]), ?_xsprintf(COMMON[1]), ?_xprintf(BANK0[1]), 

    outptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    xfunc_out	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), LCD_Put(), 


Critical Paths under _main in COMMON

    _main->_xprintf
    _xvprintf->___llmod
    _xputs->_xputc
    _xputc->_LCD_Put
    _LCD_Put->_LCD_WriteData
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorPosition->_LCD_WriteData

Critical Paths under _Handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_xprintf
    _xprintf->_xvprintf
    _xvprintf->___lldiv

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5592
                         _Basic_Init
                 _LCD_CursorPosition
                           _LCD_Init
                        _Timer1_Init
                            _xprintf
 ---------------------------------------------------------------------------------
 (1) _xprintf                                              8     2      6    5081
                                             11 COMMON     1     1      0
                                             53 BANK0      7     1      6
                           _xvprintf
 ---------------------------------------------------------------------------------
 (2) _xvprintf                                            48    45      3    4601
                                              5 BANK0     48    45      3
                            ___lldiv
                            ___llmod
                             ___wmul
                              _xputc
                              _xputs
 ---------------------------------------------------------------------------------
 (3) _xputs                                                2     2      0     454
                                              7 COMMON     2     2      0
                              _xputc
 ---------------------------------------------------------------------------------
 (4) _xputc                                                2     2      0     356
                                              5 COMMON     2     2      0
                   Absolute function *
                            _LCD_Put *
 ---------------------------------------------------------------------------------
 (5) _LCD_Put                                              1     0      1     263
                                              4 COMMON     1     0      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     386
                                              1 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              1 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              5 COMMON     2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              4 COMMON     1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorPosition                                   3     2      1     263
                                              4 COMMON     3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (6) _LCD_WriteData                                        3     3      0     124
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Handler                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_Init
   _xprintf
     _xvprintf
       ___lldiv
       ___llmod
       ___wmul
       _xputc
         Absolute function(Fake) *
         _LCD_Put *
           _LCD_WriteData
       _xputs
         _xputc
           Absolute function(Fake) *
           _LCD_Put *
             _LCD_WriteData

 _Handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      55       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3C      48       6       90.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      55      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May 16 14:31:42 2017

                __CFG_CP$OFF 0000          ___wmul@multiplicand 0073                          l213 01EE  
                        l172 009C                          l157 0020                          l190 0137  
                        l394 0415                          _GIE 005F                          _RA3 0063  
                        _RA4 0064                 __CFG_CPD$OFF 0000                 __CFG_BORV$LO 0000  
                        wreg 0009                   _Basic_Init 043D                 __CFG_LVP$OFF 0000  
            __end_of_LCD_Put 048A                         l2010 02C4                         l2020 02F2  
                       l2012 02D2                         l2100 0094                         l2024 02FD  
                       l2040 0334                         l2034 030E                         l2210 0223  
                       l2202 0204                         l2130 00E8                         l2122 00C4  
                       l2036 031C                         l2044 033F                         l2204 020D  
                       l2140 0111                         l2124 00D2                         l2116 00B7  
                       l2108 00A9                         l2214 0235                         l2206 0211  
                       l2142 0113                         l2134 00EC                         l2126 00D6  
                       l2150 011F                         l2216 0239                         l2160 016F  
                       l2144 0115                         l2136 0101                         l2080 004E  
                       l2170 0192                         l2162 017F                         l2146 011A  
                       l2138 010E                         l2090 0065                         l2066 0039  
                       l2180 01CC                         l2156 0151                         l2158 0166  
                       l2184 01D4                         l2168 0190                         l2096 008C  
                       l2088 0062                         l2196 01FC                         l2348 03BF  
                       l1970 0391                         l1992 040F                         l1978 03A0  
                       l1988 0453                         STR_1 03EB                         STR_2 03EF  
                       STR_3 03D1                         STR_4 03DF                         STR_5 03E5  
                       STR_6 03D8                         u2045 0221                         u2065 0247  
                       u2075 042E                         u2307 047E                         u2317 0439  
                       u2327 034A                         u1705 02E7                         u2267 0252  
                       u1715 02F3                         u1635 0416                         u2277 026A  
                       u1645 041B                         u1575 0350                         u2287 027D  
                       u2297 0291                         u1745 0311                         u1675 02C7  
                       u1915 00E6                         u1765 032A                         u1925 00FA  
                       u1695 02D3                         u1775 0335                         _PEIE 005E  
                       _TMR1 0016                 __CFG_WRT$OFF 0000                         _main 03AF  
                       fsr0h 0005                         fsr1h 0007                         indf0 0000  
                       fsr0l 0004                         indf1 0001                         fsr1l 0006  
                       btemp 007E                __CFG_BOREN$ON 0000                         start 000D  
              __CFG_IESO$OFF 0000              __end_of_Handler 000D                _LCD_WriteData 0348  
              __CFG_MCLRE$ON 0000     __end_of_LCD_DisplayClear 0484             __end_of_LCD_Init 02B3  
              __CFG_PLLEN$ON 0000                  LCD_Put@word 0074                        ?_main 0070  
              __CFG_WDTE$OFF 0000              __end_of___lldiv 0306                        _T1CON 0018  
            __end_of___llmod 0348                        _PORTA 000C                        _PORTB 000D  
                      _TRISA 008C                        _TRISB 008D                __CFG_PWRTE$ON 0000  
             __CFG_FCMEN$OFF 0000                        _xputc 0382                        _xputs 0452  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __end_of_xprintf 0475           _LCD_CursorPosition 0428               ?_LCD_WriteData 0070  
            __initialization 000F                 __end_of_main 03D1          ?_LCD_CursorPosition 0074  
                     ??_main 007C                    ??_LCD_Put 0075                  ?_Basic_Init 0070  
           ___llmod@dividend 0075         ??_LCD_CursorPosition 0075                       _ANSELA 018C  
                     _ANSELB 018D                       _T1GCON 0019                       ?_xputc 0070  
                     ?_xputs 0070                       _OSCCON 0099                       _TMR1IE 0488  
                     _TMR1IF 0088                    ??_Handler 0070                       _TMR1ON 00C0  
              ??_Timer1_Init 0071                       ___wmul 040D                    ??___lldiv 0079  
                  ??___llmod 0079                       _outptr 007C                       xputc@c 0076  
                  ??_xprintf 007B      __end_of__initialization 001C                    ?_LCD_Init 0070  
            ??_LCD_WriteData 0071             __end_of_xvprintf 024A               __pcstackCOMMON 0070  
        __size_of_Basic_Init 0015          __end_of_Timer1_Init 040D                __end_of_xputc 03AF  
              __end_of_xputs 0465                      ??_xputc 0075                      ??_xputs 0077  
                 __pbssBANK0 005C                   ??_LCD_Init 0075                   __pmaintext 03AF  
                    ?___wmul 0071                   __pintentry 0004            ?_LCD_DisplayClear 0070  
                    _APFCON0 011D                      _APFCON1 011E           ??_LCD_DisplayClear 0074  
                    _LCD_Put 0484                 _xvprintf$170 003C                 _xvprintf$171 0040  
               _xvprintf$172 0042                      _Handler 0004                  _Timer1_Init 03F1  
                    ___lldiv 02B3              __size_of___wmul 001B                      ___llmod 0306  
            __CFG_STVREN$OFF 0000                      __ptext1 0465                      __ptext2 0020  
                    __ptext3 0452                      __ptext4 0382                      __ptext5 0484  
                    __ptext6 040D                      __ptext7 0306                      __ptext8 02B3  
                    __ptext9 03F1                    ?_xvprintf 0025                 ??_Basic_Init 0071  
       end_of_initialization 001C                      _xprintf 0465              ___lldiv@divisor 0071  
            ___lldiv@counter 0024           __end_of_Basic_Init 0452                 __pstringtext 03D1  
                 _resulttime 0064             __CFG_FOSC$INTOSC 0000                   ??_xvprintf 0028  
__size_of_LCD_CursorPosition 0015            __size_of_LCD_Init 0069               __end_of___wmul 0428  
        start_initialization 000F              ___llmod@divisor 0071              ___llmod@counter 007A  
       LCD_CursorPosition@tx 0076         LCD_CursorPosition@ty 0074        __end_of_LCD_WriteData 0382  
                   ??___wmul 0075                     ?_LCD_Put 0074                  __pbssCOMMON 007C  
                  ___latbits 0001                __pcstackBANK0 0020    __size_of_LCD_DisplayClear 000F  
                   ?_Handler 0070                 ?_Timer1_Init 0070                     ?___lldiv 0071  
                   ?___llmod 0071                    _count10us 0066            __size_of_xvprintf 022A  
                   ?_xprintf 0055               __size_of_xputc 002D               __size_of_xputs 0013  
                   _LCD_Init 024A               ___wmul@product 0075            ___wmul@multiplier 0071  
                  _xfunc_out 0062             __size_of_LCD_Put 0006             __size_of_Handler 0009  
           __size_of___lldiv 0053             __size_of___llmod 0042           LCD_WriteData@point 0073  
 __end_of_LCD_CursorPosition 043D                     __ptext10 024A                     __ptext11 0475  
                   __ptext12 0428                     __ptext13 0348                     __ptext14 043D  
           _LCD_DisplayClear 0475                     _countsum 005C             __size_of_xprintf 0010  
              __size_of_main 0022         __size_of_Timer1_Init 001C                     int$flags 007E  
                   _xfunc_in 0060                     _xvprintf 0020                   xprintf@arp 005B  
                 xprintf@fmt 0055                     intlevel1 0000             ___lldiv@dividend 0075  
          __CFG_CLKOUTEN$OFF 0000                  xvprintf@arp 0027                  xvprintf@fmt 0025  
           ___lldiv@quotient 0020       __size_of_LCD_WriteData 003A                     xputs@str 0078  
                  xvprintf@c 0054                    xvprintf@d 0053                    xvprintf@f 004F  
                  xvprintf@i 0051                    xvprintf@j 0049                    xvprintf@p 0044  
                  xvprintf@r 0045                    xvprintf@s 002C                    xvprintf@v 004B  
                  xvprintf@w 0047  
