

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Jul  1 16:38:48 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 1.41
    78                           ; Generated 25/01/2017 GMT
    79                           ; 
    80                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F1827 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008D                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  0111                     	;# 
   160  0112                     	;# 
   161  0113                     	;# 
   162  0114                     	;# 
   163  0115                     	;# 
   164  0116                     	;# 
   165  0117                     	;# 
   166  0118                     	;# 
   167  0119                     	;# 
   168  011A                     	;# 
   169  011B                     	;# 
   170  011D                     	;# 
   171  011E                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0191                     	;# 
   175  0191                     	;# 
   176  0192                     	;# 
   177  0193                     	;# 
   178  0193                     	;# 
   179  0193                     	;# 
   180  0194                     	;# 
   181  0195                     	;# 
   182  0196                     	;# 
   183  0199                     	;# 
   184  019A                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019C                     	;# 
   190  019C                     	;# 
   191  019D                     	;# 
   192  019E                     	;# 
   193  019F                     	;# 
   194  020C                     	;# 
   195  020D                     	;# 
   196  0211                     	;# 
   197  0211                     	;# 
   198  0212                     	;# 
   199  0212                     	;# 
   200  0213                     	;# 
   201  0213                     	;# 
   202  0214                     	;# 
   203  0214                     	;# 
   204  0215                     	;# 
   205  0215                     	;# 
   206  0215                     	;# 
   207  0216                     	;# 
   208  0216                     	;# 
   209  0217                     	;# 
   210  0217                     	;# 
   211  0219                     	;# 
   212  021A                     	;# 
   213  021B                     	;# 
   214  021C                     	;# 
   215  021D                     	;# 
   216  021E                     	;# 
   217  021F                     	;# 
   218  0291                     	;# 
   219  0291                     	;# 
   220  0292                     	;# 
   221  0293                     	;# 
   222  0294                     	;# 
   223  0295                     	;# 
   224  0295                     	;# 
   225  0296                     	;# 
   226  0298                     	;# 
   227  0298                     	;# 
   228  0299                     	;# 
   229  029A                     	;# 
   230  029B                     	;# 
   231  029C                     	;# 
   232  029C                     	;# 
   233  029D                     	;# 
   234  029E                     	;# 
   235  029E                     	;# 
   236  0311                     	;# 
   237  0311                     	;# 
   238  0312                     	;# 
   239  0313                     	;# 
   240  0318                     	;# 
   241  0318                     	;# 
   242  0319                     	;# 
   243  031A                     	;# 
   244  0394                     	;# 
   245  0395                     	;# 
   246  0396                     	;# 
   247  039A                     	;# 
   248  039C                     	;# 
   249  039D                     	;# 
   250  039E                     	;# 
   251  039F                     	;# 
   252  0415                     	;# 
   253  0416                     	;# 
   254  0417                     	;# 
   255  041C                     	;# 
   256  041D                     	;# 
   257  041E                     	;# 
   258  0FE4                     	;# 
   259  0FE5                     	;# 
   260  0FE6                     	;# 
   261  0FE7                     	;# 
   262  0FE8                     	;# 
   263  0FE9                     	;# 
   264  0FEA                     	;# 
   265  0FEB                     	;# 
   266  0FED                     	;# 
   267  0FEE                     	;# 
   268  0FEF                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0008                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000D                     	;# 
   283  0011                     	;# 
   284  0012                     	;# 
   285  0013                     	;# 
   286  0014                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0016                     	;# 
   290  0017                     	;# 
   291  0018                     	;# 
   292  0019                     	;# 
   293  001A                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001E                     	;# 
   297  001F                     	;# 
   298  008C                     	;# 
   299  008D                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0098                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  0111                     	;# 
   318  0112                     	;# 
   319  0113                     	;# 
   320  0114                     	;# 
   321  0115                     	;# 
   322  0116                     	;# 
   323  0117                     	;# 
   324  0118                     	;# 
   325  0119                     	;# 
   326  011A                     	;# 
   327  011B                     	;# 
   328  011D                     	;# 
   329  011E                     	;# 
   330  018C                     	;# 
   331  018D                     	;# 
   332  0191                     	;# 
   333  0191                     	;# 
   334  0192                     	;# 
   335  0193                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0194                     	;# 
   339  0195                     	;# 
   340  0196                     	;# 
   341  0199                     	;# 
   342  019A                     	;# 
   343  019B                     	;# 
   344  019B                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019C                     	;# 
   348  019C                     	;# 
   349  019D                     	;# 
   350  019E                     	;# 
   351  019F                     	;# 
   352  020C                     	;# 
   353  020D                     	;# 
   354  0211                     	;# 
   355  0211                     	;# 
   356  0212                     	;# 
   357  0212                     	;# 
   358  0213                     	;# 
   359  0213                     	;# 
   360  0214                     	;# 
   361  0214                     	;# 
   362  0215                     	;# 
   363  0215                     	;# 
   364  0215                     	;# 
   365  0216                     	;# 
   366  0216                     	;# 
   367  0217                     	;# 
   368  0217                     	;# 
   369  0219                     	;# 
   370  021A                     	;# 
   371  021B                     	;# 
   372  021C                     	;# 
   373  021D                     	;# 
   374  021E                     	;# 
   375  021F                     	;# 
   376  0291                     	;# 
   377  0291                     	;# 
   378  0292                     	;# 
   379  0293                     	;# 
   380  0294                     	;# 
   381  0295                     	;# 
   382  0295                     	;# 
   383  0296                     	;# 
   384  0298                     	;# 
   385  0298                     	;# 
   386  0299                     	;# 
   387  029A                     	;# 
   388  029B                     	;# 
   389  029C                     	;# 
   390  029C                     	;# 
   391  029D                     	;# 
   392  029E                     	;# 
   393  029E                     	;# 
   394  0311                     	;# 
   395  0311                     	;# 
   396  0312                     	;# 
   397  0313                     	;# 
   398  0318                     	;# 
   399  0318                     	;# 
   400  0319                     	;# 
   401  031A                     	;# 
   402  0394                     	;# 
   403  0395                     	;# 
   404  0396                     	;# 
   405  039A                     	;# 
   406  039C                     	;# 
   407  039D                     	;# 
   408  039E                     	;# 
   409  039F                     	;# 
   410  0415                     	;# 
   411  0416                     	;# 
   412  0417                     	;# 
   413  041C                     	;# 
   414  041D                     	;# 
   415  041E                     	;# 
   416  0FE4                     	;# 
   417  0FE5                     	;# 
   418  0FE6                     	;# 
   419  0FE7                     	;# 
   420  0FE8                     	;# 
   421  0FE9                     	;# 
   422  0FEA                     	;# 
   423  0FEB                     	;# 
   424  0FED                     	;# 
   425  0FEE                     	;# 
   426  0FEF                     	;# 
   427  0000                     	;# 
   428  0001                     	;# 
   429  0002                     	;# 
   430  0003                     	;# 
   431  0004                     	;# 
   432  0005                     	;# 
   433  0006                     	;# 
   434  0007                     	;# 
   435  0008                     	;# 
   436  0009                     	;# 
   437  000A                     	;# 
   438  000B                     	;# 
   439  000C                     	;# 
   440  000D                     	;# 
   441  0011                     	;# 
   442  0012                     	;# 
   443  0013                     	;# 
   444  0014                     	;# 
   445  0015                     	;# 
   446  0016                     	;# 
   447  0016                     	;# 
   448  0017                     	;# 
   449  0018                     	;# 
   450  0019                     	;# 
   451  001A                     	;# 
   452  001B                     	;# 
   453  001C                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  008C                     	;# 
   457  008D                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0094                     	;# 
   462  0095                     	;# 
   463  0096                     	;# 
   464  0097                     	;# 
   465  0098                     	;# 
   466  0099                     	;# 
   467  009A                     	;# 
   468  009B                     	;# 
   469  009B                     	;# 
   470  009C                     	;# 
   471  009D                     	;# 
   472  009E                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  0111                     	;# 
   476  0112                     	;# 
   477  0113                     	;# 
   478  0114                     	;# 
   479  0115                     	;# 
   480  0116                     	;# 
   481  0117                     	;# 
   482  0118                     	;# 
   483  0119                     	;# 
   484  011A                     	;# 
   485  011B                     	;# 
   486  011D                     	;# 
   487  011E                     	;# 
   488  018C                     	;# 
   489  018D                     	;# 
   490  0191                     	;# 
   491  0191                     	;# 
   492  0192                     	;# 
   493  0193                     	;# 
   494  0193                     	;# 
   495  0193                     	;# 
   496  0194                     	;# 
   497  0195                     	;# 
   498  0196                     	;# 
   499  0199                     	;# 
   500  019A                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019C                     	;# 
   506  019C                     	;# 
   507  019D                     	;# 
   508  019E                     	;# 
   509  019F                     	;# 
   510  020C                     	;# 
   511  020D                     	;# 
   512  0211                     	;# 
   513  0211                     	;# 
   514  0212                     	;# 
   515  0212                     	;# 
   516  0213                     	;# 
   517  0213                     	;# 
   518  0214                     	;# 
   519  0214                     	;# 
   520  0215                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0216                     	;# 
   524  0216                     	;# 
   525  0217                     	;# 
   526  0217                     	;# 
   527  0219                     	;# 
   528  021A                     	;# 
   529  021B                     	;# 
   530  021C                     	;# 
   531  021D                     	;# 
   532  021E                     	;# 
   533  021F                     	;# 
   534  0291                     	;# 
   535  0291                     	;# 
   536  0292                     	;# 
   537  0293                     	;# 
   538  0294                     	;# 
   539  0295                     	;# 
   540  0295                     	;# 
   541  0296                     	;# 
   542  0298                     	;# 
   543  0298                     	;# 
   544  0299                     	;# 
   545  029A                     	;# 
   546  029B                     	;# 
   547  029C                     	;# 
   548  029C                     	;# 
   549  029D                     	;# 
   550  029E                     	;# 
   551  029E                     	;# 
   552  0311                     	;# 
   553  0311                     	;# 
   554  0312                     	;# 
   555  0313                     	;# 
   556  0318                     	;# 
   557  0318                     	;# 
   558  0319                     	;# 
   559  031A                     	;# 
   560  0394                     	;# 
   561  0395                     	;# 
   562  0396                     	;# 
   563  039A                     	;# 
   564  039C                     	;# 
   565  039D                     	;# 
   566  039E                     	;# 
   567  039F                     	;# 
   568  0415                     	;# 
   569  0416                     	;# 
   570  0417                     	;# 
   571  041C                     	;# 
   572  041D                     	;# 
   573  041E                     	;# 
   574  0FE4                     	;# 
   575  0FE5                     	;# 
   576  0FE6                     	;# 
   577  0FE7                     	;# 
   578  0FE8                     	;# 
   579  0FE9                     	;# 
   580  0FEA                     	;# 
   581  0FEB                     	;# 
   582  0FED                     	;# 
   583  0FEE                     	;# 
   584  0FEF                     	;# 
   585  0000                     	;# 
   586  0001                     	;# 
   587  0002                     	;# 
   588  0003                     	;# 
   589  0004                     	;# 
   590  0005                     	;# 
   591  0006                     	;# 
   592  0007                     	;# 
   593  0008                     	;# 
   594  0009                     	;# 
   595  000A                     	;# 
   596  000B                     	;# 
   597  000C                     	;# 
   598  000D                     	;# 
   599  0011                     	;# 
   600  0012                     	;# 
   601  0013                     	;# 
   602  0014                     	;# 
   603  0015                     	;# 
   604  0016                     	;# 
   605  0016                     	;# 
   606  0017                     	;# 
   607  0018                     	;# 
   608  0019                     	;# 
   609  001A                     	;# 
   610  001B                     	;# 
   611  001C                     	;# 
   612  001E                     	;# 
   613  001F                     	;# 
   614  008C                     	;# 
   615  008D                     	;# 
   616  0091                     	;# 
   617  0092                     	;# 
   618  0093                     	;# 
   619  0094                     	;# 
   620  0095                     	;# 
   621  0096                     	;# 
   622  0097                     	;# 
   623  0098                     	;# 
   624  0099                     	;# 
   625  009A                     	;# 
   626  009B                     	;# 
   627  009B                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  010C                     	;# 
   632  010D                     	;# 
   633  0111                     	;# 
   634  0112                     	;# 
   635  0113                     	;# 
   636  0114                     	;# 
   637  0115                     	;# 
   638  0116                     	;# 
   639  0117                     	;# 
   640  0118                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011B                     	;# 
   644  011D                     	;# 
   645  011E                     	;# 
   646  018C                     	;# 
   647  018D                     	;# 
   648  0191                     	;# 
   649  0191                     	;# 
   650  0192                     	;# 
   651  0193                     	;# 
   652  0193                     	;# 
   653  0193                     	;# 
   654  0194                     	;# 
   655  0195                     	;# 
   656  0196                     	;# 
   657  0199                     	;# 
   658  019A                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019C                     	;# 
   664  019C                     	;# 
   665  019D                     	;# 
   666  019E                     	;# 
   667  019F                     	;# 
   668  020C                     	;# 
   669  020D                     	;# 
   670  0211                     	;# 
   671  0211                     	;# 
   672  0212                     	;# 
   673  0212                     	;# 
   674  0213                     	;# 
   675  0213                     	;# 
   676  0214                     	;# 
   677  0214                     	;# 
   678  0215                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0216                     	;# 
   682  0216                     	;# 
   683  0217                     	;# 
   684  0217                     	;# 
   685  0219                     	;# 
   686  021A                     	;# 
   687  021B                     	;# 
   688  021C                     	;# 
   689  021D                     	;# 
   690  021E                     	;# 
   691  021F                     	;# 
   692  0291                     	;# 
   693  0291                     	;# 
   694  0292                     	;# 
   695  0293                     	;# 
   696  0294                     	;# 
   697  0295                     	;# 
   698  0295                     	;# 
   699  0296                     	;# 
   700  0298                     	;# 
   701  0298                     	;# 
   702  0299                     	;# 
   703  029A                     	;# 
   704  029B                     	;# 
   705  029C                     	;# 
   706  029C                     	;# 
   707  029D                     	;# 
   708  029E                     	;# 
   709  029E                     	;# 
   710  0311                     	;# 
   711  0311                     	;# 
   712  0312                     	;# 
   713  0313                     	;# 
   714  0318                     	;# 
   715  0318                     	;# 
   716  0319                     	;# 
   717  031A                     	;# 
   718  0394                     	;# 
   719  0395                     	;# 
   720  0396                     	;# 
   721  039A                     	;# 
   722  039C                     	;# 
   723  039D                     	;# 
   724  039E                     	;# 
   725  039F                     	;# 
   726  0415                     	;# 
   727  0416                     	;# 
   728  0417                     	;# 
   729  041C                     	;# 
   730  041D                     	;# 
   731  041E                     	;# 
   732  0FE4                     	;# 
   733  0FE5                     	;# 
   734  0FE6                     	;# 
   735  0FE7                     	;# 
   736  0FE8                     	;# 
   737  0FE9                     	;# 
   738  0FEA                     	;# 
   739  0FEB                     	;# 
   740  0FED                     	;# 
   741  0FEE                     	;# 
   742  0FEF                     	;# 
   743  0000                     	;# 
   744  0001                     	;# 
   745  0002                     	;# 
   746  0003                     	;# 
   747  0004                     	;# 
   748  0005                     	;# 
   749  0006                     	;# 
   750  0007                     	;# 
   751  0008                     	;# 
   752  0009                     	;# 
   753  000A                     	;# 
   754  000B                     	;# 
   755  000C                     	;# 
   756  000D                     	;# 
   757  0011                     	;# 
   758  0012                     	;# 
   759  0013                     	;# 
   760  0014                     	;# 
   761  0015                     	;# 
   762  0016                     	;# 
   763  0016                     	;# 
   764  0017                     	;# 
   765  0018                     	;# 
   766  0019                     	;# 
   767  001A                     	;# 
   768  001B                     	;# 
   769  001C                     	;# 
   770  001E                     	;# 
   771  001F                     	;# 
   772  008C                     	;# 
   773  008D                     	;# 
   774  0091                     	;# 
   775  0092                     	;# 
   776  0093                     	;# 
   777  0094                     	;# 
   778  0095                     	;# 
   779  0096                     	;# 
   780  0097                     	;# 
   781  0098                     	;# 
   782  0099                     	;# 
   783  009A                     	;# 
   784  009B                     	;# 
   785  009B                     	;# 
   786  009C                     	;# 
   787  009D                     	;# 
   788  009E                     	;# 
   789  010C                     	;# 
   790  010D                     	;# 
   791  0111                     	;# 
   792  0112                     	;# 
   793  0113                     	;# 
   794  0114                     	;# 
   795  0115                     	;# 
   796  0116                     	;# 
   797  0117                     	;# 
   798  0118                     	;# 
   799  0119                     	;# 
   800  011A                     	;# 
   801  011B                     	;# 
   802  011D                     	;# 
   803  011E                     	;# 
   804  018C                     	;# 
   805  018D                     	;# 
   806  0191                     	;# 
   807  0191                     	;# 
   808  0192                     	;# 
   809  0193                     	;# 
   810  0193                     	;# 
   811  0193                     	;# 
   812  0194                     	;# 
   813  0195                     	;# 
   814  0196                     	;# 
   815  0199                     	;# 
   816  019A                     	;# 
   817  019B                     	;# 
   818  019B                     	;# 
   819  019B                     	;# 
   820  019B                     	;# 
   821  019C                     	;# 
   822  019C                     	;# 
   823  019D                     	;# 
   824  019E                     	;# 
   825  019F                     	;# 
   826  020C                     	;# 
   827  020D                     	;# 
   828  0211                     	;# 
   829  0211                     	;# 
   830  0212                     	;# 
   831  0212                     	;# 
   832  0213                     	;# 
   833  0213                     	;# 
   834  0214                     	;# 
   835  0214                     	;# 
   836  0215                     	;# 
   837  0215                     	;# 
   838  0215                     	;# 
   839  0216                     	;# 
   840  0216                     	;# 
   841  0217                     	;# 
   842  0217                     	;# 
   843  0219                     	;# 
   844  021A                     	;# 
   845  021B                     	;# 
   846  021C                     	;# 
   847  021D                     	;# 
   848  021E                     	;# 
   849  021F                     	;# 
   850  0291                     	;# 
   851  0291                     	;# 
   852  0292                     	;# 
   853  0293                     	;# 
   854  0294                     	;# 
   855  0295                     	;# 
   856  0295                     	;# 
   857  0296                     	;# 
   858  0298                     	;# 
   859  0298                     	;# 
   860  0299                     	;# 
   861  029A                     	;# 
   862  029B                     	;# 
   863  029C                     	;# 
   864  029C                     	;# 
   865  029D                     	;# 
   866  029E                     	;# 
   867  029E                     	;# 
   868  0311                     	;# 
   869  0311                     	;# 
   870  0312                     	;# 
   871  0313                     	;# 
   872  0318                     	;# 
   873  0318                     	;# 
   874  0319                     	;# 
   875  031A                     	;# 
   876  0394                     	;# 
   877  0395                     	;# 
   878  0396                     	;# 
   879  039A                     	;# 
   880  039C                     	;# 
   881  039D                     	;# 
   882  039E                     	;# 
   883  039F                     	;# 
   884  0415                     	;# 
   885  0416                     	;# 
   886  0417                     	;# 
   887  041C                     	;# 
   888  041D                     	;# 
   889  041E                     	;# 
   890  0FE4                     	;# 
   891  0FE5                     	;# 
   892  0FE6                     	;# 
   893  0FE7                     	;# 
   894  0FE8                     	;# 
   895  0FE9                     	;# 
   896  0FEA                     	;# 
   897  0FEB                     	;# 
   898  0FED                     	;# 
   899  0FEE                     	;# 
   900  0FEF                     	;# 
   901  0000                     	;# 
   902  0001                     	;# 
   903  0002                     	;# 
   904  0003                     	;# 
   905  0004                     	;# 
   906  0005                     	;# 
   907  0006                     	;# 
   908  0007                     	;# 
   909  0008                     	;# 
   910  0009                     	;# 
   911  000A                     	;# 
   912  000B                     	;# 
   913  000C                     	;# 
   914  000D                     	;# 
   915  0011                     	;# 
   916  0012                     	;# 
   917  0013                     	;# 
   918  0014                     	;# 
   919  0015                     	;# 
   920  0016                     	;# 
   921  0016                     	;# 
   922  0017                     	;# 
   923  0018                     	;# 
   924  0019                     	;# 
   925  001A                     	;# 
   926  001B                     	;# 
   927  001C                     	;# 
   928  001E                     	;# 
   929  001F                     	;# 
   930  008C                     	;# 
   931  008D                     	;# 
   932  0091                     	;# 
   933  0092                     	;# 
   934  0093                     	;# 
   935  0094                     	;# 
   936  0095                     	;# 
   937  0096                     	;# 
   938  0097                     	;# 
   939  0098                     	;# 
   940  0099                     	;# 
   941  009A                     	;# 
   942  009B                     	;# 
   943  009B                     	;# 
   944  009C                     	;# 
   945  009D                     	;# 
   946  009E                     	;# 
   947  010C                     	;# 
   948  010D                     	;# 
   949  0111                     	;# 
   950  0112                     	;# 
   951  0113                     	;# 
   952  0114                     	;# 
   953  0115                     	;# 
   954  0116                     	;# 
   955  0117                     	;# 
   956  0118                     	;# 
   957  0119                     	;# 
   958  011A                     	;# 
   959  011B                     	;# 
   960  011D                     	;# 
   961  011E                     	;# 
   962  018C                     	;# 
   963  018D                     	;# 
   964  0191                     	;# 
   965  0191                     	;# 
   966  0192                     	;# 
   967  0193                     	;# 
   968  0193                     	;# 
   969  0193                     	;# 
   970  0194                     	;# 
   971  0195                     	;# 
   972  0196                     	;# 
   973  0199                     	;# 
   974  019A                     	;# 
   975  019B                     	;# 
   976  019B                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019C                     	;# 
   980  019C                     	;# 
   981  019D                     	;# 
   982  019E                     	;# 
   983  019F                     	;# 
   984  020C                     	;# 
   985  020D                     	;# 
   986  0211                     	;# 
   987  0211                     	;# 
   988  0212                     	;# 
   989  0212                     	;# 
   990  0213                     	;# 
   991  0213                     	;# 
   992  0214                     	;# 
   993  0214                     	;# 
   994  0215                     	;# 
   995  0215                     	;# 
   996  0215                     	;# 
   997  0216                     	;# 
   998  0216                     	;# 
   999  0217                     	;# 
  1000  0217                     	;# 
  1001  0219                     	;# 
  1002  021A                     	;# 
  1003  021B                     	;# 
  1004  021C                     	;# 
  1005  021D                     	;# 
  1006  021E                     	;# 
  1007  021F                     	;# 
  1008  0291                     	;# 
  1009  0291                     	;# 
  1010  0292                     	;# 
  1011  0293                     	;# 
  1012  0294                     	;# 
  1013  0295                     	;# 
  1014  0295                     	;# 
  1015  0296                     	;# 
  1016  0298                     	;# 
  1017  0298                     	;# 
  1018  0299                     	;# 
  1019  029A                     	;# 
  1020  029B                     	;# 
  1021  029C                     	;# 
  1022  029C                     	;# 
  1023  029D                     	;# 
  1024  029E                     	;# 
  1025  029E                     	;# 
  1026  0311                     	;# 
  1027  0311                     	;# 
  1028  0312                     	;# 
  1029  0313                     	;# 
  1030  0318                     	;# 
  1031  0318                     	;# 
  1032  0319                     	;# 
  1033  031A                     	;# 
  1034  0394                     	;# 
  1035  0395                     	;# 
  1036  0396                     	;# 
  1037  039A                     	;# 
  1038  039C                     	;# 
  1039  039D                     	;# 
  1040  039E                     	;# 
  1041  039F                     	;# 
  1042  0415                     	;# 
  1043  0416                     	;# 
  1044  0417                     	;# 
  1045  041C                     	;# 
  1046  041D                     	;# 
  1047  041E                     	;# 
  1048  0FE4                     	;# 
  1049  0FE5                     	;# 
  1050  0FE6                     	;# 
  1051  0FE7                     	;# 
  1052  0FE8                     	;# 
  1053  0FE9                     	;# 
  1054  0FEA                     	;# 
  1055  0FEB                     	;# 
  1056  0FED                     	;# 
  1057  0FEE                     	;# 
  1058  0FEF                     	;# 
  1059  0000                     	;# 
  1060  0001                     	;# 
  1061  0002                     	;# 
  1062  0003                     	;# 
  1063  0004                     	;# 
  1064  0005                     	;# 
  1065  0006                     	;# 
  1066  0007                     	;# 
  1067  0008                     	;# 
  1068  0009                     	;# 
  1069  000A                     	;# 
  1070  000B                     	;# 
  1071  000C                     	;# 
  1072  000D                     	;# 
  1073  0011                     	;# 
  1074  0012                     	;# 
  1075  0013                     	;# 
  1076  0014                     	;# 
  1077  0015                     	;# 
  1078  0016                     	;# 
  1079  0016                     	;# 
  1080  0017                     	;# 
  1081  0018                     	;# 
  1082  0019                     	;# 
  1083  001A                     	;# 
  1084  001B                     	;# 
  1085  001C                     	;# 
  1086  001E                     	;# 
  1087  001F                     	;# 
  1088  008C                     	;# 
  1089  008D                     	;# 
  1090  0091                     	;# 
  1091  0092                     	;# 
  1092  0093                     	;# 
  1093  0094                     	;# 
  1094  0095                     	;# 
  1095  0096                     	;# 
  1096  0097                     	;# 
  1097  0098                     	;# 
  1098  0099                     	;# 
  1099  009A                     	;# 
  1100  009B                     	;# 
  1101  009B                     	;# 
  1102  009C                     	;# 
  1103  009D                     	;# 
  1104  009E                     	;# 
  1105  010C                     	;# 
  1106  010D                     	;# 
  1107  0111                     	;# 
  1108  0112                     	;# 
  1109  0113                     	;# 
  1110  0114                     	;# 
  1111  0115                     	;# 
  1112  0116                     	;# 
  1113  0117                     	;# 
  1114  0118                     	;# 
  1115  0119                     	;# 
  1116  011A                     	;# 
  1117  011B                     	;# 
  1118  011D                     	;# 
  1119  011E                     	;# 
  1120  018C                     	;# 
  1121  018D                     	;# 
  1122  0191                     	;# 
  1123  0191                     	;# 
  1124  0192                     	;# 
  1125  0193                     	;# 
  1126  0193                     	;# 
  1127  0193                     	;# 
  1128  0194                     	;# 
  1129  0195                     	;# 
  1130  0196                     	;# 
  1131  0199                     	;# 
  1132  019A                     	;# 
  1133  019B                     	;# 
  1134  019B                     	;# 
  1135  019B                     	;# 
  1136  019B                     	;# 
  1137  019C                     	;# 
  1138  019C                     	;# 
  1139  019D                     	;# 
  1140  019E                     	;# 
  1141  019F                     	;# 
  1142  020C                     	;# 
  1143  020D                     	;# 
  1144  0211                     	;# 
  1145  0211                     	;# 
  1146  0212                     	;# 
  1147  0212                     	;# 
  1148  0213                     	;# 
  1149  0213                     	;# 
  1150  0214                     	;# 
  1151  0214                     	;# 
  1152  0215                     	;# 
  1153  0215                     	;# 
  1154  0215                     	;# 
  1155  0216                     	;# 
  1156  0216                     	;# 
  1157  0217                     	;# 
  1158  0217                     	;# 
  1159  0219                     	;# 
  1160  021A                     	;# 
  1161  021B                     	;# 
  1162  021C                     	;# 
  1163  021D                     	;# 
  1164  021E                     	;# 
  1165  021F                     	;# 
  1166  0291                     	;# 
  1167  0291                     	;# 
  1168  0292                     	;# 
  1169  0293                     	;# 
  1170  0294                     	;# 
  1171  0295                     	;# 
  1172  0295                     	;# 
  1173  0296                     	;# 
  1174  0298                     	;# 
  1175  0298                     	;# 
  1176  0299                     	;# 
  1177  029A                     	;# 
  1178  029B                     	;# 
  1179  029C                     	;# 
  1180  029C                     	;# 
  1181  029D                     	;# 
  1182  029E                     	;# 
  1183  029E                     	;# 
  1184  0311                     	;# 
  1185  0311                     	;# 
  1186  0312                     	;# 
  1187  0313                     	;# 
  1188  0318                     	;# 
  1189  0318                     	;# 
  1190  0319                     	;# 
  1191  031A                     	;# 
  1192  0394                     	;# 
  1193  0395                     	;# 
  1194  0396                     	;# 
  1195  039A                     	;# 
  1196  039C                     	;# 
  1197  039D                     	;# 
  1198  039E                     	;# 
  1199  039F                     	;# 
  1200  0415                     	;# 
  1201  0416                     	;# 
  1202  0417                     	;# 
  1203  041C                     	;# 
  1204  041D                     	;# 
  1205  041E                     	;# 
  1206  0FE4                     	;# 
  1207  0FE5                     	;# 
  1208  0FE6                     	;# 
  1209  0FE7                     	;# 
  1210  0FE8                     	;# 
  1211  0FE9                     	;# 
  1212  0FEA                     	;# 
  1213  0FEB                     	;# 
  1214  0FED                     	;# 
  1215  0FEE                     	;# 
  1216  0FEF                     	;# 
  1217  0000                     	;# 
  1218  0001                     	;# 
  1219  0002                     	;# 
  1220  0003                     	;# 
  1221  0004                     	;# 
  1222  0005                     	;# 
  1223  0006                     	;# 
  1224  0007                     	;# 
  1225  0008                     	;# 
  1226  0009                     	;# 
  1227  000A                     	;# 
  1228  000B                     	;# 
  1229  000C                     	;# 
  1230  000D                     	;# 
  1231  0011                     	;# 
  1232  0012                     	;# 
  1233  0013                     	;# 
  1234  0014                     	;# 
  1235  0015                     	;# 
  1236  0016                     	;# 
  1237  0016                     	;# 
  1238  0017                     	;# 
  1239  0018                     	;# 
  1240  0019                     	;# 
  1241  001A                     	;# 
  1242  001B                     	;# 
  1243  001C                     	;# 
  1244  001E                     	;# 
  1245  001F                     	;# 
  1246  008C                     	;# 
  1247  008D                     	;# 
  1248  0091                     	;# 
  1249  0092                     	;# 
  1250  0093                     	;# 
  1251  0094                     	;# 
  1252  0095                     	;# 
  1253  0096                     	;# 
  1254  0097                     	;# 
  1255  0098                     	;# 
  1256  0099                     	;# 
  1257  009A                     	;# 
  1258  009B                     	;# 
  1259  009B                     	;# 
  1260  009C                     	;# 
  1261  009D                     	;# 
  1262  009E                     	;# 
  1263  010C                     	;# 
  1264  010D                     	;# 
  1265  0111                     	;# 
  1266  0112                     	;# 
  1267  0113                     	;# 
  1268  0114                     	;# 
  1269  0115                     	;# 
  1270  0116                     	;# 
  1271  0117                     	;# 
  1272  0118                     	;# 
  1273  0119                     	;# 
  1274  011A                     	;# 
  1275  011B                     	;# 
  1276  011D                     	;# 
  1277  011E                     	;# 
  1278  018C                     	;# 
  1279  018D                     	;# 
  1280  0191                     	;# 
  1281  0191                     	;# 
  1282  0192                     	;# 
  1283  0193                     	;# 
  1284  0193                     	;# 
  1285  0193                     	;# 
  1286  0194                     	;# 
  1287  0195                     	;# 
  1288  0196                     	;# 
  1289  0199                     	;# 
  1290  019A                     	;# 
  1291  019B                     	;# 
  1292  019B                     	;# 
  1293  019B                     	;# 
  1294  019B                     	;# 
  1295  019C                     	;# 
  1296  019C                     	;# 
  1297  019D                     	;# 
  1298  019E                     	;# 
  1299  019F                     	;# 
  1300  020C                     	;# 
  1301  020D                     	;# 
  1302  0211                     	;# 
  1303  0211                     	;# 
  1304  0212                     	;# 
  1305  0212                     	;# 
  1306  0213                     	;# 
  1307  0213                     	;# 
  1308  0214                     	;# 
  1309  0214                     	;# 
  1310  0215                     	;# 
  1311  0215                     	;# 
  1312  0215                     	;# 
  1313  0216                     	;# 
  1314  0216                     	;# 
  1315  0217                     	;# 
  1316  0217                     	;# 
  1317  0219                     	;# 
  1318  021A                     	;# 
  1319  021B                     	;# 
  1320  021C                     	;# 
  1321  021D                     	;# 
  1322  021E                     	;# 
  1323  021F                     	;# 
  1324  0291                     	;# 
  1325  0291                     	;# 
  1326  0292                     	;# 
  1327  0293                     	;# 
  1328  0294                     	;# 
  1329  0295                     	;# 
  1330  0295                     	;# 
  1331  0296                     	;# 
  1332  0298                     	;# 
  1333  0298                     	;# 
  1334  0299                     	;# 
  1335  029A                     	;# 
  1336  029B                     	;# 
  1337  029C                     	;# 
  1338  029C                     	;# 
  1339  029D                     	;# 
  1340  029E                     	;# 
  1341  029E                     	;# 
  1342  0311                     	;# 
  1343  0311                     	;# 
  1344  0312                     	;# 
  1345  0313                     	;# 
  1346  0318                     	;# 
  1347  0318                     	;# 
  1348  0319                     	;# 
  1349  031A                     	;# 
  1350  0394                     	;# 
  1351  0395                     	;# 
  1352  0396                     	;# 
  1353  039A                     	;# 
  1354  039C                     	;# 
  1355  039D                     	;# 
  1356  039E                     	;# 
  1357  039F                     	;# 
  1358  0415                     	;# 
  1359  0416                     	;# 
  1360  0417                     	;# 
  1361  041C                     	;# 
  1362  041D                     	;# 
  1363  041E                     	;# 
  1364  0FE4                     	;# 
  1365  0FE5                     	;# 
  1366  0FE6                     	;# 
  1367  0FE7                     	;# 
  1368  0FE8                     	;# 
  1369  0FE9                     	;# 
  1370  0FEA                     	;# 
  1371  0FEB                     	;# 
  1372  0FED                     	;# 
  1373  0FEE                     	;# 
  1374  0FEF                     	;# 
  1375  0000                     	;# 
  1376  0001                     	;# 
  1377  0002                     	;# 
  1378  0003                     	;# 
  1379  0004                     	;# 
  1380  0005                     	;# 
  1381  0006                     	;# 
  1382  0007                     	;# 
  1383  0008                     	;# 
  1384  0009                     	;# 
  1385  000A                     	;# 
  1386  000B                     	;# 
  1387  000C                     	;# 
  1388  000D                     	;# 
  1389  0011                     	;# 
  1390  0012                     	;# 
  1391  0013                     	;# 
  1392  0014                     	;# 
  1393  0015                     	;# 
  1394  0016                     	;# 
  1395  0016                     	;# 
  1396  0017                     	;# 
  1397  0018                     	;# 
  1398  0019                     	;# 
  1399  001A                     	;# 
  1400  001B                     	;# 
  1401  001C                     	;# 
  1402  001E                     	;# 
  1403  001F                     	;# 
  1404  008C                     	;# 
  1405  008D                     	;# 
  1406  0091                     	;# 
  1407  0092                     	;# 
  1408  0093                     	;# 
  1409  0094                     	;# 
  1410  0095                     	;# 
  1411  0096                     	;# 
  1412  0097                     	;# 
  1413  0098                     	;# 
  1414  0099                     	;# 
  1415  009A                     	;# 
  1416  009B                     	;# 
  1417  009B                     	;# 
  1418  009C                     	;# 
  1419  009D                     	;# 
  1420  009E                     	;# 
  1421  010C                     	;# 
  1422  010D                     	;# 
  1423  0111                     	;# 
  1424  0112                     	;# 
  1425  0113                     	;# 
  1426  0114                     	;# 
  1427  0115                     	;# 
  1428  0116                     	;# 
  1429  0117                     	;# 
  1430  0118                     	;# 
  1431  0119                     	;# 
  1432  011A                     	;# 
  1433  011B                     	;# 
  1434  011D                     	;# 
  1435  011E                     	;# 
  1436  018C                     	;# 
  1437  018D                     	;# 
  1438  0191                     	;# 
  1439  0191                     	;# 
  1440  0192                     	;# 
  1441  0193                     	;# 
  1442  0193                     	;# 
  1443  0193                     	;# 
  1444  0194                     	;# 
  1445  0195                     	;# 
  1446  0196                     	;# 
  1447  0199                     	;# 
  1448  019A                     	;# 
  1449  019B                     	;# 
  1450  019B                     	;# 
  1451  019B                     	;# 
  1452  019B                     	;# 
  1453  019C                     	;# 
  1454  019C                     	;# 
  1455  019D                     	;# 
  1456  019E                     	;# 
  1457  019F                     	;# 
  1458  020C                     	;# 
  1459  020D                     	;# 
  1460  0211                     	;# 
  1461  0211                     	;# 
  1462  0212                     	;# 
  1463  0212                     	;# 
  1464  0213                     	;# 
  1465  0213                     	;# 
  1466  0214                     	;# 
  1467  0214                     	;# 
  1468  0215                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0216                     	;# 
  1472  0216                     	;# 
  1473  0217                     	;# 
  1474  0217                     	;# 
  1475  0219                     	;# 
  1476  021A                     	;# 
  1477  021B                     	;# 
  1478  021C                     	;# 
  1479  021D                     	;# 
  1480  021E                     	;# 
  1481  021F                     	;# 
  1482  0291                     	;# 
  1483  0291                     	;# 
  1484  0292                     	;# 
  1485  0293                     	;# 
  1486  0294                     	;# 
  1487  0295                     	;# 
  1488  0295                     	;# 
  1489  0296                     	;# 
  1490  0298                     	;# 
  1491  0298                     	;# 
  1492  0299                     	;# 
  1493  029A                     	;# 
  1494  029B                     	;# 
  1495  029C                     	;# 
  1496  029C                     	;# 
  1497  029D                     	;# 
  1498  029E                     	;# 
  1499  029E                     	;# 
  1500  0311                     	;# 
  1501  0311                     	;# 
  1502  0312                     	;# 
  1503  0313                     	;# 
  1504  0318                     	;# 
  1505  0318                     	;# 
  1506  0319                     	;# 
  1507  031A                     	;# 
  1508  0394                     	;# 
  1509  0395                     	;# 
  1510  0396                     	;# 
  1511  039A                     	;# 
  1512  039C                     	;# 
  1513  039D                     	;# 
  1514  039E                     	;# 
  1515  039F                     	;# 
  1516  0415                     	;# 
  1517  0416                     	;# 
  1518  0417                     	;# 
  1519  041C                     	;# 
  1520  041D                     	;# 
  1521  041E                     	;# 
  1522  0FE4                     	;# 
  1523  0FE5                     	;# 
  1524  0FE6                     	;# 
  1525  0FE7                     	;# 
  1526  0FE8                     	;# 
  1527  0FE9                     	;# 
  1528  0FEA                     	;# 
  1529  0FEB                     	;# 
  1530  0FED                     	;# 
  1531  0FEE                     	;# 
  1532  0FEF                     	;# 
  1533                           
  1534                           	psect	eeprom_data
  1535  0000  0001 0000 0000 0000 0000 0000 0000 0000 	db	1,0,0,0,0,0,0,0	;# 
  1536  0000                     	;# 
  1537  0001                     	;# 
  1538  0002                     	;# 
  1539  0003                     	;# 
  1540  0004                     	;# 
  1541  0005                     	;# 
  1542  0006                     	;# 
  1543  0007                     	;# 
  1544  0008                     	;# 
  1545  0009                     	;# 
  1546  000A                     	;# 
  1547  000B                     	;# 
  1548  000C                     	;# 
  1549  000D                     	;# 
  1550  0011                     	;# 
  1551  0012                     	;# 
  1552  0013                     	;# 
  1553  0014                     	;# 
  1554  0015                     	;# 
  1555  0016                     	;# 
  1556  0016                     	;# 
  1557  0017                     	;# 
  1558  0018                     	;# 
  1559  0019                     	;# 
  1560  001A                     	;# 
  1561  001B                     	;# 
  1562  001C                     	;# 
  1563  001E                     	;# 
  1564  001F                     	;# 
  1565  008C                     	;# 
  1566  008D                     	;# 
  1567  0091                     	;# 
  1568  0092                     	;# 
  1569  0093                     	;# 
  1570  0094                     	;# 
  1571  0095                     	;# 
  1572  0096                     	;# 
  1573  0097                     	;# 
  1574  0098                     	;# 
  1575  0099                     	;# 
  1576  009A                     	;# 
  1577  009B                     	;# 
  1578  009B                     	;# 
  1579  009C                     	;# 
  1580  009D                     	;# 
  1581  009E                     	;# 
  1582  010C                     	;# 
  1583  010D                     	;# 
  1584  0111                     	;# 
  1585  0112                     	;# 
  1586  0113                     	;# 
  1587  0114                     	;# 
  1588  0115                     	;# 
  1589  0116                     	;# 
  1590  0117                     	;# 
  1591  0118                     	;# 
  1592  0119                     	;# 
  1593  011A                     	;# 
  1594  011B                     	;# 
  1595  011D                     	;# 
  1596  011E                     	;# 
  1597  018C                     	;# 
  1598  018D                     	;# 
  1599  0191                     	;# 
  1600  0191                     	;# 
  1601  0192                     	;# 
  1602  0193                     	;# 
  1603  0193                     	;# 
  1604  0193                     	;# 
  1605  0194                     	;# 
  1606  0195                     	;# 
  1607  0196                     	;# 
  1608  0199                     	;# 
  1609  019A                     	;# 
  1610  019B                     	;# 
  1611  019B                     	;# 
  1612  019B                     	;# 
  1613  019B                     	;# 
  1614  019C                     	;# 
  1615  019C                     	;# 
  1616  019D                     	;# 
  1617  019E                     	;# 
  1618  019F                     	;# 
  1619  020C                     	;# 
  1620  020D                     	;# 
  1621  0211                     	;# 
  1622  0211                     	;# 
  1623  0212                     	;# 
  1624  0212                     	;# 
  1625  0213                     	;# 
  1626  0213                     	;# 
  1627  0214                     	;# 
  1628  0214                     	;# 
  1629  0215                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0216                     	;# 
  1633  0216                     	;# 
  1634  0217                     	;# 
  1635  0217                     	;# 
  1636  0219                     	;# 
  1637  021A                     	;# 
  1638  021B                     	;# 
  1639  021C                     	;# 
  1640  021D                     	;# 
  1641  021E                     	;# 
  1642  021F                     	;# 
  1643  0291                     	;# 
  1644  0291                     	;# 
  1645  0292                     	;# 
  1646  0293                     	;# 
  1647  0294                     	;# 
  1648  0295                     	;# 
  1649  0295                     	;# 
  1650  0296                     	;# 
  1651  0298                     	;# 
  1652  0298                     	;# 
  1653  0299                     	;# 
  1654  029A                     	;# 
  1655  029B                     	;# 
  1656  029C                     	;# 
  1657  029C                     	;# 
  1658  029D                     	;# 
  1659  029E                     	;# 
  1660  029E                     	;# 
  1661  0311                     	;# 
  1662  0311                     	;# 
  1663  0312                     	;# 
  1664  0313                     	;# 
  1665  0318                     	;# 
  1666  0318                     	;# 
  1667  0319                     	;# 
  1668  031A                     	;# 
  1669  0394                     	;# 
  1670  0395                     	;# 
  1671  0396                     	;# 
  1672  039A                     	;# 
  1673  039C                     	;# 
  1674  039D                     	;# 
  1675  039E                     	;# 
  1676  039F                     	;# 
  1677  0415                     	;# 
  1678  0416                     	;# 
  1679  0417                     	;# 
  1680  041C                     	;# 
  1681  041D                     	;# 
  1682  041E                     	;# 
  1683  0FE4                     	;# 
  1684  0FE5                     	;# 
  1685  0FE6                     	;# 
  1686  0FE7                     	;# 
  1687  0FE8                     	;# 
  1688  0FE9                     	;# 
  1689  0FEA                     	;# 
  1690  0FEB                     	;# 
  1691  0FED                     	;# 
  1692  0FEE                     	;# 
  1693  0FEF                     	;# 
  1694  0000                     	;# 
  1695  0001                     	;# 
  1696  0002                     	;# 
  1697  0003                     	;# 
  1698  0004                     	;# 
  1699  0005                     	;# 
  1700  0006                     	;# 
  1701  0007                     	;# 
  1702  0008                     	;# 
  1703  0009                     	;# 
  1704  000A                     	;# 
  1705  000B                     	;# 
  1706  000C                     	;# 
  1707  000D                     	;# 
  1708  0011                     	;# 
  1709  0012                     	;# 
  1710  0013                     	;# 
  1711  0014                     	;# 
  1712  0015                     	;# 
  1713  0016                     	;# 
  1714  0016                     	;# 
  1715  0017                     	;# 
  1716  0018                     	;# 
  1717  0019                     	;# 
  1718  001A                     	;# 
  1719  001B                     	;# 
  1720  001C                     	;# 
  1721  001E                     	;# 
  1722  001F                     	;# 
  1723  008C                     	;# 
  1724  008D                     	;# 
  1725  0091                     	;# 
  1726  0092                     	;# 
  1727  0093                     	;# 
  1728  0094                     	;# 
  1729  0095                     	;# 
  1730  0096                     	;# 
  1731  0097                     	;# 
  1732  0098                     	;# 
  1733  0099                     	;# 
  1734  009A                     	;# 
  1735  009B                     	;# 
  1736  009B                     	;# 
  1737  009C                     	;# 
  1738  009D                     	;# 
  1739  009E                     	;# 
  1740  010C                     	;# 
  1741  010D                     	;# 
  1742  0111                     	;# 
  1743  0112                     	;# 
  1744  0113                     	;# 
  1745  0114                     	;# 
  1746  0115                     	;# 
  1747  0116                     	;# 
  1748  0117                     	;# 
  1749  0118                     	;# 
  1750  0119                     	;# 
  1751  011A                     	;# 
  1752  011B                     	;# 
  1753  011D                     	;# 
  1754  011E                     	;# 
  1755  018C                     	;# 
  1756  018D                     	;# 
  1757  0191                     	;# 
  1758  0191                     	;# 
  1759  0192                     	;# 
  1760  0193                     	;# 
  1761  0193                     	;# 
  1762  0193                     	;# 
  1763  0194                     	;# 
  1764  0195                     	;# 
  1765  0196                     	;# 
  1766  0199                     	;# 
  1767  019A                     	;# 
  1768  019B                     	;# 
  1769  019B                     	;# 
  1770  019B                     	;# 
  1771  019B                     	;# 
  1772  019C                     	;# 
  1773  019C                     	;# 
  1774  019D                     	;# 
  1775  019E                     	;# 
  1776  019F                     	;# 
  1777  020C                     	;# 
  1778  020D                     	;# 
  1779  0211                     	;# 
  1780  0211                     	;# 
  1781  0212                     	;# 
  1782  0212                     	;# 
  1783  0213                     	;# 
  1784  0213                     	;# 
  1785  0214                     	;# 
  1786  0214                     	;# 
  1787  0215                     	;# 
  1788  0215                     	;# 
  1789  0215                     	;# 
  1790  0216                     	;# 
  1791  0216                     	;# 
  1792  0217                     	;# 
  1793  0217                     	;# 
  1794  0219                     	;# 
  1795  021A                     	;# 
  1796  021B                     	;# 
  1797  021C                     	;# 
  1798  021D                     	;# 
  1799  021E                     	;# 
  1800  021F                     	;# 
  1801  0291                     	;# 
  1802  0291                     	;# 
  1803  0292                     	;# 
  1804  0293                     	;# 
  1805  0294                     	;# 
  1806  0295                     	;# 
  1807  0295                     	;# 
  1808  0296                     	;# 
  1809  0298                     	;# 
  1810  0298                     	;# 
  1811  0299                     	;# 
  1812  029A                     	;# 
  1813  029B                     	;# 
  1814  029C                     	;# 
  1815  029C                     	;# 
  1816  029D                     	;# 
  1817  029E                     	;# 
  1818  029E                     	;# 
  1819  0311                     	;# 
  1820  0311                     	;# 
  1821  0312                     	;# 
  1822  0313                     	;# 
  1823  0318                     	;# 
  1824  0318                     	;# 
  1825  0319                     	;# 
  1826  031A                     	;# 
  1827  0394                     	;# 
  1828  0395                     	;# 
  1829  0396                     	;# 
  1830  039A                     	;# 
  1831  039C                     	;# 
  1832  039D                     	;# 
  1833  039E                     	;# 
  1834  039F                     	;# 
  1835  0415                     	;# 
  1836  0416                     	;# 
  1837  0417                     	;# 
  1838  041C                     	;# 
  1839  041D                     	;# 
  1840  041E                     	;# 
  1841  0FE4                     	;# 
  1842  0FE5                     	;# 
  1843  0FE6                     	;# 
  1844  0FE7                     	;# 
  1845  0FE8                     	;# 
  1846  0FE9                     	;# 
  1847  0FEA                     	;# 
  1848  0FEB                     	;# 
  1849  0FED                     	;# 
  1850  0FEE                     	;# 
  1851  0FEF                     	;# 
  1852  0000                     	;# 
  1853  0001                     	;# 
  1854  0002                     	;# 
  1855  0003                     	;# 
  1856  0004                     	;# 
  1857  0005                     	;# 
  1858  0006                     	;# 
  1859  0007                     	;# 
  1860  0008                     	;# 
  1861  0009                     	;# 
  1862  000A                     	;# 
  1863  000B                     	;# 
  1864  000C                     	;# 
  1865  000D                     	;# 
  1866  0011                     	;# 
  1867  0012                     	;# 
  1868  0013                     	;# 
  1869  0014                     	;# 
  1870  0015                     	;# 
  1871  0016                     	;# 
  1872  0016                     	;# 
  1873  0017                     	;# 
  1874  0018                     	;# 
  1875  0019                     	;# 
  1876  001A                     	;# 
  1877  001B                     	;# 
  1878  001C                     	;# 
  1879  001E                     	;# 
  1880  001F                     	;# 
  1881  008C                     	;# 
  1882  008D                     	;# 
  1883  0091                     	;# 
  1884  0092                     	;# 
  1885  0093                     	;# 
  1886  0094                     	;# 
  1887  0095                     	;# 
  1888  0096                     	;# 
  1889  0097                     	;# 
  1890  0098                     	;# 
  1891  0099                     	;# 
  1892  009A                     	;# 
  1893  009B                     	;# 
  1894  009B                     	;# 
  1895  009C                     	;# 
  1896  009D                     	;# 
  1897  009E                     	;# 
  1898  010C                     	;# 
  1899  010D                     	;# 
  1900  0111                     	;# 
  1901  0112                     	;# 
  1902  0113                     	;# 
  1903  0114                     	;# 
  1904  0115                     	;# 
  1905  0116                     	;# 
  1906  0117                     	;# 
  1907  0118                     	;# 
  1908  0119                     	;# 
  1909  011A                     	;# 
  1910  011B                     	;# 
  1911  011D                     	;# 
  1912  011E                     	;# 
  1913  018C                     	;# 
  1914  018D                     	;# 
  1915  0191                     	;# 
  1916  0191                     	;# 
  1917  0192                     	;# 
  1918  0193                     	;# 
  1919  0193                     	;# 
  1920  0193                     	;# 
  1921  0194                     	;# 
  1922  0195                     	;# 
  1923  0196                     	;# 
  1924  0199                     	;# 
  1925  019A                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019D                     	;# 
  1933  019E                     	;# 
  1934  019F                     	;# 
  1935  020C                     	;# 
  1936  020D                     	;# 
  1937  0211                     	;# 
  1938  0211                     	;# 
  1939  0212                     	;# 
  1940  0212                     	;# 
  1941  0213                     	;# 
  1942  0213                     	;# 
  1943  0214                     	;# 
  1944  0214                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0216                     	;# 
  1949  0216                     	;# 
  1950  0217                     	;# 
  1951  0217                     	;# 
  1952  0219                     	;# 
  1953  021A                     	;# 
  1954  021B                     	;# 
  1955  021C                     	;# 
  1956  021D                     	;# 
  1957  021E                     	;# 
  1958  021F                     	;# 
  1959  0291                     	;# 
  1960  0291                     	;# 
  1961  0292                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0295                     	;# 
  1965  0295                     	;# 
  1966  0296                     	;# 
  1967  0298                     	;# 
  1968  0298                     	;# 
  1969  0299                     	;# 
  1970  029A                     	;# 
  1971  029B                     	;# 
  1972  029C                     	;# 
  1973  029C                     	;# 
  1974  029D                     	;# 
  1975  029E                     	;# 
  1976  029E                     	;# 
  1977  0311                     	;# 
  1978  0311                     	;# 
  1979  0312                     	;# 
  1980  0313                     	;# 
  1981  0318                     	;# 
  1982  0318                     	;# 
  1983  0319                     	;# 
  1984  031A                     	;# 
  1985  0394                     	;# 
  1986  0395                     	;# 
  1987  0396                     	;# 
  1988  039A                     	;# 
  1989  039C                     	;# 
  1990  039D                     	;# 
  1991  039E                     	;# 
  1992  039F                     	;# 
  1993  0415                     	;# 
  1994  0416                     	;# 
  1995  0417                     	;# 
  1996  041C                     	;# 
  1997  041D                     	;# 
  1998  041E                     	;# 
  1999  0FE4                     	;# 
  2000  0FE5                     	;# 
  2001  0FE6                     	;# 
  2002  0FE7                     	;# 
  2003  0FE8                     	;# 
  2004  0FE9                     	;# 
  2005  0FEA                     	;# 
  2006  0FEB                     	;# 
  2007  0FED                     	;# 
  2008  0FEE                     	;# 
  2009  0FEF                     	;# 
  2010                           
  2011                           	psect	idataBANK1
  2012  0A89                     __pidataBANK1:	
  2013                           
  2014                           ;initializer for _H7826_Gain
  2015  0A89  347F               	retlw	low (STR_7| (0+32768))
  2016  0A8A  3484               	retlw	high (STR_7| (0+32768))
  2017  0A8B  347A               	retlw	low (STR_8| (0+32768))
  2018  0A8C  3484               	retlw	high (STR_8| (0+32768))
  2019  0A8D  3489               	retlw	low (STR_9| (0+32768))
  2020  0A8E  3484               	retlw	high (STR_9| (0+32768))
  2021  0A8F  3460               	retlw	low (STR_10| (0+32768))
  2022  0A90  3484               	retlw	high (STR_10| (0+32768))
  2023  0A91  3436               	retlw	low (STR_11| (0+32768))
  2024  0A92  3484               	retlw	high (STR_11| (0+32768))
  2025  0A93  3442               	retlw	low (STR_12| (0+32768))
  2026  0A94  3484               	retlw	high (STR_12| (0+32768))
  2027  0A95  345A               	retlw	low (STR_13| (0+32768))
  2028  0A96  3484               	retlw	high (STR_13| (0+32768))
  2029  0A97  3413               	retlw	low (STR_14| (0+32768))
  2030  0A98  3484               	retlw	high (STR_14| (0+32768))
  2031  0A99  340C               	retlw	low (STR_15| (0+32768))
  2032  0A9A  3484               	retlw	high (STR_15| (0+32768))
  2033  0A9B  341A               	retlw	low (STR_16| (0+32768))
  2034  0A9C  3484               	retlw	high (STR_16| (0+32768))
  2035  0A9D  34E2               	retlw	low (STR_17| (0+32768))
  2036  0A9E  3483               	retlw	high (STR_17| (0+32768))
  2037  0A9F  3428               	retlw	low (STR_18| (0+32768))
  2038  0AA0  3484               	retlw	high (STR_18| (0+32768))
  2039  0AA1  34D3               	retlw	low (STR_19| (0+32768))
  2040  0AA2  3483               	retlw	high (STR_19| (0+32768))
  2041  0AA3  34CB               	retlw	low (STR_20| (0+32768))
  2042  0AA4  3483               	retlw	high (STR_20| (0+32768))
  2043  0AA5  34C3               	retlw	low (STR_21| (0+32768))
  2044  0AA6  3483               	retlw	high (STR_21| (0+32768))
  2045                           
  2046                           	psect	idataBANK2
  2047  0CA6                     __pidataBANK2:	
  2048                           
  2049                           ;initializer for _H7826_01_Gain
  2050  0CA6  346B               	retlw	low (STR_22| (0+32768))
  2051  0CA7  3484               	retlw	high (STR_22| (0+32768))
  2052  0CA8  3470               	retlw	low (STR_23| (0+32768))
  2053  0CA9  3484               	retlw	high (STR_23| (0+32768))
  2054  0CAA  3484               	retlw	low (STR_24| (0+32768))
  2055  0CAB  3484               	retlw	high (STR_24| (0+32768))
  2056  0CAC  3475               	retlw	low (STR_25| (0+32768))
  2057  0CAD  3484               	retlw	high (STR_25| (0+32768))
  2058  0CAE  3448               	retlw	low (STR_26| (0+32768))
  2059  0CAF  3484               	retlw	high (STR_26| (0+32768))
  2060  0CB0  344E               	retlw	low (STR_27| (0+32768))
  2061  0CB1  3484               	retlw	high (STR_27| (0+32768))
  2062  0CB2  3454               	retlw	low (STR_28| (0+32768))
  2063  0CB3  3484               	retlw	high (STR_28| (0+32768))
  2064  0CB4  343C               	retlw	low (STR_29| (0+32768))
  2065  0CB5  3484               	retlw	high (STR_29| (0+32768))
  2066  0CB6  34F7               	retlw	low (STR_30| (0+32768))
  2067  0CB7  3483               	retlw	high (STR_30| (0+32768))
  2068  0CB8  3421               	retlw	low (STR_31| (0+32768))
  2069  0CB9  3484               	retlw	high (STR_31| (0+32768))
  2070  0CBA  34FE               	retlw	low (STR_32| (0+32768))
  2071  0CBB  3483               	retlw	high (STR_32| (0+32768))
  2072  0CBC  3405               	retlw	low (STR_33| (0+32768))
  2073  0CBD  3484               	retlw	high (STR_33| (0+32768))
  2074  0CBE  342F               	retlw	low (STR_34| (0+32768))
  2075  0CBF  3484               	retlw	high (STR_34| (0+32768))
  2076  0CC0  34E9               	retlw	low (STR_35| (0+32768))
  2077  0CC1  3483               	retlw	high (STR_35| (0+32768))
  2078  0CC2  34F0               	retlw	low (STR_36| (0+32768))
  2079  0CC3  3483               	retlw	high (STR_36| (0+32768))
  2080                           
  2081                           ;initializer for _DAC_DataTable
  2082  0CC4  3499               	retlw	153
  2083  0CC5  3401               	retlw	1
  2084  0CC6  34C2               	retlw	194
  2085  0CC7  3401               	retlw	1
  2086  0CC8  34EB               	retlw	235
  2087  0CC9  3401               	retlw	1
  2088  0CCA  3414               	retlw	20
  2089  0CCB  3402               	retlw	2
  2090  0CCC  343D               	retlw	61
  2091  0CCD  3402               	retlw	2
  2092  0CCE  3466               	retlw	102
  2093  0CCF  3402               	retlw	2
  2094  0CD0  348F               	retlw	143
  2095  0CD1  3402               	retlw	2
  2096  0CD2  34B8               	retlw	184
  2097  0CD3  3402               	retlw	2
  2098  0CD4  34E1               	retlw	225
  2099  0CD5  3402               	retlw	2
  2100  0CD6  340A               	retlw	10
  2101  0CD7  3403               	retlw	3
  2102  0CD8  3433               	retlw	51
  2103  0CD9  3403               	retlw	3
  2104  0CDA  345B               	retlw	91
  2105  0CDB  3403               	retlw	3
  2106  0CDC  3484               	retlw	132
  2107  0CDD  3403               	retlw	3
  2108  0CDE  34AD               	retlw	173
  2109  0CDF  3403               	retlw	3
  2110  0CE0  34D6               	retlw	214
  2111  0CE1  3403               	retlw	3
  2112                           
  2113                           	psect	stringtext
  2114  027E                     __pstringtext:	
  2115  027E                     _dpowers:	
  2116  027E  3401               	retlw	1
  2117  027F  3400               	retlw	0
  2118  0280  3400               	retlw	0
  2119  0281  3400               	retlw	0
  2120  0282  340A               	retlw	10
  2121  0283  3400               	retlw	0
  2122  0284  3400               	retlw	0
  2123  0285  3400               	retlw	0
  2124  0286  3464               	retlw	100
  2125  0287  3400               	retlw	0
  2126  0288  3400               	retlw	0
  2127  0289  3400               	retlw	0
  2128  028A  34E8               	retlw	232
  2129  028B  3403               	retlw	3
  2130  028C  3400               	retlw	0
  2131  028D  3400               	retlw	0
  2132  028E  3410               	retlw	16
  2133  028F  3427               	retlw	39
  2134  0290  3400               	retlw	0
  2135  0291  3400               	retlw	0
  2136  0292  34A0               	retlw	160
  2137  0293  3486               	retlw	134
  2138  0294  3401               	retlw	1
  2139  0295  3400               	retlw	0
  2140  0296  3440               	retlw	64
  2141  0297  3442               	retlw	66
  2142  0298  340F               	retlw	15
  2143  0299  3400               	retlw	0
  2144  029A  3480               	retlw	128
  2145  029B  3496               	retlw	150
  2146  029C  3498               	retlw	152
  2147  029D  3400               	retlw	0
  2148  029E  3400               	retlw	0
  2149  029F  34E1               	retlw	225
  2150  02A0  34F5               	retlw	245
  2151  02A1  3405               	retlw	5
  2152  02A2  3400               	retlw	0
  2153  02A3  34CA               	retlw	202
  2154  02A4  349A               	retlw	154
  2155  02A5  343B               	retlw	59
  2156  02A6                     __end_of_dpowers:	
  2157  02A6                     _sense_parameter:	
  2158  02A6  3464               	retlw	100
  2159  02A7  3464               	retlw	100
  2160  02A8  3464               	retlw	100
  2161  02A9                     __end_of_sense_parameter:	
  2162  0016                     _TMR1	set	22
  2163  000C                     _PORTA	set	12
  2164  001F                     _CPSCON1	set	31
  2165  001E                     _CPSCON0	set	30
  2166  0015                     _TMR0	set	21
  2167  0019                     _T1GCON	set	25
  2168  0018                     _T1CON	set	24
  2169  000D                     _PORTB	set	13
  2170  001B                     _PR2	set	27
  2171  001A                     _TMR2	set	26
  2172  001C                     _T2CON	set	28
  2173  0018                     _CARRY	set	24
  2174  00A1                     _BCL2IF	set	161
  2175  00A0                     _SSP2IF	set	160
  2176  009B                     _TMR6IF	set	155
  2177  0088                     _TMR1IF	set	136
  2178  00C0                     _TMR1ON	set	192
  2179  005F                     _GIE	set	95
  2180  005E                     _PEIE	set	94
  2181  0099                     _OSCCON	set	153
  2182  0095                     _OPTION_REG	set	149
  2183  008D                     _TRISB	set	141
  2184  008C                     _TRISA	set	140
  2185  04A1                     _BCL2IE	set	1185
  2186  04A0                     _SSP2IE	set	1184
  2187  049B                     _TMR6IE	set	1179
  2188  0488                     _TMR1IE	set	1160
  2189  011E                     _APFCON1	set	286
  2190  011D                     _APFCON0	set	285
  2191  0866                     _LATA6	set	2150
  2192  0863                     _LATA3	set	2147
  2193  0864                     _LATA4	set	2148
  2194  0191                     _EEADR	set	401
  2195  0196                     _EECON2	set	406
  2196  0193                     _EEDATA	set	403
  2197  0195                     _EECON1	set	405
  2198  018D                     _ANSELB	set	397
  2199  018C                     _ANSELA	set	396
  2200  0CAA                     _WREN	set	3242
  2201  0CA8                     _RD	set	3240
  2202  0CA9                     _WR	set	3241
  2203  021C                     _SSP2STATbits	set	540
  2204  0219                     _SSP2BUF	set	537
  2205  021E                     _SSP2CON2	set	542
  2206  021B                     _SSP2MSK	set	539
  2207  021E                     _SSP2CON2bits	set	542
  2208  021D                     _SSP2CON1bits	set	541
  2209  021A                     _SSP2ADD	set	538
  2210  021C                     _SSP2STAT	set	540
  2211  021D                     _SSP2CON1	set	541
  2212  020D                     _WPUB	set	525
  2213  0298                     _CCPR2L	set	664
  2214  029E                     _CCPTMRS	set	670
  2215  029A                     _CCP2CON	set	666
  2216  041E                     _T6CON	set	1054
  2217  041C                     _TMR6	set	1052
  2218  041D                     _PR6	set	1053
  2219  02A9                     STR_41:	
  2220  02A9  3420               	retlw	32	;' '
  2221  02AA  3420               	retlw	32	;' '
  2222  02AB  3420               	retlw	32	;' '
  2223  02AC  3453               	retlw	83	;'S'
  2224  02AD  3465               	retlw	101	;'e'
  2225  02AE  3472               	retlw	114	;'r'
  2226  02AF  342E               	retlw	46	;'.'
  2227  02B0  344E               	retlw	78	;'N'
  2228  02B1  346F               	retlw	111	;'o'
  2229  02B2  342E               	retlw	46	;'.'
  2230  02B3  3425               	retlw	37	;'%'
  2231  02B4  3430               	retlw	48	;'0'
  2232  02B5  3430               	retlw	48	;'0'
  2233  02B6  3430               	retlw	48	;'0'
  2234  02B7  3433               	retlw	51	;'3'
  2235  02B8  3464               	retlw	100	;'d'
  2236  02B9  3420               	retlw	32	;' '
  2237  02BA  3420               	retlw	32	;' '
  2238  02BB  3420               	retlw	32	;' '
  2239  02BC  3400               	retlw	0
  2240  02BD                     STR_38:	
  2241  02BD  3420               	retlw	32	;' '
  2242  02BE  3420               	retlw	32	;' '
  2243  02BF  3420               	retlw	32	;' '
  2244  02C0  3420               	retlw	32	;' '
  2245  02C1  3477               	retlw	119	;'w'
  2246  02C2  3469               	retlw	105	;'i'
  2247  02C3  3474               	retlw	116	;'t'
  2248  02C4  3468               	retlw	104	;'h'
  2249  02C5  3420               	retlw	32	;' '
  2250  02C6  3450               	retlw	80	;'P'
  2251  02C7  3449               	retlw	73	;'I'
  2252  02C8  3443               	retlw	67	;'C'
  2253  02C9  3420               	retlw	32	;' '
  2254  02CA  3420               	retlw	32	;' '
  2255  02CB  3420               	retlw	32	;' '
  2256  02CC  3420               	retlw	32	;' '
  2257  02CD  3400               	retlw	0
  2258  02CE                     STR_53:	
  2259  02CE  3444               	retlw	68	;'D'
  2260  02CF  3465               	retlw	101	;'e'
  2261  02D0  3476               	retlw	118	;'v'
  2262  02D1  3465               	retlw	101	;'e'
  2263  02D2  3469               	retlw	105	;'i'
  2264  02D3  3463               	retlw	99	;'c'
  2265  02D4  3465               	retlw	101	;'e'
  2266  02D5  343A               	retlw	58	;':'
  2267  02D6  3448               	retlw	72	;'H'
  2268  02D7  3437               	retlw	55	;'7'
  2269  02D8  3438               	retlw	56	;'8'
  2270  02D9  3432               	retlw	50	;'2'
  2271  02DA  3436               	retlw	54	;'6'
  2272  02DB  3420               	retlw	32	;' '
  2273  02DC  3420               	retlw	32	;' '
  2274  02DD  3420               	retlw	32	;' '
  2275  02DE  3400               	retlw	0
  2276  02DF                     STR_44:	
  2277  02DF  3420               	retlw	32	;' '
  2278  02E0  3420               	retlw	32	;' '
  2279  02E1  3420               	retlw	32	;' '
  2280  02E2  3450               	retlw	80	;'P'
  2281  02E3  344D               	retlw	77	;'M'
  2282  02E4  3454               	retlw	84	;'T'
  2283  02E5  3420               	retlw	32	;' '
  2284  02E6  3444               	retlw	68	;'D'
  2285  02E7  3465               	retlw	101	;'e'
  2286  02E8  3476               	retlw	118	;'v'
  2287  02E9  3469               	retlw	105	;'i'
  2288  02EA  3463               	retlw	99	;'c'
  2289  02EB  3465               	retlw	101	;'e'
  2290  02EC  3420               	retlw	32	;' '
  2291  02ED  3420               	retlw	32	;' '
  2292  02EE  3420               	retlw	32	;' '
  2293  02EF  3400               	retlw	0
  2294  02F0                     STR_47:	
  2295  02F0  3420               	retlw	32	;' '
  2296  02F1  3420               	retlw	32	;' '
  2297  02F2  3453               	retlw	83	;'S'
  2298  02F3  3465               	retlw	101	;'e'
  2299  02F4  3474               	retlw	116	;'t'
  2300  02F5  3420               	retlw	32	;' '
  2301  02F6  3450               	retlw	80	;'P'
  2302  02F7  344D               	retlw	77	;'M'
  2303  02F8  3454               	retlw	84	;'T'
  2304  02F9  3420               	retlw	32	;' '
  2305  02FA  3447               	retlw	71	;'G'
  2306  02FB  3461               	retlw	97	;'a'
  2307  02FC  3469               	retlw	105	;'i'
  2308  02FD  346E               	retlw	110	;'n'
  2309  02FE  3420               	retlw	32	;' '
  2310  02FF  3420               	retlw	32	;' '
  2311  0300  3400               	retlw	0
  2312  0301                     STR_37:	
  2313  0301  3420               	retlw	32	;' '
  2314  0302  3447               	retlw	71	;'G'
  2315  0303  3465               	retlw	101	;'e'
  2316  0304  3469               	retlw	105	;'i'
  2317  0305  3467               	retlw	103	;'g'
  2318  0306  3465               	retlw	101	;'e'
  2319  0307  3472               	retlw	114	;'r'
  2320  0308  3420               	retlw	32	;' '
  2321  0309  3443               	retlw	67	;'C'
  2322  030A  346F               	retlw	111	;'o'
  2323  030B  3475               	retlw	117	;'u'
  2324  030C  346E               	retlw	110	;'n'
  2325  030D  3474               	retlw	116	;'t'
  2326  030E  3465               	retlw	101	;'e'
  2327  030F  3472               	retlw	114	;'r'
  2328  0310  3420               	retlw	32	;' '
  2329  0311  3400               	retlw	0
  2330  0312                     STR_54:	
  2331  0312  3444               	retlw	68	;'D'
  2332  0313  3465               	retlw	101	;'e'
  2333  0314  3476               	retlw	118	;'v'
  2334  0315  3465               	retlw	101	;'e'
  2335  0316  3469               	retlw	105	;'i'
  2336  0317  3463               	retlw	99	;'c'
  2337  0318  3465               	retlw	101	;'e'
  2338  0319  343A               	retlw	58	;':'
  2339  031A  3448               	retlw	72	;'H'
  2340  031B  3437               	retlw	55	;'7'
  2341  031C  3438               	retlw	56	;'8'
  2342  031D  3432               	retlw	50	;'2'
  2343  031E  3436               	retlw	54	;'6'
  2344  031F  345F               	retlw	95	;'_'
  2345  0320  3430               	retlw	48	;'0'
  2346  0321  3431               	retlw	49	;'1'
  2347  0322  3400               	retlw	0
  2348  0323                     STR_45:	
  2349  0323  343C               	retlw	60	;'<'
  2350  0324  342D               	retlw	45	;'-'
  2351  0325  342D               	retlw	45	;'-'
  2352  0326  3420               	retlw	32	;' '
  2353  0327  3420               	retlw	32	;' '
  2354  0328  3448               	retlw	72	;'H'
  2355  0329  3437               	retlw	55	;'7'
  2356  032A  3438               	retlw	56	;'8'
  2357  032B  3432               	retlw	50	;'2'
  2358  032C  3436               	retlw	54	;'6'
  2359  032D  3420               	retlw	32	;' '
  2360  032E  3420               	retlw	32	;' '
  2361  032F  3420               	retlw	32	;' '
  2362  0330  342D               	retlw	45	;'-'
  2363  0331  342D               	retlw	45	;'-'
  2364  0332  343E               	retlw	62	;'>'
  2365  0333  3400               	retlw	0
  2366  0334                     STR_46:	
  2367  0334  343C               	retlw	60	;'<'
  2368  0335  342D               	retlw	45	;'-'
  2369  0336  342D               	retlw	45	;'-'
  2370  0337  3420               	retlw	32	;' '
  2371  0338  3448               	retlw	72	;'H'
  2372  0339  3437               	retlw	55	;'7'
  2373  033A  3438               	retlw	56	;'8'
  2374  033B  3432               	retlw	50	;'2'
  2375  033C  3436               	retlw	54	;'6'
  2376  033D  345F               	retlw	95	;'_'
  2377  033E  3430               	retlw	48	;'0'
  2378  033F  3431               	retlw	49	;'1'
  2379  0340  3420               	retlw	32	;' '
  2380  0341  342D               	retlw	45	;'-'
  2381  0342  342D               	retlw	45	;'-'
  2382  0343  343E               	retlw	62	;'>'
  2383  0344  3400               	retlw	0
  2384  0345                     STR_43:	
  2385  0345  3420               	retlw	32	;' '
  2386  0346  3420               	retlw	32	;' '
  2387  0347  3452               	retlw	82	;'R'
  2388  0348  3479               	retlw	121	;'y'
  2389  0349  346F               	retlw	111	;'o'
  2390  034A  3420               	retlw	32	;' '
  2391  034B  3457               	retlw	87	;'W'
  2392  034C  3461               	retlw	97	;'a'
  2393  034D  346B               	retlw	107	;'k'
  2394  034E  3461               	retlw	97	;'a'
  2395  034F  3462               	retlw	98	;'b'
  2396  0350  3461               	retlw	97	;'a'
  2397  0351  3479               	retlw	121	;'y'
  2398  0352  3473               	retlw	115	;'s'
  2399  0353  3468               	retlw	104	;'h'
  2400  0354  3469               	retlw	105	;'i'
  2401  0355  3400               	retlw	0
  2402  0356                     STR_1:	
  2403  0356  3420               	retlw	32	;' '
  2404  0357  3420               	retlw	32	;' '
  2405  0358  3443               	retlw	67	;'C'
  2406  0359  346F               	retlw	111	;'o'
  2407  035A  3475               	retlw	117	;'u'
  2408  035B  346E               	retlw	110	;'n'
  2409  035C  3474               	retlw	116	;'t'
  2410  035D  3474               	retlw	116	;'t'
  2411  035E  3469               	retlw	105	;'i'
  2412  035F  346E               	retlw	110	;'n'
  2413  0360  3467               	retlw	103	;'g'
  2414  0361  342E               	retlw	46	;'.'
  2415  0362  342E               	retlw	46	;'.'
  2416  0363  342E               	retlw	46	;'.'
  2417  0364  3420               	retlw	32	;' '
  2418  0365  3420               	retlw	32	;' '
  2419  0366  3400               	retlw	0
  2420  0367                     STR_2:	
  2421  0367  3420               	retlw	32	;' '
  2422  0368  3425               	retlw	37	;'%'
  2423  0369  3437               	retlw	55	;'7'
  2424  036A  346C               	retlw	108	;'l'
  2425  036B  3475               	retlw	117	;'u'
  2426  036C  3420               	retlw	32	;' '
  2427  036D  3420               	retlw	32	;' '
  2428  036E  3425               	retlw	37	;'%'
  2429  036F  3430               	retlw	48	;'0'
  2430  0370  3432               	retlw	50	;'2'
  2431  0371  3464               	retlw	100	;'d'
  2432  0372  343A               	retlw	58	;':'
  2433  0373  3425               	retlw	37	;'%'
  2434  0374  3430               	retlw	48	;'0'
  2435  0375  3432               	retlw	50	;'2'
  2436  0376  3464               	retlw	100	;'d'
  2437  0377  3400               	retlw	0
  2438  0378                     STR_3:	
  2439  0378  3420               	retlw	32	;' '
  2440  0379  3443               	retlw	67	;'C'
  2441  037A  346F               	retlw	111	;'o'
  2442  037B  3475               	retlw	117	;'u'
  2443  037C  346E               	retlw	110	;'n'
  2444  037D  3474               	retlw	116	;'t'
  2445  037E  3420               	retlw	32	;' '
  2446  037F  3453               	retlw	83	;'S'
  2447  0380  3474               	retlw	116	;'t'
  2448  0381  346F               	retlw	111	;'o'
  2449  0382  3470               	retlw	112	;'p'
  2450  0383  3470               	retlw	112	;'p'
  2451  0384  3465               	retlw	101	;'e'
  2452  0385  3464               	retlw	100	;'d'
  2453  0386  3420               	retlw	32	;' '
  2454  0387  3400               	retlw	0
  2455  0388                     STR_39:	
  2456  0388  3453               	retlw	83	;'S'
  2457  0389  346F               	retlw	111	;'o'
  2458  038A  3474               	retlw	116	;'t'
  2459  038B  3457               	retlw	87	;'W'
  2460  038C  3461               	retlw	97	;'a'
  2461  038D  3472               	retlw	114	;'r'
  2462  038E  3465               	retlw	101	;'e'
  2463  038F  3420               	retlw	32	;' '
  2464  0390  3476               	retlw	118	;'v'
  2465  0391  3465               	retlw	101	;'e'
  2466  0392  3472               	retlw	114	;'r'
  2467  0393  3425               	retlw	37	;'%'
  2468  0394  3473               	retlw	115	;'s'
  2469  0395  3400               	retlw	0
  2470  0396                     STR_55:	
  2471  0396  3420               	retlw	32	;' '
  2472  0397  3447               	retlw	71	;'G'
  2473  0398  3461               	retlw	97	;'a'
  2474  0399  3469               	retlw	105	;'i'
  2475  039A  346E               	retlw	110	;'n'
  2476  039B  343A               	retlw	58	;':'
  2477  039C  3420               	retlw	32	;' '
  2478  039D  3425               	retlw	37	;'%'
  2479  039E  3438               	retlw	56	;'8'
  2480  039F  3473               	retlw	115	;'s'
  2481  03A0  3420               	retlw	32	;' '
  2482  03A1  3400               	retlw	0
  2483  03A2                     STR_48:	
  2484  03A2  343C               	retlw	60	;'<'
  2485  03A3  342D               	retlw	45	;'-'
  2486  03A4  342D               	retlw	45	;'-'
  2487  03A5  3420               	retlw	32	;' '
  2488  03A6  3425               	retlw	37	;'%'
  2489  03A7  3438               	retlw	56	;'8'
  2490  03A8  3473               	retlw	115	;'s'
  2491  03A9  3420               	retlw	32	;' '
  2492  03AA  342D               	retlw	45	;'-'
  2493  03AB  342D               	retlw	45	;'-'
  2494  03AC  343E               	retlw	62	;'>'
  2495  03AD  3400               	retlw	0
  2496  03AE                     STR_42:	
  2497  03AE  3443               	retlw	67	;'C'
  2498  03AF  3472               	retlw	114	;'r'
  2499  03B0  3465               	retlw	101	;'e'
  2500  03B1  3461               	retlw	97	;'a'
  2501  03B2  3474               	retlw	116	;'t'
  2502  03B3  3465               	retlw	101	;'e'
  2503  03B4  3464               	retlw	100	;'d'
  2504  03B5  3420               	retlw	32	;' '
  2505  03B6  3442               	retlw	66	;'B'
  2506  03B7  3479               	retlw	121	;'y'
  2507  03B8  3400               	retlw	0
  2508  03B9                     STR_5:	
  2509  03B9  3425               	retlw	37	;'%'
  2510  03BA  3437               	retlw	55	;'7'
  2511  03BB  346C               	retlw	108	;'l'
  2512  03BC  3475               	retlw	117	;'u'
  2513  03BD  3420               	retlw	32	;' '
  2514  03BE  3425               	retlw	37	;'%'
  2515  03BF  3437               	retlw	55	;'7'
  2516  03C0  346C               	retlw	108	;'l'
  2517  03C1  3475               	retlw	117	;'u'
  2518  03C2  3400               	retlw	0
  2519  03C3                     STR_21:	
  2520  03C3  3432               	retlw	50	;'2'
  2521  03C4  3437               	retlw	55	;'7'
  2522  03C5  3437               	retlw	55	;'7'
  2523  03C6  3434               	retlw	52	;'4'
  2524  03C7  3435               	retlw	53	;'5'
  2525  03C8  3436               	retlw	54	;'6'
  2526  03C9  3432               	retlw	50	;'2'
  2527  03CA  3400               	retlw	0
  2528  03CB                     STR_20:	
  2529  03CB  3431               	retlw	49	;'1'
  2530  03CC  3439               	retlw	57	;'9'
  2531  03CD  3434               	retlw	52	;'4'
  2532  03CE  3430               	retlw	48	;'0'
  2533  03CF  3436               	retlw	54	;'6'
  2534  03D0  3437               	retlw	55	;'7'
  2535  03D1  3433               	retlw	51	;'3'
  2536  03D2  3400               	retlw	0
  2537  03D3                     STR_19:	
  2538  03D3  3431               	retlw	49	;'1'
  2539  03D4  3433               	retlw	51	;'3'
  2540  03D5  3433               	retlw	51	;'3'
  2541  03D6  3436               	retlw	54	;'6'
  2542  03D7  3430               	retlw	48	;'0'
  2543  03D8  3430               	retlw	48	;'0'
  2544  03D9  3436               	retlw	54	;'6'
  2545  03DA  3400               	retlw	0
  2546  03DB                     STR_57:	
  2547  03DB  3428               	retlw	40	;'('
  2548  03DC  346E               	retlw	110	;'n'
  2549  03DD  3475               	retlw	117	;'u'
  2550  03DE  346C               	retlw	108	;'l'
  2551  03DF  346C               	retlw	108	;'l'
  2552  03E0  3429               	retlw	41	;')'
  2553  03E1  3400               	retlw	0
  2554  03E2                     STR_17:	
  2555  03E2  3436               	retlw	54	;'6'
  2556  03E3  3430               	retlw	48	;'0'
  2557  03E4  3430               	retlw	48	;'0'
  2558  03E5  3430               	retlw	48	;'0'
  2559  03E6  3430               	retlw	48	;'0'
  2560  03E7  3430               	retlw	48	;'0'
  2561  03E8  3400               	retlw	0
  2562  03E9                     STR_35:	
  2563  03E9  3437               	retlw	55	;'7'
  2564  03EA  3430               	retlw	48	;'0'
  2565  03EB  3430               	retlw	48	;'0'
  2566  03EC  3438               	retlw	56	;'8'
  2567  03ED  3439               	retlw	57	;'9'
  2568  03EE  3430               	retlw	48	;'0'
  2569  03EF  3400               	retlw	0
  2570  03F0                     STR_36:	
  2571  03F0  3439               	retlw	57	;'9'
  2572  03F1  3436               	retlw	54	;'6'
  2573  03F2  3438               	retlw	56	;'8'
  2574  03F3  3434               	retlw	52	;'4'
  2575  03F4  3437               	retlw	55	;'7'
  2576  03F5  3432               	retlw	50	;'2'
  2577  03F6  3400               	retlw	0
  2578  03F7                     STR_30:	
  2579  03F7  3431               	retlw	49	;'1'
  2580  03F8  3430               	retlw	48	;'0'
  2581  03F9  3438               	retlw	56	;'8'
  2582  03FA  3438               	retlw	56	;'8'
  2583  03FB  3434               	retlw	52	;'4'
  2584  03FC  3433               	retlw	51	;'3'
  2585  03FD  3400               	retlw	0
  2586  03FE                     STR_32:	
  2587  03FE  3432               	retlw	50	;'2'
  2588  03FF  3434               	retlw	52	;'4'
  2589  0400  3432               	retlw	50	;'2'
  2590  0401  3433               	retlw	51	;'3'
  2591  0402  3436               	retlw	54	;'6'
  2592  0403  3434               	retlw	52	;'4'
  2593  0404  3400               	retlw	0
  2594  0405                     STR_33:	
  2595  0405  3433               	retlw	51	;'3'
  2596  0406  3435               	retlw	53	;'5'
  2597  0407  3431               	retlw	49	;'1'
  2598  0408  3431               	retlw	49	;'1'
  2599  0409  3432               	retlw	50	;'2'
  2600  040A  3437               	retlw	55	;'7'
  2601  040B  3400               	retlw	0
  2602  040C                     STR_15:	
  2603  040C  3432               	retlw	50	;'2'
  2604  040D  3434               	retlw	52	;'4'
  2605  040E  3437               	retlw	55	;'7'
  2606  040F  3436               	retlw	54	;'6'
  2607  0410  3434               	retlw	52	;'4'
  2608  0411  3437               	retlw	55	;'7'
  2609  0412  3400               	retlw	0
  2610  0413                     STR_14:	
  2611  0413  3431               	retlw	49	;'1'
  2612  0414  3435               	retlw	53	;'5'
  2613  0415  3433               	retlw	51	;'3'
  2614  0416  3432               	retlw	50	;'2'
  2615  0417  3432               	retlw	50	;'2'
  2616  0418  3438               	retlw	56	;'8'
  2617  0419  3400               	retlw	0
  2618  041A                     STR_16:	
  2619  041A  3433               	retlw	51	;'3'
  2620  041B  3438               	retlw	56	;'8'
  2621  041C  3439               	retlw	57	;'9'
  2622  041D  3439               	retlw	57	;'9'
  2623  041E  3438               	retlw	56	;'8'
  2624  041F  3438               	retlw	56	;'8'
  2625  0420  3400               	retlw	0
  2626  0421                     STR_31:	
  2627  0421  3431               	retlw	49	;'1'
  2628  0422  3436               	retlw	54	;'6'
  2629  0423  3434               	retlw	52	;'4'
  2630  0424  3431               	retlw	49	;'1'
  2631  0425  3433               	retlw	51	;'3'
  2632  0426  3439               	retlw	57	;'9'
  2633  0427  3400               	retlw	0
  2634  0428                     STR_18:	
  2635  0428  3439               	retlw	57	;'9'
  2636  0429  3430               	retlw	48	;'0'
  2637  042A  3433               	retlw	51	;'3'
  2638  042B  3438               	retlw	56	;'8'
  2639  042C  3439               	retlw	57	;'9'
  2640  042D  3439               	retlw	57	;'9'
  2641  042E  3400               	retlw	0
  2642  042F                     STR_34:	
  2643  042F  3434               	retlw	52	;'4'
  2644  0430  3439               	retlw	57	;'9'
  2645  0431  3439               	retlw	57	;'9'
  2646  0432  3439               	retlw	57	;'9'
  2647  0433  3439               	retlw	57	;'9'
  2648  0434  3439               	retlw	57	;'9'
  2649  0435  3400               	retlw	0
  2650  0436                     STR_11:	
  2651  0436  3433               	retlw	51	;'3'
  2652  0437  3430               	retlw	48	;'0'
  2653  0438  3430               	retlw	48	;'0'
  2654  0439  3430               	retlw	48	;'0'
  2655  043A  3430               	retlw	48	;'0'
  2656  043B  3400               	retlw	0
  2657  043C                     STR_29:	
  2658  043C  3437               	retlw	55	;'7'
  2659  043D  3430               	retlw	48	;'0'
  2660  043E  3435               	retlw	53	;'5'
  2661  043F  3430               	retlw	48	;'0'
  2662  0440  3430               	retlw	48	;'0'
  2663  0441  3400               	retlw	0
  2664  0442                     STR_12:	
  2665  0442  3435               	retlw	53	;'5'
  2666  0443  3433               	retlw	51	;'3'
  2667  0444  3435               	retlw	53	;'5'
  2668  0445  3435               	retlw	53	;'5'
  2669  0446  3433               	retlw	51	;'3'
  2670  0447  3400               	retlw	0
  2671  0448                     STR_26:	
  2672  0448  3431               	retlw	49	;'1'
  2673  0449  3436               	retlw	54	;'6'
  2674  044A  3431               	retlw	49	;'1'
  2675  044B  3432               	retlw	50	;'2'
  2676  044C  3435               	retlw	53	;'5'
  2677  044D  3400               	retlw	0
  2678  044E                     STR_27:	
  2679  044E  3432               	retlw	50	;'2'
  2680  044F  3437               	retlw	55	;'7'
  2681  0450  3432               	retlw	50	;'2'
  2682  0451  3433               	retlw	51	;'3'
  2683  0452  3438               	retlw	56	;'8'
  2684  0453  3400               	retlw	0
  2685  0454                     STR_28:	
  2686  0454  3434               	retlw	52	;'4'
  2687  0455  3434               	retlw	52	;'4'
  2688  0456  3434               	retlw	52	;'4'
  2689  0457  3437               	retlw	55	;'7'
  2690  0458  3438               	retlw	56	;'8'
  2691  0459  3400               	retlw	0
  2692  045A                     STR_13:	
  2693  045A  3439               	retlw	57	;'9'
  2694  045B  3432               	retlw	50	;'2'
  2695  045C  3430               	retlw	48	;'0'
  2696  045D  3438               	retlw	56	;'8'
  2697  045E  3438               	retlw	56	;'8'
  2698  045F  3400               	retlw	0
  2699  0460                     STR_10:	
  2700  0460  3431               	retlw	49	;'1'
  2701  0461  3436               	retlw	54	;'6'
  2702  0462  3430               	retlw	48	;'0'
  2703  0463  3439               	retlw	57	;'9'
  2704  0464  3439               	retlw	57	;'9'
  2705  0465  3400               	retlw	0
  2706  0466                     STR_40:	
  2707  0466  3431               	retlw	49	;'1'
  2708  0467  342E               	retlw	46	;'.'
  2709  0468  3430               	retlw	48	;'0'
  2710  0469  3430               	retlw	48	;'0'
  2711  046A  3400               	retlw	0
  2712  046B                     STR_22:	
  2713  046B  3431               	retlw	49	;'1'
  2714  046C  3432               	retlw	50	;'2'
  2715  046D  3435               	retlw	53	;'5'
  2716  046E  3430               	retlw	48	;'0'
  2717  046F  3400               	retlw	0
  2718  0470                     STR_23:	
  2719  0470  3432               	retlw	50	;'2'
  2720  0471  3435               	retlw	53	;'5'
  2721  0472  3438               	retlw	56	;'8'
  2722  0473  3430               	retlw	48	;'0'
  2723  0474  3400               	retlw	0
  2724  0475                     STR_25:	
  2725  0475  3439               	retlw	57	;'9'
  2726  0476  3431               	retlw	49	;'1'
  2727  0477  3438               	retlw	56	;'8'
  2728  0478  3432               	retlw	50	;'2'
  2729  0479  3400               	retlw	0
  2730  047A                     STR_8:	
  2731  047A  3433               	retlw	51	;'3'
  2732  047B  3439               	retlw	57	;'9'
  2733  047C  3435               	retlw	53	;'5'
  2734  047D  3437               	retlw	55	;'7'
  2735  047E  3400               	retlw	0
  2736  047F                     STR_7:	
  2737  047F  3431               	retlw	49	;'1'
  2738  0480  3437               	retlw	55	;'7'
  2739  0481  3437               	retlw	55	;'7'
  2740  0482  3437               	retlw	55	;'7'
  2741  0483  3400               	retlw	0
  2742  0484                     STR_24:	
  2743  0484  3434               	retlw	52	;'4'
  2744  0485  3439               	retlw	57	;'9'
  2745  0486  3439               	retlw	57	;'9'
  2746  0487  3438               	retlw	56	;'8'
  2747  0488  3400               	retlw	0
  2748  0489                     STR_9:	
  2749  0489  3438               	retlw	56	;'8'
  2750  048A  3432               	retlw	50	;'2'
  2751  048B  3431               	retlw	49	;'1'
  2752  048C  3439               	retlw	57	;'9'
  2753  048D  3400               	retlw	0
  2754  02A9                     
  2755                           ; #config settings
  2756  0000                     
  2757                           	psect	cinit
  2758  002D                     start_initialization:	
  2759  002D                     __initialization:	
  2760                           
  2761                           ; Initialize objects allocated to BANK1
  2762  002D  3089               	movlw	low __pidataBANK1
  2763  002E  0084               	movwf	4
  2764  002F  308A               	movlw	(high __pidataBANK1)| (0+128)
  2765  0030  0085               	movwf	5
  2766  0031  30C8               	movlw	low __pdataBANK1
  2767  0032  0086               	movwf	6
  2768  0033  3000               	movlw	high __pdataBANK1
  2769  0034  0087               	movwf	7
  2770  0035  301E               	movlw	30
  2771  0036  3188  20F3  3180   	fcall	init_ram
  2772                           
  2773                           ; Initialize objects allocated to BANK2
  2774  0039  30A6               	movlw	low __pidataBANK2
  2775  003A  0084               	movwf	4
  2776  003B  308C               	movlw	(high __pidataBANK2)| (0+128)
  2777  003C  0085               	movwf	5
  2778  003D  3020               	movlw	low __pdataBANK2
  2779  003E  0086               	movwf	6
  2780  003F  3001               	movlw	high __pdataBANK2
  2781  0040  0087               	movwf	7
  2782  0041  303C               	movlw	60
  2783  0042  3188  20F3  3180   	fcall	init_ram
  2784                           
  2785                           ; Clear objects allocated to COMMON
  2786  0045  01F0               	clrf	__pbssCOMMON& (0+127)
  2787  0046  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2788  0047  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2789  0048  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2790  0049  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2791  004A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2792                           
  2793                           ; Clear objects allocated to BANK0
  2794  004B  01EC               	clrf	__pbssBANK0& (0+127)
  2795  004C  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  2796  004D  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  2797  004E  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  2798                           
  2799                           ; Clear objects allocated to BANK1
  2800  004F  30A0               	movlw	low __pbssBANK1
  2801  0050  0084               	movwf	4
  2802  0051  3000               	movlw	high __pbssBANK1
  2803  0052  0085               	movwf	5
  2804  0053  3028               	movlw	40
  2805  0054  3188  20ED         	fcall	clear_ram0
  2806  0056                     end_of_initialization:	
  2807                           ;End of C runtime variable initialization code
  2808                           
  2809  0056                     __end_of__initialization:	
  2810  0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2811  0057  0020               	movlb	0
  2812  0058  3184  2C8E         	ljmp	_main	;jump to C main() function
  2813                           
  2814                           	psect	bssCOMMON
  2815  0070                     __pbssCOMMON:	
  2816  0070                     _mTouch_Interval:	
  2817  0070                     	ds	3
  2818  0073                     _count:	
  2819  0073                     	ds	2
  2820  0075                     mTouch_Read@channel:	
  2821  0075                     	ds	1
  2822                           
  2823                           	psect	bssBANK0
  2824  006C                     __pbssBANK0:	
  2825  006C                     main@state_mode:	
  2826  006C                     	ds	1
  2827  006D                     _VoltageReg:	
  2828  006D                     	ds	2
  2829  006F                     _ConfigReg:	
  2830  006F                     	ds	1
  2831                           
  2832                           	psect	bssBANK1
  2833  00A0                     __pbssBANK1:	
  2834  00A0                     _tcnt:	
  2835  00A0                     	ds	8
  2836  00A8                     _cnts:	
  2837  00A8                     	ds	4
  2838  00AC                     _CPS_PreData:	
  2839  00AC                     	ds	3
  2840  00AF                     _CPS_Data:	
  2841  00AF                     	ds	3
  2842  00B2                     _I2C2_Config:	
  2843  00B2                     	ds	19
  2844  00C5                     main@pmt_config:	
  2845  00C5                     	ds	3
  2846                           
  2847                           	psect	dataBANK1
  2848  00C8                     __pdataBANK1:	
  2849  00C8                     _H7826_Gain:	
  2850  00C8                     	ds	30
  2851                           
  2852                           	psect	dataBANK2
  2853  0120                     __pdataBANK2:	
  2854  0120                     _H7826_01_Gain:	
  2855  0120                     	ds	30
  2856  013E                     _DAC_DataTable:	
  2857  013E                     	ds	30
  2858                           
  2859                           	psect	inittext
  2860  08F3                     init_ram:	
  2861  08F3  00FE               	movwf	126
  2862  08F4                     initloop:	
  2863  08F4  0012               	moviw fsr0++
  2864  08F5  001E               	movwi fsr1++
  2865  08F6  0BFE               	decfsz	126,f
  2866  08F7  28F4               	goto	initloop
  2867  08F8  3400               	retlw	0
  2868                           
  2869                           	psect	clrtext
  2870  08ED                     clear_ram0:	
  2871                           ;	Called with FSR0 containing the base address, and
  2872                           ;	WREG with the size to clear
  2873                           
  2874  08ED  0064               	clrwdt	;clear the watchdog before getting into this loop
  2875  08EE                     clrloop0:	
  2876  08EE  0180               	clrf	0	;clear RAM location pointed to by FSR
  2877  08EF  3101               	addfsr 0,1
  2878  08F0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2879  08F1  28EE               	goto	clrloop0	;have we reached the end yet?
  2880  08F2  3400               	retlw	0	;all done for this memory range, return
  2881                           
  2882                           	psect	cstackCOMMON
  2883  0076                     __pcstackCOMMON:	
  2884  0076                     ?_isdigit:	
  2885  0076                     ?_I2C2_Interrupt:	
  2886                           ; 1 bit 
  2887                           
  2888  0076                     ??_I2C2_Interrupt:	
  2889                           ; 1 bytes @ 0x0
  2890                           
  2891  0076                     ?_LCD_DisplayClear:	
  2892                           ; 1 bytes @ 0x0
  2893                           
  2894  0076                     ?_Timer1_ClearRecord:	
  2895                           ; 1 bytes @ 0x0
  2896                           
  2897  0076                     ?_eeprom_read:	
  2898                           ; 1 bytes @ 0x0
  2899                           
  2900  0076                     ?_Basic_Init:	
  2901                           ; 1 bytes @ 0x0
  2902                           
  2903  0076                     ?_StartUp_Menu:	
  2904                           ; 1 bytes @ 0x0
  2905                           
  2906  0076                     ?_Ssetting_PMT_Config:	
  2907                           ; 1 bytes @ 0x0
  2908                           
  2909  0076                     ?_Show_PMT_Config:	
  2910                           ; 1 bytes @ 0x0
  2911                           
  2912  0076                     ?_Buzzer_Init:	
  2913                           ; 1 bytes @ 0x0
  2914                           
  2915  0076                     ?_Buzzer_SetDuty:	
  2916                           ; 1 bytes @ 0x0
  2917                           
  2918  0076                     ?_Buzzer_Count1ms:	
  2919                           ; 1 bytes @ 0x0
  2920                           
  2921  0076                     ?_I2C_CommonInterrupt:	
  2922                           ; 1 bytes @ 0x0
  2923                           
  2924  0076                     ?_LCD_WriteData:	
  2925                           ; 1 bytes @ 0x0
  2926                           
  2927  0076                     ?_LCD_Init:	
  2928                           ; 1 bytes @ 0x0
  2929                           
  2930  0076                     ?_putch:	
  2931                           ; 1 bytes @ 0x0
  2932                           
  2933  0076                     ?_LCD_CursorHome:	
  2934                           ; 1 bytes @ 0x0
  2935                           
  2936  0076                     ?_DAC_Initialize:	
  2937                           ; 1 bytes @ 0x0
  2938                           
  2939  0076                     ?_Timer1_Init:	
  2940                           ; 1 bytes @ 0x0
  2941                           
  2942  0076                     ?_Timer1_StartCount:	
  2943                           ; 1 bytes @ 0x0
  2944                           
  2945  0076                     ?_Timer1_StopCount:	
  2946                           ; 1 bytes @ 0x0
  2947                           
  2948  0076                     ?_Timer1_GetSecond:	
  2949                           ; 1 bytes @ 0x0
  2950                           
  2951  0076                     ?_Timer1_GetMinute:	
  2952                           ; 1 bytes @ 0x0
  2953                           
  2954  0076                     ?_Timer1_Count1ms:	
  2955                           ; 1 bytes @ 0x0
  2956                           
  2957  0076                     ?_Timer1_DetectAssignCount:	
  2958                           ; 1 bytes @ 0x0
  2959                           
  2960  0076                     ??_Timer1_DetectAssignCount:	
  2961                           ; 1 bytes @ 0x0
  2962                           
  2963  0076                     ?_Timer6_Init:	
  2964                           ; 1 bytes @ 0x0
  2965                           
  2966  0076                     ?_Timer6_CheckFlag:	
  2967                           ; 1 bytes @ 0x0
  2968                           
  2969  0076                     ??_Timer6_CheckFlag:	
  2970                           ; 1 bytes @ 0x0
  2971                           
  2972  0076                     ?_mTouch_PortInit:	
  2973                           ; 1 bytes @ 0x0
  2974                           
  2975  0076                     ?_mTouch_Init:	
  2976                           ; 1 bytes @ 0x0
  2977                           
  2978  0076                     ?_mTouch_Read:	
  2979                           ; 1 bytes @ 0x0
  2980                           
  2981  0076                     ??_mTouch_Read:	
  2982                           ; 1 bytes @ 0x0
  2983                           
  2984  0076                     ?_mTouch_IntervalDecrement:	
  2985                           ; 1 bytes @ 0x0
  2986                           
  2987  0076                     ??_mTouch_IntervalDecrement:	
  2988                           ; 1 bytes @ 0x0
  2989                           
  2990  0076                     ?_mTouch_Check:	
  2991                           ; 1 bytes @ 0x0
  2992                           
  2993  0076                     ?_main:	
  2994                           ; 1 bytes @ 0x0
  2995                           
  2996  0076                     ?_Handler:	
  2997                           ; 1 bytes @ 0x0
  2998                           
  2999  0076                     ?_I2C2_PinInit:	
  3000                           ; 1 bytes @ 0x0
  3001                           
  3002  0076                     ?_Save_PMTConfig:	
  3003                           ; 1 bytes @ 0x0
  3004                           
  3005  0076                     ?_Load_PMTConfing:	
  3006                           ; 1 bytes @ 0x0
  3007                           
  3008  0076                     ?i1_Buzzer_MiliSecond:	
  3009                           ; 1 bytes @ 0x0
  3010                           
  3011  0076                     Buzzer_SetDuty@duty:	
  3012                           ; 1 bytes @ 0x0
  3013                           
  3014  0076                     i1Buzzer_MiliSecond@time:	
  3015                           ; 2 bytes @ 0x0
  3016                           
  3017                           
  3018                           ; 2 bytes @ 0x0
  3019  0076                     	ds	1
  3020  0077                     ??_I2C_CommonInterrupt:	
  3021                           
  3022                           ; 1 bytes @ 0x1
  3023  0077                     	ds	1
  3024  0078                     ??_Buzzer_SetDuty:	
  3025  0078                     ??_Timer1_Count1ms:	
  3026                           ; 1 bytes @ 0x2
  3027                           
  3028  0078                     ??i1_Buzzer_MiliSecond:	
  3029                           ; 1 bytes @ 0x2
  3030                           
  3031                           
  3032                           ; 1 bytes @ 0x2
  3033  0078                     	ds	2
  3034  007A                     Buzzer_SetDuty@CCP2CON_Pre:	
  3035                           
  3036                           ; 1 bytes @ 0x4
  3037  007A                     	ds	1
  3038  007B                     ??_Buzzer_Count1ms:	
  3039  007B                     ??_Handler:	
  3040                           ; 1 bytes @ 0x5
  3041                           
  3042                           
  3043                           ; 1 bytes @ 0x5
  3044  007B                     	ds	1
  3045                           
  3046                           	psect	cstackBANK0
  3047  0020                     __pcstackBANK0:	
  3048  0020                     ?_I2C2_Transmit:	
  3049  0020                     ??_Timer1_ClearRecord:	
  3050                           ; 1 bytes @ 0x0
  3051                           
  3052  0020                     ?_eeprom_write:	
  3053                           ; 1 bytes @ 0x0
  3054                           
  3055  0020                     ??_eeprom_read:	
  3056                           ; 1 bytes @ 0x0
  3057                           
  3058  0020                     ??_Basic_Init:	
  3059                           ; 1 bytes @ 0x0
  3060                           
  3061  0020                     ??_isdigit:	
  3062                           ; 1 bytes @ 0x0
  3063                           
  3064  0020                     ??_Buzzer_Init:	
  3065                           ; 1 bytes @ 0x0
  3066                           
  3067  0020                     ?_Buzzer_MiliSecond:	
  3068                           ; 1 bytes @ 0x0
  3069                           
  3070  0020                     ??_LCD_WriteData:	
  3071                           ; 1 bytes @ 0x0
  3072                           
  3073  0020                     ??_Timer1_Init:	
  3074                           ; 1 bytes @ 0x0
  3075                           
  3076  0020                     ??_Timer1_StartCount:	
  3077                           ; 1 bytes @ 0x0
  3078                           
  3079  0020                     ??_Timer1_StopCount:	
  3080                           ; 1 bytes @ 0x0
  3081                           
  3082  0020                     ??_Timer1_GetSecond:	
  3083                           ; 1 bytes @ 0x0
  3084                           
  3085  0020                     ??_Timer1_GetMinute:	
  3086                           ; 1 bytes @ 0x0
  3087                           
  3088  0020                     ??_Timer6_Init:	
  3089                           ; 1 bytes @ 0x0
  3090                           
  3091  0020                     ??_mTouch_PortInit:	
  3092                           ; 1 bytes @ 0x0
  3093                           
  3094  0020                     ??_I2C2_PinInit:	
  3095                           ; 1 bytes @ 0x0
  3096                           
  3097  0020                     ?___wmul:	
  3098                           ; 1 bytes @ 0x0
  3099                           
  3100  0020                     ?_Timer1_GetCountSum:	
  3101                           ; 2 bytes @ 0x0
  3102                           
  3103  0020                     ?___lmul:	
  3104                           ; 4 bytes @ 0x0
  3105                           
  3106  0020                     I2C2_Transmit@pData:	
  3107                           ; 4 bytes @ 0x0
  3108                           
  3109  0020                     eeprom_write@value:	
  3110                           ; 1 bytes @ 0x0
  3111                           
  3112  0020                     _isdigit$904:	
  3113                           ; 1 bytes @ 0x0
  3114                           
  3115  0020                     Buzzer_MiliSecond@time:	
  3116                           ; 1 bytes @ 0x0
  3117                           
  3118  0020                     ___wmul@multiplier:	
  3119                           ; 2 bytes @ 0x0
  3120                           
  3121  0020                     ___lmul@multiplier:	
  3122                           ; 2 bytes @ 0x0
  3123                           
  3124                           
  3125                           ; 4 bytes @ 0x0
  3126  0020                     	ds	1
  3127  0021                     ?_I2C2_Setting:	
  3128  0021                     ??_eeprom_write:	
  3129                           ; 1 bytes @ 0x1
  3130                           
  3131  0021                     ??_mTouch_Init:	
  3132                           ; 1 bytes @ 0x1
  3133                           
  3134  0021                     I2C2_Setting@mode:	
  3135                           ; 1 bytes @ 0x1
  3136                           
  3137  0021                     I2C2_Transmit@size:	
  3138                           ; 1 bytes @ 0x1
  3139                           
  3140  0021                     isdigit@c:	
  3141                           ; 1 bytes @ 0x1
  3142                           
  3143                           
  3144                           ; 1 bytes @ 0x1
  3145  0021                     	ds	1
  3146  0022                     ??_I2C2_Transmit:	
  3147  0022                     ??_Buzzer_MiliSecond:	
  3148                           ; 1 bytes @ 0x2
  3149                           
  3150  0022                     ??_mTouch_Check:	
  3151                           ; 1 bytes @ 0x2
  3152                           
  3153  0022                     LCD_WriteData@point:	
  3154                           ; 1 bytes @ 0x2
  3155                           
  3156  0022                     I2C2_Setting@Speed:	
  3157                           ; 1 bytes @ 0x2
  3158                           
  3159  0022                     ___wmul@multiplicand:	
  3160                           ; 1 bytes @ 0x2
  3161                           
  3162                           
  3163                           ; 2 bytes @ 0x2
  3164  0022                     	ds	1
  3165  0023                     ??_I2C2_Setting:	
  3166  0023                     ??_LCD_DisplayClear:	
  3167                           ; 1 bytes @ 0x3
  3168                           
  3169  0023                     ??_putch:	
  3170                           ; 1 bytes @ 0x3
  3171                           
  3172  0023                     ??_LCD_CursorHome:	
  3173                           ; 1 bytes @ 0x3
  3174                           
  3175  0023                     ?_LCD_CursorPosition:	
  3176                           ; 1 bytes @ 0x3
  3177                           
  3178  0023                     putch@c:	
  3179                           ; 1 bytes @ 0x3
  3180                           
  3181  0023                     LCD_CursorPosition@ty:	
  3182                           ; 1 bytes @ 0x3
  3183                           
  3184  0023                     eeprom_read@addr:	
  3185                           ; 1 bytes @ 0x3
  3186                           
  3187  0023                     eeprom_write@addr:	
  3188                           ; 1 bytes @ 0x3
  3189                           
  3190                           
  3191                           ; 1 bytes @ 0x3
  3192  0023                     	ds	1
  3193  0024                     ??_LCD_Init:	
  3194  0024                     ??_LCD_CursorPosition:	
  3195                           ; 1 bytes @ 0x4
  3196                           
  3197  0024                     ??_Timer1_GetCountSum:	
  3198                           ; 1 bytes @ 0x4
  3199                           
  3200  0024                     ?_EEPROM_MultiWrite:	
  3201                           ; 1 bytes @ 0x4
  3202                           
  3203  0024                     ?_EEPROM_MultiRead:	
  3204                           ; 1 bytes @ 0x4
  3205                           
  3206  0024                     ??___wmul:	
  3207                           ; 1 bytes @ 0x4
  3208                           
  3209  0024                     EEPROM_MultiWrite@size:	
  3210                           ; 1 bytes @ 0x4
  3211                           
  3212  0024                     EEPROM_MultiRead@size:	
  3213                           ; 1 bytes @ 0x4
  3214                           
  3215  0024                     I2C2_Setting@address:	
  3216                           ; 1 bytes @ 0x4
  3217                           
  3218  0024                     I2C2_Transmit@address:	
  3219                           ; 1 bytes @ 0x4
  3220                           
  3221  0024                     ___wmul@product:	
  3222                           ; 1 bytes @ 0x4
  3223                           
  3224  0024                     ___lmul@multiplicand:	
  3225                           ; 2 bytes @ 0x4
  3226                           
  3227                           
  3228                           ; 4 bytes @ 0x4
  3229  0024                     	ds	1
  3230  0025                     ?_I2C_Init:	
  3231  0025                     I2C_Init@address:	
  3232                           ; 1 bytes @ 0x5
  3233                           
  3234  0025                     LCD_CursorPosition@tx:	
  3235                           ; 1 bytes @ 0x5
  3236                           
  3237  0025                     EEPROM_MultiWrite@addr:	
  3238                           ; 1 bytes @ 0x5
  3239                           
  3240  0025                     EEPROM_MultiRead@addr:	
  3241                           ; 1 bytes @ 0x5
  3242                           
  3243  0025                     I2C2_Transmit@i:	
  3244                           ; 1 bytes @ 0x5
  3245                           
  3246                           
  3247                           ; 1 bytes @ 0x5
  3248  0025                     	ds	1
  3249  0026                     ??_EEPROM_MultiWrite:	
  3250  0026                     ??_EEPROM_MultiRead:	
  3251                           ; 1 bytes @ 0x6
  3252                           
  3253  0026                     I2C_Init@mode:	
  3254                           ; 1 bytes @ 0x6
  3255                           
  3256  0026                     I2C2_Transmit@i_560:	
  3257                           ; 1 bytes @ 0x6
  3258                           
  3259                           
  3260                           ; 1 bytes @ 0x6
  3261  0026                     	ds	1
  3262  0027                     I2C_Init@Speed:	
  3263  0027                     mTouch_Check@chan:	
  3264                           ; 1 bytes @ 0x7
  3265                           
  3266  0027                     I2C2_Transmit@result:	
  3267                           ; 1 bytes @ 0x7
  3268                           
  3269                           
  3270                           ; 1 bytes @ 0x7
  3271  0027                     	ds	1
  3272  0028                     ??_I2C_Init:	
  3273  0028                     ?_I2C_Transmit:	
  3274                           ; 1 bytes @ 0x8
  3275                           
  3276  0028                     ??___lmul:	
  3277                           ; 1 bytes @ 0x8
  3278                           
  3279  0028                     I2C_Transmit@address:	
  3280                           ; 1 bytes @ 0x8
  3281                           
  3282  0028                     ___lmul@product:	
  3283                           ; 1 bytes @ 0x8
  3284                           
  3285                           
  3286                           ; 4 bytes @ 0x8
  3287  0028                     	ds	1
  3288  0029                     I2C_Transmit@pData:	
  3289  0029                     EEPROM_MultiWrite@pData:	
  3290                           ; 1 bytes @ 0x9
  3291                           
  3292  0029                     EEPROM_MultiRead@pData:	
  3293                           ; 1 bytes @ 0x9
  3294                           
  3295                           
  3296                           ; 1 bytes @ 0x9
  3297  0029                     	ds	1
  3298  002A                     I2C_Init@I2Cx:	
  3299  002A                     I2C_Transmit@size:	
  3300                           ; 1 bytes @ 0xA
  3301                           
  3302  002A                     EEPROM_MultiWrite@i:	
  3303                           ; 1 bytes @ 0xA
  3304                           
  3305  002A                     EEPROM_MultiRead@i:	
  3306                           ; 1 bytes @ 0xA
  3307                           
  3308                           
  3309                           ; 1 bytes @ 0xA
  3310  002A                     	ds	1
  3311  002B                     ??_I2C_Transmit:	
  3312  002B                     ??_Save_PMTConfig:	
  3313                           ; 1 bytes @ 0xB
  3314                           
  3315  002B                     ??_Load_PMTConfing:	
  3316                           ; 1 bytes @ 0xB
  3317                           
  3318                           
  3319                           ; 1 bytes @ 0xB
  3320  002B                     	ds	1
  3321  002C                     ?___lldiv:	
  3322  002C                     Save_PMTConfig@data:	
  3323                           ; 4 bytes @ 0xC
  3324                           
  3325  002C                     Load_PMTConfing@data:	
  3326                           ; 1 bytes @ 0xC
  3327                           
  3328  002C                     ___lldiv@divisor:	
  3329                           ; 1 bytes @ 0xC
  3330                           
  3331                           
  3332                           ; 4 bytes @ 0xC
  3333  002C                     	ds	2
  3334  002E                     I2C_Transmit@I2Cx:	
  3335                           
  3336                           ; 1 bytes @ 0xE
  3337  002E                     	ds	1
  3338  002F                     I2C_Transmit@result:	
  3339                           
  3340                           ; 1 bytes @ 0xF
  3341  002F                     	ds	1
  3342  0030                     ??_DAC_Initialize:	
  3343  0030                     ?_DAC_WriteVoltage:	
  3344                           ; 1 bytes @ 0x10
  3345                           
  3346  0030                     DAC_WriteVoltage@volue:	
  3347                           ; 1 bytes @ 0x10
  3348                           
  3349  0030                     ___lldiv@dividend:	
  3350                           ; 2 bytes @ 0x10
  3351                           
  3352                           
  3353                           ; 4 bytes @ 0x10
  3354  0030                     	ds	2
  3355  0032                     ??_DAC_WriteVoltage:	
  3356                           
  3357                           ; 1 bytes @ 0x12
  3358  0032                     	ds	2
  3359  0034                     ??___lldiv:	
  3360                           
  3361                           ; 1 bytes @ 0x14
  3362  0034                     	ds	1
  3363  0035                     ___lldiv@quotient:	
  3364                           
  3365                           ; 4 bytes @ 0x15
  3366  0035                     	ds	4
  3367  0039                     ___lldiv@counter:	
  3368                           
  3369                           ; 1 bytes @ 0x19
  3370  0039                     	ds	1
  3371  003A                     ?_Timer1_GetCPS:	
  3372  003A                     ?___llmod:	
  3373                           ; 4 bytes @ 0x1A
  3374                           
  3375  003A                     ___llmod@divisor:	
  3376                           ; 4 bytes @ 0x1A
  3377                           
  3378                           
  3379                           ; 4 bytes @ 0x1A
  3380  003A                     	ds	4
  3381  003E                     ??_Timer1_GetCPS:	
  3382  003E                     ?_Timer1_GetCPM:	
  3383                           ; 1 bytes @ 0x1E
  3384                           
  3385  003E                     ___llmod@dividend:	
  3386                           ; 4 bytes @ 0x1E
  3387                           
  3388                           
  3389                           ; 4 bytes @ 0x1E
  3390  003E                     	ds	4
  3391  0042                     ??_Timer1_GetCPM:	
  3392  0042                     ??___llmod:	
  3393                           ; 1 bytes @ 0x22
  3394                           
  3395  0042                     _Timer1_GetCPM$1189:	
  3396                           ; 1 bytes @ 0x22
  3397                           
  3398                           
  3399                           ; 4 bytes @ 0x22
  3400  0042                     	ds	1
  3401  0043                     ___llmod@counter:	
  3402                           
  3403                           ; 1 bytes @ 0x23
  3404  0043                     	ds	3
  3405  0046                     ?_printf:	
  3406  0046                     printf@f:	
  3407                           ; 2 bytes @ 0x26
  3408                           
  3409                           
  3410                           ; 2 bytes @ 0x26
  3411  0046                     	ds	10
  3412  0050                     ??_printf:	
  3413                           
  3414                           ; 1 bytes @ 0x30
  3415  0050                     	ds	6
  3416  0056                     printf@prec:	
  3417                           
  3418                           ; 2 bytes @ 0x36
  3419  0056                     	ds	2
  3420  0058                     printf@cp:	
  3421                           
  3422                           ; 2 bytes @ 0x38
  3423  0058                     	ds	2
  3424  005A                     printf@len:	
  3425                           
  3426                           ; 2 bytes @ 0x3A
  3427  005A                     	ds	2
  3428  005C                     printf@val:	
  3429                           
  3430                           ; 4 bytes @ 0x3C
  3431  005C                     	ds	4
  3432  0060                     printf@ap:	
  3433                           
  3434                           ; 1 bytes @ 0x40
  3435  0060                     	ds	1
  3436  0061                     printf@flag:	
  3437                           
  3438                           ; 1 bytes @ 0x41
  3439  0061                     	ds	1
  3440  0062                     printf@c:	
  3441                           
  3442                           ; 1 bytes @ 0x42
  3443  0062                     	ds	1
  3444  0063                     printf@width:	
  3445                           
  3446                           ; 2 bytes @ 0x43
  3447  0063                     	ds	2
  3448  0065                     ??_StartUp_Menu:	
  3449  0065                     ??_Ssetting_PMT_Config:	
  3450                           ; 1 bytes @ 0x45
  3451                           
  3452  0065                     ??_Show_PMT_Config:	
  3453                           ; 1 bytes @ 0x45
  3454                           
  3455                           
  3456                           ; 1 bytes @ 0x45
  3457  0065                     	ds	1
  3458  0066                     Ssetting_PMT_Config@data:	
  3459                           
  3460                           ; 1 bytes @ 0x46
  3461  0066                     	ds	1
  3462  0067                     StartUp_Menu@data:	
  3463  0067                     Show_PMT_Config@data:	
  3464                           ; 1 bytes @ 0x47
  3465                           
  3466                           
  3467                           ; 1 bytes @ 0x47
  3468  0067                     	ds	1
  3469  0068                     ??_main:	
  3470                           
  3471                           ; 1 bytes @ 0x48
  3472  0068                     	ds	4
  3473                           
  3474                           	psect	maintext
  3475  048E                     __pmaintext:	
  3476 ;;
  3477 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3478 ;;
  3479 ;; *************** function _main *****************
  3480 ;; Defined at:
  3481 ;;		line 17 in file "main.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;		None
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      char 
  3488 ;; Registers used:
  3489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : B1F/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3495 ;;      Params:         0       0       0       0       0       0
  3496 ;;      Locals:         0       0       0       0       0       0
  3497 ;;      Temps:          0       4       0       0       0       0
  3498 ;;      Totals:         0       4       0       0       0       0
  3499 ;;Total ram usage:        4 bytes
  3500 ;; Hardware stack levels required when called:    7
  3501 ;; This function calls:
  3502 ;;		_Basic_Init
  3503 ;;		_Buzzer_Init
  3504 ;;		_DAC_Initialize
  3505 ;;		_LCD_CursorPosition
  3506 ;;		_LCD_DisplayClear
  3507 ;;		_LCD_Init
  3508 ;;		_Show_PMT_Config
  3509 ;;		_Ssetting_PMT_Config
  3510 ;;		_StartUp_Menu
  3511 ;;		_Timer1_ClearRecord
  3512 ;;		_Timer1_GetCPM
  3513 ;;		_Timer1_GetCPS
  3514 ;;		_Timer1_GetCountSum
  3515 ;;		_Timer1_GetMinute
  3516 ;;		_Timer1_GetSecond
  3517 ;;		_Timer1_Init
  3518 ;;		_Timer1_StartCount
  3519 ;;		_Timer1_StopCount
  3520 ;;		_Timer6_Init
  3521 ;;		_mTouch_Check
  3522 ;;		_mTouch_Init
  3523 ;;		_printf
  3524 ;; This function is called by:
  3525 ;;		Startup code after reset
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           
  3530                           ;psect for function _main
  3531  048E                     _main:	
  3532                           
  3533                           ;main.c: 20: static STATE_OF_MODE state_mode = STOPPING;
  3534                           ;main.c: 21: static PMT_CONFIGURATION pmt_config;
  3535                           ;main.c: 23: Basic_Init();
  3536                           
  3537                           ;incstack = 0
  3538                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3539  048E  3189  218F  3184   	fcall	_Basic_Init
  3540                           
  3541                           ;main.c: 25: LATA6 = 1;
  3542  0491  0022               	movlb	2	; select bank2
  3543  0492  170C               	bsf	12,6	;volatile
  3544                           
  3545                           ;main.c: 27: Buzzer_Init();
  3546  0493  318B  232F  3184   	fcall	_Buzzer_Init
  3547                           
  3548                           ;main.c: 29: LCD_Init();
  3549  0496  3187  277D  3184   	fcall	_LCD_Init
  3550                           
  3551                           ;main.c: 31: Timer1_Init();
  3552  0499  318A  22E8  3184   	fcall	_Timer1_Init
  3553                           
  3554                           ;main.c: 32: Timer1_StopCount();
  3555  049C  3188  20E5  3184   	fcall	_Timer1_StopCount
  3556                           
  3557                           ;main.c: 34: mTouch_Init();
  3558  049F  3189  21C4  3184   	fcall	_mTouch_Init
  3559                           
  3560                           ;main.c: 36: Timer6_Init();
  3561  04A2  3189  21B1  3184   	fcall	_Timer6_Init
  3562                           
  3563                           ;main.c: 38: DAC_Initialize();
  3564  04A5  318A  22A7  3184   	fcall	_DAC_Initialize
  3565                           
  3566                           ;main.c: 40: StartUp_Menu(&pmt_config);
  3567  04A8  30C5               	movlw	(low (main@pmt_config| 0))& (0+255)
  3568  04A9  3186  26DB  3184   	fcall	_StartUp_Menu
  3569                           
  3570                           ;main.c: 43: {
  3571                           ;main.c: 44: switch(state_mode)
  3572                           
  3573                           ;main.c: 42: while(1)
  3574  04AC  2D16               	goto	l4384
  3575  04AD                     l4340:	
  3576                           ;main.c: 45: {
  3577                           ;main.c: 46: case COUNTING:
  3578                           
  3579                           
  3580                           ;main.c: 47: if(mTouch_Check(0x02))
  3581  04AD  3002               	movlw	2
  3582  04AE  318D  25E3  3184   	fcall	_mTouch_Check
  3583  04B1  3A00               	xorlw	0
  3584  04B2  1903               	skipnz
  3585  04B3  2D0B               	goto	l4414
  3586                           
  3587                           ;main.c: 48: {
  3588                           ;main.c: 49: Timer1_StopCount();
  3589  04B4  3188  20E5  3184   	fcall	_Timer1_StopCount
  3590  04B7  2CF6               	goto	l4372
  3591  04B8                     l4348:	
  3592                           ;main.c: 55: case STOPPING:
  3593                           
  3594                           ;main.c: 52: }
  3595                           ;main.c: 53: break;
  3596                           
  3597                           ;main.c: 51: state_mode = STOPPING;
  3598                           
  3599                           ;main.c: 50: LCD_DisplayClear();
  3600                           
  3601                           
  3602                           ;main.c: 56: if(mTouch_Check(0x00))
  3603  04B8  3000               	movlw	0
  3604  04B9  318D  25E3  3184   	fcall	_mTouch_Check
  3605  04BC  3A00               	xorlw	0
  3606  04BD  1903               	skipnz
  3607  04BE  2CC9               	goto	l4354
  3608                           
  3609                           ;main.c: 57: {
  3610                           ;main.c: 58: Timer1_StartCount();
  3611  04BF  3188  20E8  3184   	fcall	_Timer1_StartCount
  3612                           
  3613                           ;main.c: 59: LCD_DisplayClear();
  3614  04C2  3189  216F  3184   	fcall	_LCD_DisplayClear
  3615                           
  3616                           ;main.c: 60: state_mode = COUNTING;
  3617  04C5  0020               	movlb	0	; select bank0
  3618  04C6  01EC               	clrf	main@state_mode
  3619  04C7  0AEC               	incf	main@state_mode,f
  3620                           
  3621                           ;main.c: 61: }
  3622  04C8  2D0B               	goto	l4414
  3623  04C9                     l4354:	
  3624                           
  3625                           ;main.c: 62: else if(mTouch_Check(0x01))
  3626  04C9  3001               	movlw	1
  3627  04CA  318D  25E3  3184   	fcall	_mTouch_Check
  3628  04CD  3A00               	xorlw	0
  3629  04CE  1903               	skipnz
  3630  04CF  2CD4               	goto	l4358
  3631                           
  3632                           ;main.c: 63: {
  3633                           ;main.c: 64: Timer1_ClearRecord();
  3634  04D0  3187  27EC  3184   	fcall	_Timer1_ClearRecord
  3635                           
  3636                           ;main.c: 65: }
  3637  04D3  2D0B               	goto	l4414
  3638  04D4                     l4358:	
  3639                           
  3640                           ;main.c: 66: else if(mTouch_Check(0x02))
  3641  04D4  3002               	movlw	2
  3642  04D5  318D  25E3  3184   	fcall	_mTouch_Check
  3643  04D8  3A00               	xorlw	0
  3644  04D9  1903               	skipnz
  3645  04DA  2D0B               	goto	l4414
  3646                           
  3647                           ;main.c: 67: {
  3648                           ;main.c: 68: Timer1_StopCount();
  3649  04DB  3188  20E5  3184   	fcall	_Timer1_StopCount
  3650                           
  3651                           ;main.c: 69: LCD_DisplayClear();
  3652  04DE  3189  216F  3184   	fcall	_LCD_DisplayClear
  3653                           
  3654                           ;main.c: 70: state_mode = RESULT;
  3655  04E1  3002               	movlw	2
  3656  04E2  2D07               	goto	L2
  3657  04E3                     l4364:	
  3658                           ;main.c: 74: case RESULT:
  3659                           
  3660                           ;main.c: 71: }
  3661                           ;main.c: 72: break;
  3662                           
  3663                           
  3664                           ;main.c: 75: if(mTouch_Check(0x00))
  3665  04E3  3000               	movlw	0
  3666  04E4  318D  25E3  3184   	fcall	_mTouch_Check
  3667  04E7  3A00               	xorlw	0
  3668  04E8  1903               	skipnz
  3669  04E9  2CEF               	goto	l4370
  3670                           
  3671                           ;main.c: 76: {
  3672                           ;main.c: 77: LCD_DisplayClear();
  3673  04EA  3189  216F  3184   	fcall	_LCD_DisplayClear
  3674                           
  3675                           ;main.c: 78: state_mode = SETTING;
  3676  04ED  3003               	movlw	3
  3677  04EE  2D07               	goto	L2
  3678  04EF                     l4370:	
  3679                           ;main.c: 79: }
  3680                           
  3681                           
  3682                           ;main.c: 80: else if(mTouch_Check(0x02))
  3683  04EF  3002               	movlw	2
  3684  04F0  318D  25E3  3184   	fcall	_mTouch_Check
  3685  04F3  3A00               	xorlw	0
  3686  04F4  1903               	skipnz
  3687  04F5  2CFC               	goto	l4376
  3688  04F6                     l4372:	
  3689                           
  3690                           ;main.c: 81: {
  3691                           ;main.c: 82: LCD_DisplayClear();
  3692  04F6  3189  216F  3184   	fcall	_LCD_DisplayClear
  3693                           
  3694                           ;main.c: 83: state_mode = STOPPING;
  3695  04F9  0020               	movlb	0	; select bank0
  3696  04FA  01EC               	clrf	main@state_mode
  3697                           
  3698                           ;main.c: 84: }
  3699  04FB  2D0B               	goto	l4414
  3700  04FC                     l4376:	
  3701                           
  3702                           ;main.c: 85: else if(mTouch_Check(0x01))
  3703  04FC  3001               	movlw	1
  3704  04FD  318D  25E3  3184   	fcall	_mTouch_Check
  3705  0500  3A00               	xorlw	0
  3706  0501  1903               	skipnz
  3707  0502  2D0B               	goto	l4414
  3708                           
  3709                           ;main.c: 86: {
  3710                           ;main.c: 87: LCD_DisplayClear();
  3711  0503  3189  216F  3184   	fcall	_LCD_DisplayClear
  3712                           
  3713                           ;main.c: 88: state_mode = SHOW_CONFIG;
  3714  0506  3004               	movlw	4
  3715  0507                     L2:	
  3716  0507  0020               	movlb	0	; select bank0
  3717  0508  00E8               	movwf	??_main
  3718  0509  0868               	movf	??_main,w
  3719  050A  00EC               	movwf	main@state_mode
  3720  050B                     l4414:	
  3721                           ;main.c: 94: }
  3722                           
  3723                           ;main.c: 93: break;
  3724                           
  3725                           ;main.c: 92: default:
  3726                           
  3727                           ;main.c: 89: }
  3728                           ;main.c: 90: break;
  3729                           
  3730  050B  0020               	movlb	0	; select bank0
  3731  050C  086C               	movf	main@state_mode,w
  3732                           
  3733                           ; Switch size 1, requested type "space"
  3734                           ; Number of cases is 5, Range of values is 0 to 4
  3735                           ; switch strategies available:
  3736                           ; Name         Instructions Cycles
  3737                           ; direct_byte           16     6 (fixed)
  3738                           ; simple_byte           16     9 (average)
  3739                           ; jumptable            260     6 (fixed)
  3740                           ;	Chosen strategy is direct_byte
  3741  050D  0084               	movwf	4
  3742  050E  3005               	movlw	5
  3743  050F  0204               	subwf	4,w
  3744  0510  1803               	skipnc
  3745  0511  2D16               	goto	l4384
  3746  0512  3188               	movlp	high S4440
  3747  0513  3504               	lslf	4,w
  3748  0514  3E00               	addlw	low S4440
  3749  0515  0082               	movwf	2
  3750  0516                     l4384:	
  3751  0516  0020               	movlb	0	; select bank0
  3752  0517  086C               	movf	main@state_mode,w
  3753                           
  3754                           ; Switch size 1, requested type "space"
  3755                           ; Number of cases is 3, Range of values is 0 to 2
  3756                           ; switch strategies available:
  3757                           ; Name         Instructions Cycles
  3758                           ; simple_byte           10     6 (average)
  3759                           ; direct_byte           12     6 (fixed)
  3760                           ; jumptable            260     6 (fixed)
  3761                           ;	Chosen strategy is simple_byte
  3762  0518  3A00               	xorlw	0	; case 0
  3763  0519  1903               	skipnz
  3764  051A  2CB8               	goto	l4348
  3765  051B  3A01               	xorlw	1	; case 1
  3766  051C  1903               	skipnz
  3767  051D  2CAD               	goto	l4340
  3768  051E  3A03               	xorlw	3	; case 2
  3769  051F  1903               	skipnz
  3770  0520  2CE3               	goto	l4364
  3771  0521  2D0B               	goto	l4414
  3772                           
  3773                           ;main.c: 96: switch(state_mode)
  3774  0522  2D0B               	goto	l4414
  3775  0523                     l4386:	
  3776                           ;main.c: 97: {
  3777                           ;main.c: 98: case COUNTING:
  3778                           
  3779                           
  3780                           ;main.c: 99: LCD_CursorPosition(0,0);
  3781  0523  01A3               	clrf	LCD_CursorPosition@ty
  3782  0524  3000               	movlw	0
  3783  0525  3189  21EC  3184   	fcall	_LCD_CursorPosition
  3784                           
  3785                           ;main.c: 100: printf("  Countting...  ");
  3786  0528  3056               	movlw	low (STR_1| (0+32768))
  3787  0529  0020               	movlb	0	; select bank0
  3788  052A  00C6               	movwf	printf@f
  3789  052B  3083               	movlw	high (STR_1| (0+32768))
  3790  052C  00C7               	movwf	printf@f+1
  3791  052D  3180  205A  3184   	fcall	_printf
  3792                           
  3793                           ;main.c: 101: LCD_CursorPosition(0,1);
  3794  0530  0020               	movlb	0	; select bank0
  3795  0531  01A3               	clrf	LCD_CursorPosition@ty
  3796  0532  0AA3               	incf	LCD_CursorPosition@ty,f
  3797  0533  3000               	movlw	0
  3798  0534  3189  21EC  3184   	fcall	_LCD_CursorPosition
  3799                           
  3800                           ;main.c: 102: printf(" %7lu  %02d:%02d",Timer1_GetCountSum(),Timer1_GetMinute(),Timer1_G
      +                          etSecond());
  3801  0537  3067               	movlw	low (STR_2| (0+32768))
  3802  0538  0020               	movlb	0	; select bank0
  3803  0539  00C6               	movwf	printf@f
  3804  053A  3083               	movlw	high (STR_2| (0+32768))
  3805  053B  00C7               	movwf	printf@f+1
  3806  053C  3189  21A0  3184   	fcall	_Timer1_GetCountSum
  3807  053F  0020               	movlb	0	; select bank0
  3808  0540  0823               	movf	?_Timer1_GetCountSum+3,w
  3809  0541  00CB               	movwf	?_printf+5
  3810  0542  0822               	movf	?_Timer1_GetCountSum+2,w
  3811  0543  00CA               	movwf	?_printf+4
  3812  0544  0821               	movf	?_Timer1_GetCountSum+1,w
  3813  0545  00C9               	movwf	?_printf+3
  3814  0546  0820               	movf	?_Timer1_GetCountSum,w
  3815  0547  00C8               	movwf	?_printf+2
  3816  0548  3188  20DF  3184   	fcall	_Timer1_GetMinute
  3817  054B  0020               	movlb	0	; select bank0
  3818  054C  00E8               	movwf	??_main
  3819  054D  01E9               	clrf	??_main+1
  3820  054E  0868               	movf	??_main,w
  3821  054F  00CC               	movwf	?_printf+6
  3822  0550  0869               	movf	??_main+1,w
  3823  0551  00CD               	movwf	?_printf+7
  3824  0552  3188  20E2  3184   	fcall	_Timer1_GetSecond
  3825  0555  0020               	movlb	0	; select bank0
  3826  0556  00EA               	movwf	??_main+2
  3827  0557  01EB               	clrf	??_main+3
  3828  0558  086A               	movf	??_main+2,w
  3829  0559  00CE               	movwf	?_printf+8
  3830  055A  086B               	movf	??_main+3,w
  3831  055B  00CF               	movwf	?_printf+9
  3832  055C  3180  205A  3184   	fcall	_printf
  3833                           
  3834                           ;main.c: 103: break;
  3835  055F  2D16               	goto	l4384
  3836  0560                     l4392:	
  3837                           ;main.c: 105: case STOPPING:
  3838                           
  3839                           
  3840                           ;main.c: 106: LCD_CursorPosition(0,0);
  3841  0560  0020               	movlb	0	; select bank0
  3842  0561  01A3               	clrf	LCD_CursorPosition@ty
  3843  0562  3000               	movlw	0
  3844  0563  3189  21EC  3184   	fcall	_LCD_CursorPosition
  3845                           
  3846                           ;main.c: 107: printf(" Count Stopped ");
  3847  0566  3078               	movlw	low (STR_3| (0+32768))
  3848  0567  0020               	movlb	0	; select bank0
  3849  0568  00C6               	movwf	printf@f
  3850  0569  3083               	movlw	high (STR_3| (0+32768))
  3851  056A  00C7               	movwf	printf@f+1
  3852  056B  3180  205A  3184   	fcall	_printf
  3853                           
  3854                           ;main.c: 108: LCD_CursorPosition(0,1);
  3855  056E  0020               	movlb	0	; select bank0
  3856  056F  01A3               	clrf	LCD_CursorPosition@ty
  3857  0570  0AA3               	incf	LCD_CursorPosition@ty,f
  3858  0571  3000               	movlw	0
  3859  0572  3189  21EC  3184   	fcall	_LCD_CursorPosition
  3860                           
  3861                           ;main.c: 109: printf(" %7lu  %02d:%02d",Timer1_GetCountSum(),Timer1_GetMinute(),Timer1_G
      +                          etSecond());
  3862  0575  3067               	movlw	low (STR_2| (0+32768))
  3863  0576  0020               	movlb	0	; select bank0
  3864  0577  00C6               	movwf	printf@f
  3865  0578  3083               	movlw	high (STR_2| (0+32768))
  3866  0579  00C7               	movwf	printf@f+1
  3867  057A  3189  21A0  3184   	fcall	_Timer1_GetCountSum
  3868  057D  0020               	movlb	0	; select bank0
  3869  057E  0823               	movf	?_Timer1_GetCountSum+3,w
  3870  057F  00CB               	movwf	?_printf+5
  3871  0580  0822               	movf	?_Timer1_GetCountSum+2,w
  3872  0581  00CA               	movwf	?_printf+4
  3873  0582  0821               	movf	?_Timer1_GetCountSum+1,w
  3874  0583  00C9               	movwf	?_printf+3
  3875  0584  0820               	movf	?_Timer1_GetCountSum,w
  3876  0585  00C8               	movwf	?_printf+2
  3877  0586  3188  20DF  3184   	fcall	_Timer1_GetMinute
  3878  0589  0020               	movlb	0	; select bank0
  3879  058A  00E8               	movwf	??_main
  3880  058B  01E9               	clrf	??_main+1
  3881  058C  0868               	movf	??_main,w
  3882  058D  00CC               	movwf	?_printf+6
  3883  058E  0869               	movf	??_main+1,w
  3884  058F  00CD               	movwf	?_printf+7
  3885  0590  3188  20E2  3184   	fcall	_Timer1_GetSecond
  3886  0593  0020               	movlb	0	; select bank0
  3887  0594  00EA               	movwf	??_main+2
  3888  0595  01EB               	clrf	??_main+3
  3889  0596  086A               	movf	??_main+2,w
  3890  0597  00CE               	movwf	?_printf+8
  3891  0598  086B               	movf	??_main+3,w
  3892  0599  00CF               	movwf	?_printf+9
  3893  059A  3180  205A  3184   	fcall	_printf
  3894                           
  3895                           ;main.c: 110: break;
  3896  059D  2D16               	goto	l4384
  3897  059E                     l4398:	
  3898                           ;main.c: 112: case RESULT:
  3899                           
  3900                           
  3901                           ;main.c: 113: LCD_CursorPosition(0,0);
  3902  059E  0020               	movlb	0	; select bank0
  3903  059F  01A3               	clrf	LCD_CursorPosition@ty
  3904  05A0  3000               	movlw	0
  3905  05A1  3189  21EC  3184   	fcall	_LCD_CursorPosition
  3906                           
  3907                           ;main.c: 114: printf("%7lu %7lu",Timer1_GetCPS(),Timer1_GetCPM());
  3908  05A4  30B9               	movlw	low (STR_5| (0+32768))
  3909  05A5  0020               	movlb	0	; select bank0
  3910  05A6  00C6               	movwf	printf@f
  3911  05A7  3083               	movlw	high (STR_5| (0+32768))
  3912  05A8  00C7               	movwf	printf@f+1
  3913  05A9  318D  251F  3184   	fcall	_Timer1_GetCPS
  3914  05AC  0020               	movlb	0	; select bank0
  3915  05AD  083D               	movf	?_Timer1_GetCPS+3,w
  3916  05AE  00CB               	movwf	?_printf+5
  3917  05AF  083C               	movf	?_Timer1_GetCPS+2,w
  3918  05B0  00CA               	movwf	?_printf+4
  3919  05B1  083B               	movf	?_Timer1_GetCPS+1,w
  3920  05B2  00C9               	movwf	?_printf+3
  3921  05B3  083A               	movf	?_Timer1_GetCPS,w
  3922  05B4  00C8               	movwf	?_printf+2
  3923  05B5  318B  2357  3184   	fcall	_Timer1_GetCPM
  3924  05B8  0020               	movlb	0	; select bank0
  3925  05B9  0841               	movf	?_Timer1_GetCPM+3,w
  3926  05BA  00CF               	movwf	?_printf+9
  3927  05BB  0840               	movf	?_Timer1_GetCPM+2,w
  3928  05BC  00CE               	movwf	?_printf+8
  3929  05BD  083F               	movf	?_Timer1_GetCPM+1,w
  3930  05BE  00CD               	movwf	?_printf+7
  3931  05BF  083E               	movf	?_Timer1_GetCPM,w
  3932  05C0  00CC               	movwf	?_printf+6
  3933  05C1  3180  205A  3184   	fcall	_printf
  3934                           
  3935                           ;main.c: 115: LCD_CursorPosition(0,1);
  3936  05C4  0020               	movlb	0	; select bank0
  3937  05C5  01A3               	clrf	LCD_CursorPosition@ty
  3938  05C6  0AA3               	incf	LCD_CursorPosition@ty,f
  3939  05C7  3000               	movlw	0
  3940  05C8  3189  21EC  3184   	fcall	_LCD_CursorPosition
  3941                           
  3942                           ;main.c: 116: printf(" %7lu  %02d:%02d",Timer1_GetCountSum(),Timer1_GetMinute(),Timer1_G
      +                          etSecond());
  3943  05CB  3067               	movlw	low (STR_2| (0+32768))
  3944  05CC  0020               	movlb	0	; select bank0
  3945  05CD  00C6               	movwf	printf@f
  3946  05CE  3083               	movlw	high (STR_2| (0+32768))
  3947  05CF  00C7               	movwf	printf@f+1
  3948  05D0  3189  21A0  3184   	fcall	_Timer1_GetCountSum
  3949  05D3  0020               	movlb	0	; select bank0
  3950  05D4  0823               	movf	?_Timer1_GetCountSum+3,w
  3951  05D5  00CB               	movwf	?_printf+5
  3952  05D6  0822               	movf	?_Timer1_GetCountSum+2,w
  3953  05D7  00CA               	movwf	?_printf+4
  3954  05D8  0821               	movf	?_Timer1_GetCountSum+1,w
  3955  05D9  00C9               	movwf	?_printf+3
  3956  05DA  0820               	movf	?_Timer1_GetCountSum,w
  3957  05DB  00C8               	movwf	?_printf+2
  3958  05DC  3188  20DF  3184   	fcall	_Timer1_GetMinute
  3959  05DF  0020               	movlb	0	; select bank0
  3960  05E0  00E8               	movwf	??_main
  3961  05E1  01E9               	clrf	??_main+1
  3962  05E2  0868               	movf	??_main,w
  3963  05E3  00CC               	movwf	?_printf+6
  3964  05E4  0869               	movf	??_main+1,w
  3965  05E5  00CD               	movwf	?_printf+7
  3966  05E6  3188  20E2  3184   	fcall	_Timer1_GetSecond
  3967  05E9  0020               	movlb	0	; select bank0
  3968  05EA  00EA               	movwf	??_main+2
  3969  05EB  01EB               	clrf	??_main+3
  3970  05EC  086A               	movf	??_main+2,w
  3971  05ED  00CE               	movwf	?_printf+8
  3972  05EE  086B               	movf	??_main+3,w
  3973  05EF  00CF               	movwf	?_printf+9
  3974  05F0  3180  205A  3184   	fcall	_printf
  3975                           
  3976                           ;main.c: 117: break;
  3977  05F3  2D16               	goto	l4384
  3978  05F4                     l4404:	
  3979                           ;main.c: 119: case SETTING:
  3980                           
  3981                           
  3982                           ;main.c: 120: Ssetting_PMT_Config(&pmt_config);
  3983  05F4  30C5               	movlw	(low (main@pmt_config| 0))& (0+255)
  3984  05F5  3186  2603  3184   	fcall	_Ssetting_PMT_Config
  3985  05F8  2DFD               	goto	l4410
  3986  05F9                     l4408:	
  3987                           ;main.c: 124: case SHOW_CONFIG:
  3988                           
  3989                           ;main.c: 122: break;
  3990                           
  3991                           ;main.c: 121: state_mode = RESULT;
  3992                           
  3993                           
  3994                           ;main.c: 125: Show_PMT_Config(&pmt_config);
  3995  05F9  30C5               	movlw	(low (main@pmt_config| 0))& (0+255)
  3996  05FA  318E  26D5  3184   	fcall	_Show_PMT_Config
  3997  05FD                     l4410:	
  3998                           
  3999                           ;main.c: 126: state_mode = RESULT;
  4000  05FD  3002               	movlw	2
  4001  05FE  0020               	movlb	0	; select bank0
  4002  05FF  00E8               	movwf	??_main
  4003  0600  0868               	movf	??_main,w
  4004  0601  00EC               	movwf	main@state_mode
  4005                           
  4006                           ;main.c: 130: }
  4007                           
  4008                           ;main.c: 129: break;
  4009                           
  4010                           ;main.c: 128: default:
  4011                           
  4012                           ;main.c: 127: break;
  4013  0602  2D16               	goto	l4384
  4014  0603                     __end_of_main:	
  4015                           ;main.c: 131: }
  4016                           ;main.c: 132: return 0;
  4017                           ;	Return value of _main is never used
  4018                           
  4019                           
  4020                           	psect	swtext1
  4021  0800                     __pswtext1:	
  4022  0800                     S4440:	
  4023  0800  3185  2D60         	ljmp	l4392
  4024  0802  3185  2D23         	ljmp	l4386
  4025  0804  3185  2D9E         	ljmp	l4398
  4026  0806  3185  2DF4         	ljmp	l4404
  4027  0808  3185  2DF9         	ljmp	l4408
  4028                           
  4029                           	psect	text1
  4030  09C4                     __ptext1:	
  4031 ;; *************** function _mTouch_Init *****************
  4032 ;; Defined at:
  4033 ;;		line 19 in file "mTouch.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;		None
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg, status,2, status,0, pclath, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4047 ;;      Params:         0       0       0       0       0       0
  4048 ;;      Locals:         0       0       0       0       0       0
  4049 ;;      Temps:          0       1       0       0       0       0
  4050 ;;      Totals:         0       1       0       0       0       0
  4051 ;;Total ram usage:        1 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    4
  4054 ;; This function calls:
  4055 ;;		_mTouch_PortInit
  4056 ;; This function is called by:
  4057 ;;		_main
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           
  4062                           ;psect for function _mTouch_Init
  4063  09C4                     _mTouch_Init:	
  4064                           
  4065                           ;mTouch.c: 21: mTouch_PortInit();
  4066                           
  4067                           ;incstack = 0
  4068                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  4069  09C4  3189  2143         	fcall	_mTouch_PortInit
  4070                           
  4071                           ;mTouch.c: 24: OPTION_REG |= (0x0<<0);
  4072  09C6  0021               	movlb	1	; select bank1
  4073  09C7  0815               	movf	21,w	;volatile
  4074                           
  4075                           ;mTouch.c: 25: OPTION_REG |= (0x1<<3);
  4076  09C8  1595               	bsf	21,3	;volatile
  4077                           
  4078                           ;mTouch.c: 26: OPTION_REG |= (0x1<<5);
  4079  09C9  1695               	bsf	21,5	;volatile
  4080                           
  4081                           ;mTouch.c: 27: TMR0 = 0x00;
  4082  09CA  0020               	movlb	0	; select bank0
  4083  09CB  0195               	clrf	21	;volatile
  4084                           
  4085                           ;mTouch.c: 30: CPSCON0 |= (0x01<<0);
  4086  09CC  141E               	bsf	30,0	;volatile
  4087                           
  4088                           ;mTouch.c: 31: CPSCON0 |= (0x03<<2);
  4089  09CD  300C               	movlw	12
  4090  09CE  00A1               	movwf	??_mTouch_Init
  4091  09CF  0821               	movf	??_mTouch_Init,w
  4092  09D0  049E               	iorwf	30,f	;volatile
  4093                           
  4094                           ;mTouch.c: 32: CPSCON0 &= ~(0x01<<7);;
  4095  09D1  307F               	movlw	127
  4096  09D2  00A1               	movwf	??_mTouch_Init
  4097  09D3  0821               	movf	??_mTouch_Init,w
  4098  09D4  059E               	andwf	30,f	;volatile
  4099                           
  4100                           ;mTouch.c: 33: CPSCON1 = (uint8_t)0x00;
  4101  09D5  019F               	clrf	31	;volatile
  4102  09D6  0008               	return
  4103  09D7                     __end_of_mTouch_Init:	
  4104                           
  4105                           	psect	text2
  4106  0943                     __ptext2:	
  4107 ;; *************** function _mTouch_PortInit *****************
  4108 ;; Defined at:
  4109 ;;		line 13 in file "mTouch.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4123 ;;      Params:         0       0       0       0       0       0
  4124 ;;      Locals:         0       0       0       0       0       0
  4125 ;;      Temps:          0       1       0       0       0       0
  4126 ;;      Totals:         0       1       0       0       0       0
  4127 ;;Total ram usage:        1 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; Hardware stack levels required when called:    3
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_mTouch_Init
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           
  4138                           ;psect for function _mTouch_PortInit
  4139  0943                     _mTouch_PortInit:	
  4140                           
  4141                           ;mTouch.c: 15: TRISA |= (0x07);
  4142                           
  4143                           ;incstack = 0
  4144                           ; Regs used in _mTouch_PortInit: [wreg+status,2+status,0]
  4145  0943  3007               	movlw	7
  4146  0944  0020               	movlb	0	; select bank0
  4147  0945  00A0               	movwf	??_mTouch_PortInit
  4148  0946  0820               	movf	??_mTouch_PortInit,w
  4149  0947  0021               	movlb	1	; select bank1
  4150  0948  048C               	iorwf	12,f	;volatile
  4151                           
  4152                           ;mTouch.c: 16: ANSELA |= (0x07);
  4153  0949  3007               	movlw	7
  4154  094A  0020               	movlb	0	; select bank0
  4155  094B  00A0               	movwf	??_mTouch_PortInit
  4156  094C  0820               	movf	??_mTouch_PortInit,w
  4157  094D  0023               	movlb	3	; select bank3
  4158  094E  048C               	iorwf	12,f	;volatile
  4159  094F  0008               	return
  4160  0950                     __end_of_mTouch_PortInit:	
  4161                           
  4162                           	psect	text3
  4163  09B1                     __ptext3:	
  4164 ;; *************** function _Timer6_Init *****************
  4165 ;; Defined at:
  4166 ;;		line 3 in file "Timer6.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;		None
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;		None
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4180 ;;      Params:         0       0       0       0       0       0
  4181 ;;      Locals:         0       0       0       0       0       0
  4182 ;;      Temps:          0       1       0       0       0       0
  4183 ;;      Totals:         0       1       0       0       0       0
  4184 ;;Total ram usage:        1 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    3
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           
  4195                           ;psect for function _Timer6_Init
  4196  09B1                     _Timer6_Init:	
  4197                           
  4198                           ;Timer6.c: 5: PR6 = 0x7D;
  4199                           
  4200                           ;incstack = 0
  4201                           ; Regs used in _Timer6_Init: [wreg+status,2+status,0]
  4202  09B1  307D               	movlw	125
  4203  09B2  0028               	movlb	8	; select bank8
  4204  09B3  009D               	movwf	29	;volatile
  4205                           
  4206                           ;Timer6.c: 6: TMR6 = 0x00;
  4207  09B4  019C               	clrf	28	;volatile
  4208                           
  4209                           ;Timer6.c: 7: T6CON |= (0x03<<0);
  4210  09B5  3003               	movlw	3
  4211  09B6  0020               	movlb	0	; select bank0
  4212  09B7  00A0               	movwf	??_Timer6_Init
  4213  09B8  0820               	movf	??_Timer6_Init,w
  4214  09B9  0028               	movlb	8	; select bank8
  4215  09BA  049E               	iorwf	30,f	;volatile
  4216                           
  4217                           ;Timer6.c: 8: T6CON |= (0x00<<3);
  4218  09BB  081E               	movf	30,w	;volatile
  4219                           
  4220                           ;Timer6.c: 9: T6CON |= (0x01<<2);
  4221  09BC  151E               	bsf	30,2	;volatile
  4222                           
  4223                           ;Timer6.c: 11: TMR6IF = 0;
  4224  09BD  0020               	movlb	0	; select bank0
  4225  09BE  1193               	bcf	19,3	;volatile
  4226                           
  4227                           ;Timer6.c: 12: TMR6IE = 1;
  4228  09BF  0021               	movlb	1	; select bank1
  4229  09C0  1593               	bsf	19,3	;volatile
  4230                           
  4231                           ;Timer6.c: 13: PEIE = 1;
  4232  09C1  170B               	bsf	11,6	;volatile
  4233                           
  4234                           ;Timer6.c: 14: GIE = 1;
  4235  09C2  178B               	bsf	11,7	;volatile
  4236  09C3  0008               	return
  4237  09C4                     __end_of_Timer6_Init:	
  4238                           
  4239                           	psect	text4
  4240  08E5                     __ptext4:	
  4241 ;; *************** function _Timer1_StopCount *****************
  4242 ;; Defined at:
  4243 ;;		line 37 in file "Timer1.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		None
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4257 ;;      Params:         0       0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0
  4260 ;;      Totals:         0       0       0       0       0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    3
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_main
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _Timer1_StopCount
  4273  08E5                     _Timer1_StopCount:	
  4274                           
  4275                           ;Timer1.c: 39: TMR1ON = 0;
  4276                           
  4277                           ;incstack = 0
  4278                           ; Regs used in _Timer1_StopCount: []
  4279  08E5  0020               	movlb	0	; select bank0
  4280  08E6  1018               	bcf	24,0	;volatile
  4281  08E7  0008               	return
  4282  08E8                     __end_of_Timer1_StopCount:	
  4283                           
  4284                           	psect	text5
  4285  08E8                     __ptext5:	
  4286 ;; *************** function _Timer1_StartCount *****************
  4287 ;; Defined at:
  4288 ;;		line 31 in file "Timer1.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0, pclath, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4302 ;;      Params:         0       0       0       0       0       0
  4303 ;;      Locals:         0       0       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0
  4305 ;;      Totals:         0       0       0       0       0       0
  4306 ;;Total ram usage:        0 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    4
  4309 ;; This function calls:
  4310 ;;		_Timer1_ClearRecord
  4311 ;; This function is called by:
  4312 ;;		_main
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           
  4317                           ;psect for function _Timer1_StartCount
  4318  08E8                     _Timer1_StartCount:	
  4319                           
  4320                           ;Timer1.c: 33: Timer1_ClearRecord();
  4321                           
  4322                           ;incstack = 0
  4323                           ; Regs used in _Timer1_StartCount: [wreg+status,2+status,0+pclath+cstack]
  4324  08E8  3187  27EC         	fcall	_Timer1_ClearRecord
  4325                           
  4326                           ;Timer1.c: 34: TMR1ON = 1;
  4327  08EA  0020               	movlb	0	; select bank0
  4328  08EB  1418               	bsf	24,0	;volatile
  4329  08EC  0008               	return
  4330  08ED                     __end_of_Timer1_StartCount:	
  4331                           
  4332                           	psect	text6
  4333  07EC                     __ptext6:	
  4334 ;; *************** function _Timer1_ClearRecord *****************
  4335 ;; Defined at:
  4336 ;;		line 42 in file "Timer1.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4350 ;;      Params:         0       0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0
  4353 ;;      Totals:         0       0       0       0       0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    3
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_Timer1_StartCount
  4361 ;;		_main
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           
  4366                           ;psect for function _Timer1_ClearRecord
  4367  07EC                     _Timer1_ClearRecord:	
  4368                           
  4369                           ;Timer1.c: 44: cnts.SigmaDeltaCount= 0;
  4370                           
  4371                           ;incstack = 0
  4372                           ; Regs used in _Timer1_ClearRecord: [wreg+status,2]
  4373  07EC  3000               	movlw	0
  4374  07ED  0021               	movlb	1	; select bank1
  4375  07EE  00AB               	movwf	(_cnts+3)^(0+128)
  4376  07EF  3000               	movlw	0
  4377  07F0  00AA               	movwf	(_cnts+2)^(0+128)
  4378  07F1  3000               	movlw	0
  4379  07F2  00A9               	movwf	(_cnts+1)^(0+128)
  4380  07F3  3000               	movlw	0
  4381  07F4  00A8               	movwf	_cnts^(0+128)
  4382                           
  4383                           ;Timer1.c: 45: tcnt.Delta_t = 0;
  4384  07F5  3000               	movlw	0
  4385  07F6  00A5               	movwf	((_tcnt+3)^(0+128)+2)
  4386  07F7  3000               	movlw	0
  4387  07F8  00A4               	movwf	((_tcnt+2)^(0+128)+2)
  4388  07F9  3000               	movlw	0
  4389  07FA  00A3               	movwf	((_tcnt+1)^(0+128)+2)
  4390  07FB  3000               	movlw	0
  4391  07FC  00A2               	movwf	(_tcnt^(0+128)+2)
  4392                           
  4393                           ;Timer1.c: 46: tcnt.Second_t = 0;
  4394  07FD  01A0               	clrf	_tcnt^(0+128)
  4395                           
  4396                           ;Timer1.c: 47: tcnt.Minute_t = 0;
  4397  07FE  01A1               	clrf	(_tcnt^(0+128)+1)
  4398  07FF  0008               	return
  4399  0800                     __end_of_Timer1_ClearRecord:	
  4400                           
  4401                           	psect	text7
  4402  0AE8                     __ptext7:	
  4403 ;; *************** function _Timer1_Init *****************
  4404 ;; Defined at:
  4405 ;;		line 6 in file "Timer1.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;		None
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4419 ;;      Params:         0       0       0       0       0       0
  4420 ;;      Locals:         0       0       0       0       0       0
  4421 ;;      Temps:          0       1       0       0       0       0
  4422 ;;      Totals:         0       1       0       0       0       0
  4423 ;;Total ram usage:        1 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    3
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_main
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           
  4434                           ;psect for function _Timer1_Init
  4435  0AE8                     _Timer1_Init:	
  4436                           
  4437                           ;Timer1.c: 8: TRISB |= (1<<6);
  4438                           
  4439                           ;incstack = 0
  4440                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  4441  0AE8  0021               	movlb	1	; select bank1
  4442  0AE9  170D               	bsf	13,6	;volatile
  4443                           
  4444                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  4445  0AEA  30BF               	movlw	191
  4446  0AEB  0020               	movlb	0	; select bank0
  4447  0AEC  00A0               	movwf	??_Timer1_Init
  4448  0AED  0820               	movf	??_Timer1_Init,w
  4449  0AEE  0023               	movlb	3	; select bank3
  4450  0AEF  058D               	andwf	13,f	;volatile
  4451                           
  4452                           ;Timer1.c: 10: WPUB |= (1<<6);
  4453  0AF0  0024               	movlb	4	; select bank4
  4454  0AF1  170D               	bsf	13,6	;volatile
  4455                           
  4456                           ;Timer1.c: 12: T1CON |= (0x01<<2);
  4457  0AF2  0020               	movlb	0	; select bank0
  4458  0AF3  1518               	bsf	24,2	;volatile
  4459                           
  4460                           ;Timer1.c: 13: T1CON &= ~(0x01<<3);
  4461  0AF4  30F7               	movlw	247
  4462  0AF5  00A0               	movwf	??_Timer1_Init
  4463  0AF6  0820               	movf	??_Timer1_Init,w
  4464  0AF7  0598               	andwf	24,f	;volatile
  4465                           
  4466                           ;Timer1.c: 14: T1CON |= (0x00<<4);
  4467  0AF8  0818               	movf	24,w	;volatile
  4468                           
  4469                           ;Timer1.c: 15: T1CON |= (0x02<<6);
  4470  0AF9  1798               	bsf	24,7	;volatile
  4471                           
  4472                           ;Timer1.c: 17: T1GCON = 0x00;
  4473  0AFA  0199               	clrf	25	;volatile
  4474                           
  4475                           ;Timer1.c: 19: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL+1; TMR1ON = 1; };
  4476  0AFB  1018               	bcf	24,0	;volatile
  4477  0AFC  30FF               	movlw	255
  4478  0AFD  0097               	movwf	23	;volatile
  4479  0AFE  30F6               	movlw	246
  4480  0AFF  0096               	movwf	22	;volatile
  4481  0B00  1418               	bsf	24,0	;volatile
  4482                           
  4483                           ;Timer1.c: 21: TMR1IF = 0;
  4484  0B01  1011               	bcf	17,0	;volatile
  4485                           
  4486                           ;Timer1.c: 22: TMR1IE = 1;
  4487  0B02  0021               	movlb	1	; select bank1
  4488  0B03  1411               	bsf	17,0	;volatile
  4489                           
  4490                           ;Timer1.c: 23: PEIE = 1;
  4491  0B04  170B               	bsf	11,6	;volatile
  4492                           
  4493                           ;Timer1.c: 24: GIE = 1;
  4494  0B05  178B               	bsf	11,7	;volatile
  4495                           
  4496                           ;Timer1.c: 26: TMR1ON = 0;
  4497  0B06  0020               	movlb	0	; select bank0
  4498  0B07  1018               	bcf	24,0	;volatile
  4499  0B08  0008               	return
  4500  0B09                     __end_of_Timer1_Init:	
  4501                           
  4502                           	psect	text8
  4503  08E2                     __ptext8:	
  4504 ;; *************** function _Timer1_GetSecond *****************
  4505 ;; Defined at:
  4506 ;;		line 65 in file "Timer1.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      unsigned char 
  4513 ;; Registers used:
  4514 ;;		wreg
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4520 ;;      Params:         0       0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0
  4523 ;;      Totals:         0       0       0       0       0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    3
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_main
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           
  4535                           ;psect for function _Timer1_GetSecond
  4536  08E2                     _Timer1_GetSecond:	
  4537                           
  4538                           ;Timer1.c: 67: return tcnt.Second_t;
  4539                           
  4540                           ;incstack = 0
  4541                           ; Regs used in _Timer1_GetSecond: [wreg]
  4542  08E2  0021               	movlb	1	; select bank1
  4543  08E3  0820               	movf	_tcnt^(0+128),w
  4544  08E4  0008               	return
  4545  08E5                     __end_of_Timer1_GetSecond:	
  4546                           
  4547                           	psect	text9
  4548  08DF                     __ptext9:	
  4549 ;; *************** function _Timer1_GetMinute *****************
  4550 ;; Defined at:
  4551 ;;		line 70 in file "Timer1.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      unsigned char 
  4558 ;; Registers used:
  4559 ;;		wreg
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4565 ;;      Params:         0       0       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0
  4568 ;;      Totals:         0       0       0       0       0       0
  4569 ;;Total ram usage:        0 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    3
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_main
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           
  4580                           ;psect for function _Timer1_GetMinute
  4581  08DF                     _Timer1_GetMinute:	
  4582                           
  4583                           ;Timer1.c: 72: return tcnt.Minute_t;
  4584                           
  4585                           ;incstack = 0
  4586                           ; Regs used in _Timer1_GetMinute: [wreg]
  4587  08DF  0021               	movlb	1	; select bank1
  4588  08E0  0821               	movf	(_tcnt^(0+128)+1),w
  4589  08E1  0008               	return
  4590  08E2                     __end_of_Timer1_GetMinute:	
  4591                           
  4592                           	psect	text10
  4593  09A0                     __ptext10:	
  4594 ;; *************** function _Timer1_GetCountSum *****************
  4595 ;; Defined at:
  4596 ;;		line 50 in file "Timer1.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  4    0[BANK0 ] unsigned long 
  4603 ;; Registers used:
  4604 ;;		wreg
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4610 ;;      Params:         0       4       0       0       0       0
  4611 ;;      Locals:         0       0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0
  4613 ;;      Totals:         0       4       0       0       0       0
  4614 ;;Total ram usage:        4 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    3
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_main
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           
  4625                           ;psect for function _Timer1_GetCountSum
  4626  09A0                     _Timer1_GetCountSum:	
  4627                           
  4628                           ;Timer1.c: 52: return cnts.SigmaDeltaCount;
  4629                           
  4630                           ;incstack = 0
  4631                           ; Regs used in _Timer1_GetCountSum: [wreg]
  4632  09A0  0021               	movlb	1	; select bank1
  4633  09A1  082B               	movf	(_cnts+3)^(0+128),w
  4634  09A2  0020               	movlb	0	; select bank0
  4635  09A3  00A3               	movwf	?_Timer1_GetCountSum+3
  4636  09A4  0021               	movlb	1	; select bank1
  4637  09A5  082A               	movf	(_cnts+2)^(0+128),w
  4638  09A6  0020               	movlb	0	; select bank0
  4639  09A7  00A2               	movwf	?_Timer1_GetCountSum+2
  4640  09A8  0021               	movlb	1	; select bank1
  4641  09A9  0829               	movf	(_cnts+1)^(0+128),w
  4642  09AA  0020               	movlb	0	; select bank0
  4643  09AB  00A1               	movwf	?_Timer1_GetCountSum+1
  4644  09AC  0021               	movlb	1	; select bank1
  4645  09AD  0828               	movf	_cnts^(0+128),w
  4646  09AE  0020               	movlb	0	; select bank0
  4647  09AF  00A0               	movwf	?_Timer1_GetCountSum
  4648  09B0  0008               	return
  4649  09B1                     __end_of_Timer1_GetCountSum:	
  4650                           
  4651                           	psect	text11
  4652  0B57                     __ptext11:	
  4653 ;; *************** function _Timer1_GetCPM *****************
  4654 ;; Defined at:
  4655 ;;		line 60 in file "Timer1.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  4   30[BANK0 ] unsigned long 
  4662 ;; Registers used:
  4663 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4669 ;;      Params:         0       4       0       0       0       0
  4670 ;;      Locals:         0       4       0       0       0       0
  4671 ;;      Temps:          0       0       0       0       0       0
  4672 ;;      Totals:         0       8       0       0       0       0
  4673 ;;Total ram usage:        8 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    5
  4676 ;; This function calls:
  4677 ;;		_Timer1_GetCPS
  4678 ;;		___lmul
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           
  4685                           ;psect for function _Timer1_GetCPM
  4686  0B57                     _Timer1_GetCPM:	
  4687                           
  4688                           ;Timer1.c: 62: return (uint32_t)(Timer1_GetCPS()*60);
  4689                           
  4690                           ;incstack = 0
  4691                           ; Regs used in _Timer1_GetCPM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4692  0B57  318D  251F  318B   	fcall	_Timer1_GetCPS
  4693  0B5A  0020               	movlb	0	; select bank0
  4694  0B5B  083D               	movf	?_Timer1_GetCPS+3,w
  4695  0B5C  00C5               	movwf	_Timer1_GetCPM$1189+3
  4696  0B5D  083C               	movf	?_Timer1_GetCPS+2,w
  4697  0B5E  00C4               	movwf	_Timer1_GetCPM$1189+2
  4698  0B5F  083B               	movf	?_Timer1_GetCPS+1,w
  4699  0B60  00C3               	movwf	_Timer1_GetCPM$1189+1
  4700  0B61  083A               	movf	?_Timer1_GetCPS,w
  4701  0B62  00C2               	movwf	_Timer1_GetCPM$1189
  4702                           
  4703                           ;Timer1.c: 62: return (uint32_t)(Timer1_GetCPS()*60);
  4704  0B63  0845               	movf	_Timer1_GetCPM$1189+3,w
  4705  0B64  00A3               	movwf	___lmul@multiplier+3
  4706  0B65  0844               	movf	_Timer1_GetCPM$1189+2,w
  4707  0B66  00A2               	movwf	___lmul@multiplier+2
  4708  0B67  0843               	movf	_Timer1_GetCPM$1189+1,w
  4709  0B68  00A1               	movwf	___lmul@multiplier+1
  4710  0B69  0842               	movf	_Timer1_GetCPM$1189,w
  4711  0B6A  00A0               	movwf	___lmul@multiplier
  4712  0B6B  3000               	movlw	0
  4713  0B6C  00A7               	movwf	___lmul@multiplicand+3
  4714  0B6D  3000               	movlw	0
  4715  0B6E  00A6               	movwf	___lmul@multiplicand+2
  4716  0B6F  3000               	movlw	0
  4717  0B70  00A5               	movwf	___lmul@multiplicand+1
  4718  0B71  303C               	movlw	60
  4719  0B72  00A4               	movwf	___lmul@multiplicand
  4720  0B73  318C  240A         	fcall	___lmul
  4721  0B75  0020               	movlb	0	; select bank0
  4722  0B76  0823               	movf	?___lmul+3,w
  4723  0B77  00C1               	movwf	?_Timer1_GetCPM+3
  4724  0B78  0822               	movf	?___lmul+2,w
  4725  0B79  00C0               	movwf	?_Timer1_GetCPM+2
  4726  0B7A  0821               	movf	?___lmul+1,w
  4727  0B7B  00BF               	movwf	?_Timer1_GetCPM+1
  4728  0B7C  0820               	movf	?___lmul,w
  4729  0B7D  00BE               	movwf	?_Timer1_GetCPM
  4730  0B7E  0008               	return
  4731  0B7F                     __end_of_Timer1_GetCPM:	
  4732                           
  4733                           	psect	text12
  4734  0D1F                     __ptext12:	
  4735 ;; *************** function _Timer1_GetCPS *****************
  4736 ;; Defined at:
  4737 ;;		line 55 in file "Timer1.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  4   26[BANK0 ] unsigned long 
  4744 ;; Registers used:
  4745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4751 ;;      Params:         0       4       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0
  4754 ;;      Totals:         0       4       0       0       0       0
  4755 ;;Total ram usage:        4 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    4
  4758 ;; This function calls:
  4759 ;;		___lldiv
  4760 ;;		___lmul
  4761 ;; This function is called by:
  4762 ;;		_Timer1_GetCPM
  4763 ;;		_main
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           
  4768                           ;psect for function _Timer1_GetCPS
  4769  0D1F                     _Timer1_GetCPS:	
  4770                           
  4771                           ;Timer1.c: 57: return (uint32_t)((cnts.SigmaDeltaCount * 1000UL)/tcnt.Delta_t);
  4772                           
  4773                           ;incstack = 0
  4774                           ; Regs used in _Timer1_GetCPS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4775  0D1F  3002               	movlw	2
  4776  0D20  3EA0               	addlw	(low (_tcnt| 0))& (0+255)
  4777  0D21  0086               	movwf	6
  4778  0D22  0187               	clrf	7
  4779  0D23  3F40               	moviw [0]fsr1
  4780  0D24  0020               	movlb	0	; select bank0
  4781  0D25  00AC               	movwf	___lldiv@divisor
  4782  0D26  3F41               	moviw [1]fsr1
  4783  0D27  00AD               	movwf	___lldiv@divisor+1
  4784  0D28  3F42               	moviw [2]fsr1
  4785  0D29  00AE               	movwf	___lldiv@divisor+2
  4786  0D2A  3F43               	moviw [3]fsr1
  4787  0D2B  00AF               	movwf	___lldiv@divisor+3
  4788  0D2C  0021               	movlb	1	; select bank1
  4789  0D2D  082B               	movf	(_cnts+3)^(0+128),w
  4790  0D2E  0020               	movlb	0	; select bank0
  4791  0D2F  00A3               	movwf	___lmul@multiplier+3
  4792  0D30  0021               	movlb	1	; select bank1
  4793  0D31  082A               	movf	(_cnts+2)^(0+128),w
  4794  0D32  0020               	movlb	0	; select bank0
  4795  0D33  00A2               	movwf	___lmul@multiplier+2
  4796  0D34  0021               	movlb	1	; select bank1
  4797  0D35  0829               	movf	(_cnts+1)^(0+128),w
  4798  0D36  0020               	movlb	0	; select bank0
  4799  0D37  00A1               	movwf	___lmul@multiplier+1
  4800  0D38  0021               	movlb	1	; select bank1
  4801  0D39  0828               	movf	_cnts^(0+128),w
  4802  0D3A  0020               	movlb	0	; select bank0
  4803  0D3B  00A0               	movwf	___lmul@multiplier
  4804  0D3C  3000               	movlw	0
  4805  0D3D  00A7               	movwf	___lmul@multiplicand+3
  4806  0D3E  3000               	movlw	0
  4807  0D3F  00A6               	movwf	___lmul@multiplicand+2
  4808  0D40  3003               	movlw	3
  4809  0D41  00A5               	movwf	___lmul@multiplicand+1
  4810  0D42  30E8               	movlw	232
  4811  0D43  00A4               	movwf	___lmul@multiplicand
  4812  0D44  318C  240A  318D   	fcall	___lmul
  4813  0D47  0020               	movlb	0	; select bank0
  4814  0D48  0823               	movf	?___lmul+3,w
  4815  0D49  00B3               	movwf	___lldiv@dividend+3
  4816  0D4A  0822               	movf	?___lmul+2,w
  4817  0D4B  00B2               	movwf	___lldiv@dividend+2
  4818  0D4C  0821               	movf	?___lmul+1,w
  4819  0D4D  00B1               	movwf	___lldiv@dividend+1
  4820  0D4E  0820               	movf	?___lmul,w
  4821  0D4F  00B0               	movwf	___lldiv@dividend
  4822  0D50  318E  262E         	fcall	___lldiv
  4823  0D52  0020               	movlb	0	; select bank0
  4824  0D53  082F               	movf	?___lldiv+3,w
  4825  0D54  00BD               	movwf	?_Timer1_GetCPS+3
  4826  0D55  082E               	movf	?___lldiv+2,w
  4827  0D56  00BC               	movwf	?_Timer1_GetCPS+2
  4828  0D57  082D               	movf	?___lldiv+1,w
  4829  0D58  00BB               	movwf	?_Timer1_GetCPS+1
  4830  0D59  082C               	movf	?___lldiv,w
  4831  0D5A  00BA               	movwf	?_Timer1_GetCPS
  4832  0D5B  0008               	return
  4833  0D5C                     __end_of_Timer1_GetCPS:	
  4834                           
  4835                           	psect	text13
  4836  0C0A                     __ptext13:	
  4837 ;; *************** function ___lmul *****************
  4838 ;; Defined at:
  4839 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul32.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4842 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  product         4    8[BANK0 ] unsigned long 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  4    0[BANK0 ] unsigned long 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4854 ;;      Params:         0       8       0       0       0       0
  4855 ;;      Locals:         0       4       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0
  4857 ;;      Totals:         0      12       0       0       0       0
  4858 ;;Total ram usage:       12 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    3
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_Timer1_GetCPS
  4865 ;;		_Timer1_GetCPM
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           
  4870                           ;psect for function ___lmul
  4871  0C0A                     ___lmul:	
  4872                           
  4873                           ;incstack = 0
  4874                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4875  0C0A  3000               	movlw	0
  4876  0C0B  0020               	movlb	0	; select bank0
  4877  0C0C  00AB               	movwf	___lmul@product+3
  4878  0C0D  3000               	movlw	0
  4879  0C0E  00AA               	movwf	___lmul@product+2
  4880  0C0F  3000               	movlw	0
  4881  0C10  00A9               	movwf	___lmul@product+1
  4882  0C11  3000               	movlw	0
  4883  0C12  00A8               	movwf	___lmul@product
  4884  0C13                     l3718:	
  4885  0C13  1C20               	btfss	___lmul@multiplier,0
  4886  0C14  2C1D               	goto	l3722
  4887  0C15  0824               	movf	___lmul@multiplicand,w
  4888  0C16  07A8               	addwf	___lmul@product,f
  4889  0C17  0825               	movf	___lmul@multiplicand+1,w
  4890  0C18  3DA9               	addwfc	___lmul@product+1,f
  4891  0C19  0826               	movf	___lmul@multiplicand+2,w
  4892  0C1A  3DAA               	addwfc	___lmul@product+2,f
  4893  0C1B  0827               	movf	___lmul@multiplicand+3,w
  4894  0C1C  3DAB               	addwfc	___lmul@product+3,f
  4895  0C1D                     l3722:	
  4896  0C1D  3001               	movlw	1
  4897  0C1E                     u3295:	
  4898  0C1E  35A4               	lslf	___lmul@multiplicand,f
  4899  0C1F  0DA5               	rlf	___lmul@multiplicand+1,f
  4900  0C20  0DA6               	rlf	___lmul@multiplicand+2,f
  4901  0C21  0DA7               	rlf	___lmul@multiplicand+3,f
  4902  0C22  0B89               	decfsz	9,f
  4903  0C23  2C1E               	goto	u3295
  4904  0C24  3001               	movlw	1
  4905  0C25                     u3305:	
  4906  0C25  36A3               	lsrf	___lmul@multiplier+3,f
  4907  0C26  0CA2               	rrf	___lmul@multiplier+2,f
  4908  0C27  0CA1               	rrf	___lmul@multiplier+1,f
  4909  0C28  0CA0               	rrf	___lmul@multiplier,f
  4910  0C29  0B89               	decfsz	9,f
  4911  0C2A  2C25               	goto	u3305
  4912  0C2B  0823               	movf	___lmul@multiplier+3,w
  4913  0C2C  0422               	iorwf	___lmul@multiplier+2,w
  4914  0C2D  0421               	iorwf	___lmul@multiplier+1,w
  4915  0C2E  0420               	iorwf	___lmul@multiplier,w
  4916  0C2F  1D03               	skipz
  4917  0C30  2C13               	goto	l3718
  4918  0C31  082B               	movf	___lmul@product+3,w
  4919  0C32  00A3               	movwf	?___lmul+3
  4920  0C33  082A               	movf	___lmul@product+2,w
  4921  0C34  00A2               	movwf	?___lmul+2
  4922  0C35  0829               	movf	___lmul@product+1,w
  4923  0C36  00A1               	movwf	?___lmul+1
  4924  0C37  0828               	movf	___lmul@product,w
  4925  0C38  00A0               	movwf	?___lmul
  4926  0C39  0008               	return
  4927  0C3A                     __end_of___lmul:	
  4928                           
  4929                           	psect	text14
  4930  06DB                     __ptext14:	
  4931 ;; *************** function _StartUp_Menu *****************
  4932 ;; Defined at:
  4933 ;;		line 17 in file "User_Interface.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  data            1    wreg     PTR struct .
  4936 ;;		 -> main@pmt_config(3), 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  data            1   71[BANK0 ] PTR struct .
  4939 ;;		 -> main@pmt_config(3), 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4949 ;;      Params:         0       0       0       0       0       0
  4950 ;;      Locals:         0       1       0       0       0       0
  4951 ;;      Temps:          0       2       0       0       0       0
  4952 ;;      Totals:         0       3       0       0       0       0
  4953 ;;Total ram usage:        3 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    6
  4956 ;; This function calls:
  4957 ;;		_DAC_WriteVoltage
  4958 ;;		_LCD_CursorHome
  4959 ;;		_LCD_CursorPosition
  4960 ;;		_LCD_DisplayClear
  4961 ;;		_Load_PMTConfing
  4962 ;;		_printf
  4963 ;; This function is called by:
  4964 ;;		_main
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           
  4969                           ;psect for function _StartUp_Menu
  4970  06DB                     _StartUp_Menu:	
  4971                           
  4972                           ;incstack = 0
  4973                           ; Regs used in _StartUp_Menu: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4974                           ;StartUp_Menu@data stored from wreg
  4975  06DB  0020               	movlb	0	; select bank0
  4976  06DC  00E7               	movwf	StartUp_Menu@data
  4977                           
  4978                           ;User_Interface.c: 19: Load_PMTConfing(data);
  4979  06DD  0867               	movf	StartUp_Menu@data,w
  4980  06DE  3189  212B  3186   	fcall	_Load_PMTConfing
  4981                           
  4982                           ;User_Interface.c: 20: DAC_WriteVoltage(DAC_DataTable[data->GainElements]);
  4983  06E1  0020               	movlb	0	; select bank0
  4984  06E2  0A67               	incf	StartUp_Menu@data,w
  4985  06E3  0086               	movwf	6
  4986  06E4  0187               	clrf	7
  4987  06E5  3501               	lslf	1,w
  4988  06E6  3E3E               	addlw	(low (_DAC_DataTable| (0+256)))& (0+255)
  4989  06E7  0086               	movwf	6
  4990  06E8  3001               	movlw	1	; select bank2/3
  4991  06E9  0087               	movwf	7
  4992  06EA  3F40               	moviw [0]fsr1
  4993  06EB  00B0               	movwf	DAC_WriteVoltage@volue
  4994  06EC  3F41               	moviw [1]fsr1
  4995  06ED  00B1               	movwf	DAC_WriteVoltage@volue+1
  4996  06EE  318B  23AB  3186   	fcall	_DAC_WriteVoltage
  4997                           
  4998                           ;User_Interface.c: 22: LCD_CursorHome();
  4999  06F1  3189  217F  3186   	fcall	_LCD_CursorHome
  5000                           
  5001                           ;User_Interface.c: 23: printf(" Geiger Counter ");
  5002  06F4  3001               	movlw	low (STR_37| (0+32768))
  5003  06F5  0020               	movlb	0	; select bank0
  5004  06F6  00C6               	movwf	printf@f
  5005  06F7  3083               	movlw	high (STR_37| (0+32768))
  5006  06F8  00C7               	movwf	printf@f+1
  5007  06F9  3180  205A  3186   	fcall	_printf
  5008                           
  5009                           ;User_Interface.c: 24: LCD_CursorPosition(0,1);
  5010  06FC  0020               	movlb	0	; select bank0
  5011  06FD  01A3               	clrf	LCD_CursorPosition@ty
  5012  06FE  0AA3               	incf	LCD_CursorPosition@ty,f
  5013  06FF  3000               	movlw	0
  5014  0700  3189  21EC  3186   	fcall	_LCD_CursorPosition
  5015                           
  5016                           ;User_Interface.c: 25: printf("    with PIC    ");
  5017  0703  30BD               	movlw	low (STR_38| (0+32768))
  5018  0704  0020               	movlb	0	; select bank0
  5019  0705  00C6               	movwf	printf@f
  5020  0706  3082               	movlw	high (STR_38| (0+32768))
  5021  0707  00C7               	movwf	printf@f+1
  5022  0708  3180  205A  3186   	fcall	_printf
  5023                           
  5024                           ;User_Interface.c: 26: _delay((unsigned long)((2000)*(32000000/4000.0)));
  5025  070B  3052               	movlw	82
  5026  070C  0020               	movlb	0	; select bank0
  5027  070D  00E6               	movwf	??_StartUp_Menu+1
  5028  070E  302B               	movlw	43
  5029  070F  00E5               	movwf	??_StartUp_Menu
  5030  0710  3000               	movlw	0
  5031  0711                     u4077:	
  5032  0711  0B89               	decfsz	9,f
  5033  0712  2F11               	goto	u4077
  5034  0713  0BE5               	decfsz	??_StartUp_Menu,f
  5035  0714  2F11               	goto	u4077
  5036  0715  0BE6               	decfsz	??_StartUp_Menu+1,f
  5037  0716  2F11               	goto	u4077
  5038  0717  0000               	nop
  5039                           
  5040                           ;User_Interface.c: 28: LCD_DisplayClear();
  5041  0718  3189  216F  3186   	fcall	_LCD_DisplayClear
  5042                           
  5043                           ;User_Interface.c: 30: LCD_CursorHome();
  5044  071B  3189  217F  3186   	fcall	_LCD_CursorHome
  5045                           
  5046                           ;User_Interface.c: 31: printf("SotWare ver%s","1.00");
  5047  071E  3088               	movlw	low (STR_39| (0+32768))
  5048  071F  0020               	movlb	0	; select bank0
  5049  0720  00C6               	movwf	printf@f
  5050  0721  3083               	movlw	high (STR_39| (0+32768))
  5051  0722  00C7               	movwf	printf@f+1
  5052  0723  3066               	movlw	low (STR_40| (0+32768))
  5053  0724  00C8               	movwf	low ((?_printf| 0+2))
  5054  0725  3084               	movlw	high (STR_40| (0+32768))
  5055  0726  00C9               	movwf	(low ((?_printf| 0+2))+1)
  5056  0727  3180  205A  3186   	fcall	_printf
  5057                           
  5058                           ;User_Interface.c: 32: LCD_CursorPosition(0,1);
  5059  072A  0020               	movlb	0	; select bank0
  5060  072B  01A3               	clrf	LCD_CursorPosition@ty
  5061  072C  0AA3               	incf	LCD_CursorPosition@ty,f
  5062  072D  3000               	movlw	0
  5063  072E  3189  21EC  3186   	fcall	_LCD_CursorPosition
  5064                           
  5065                           ;User_Interface.c: 33: printf("   Ser.No.%0003d   ",data->SerialNum);
  5066  0731  30A9               	movlw	low (STR_41| (0+32768))
  5067  0732  0020               	movlb	0	; select bank0
  5068  0733  00C6               	movwf	printf@f
  5069  0734  3082               	movlw	high (STR_41| (0+32768))
  5070  0735  00C7               	movwf	printf@f+1
  5071  0736  0867               	movf	StartUp_Menu@data,w
  5072  0737  0086               	movwf	6
  5073  0738  0187               	clrf	7
  5074  0739  0801               	movf	1,w
  5075  073A  00E5               	movwf	??_StartUp_Menu
  5076  073B  01E6               	clrf	??_StartUp_Menu+1
  5077  073C  0865               	movf	??_StartUp_Menu,w
  5078  073D  00C8               	movwf	?_printf+2
  5079  073E  0866               	movf	??_StartUp_Menu+1,w
  5080  073F  00C9               	movwf	?_printf+3
  5081  0740  3180  205A  3186   	fcall	_printf
  5082                           
  5083                           ;User_Interface.c: 34: _delay((unsigned long)((2000)*(32000000/4000.0)));
  5084  0743  3052               	movlw	82
  5085  0744  0020               	movlb	0	; select bank0
  5086  0745  00E6               	movwf	??_StartUp_Menu+1
  5087  0746  302B               	movlw	43
  5088  0747  00E5               	movwf	??_StartUp_Menu
  5089  0748  3000               	movlw	0
  5090  0749                     u4087:	
  5091  0749  0B89               	decfsz	9,f
  5092  074A  2F49               	goto	u4087
  5093  074B  0BE5               	decfsz	??_StartUp_Menu,f
  5094  074C  2F49               	goto	u4087
  5095  074D  0BE6               	decfsz	??_StartUp_Menu+1,f
  5096  074E  2F49               	goto	u4087
  5097  074F  0000               	nop
  5098                           
  5099                           ;User_Interface.c: 36: LCD_DisplayClear();
  5100  0750  3189  216F  3186   	fcall	_LCD_DisplayClear
  5101                           
  5102                           ;User_Interface.c: 38: LCD_CursorHome();
  5103  0753  3189  217F  3186   	fcall	_LCD_CursorHome
  5104                           
  5105                           ;User_Interface.c: 39: printf("Created By");
  5106  0756  30AE               	movlw	low (STR_42| (0+32768))
  5107  0757  0020               	movlb	0	; select bank0
  5108  0758  00C6               	movwf	printf@f
  5109  0759  3083               	movlw	high (STR_42| (0+32768))
  5110  075A  00C7               	movwf	printf@f+1
  5111  075B  3180  205A  3186   	fcall	_printf
  5112                           
  5113                           ;User_Interface.c: 40: LCD_CursorPosition(0,1);
  5114  075E  0020               	movlb	0	; select bank0
  5115  075F  01A3               	clrf	LCD_CursorPosition@ty
  5116  0760  0AA3               	incf	LCD_CursorPosition@ty,f
  5117  0761  3000               	movlw	0
  5118  0762  3189  21EC  3186   	fcall	_LCD_CursorPosition
  5119                           
  5120                           ;User_Interface.c: 41: printf("  Ryo Wakabayshi");
  5121  0765  3045               	movlw	low (STR_43| (0+32768))
  5122  0766  0020               	movlb	0	; select bank0
  5123  0767  00C6               	movwf	printf@f
  5124  0768  3083               	movlw	high (STR_43| (0+32768))
  5125  0769  00C7               	movwf	printf@f+1
  5126  076A  3180  205A  3186   	fcall	_printf
  5127                           
  5128                           ;User_Interface.c: 42: _delay((unsigned long)((2000)*(32000000/4000.0)));
  5129  076D  3052               	movlw	82
  5130  076E  0020               	movlb	0	; select bank0
  5131  076F  00E6               	movwf	??_StartUp_Menu+1
  5132  0770  302B               	movlw	43
  5133  0771  00E5               	movwf	??_StartUp_Menu
  5134  0772  3000               	movlw	0
  5135  0773                     u4097:	
  5136  0773  0B89               	decfsz	9,f
  5137  0774  2F73               	goto	u4097
  5138  0775  0BE5               	decfsz	??_StartUp_Menu,f
  5139  0776  2F73               	goto	u4097
  5140  0777  0BE6               	decfsz	??_StartUp_Menu+1,f
  5141  0778  2F73               	goto	u4097
  5142  0779  0000               	nop
  5143                           
  5144                           ;User_Interface.c: 44: LCD_DisplayClear();
  5145  077A  3189  216F         	fcall	_LCD_DisplayClear
  5146  077C  0008               	return
  5147  077D                     __end_of_StartUp_Menu:	
  5148                           
  5149                           	psect	text15
  5150  092B                     __ptext15:	
  5151 ;; *************** function _Load_PMTConfing *****************
  5152 ;; Defined at:
  5153 ;;		line 12 in file "User_Interface.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  data            1    wreg     PTR struct .
  5156 ;;		 -> main@pmt_config(3), 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  data            1   12[BANK0 ] PTR struct .
  5159 ;;		 -> main@pmt_config(3), 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  1    wreg      unsigned char 
  5162 ;; Registers used:
  5163 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5169 ;;      Params:         0       0       0       0       0       0
  5170 ;;      Locals:         0       1       0       0       0       0
  5171 ;;      Temps:          0       1       0       0       0       0
  5172 ;;      Totals:         0       2       0       0       0       0
  5173 ;;Total ram usage:        2 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    5
  5176 ;; This function calls:
  5177 ;;		_EEPROM_MultiRead
  5178 ;; This function is called by:
  5179 ;;		_StartUp_Menu
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           
  5184                           ;psect for function _Load_PMTConfing
  5185  092B                     _Load_PMTConfing:	
  5186                           
  5187                           ;incstack = 0
  5188                           ; Regs used in _Load_PMTConfing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5189                           ;Load_PMTConfing@data stored from wreg
  5190  092B  0020               	movlb	0	; select bank0
  5191  092C  00AC               	movwf	Load_PMTConfing@data
  5192                           
  5193                           ;User_Interface.c: 14: return EEPROM_MultiRead(data->Eeprom_table,3,0);
  5194                           ;	Return value of _Load_PMTConfing is never used
  5195  092D  3003               	movlw	3
  5196  092E  00AB               	movwf	??_Load_PMTConfing
  5197  092F  082B               	movf	??_Load_PMTConfing,w
  5198  0930  00A4               	movwf	EEPROM_MultiRead@size
  5199  0931  01A5               	clrf	EEPROM_MultiRead@addr
  5200  0932  082C               	movf	Load_PMTConfing@data,w
  5201  0933  318B  23DA         	fcall	_EEPROM_MultiRead
  5202  0935  0008               	return
  5203  0936                     __end_of_Load_PMTConfing:	
  5204                           
  5205                           	psect	text16
  5206  0BDA                     __ptext16:	
  5207 ;; *************** function _EEPROM_MultiRead *****************
  5208 ;; Defined at:
  5209 ;;		line 30 in file "eeprom.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  pData           1    wreg     PTR unsigned char 
  5212 ;;		 -> F3344..(3), main@pmt_config(3), 
  5213 ;;  size            1    4[BANK0 ] unsigned char 
  5214 ;;  addr            1    5[BANK0 ] unsigned char 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  5217 ;;		 -> F3344..(3), main@pmt_config(3), 
  5218 ;;  i               1   10[BANK0 ] unsigned char 
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      char 
  5221 ;; Registers used:
  5222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5228 ;;      Params:         0       2       0       0       0       0
  5229 ;;      Locals:         0       2       0       0       0       0
  5230 ;;      Temps:          0       3       0       0       0       0
  5231 ;;      Totals:         0       7       0       0       0       0
  5232 ;;Total ram usage:        7 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; Hardware stack levels required when called:    4
  5235 ;; This function calls:
  5236 ;;		_eeprom_read
  5237 ;; This function is called by:
  5238 ;;		_Load_PMTConfing
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           
  5243                           ;psect for function _EEPROM_MultiRead
  5244  0BDA                     _EEPROM_MultiRead:	
  5245                           
  5246                           ;incstack = 0
  5247                           ; Regs used in _EEPROM_MultiRead: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5248                           ;EEPROM_MultiRead@pData stored from wreg
  5249  0BDA  0020               	movlb	0	; select bank0
  5250  0BDB  00A9               	movwf	EEPROM_MultiRead@pData
  5251                           
  5252                           ;eeprom.c: 32: uint8_t i = 0;
  5253  0BDC  01AA               	clrf	EEPROM_MultiRead@i
  5254  0BDD                     l3684:	
  5255                           ;eeprom.c: 34: for(;i<size;i++)
  5256                           
  5257  0BDD  0824               	movf	EEPROM_MultiRead@size,w
  5258  0BDE  022A               	subwf	EEPROM_MultiRead@i,w
  5259  0BDF  1803               	btfsc	3,0
  5260  0BE0  2C08               	goto	l3686
  5261                           
  5262                           ;eeprom.c: 35: {
  5263                           ;eeprom.c: 36: if((addr+i)>256-1)
  5264  0BE1  0825               	movf	EEPROM_MultiRead@addr,w
  5265  0BE2  072A               	addwf	EEPROM_MultiRead@i,w
  5266  0BE3  00A6               	movwf	??_EEPROM_MultiRead
  5267  0BE4  01A7               	clrf	??_EEPROM_MultiRead+1
  5268  0BE5  0DA7               	rlf	??_EEPROM_MultiRead+1,f
  5269  0BE6  0827               	movf	??_EEPROM_MultiRead+1,w
  5270  0BE7  3A80               	xorlw	128
  5271  0BE8  00A8               	movwf	??_EEPROM_MultiRead+2
  5272  0BE9  3081               	movlw	129
  5273  0BEA  0228               	subwf	??_EEPROM_MultiRead+2,w
  5274  0BEB  1D03               	skipz
  5275  0BEC  2BEF               	goto	u3205
  5276  0BED  3000               	movlw	0
  5277  0BEE  0226               	subwf	??_EEPROM_MultiRead,w
  5278  0BEF                     u3205:	
  5279  0BEF  1C03               	skipc
  5280  0BF0  2BF3               	goto	l3680
  5281                           
  5282                           ;eeprom.c: 37: return 1;
  5283  0BF1  3001               	movlw	1
  5284  0BF2  0008               	return
  5285  0BF3                     l3680:	
  5286                           
  5287                           ;eeprom.c: 38: pData[i] = eeprom_read(addr+i);
  5288  0BF3  0020               	movlb	0	; select bank0
  5289  0BF4  0825               	movf	EEPROM_MultiRead@addr,w
  5290  0BF5  072A               	addwf	EEPROM_MultiRead@i,w
  5291  0BF6  318A  22C7  318B   	fcall	_eeprom_read
  5292  0BF9  0020               	movlb	0	; select bank0
  5293  0BFA  00A6               	movwf	??_EEPROM_MultiRead
  5294  0BFB  082A               	movf	EEPROM_MultiRead@i,w
  5295  0BFC  0729               	addwf	EEPROM_MultiRead@pData,w
  5296  0BFD  00A7               	movwf	??_EEPROM_MultiRead+1
  5297  0BFE  0827               	movf	??_EEPROM_MultiRead+1,w
  5298  0BFF  0086               	movwf	6
  5299  0C00  0187               	clrf	7
  5300  0C01  0826               	movf	??_EEPROM_MultiRead,w
  5301  0C02  0081               	movwf	1
  5302  0C03  3001               	movlw	1
  5303  0C04  00A6               	movwf	??_EEPROM_MultiRead
  5304  0C05  0826               	movf	??_EEPROM_MultiRead,w
  5305  0C06  07AA               	addwf	EEPROM_MultiRead@i,f
  5306  0C07  2BDD               	goto	l3684
  5307  0C08                     l3686:	
  5308                           
  5309                           ;eeprom.c: 39: }
  5310                           ;eeprom.c: 41: return 0;
  5311  0C08  3000               	movlw	0
  5312  0C09  0008               	return
  5313  0C0A                     __end_of_EEPROM_MultiRead:	
  5314                           
  5315                           	psect	text17
  5316  0AC7                     __ptext17:	
  5317 ;; *************** function _eeprom_read *****************
  5318 ;; Defined at:
  5319 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/pic/eeread.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  addr            1    wreg     unsigned char 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  addr            1    3[BANK0 ] unsigned char 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      unsigned char 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5333 ;;      Params:         0       0       0       0       0       0
  5334 ;;      Locals:         0       1       0       0       0       0
  5335 ;;      Temps:          0       3       0       0       0       0
  5336 ;;      Totals:         0       4       0       0       0       0
  5337 ;;Total ram usage:        4 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    3
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_EEPROM_MultiRead
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           
  5348                           ;psect for function _eeprom_read
  5349  0AC7                     _eeprom_read:	
  5350                           
  5351                           ;incstack = 0
  5352                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5353                           ;eeprom_read@addr stored from wreg
  5354  0AC7  0020               	movlb	0	; select bank0
  5355  0AC8  00A3               	movwf	eeprom_read@addr
  5356  0AC9  2ACB               	goto	l701
  5357  0ACA                     u3141:	
  5358  0ACA  0020               	movlb	0	; select bank0
  5359  0ACB                     l701:	
  5360  0ACB  0064               	clrwdt	;# 
  5361  0ACC  0023               	movlb	3	; select bank3
  5362  0ACD  1895               	btfsc	21,1	;volsfr
  5363  0ACE  2ACA               	goto	u3141
  5364  0ACF  0020               	movlb	0	; select bank0
  5365  0AD0  0823               	movf	eeprom_read@addr,w
  5366  0AD1  00A0               	movwf	??_eeprom_read
  5367  0AD2  01A1               	clrf	??_eeprom_read+1
  5368  0AD3  0820               	movf	??_eeprom_read,w
  5369  0AD4  0023               	movlb	3	; select bank3
  5370  0AD5  0091               	movwf	17	;volatile
  5371  0AD6  0020               	movlb	0	; select bank0
  5372  0AD7  0821               	movf	??_eeprom_read+1,w
  5373  0AD8  0023               	movlb	3	; select bank3
  5374  0AD9  0092               	movwf	18	;volatile
  5375  0ADA  303F               	movlw	63
  5376  0ADB  0020               	movlb	0	; select bank0
  5377  0ADC  00A2               	movwf	??_eeprom_read+2
  5378  0ADD  0822               	movf	??_eeprom_read+2,w
  5379  0ADE  0023               	movlb	3	; select bank3
  5380  0ADF  0595               	andwf	21,f	;volsfr
  5381  0AE0  1415               	bsf	21,0	;volsfr
  5382  0AE1  1003               	clrc
  5383  0AE2  1815               	btfsc	21,0	;volsfr
  5384  0AE3  1403               	setc
  5385  0AE4  3000               	movlw	0
  5386  0AE5  3D09               	addwfc	9,w
  5387  0AE6  0813               	movf	19,w	;volatile
  5388  0AE7  0008               	return
  5389  0AE8                     __end_of_eeprom_read:	
  5390                           
  5391                           	psect	text18
  5392  0BAB                     __ptext18:	
  5393 ;; *************** function _DAC_WriteVoltage *****************
  5394 ;; Defined at:
  5395 ;;		line 27 in file "MCP4726.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  volue           2   16[BANK0 ] unsigned int 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;		None
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  1    wreg      char 
  5402 ;; Registers used:
  5403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5409 ;;      Params:         0       2       0       0       0       0
  5410 ;;      Locals:         0       0       0       0       0       0
  5411 ;;      Temps:          0       3       0       0       0       0
  5412 ;;      Totals:         0       5       0       0       0       0
  5413 ;;Total ram usage:        5 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    5
  5416 ;; This function calls:
  5417 ;;		_I2C_Transmit
  5418 ;; This function is called by:
  5419 ;;		_StartUp_Menu
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           
  5424                           ;psect for function _DAC_WriteVoltage
  5425  0BAB                     _DAC_WriteVoltage:	
  5426                           
  5427                           ;MCP4726.c: 29: VoltageReg.Command = (uint8_t)(0x0);
  5428                           
  5429                           ;incstack = 0
  5430                           ; Regs used in _DAC_WriteVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5431  0BAB  303F               	movlw	-193
  5432  0BAC  0020               	movlb	0	; select bank0
  5433  0BAD  05ED               	andwf	_VoltageReg,f
  5434                           
  5435                           ;MCP4726.c: 30: VoltageReg.PowerDown = ConfigReg.PowerDown;
  5436  0BAE  0C6F               	rrf	_ConfigReg,w
  5437  0BAF  3903               	andlw	3
  5438  0BB0  00B2               	movwf	??_DAC_WriteVoltage
  5439  0BB1  0EB2               	swapf	??_DAC_WriteVoltage,f
  5440  0BB2  086D               	movf	_VoltageReg,w
  5441  0BB3  0632               	xorwf	??_DAC_WriteVoltage,w
  5442  0BB4  39CF               	andlw	-49
  5443  0BB5  0632               	xorwf	??_DAC_WriteVoltage,w
  5444  0BB6  00ED               	movwf	_VoltageReg
  5445                           
  5446                           ;MCP4726.c: 31: VoltageReg.Voltage4bits = (uint8_t)((volue&0x0F00)>>8);
  5447  0BB7  0831               	movf	DAC_WriteVoltage@volue+1,w
  5448  0BB8  00B3               	movwf	??_DAC_WriteVoltage+1
  5449  0BB9  0830               	movf	DAC_WriteVoltage@volue,w
  5450  0BBA  00B2               	movwf	??_DAC_WriteVoltage
  5451  0BBB  0833               	movf	??_DAC_WriteVoltage+1,w
  5452  0BBC  00B2               	movwf	??_DAC_WriteVoltage
  5453  0BBD  01B3               	clrf	??_DAC_WriteVoltage+1
  5454  0BBE  300F               	movlw	15
  5455  0BBF  0532               	andwf	??_DAC_WriteVoltage,w
  5456  0BC0  00B4               	movwf	??_DAC_WriteVoltage+2
  5457  0BC1  086D               	movf	_VoltageReg,w
  5458  0BC2  0634               	xorwf	??_DAC_WriteVoltage+2,w
  5459  0BC3  39F0               	andlw	-16
  5460  0BC4  0634               	xorwf	??_DAC_WriteVoltage+2,w
  5461  0BC5  00ED               	movwf	_VoltageReg
  5462                           
  5463                           ;MCP4726.c: 32: VoltageReg.Voltage8bits = (uint8_t)(volue&0x00FF);
  5464  0BC6  0830               	movf	DAC_WriteVoltage@volue,w
  5465  0BC7  00B2               	movwf	??_DAC_WriteVoltage
  5466  0BC8  0832               	movf	??_DAC_WriteVoltage,w
  5467  0BC9  00EE               	movwf	_VoltageReg+1
  5468                           
  5469                           ;MCP4726.c: 34: return I2C_Transmit(I2C2_MODULE,0x60,VoltageReg.Voltage_Data,2);
  5470                           ;	Return value of _DAC_WriteVoltage is never used
  5471  0BCA  3060               	movlw	96
  5472  0BCB  00B2               	movwf	??_DAC_WriteVoltage
  5473  0BCC  0832               	movf	??_DAC_WriteVoltage,w
  5474  0BCD  00A8               	movwf	I2C_Transmit@address
  5475  0BCE  306D               	movlw	(low (_VoltageReg| 0))& (0+255)
  5476  0BCF  00B3               	movwf	??_DAC_WriteVoltage+1
  5477  0BD0  0833               	movf	??_DAC_WriteVoltage+1,w
  5478  0BD1  00A9               	movwf	I2C_Transmit@pData
  5479  0BD2  3002               	movlw	2
  5480  0BD3  00B4               	movwf	??_DAC_WriteVoltage+2
  5481  0BD4  0834               	movf	??_DAC_WriteVoltage+2,w
  5482  0BD5  00AA               	movwf	I2C_Transmit@size
  5483  0BD6  3001               	movlw	1
  5484  0BD7  318A  2236         	fcall	_I2C_Transmit
  5485  0BD9  0008               	return
  5486  0BDA                     __end_of_DAC_WriteVoltage:	
  5487                           
  5488                           	psect	text19
  5489  0603                     __ptext19:	
  5490 ;; *************** function _Ssetting_PMT_Config *****************
  5491 ;; Defined at:
  5492 ;;		line 47 in file "User_Interface.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  data            1    wreg     PTR struct .
  5495 ;;		 -> main@pmt_config(3), 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  data            1   70[BANK0 ] PTR struct .
  5498 ;;		 -> main@pmt_config(3), 
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1    wreg      void 
  5501 ;; Registers used:
  5502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5508 ;;      Params:         0       0       0       0       0       0
  5509 ;;      Locals:         0       1       0       0       0       0
  5510 ;;      Temps:          0       1       0       0       0       0
  5511 ;;      Totals:         0       2       0       0       0       0
  5512 ;;Total ram usage:        2 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:    6
  5515 ;; This function calls:
  5516 ;;		_LCD_CursorHome
  5517 ;;		_LCD_CursorPosition
  5518 ;;		_LCD_DisplayClear
  5519 ;;		_Save_PMTConfig
  5520 ;;		_mTouch_Check
  5521 ;;		_printf
  5522 ;; This function is called by:
  5523 ;;		_main
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           
  5528                           ;psect for function _Ssetting_PMT_Config
  5529  0603                     _Ssetting_PMT_Config:	
  5530                           
  5531                           ;incstack = 0
  5532                           ; Regs used in _Ssetting_PMT_Config: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5533                           ;Ssetting_PMT_Config@data stored from wreg
  5534  0603  0020               	movlb	0	; select bank0
  5535  0604  00E6               	movwf	Ssetting_PMT_Config@data
  5536                           
  5537                           ;User_Interface.c: 49: LCD_CursorHome();
  5538  0605  3189  217F  3186   	fcall	_LCD_CursorHome
  5539                           
  5540                           ;User_Interface.c: 50: printf("   PMT Device   ");
  5541  0608  30DF               	movlw	low (STR_44| (0+32768))
  5542  0609  0020               	movlb	0	; select bank0
  5543  060A  00C6               	movwf	printf@f
  5544  060B  3082               	movlw	high (STR_44| (0+32768))
  5545  060C                     L3:	
  5546  060C  00C7               	movwf	printf@f+1
  5547  060D  3180  205A  3186   	fcall	_printf
  5548  0610                     l580:	
  5549                           ;User_Interface.c: 52: while(!mTouch_Check(0x00))
  5550                           
  5551  0610  3000               	movlw	0
  5552  0611  318D  25E3  3186   	fcall	_mTouch_Check
  5553  0614  3A00               	xorlw	0
  5554  0615  1D03               	btfss	3,2
  5555  0616  2E60               	goto	l4240
  5556                           
  5557                           ;User_Interface.c: 53: {
  5558                           ;User_Interface.c: 54: if(mTouch_Check(0x01)&&(data->DeviceNum==0))
  5559  0617  3001               	movlw	1
  5560  0618  318D  25E3  3186   	fcall	_mTouch_Check
  5561  061B  3A00               	xorlw	0
  5562  061C  1903               	skipnz
  5563  061D  2E2D               	goto	l4224
  5564  061E  0020               	movlb	0	; select bank0
  5565  061F  0866               	movf	Ssetting_PMT_Config@data,w
  5566  0620  3E02               	addlw	2
  5567  0621  0086               	movwf	6
  5568  0622  0187               	clrf	7
  5569  0623  0801               	movf	1,w
  5570  0624  1D03               	btfss	3,2
  5571  0625  2E2D               	goto	l4224
  5572                           
  5573                           ;User_Interface.c: 55: data->DeviceNum = 1;
  5574  0626  0866               	movf	Ssetting_PMT_Config@data,w
  5575  0627  3E02               	addlw	2
  5576  0628  0086               	movwf	6
  5577  0629  0187               	clrf	7
  5578  062A  0181               	clrf	1
  5579  062B  0A81               	incf	1,f
  5580  062C  2E41               	goto	l4230
  5581  062D                     l4224:	
  5582                           
  5583                           ;User_Interface.c: 56: else if(mTouch_Check(0x02)&&(data->DeviceNum==1))
  5584  062D  3002               	movlw	2
  5585  062E  318D  25E3  3186   	fcall	_mTouch_Check
  5586  0631  3A00               	xorlw	0
  5587  0632  1903               	skipnz
  5588  0633  2E41               	goto	l4230
  5589  0634  0020               	movlb	0	; select bank0
  5590  0635  0866               	movf	Ssetting_PMT_Config@data,w
  5591  0636  3E02               	addlw	2
  5592  0637  0086               	movwf	6
  5593  0638  0187               	clrf	7
  5594  0639  0301               	decf	1,w
  5595  063A  1D03               	btfss	3,2
  5596  063B  2E41               	goto	l4230
  5597                           
  5598                           ;User_Interface.c: 57: data->DeviceNum = 0;
  5599  063C  0866               	movf	Ssetting_PMT_Config@data,w
  5600  063D  3E02               	addlw	2
  5601  063E  0086               	movwf	6
  5602  063F  0187               	clrf	7
  5603  0640  0181               	clrf	1
  5604  0641                     l4230:	
  5605                           
  5606                           ;User_Interface.c: 59: LCD_CursorPosition(0,1);
  5607  0641  0020               	movlb	0	; select bank0
  5608  0642  01A3               	clrf	LCD_CursorPosition@ty
  5609  0643  0AA3               	incf	LCD_CursorPosition@ty,f
  5610  0644  3000               	movlw	0
  5611  0645  3189  21EC  3186   	fcall	_LCD_CursorPosition
  5612                           
  5613                           ;User_Interface.c: 60: if(data->DeviceNum==0)
  5614  0648  0020               	movlb	0	; select bank0
  5615  0649  0866               	movf	Ssetting_PMT_Config@data,w
  5616  064A  3E02               	addlw	2
  5617  064B  0086               	movwf	6
  5618  064C  0187               	clrf	7
  5619  064D  0801               	movf	1,w
  5620  064E  1D03               	btfss	3,2
  5621  064F  2E54               	goto	l4236
  5622                           
  5623                           ;User_Interface.c: 61: printf("<--  H7826   -->");
  5624  0650  3023               	movlw	low (STR_45| (0+32768))
  5625  0651  00C6               	movwf	printf@f
  5626  0652  3083               	movlw	high (STR_45| (0+32768))
  5627  0653  2E0C               	goto	L3
  5628  0654                     l4236:	
  5629                           
  5630                           ;User_Interface.c: 62: else if(data->DeviceNum==1)
  5631  0654  0020               	movlb	0	; select bank0
  5632  0655  0866               	movf	Ssetting_PMT_Config@data,w
  5633  0656  3E02               	addlw	2
  5634  0657  0086               	movwf	6
  5635  0658  0187               	clrf	7
  5636  0659  0301               	decf	1,w
  5637  065A  1D03               	btfss	3,2
  5638  065B  2E10               	goto	l580
  5639                           
  5640                           ;User_Interface.c: 63: printf("<-- H7826_01 -->");
  5641  065C  3034               	movlw	low (STR_46| (0+32768))
  5642  065D  00C6               	movwf	printf@f
  5643  065E  3083               	movlw	high (STR_46| (0+32768))
  5644  065F  2E0C               	goto	L3
  5645  0660                     l4240:	
  5646                           
  5647                           ;User_Interface.c: 64: }
  5648                           ;User_Interface.c: 66: LCD_CursorHome();
  5649  0660  3189  217F  3186   	fcall	_LCD_CursorHome
  5650                           
  5651                           ;User_Interface.c: 67: printf("  Set PMT Gain  ");
  5652  0663  30F0               	movlw	low (STR_47| (0+32768))
  5653  0664  0020               	movlb	0	; select bank0
  5654  0665  00C6               	movwf	printf@f
  5655  0666  3082               	movlw	high (STR_47| (0+32768))
  5656  0667  00C7               	movwf	printf@f+1
  5657  0668                     L4:	
  5658  0668  3180  205A  3186   	fcall	_printf
  5659  066B                     l589:	
  5660                           ;User_Interface.c: 69: while(!mTouch_Check(0x00))
  5661                           
  5662  066B  3000               	movlw	0
  5663  066C  318D  25E3  3186   	fcall	_mTouch_Check
  5664  066F  3A00               	xorlw	0
  5665  0670  1D03               	btfss	3,2
  5666  0671  2ED3               	goto	l4266
  5667                           
  5668                           ;User_Interface.c: 70: {
  5669                           ;User_Interface.c: 71: if(mTouch_Check(0x01)&&(data->GainElements<11))
  5670  0672  3001               	movlw	1
  5671  0673  318D  25E3  3186   	fcall	_mTouch_Check
  5672  0676  3A00               	xorlw	0
  5673  0677  1903               	skipnz
  5674  0678  2E89               	goto	l4250
  5675  0679  0020               	movlb	0	; select bank0
  5676  067A  0A66               	incf	Ssetting_PMT_Config@data,w
  5677  067B  0086               	movwf	6
  5678  067C  0187               	clrf	7
  5679  067D  300B               	movlw	11
  5680  067E  0201               	subwf	1,w
  5681  067F  1803               	skipnc
  5682  0680  2E89               	goto	l4250
  5683                           
  5684                           ;User_Interface.c: 72: data->GainElements++;
  5685  0681  3001               	movlw	1
  5686  0682  00E5               	movwf	??_Ssetting_PMT_Config
  5687  0683  0A66               	incf	Ssetting_PMT_Config@data,w
  5688  0684  0086               	movwf	6
  5689  0685  0187               	clrf	7
  5690  0686  0865               	movf	??_Ssetting_PMT_Config,w
  5691  0687  0781               	addwf	1,f
  5692  0688  2E9C               	goto	l4256
  5693  0689                     l4250:	
  5694                           
  5695                           ;User_Interface.c: 73: else if(mTouch_Check(0x02)&&(0<data->GainElements))
  5696  0689  3002               	movlw	2
  5697  068A  318D  25E3  3186   	fcall	_mTouch_Check
  5698  068D  3A00               	xorlw	0
  5699  068E  1903               	skipnz
  5700  068F  2E9C               	goto	l4256
  5701  0690  0020               	movlb	0	; select bank0
  5702  0691  0A66               	incf	Ssetting_PMT_Config@data,w
  5703  0692  0086               	movwf	6
  5704  0693  0187               	clrf	7
  5705  0694  0801               	movf	1,w
  5706  0695  1903               	btfsc	3,2
  5707  0696  2E9C               	goto	l4256
  5708                           
  5709                           ;User_Interface.c: 74: data->GainElements--;
  5710  0697  0A66               	incf	Ssetting_PMT_Config@data,w
  5711  0698  0086               	movwf	6
  5712  0699  0187               	clrf	7
  5713  069A  3001               	movlw	1
  5714  069B  0281               	subwf	1,f
  5715  069C                     l4256:	
  5716                           
  5717                           ;User_Interface.c: 76: LCD_CursorPosition(0,1);
  5718  069C  0020               	movlb	0	; select bank0
  5719  069D  01A3               	clrf	LCD_CursorPosition@ty
  5720  069E  0AA3               	incf	LCD_CursorPosition@ty,f
  5721  069F  3000               	movlw	0
  5722  06A0  3189  21EC  3186   	fcall	_LCD_CursorPosition
  5723                           
  5724                           ;User_Interface.c: 77: if(data->DeviceNum==0)
  5725  06A3  0020               	movlb	0	; select bank0
  5726  06A4  0866               	movf	Ssetting_PMT_Config@data,w
  5727  06A5  3E02               	addlw	2
  5728  06A6  0086               	movwf	6
  5729  06A7  0187               	clrf	7
  5730  06A8  0801               	movf	1,w
  5731  06A9  1D03               	btfss	3,2
  5732  06AA  2EBA               	goto	l4262
  5733                           
  5734                           ;User_Interface.c: 78: printf("<-- %8s -->",H7826_Gain[data->GainElements]);
  5735  06AB  30A2               	movlw	low (STR_48| (0+32768))
  5736  06AC  00C6               	movwf	printf@f
  5737  06AD  3083               	movlw	high (STR_48| (0+32768))
  5738  06AE  00C7               	movwf	printf@f+1
  5739  06AF  0A66               	incf	Ssetting_PMT_Config@data,w
  5740  06B0  0086               	movwf	6
  5741  06B1  0187               	clrf	7
  5742  06B2  3501               	lslf	1,w
  5743  06B3  3EC8               	addlw	(low (_H7826_Gain| 0))& (0+255)
  5744  06B4  0086               	movwf	6
  5745  06B5  0187               	clrf	7
  5746  06B6  3F40               	moviw [0]fsr1
  5747  06B7  00C8               	movwf	low ((?_printf| 0+2))
  5748  06B8  3F41               	moviw [1]fsr1
  5749  06B9  2ED1               	goto	L5
  5750  06BA                     l4262:	
  5751                           
  5752                           ;User_Interface.c: 79: else if(data->DeviceNum==1)
  5753  06BA  0020               	movlb	0	; select bank0
  5754  06BB  0866               	movf	Ssetting_PMT_Config@data,w
  5755  06BC  3E02               	addlw	2
  5756  06BD  0086               	movwf	6
  5757  06BE  0187               	clrf	7
  5758  06BF  0301               	decf	1,w
  5759  06C0  1D03               	btfss	3,2
  5760  06C1  2E6B               	goto	l589
  5761                           
  5762                           ;User_Interface.c: 80: printf("<-- %8s -->",H7826_01_Gain[data->GainElements]);
  5763  06C2  30A2               	movlw	low (STR_48| (0+32768))
  5764  06C3  00C6               	movwf	printf@f
  5765  06C4  3083               	movlw	high (STR_48| (0+32768))
  5766  06C5  00C7               	movwf	printf@f+1
  5767  06C6  0A66               	incf	Ssetting_PMT_Config@data,w
  5768  06C7  0086               	movwf	6
  5769  06C8  0187               	clrf	7
  5770  06C9  3501               	lslf	1,w
  5771  06CA  3E20               	addlw	(low (_H7826_01_Gain| (0+256)))& (0+255)
  5772  06CB  0086               	movwf	6
  5773  06CC  3001               	movlw	1	; select bank2/3
  5774  06CD  0087               	movwf	7
  5775  06CE  3F40               	moviw [0]fsr1
  5776  06CF  00C8               	movwf	low ((?_printf| 0+2))
  5777  06D0  3F41               	moviw [1]fsr1
  5778  06D1                     L5:	
  5779  06D1  00C9               	movwf	(low ((?_printf| 0+2))+1)
  5780  06D2  2E68               	goto	L4
  5781  06D3                     l4266:	
  5782                           
  5783                           ;User_Interface.c: 81: }
  5784                           ;User_Interface.c: 83: LCD_DisplayClear();
  5785  06D3  3189  216F  3186   	fcall	_LCD_DisplayClear
  5786                           
  5787                           ;User_Interface.c: 85: Save_PMTConfig(data);
  5788  06D6  0020               	movlb	0	; select bank0
  5789  06D7  0866               	movf	Ssetting_PMT_Config@data,w
  5790  06D8  3189  2120         	fcall	_Save_PMTConfig
  5791  06DA  0008               	return
  5792  06DB                     __end_of_Ssetting_PMT_Config:	
  5793                           
  5794                           	psect	text20
  5795  0920                     __ptext20:	
  5796 ;; *************** function _Save_PMTConfig *****************
  5797 ;; Defined at:
  5798 ;;		line 7 in file "User_Interface.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  data            1    wreg     PTR struct .
  5801 ;;		 -> main@pmt_config(3), 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  data            1   12[BANK0 ] PTR struct .
  5804 ;;		 -> main@pmt_config(3), 
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  1    wreg      unsigned char 
  5807 ;; Registers used:
  5808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5814 ;;      Params:         0       0       0       0       0       0
  5815 ;;      Locals:         0       1       0       0       0       0
  5816 ;;      Temps:          0       1       0       0       0       0
  5817 ;;      Totals:         0       2       0       0       0       0
  5818 ;;Total ram usage:        2 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:    5
  5821 ;; This function calls:
  5822 ;;		_EEPROM_MultiWrite
  5823 ;; This function is called by:
  5824 ;;		_Ssetting_PMT_Config
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           
  5829                           ;psect for function _Save_PMTConfig
  5830  0920                     _Save_PMTConfig:	
  5831                           
  5832                           ;incstack = 0
  5833                           ; Regs used in _Save_PMTConfig: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5834                           ;Save_PMTConfig@data stored from wreg
  5835  0920  0020               	movlb	0	; select bank0
  5836  0921  00AC               	movwf	Save_PMTConfig@data
  5837                           
  5838                           ;User_Interface.c: 9: return EEPROM_MultiWrite(data->Eeprom_table,3,0);
  5839                           ;	Return value of _Save_PMTConfig is never used
  5840  0922  3003               	movlw	3
  5841  0923  00AB               	movwf	??_Save_PMTConfig
  5842  0924  082B               	movf	??_Save_PMTConfig,w
  5843  0925  00A4               	movwf	EEPROM_MultiWrite@size
  5844  0926  01A5               	clrf	EEPROM_MultiWrite@addr
  5845  0927  082C               	movf	Save_PMTConfig@data,w
  5846  0928  318C  243A         	fcall	_EEPROM_MultiWrite
  5847  092A  0008               	return
  5848  092B                     __end_of_Save_PMTConfig:	
  5849                           
  5850                           	psect	text21
  5851  0C3A                     __ptext21:	
  5852 ;; *************** function _EEPROM_MultiWrite *****************
  5853 ;; Defined at:
  5854 ;;		line 12 in file "eeprom.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  pData           1    wreg     PTR unsigned char 
  5857 ;;		 -> F3344..(3), main@pmt_config(3), 
  5858 ;;  size            1    4[BANK0 ] unsigned char 
  5859 ;;  addr            1    5[BANK0 ] unsigned char 
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  5862 ;;		 -> F3344..(3), main@pmt_config(3), 
  5863 ;;  i               1   10[BANK0 ] unsigned char 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  1    wreg      char 
  5866 ;; Registers used:
  5867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5873 ;;      Params:         0       2       0       0       0       0
  5874 ;;      Locals:         0       2       0       0       0       0
  5875 ;;      Temps:          0       3       0       0       0       0
  5876 ;;      Totals:         0       7       0       0       0       0
  5877 ;;Total ram usage:        7 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    4
  5880 ;; This function calls:
  5881 ;;		_eeprom_write
  5882 ;; This function is called by:
  5883 ;;		_Save_PMTConfig
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           
  5888                           ;psect for function _EEPROM_MultiWrite
  5889  0C3A                     _EEPROM_MultiWrite:	
  5890                           
  5891                           ;incstack = 0
  5892                           ; Regs used in _EEPROM_MultiWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5893                           ;EEPROM_MultiWrite@pData stored from wreg
  5894  0C3A  0020               	movlb	0	; select bank0
  5895  0C3B  00A9               	movwf	EEPROM_MultiWrite@pData
  5896                           
  5897                           ;eeprom.c: 14: uint8_t i = 0;
  5898  0C3C  01AA               	clrf	EEPROM_MultiWrite@i
  5899  0C3D                     l3666:	
  5900                           ;eeprom.c: 16: for(;i<size;i++)
  5901                           
  5902  0C3D  0824               	movf	EEPROM_MultiWrite@size,w
  5903  0C3E  022A               	subwf	EEPROM_MultiWrite@i,w
  5904  0C3F  1803               	btfsc	3,0
  5905  0C40  2C69               	goto	l3668
  5906                           
  5907                           ;eeprom.c: 17: {
  5908                           ;eeprom.c: 18: if((addr+i)>256-1)
  5909  0C41  0825               	movf	EEPROM_MultiWrite@addr,w
  5910  0C42  072A               	addwf	EEPROM_MultiWrite@i,w
  5911  0C43  00A6               	movwf	??_EEPROM_MultiWrite
  5912  0C44  01A7               	clrf	??_EEPROM_MultiWrite+1
  5913  0C45  0DA7               	rlf	??_EEPROM_MultiWrite+1,f
  5914  0C46  0827               	movf	??_EEPROM_MultiWrite+1,w
  5915  0C47  3A80               	xorlw	128
  5916  0C48  00A8               	movwf	??_EEPROM_MultiWrite+2
  5917  0C49  3081               	movlw	129
  5918  0C4A  0228               	subwf	??_EEPROM_MultiWrite+2,w
  5919  0C4B  1D03               	skipz
  5920  0C4C  2C4F               	goto	u3185
  5921  0C4D  3000               	movlw	0
  5922  0C4E  0226               	subwf	??_EEPROM_MultiWrite,w
  5923  0C4F                     u3185:	
  5924  0C4F  1C03               	skipc
  5925  0C50  2C53               	goto	l3662
  5926                           
  5927                           ;eeprom.c: 19: return 1;
  5928  0C51  3001               	movlw	1
  5929  0C52  0008               	return
  5930  0C53                     l3662:	
  5931                           
  5932                           ;eeprom.c: 20: eeprom_write(addr+i,pData[i]);
  5933  0C53  0020               	movlb	0	; select bank0
  5934  0C54  082A               	movf	EEPROM_MultiWrite@i,w
  5935  0C55  0729               	addwf	EEPROM_MultiWrite@pData,w
  5936  0C56  00A6               	movwf	??_EEPROM_MultiWrite
  5937  0C57  0826               	movf	??_EEPROM_MultiWrite,w
  5938  0C58  0086               	movwf	6
  5939  0C59  0187               	clrf	7
  5940  0C5A  0801               	movf	1,w
  5941  0C5B  00A7               	movwf	??_EEPROM_MultiWrite+1
  5942  0C5C  0827               	movf	??_EEPROM_MultiWrite+1,w
  5943  0C5D  00A0               	movwf	eeprom_write@value
  5944  0C5E  0825               	movf	EEPROM_MultiWrite@addr,w
  5945  0C5F  072A               	addwf	EEPROM_MultiWrite@i,w
  5946  0C60  318B  237F  318C   	fcall	_eeprom_write
  5947  0C63  3001               	movlw	1
  5948  0C64  0020               	movlb	0	; select bank0
  5949  0C65  00A6               	movwf	??_EEPROM_MultiWrite
  5950  0C66  0826               	movf	??_EEPROM_MultiWrite,w
  5951  0C67  07AA               	addwf	EEPROM_MultiWrite@i,f
  5952  0C68  2C3D               	goto	l3666
  5953  0C69                     l3668:	
  5954                           
  5955                           ;eeprom.c: 21: }
  5956                           ;eeprom.c: 23: return 0;
  5957  0C69  3000               	movlw	0
  5958  0C6A  0008               	return
  5959  0C6B                     __end_of_EEPROM_MultiWrite:	
  5960                           
  5961                           	psect	text22
  5962  0B7F                     __ptext22:	
  5963 ;; *************** function _eeprom_write *****************
  5964 ;; Defined at:
  5965 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/pic/eewrite.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  addr            1    wreg     unsigned char 
  5968 ;;  value           1    0[BANK0 ] unsigned char 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;  addr            1    3[BANK0 ] unsigned char 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  1    wreg      void 
  5973 ;; Registers used:
  5974 ;;		wreg, status,2, status,0
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5980 ;;      Params:         0       1       0       0       0       0
  5981 ;;      Locals:         0       1       0       0       0       0
  5982 ;;      Temps:          0       2       0       0       0       0
  5983 ;;      Totals:         0       4       0       0       0       0
  5984 ;;Total ram usage:        4 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; Hardware stack levels required when called:    3
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_EEPROM_MultiWrite
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           
  5995                           ;psect for function _eeprom_write
  5996  0B7F                     _eeprom_write:	
  5997                           
  5998                           ;incstack = 0
  5999                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  6000                           ;eeprom_write@addr stored from wreg
  6001  0B7F  0020               	movlb	0	; select bank0
  6002  0B80  00A3               	movwf	eeprom_write@addr
  6003  0B81                     l723:	
  6004  0B81  0023               	movlb	3	; select bank3
  6005  0B82  1895               	btfsc	21,1	;volsfr
  6006  0B83  2B81               	goto	l723
  6007  0B84  0020               	movlb	0	; select bank0
  6008  0B85  0823               	movf	eeprom_write@addr,w
  6009  0B86  00A1               	movwf	??_eeprom_write
  6010  0B87  01A2               	clrf	??_eeprom_write+1
  6011  0B88  0821               	movf	??_eeprom_write,w
  6012  0B89  0023               	movlb	3	; select bank3
  6013  0B8A  0091               	movwf	17	;volatile
  6014  0B8B  0020               	movlb	0	; select bank0
  6015  0B8C  0822               	movf	??_eeprom_write+1,w
  6016  0B8D  0023               	movlb	3	; select bank3
  6017  0B8E  0092               	movwf	18	;volatile
  6018  0B8F  0020               	movlb	0	; select bank0
  6019  0B90  0820               	movf	eeprom_write@value,w
  6020  0B91  0023               	movlb	3	; select bank3
  6021  0B92  0093               	movwf	19	;volatile
  6022  0B93  303F               	movlw	63
  6023  0B94  0020               	movlb	0	; select bank0
  6024  0B95  00A1               	movwf	??_eeprom_write
  6025  0B96  0821               	movf	??_eeprom_write,w
  6026  0B97  0023               	movlb	3	; select bank3
  6027  0B98  0595               	andwf	21,f	;volsfr
  6028  0B99  0020               	movlb	0	; select bank0
  6029  0B9A  1003               	bcf	3,0	;volatile
  6030  0B9B  1B8B               	btfsc	11,7	;volatile
  6031  0B9C  1403               	bsf	3,0	;volatile
  6032  0B9D  138B               	bcf	11,7	;volatile
  6033  0B9E  0023               	movlb	3	; select bank3
  6034  0B9F  1515               	bsf	21,2	;volsfr
  6035  0BA0  3055               	movlw	85
  6036  0BA1  0096               	movwf	22	;volsfr
  6037  0BA2  30AA               	movlw	170
  6038  0BA3  0096               	movwf	22	;volsfr
  6039  0BA4  1495               	bsf	21,1	;volsfr
  6040  0BA5  1115               	bcf	21,2	;volsfr
  6041  0BA6  0020               	movlb	0	; select bank0
  6042  0BA7  1C03               	btfss	3,0	;volatile
  6043  0BA8  0008               	return
  6044  0BA9  178B               	bsf	11,7	;volatile
  6045  0BAA  0008               	return
  6046  0BAB                     __end_of_eeprom_write:	
  6047                           
  6048                           	psect	text23
  6049  0ED5                     __ptext23:	
  6050 ;; *************** function _Show_PMT_Config *****************
  6051 ;; Defined at:
  6052 ;;		line 88 in file "User_Interface.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  data            1    wreg     PTR struct .
  6055 ;;		 -> main@pmt_config(3), 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  data            1   71[BANK0 ] PTR struct .
  6058 ;;		 -> main@pmt_config(3), 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      void 
  6061 ;; Registers used:
  6062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6068 ;;      Params:         0       0       0       0       0       0
  6069 ;;      Locals:         0       1       0       0       0       0
  6070 ;;      Temps:          0       2       0       0       0       0
  6071 ;;      Totals:         0       3       0       0       0       0
  6072 ;;Total ram usage:        3 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    6
  6075 ;; This function calls:
  6076 ;;		_LCD_CursorHome
  6077 ;;		_LCD_CursorPosition
  6078 ;;		_LCD_DisplayClear
  6079 ;;		_mTouch_Check
  6080 ;;		_printf
  6081 ;; This function is called by:
  6082 ;;		_main
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           
  6087                           ;psect for function _Show_PMT_Config
  6088  0ED5                     _Show_PMT_Config:	
  6089                           
  6090                           ;incstack = 0
  6091                           ; Regs used in _Show_PMT_Config: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6092                           ;Show_PMT_Config@data stored from wreg
  6093  0ED5  0020               	movlb	0	; select bank0
  6094  0ED6  00E7               	movwf	Show_PMT_Config@data
  6095  0ED7                     l601:	
  6096                           ;User_Interface.c: 90: while(!mTouch_Check(0x00))
  6097                           
  6098  0ED7  3000               	movlw	0
  6099  0ED8  318D  25E3  318E   	fcall	_mTouch_Check
  6100  0EDB  3A00               	xorlw	0
  6101  0EDC  1D03               	btfss	3,2
  6102  0EDD  2F5E               	goto	l604
  6103                           
  6104                           ;User_Interface.c: 91: {
  6105                           ;User_Interface.c: 92: LCD_CursorHome();
  6106  0EDE  3189  217F  318E   	fcall	_LCD_CursorHome
  6107                           
  6108                           ;User_Interface.c: 93: printf("SotWare ver%s","1.00");
  6109  0EE1  3088               	movlw	low (STR_39| (0+32768))
  6110  0EE2  0020               	movlb	0	; select bank0
  6111  0EE3  00C6               	movwf	printf@f
  6112  0EE4  3083               	movlw	high (STR_39| (0+32768))
  6113  0EE5  00C7               	movwf	printf@f+1
  6114  0EE6  3066               	movlw	low (STR_40| (0+32768))
  6115  0EE7  00C8               	movwf	low ((?_printf| 0+2))
  6116  0EE8  3084               	movlw	high (STR_40| (0+32768))
  6117  0EE9  00C9               	movwf	(low ((?_printf| 0+2))+1)
  6118  0EEA  3180  205A  318E   	fcall	_printf
  6119                           
  6120                           ;User_Interface.c: 94: LCD_CursorPosition(0,1);
  6121  0EED  0020               	movlb	0	; select bank0
  6122  0EEE  01A3               	clrf	LCD_CursorPosition@ty
  6123  0EEF  0AA3               	incf	LCD_CursorPosition@ty,f
  6124  0EF0  3000               	movlw	0
  6125  0EF1  3189  21EC  318E   	fcall	_LCD_CursorPosition
  6126                           
  6127                           ;User_Interface.c: 95: printf("   Ser.No.%0003d   ",data->SerialNum);
  6128  0EF4  30A9               	movlw	low (STR_41| (0+32768))
  6129  0EF5  0020               	movlb	0	; select bank0
  6130  0EF6  00C6               	movwf	printf@f
  6131  0EF7  3082               	movlw	high (STR_41| (0+32768))
  6132  0EF8  00C7               	movwf	printf@f+1
  6133  0EF9  0867               	movf	Show_PMT_Config@data,w
  6134  0EFA  0086               	movwf	6
  6135  0EFB  0187               	clrf	7
  6136  0EFC  0801               	movf	1,w
  6137  0EFD  00E5               	movwf	??_Show_PMT_Config
  6138  0EFE  01E6               	clrf	??_Show_PMT_Config+1
  6139  0EFF  0865               	movf	??_Show_PMT_Config,w
  6140  0F00  00C8               	movwf	?_printf+2
  6141  0F01  0866               	movf	??_Show_PMT_Config+1,w
  6142  0F02  00C9               	movwf	?_printf+3
  6143  0F03  3180  205A  318E   	fcall	_printf
  6144  0F06  2ED7               	goto	l601
  6145  0F07                     l4278:	
  6146                           ;User_Interface.c: 96: }
  6147                           ;User_Interface.c: 97: while(!mTouch_Check(0x00))
  6148                           
  6149                           
  6150                           ;User_Interface.c: 98: {
  6151                           ;User_Interface.c: 99: LCD_CursorHome();
  6152  0F07  3189  217F  318E   	fcall	_LCD_CursorHome
  6153                           
  6154                           ;User_Interface.c: 100: if(data->DeviceNum==0)
  6155  0F0A  0020               	movlb	0	; select bank0
  6156  0F0B  0867               	movf	Show_PMT_Config@data,w
  6157  0F0C  3E02               	addlw	2
  6158  0F0D  0086               	movwf	6
  6159  0F0E  0187               	clrf	7
  6160  0F0F  0801               	movf	1,w
  6161  0F10  1D03               	btfss	3,2
  6162  0F11  2F16               	goto	l4284
  6163                           
  6164                           ;User_Interface.c: 101: printf("Deveice:H7826   ");
  6165  0F12  30CE               	movlw	low (STR_53| (0+32768))
  6166  0F13  00C6               	movwf	printf@f
  6167  0F14  3082               	movlw	high (STR_53| (0+32768))
  6168  0F15  2F21               	goto	L6
  6169  0F16                     l4284:	
  6170                           
  6171                           ;User_Interface.c: 102: else if(data->DeviceNum==1)
  6172  0F16  0020               	movlb	0	; select bank0
  6173  0F17  0867               	movf	Show_PMT_Config@data,w
  6174  0F18  3E02               	addlw	2
  6175  0F19  0086               	movwf	6
  6176  0F1A  0187               	clrf	7
  6177  0F1B  0301               	decf	1,w
  6178  0F1C  1D03               	btfss	3,2
  6179  0F1D  2F25               	goto	l4288
  6180                           
  6181                           ;User_Interface.c: 103: printf("Deveice:H7826_01");
  6182  0F1E  3012               	movlw	low (STR_54| (0+32768))
  6183  0F1F  00C6               	movwf	printf@f
  6184  0F20  3083               	movlw	high (STR_54| (0+32768))
  6185  0F21                     L6:	
  6186  0F21  00C7               	movwf	printf@f+1
  6187  0F22  3180  205A  318E   	fcall	_printf
  6188  0F25                     l4288:	
  6189                           
  6190                           ;User_Interface.c: 104: LCD_CursorPosition(0,1);
  6191  0F25  0020               	movlb	0	; select bank0
  6192  0F26  01A3               	clrf	LCD_CursorPosition@ty
  6193  0F27  0AA3               	incf	LCD_CursorPosition@ty,f
  6194  0F28  3000               	movlw	0
  6195  0F29  3189  21EC  318E   	fcall	_LCD_CursorPosition
  6196                           
  6197                           ;User_Interface.c: 105: if(data->DeviceNum==0)
  6198  0F2C  0020               	movlb	0	; select bank0
  6199  0F2D  0867               	movf	Show_PMT_Config@data,w
  6200  0F2E  3E02               	addlw	2
  6201  0F2F  0086               	movwf	6
  6202  0F30  0187               	clrf	7
  6203  0F31  0801               	movf	1,w
  6204  0F32  1D03               	btfss	3,2
  6205  0F33  2F43               	goto	l4294
  6206                           
  6207                           ;User_Interface.c: 106: printf(" Gain: %8s ",H7826_Gain[data->GainElements]);
  6208  0F34  3096               	movlw	low (STR_55| (0+32768))
  6209  0F35  00C6               	movwf	printf@f
  6210  0F36  3083               	movlw	high (STR_55| (0+32768))
  6211  0F37  00C7               	movwf	printf@f+1
  6212  0F38  0A67               	incf	Show_PMT_Config@data,w
  6213  0F39  0086               	movwf	6
  6214  0F3A  0187               	clrf	7
  6215  0F3B  3501               	lslf	1,w
  6216  0F3C  3EC8               	addlw	(low (_H7826_Gain| 0))& (0+255)
  6217  0F3D  0086               	movwf	6
  6218  0F3E  0187               	clrf	7
  6219  0F3F  3F40               	moviw [0]fsr1
  6220  0F40  00C8               	movwf	low ((?_printf| 0+2))
  6221  0F41  3F41               	moviw [1]fsr1
  6222  0F42  2F5A               	goto	L7
  6223  0F43                     l4294:	
  6224                           
  6225                           ;User_Interface.c: 107: else if(data->DeviceNum==1)
  6226  0F43  0020               	movlb	0	; select bank0
  6227  0F44  0867               	movf	Show_PMT_Config@data,w
  6228  0F45  3E02               	addlw	2
  6229  0F46  0086               	movwf	6
  6230  0F47  0187               	clrf	7
  6231  0F48  0301               	decf	1,w
  6232  0F49  1D03               	btfss	3,2
  6233  0F4A  2F5E               	goto	l604
  6234                           
  6235                           ;User_Interface.c: 108: printf(" Gain: %8s ",H7826_01_Gain[data->GainElements]);
  6236  0F4B  3096               	movlw	low (STR_55| (0+32768))
  6237  0F4C  00C6               	movwf	printf@f
  6238  0F4D  3083               	movlw	high (STR_55| (0+32768))
  6239  0F4E  00C7               	movwf	printf@f+1
  6240  0F4F  0A67               	incf	Show_PMT_Config@data,w
  6241  0F50  0086               	movwf	6
  6242  0F51  0187               	clrf	7
  6243  0F52  3501               	lslf	1,w
  6244  0F53  3E20               	addlw	(low (_H7826_01_Gain| (0+256)))& (0+255)
  6245  0F54  0086               	movwf	6
  6246  0F55  3001               	movlw	1	; select bank2/3
  6247  0F56  0087               	movwf	7
  6248  0F57  3F40               	moviw [0]fsr1
  6249  0F58  00C8               	movwf	low ((?_printf| 0+2))
  6250  0F59  3F41               	moviw [1]fsr1
  6251  0F5A                     L7:	
  6252  0F5A  00C9               	movwf	(low ((?_printf| 0+2))+1)
  6253  0F5B  3180  205A  318E   	fcall	_printf
  6254  0F5E                     l604:	
  6255  0F5E  3000               	movlw	0
  6256  0F5F  318D  25E3  318E   	fcall	_mTouch_Check
  6257  0F62  3A00               	xorlw	0
  6258  0F63  1903               	skipnz
  6259  0F64  2F07               	goto	l4278
  6260                           
  6261                           ;User_Interface.c: 109: }
  6262                           ;User_Interface.c: 110: LCD_DisplayClear();
  6263  0F65  3189  216F         	fcall	_LCD_DisplayClear
  6264  0F67  0008               	return
  6265  0F68                     __end_of_Show_PMT_Config:	
  6266                           
  6267                           	psect	text24
  6268  005A                     __ptext24:	
  6269 ;; *************** function _printf *****************
  6270 ;; Defined at:
  6271 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  f               2   38[BANK0 ] PTR const unsigned char 
  6274 ;;		 -> STR_56(12), STR_55(12), STR_54(17), STR_53(17), 
  6275 ;;		 -> STR_52(20), STR_50(14), STR_49(12), STR_48(12), 
  6276 ;;		 -> STR_47(17), STR_46(17), STR_45(17), STR_44(17), 
  6277 ;;		 -> STR_43(17), STR_42(11), STR_41(20), STR_39(14), 
  6278 ;;		 -> STR_38(17), STR_37(17), STR_6(17), STR_5(10), 
  6279 ;;		 -> STR_4(17), STR_3(16), STR_2(17), STR_1(17), 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  val             4   60[BANK0 ] unsigned long 
  6282 ;;  tmpval          4    0        struct .
  6283 ;;  width           2   67[BANK0 ] int 
  6284 ;;  len             2   58[BANK0 ] unsigned int 
  6285 ;;  cp              2   56[BANK0 ] PTR const unsigned char 
  6286 ;;		 -> STR_57(7), STR_51(5), STR_40(5), STR_36(7), 
  6287 ;;		 -> STR_35(7), STR_34(7), STR_33(7), STR_32(7), 
  6288 ;;		 -> STR_31(7), STR_30(7), STR_29(6), STR_28(6), 
  6289 ;;		 -> STR_27(6), STR_26(6), STR_25(5), STR_24(5), 
  6290 ;;		 -> STR_23(5), STR_22(5), STR_21(8), STR_20(8), 
  6291 ;;		 -> STR_19(8), STR_18(7), STR_17(7), STR_16(7), 
  6292 ;;		 -> STR_15(7), STR_14(7), STR_13(6), STR_12(6), 
  6293 ;;		 -> STR_11(6), STR_10(6), STR_9(5), STR_8(5), 
  6294 ;;		 -> STR_7(5), 
  6295 ;;  prec            2   54[BANK0 ] int 
  6296 ;;  c               1   66[BANK0 ] char 
  6297 ;;  flag            1   65[BANK0 ] unsigned char 
  6298 ;;  ap              1   64[BANK0 ] PTR void [1]
  6299 ;;		 -> ?_printf(2), 
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  2   38[BANK0 ] int 
  6302 ;; Registers used:
  6303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6309 ;;      Params:         0      10       0       0       0       0
  6310 ;;      Locals:         0      15       0       0       0       0
  6311 ;;      Temps:          0       6       0       0       0       0
  6312 ;;      Totals:         0      31       0       0       0       0
  6313 ;;Total ram usage:       31 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    5
  6316 ;; This function calls:
  6317 ;;		___lldiv
  6318 ;;		___llmod
  6319 ;;		___wmul
  6320 ;;		_isdigit
  6321 ;;		_putch
  6322 ;; This function is called by:
  6323 ;;		_main
  6324 ;;		_StartUp_Menu
  6325 ;;		_Ssetting_PMT_Config
  6326 ;;		_Show_PMT_Config
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           
  6331                           ;psect for function _printf
  6332  005A                     _printf:	
  6333                           
  6334                           ;doprnt.c: 466: va_list ap;
  6335                           ;doprnt.c: 499: signed char c;
  6336                           ;doprnt.c: 501: int width;
  6337                           ;doprnt.c: 504: int prec;
  6338                           ;doprnt.c: 508: unsigned char flag;
  6339                           ;doprnt.c: 523: union {
  6340                           ;doprnt.c: 524: unsigned long vd;
  6341                           ;doprnt.c: 525: double integ;
  6342                           ;doprnt.c: 526: } tmpval;
  6343                           ;doprnt.c: 528: unsigned long val;
  6344                           ;doprnt.c: 529: unsigned len;
  6345                           ;doprnt.c: 530: const char * cp;
  6346                           ;doprnt.c: 533: *ap = __va_start();
  6347                           
  6348                           ;incstack = 0
  6349                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6350  005A  3048               	movlw	(low ((?_printf| 0+2)))& (0+255)
  6351  005B  0020               	movlb	0	; select bank0
  6352  005C  00D0               	movwf	??_printf
  6353  005D  0850               	movf	??_printf,w
  6354  005E  00E0               	movwf	printf@ap
  6355  005F                     l3978:	
  6356                           ;doprnt.c: 536: while(c = *f++) {
  6357                           
  6358  005F  0020               	movlb	0	; select bank0
  6359  0060  0847               	movf	printf@f+1,w
  6360  0061  00D1               	movwf	??_printf+1
  6361  0062  0846               	movf	printf@f,w
  6362  0063  00D0               	movwf	??_printf
  6363  0064  0AC6               	incf	printf@f,f
  6364  0065  1903               	skipnz
  6365  0066  0AC7               	incf	printf@f+1,f
  6366  0067  0850               	movf	??_printf,w
  6367  0068  0084               	movwf	4
  6368  0069  0851               	movf	??_printf+1,w
  6369  006A  0085               	movwf	5
  6370  006B  0800               	movf	0,w	;code access
  6371  006C  00D2               	movwf	??_printf+2
  6372  006D  0852               	movf	??_printf+2,w
  6373  006E  00E2               	movwf	printf@c
  6374  006F  0862               	movf	printf@c,w
  6375  0070  1903               	btfsc	3,2
  6376  0071  0008               	return
  6377                           
  6378                           ;doprnt.c: 538: if(c != '%')
  6379  0072  3025               	movlw	37
  6380  0073  0662               	xorwf	printf@c,w
  6381  0074  1903               	btfsc	3,2
  6382  0075  287B               	goto	l3848
  6383                           
  6384                           ;doprnt.c: 540: {
  6385                           ;doprnt.c: 541: (putch(c) );
  6386  0076  0862               	movf	printf@c,w
  6387  0077  3189  2102  3180   	fcall	_putch
  6388                           
  6389                           ;doprnt.c: 542: continue;
  6390  007A  285F               	goto	l3978
  6391  007B                     l3848:	
  6392                           
  6393                           ;doprnt.c: 543: }
  6394                           ;doprnt.c: 546: width = 0;
  6395  007B  0020               	movlb	0	; select bank0
  6396  007C  01E3               	clrf	printf@width
  6397  007D  01E4               	clrf	printf@width+1
  6398                           
  6399                           ;doprnt.c: 548: flag = 0;
  6400  007E  01E1               	clrf	printf@flag
  6401                           
  6402                           ;doprnt.c: 551: switch(*f) {
  6403                           
  6404                           ;doprnt.c: 550: for(;;) {
  6405  007F  2885               	goto	l3854
  6406  0080                     l631:	
  6407                           ;doprnt.c: 579: case '0':
  6408                           
  6409                           
  6410                           ;doprnt.c: 580: flag |= 0x04;
  6411  0080  1561               	bsf	printf@flag,2
  6412                           
  6413                           ;doprnt.c: 581: f++;
  6414  0081  3001               	movlw	1
  6415  0082  07C6               	addwf	printf@f,f
  6416  0083  3000               	movlw	0
  6417  0084  3DC7               	addwfc	printf@f+1,f
  6418  0085                     l3854:	
  6419                           ;doprnt.c: 584: }
  6420                           
  6421                           ;doprnt.c: 582: continue;
  6422                           
  6423  0085  0846               	movf	printf@f,w
  6424  0086  0084               	movwf	4
  6425  0087  0847               	movf	printf@f+1,w
  6426  0088  0085               	movwf	5
  6427  0089  0800               	movf	0,w	;code access
  6428                           
  6429                           ; Switch size 1, requested type "space"
  6430                           ; Number of cases is 1, Range of values is 48 to 48
  6431                           ; switch strategies available:
  6432                           ; Name         Instructions Cycles
  6433                           ; simple_byte            4     3 (average)
  6434                           ; direct_byte           11     9 (fixed)
  6435                           ; jumptable            263     9 (fixed)
  6436                           ;	Chosen strategy is simple_byte
  6437  008A  3A30               	xorlw	48	; case 48
  6438  008B  1903               	skipnz
  6439  008C  2880               	goto	l631
  6440  008D  288E               	goto	l3856
  6441  008E                     l3856:	
  6442                           ;doprnt.c: 586: }
  6443                           
  6444                           ;doprnt.c: 585: break;
  6445                           
  6446                           
  6447                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6448  008E  0846               	movf	printf@f,w
  6449  008F  0084               	movwf	4
  6450  0090  0847               	movf	printf@f+1,w
  6451  0091  0085               	movwf	5
  6452  0092  0800               	movf	0,w	;code access
  6453  0093  3189  2150  3180   	fcall	_isdigit
  6454  0096  1C03               	btfss	3,0
  6455  0097  2927               	goto	l3900
  6456                           
  6457                           ;doprnt.c: 598: width = 0;
  6458  0098  0020               	movlb	0	; select bank0
  6459  0099  01E3               	clrf	printf@width
  6460  009A  01E4               	clrf	printf@width+1
  6461  009B                     l3860:	
  6462                           ;doprnt.c: 599: do {
  6463                           
  6464                           
  6465                           ;doprnt.c: 600: width *= 10;
  6466  009B  300A               	movlw	10
  6467  009C  0020               	movlb	0	; select bank0
  6468  009D  00A0               	movwf	___wmul@multiplier
  6469  009E  3000               	movlw	0
  6470  009F  00A1               	movwf	___wmul@multiplier+1
  6471  00A0  0864               	movf	printf@width+1,w
  6472  00A1  00A3               	movwf	___wmul@multiplicand+1
  6473  00A2  0863               	movf	printf@width,w
  6474  00A3  00A2               	movwf	___wmul@multiplicand
  6475  00A4  318A  226D  3180   	fcall	___wmul
  6476  00A7  0020               	movlb	0	; select bank0
  6477  00A8  0821               	movf	?___wmul+1,w
  6478  00A9  00E4               	movwf	printf@width+1
  6479  00AA  0820               	movf	?___wmul,w
  6480  00AB  00E3               	movwf	printf@width
  6481                           
  6482                           ;doprnt.c: 601: width += *f++ - '0';
  6483  00AC  0846               	movf	printf@f,w
  6484  00AD  0084               	movwf	4
  6485  00AE  0847               	movf	printf@f+1,w
  6486  00AF  0085               	movwf	5
  6487  00B0  0800               	movf	0,w	;code access
  6488  00B1  3ED0               	addlw	208
  6489  00B2  00D0               	movwf	??_printf
  6490  00B3  30FF               	movlw	255
  6491  00B4  1803               	skipnc
  6492  00B5  3000               	movlw	0
  6493  00B6  00D1               	movwf	??_printf+1
  6494  00B7  0850               	movf	??_printf,w
  6495  00B8  07E3               	addwf	printf@width,f
  6496  00B9  0851               	movf	??_printf+1,w
  6497  00BA  3DE4               	addwfc	printf@width+1,f
  6498  00BB  3001               	movlw	1
  6499  00BC  07C6               	addwf	printf@f,f
  6500  00BD  3000               	movlw	0
  6501  00BE  3DC7               	addwfc	printf@f+1,f
  6502                           
  6503                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6504  00BF  0846               	movf	printf@f,w
  6505  00C0  0084               	movwf	4
  6506  00C1  0847               	movf	printf@f+1,w
  6507  00C2  0085               	movwf	5
  6508  00C3  0800               	movf	0,w	;code access
  6509  00C4  3189  2150  3180   	fcall	_isdigit
  6510  00C7  1C03               	btfss	3,0
  6511  00C8  2927               	goto	l3900
  6512  00C9  289B               	goto	l3860
  6513  00CA                     l642:	
  6514                           ;doprnt.c: 641: case 'l':
  6515                           
  6516                           ;doprnt.c: 638: goto alldone;
  6517                           
  6518                           ;doprnt.c: 637: case 0:
  6519                           
  6520                           ;doprnt.c: 635: switch(c = *f++) {
  6521                           
  6522                           ;doprnt.c: 608: }
  6523                           ;doprnt.c: 633: loop:
  6524                           
  6525                           
  6526                           ;doprnt.c: 643: flag |= 0x10;
  6527  00CA  1661               	bsf	printf@flag,4
  6528                           
  6529                           ;doprnt.c: 644: goto loop;
  6530  00CB  2927               	goto	l3900
  6531  00CC                     l3868:	
  6532                           ;doprnt.c: 728: case 's':
  6533                           
  6534                           ;doprnt.c: 698: case 'i':
  6535                           ;doprnt.c: 699: break;
  6536                           
  6537                           ;doprnt.c: 697: case 'd':
  6538                           
  6539                           
  6540                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6541  00CC  0860               	movf	printf@ap,w
  6542  00CD  0086               	movwf	6
  6543  00CE  0187               	clrf	7
  6544  00CF  3F40               	moviw [0]fsr1
  6545  00D0  00D8               	movwf	printf@cp
  6546  00D1  3F41               	moviw [1]fsr1
  6547  00D2  00D9               	movwf	printf@cp+1
  6548  00D3  3002               	movlw	2
  6549  00D4  00D0               	movwf	??_printf
  6550  00D5  0850               	movf	??_printf,w
  6551  00D6  07E0               	addwf	printf@ap,f
  6552                           
  6553                           ;doprnt.c: 740: if(!cp)
  6554  00D7  0858               	movf	printf@cp,w
  6555  00D8  0459               	iorwf	printf@cp+1,w
  6556  00D9  1D03               	btfss	3,2
  6557  00DA  28DF               	goto	l3876
  6558                           
  6559                           ;doprnt.c: 741: cp = "(null)";
  6560  00DB  30DB               	movlw	low (STR_57| (0+32768))
  6561  00DC  00D8               	movwf	printf@cp
  6562  00DD  3083               	movlw	high (STR_57| (0+32768))
  6563  00DE  00D9               	movwf	printf@cp+1
  6564  00DF                     l3876:	
  6565                           
  6566                           ;doprnt.c: 745: len = 0;
  6567  00DF  01DA               	clrf	printf@len
  6568  00E0  01DB               	clrf	printf@len+1
  6569  00E1                     l3880:	
  6570                           ;doprnt.c: 746: while(cp[len])
  6571                           
  6572  00E1  0858               	movf	printf@cp,w
  6573  00E2  075A               	addwf	printf@len,w
  6574  00E3  0084               	movwf	4
  6575  00E4  0859               	movf	printf@cp+1,w
  6576  00E5  3D5B               	addwfc	printf@len+1,w
  6577  00E6  0085               	movwf	5
  6578  00E7  0012               	moviw fsr0++
  6579  00E8  1903               	btfsc	3,2
  6580  00E9  28EF               	goto	l3882
  6581                           
  6582                           ;doprnt.c: 747: len++;
  6583  00EA  3001               	movlw	1
  6584  00EB  07DA               	addwf	printf@len,f
  6585  00EC  3000               	movlw	0
  6586  00ED  3DDB               	addwfc	printf@len+1,f
  6587  00EE  28E1               	goto	l3880
  6588  00EF                     l3882:	
  6589                           
  6590                           ;doprnt.c: 757: if(width > len)
  6591  00EF  0864               	movf	printf@width+1,w
  6592  00F0  025B               	subwf	printf@len+1,w
  6593  00F1  1D03               	skipz
  6594  00F2  28F5               	goto	u3545
  6595  00F3  0863               	movf	printf@width,w
  6596  00F4  025A               	subwf	printf@len,w
  6597  00F5                     u3545:	
  6598  00F5  1803               	skipnc
  6599  00F6  28FC               	goto	l3886
  6600                           
  6601                           ;doprnt.c: 758: width -= len;
  6602  00F7  085A               	movf	printf@len,w
  6603  00F8  02E3               	subwf	printf@width,f
  6604  00F9  085B               	movf	printf@len+1,w
  6605  00FA  3BE4               	subwfb	printf@width+1,f
  6606  00FB  28FE               	goto	l3890
  6607  00FC                     l3886:	
  6608                           
  6609                           ;doprnt.c: 759: else
  6610                           ;doprnt.c: 760: width = 0;
  6611  00FC  01E3               	clrf	printf@width
  6612  00FD  01E4               	clrf	printf@width+1
  6613  00FE                     l3890:	
  6614                           ;doprnt.c: 764: while(width--)
  6615                           
  6616  00FE  30FF               	movlw	255
  6617  00FF  0020               	movlb	0	; select bank0
  6618  0100  07E3               	addwf	printf@width,f
  6619  0101  30FF               	movlw	255
  6620  0102  3DE4               	addwfc	printf@width+1,f
  6621  0103  0A63               	incf	printf@width,w
  6622  0104  1903               	btfsc	3,2
  6623  0105  0A64               	incf	printf@width+1,w
  6624  0106  1903               	btfsc	3,2
  6625  0107  291A               	goto	l3896
  6626                           
  6627                           ;doprnt.c: 765: (putch(' ') );
  6628  0108  3020               	movlw	32
  6629  0109  3189  2102  3180   	fcall	_putch
  6630  010C  28FE               	goto	l3890
  6631  010D                     l3892:	
  6632                           ;doprnt.c: 767: while(len--)
  6633                           
  6634                           
  6635                           ;doprnt.c: 768: (putch(*cp++) );
  6636  010D  0858               	movf	printf@cp,w
  6637  010E  0084               	movwf	4
  6638  010F  0859               	movf	printf@cp+1,w
  6639  0110  0085               	movwf	5
  6640  0111  0800               	movf	0,w	;code access
  6641  0112  3189  2102  3180   	fcall	_putch
  6642  0115  3001               	movlw	1
  6643  0116  0020               	movlb	0	; select bank0
  6644  0117  07D8               	addwf	printf@cp,f
  6645  0118  3000               	movlw	0
  6646  0119  3DD9               	addwfc	printf@cp+1,f
  6647  011A                     l3896:	
  6648  011A  3001               	movlw	1
  6649  011B  02DA               	subwf	printf@len,f
  6650  011C  3000               	movlw	0
  6651  011D  3BDB               	subwfb	printf@len+1,f
  6652  011E  0A5A               	incf	printf@len,w
  6653  011F  1D03               	skipz
  6654  0120  290D               	goto	l3892
  6655  0121  0A5B               	incf	printf@len+1,w
  6656  0122  1903               	btfsc	3,2
  6657  0123  285F               	goto	l3978
  6658  0124  290D               	goto	l3892
  6659  0125                     l660:	
  6660                           ;doprnt.c: 817: case 'u':
  6661                           
  6662                           ;doprnt.c: 813: continue;
  6663                           
  6664                           ;doprnt.c: 802: default:
  6665                           
  6666                           ;doprnt.c: 774: continue;
  6667                           
  6668                           
  6669                           ;doprnt.c: 818: flag |= 0x40;
  6670  0125  1761               	bsf	printf@flag,6
  6671                           
  6672                           ;doprnt.c: 822: }
  6673                           
  6674                           ;doprnt.c: 819: break;
  6675  0126  2948               	goto	l645
  6676  0127                     l3900:	
  6677  0127  0020               	movlb	0	; select bank0
  6678  0128  0847               	movf	printf@f+1,w
  6679  0129  00D1               	movwf	??_printf+1
  6680  012A  0846               	movf	printf@f,w
  6681  012B  00D0               	movwf	??_printf
  6682  012C  0AC6               	incf	printf@f,f
  6683  012D  1903               	skipnz
  6684  012E  0AC7               	incf	printf@f+1,f
  6685  012F  0850               	movf	??_printf,w
  6686  0130  0084               	movwf	4
  6687  0131  0851               	movf	??_printf+1,w
  6688  0132  0085               	movwf	5
  6689  0133  0800               	movf	0,w	;code access
  6690  0134  00E2               	movwf	printf@c
  6691                           
  6692                           ; Switch size 1, requested type "space"
  6693                           ; Number of cases is 6, Range of values is 0 to 117
  6694                           ; switch strategies available:
  6695                           ; Name         Instructions Cycles
  6696                           ; simple_byte           19    10 (average)
  6697                           ; direct_byte          242     6 (fixed)
  6698                           ; jumptable            260     6 (fixed)
  6699                           ;	Chosen strategy is simple_byte
  6700  0135  3A00               	xorlw	0	; case 0
  6701  0136  1903               	skipnz
  6702  0137  2A7D               	goto	l688
  6703  0138  3A64               	xorlw	100	; case 100
  6704  0139  1903               	skipnz
  6705  013A  2948               	goto	l645
  6706  013B  3A0D               	xorlw	13	; case 105
  6707  013C  1903               	skipnz
  6708  013D  2948               	goto	l645
  6709  013E  3A05               	xorlw	5	; case 108
  6710  013F  1903               	skipnz
  6711  0140  28CA               	goto	l642
  6712  0141  3A1F               	xorlw	31	; case 115
  6713  0142  1903               	skipnz
  6714  0143  28CC               	goto	l3868
  6715  0144  3A06               	xorlw	6	; case 117
  6716  0145  1903               	skipnz
  6717  0146  2925               	goto	l660
  6718  0147  285F               	goto	l3978
  6719  0148                     l645:	
  6720                           
  6721                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  6722  0148  1B61               	btfsc	printf@flag,6
  6723  0149  297F               	goto	l661
  6724                           
  6725                           ;doprnt.c: 1253: {
  6726                           ;doprnt.c: 1255: if(flag & 0x10)
  6727  014A  1E61               	btfss	printf@flag,4
  6728  014B  2959               	goto	l3908
  6729                           
  6730                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  6731  014C  0860               	movf	printf@ap,w
  6732  014D  0086               	movwf	6
  6733  014E  0187               	clrf	7
  6734  014F  3F40               	moviw [0]fsr1
  6735  0150  00DC               	movwf	printf@val
  6736  0151  3F41               	moviw [1]fsr1
  6737  0152  00DD               	movwf	printf@val+1
  6738  0153  3F42               	moviw [2]fsr1
  6739  0154  00DE               	movwf	printf@val+2
  6740  0155  3F43               	moviw [3]fsr1
  6741  0156  00DF               	movwf	printf@val+3
  6742  0157  3004               	movlw	4
  6743  0158  296A               	goto	L9
  6744  0159                     l3908:	
  6745                           
  6746                           ;doprnt.c: 1257: else
  6747                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  6748  0159  0860               	movf	printf@ap,w
  6749  015A  0086               	movwf	6
  6750  015B  0187               	clrf	7
  6751  015C  3F40               	moviw [0]fsr1
  6752  015D  00D0               	movwf	??_printf
  6753  015E  3F41               	moviw [1]fsr1
  6754  015F  00D1               	movwf	??_printf+1
  6755  0160  0850               	movf	??_printf,w
  6756  0161  00DC               	movwf	printf@val
  6757  0162  0851               	movf	??_printf+1,w
  6758  0163  00DD               	movwf	printf@val+1
  6759  0164  0D89               	rlf	9,f
  6760  0165  3B89               	subwfb	9,f
  6761  0166  0989               	comf	9,f
  6762  0167  00DE               	movwf	printf@val+2
  6763  0168  00DF               	movwf	printf@val+3
  6764  0169  3002               	movlw	2
  6765  016A                     L9:	
  6766  016A  00D0               	movwf	??_printf
  6767  016B  0850               	movf	??_printf,w
  6768  016C  07E0               	addwf	printf@ap,f
  6769                           
  6770                           ;doprnt.c: 1261: if((long)val < 0) {
  6771  016D  1FDF               	btfss	printf@val+3,7
  6772  016E  299F               	goto	l3926
  6773                           
  6774                           ;doprnt.c: 1262: flag |= 0x03;
  6775  016F  3003               	movlw	3
  6776  0170  00D0               	movwf	??_printf
  6777  0171  0850               	movf	??_printf,w
  6778  0172  04E1               	iorwf	printf@flag,f
  6779                           
  6780                           ;doprnt.c: 1263: val = -val;
  6781  0173  09DC               	comf	printf@val,f
  6782  0174  09DD               	comf	printf@val+1,f
  6783  0175  09DE               	comf	printf@val+2,f
  6784  0176  09DF               	comf	printf@val+3,f
  6785  0177  0ADC               	incf	printf@val,f
  6786  0178  1903               	skipnz
  6787  0179  0ADD               	incf	printf@val+1,f
  6788  017A  1903               	skipnz
  6789  017B  0ADE               	incf	printf@val+2,f
  6790  017C  1903               	skipnz
  6791  017D  0ADF               	incf	printf@val+3,f
  6792                           
  6793                           ;doprnt.c: 1264: }
  6794                           ;doprnt.c: 1266: }
  6795  017E  299F               	goto	l3926
  6796  017F                     l661:	
  6797                           
  6798                           ;doprnt.c: 1268: else
  6799                           ;doprnt.c: 1273: {
  6800                           ;doprnt.c: 1281: if(flag & 0x10)
  6801  017F  1E61               	btfss	printf@flag,4
  6802  0180  298E               	goto	l3922
  6803                           
  6804                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  6805  0181  0860               	movf	printf@ap,w
  6806  0182  0086               	movwf	6
  6807  0183  0187               	clrf	7
  6808  0184  3F40               	moviw [0]fsr1
  6809  0185  00DC               	movwf	printf@val
  6810  0186  3F41               	moviw [1]fsr1
  6811  0187  00DD               	movwf	printf@val+1
  6812  0188  3F42               	moviw [2]fsr1
  6813  0189  00DE               	movwf	printf@val+2
  6814  018A  3F43               	moviw [3]fsr1
  6815  018B  00DF               	movwf	printf@val+3
  6816  018C  3004               	movlw	4
  6817  018D  299C               	goto	L10
  6818  018E                     l3922:	
  6819                           
  6820                           ;doprnt.c: 1283: else
  6821                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6822  018E  0860               	movf	printf@ap,w
  6823  018F  0086               	movwf	6
  6824  0190  0187               	clrf	7
  6825  0191  3F40               	moviw [0]fsr1
  6826  0192  00D0               	movwf	??_printf
  6827  0193  3F41               	moviw [1]fsr1
  6828  0194  00D1               	movwf	??_printf+1
  6829  0195  0850               	movf	??_printf,w
  6830  0196  00DC               	movwf	printf@val
  6831  0197  0851               	movf	??_printf+1,w
  6832  0198  00DD               	movwf	printf@val+1
  6833  0199  01DE               	clrf	printf@val+2
  6834  019A  01DF               	clrf	printf@val+3
  6835  019B  3002               	movlw	2
  6836  019C                     L10:	
  6837  019C  00D0               	movwf	??_printf
  6838  019D  0850               	movf	??_printf,w
  6839  019E  07E0               	addwf	printf@ap,f
  6840  019F                     l3926:	
  6841                           
  6842                           ;doprnt.c: 1287: }
  6843                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6844  019F  01E2               	clrf	printf@c
  6845  01A0  0AE2               	incf	printf@c,f
  6846  01A1  300A               	movlw	10
  6847  01A2  0662               	xorwf	printf@c,w
  6848  01A3  1903               	btfsc	3,2
  6849  01A4  29D2               	goto	l3938
  6850  01A5                     l3932:	
  6851                           
  6852                           ;doprnt.c: 1306: if(val < dpowers[c])
  6853  01A5  0862               	movf	printf@c,w
  6854  01A6  00D0               	movwf	??_printf
  6855  01A7  01D1               	clrf	??_printf+1
  6856  01A8  35D0               	lslf	??_printf,f
  6857  01A9  0DD1               	rlf	??_printf+1,f
  6858  01AA  35D0               	lslf	??_printf,f
  6859  01AB  0DD1               	rlf	??_printf+1,f
  6860  01AC  307E               	movlw	low (_dpowers| (0+32768))
  6861  01AD  0750               	addwf	??_printf,w
  6862  01AE  0084               	movwf	4
  6863  01AF  3082               	movlw	high (_dpowers| (0+32768))
  6864  01B0  3D51               	addwfc	??_printf+1,w
  6865  01B1  0085               	movwf	5
  6866  01B2  3F00               	moviw [0]fsr0
  6867  01B3  00D2               	movwf	??_printf+2
  6868  01B4  3F01               	moviw [1]fsr0
  6869  01B5  00D3               	movwf	??_printf+3
  6870  01B6  3F02               	moviw [2]fsr0
  6871  01B7  00D4               	movwf	??_printf+4
  6872  01B8  3F03               	moviw [3]fsr0
  6873  01B9  00D5               	movwf	??_printf+5
  6874  01BA  0855               	movf	??_printf+5,w
  6875  01BB  025F               	subwf	printf@val+3,w
  6876  01BC  1D03               	skipz
  6877  01BD  29C8               	goto	u3625
  6878  01BE  0854               	movf	??_printf+4,w
  6879  01BF  025E               	subwf	printf@val+2,w
  6880  01C0  1D03               	skipz
  6881  01C1  29C8               	goto	u3625
  6882  01C2  0853               	movf	??_printf+3,w
  6883  01C3  025D               	subwf	printf@val+1,w
  6884  01C4  1D03               	skipz
  6885  01C5  29C8               	goto	u3625
  6886  01C6  0852               	movf	??_printf+2,w
  6887  01C7  025C               	subwf	printf@val,w
  6888  01C8                     u3625:	
  6889  01C8  1C03               	btfss	3,0
  6890  01C9  29D2               	goto	l3938
  6891                           
  6892                           ;doprnt.c: 1307: break;
  6893  01CA  3001               	movlw	1
  6894  01CB  00D0               	movwf	??_printf
  6895  01CC  0850               	movf	??_printf,w
  6896  01CD  07E2               	addwf	printf@c,f
  6897  01CE  300A               	movlw	10
  6898  01CF  0662               	xorwf	printf@c,w
  6899  01D0  1D03               	btfss	3,2
  6900  01D1  29A5               	goto	l3932
  6901  01D2                     l3938:	
  6902                           
  6903                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6904  01D2  0863               	movf	printf@width,w
  6905  01D3  0464               	iorwf	printf@width+1,w
  6906  01D4  1903               	btfsc	3,2
  6907  01D5  29DE               	goto	l671
  6908  01D6  0861               	movf	printf@flag,w
  6909  01D7  3903               	andlw	3
  6910  01D8  1903               	btfsc	3,2
  6911  01D9  29DE               	goto	l671
  6912                           
  6913                           ;doprnt.c: 1346: width--;
  6914  01DA  30FF               	movlw	255
  6915  01DB  07E3               	addwf	printf@width,f
  6916  01DC  30FF               	movlw	255
  6917  01DD  3DE4               	addwfc	printf@width+1,f
  6918  01DE                     l671:	
  6919                           
  6920                           ;doprnt.c: 1381: if(width > c)
  6921  01DE  0862               	movf	printf@c,w
  6922  01DF  00D0               	movwf	??_printf
  6923  01E0  01D1               	clrf	??_printf+1
  6924  01E1  1BD0               	btfsc	??_printf,7
  6925  01E2  03D1               	decf	??_printf+1,f
  6926  01E3  0851               	movf	??_printf+1,w
  6927  01E4  3A80               	xorlw	128
  6928  01E5  00D2               	movwf	??_printf+2
  6929  01E6  0864               	movf	printf@width+1,w
  6930  01E7  3A80               	xorlw	128
  6931  01E8  0252               	subwf	??_printf+2,w
  6932  01E9  1D03               	skipz
  6933  01EA  29ED               	goto	u3665
  6934  01EB  0863               	movf	printf@width,w
  6935  01EC  0250               	subwf	??_printf,w
  6936  01ED                     u3665:	
  6937  01ED  1803               	skipnc
  6938  01EE  29FA               	goto	l3946
  6939                           
  6940                           ;doprnt.c: 1382: width -= c;
  6941  01EF  0020               	movlb	0	; select bank0
  6942  01F0  0862               	movf	printf@c,w
  6943  01F1  00D0               	movwf	??_printf
  6944  01F2  01D1               	clrf	??_printf+1
  6945  01F3  1BD0               	btfsc	??_printf,7
  6946  01F4  03D1               	decf	??_printf+1,f
  6947  01F5  0850               	movf	??_printf,w
  6948  01F6  02E3               	subwf	printf@width,f
  6949  01F7  0851               	movf	??_printf+1,w
  6950  01F8  3BE4               	subwfb	printf@width+1,f
  6951  01F9  29FD               	goto	l3948
  6952  01FA                     l3946:	
  6953                           
  6954                           ;doprnt.c: 1383: else
  6955                           ;doprnt.c: 1384: width = 0;
  6956  01FA  0020               	movlb	0	; select bank0
  6957  01FB  01E3               	clrf	printf@width
  6958  01FC  01E4               	clrf	printf@width+1
  6959  01FD                     l3948:	
  6960                           
  6961                           ;doprnt.c: 1387: if(flag & 0x04) {
  6962  01FD  1D61               	btfss	printf@flag,2
  6963  01FE  2A16               	goto	l3960
  6964                           
  6965                           ;doprnt.c: 1392: if(flag & 0x03)
  6966  01FF  0861               	movf	printf@flag,w
  6967  0200  3903               	andlw	3
  6968  0201  1903               	btfsc	3,2
  6969  0202  2A07               	goto	l3954
  6970                           
  6971                           ;doprnt.c: 1393: (putch('-') );
  6972  0203  302D               	movlw	45
  6973  0204  3189  2102  3180   	fcall	_putch
  6974  0207                     l3954:	
  6975                           
  6976                           ;doprnt.c: 1415: if(width)
  6977  0207  0020               	movlb	0	; select bank0
  6978  0208                     L11:	
  6979  0208  0863               	movf	printf@width,w
  6980  0209  0464               	iorwf	printf@width+1,w
  6981  020A  1903               	btfsc	3,2
  6982  020B  2A2F               	goto	l3970
  6983                           
  6984                           ;doprnt.c: 1417: (putch('0') );
  6985                           
  6986                           ;doprnt.c: 1416: do
  6987  020C  3030               	movlw	48
  6988  020D  3189  2102  3180   	fcall	_putch
  6989                           
  6990                           ;doprnt.c: 1418: while(--width);
  6991  0210  30FF               	movlw	255
  6992  0211  0020               	movlb	0	; select bank0
  6993  0212  07E3               	addwf	printf@width,f
  6994  0213  30FF               	movlw	255
  6995  0214  3DE4               	addwfc	printf@width+1,f
  6996  0215  2A08               	goto	L11
  6997  0216                     l3960:	
  6998                           ;doprnt.c: 1420: } else
  6999                           
  7000                           
  7001                           ;doprnt.c: 1422: {
  7002                           ;doprnt.c: 1424: if(width
  7003                           ;doprnt.c: 1428: )
  7004  0216  0863               	movf	printf@width,w
  7005  0217  0464               	iorwf	printf@width+1,w
  7006  0218  1903               	btfsc	3,2
  7007  0219  2A27               	goto	l3966
  7008  021A                     l3962:	
  7009                           ;doprnt.c: 1429: do
  7010                           
  7011                           
  7012                           ;doprnt.c: 1430: (putch(' ') );
  7013  021A  3020               	movlw	32
  7014  021B  3189  2102  3180   	fcall	_putch
  7015                           
  7016                           ;doprnt.c: 1431: while(--width);
  7017  021E  30FF               	movlw	255
  7018  021F  0020               	movlb	0	; select bank0
  7019  0220  07E3               	addwf	printf@width,f
  7020  0221  30FF               	movlw	255
  7021  0222  3DE4               	addwfc	printf@width+1,f
  7022  0223  0863               	movf	printf@width,w
  7023  0224  0464               	iorwf	printf@width+1,w
  7024  0225  1D03               	btfss	3,2
  7025  0226  2A1A               	goto	l3962
  7026  0227                     l3966:	
  7027                           
  7028                           ;doprnt.c: 1438: if(flag & 0x03)
  7029  0227  0861               	movf	printf@flag,w
  7030  0228  3903               	andlw	3
  7031  0229  1903               	btfsc	3,2
  7032  022A  2A2F               	goto	l3970
  7033                           
  7034                           ;doprnt.c: 1439: (putch('-') );
  7035  022B  302D               	movlw	45
  7036  022C  3189  2102  3180   	fcall	_putch
  7037  022F                     l3970:	
  7038                           
  7039                           ;doprnt.c: 1469: }
  7040                           ;doprnt.c: 1472: prec = c;
  7041  022F  0020               	movlb	0	; select bank0
  7042  0230  0862               	movf	printf@c,w
  7043  0231  00D6               	movwf	printf@prec
  7044  0232  01D7               	clrf	printf@prec+1
  7045  0233  1BD6               	btfsc	printf@prec,7
  7046  0234  03D7               	decf	printf@prec+1,f
  7047  0235                     l3976:	
  7048                           ;doprnt.c: 1474: while(prec--) {
  7049                           
  7050  0235  30FF               	movlw	255
  7051  0236  0020               	movlb	0	; select bank0
  7052  0237  07D6               	addwf	printf@prec,f
  7053  0238  30FF               	movlw	255
  7054  0239  3DD7               	addwfc	printf@prec+1,f
  7055  023A  0A56               	incf	printf@prec,w
  7056  023B  1903               	btfsc	3,2
  7057  023C  0A57               	incf	printf@prec+1,w
  7058  023D  1903               	btfsc	3,2
  7059  023E  285F               	goto	l3978
  7060                           
  7061                           ;doprnt.c: 1478: {
  7062                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7063  023F  3000               	movlw	0
  7064  0240  00BD               	movwf	___llmod@divisor+3
  7065  0241  3000               	movlw	0
  7066  0242  00BC               	movwf	___llmod@divisor+2
  7067  0243  3000               	movlw	0
  7068  0244  00BB               	movwf	___llmod@divisor+1
  7069  0245  300A               	movlw	10
  7070  0246  00BA               	movwf	___llmod@divisor
  7071  0247  0857               	movf	printf@prec+1,w
  7072  0248  0085               	movwf	5
  7073  0249  0856               	movf	printf@prec,w
  7074  024A  0084               	movwf	4
  7075  024B  3584               	lslf	4,f
  7076  024C  0D85               	rlf	5,f
  7077  024D  3584               	lslf	4,f
  7078  024E  0D85               	rlf	5,f
  7079  024F  307E               	movlw	low (_dpowers| (0+32768))
  7080  0250  0784               	addwf	4,f
  7081  0251  3082               	movlw	high (_dpowers| (0+32768))
  7082  0252  3D85               	addwfc	5,f
  7083  0253  3F00               	moviw [0]fsr0
  7084  0254  00AC               	movwf	___lldiv@divisor
  7085  0255  3F01               	moviw [1]fsr0
  7086  0256  00AD               	movwf	___lldiv@divisor+1
  7087  0257  3F02               	moviw [2]fsr0
  7088  0258  00AE               	movwf	___lldiv@divisor+2
  7089  0259  3F03               	moviw [3]fsr0
  7090  025A  00AF               	movwf	___lldiv@divisor+3
  7091  025B  085F               	movf	printf@val+3,w
  7092  025C  00B3               	movwf	___lldiv@dividend+3
  7093  025D  085E               	movf	printf@val+2,w
  7094  025E  00B2               	movwf	___lldiv@dividend+2
  7095  025F  085D               	movf	printf@val+1,w
  7096  0260  00B1               	movwf	___lldiv@dividend+1
  7097  0261  085C               	movf	printf@val,w
  7098  0262  00B0               	movwf	___lldiv@dividend
  7099  0263  318E  262E  3180   	fcall	___lldiv
  7100  0266  0020               	movlb	0	; select bank0
  7101  0267  082F               	movf	?___lldiv+3,w
  7102  0268  00C1               	movwf	___llmod@dividend+3
  7103  0269  082E               	movf	?___lldiv+2,w
  7104  026A  00C0               	movwf	___llmod@dividend+2
  7105  026B  082D               	movf	?___lldiv+1,w
  7106  026C  00BF               	movwf	___llmod@dividend+1
  7107  026D  082C               	movf	?___lldiv,w
  7108  026E  00BE               	movwf	___llmod@dividend
  7109  026F  318D  255C  3180   	fcall	___llmod
  7110  0272  0020               	movlb	0	; select bank0
  7111  0273  083A               	movf	?___llmod,w
  7112  0274  3E30               	addlw	48
  7113  0275  00D0               	movwf	??_printf
  7114  0276  0850               	movf	??_printf,w
  7115  0277  00E2               	movwf	printf@c
  7116                           
  7117                           ;doprnt.c: 1523: }
  7118                           ;doprnt.c: 1524: (putch(c) );
  7119  0278  0862               	movf	printf@c,w
  7120  0279  3189  2102  3180   	fcall	_putch
  7121  027C  2A35               	goto	l3976
  7122  027D                     l688:	
  7123                           ;doprnt.c: 1540: return 0;
  7124                           ;	Return value of _printf is never used
  7125                           
  7126                           ;doprnt.c: 1525: }
  7127                           ;doprnt.c: 1533: }
  7128                           ;doprnt.c: 1535: alldone:
  7129                           
  7130  027D  0008               	return
  7131  027E                     __end_of_printf:	
  7132                           
  7133                           	psect	text25
  7134  0902                     __ptext25:	
  7135 ;; *************** function _putch *****************
  7136 ;; Defined at:
  7137 ;;		line 64 in file "LCD.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;  c               1    wreg     unsigned char 
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;  c               1    3[BANK0 ] unsigned char 
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  1    wreg      void 
  7144 ;; Registers used:
  7145 ;;		wreg, status,2, status,0, pclath, cstack
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7151 ;;      Params:         0       0       0       0       0       0
  7152 ;;      Locals:         0       1       0       0       0       0
  7153 ;;      Temps:          0       0       0       0       0       0
  7154 ;;      Totals:         0       1       0       0       0       0
  7155 ;;Total ram usage:        1 bytes
  7156 ;; Hardware stack levels used:    1
  7157 ;; Hardware stack levels required when called:    4
  7158 ;; This function calls:
  7159 ;;		_LCD_WriteData
  7160 ;; This function is called by:
  7161 ;;		_printf
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           
  7166                           ;psect for function _putch
  7167  0902                     _putch:	
  7168                           
  7169                           ;incstack = 0
  7170                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  7171                           ;putch@c stored from wreg
  7172  0902  0020               	movlb	0	; select bank0
  7173  0903  00A3               	movwf	putch@c
  7174                           
  7175                           ;LCD.c: 66: LATA3 = 1;
  7176  0904  0022               	movlb	2	; select bank2
  7177  0905  158C               	bsf	12,3	;volatile
  7178                           
  7179                           ;LCD.c: 67: LCD_WriteData(c);
  7180  0906  0020               	movlb	0	; select bank0
  7181  0907  0823               	movf	putch@c,w
  7182  0908  318C  24E2         	fcall	_LCD_WriteData
  7183  090A  0008               	return
  7184  090B                     __end_of_putch:	
  7185                           
  7186                           	psect	text26
  7187  0950                     __ptext26:	
  7188 ;; *************** function _isdigit *****************
  7189 ;; Defined at:
  7190 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/isdigit.c"
  7191 ;; Parameters:    Size  Location     Type
  7192 ;;  c               1    wreg     unsigned char 
  7193 ;; Auto vars:     Size  Location     Type
  7194 ;;  c               1    1[BANK0 ] unsigned char 
  7195 ;; Return value:  Size  Location     Type
  7196 ;;		None               void
  7197 ;; Registers used:
  7198 ;;		wreg, status,2, status,0
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7204 ;;      Params:         0       0       0       0       0       0
  7205 ;;      Locals:         0       2       0       0       0       0
  7206 ;;      Temps:          0       0       0       0       0       0
  7207 ;;      Totals:         0       2       0       0       0       0
  7208 ;;Total ram usage:        2 bytes
  7209 ;; Hardware stack levels used:    1
  7210 ;; Hardware stack levels required when called:    3
  7211 ;; This function calls:
  7212 ;;		Nothing
  7213 ;; This function is called by:
  7214 ;;		_printf
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           
  7219                           ;psect for function _isdigit
  7220  0950                     _isdigit:	
  7221                           
  7222                           ;incstack = 0
  7223                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7224                           ;isdigit@c stored from wreg
  7225  0950  0020               	movlb	0	; select bank0
  7226  0951  00A1               	movwf	isdigit@c
  7227  0952  01A0               	clrf	_isdigit$904
  7228  0953  303A               	movlw	58
  7229  0954  0221               	subwf	isdigit@c,w
  7230  0955  1803               	skipnc
  7231  0956  295D               	goto	l3698
  7232  0957  3030               	movlw	48
  7233  0958  0221               	subwf	isdigit@c,w
  7234  0959  1C03               	skipc
  7235  095A  295D               	goto	l3698
  7236  095B  01A0               	clrf	_isdigit$904
  7237  095C  0AA0               	incf	_isdigit$904,f
  7238  095D                     l3698:	
  7239  095D  0C20               	rrf	_isdigit$904,w
  7240  095E  0008               	return
  7241  095F                     __end_of_isdigit:	
  7242                           
  7243                           	psect	text27
  7244  0A6D                     __ptext27:	
  7245 ;; *************** function ___wmul *****************
  7246 ;; Defined at:
  7247 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul16.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7250 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;  product         2    4[BANK0 ] unsigned int 
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  2    0[BANK0 ] unsigned int 
  7255 ;; Registers used:
  7256 ;;		wreg, status,2, status,0
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7262 ;;      Params:         0       4       0       0       0       0
  7263 ;;      Locals:         0       2       0       0       0       0
  7264 ;;      Temps:          0       0       0       0       0       0
  7265 ;;      Totals:         0       6       0       0       0       0
  7266 ;;Total ram usage:        6 bytes
  7267 ;; Hardware stack levels used:    1
  7268 ;; Hardware stack levels required when called:    3
  7269 ;; This function calls:
  7270 ;;		Nothing
  7271 ;; This function is called by:
  7272 ;;		_printf
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           
  7277                           ;psect for function ___wmul
  7278  0A6D                     ___wmul:	
  7279                           
  7280                           ;incstack = 0
  7281                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7282  0A6D  0020               	movlb	0	; select bank0
  7283  0A6E  01A4               	clrf	___wmul@product
  7284  0A6F  01A5               	clrf	___wmul@product+1
  7285  0A70                     l3704:	
  7286  0A70  1C20               	btfss	___wmul@multiplier,0
  7287  0A71  2A76               	goto	l813
  7288  0A72  0822               	movf	___wmul@multiplicand,w
  7289  0A73  07A4               	addwf	___wmul@product,f
  7290  0A74  0823               	movf	___wmul@multiplicand+1,w
  7291  0A75  3DA5               	addwfc	___wmul@product+1,f
  7292  0A76                     l813:	
  7293  0A76  3001               	movlw	1
  7294  0A77                     u3255:	
  7295  0A77  35A2               	lslf	___wmul@multiplicand,f
  7296  0A78  0DA3               	rlf	___wmul@multiplicand+1,f
  7297  0A79  0B89               	decfsz	9,f
  7298  0A7A  2A77               	goto	u3255
  7299  0A7B  3001               	movlw	1
  7300  0A7C                     u3265:	
  7301  0A7C  36A1               	lsrf	___wmul@multiplier+1,f
  7302  0A7D  0CA0               	rrf	___wmul@multiplier,f
  7303  0A7E  0B89               	decfsz	9,f
  7304  0A7F  2A7C               	goto	u3265
  7305  0A80  0820               	movf	___wmul@multiplier,w
  7306  0A81  0421               	iorwf	___wmul@multiplier+1,w
  7307  0A82  1D03               	btfss	3,2
  7308  0A83  2A70               	goto	l3704
  7309  0A84  0825               	movf	___wmul@product+1,w
  7310  0A85  00A1               	movwf	?___wmul+1
  7311  0A86  0824               	movf	___wmul@product,w
  7312  0A87  00A0               	movwf	?___wmul
  7313  0A88  0008               	return
  7314  0A89                     __end_of___wmul:	
  7315                           
  7316                           	psect	text28
  7317  0D5C                     __ptext28:	
  7318 ;; *************** function ___llmod *****************
  7319 ;; Defined at:
  7320 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/llmod.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  divisor         4   26[BANK0 ] unsigned long 
  7323 ;;  dividend        4   30[BANK0 ] unsigned long 
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;  counter         1   35[BANK0 ] unsigned char 
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  4   26[BANK0 ] unsigned long 
  7328 ;; Registers used:
  7329 ;;		wreg, status,2, status,0
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7335 ;;      Params:         0       8       0       0       0       0
  7336 ;;      Locals:         0       1       0       0       0       0
  7337 ;;      Temps:          0       1       0       0       0       0
  7338 ;;      Totals:         0      10       0       0       0       0
  7339 ;;Total ram usage:       10 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:    3
  7342 ;; This function calls:
  7343 ;;		Nothing
  7344 ;; This function is called by:
  7345 ;;		_printf
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           
  7350                           ;psect for function ___llmod
  7351  0D5C                     ___llmod:	
  7352                           
  7353                           ;incstack = 0
  7354                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7355  0D5C  0020               	movlb	0	; select bank0
  7356  0D5D  083D               	movf	___llmod@divisor+3,w
  7357  0D5E  043C               	iorwf	___llmod@divisor+2,w
  7358  0D5F  043B               	iorwf	___llmod@divisor+1,w
  7359  0D60  043A               	iorwf	___llmod@divisor,w
  7360  0D61  1903               	skipnz
  7361  0D62  2D96               	goto	l3770
  7362  0D63  01C3               	clrf	___llmod@counter
  7363  0D64  0AC3               	incf	___llmod@counter,f
  7364  0D65                     l3760:	
  7365  0D65  1BBD               	btfsc	___llmod@divisor+3,7
  7366  0D66  2D73               	goto	l3762
  7367  0D67  3001               	movlw	1
  7368  0D68                     u3405:	
  7369  0D68  35BA               	lslf	___llmod@divisor,f
  7370  0D69  0DBB               	rlf	___llmod@divisor+1,f
  7371  0D6A  0DBC               	rlf	___llmod@divisor+2,f
  7372  0D6B  0DBD               	rlf	___llmod@divisor+3,f
  7373  0D6C  0B89               	decfsz	9,f
  7374  0D6D  2D68               	goto	u3405
  7375  0D6E  3001               	movlw	1
  7376  0D6F  00C2               	movwf	??___llmod
  7377  0D70  0842               	movf	??___llmod,w
  7378  0D71  07C3               	addwf	___llmod@counter,f
  7379  0D72  2D65               	goto	l3760
  7380  0D73                     l3762:	
  7381  0D73  083D               	movf	___llmod@divisor+3,w
  7382  0D74  0241               	subwf	___llmod@dividend+3,w
  7383  0D75  1D03               	skipz
  7384  0D76  2D81               	goto	u3425
  7385  0D77  083C               	movf	___llmod@divisor+2,w
  7386  0D78  0240               	subwf	___llmod@dividend+2,w
  7387  0D79  1D03               	skipz
  7388  0D7A  2D81               	goto	u3425
  7389  0D7B  083B               	movf	___llmod@divisor+1,w
  7390  0D7C  023F               	subwf	___llmod@dividend+1,w
  7391  0D7D  1D03               	skipz
  7392  0D7E  2D81               	goto	u3425
  7393  0D7F  083A               	movf	___llmod@divisor,w
  7394  0D80  023E               	subwf	___llmod@dividend,w
  7395  0D81                     u3425:	
  7396  0D81  1C03               	skipc
  7397  0D82  2D8B               	goto	l3766
  7398  0D83  083A               	movf	___llmod@divisor,w
  7399  0D84  02BE               	subwf	___llmod@dividend,f
  7400  0D85  083B               	movf	___llmod@divisor+1,w
  7401  0D86  3BBF               	subwfb	___llmod@dividend+1,f
  7402  0D87  083C               	movf	___llmod@divisor+2,w
  7403  0D88  3BC0               	subwfb	___llmod@dividend+2,f
  7404  0D89  083D               	movf	___llmod@divisor+3,w
  7405  0D8A  3BC1               	subwfb	___llmod@dividend+3,f
  7406  0D8B                     l3766:	
  7407  0D8B  3001               	movlw	1
  7408  0D8C                     u3435:	
  7409  0D8C  36BD               	lsrf	___llmod@divisor+3,f
  7410  0D8D  0CBC               	rrf	___llmod@divisor+2,f
  7411  0D8E  0CBB               	rrf	___llmod@divisor+1,f
  7412  0D8F  0CBA               	rrf	___llmod@divisor,f
  7413  0D90  0B89               	decfsz	9,f
  7414  0D91  2D8C               	goto	u3435
  7415  0D92  3001               	movlw	1
  7416  0D93  02C3               	subwf	___llmod@counter,f
  7417  0D94  1D03               	btfss	3,2
  7418  0D95  2D73               	goto	l3762
  7419  0D96                     l3770:	
  7420  0D96  0841               	movf	___llmod@dividend+3,w
  7421  0D97  00BD               	movwf	?___llmod+3
  7422  0D98  0840               	movf	___llmod@dividend+2,w
  7423  0D99  00BC               	movwf	?___llmod+2
  7424  0D9A  083F               	movf	___llmod@dividend+1,w
  7425  0D9B  00BB               	movwf	?___llmod+1
  7426  0D9C  083E               	movf	___llmod@dividend,w
  7427  0D9D  00BA               	movwf	?___llmod
  7428  0D9E  0008               	return
  7429  0D9F                     __end_of___llmod:	
  7430                           
  7431                           	psect	text29
  7432  0E2E                     __ptext29:	
  7433 ;; *************** function ___lldiv *****************
  7434 ;; Defined at:
  7435 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  divisor         4   12[BANK0 ] unsigned long 
  7438 ;;  dividend        4   16[BANK0 ] unsigned long 
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;  quotient        4   21[BANK0 ] unsigned long 
  7441 ;;  counter         1   25[BANK0 ] unsigned char 
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  4   12[BANK0 ] unsigned long 
  7444 ;; Registers used:
  7445 ;;		wreg, status,2, status,0
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7451 ;;      Params:         0       8       0       0       0       0
  7452 ;;      Locals:         0       5       0       0       0       0
  7453 ;;      Temps:          0       1       0       0       0       0
  7454 ;;      Totals:         0      14       0       0       0       0
  7455 ;;Total ram usage:       14 bytes
  7456 ;; Hardware stack levels used:    1
  7457 ;; Hardware stack levels required when called:    3
  7458 ;; This function calls:
  7459 ;;		Nothing
  7460 ;; This function is called by:
  7461 ;;		_Timer1_GetCPS
  7462 ;;		_printf
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           
  7467                           ;psect for function ___lldiv
  7468  0E2E                     ___lldiv:	
  7469                           
  7470                           ;incstack = 0
  7471                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7472  0E2E  3000               	movlw	0
  7473  0E2F  0020               	movlb	0	; select bank0
  7474  0E30  00B8               	movwf	___lldiv@quotient+3
  7475  0E31  3000               	movlw	0
  7476  0E32  00B7               	movwf	___lldiv@quotient+2
  7477  0E33  3000               	movlw	0
  7478  0E34  00B6               	movwf	___lldiv@quotient+1
  7479  0E35  3000               	movlw	0
  7480  0E36  00B5               	movwf	___lldiv@quotient
  7481  0E37  082F               	movf	___lldiv@divisor+3,w
  7482  0E38  042E               	iorwf	___lldiv@divisor+2,w
  7483  0E39  042D               	iorwf	___lldiv@divisor+1,w
  7484  0E3A  042C               	iorwf	___lldiv@divisor,w
  7485  0E3B  1903               	skipnz
  7486  0E3C  2E78               	goto	l3750
  7487  0E3D  01B9               	clrf	___lldiv@counter
  7488  0E3E  0AB9               	incf	___lldiv@counter,f
  7489  0E3F                     l3736:	
  7490  0E3F  1BAF               	btfsc	___lldiv@divisor+3,7
  7491  0E40  2E4D               	goto	l3738
  7492  0E41  3001               	movlw	1
  7493  0E42                     u3335:	
  7494  0E42  35AC               	lslf	___lldiv@divisor,f
  7495  0E43  0DAD               	rlf	___lldiv@divisor+1,f
  7496  0E44  0DAE               	rlf	___lldiv@divisor+2,f
  7497  0E45  0DAF               	rlf	___lldiv@divisor+3,f
  7498  0E46  0B89               	decfsz	9,f
  7499  0E47  2E42               	goto	u3335
  7500  0E48  3001               	movlw	1
  7501  0E49  00B4               	movwf	??___lldiv
  7502  0E4A  0834               	movf	??___lldiv,w
  7503  0E4B  07B9               	addwf	___lldiv@counter,f
  7504  0E4C  2E3F               	goto	l3736
  7505  0E4D                     l3738:	
  7506  0E4D  3001               	movlw	1
  7507  0E4E                     u3355:	
  7508  0E4E  35B5               	lslf	___lldiv@quotient,f
  7509  0E4F  0DB6               	rlf	___lldiv@quotient+1,f
  7510  0E50  0DB7               	rlf	___lldiv@quotient+2,f
  7511  0E51  0DB8               	rlf	___lldiv@quotient+3,f
  7512  0E52  0B89               	decfsz	9,f
  7513  0E53  2E4E               	goto	u3355
  7514  0E54  082F               	movf	___lldiv@divisor+3,w
  7515  0E55  0233               	subwf	___lldiv@dividend+3,w
  7516  0E56  1D03               	skipz
  7517  0E57  2E62               	goto	u3365
  7518  0E58  082E               	movf	___lldiv@divisor+2,w
  7519  0E59  0232               	subwf	___lldiv@dividend+2,w
  7520  0E5A  1D03               	skipz
  7521  0E5B  2E62               	goto	u3365
  7522  0E5C  082D               	movf	___lldiv@divisor+1,w
  7523  0E5D  0231               	subwf	___lldiv@dividend+1,w
  7524  0E5E  1D03               	skipz
  7525  0E5F  2E62               	goto	u3365
  7526  0E60  082C               	movf	___lldiv@divisor,w
  7527  0E61  0230               	subwf	___lldiv@dividend,w
  7528  0E62                     u3365:	
  7529  0E62  1C03               	skipc
  7530  0E63  2E6D               	goto	l3746
  7531  0E64  082C               	movf	___lldiv@divisor,w
  7532  0E65  02B0               	subwf	___lldiv@dividend,f
  7533  0E66  082D               	movf	___lldiv@divisor+1,w
  7534  0E67  3BB1               	subwfb	___lldiv@dividend+1,f
  7535  0E68  082E               	movf	___lldiv@divisor+2,w
  7536  0E69  3BB2               	subwfb	___lldiv@dividend+2,f
  7537  0E6A  082F               	movf	___lldiv@divisor+3,w
  7538  0E6B  3BB3               	subwfb	___lldiv@dividend+3,f
  7539  0E6C  1435               	bsf	___lldiv@quotient,0
  7540  0E6D                     l3746:	
  7541  0E6D  3001               	movlw	1
  7542  0E6E                     u3375:	
  7543  0E6E  36AF               	lsrf	___lldiv@divisor+3,f
  7544  0E6F  0CAE               	rrf	___lldiv@divisor+2,f
  7545  0E70  0CAD               	rrf	___lldiv@divisor+1,f
  7546  0E71  0CAC               	rrf	___lldiv@divisor,f
  7547  0E72  0B89               	decfsz	9,f
  7548  0E73  2E6E               	goto	u3375
  7549  0E74  3001               	movlw	1
  7550  0E75  02B9               	subwf	___lldiv@counter,f
  7551  0E76  1D03               	btfss	3,2
  7552  0E77  2E4D               	goto	l3738
  7553  0E78                     l3750:	
  7554  0E78  0838               	movf	___lldiv@quotient+3,w
  7555  0E79  00AF               	movwf	?___lldiv+3
  7556  0E7A  0837               	movf	___lldiv@quotient+2,w
  7557  0E7B  00AE               	movwf	?___lldiv+2
  7558  0E7C  0836               	movf	___lldiv@quotient+1,w
  7559  0E7D  00AD               	movwf	?___lldiv+1
  7560  0E7E  0835               	movf	___lldiv@quotient,w
  7561  0E7F  00AC               	movwf	?___lldiv
  7562  0E80  0008               	return
  7563  0E81                     __end_of___lldiv:	
  7564                           
  7565                           	psect	text30
  7566  0DE3                     __ptext30:	
  7567 ;; *************** function _mTouch_Check *****************
  7568 ;; Defined at:
  7569 ;;		line 61 in file "mTouch.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  chan            1    wreg     unsigned char 
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;  chan            1    7[BANK0 ] unsigned char 
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  1    wreg      unsigned char 
  7576 ;; Registers used:
  7577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7583 ;;      Params:         0       0       0       0       0       0
  7584 ;;      Locals:         0       1       0       0       0       0
  7585 ;;      Temps:          0       5       0       0       0       0
  7586 ;;      Totals:         0       6       0       0       0       0
  7587 ;;Total ram usage:        6 bytes
  7588 ;; Hardware stack levels used:    1
  7589 ;; Hardware stack levels required when called:    4
  7590 ;; This function calls:
  7591 ;;		_Buzzer_MiliSecond
  7592 ;; This function is called by:
  7593 ;;		_main
  7594 ;;		_Ssetting_PMT_Config
  7595 ;;		_Show_PMT_Config
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           
  7600                           ;psect for function _mTouch_Check
  7601  0DE3                     _mTouch_Check:	
  7602                           
  7603                           ;incstack = 0
  7604                           ; Regs used in _mTouch_Check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7605                           ;mTouch_Check@chan stored from wreg
  7606  0DE3  0020               	movlb	0	; select bank0
  7607  0DE4  00A7               	movwf	mTouch_Check@chan
  7608                           
  7609                           ;mTouch.c: 63: if(2<chan)return 0;
  7610  0DE5  3003               	movlw	3
  7611  0DE6  0227               	subwf	mTouch_Check@chan,w
  7612  0DE7  1C03               	skipc
  7613  0DE8  2DEB               	goto	l3826
  7614  0DE9  3000               	movlw	0
  7615  0DEA  0008               	return
  7616  0DEB                     l3826:	
  7617                           
  7618                           ;mTouch.c: 65: if(((CPS_PreData[chan]-CPS_Data[chan])>sense_parameter[chan])&&!mTouch_In
      +                          terval[chan])
  7619  0DEB  0827               	movf	mTouch_Check@chan,w
  7620  0DEC  3EAF               	addlw	(low (_CPS_Data| 0))& (0+255)
  7621  0DED  0086               	movwf	6
  7622  0DEE  0187               	clrf	7
  7623  0DEF  0801               	movf	1,w
  7624  0DF0  00A2               	movwf	??_mTouch_Check
  7625  0DF1  01A3               	clrf	??_mTouch_Check+1
  7626  0DF2  09A2               	comf	??_mTouch_Check,f
  7627  0DF3  09A3               	comf	??_mTouch_Check+1,f
  7628  0DF4  0AA2               	incf	??_mTouch_Check,f
  7629  0DF5  1903               	skipnz
  7630  0DF6  0AA3               	incf	??_mTouch_Check+1,f
  7631  0DF7  0827               	movf	mTouch_Check@chan,w
  7632  0DF8  3EAC               	addlw	(low (_CPS_PreData| 0))& (0+255)
  7633  0DF9  0086               	movwf	6
  7634  0DFA  0187               	clrf	7
  7635  0DFB  0801               	movf	1,w
  7636  0DFC  0722               	addwf	??_mTouch_Check,w
  7637  0DFD  00A4               	movwf	??_mTouch_Check+2
  7638  0DFE  0823               	movf	??_mTouch_Check+1,w
  7639  0DFF  1803               	skipnc
  7640  0E00  0A23               	incf	??_mTouch_Check+1,w
  7641  0E01  00A5               	movwf	??_mTouch_Check+3
  7642  0E02  0827               	movf	mTouch_Check@chan,w
  7643  0E03  3EA6               	addlw	low (_sense_parameter| (0+32768))
  7644  0E04  0084               	movwf	4
  7645  0E05  3082               	movlw	high (_sense_parameter| (0+32768))
  7646  0E06  1803               	skipnc
  7647  0E07  3E01               	addlw	1
  7648  0E08  0085               	movwf	5
  7649  0E09  0800               	movf	0,w	;code access
  7650  0E0A  00A6               	movwf	??_mTouch_Check+4
  7651  0E0B  0825               	movf	??_mTouch_Check+3,w
  7652  0E0C  3A80               	xorlw	128
  7653  0E0D  3C80               	sublw	128
  7654  0E0E  1D03               	skipz
  7655  0E0F  2E12               	goto	u3475
  7656  0E10  0824               	movf	??_mTouch_Check+2,w
  7657  0E11  0226               	subwf	??_mTouch_Check+4,w
  7658  0E12                     u3475:	
  7659  0E12  1803               	skipnc
  7660  0E13  2E2C               	goto	l3838
  7661  0E14  0020               	movlb	0	; select bank0
  7662  0E15  0827               	movf	mTouch_Check@chan,w
  7663  0E16  3E70               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  7664  0E17  0086               	movwf	6
  7665  0E18  0187               	clrf	7
  7666  0E19  0801               	movf	1,w
  7667  0E1A  1D03               	btfss	3,2
  7668  0E1B  2E2C               	goto	l3838
  7669                           
  7670                           ;mTouch.c: 66: {
  7671                           ;mTouch.c: 67: mTouch_Interval[chan] = 100;
  7672  0E1C  3064               	movlw	100
  7673  0E1D  00A2               	movwf	??_mTouch_Check
  7674  0E1E  0827               	movf	mTouch_Check@chan,w
  7675  0E1F  3E70               	addlw	(low (_mTouch_Interval| 0))& (0+255)
  7676  0E20  0086               	movwf	6
  7677  0E21  0187               	clrf	7
  7678  0E22  0822               	movf	??_mTouch_Check,w
  7679  0E23  0081               	movwf	1
  7680                           
  7681                           ;mTouch.c: 68: Buzzer_MiliSecond(100);
  7682  0E24  3064               	movlw	100
  7683  0E25  00A0               	movwf	Buzzer_MiliSecond@time
  7684  0E26  3000               	movlw	0
  7685  0E27  00A1               	movwf	Buzzer_MiliSecond@time+1
  7686  0E28  3189  210B         	fcall	_Buzzer_MiliSecond
  7687                           
  7688                           ;mTouch.c: 69: return 1;
  7689  0E2A  3001               	movlw	1
  7690  0E2B  0008               	return
  7691  0E2C                     l3838:	
  7692                           
  7693                           ;mTouch.c: 70: }
  7694                           ;mTouch.c: 71: return 0;
  7695  0E2C  3000               	movlw	0
  7696  0E2D  0008               	return
  7697  0E2E                     __end_of_mTouch_Check:	
  7698                           
  7699                           	psect	text31
  7700  090B                     __ptext31:	
  7701 ;; *************** function _Buzzer_MiliSecond *****************
  7702 ;; Defined at:
  7703 ;;		line 38 in file "Buzzer.c"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;  time            2    0[BANK0 ] unsigned int 
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;		None
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  1    wreg      void 
  7710 ;; Registers used:
  7711 ;;		wreg, status,2, status,0
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7717 ;;      Params:         0       2       0       0       0       0
  7718 ;;      Locals:         0       0       0       0       0       0
  7719 ;;      Temps:          0       0       0       0       0       0
  7720 ;;      Totals:         0       2       0       0       0       0
  7721 ;;Total ram usage:        2 bytes
  7722 ;; Hardware stack levels used:    1
  7723 ;; Hardware stack levels required when called:    3
  7724 ;; This function calls:
  7725 ;;		Nothing
  7726 ;; This function is called by:
  7727 ;;		_mTouch_Check
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           
  7732                           ;psect for function _Buzzer_MiliSecond
  7733  090B                     _Buzzer_MiliSecond:	
  7734                           
  7735                           ;Buzzer.c: 40: if(count==0)
  7736                           
  7737                           ;incstack = 0
  7738                           ; Regs used in _Buzzer_MiliSecond: [wreg+status,2+status,0]
  7739  090B  0873               	movf	_count,w
  7740  090C  0474               	iorwf	_count+1,w
  7741  090D  1D03               	btfss	3,2
  7742  090E  0008               	return
  7743                           
  7744                           ;Buzzer.c: 41: count = time;
  7745  090F  0020               	movlb	0	; select bank0
  7746  0910  0821               	movf	Buzzer_MiliSecond@time+1,w
  7747  0911  00F4               	movwf	_count+1
  7748  0912  0820               	movf	Buzzer_MiliSecond@time,w
  7749  0913  00F3               	movwf	_count
  7750  0914  0008               	return
  7751  0915                     __end_of_Buzzer_MiliSecond:	
  7752                           
  7753                           	psect	text32
  7754  09EC                     __ptext32:	
  7755 ;; *************** function _LCD_CursorPosition *****************
  7756 ;; Defined at:
  7757 ;;		line 95 in file "LCD.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  tx              1    wreg     unsigned char 
  7760 ;;  ty              1    3[BANK0 ] unsigned char 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;  tx              1    5[BANK0 ] unsigned char 
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  1    wreg      void 
  7765 ;; Registers used:
  7766 ;;		wreg, status,2, status,0, pclath, cstack
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7772 ;;      Params:         0       1       0       0       0       0
  7773 ;;      Locals:         0       1       0       0       0       0
  7774 ;;      Temps:          0       1       0       0       0       0
  7775 ;;      Totals:         0       3       0       0       0       0
  7776 ;;Total ram usage:        3 bytes
  7777 ;; Hardware stack levels used:    1
  7778 ;; Hardware stack levels required when called:    4
  7779 ;; This function calls:
  7780 ;;		_LCD_WriteData
  7781 ;; This function is called by:
  7782 ;;		_main
  7783 ;;		_StartUp_Menu
  7784 ;;		_Ssetting_PMT_Config
  7785 ;;		_Show_PMT_Config
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           
  7790                           ;psect for function _LCD_CursorPosition
  7791  09EC                     _LCD_CursorPosition:	
  7792                           
  7793                           ;incstack = 0
  7794                           ; Regs used in _LCD_CursorPosition: [wreg+status,2+status,0+pclath+cstack]
  7795                           ;LCD_CursorPosition@tx stored from wreg
  7796  09EC  0020               	movlb	0	; select bank0
  7797  09ED  00A5               	movwf	LCD_CursorPosition@tx
  7798                           
  7799                           ;LCD.c: 97: LATA3 = 0;
  7800  09EE  0022               	movlb	2	; select bank2
  7801  09EF  118C               	bcf	12,3	;volatile
  7802                           
  7803                           ;LCD.c: 98: LCD_WriteData(0x80|tx|(0x40*ty));
  7804  09F0  0020               	movlb	0	; select bank0
  7805  09F1  0823               	movf	LCD_CursorPosition@ty,w
  7806  09F2  00A4               	movwf	??_LCD_CursorPosition
  7807  09F3  3005               	movlw	5
  7808  09F4                     u3455:	
  7809  09F4  35A4               	lslf	??_LCD_CursorPosition,f
  7810  09F5  3EFF               	addlw	-1
  7811  09F6  1D03               	skipz
  7812  09F7  29F4               	goto	u3455
  7813  09F8  3524               	lslf	??_LCD_CursorPosition,w
  7814  09F9  0425               	iorwf	LCD_CursorPosition@tx,w
  7815  09FA  3880               	iorlw	-128
  7816  09FB  318C  24E2  3189   	fcall	_LCD_WriteData
  7817                           
  7818                           ;LCD.c: 99: _delay((unsigned long)((40)*(32000000/4000000.0)));
  7819  09FE  306A               	movlw	106
  7820  09FF                     u4107:	
  7821  09FF  0B89               	decfsz	9,f
  7822  0A00  29FF               	goto	u4107
  7823  0A01  3200               	nop2
  7824  0A02  0008               	return
  7825  0A03                     __end_of_LCD_CursorPosition:	
  7826                           
  7827                           	psect	text33
  7828  097F                     __ptext33:	
  7829 ;; *************** function _LCD_CursorHome *****************
  7830 ;; Defined at:
  7831 ;;		line 84 in file "LCD.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;		None
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;		None
  7836 ;; Return value:  Size  Location     Type
  7837 ;;                  1    wreg      void 
  7838 ;; Registers used:
  7839 ;;		wreg, status,2, status,0, pclath, cstack
  7840 ;; Tracked objects:
  7841 ;;		On entry : 0/0
  7842 ;;		On exit  : 0/0
  7843 ;;		Unchanged: 0/0
  7844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7845 ;;      Params:         0       0       0       0       0       0
  7846 ;;      Locals:         0       0       0       0       0       0
  7847 ;;      Temps:          0       1       0       0       0       0
  7848 ;;      Totals:         0       1       0       0       0       0
  7849 ;;Total ram usage:        1 bytes
  7850 ;; Hardware stack levels used:    1
  7851 ;; Hardware stack levels required when called:    4
  7852 ;; This function calls:
  7853 ;;		_LCD_WriteData
  7854 ;; This function is called by:
  7855 ;;		_StartUp_Menu
  7856 ;;		_Ssetting_PMT_Config
  7857 ;;		_Show_PMT_Config
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           
  7862                           ;psect for function _LCD_CursorHome
  7863  097F                     _LCD_CursorHome:	
  7864                           
  7865                           ;LCD.c: 86: LATA3 = 0;
  7866                           
  7867                           ;incstack = 0
  7868                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  7869  097F  0022               	movlb	2	; select bank2
  7870  0980  118C               	bcf	12,3	;volatile
  7871                           
  7872                           ;LCD.c: 87: LCD_WriteData(0x02);
  7873  0981  3002               	movlw	2
  7874  0982  318C  24E2  3189   	fcall	_LCD_WriteData
  7875                           
  7876                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  7877  0985  3015               	movlw	21
  7878  0986  0020               	movlb	0	; select bank0
  7879  0987  00A3               	movwf	??_LCD_CursorHome
  7880  0988  30C6               	movlw	198
  7881  0989                     u4117:	
  7882  0989  0B89               	decfsz	9,f
  7883  098A  2989               	goto	u4117
  7884  098B  0BA3               	decfsz	??_LCD_CursorHome,f
  7885  098C  2989               	goto	u4117
  7886  098D  0000               	nop
  7887  098E  0008               	return
  7888  098F                     __end_of_LCD_CursorHome:	
  7889                           
  7890                           	psect	text34
  7891  077D                     __ptext34:	
  7892 ;; *************** function _LCD_Init *****************
  7893 ;; Defined at:
  7894 ;;		line 28 in file "LCD.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;		None
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;		None
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  1    wreg      void 
  7901 ;; Registers used:
  7902 ;;		wreg, status,2, status,0, pclath, cstack
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7908 ;;      Params:         0       0       0       0       0       0
  7909 ;;      Locals:         0       0       0       0       0       0
  7910 ;;      Temps:          0       2       0       0       0       0
  7911 ;;      Totals:         0       2       0       0       0       0
  7912 ;;Total ram usage:        2 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:    5
  7915 ;; This function calls:
  7916 ;;		_LCD_DisplayClear
  7917 ;;		_LCD_WriteData
  7918 ;; This function is called by:
  7919 ;;		_main
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           
  7924                           ;psect for function _LCD_Init
  7925  077D                     _LCD_Init:	
  7926                           
  7927                           ;LCD.c: 30: LATA3 = 0;
  7928                           
  7929                           ;incstack = 0
  7930                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  7931  077D  0022               	movlb	2	; select bank2
  7932  077E  118C               	bcf	12,3	;volatile
  7933                           
  7934                           ;LCD.c: 31: LATA4 = 0;
  7935  077F  120C               	bcf	12,4	;volatile
  7936                           
  7937                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  7938  0780  3002               	movlw	2
  7939  0781  0020               	movlb	0	; select bank0
  7940  0782  00A5               	movwf	??_LCD_Init+1
  7941  0783  3038               	movlw	56
  7942  0784  00A4               	movwf	??_LCD_Init
  7943  0785  30AD               	movlw	173
  7944  0786                     u4127:	
  7945  0786  0B89               	decfsz	9,f
  7946  0787  2F86               	goto	u4127
  7947  0788  0BA4               	decfsz	??_LCD_Init,f
  7948  0789  2F86               	goto	u4127
  7949  078A  0BA5               	decfsz	??_LCD_Init+1,f
  7950  078B  2F86               	goto	u4127
  7951                           
  7952                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  7953  078C  3003               	movlw	3
  7954  078D  0020               	movlb	0	; select bank0
  7955  078E  008D               	movwf	13	;volatile
  7956                           
  7957                           ;LCD.c: 35: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  7958  078F  0022               	movlb	2	; select bank2
  7959  0790  160C               	bsf	12,4	;volatile
  7960  0791  3200               	nop2	;2 cycle nop
  7961  0792  3200               	nop2	;2 cycle nop
  7962  0793  3200               	nop2	;2 cycle nop
  7963  0794  3200               	nop2	;2 cycle nop
  7964  0795  0022               	movlb	2	; select bank2
  7965  0796  120C               	bcf	12,4	;volatile
  7966  0797  3200               	nop2	;2 cycle nop
  7967  0798  3200               	nop2	;2 cycle nop
  7968  0799  3200               	nop2	;2 cycle nop
  7969  079A  3200               	nop2	;2 cycle nop
  7970                           
  7971                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  7972  079B  3034               	movlw	52
  7973  079C  0020               	movlb	0	; select bank0
  7974  079D  00A4               	movwf	??_LCD_Init
  7975  079E  30F1               	movlw	241
  7976  079F                     u4137:	
  7977  079F  0B89               	decfsz	9,f
  7978  07A0  2F9F               	goto	u4137
  7979  07A1  0BA4               	decfsz	??_LCD_Init,f
  7980  07A2  2F9F               	goto	u4137
  7981  07A3  3200               	nop2
  7982                           
  7983                           ;LCD.c: 37: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  7984  07A4  0022               	movlb	2	; select bank2
  7985  07A5  160C               	bsf	12,4	;volatile
  7986  07A6  3200               	nop2	;2 cycle nop
  7987  07A7  3200               	nop2	;2 cycle nop
  7988  07A8  3200               	nop2	;2 cycle nop
  7989  07A9  3200               	nop2	;2 cycle nop
  7990  07AA  0022               	movlb	2	; select bank2
  7991  07AB  120C               	bcf	12,4	;volatile
  7992  07AC  3200               	nop2	;2 cycle nop
  7993  07AD  3200               	nop2	;2 cycle nop
  7994  07AE  3200               	nop2	;2 cycle nop
  7995  07AF  3200               	nop2	;2 cycle nop
  7996                           
  7997                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  7998  07B0  3005               	movlw	5
  7999  07B1  0020               	movlb	0	; select bank0
  8000  07B2  00A4               	movwf	??_LCD_Init
  8001  07B3  3026               	movlw	38
  8002  07B4                     u4147:	
  8003  07B4  0B89               	decfsz	9,f
  8004  07B5  2FB4               	goto	u4147
  8005  07B6  0BA4               	decfsz	??_LCD_Init,f
  8006  07B7  2FB4               	goto	u4147
  8007  07B8  0000               	nop
  8008                           
  8009                           ;LCD.c: 39: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  8010  07B9  0022               	movlb	2	; select bank2
  8011  07BA  160C               	bsf	12,4	;volatile
  8012  07BB  3200               	nop2	;2 cycle nop
  8013  07BC  3200               	nop2	;2 cycle nop
  8014  07BD  3200               	nop2	;2 cycle nop
  8015  07BE  3200               	nop2	;2 cycle nop
  8016  07BF  0022               	movlb	2	; select bank2
  8017  07C0  120C               	bcf	12,4	;volatile
  8018  07C1  3200               	nop2	;2 cycle nop
  8019  07C2  3200               	nop2	;2 cycle nop
  8020  07C3  3200               	nop2	;2 cycle nop
  8021  07C4  3200               	nop2	;2 cycle nop
  8022                           
  8023                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  8024  07C5  3005               	movlw	5
  8025  07C6  0020               	movlb	0	; select bank0
  8026  07C7  00A4               	movwf	??_LCD_Init
  8027  07C8  3026               	movlw	38
  8028  07C9                     u4157:	
  8029  07C9  0B89               	decfsz	9,f
  8030  07CA  2FC9               	goto	u4157
  8031  07CB  0BA4               	decfsz	??_LCD_Init,f
  8032  07CC  2FC9               	goto	u4157
  8033  07CD  0000               	nop
  8034                           
  8035                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  8036  07CE  3002               	movlw	2
  8037  07CF  0020               	movlb	0	; select bank0
  8038  07D0  008D               	movwf	13	;volatile
  8039                           
  8040                           ;LCD.c: 42: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  8041  07D1  0022               	movlb	2	; select bank2
  8042  07D2  160C               	bsf	12,4	;volatile
  8043  07D3  3200               	nop2	;2 cycle nop
  8044  07D4  3200               	nop2	;2 cycle nop
  8045  07D5  3200               	nop2	;2 cycle nop
  8046  07D6  3200               	nop2	;2 cycle nop
  8047  07D7  0022               	movlb	2	; select bank2
  8048  07D8  120C               	bcf	12,4	;volatile
  8049  07D9  3200               	nop2	;2 cycle nop
  8050  07DA  3200               	nop2	;2 cycle nop
  8051  07DB  3200               	nop2	;2 cycle nop
  8052  07DC  3200               	nop2	;2 cycle nop
  8053                           
  8054                           ;LCD.c: 44: LCD_WriteData(0x28);
  8055  07DD  3028               	movlw	40
  8056  07DE  318C  24E2  3187   	fcall	_LCD_WriteData
  8057                           
  8058                           ;LCD.c: 45: LCD_WriteData(0x0c);
  8059  07E1  300C               	movlw	12
  8060  07E2  318C  24E2  3187   	fcall	_LCD_WriteData
  8061                           
  8062                           ;LCD.c: 46: LCD_DisplayClear();
  8063  07E5  3189  216F  3187   	fcall	_LCD_DisplayClear
  8064                           
  8065                           ;LCD.c: 47: LCD_WriteData(0x06);
  8066  07E8  3006               	movlw	6
  8067  07E9  318C  24E2         	fcall	_LCD_WriteData
  8068  07EB  0008               	return
  8069  07EC                     __end_of_LCD_Init:	
  8070                           
  8071                           	psect	text35
  8072  096F                     __ptext35:	
  8073 ;; *************** function _LCD_DisplayClear *****************
  8074 ;; Defined at:
  8075 ;;		line 73 in file "LCD.c"
  8076 ;; Parameters:    Size  Location     Type
  8077 ;;		None
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;		None
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  1    wreg      void 
  8082 ;; Registers used:
  8083 ;;		wreg, status,2, status,0, pclath, cstack
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8089 ;;      Params:         0       0       0       0       0       0
  8090 ;;      Locals:         0       0       0       0       0       0
  8091 ;;      Temps:          0       1       0       0       0       0
  8092 ;;      Totals:         0       1       0       0       0       0
  8093 ;;Total ram usage:        1 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; Hardware stack levels required when called:    4
  8096 ;; This function calls:
  8097 ;;		_LCD_WriteData
  8098 ;; This function is called by:
  8099 ;;		_LCD_Init
  8100 ;;		_main
  8101 ;;		_StartUp_Menu
  8102 ;;		_Ssetting_PMT_Config
  8103 ;;		_Show_PMT_Config
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107                           
  8108                           ;psect for function _LCD_DisplayClear
  8109  096F                     _LCD_DisplayClear:	
  8110                           
  8111                           ;LCD.c: 75: LATA3 = 0;
  8112                           
  8113                           ;incstack = 0
  8114                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  8115  096F  0022               	movlb	2	; select bank2
  8116  0970  118C               	bcf	12,3	;volatile
  8117                           
  8118                           ;LCD.c: 76: LCD_WriteData(0x01);
  8119  0971  3001               	movlw	1
  8120  0972  318C  24E2  3189   	fcall	_LCD_WriteData
  8121                           
  8122                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  8123  0975  3015               	movlw	21
  8124  0976  0020               	movlb	0	; select bank0
  8125  0977  00A3               	movwf	??_LCD_DisplayClear
  8126  0978  30C6               	movlw	198
  8127  0979                     u4167:	
  8128  0979  0B89               	decfsz	9,f
  8129  097A  2979               	goto	u4167
  8130  097B  0BA3               	decfsz	??_LCD_DisplayClear,f
  8131  097C  2979               	goto	u4167
  8132  097D  0000               	nop
  8133  097E  0008               	return
  8134  097F                     __end_of_LCD_DisplayClear:	
  8135                           
  8136                           	psect	text36
  8137  0CE2                     __ptext36:	
  8138 ;; *************** function _LCD_WriteData *****************
  8139 ;; Defined at:
  8140 ;;		line 15 in file "LCD.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;  point           1    wreg     char 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;  point           1    2[BANK0 ] char 
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		wreg, status,2, status,0
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8154 ;;      Params:         0       0       0       0       0       0
  8155 ;;      Locals:         0       1       0       0       0       0
  8156 ;;      Temps:          0       2       0       0       0       0
  8157 ;;      Totals:         0       3       0       0       0       0
  8158 ;;Total ram usage:        3 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; Hardware stack levels required when called:    3
  8161 ;; This function calls:
  8162 ;;		Nothing
  8163 ;; This function is called by:
  8164 ;;		_LCD_Init
  8165 ;;		_putch
  8166 ;;		_LCD_DisplayClear
  8167 ;;		_LCD_CursorHome
  8168 ;;		_LCD_CursorPosition
  8169 ;;		_LCD_Put
  8170 ;;		_LCD_CursorShift
  8171 ;;		_LCD_DispShift
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           
  8176                           ;psect for function _LCD_WriteData
  8177  0CE2                     _LCD_WriteData:	
  8178                           
  8179                           ;incstack = 0
  8180                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  8181                           ;LCD_WriteData@point stored from wreg
  8182  0CE2  0020               	movlb	0	; select bank0
  8183  0CE3  00A2               	movwf	LCD_WriteData@point
  8184                           
  8185                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  8186  0CE4  30D5               	movlw	213
  8187  0CE5                     u4177:	
  8188  0CE5  0B89               	decfsz	9,f
  8189  0CE6  2CE5               	goto	u4177
  8190  0CE7  0000               	nop
  8191                           
  8192                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  8193  0CE8  0020               	movlb	0	; select bank0
  8194  0CE9  0822               	movf	LCD_WriteData@point,w
  8195  0CEA  00A0               	movwf	??_LCD_WriteData
  8196  0CEB  3004               	movlw	4
  8197  0CEC                     u3105:	
  8198  0CEC  1003               	clrc
  8199  0CED  1BA0               	btfsc	??_LCD_WriteData,7
  8200  0CEE  1403               	setc
  8201  0CEF  0CA0               	rrf	??_LCD_WriteData,f
  8202  0CF0  0B89               	decfsz	9,f
  8203  0CF1  2CEC               	goto	u3105
  8204  0CF2  3003               	movlw	3
  8205  0CF3  0520               	andwf	??_LCD_WriteData,w
  8206  0CF4  00A1               	movwf	??_LCD_WriteData+1
  8207  0CF5  0E22               	swapf	LCD_WriteData@point,w
  8208  0CF6  390F               	andlw	15
  8209  0CF7  1989               	btfsc	9,3
  8210  0CF8  38F0               	iorlw	240
  8211  0CF9  390C               	andlw	12
  8212  0CFA  0709               	addwf	9,w
  8213  0CFB  0421               	iorwf	??_LCD_WriteData+1,w
  8214  0CFC  008D               	movwf	13	;volatile
  8215                           
  8216                           ;LCD.c: 19: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  8217  0CFD  0022               	movlb	2	; select bank2
  8218  0CFE  160C               	bsf	12,4	;volatile
  8219  0CFF  3200               	nop2	;2 cycle nop
  8220  0D00  3200               	nop2	;2 cycle nop
  8221  0D01  3200               	nop2	;2 cycle nop
  8222  0D02  3200               	nop2	;2 cycle nop
  8223  0D03  0022               	movlb	2	; select bank2
  8224  0D04  120C               	bcf	12,4	;volatile
  8225  0D05  3200               	nop2	;2 cycle nop
  8226  0D06  3200               	nop2	;2 cycle nop
  8227  0D07  3200               	nop2	;2 cycle nop
  8228  0D08  3200               	nop2	;2 cycle nop
  8229                           
  8230                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  8231  0D09  3003               	movlw	3
  8232  0D0A  0020               	movlb	0	; select bank0
  8233  0D0B  0522               	andwf	LCD_WriteData@point,w
  8234  0D0C  00A0               	movwf	??_LCD_WriteData
  8235  0D0D  0822               	movf	LCD_WriteData@point,w
  8236  0D0E  390C               	andlw	12
  8237  0D0F  0709               	addwf	9,w
  8238  0D10  0420               	iorwf	??_LCD_WriteData,w
  8239  0D11  008D               	movwf	13	;volatile
  8240                           
  8241                           ;LCD.c: 21: {LATA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); LATA4 = 0; _d
      +                          elay((unsigned long)((1)*(32000000/4000000.0)));};
  8242  0D12  0022               	movlb	2	; select bank2
  8243  0D13  160C               	bsf	12,4	;volatile
  8244  0D14  3200               	nop2	;2 cycle nop
  8245  0D15  3200               	nop2	;2 cycle nop
  8246  0D16  3200               	nop2	;2 cycle nop
  8247  0D17  3200               	nop2	;2 cycle nop
  8248  0D18  0022               	movlb	2	; select bank2
  8249  0D19  120C               	bcf	12,4	;volatile
  8250  0D1A  3200               	nop2	;2 cycle nop
  8251  0D1B  3200               	nop2	;2 cycle nop
  8252  0D1C  3200               	nop2	;2 cycle nop
  8253  0D1D  3200               	nop2	;2 cycle nop
  8254  0D1E  0008               	return
  8255  0D1F                     __end_of_LCD_WriteData:	
  8256                           
  8257                           	psect	text37
  8258  0AA7                     __ptext37:	
  8259 ;; *************** function _DAC_Initialize *****************
  8260 ;; Defined at:
  8261 ;;		line 14 in file "MCP4726.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;		None
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8275 ;;      Params:         0       0       0       0       0       0
  8276 ;;      Locals:         0       0       0       0       0       0
  8277 ;;      Temps:          0       2       0       0       0       0
  8278 ;;      Totals:         0       2       0       0       0       0
  8279 ;;Total ram usage:        2 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:    6
  8282 ;; This function calls:
  8283 ;;		_I2C_Init
  8284 ;;		_I2C_Transmit
  8285 ;; This function is called by:
  8286 ;;		_main
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           
  8291                           ;psect for function _DAC_Initialize
  8292  0AA7                     _DAC_Initialize:	
  8293                           
  8294                           ;MCP4726.c: 16: I2C_Init(I2C2_MODULE,0x00,I2C_MODE_MASTER,I2C_SPEED_STANDARD);
  8295                           
  8296                           ;incstack = 0
  8297                           ; Regs used in _DAC_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8298  0AA7  0020               	movlb	0	; select bank0
  8299  0AA8  01A5               	clrf	I2C_Init@address
  8300  0AA9  01A6               	clrf	I2C_Init@mode
  8301  0AAA  01A7               	clrf	I2C_Init@Speed
  8302  0AAB  3001               	movlw	1
  8303  0AAC  318A  2203  318A   	fcall	_I2C_Init
  8304                           
  8305                           ;MCP4726.c: 18: ConfigReg.Command = (uint8_t)(0x4);
  8306  0AAF  0020               	movlb	0	; select bank0
  8307  0AB0  086F               	movf	_ConfigReg,w
  8308  0AB1  391F               	andlw	-225
  8309  0AB2  3880               	iorlw	128
  8310  0AB3  00EF               	movwf	_ConfigReg
  8311                           
  8312                           ;MCP4726.c: 19: ConfigReg.Gain = 0x00;
  8313  0AB4  106F               	bcf	_ConfigReg,0
  8314                           
  8315                           ;MCP4726.c: 20: ConfigReg.PowerDown = 0x00;
  8316  0AB5  30F9               	movlw	-7
  8317  0AB6  05EF               	andwf	_ConfigReg,f
  8318                           
  8319                           ;MCP4726.c: 21: ConfigReg.Voltage_Ref = 0x00;
  8320  0AB7  30E7               	movlw	-25
  8321  0AB8  05EF               	andwf	_ConfigReg,f
  8322                           
  8323                           ;MCP4726.c: 23: I2C_Transmit(I2C2_MODULE,0x60,ConfigReg.Config_Data,1);
  8324  0AB9  3060               	movlw	96
  8325  0ABA  00B0               	movwf	??_DAC_Initialize
  8326  0ABB  0830               	movf	??_DAC_Initialize,w
  8327  0ABC  00A8               	movwf	I2C_Transmit@address
  8328  0ABD  306F               	movlw	(low (_ConfigReg| 0))& (0+255)
  8329  0ABE  00B1               	movwf	??_DAC_Initialize+1
  8330  0ABF  0831               	movf	??_DAC_Initialize+1,w
  8331  0AC0  00A9               	movwf	I2C_Transmit@pData
  8332  0AC1  01AA               	clrf	I2C_Transmit@size
  8333  0AC2  0AAA               	incf	I2C_Transmit@size,f
  8334  0AC3  3001               	movlw	1
  8335  0AC4  318A  2236         	fcall	_I2C_Transmit
  8336  0AC6  0008               	return
  8337  0AC7                     __end_of_DAC_Initialize:	
  8338                           
  8339                           	psect	text38
  8340  0A36                     __ptext38:	
  8341 ;; *************** function _I2C_Transmit *****************
  8342 ;; Defined at:
  8343 ;;		line 23 in file "I2C_Common.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;  I2Cx            1    wreg     enum E3285
  8346 ;;  address         1    8[BANK0 ] unsigned char 
  8347 ;;  pData           1    9[BANK0 ] PTR unsigned char 
  8348 ;;		 -> VoltageReg(2), ConfigReg(1), 
  8349 ;;  size            1   10[BANK0 ] unsigned char 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  I2Cx            1   14[BANK0 ] enum E3285
  8352 ;;  result          1   15[BANK0 ] char 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      char 
  8355 ;; Registers used:
  8356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8362 ;;      Params:         0       3       0       0       0       0
  8363 ;;      Locals:         0       2       0       0       0       0
  8364 ;;      Temps:          0       3       0       0       0       0
  8365 ;;      Totals:         0       8       0       0       0       0
  8366 ;;Total ram usage:        8 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    4
  8369 ;; This function calls:
  8370 ;;		_I2C2_Transmit
  8371 ;; This function is called by:
  8372 ;;		_DAC_Initialize
  8373 ;;		_DAC_WriteVoltage
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           
  8378                           ;psect for function _I2C_Transmit
  8379  0A36                     _I2C_Transmit:	
  8380                           
  8381                           ;incstack = 0
  8382                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8383                           ;I2C_Transmit@I2Cx stored from wreg
  8384  0A36  0020               	movlb	0	; select bank0
  8385  0A37  00AE               	movwf	I2C_Transmit@I2Cx
  8386                           
  8387                           ;I2C_Common.c: 25: int8_t result;
  8388                           ;I2C_Common.c: 27: switch(I2Cx)
  8389  0A38  2A4A               	goto	l3644
  8390  0A39                     l3640:	
  8391                           ;I2C_Common.c: 28: {
  8392                           ;I2C_Common.c: 33: case I2C2_MODULE:
  8393                           
  8394                           
  8395                           ;I2C_Common.c: 34: result = I2C2_Transmit(address,pData,size);
  8396  0A39  0829               	movf	I2C_Transmit@pData,w
  8397  0A3A  00AB               	movwf	??_I2C_Transmit
  8398  0A3B  082B               	movf	??_I2C_Transmit,w
  8399  0A3C  00A0               	movwf	I2C2_Transmit@pData
  8400  0A3D  082A               	movf	I2C_Transmit@size,w
  8401  0A3E  00AC               	movwf	??_I2C_Transmit+1
  8402  0A3F  082C               	movf	??_I2C_Transmit+1,w
  8403  0A40  00A1               	movwf	I2C2_Transmit@size
  8404  0A41  0828               	movf	I2C_Transmit@address,w
  8405  0A42  318F  2768  318A   	fcall	_I2C2_Transmit
  8406  0A45  0020               	movlb	0	; select bank0
  8407  0A46  00AD               	movwf	??_I2C_Transmit+2
  8408  0A47  082D               	movf	??_I2C_Transmit+2,w
  8409  0A48  00AF               	movwf	I2C_Transmit@result
  8410                           
  8411                           ;I2C_Common.c: 36: }
  8412                           
  8413                           ;I2C_Common.c: 35: break;
  8414  0A49  2A4F               	goto	l3646
  8415  0A4A                     l3644:	
  8416  0A4A  082E               	movf	I2C_Transmit@I2Cx,w
  8417                           
  8418                           ; Switch size 1, requested type "space"
  8419                           ; Number of cases is 1, Range of values is 1 to 1
  8420                           ; switch strategies available:
  8421                           ; Name         Instructions Cycles
  8422                           ; simple_byte            4     3 (average)
  8423                           ; direct_byte           11     9 (fixed)
  8424                           ; jumptable            263     9 (fixed)
  8425                           ;	Chosen strategy is simple_byte
  8426  0A4B  3A01               	xorlw	1	; case 1
  8427  0A4C  1903               	skipnz
  8428  0A4D  2A39               	goto	l3640
  8429  0A4E  2A4F               	goto	l3646
  8430  0A4F                     l3646:	
  8431                           
  8432                           ;I2C_Common.c: 37: return result;
  8433  0A4F  082F               	movf	I2C_Transmit@result,w
  8434  0A50  0008               	return
  8435  0A51                     __end_of_I2C_Transmit:	
  8436                           
  8437                           	psect	text39
  8438  0F68                     __ptext39:	
  8439 ;; *************** function _I2C2_Transmit *****************
  8440 ;; Defined at:
  8441 ;;		line 52 in file "I2C2.c"
  8442 ;; Parameters:    Size  Location     Type
  8443 ;;  address         1    wreg     unsigned char 
  8444 ;;  pData           1    0[BANK0 ] PTR unsigned char 
  8445 ;;		 -> VoltageReg(2), ConfigReg(1), 
  8446 ;;  size            1    1[BANK0 ] unsigned char 
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;  address         1    4[BANK0 ] unsigned char 
  8449 ;;  i               1    6[BANK0 ] unsigned char 
  8450 ;;  i               1    5[BANK0 ] unsigned char 
  8451 ;;  result          1    7[BANK0 ] char 
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      char 
  8454 ;; Registers used:
  8455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8461 ;;      Params:         0       2       0       0       0       0
  8462 ;;      Locals:         0       4       0       0       0       0
  8463 ;;      Temps:          0       2       0       0       0       0
  8464 ;;      Totals:         0       8       0       0       0       0
  8465 ;;Total ram usage:        8 bytes
  8466 ;; Hardware stack levels used:    1
  8467 ;; Hardware stack levels required when called:    3
  8468 ;; This function calls:
  8469 ;;		Nothing
  8470 ;; This function is called by:
  8471 ;;		_I2C_Transmit
  8472 ;; This function uses a non-reentrant model
  8473 ;;
  8474                           
  8475                           
  8476                           ;psect for function _I2C2_Transmit
  8477  0F68                     _I2C2_Transmit:	
  8478                           
  8479                           ;incstack = 0
  8480                           ; Regs used in _I2C2_Transmit: [wreg-fsr1h+status,2+status,0]
  8481                           ;I2C2_Transmit@address stored from wreg
  8482  0F68  0020               	movlb	0	; select bank0
  8483  0F69  00A4               	movwf	I2C2_Transmit@address
  8484                           
  8485                           ;I2C2.c: 54: int8_t result = 0;
  8486  0F6A  01A7               	clrf	I2C2_Transmit@result
  8487                           
  8488                           ;I2C2.c: 56: switch(I2C2_Config.Mode)
  8489  0F6B  2FF4               	goto	l3546
  8490  0F6C                     l3502:	
  8491                           ;I2C2.c: 59: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  8492                           
  8493                           ;I2C2.c: 57: {
  8494                           ;I2C2.c: 58: case I2C_MODE_MASTER:
  8495                           
  8496  0F6C  3005               	movlw	5
  8497  0F6D  0024               	movlb	4	; select bank4
  8498  0F6E  051C               	andwf	28,w	;volatile
  8499  0F6F  0020               	movlb	0	; select bank0
  8500  0F70  00A2               	movwf	??_I2C2_Transmit
  8501  0F71  0024               	movlb	4	; select bank4
  8502  0F72  081E               	movf	30,w	;volatile
  8503  0F73  391F               	andlw	31
  8504  0F74  0020               	movlb	0	; select bank0
  8505  0F75  0422               	iorwf	??_I2C2_Transmit,w
  8506  0F76  1D03               	btfss	3,2
  8507  0F77  2F6C               	goto	l3502
  8508                           
  8509                           ;I2C2.c: 60: SSP2CON2bits.SEN = 1;
  8510  0F78  0024               	movlb	4	; select bank4
  8511  0F79  141E               	bsf	30,0	;volatile
  8512  0F7A                     l3504:	
  8513                           ;I2C2.c: 62: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  8514                           
  8515  0F7A  3005               	movlw	5
  8516  0F7B  0024               	movlb	4	; select bank4
  8517  0F7C  051C               	andwf	28,w	;volatile
  8518  0F7D  0020               	movlb	0	; select bank0
  8519  0F7E  00A2               	movwf	??_I2C2_Transmit
  8520  0F7F  0024               	movlb	4	; select bank4
  8521  0F80  081E               	movf	30,w	;volatile
  8522  0F81  391F               	andlw	31
  8523  0F82  0020               	movlb	0	; select bank0
  8524  0F83  0422               	iorwf	??_I2C2_Transmit,w
  8525  0F84  1D03               	btfss	3,2
  8526  0F85  2F7A               	goto	l3504
  8527                           
  8528                           ;I2C2.c: 63: SSP2BUF = address << 1;
  8529  0F86  3524               	lslf	I2C2_Transmit@address,w
  8530  0F87  0024               	movlb	4	; select bank4
  8531  0F88  0099               	movwf	25	;volatile
  8532  0F89                     l463:	
  8533                           ;I2C2.c: 64: while(SSP2STATbits.R_nW);
  8534                           
  8535  0F89  191C               	btfsc	28,2	;volatile
  8536  0F8A  2F89               	goto	l463
  8537                           
  8538                           ;I2C2.c: 66: result = SSP2CON2bits.ACKSTAT;
  8539  0F8B  3000               	movlw	0
  8540  0F8C  1B1E               	btfsc	30,6	;volatile
  8541  0F8D  3001               	movlw	1
  8542  0F8E  0020               	movlb	0	; select bank0
  8543  0F8F  00A7               	movwf	I2C2_Transmit@result
  8544                           
  8545                           ;I2C2.c: 67: if (!result)
  8546  0F90  0827               	movf	I2C2_Transmit@result,w
  8547  0F91  1D03               	btfss	3,2
  8548  0F92  2FC0               	goto	l3528
  8549                           
  8550                           ;I2C2.c: 68: {
  8551                           ;I2C2.c: 69: for(uint8_t i=0;i<size;i++)
  8552  0F93  01A5               	clrf	I2C2_Transmit@i
  8553  0F94  2F99               	goto	l3526
  8554  0F95                     l3524:	
  8555                           ;I2C2.c: 79: break;
  8556                           
  8557  0F95  3001               	movlw	1
  8558  0F96  00A2               	movwf	??_I2C2_Transmit
  8559  0F97  0822               	movf	??_I2C2_Transmit,w
  8560  0F98  07A5               	addwf	I2C2_Transmit@i,f
  8561  0F99                     l3526:	
  8562  0F99  0821               	movf	I2C2_Transmit@size,w
  8563  0F9A  0225               	subwf	I2C2_Transmit@i,w
  8564  0F9B  1803               	btfsc	3,0
  8565  0F9C  2FC0               	goto	l3528
  8566  0F9D                     l3514:	
  8567                           ;I2C2.c: 70: {
  8568                           ;I2C2.c: 71: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  8569                           
  8570  0F9D  3005               	movlw	5
  8571  0F9E  0024               	movlb	4	; select bank4
  8572  0F9F  051C               	andwf	28,w	;volatile
  8573  0FA0  0020               	movlb	0	; select bank0
  8574  0FA1  00A2               	movwf	??_I2C2_Transmit
  8575  0FA2  0024               	movlb	4	; select bank4
  8576  0FA3  081E               	movf	30,w	;volatile
  8577  0FA4  391F               	andlw	31
  8578  0FA5  0020               	movlb	0	; select bank0
  8579  0FA6  0422               	iorwf	??_I2C2_Transmit,w
  8580  0FA7  1D03               	btfss	3,2
  8581  0FA8  2F9D               	goto	l3514
  8582                           
  8583                           ;I2C2.c: 72: SSP2BUF = *(pData+i);
  8584  0FA9  0825               	movf	I2C2_Transmit@i,w
  8585  0FAA  0720               	addwf	I2C2_Transmit@pData,w
  8586  0FAB  00A2               	movwf	??_I2C2_Transmit
  8587  0FAC  0822               	movf	??_I2C2_Transmit,w
  8588  0FAD  0086               	movwf	6
  8589  0FAE  0187               	clrf	7
  8590  0FAF  0801               	movf	1,w
  8591  0FB0  0024               	movlb	4	; select bank4
  8592  0FB1  0099               	movwf	25	;volatile
  8593  0FB2                     l472:	
  8594                           ;I2C2.c: 73: while(SSP2STATbits.R_nW);
  8595                           
  8596  0FB2  191C               	btfsc	28,2	;volatile
  8597  0FB3  2FB2               	goto	l472
  8598                           
  8599                           ;I2C2.c: 75: result = SSP2CON2bits.ACKSTAT;
  8600  0FB4  3000               	movlw	0
  8601  0FB5  1B1E               	btfsc	30,6	;volatile
  8602  0FB6  3001               	movlw	1
  8603  0FB7  0020               	movlb	0	; select bank0
  8604  0FB8  00A7               	movwf	I2C2_Transmit@result
  8605                           
  8606                           ;I2C2.c: 76: if (result)
  8607  0FB9  0827               	movf	I2C2_Transmit@result,w
  8608  0FBA  1903               	btfsc	3,2
  8609  0FBB  2F95               	goto	l3524
  8610                           
  8611                           ;I2C2.c: 77: {
  8612                           ;I2C2.c: 78: result = 2;
  8613  0FBC  3002               	movlw	2
  8614  0FBD  00A2               	movwf	??_I2C2_Transmit
  8615  0FBE  0822               	movf	??_I2C2_Transmit,w
  8616  0FBF  00A7               	movwf	I2C2_Transmit@result
  8617  0FC0                     l3528:	
  8618                           ;I2C2.c: 80: }
  8619                           ;I2C2.c: 81: }
  8620                           ;I2C2.c: 82: }
  8621                           ;I2C2.c: 84: while((SSP2CON2&0x1F)|(SSP2STAT&0x05));
  8622                           
  8623  0FC0  3005               	movlw	5
  8624  0FC1  0024               	movlb	4	; select bank4
  8625  0FC2  051C               	andwf	28,w	;volatile
  8626  0FC3  0020               	movlb	0	; select bank0
  8627  0FC4  00A2               	movwf	??_I2C2_Transmit
  8628  0FC5  0024               	movlb	4	; select bank4
  8629  0FC6  081E               	movf	30,w	;volatile
  8630  0FC7  391F               	andlw	31
  8631  0FC8  0020               	movlb	0	; select bank0
  8632  0FC9  0422               	iorwf	??_I2C2_Transmit,w
  8633  0FCA  1D03               	btfss	3,2
  8634  0FCB  2FC0               	goto	l3528
  8635                           
  8636                           ;I2C2.c: 85: SSP2CON2bits.PEN = 1;
  8637  0FCC  0024               	movlb	4	; select bank4
  8638  0FCD  151E               	bsf	30,2	;volatile
  8639                           
  8640                           ;I2C2.c: 86: break;
  8641  0FCE  2FFD               	goto	l3548
  8642  0FCF                     l481:	
  8643                           ;I2C2.c: 88: case I2C_MODE_SLAVE:
  8644                           
  8645                           
  8646                           ;I2C2.c: 89: if((SSP2STATbits.S==0)&&(SSP2STATbits.P==1))
  8647  0FCF  0024               	movlb	4	; select bank4
  8648  0FD0  1D9C               	btfss	28,3	;volatile
  8649  0FD1  1E1C               	btfss	28,4	;volatile
  8650  0FD2  2FF1               	goto	l3542
  8651                           
  8652                           ;I2C2.c: 90: {
  8653                           ;I2C2.c: 91: for(uint8_t i = 0;i<size;i++)
  8654  0FD3  0020               	movlb	0	; select bank0
  8655  0FD4  01A6               	clrf	I2C2_Transmit@i_560
  8656  0FD5                     l3538:	
  8657  0FD5  0821               	movf	I2C2_Transmit@size,w
  8658  0FD6  0226               	subwf	I2C2_Transmit@i_560,w
  8659  0FD7  1803               	btfsc	3,0
  8660  0FD8  2FEC               	goto	l3540
  8661                           
  8662                           ;I2C2.c: 92: I2C2_Config.SlaveTransmitBuff[i] = pData[i];
  8663  0FD9  0826               	movf	I2C2_Transmit@i_560,w
  8664  0FDA  0720               	addwf	I2C2_Transmit@pData,w
  8665  0FDB  00A2               	movwf	??_I2C2_Transmit
  8666  0FDC  0822               	movf	??_I2C2_Transmit,w
  8667  0FDD  0086               	movwf	6
  8668  0FDE  0187               	clrf	7
  8669  0FDF  0801               	movf	1,w
  8670  0FE0  00A3               	movwf	??_I2C2_Transmit+1
  8671  0FE1  0826               	movf	I2C2_Transmit@i_560,w
  8672  0FE2  3EB2               	addlw	(low (_I2C2_Config| 0))& (0+255)
  8673  0FE3  0086               	movwf	6
  8674  0FE4  0187               	clrf	7
  8675  0FE5  0823               	movf	??_I2C2_Transmit+1,w
  8676  0FE6  0081               	movwf	1
  8677  0FE7  3001               	movlw	1
  8678  0FE8  00A2               	movwf	??_I2C2_Transmit
  8679  0FE9  0822               	movf	??_I2C2_Transmit,w
  8680  0FEA  07A6               	addwf	I2C2_Transmit@i_560,f
  8681  0FEB  2FD5               	goto	l3538
  8682  0FEC                     l3540:	
  8683                           
  8684                           ;I2C2.c: 93: result = size;
  8685  0FEC  0821               	movf	I2C2_Transmit@size,w
  8686  0FED  00A2               	movwf	??_I2C2_Transmit
  8687  0FEE  0822               	movf	??_I2C2_Transmit,w
  8688  0FEF  00A7               	movwf	I2C2_Transmit@result
  8689                           
  8690                           ;I2C2.c: 94: }
  8691  0FF0  2FFD               	goto	l3548
  8692  0FF1                     l3542:	
  8693                           
  8694                           ;I2C2.c: 95: else
  8695                           ;I2C2.c: 96: result = 0;
  8696  0FF1  0020               	movlb	0	; select bank0
  8697  0FF2  01A7               	clrf	I2C2_Transmit@result
  8698                           
  8699                           ;I2C2.c: 98: }
  8700                           
  8701                           ;I2C2.c: 97: break;
  8702  0FF3  2FFD               	goto	l3548
  8703  0FF4                     l3546:	
  8704  0FF4  0021               	movlb	1	; select bank1
  8705  0FF5  0844               	movf	(_I2C2_Config^(0+128)+18),w
  8706                           
  8707                           ; Switch size 1, requested type "space"
  8708                           ; Number of cases is 2, Range of values is 0 to 1
  8709                           ; switch strategies available:
  8710                           ; Name         Instructions Cycles
  8711                           ; simple_byte            7     4 (average)
  8712                           ; direct_byte           10     6 (fixed)
  8713                           ; jumptable            260     6 (fixed)
  8714                           ;	Chosen strategy is simple_byte
  8715  0FF6  3A00               	xorlw	0	; case 0
  8716  0FF7  1903               	skipnz
  8717  0FF8  2F6C               	goto	l3502
  8718  0FF9  3A01               	xorlw	1	; case 1
  8719  0FFA  1903               	skipnz
  8720  0FFB  2FCF               	goto	l481
  8721  0FFC  2FFD               	goto	l3548
  8722  0FFD                     l3548:	
  8723                           
  8724                           ;I2C2.c: 100: return result;
  8725  0FFD  0020               	movlb	0	; select bank0
  8726  0FFE  0827               	movf	I2C2_Transmit@result,w
  8727  0FFF  0008               	return
  8728  1000                     __end_of_I2C2_Transmit:	
  8729                           
  8730                           	psect	text40
  8731  0A03                     __ptext40:	
  8732 ;; *************** function _I2C_Init *****************
  8733 ;; Defined at:
  8734 ;;		line 6 in file "I2C_Common.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  I2Cx            1    wreg     enum E3285
  8737 ;;  address         1    5[BANK0 ] unsigned char 
  8738 ;;  mode            1    6[BANK0 ] enum E3276
  8739 ;;  Speed           1    7[BANK0 ] enum E3280
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  I2Cx            1   10[BANK0 ] enum E3285
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  1    wreg      void 
  8744 ;; Registers used:
  8745 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8751 ;;      Params:         0       3       0       0       0       0
  8752 ;;      Locals:         0       1       0       0       0       0
  8753 ;;      Temps:          0       2       0       0       0       0
  8754 ;;      Totals:         0       6       0       0       0       0
  8755 ;;Total ram usage:        6 bytes
  8756 ;; Hardware stack levels used:    1
  8757 ;; Hardware stack levels required when called:    5
  8758 ;; This function calls:
  8759 ;;		_I2C2_Setting
  8760 ;; This function is called by:
  8761 ;;		_DAC_Initialize
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           
  8766                           ;psect for function _I2C_Init
  8767  0A03                     _I2C_Init:	
  8768                           
  8769                           ;incstack = 0
  8770                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8771                           ;I2C_Init@I2Cx stored from wreg
  8772  0A03  0020               	movlb	0	; select bank0
  8773  0A04  00AA               	movwf	I2C_Init@I2Cx
  8774                           
  8775                           ;I2C_Common.c: 8: switch(I2Cx)
  8776  0A05  2A13               	goto	l3780
  8777  0A06                     l3776:	
  8778                           ;I2C_Common.c: 9: {
  8779                           ;I2C_Common.c: 14: case I2C2_MODULE:
  8780                           
  8781                           
  8782                           ;I2C_Common.c: 15: I2C2_Setting(address,mode,Speed);
  8783  0A06  0826               	movf	I2C_Init@mode,w
  8784  0A07  00A8               	movwf	??_I2C_Init
  8785  0A08  0828               	movf	??_I2C_Init,w
  8786  0A09  00A1               	movwf	I2C2_Setting@mode
  8787  0A0A  0827               	movf	I2C_Init@Speed,w
  8788  0A0B  00A9               	movwf	??_I2C_Init+1
  8789  0A0C  0829               	movf	??_I2C_Init+1,w
  8790  0A0D  00A2               	movwf	I2C2_Setting@Speed
  8791  0A0E  0825               	movf	I2C_Init@address,w
  8792  0A0F  318D  259F  318A   	fcall	_I2C2_Setting
  8793                           
  8794                           ;I2C_Common.c: 17: }
  8795                           
  8796                           ;I2C_Common.c: 16: break;
  8797  0A12  2A19               	goto	l54
  8798  0A13                     l3780:	
  8799  0A13  0020               	movlb	0	; select bank0
  8800  0A14  082A               	movf	I2C_Init@I2Cx,w
  8801                           
  8802                           ; Switch size 1, requested type "space"
  8803                           ; Number of cases is 1, Range of values is 1 to 1
  8804                           ; switch strategies available:
  8805                           ; Name         Instructions Cycles
  8806                           ; simple_byte            4     3 (average)
  8807                           ; direct_byte           11     9 (fixed)
  8808                           ; jumptable            263     9 (fixed)
  8809                           ;	Chosen strategy is simple_byte
  8810  0A15  3A01               	xorlw	1	; case 1
  8811  0A16  1903               	skipnz
  8812  0A17  2A06               	goto	l3776
  8813  0A18  2A19               	goto	l54
  8814  0A19                     l54:	
  8815                           
  8816                           ;I2C_Common.c: 19: PEIE = 1;
  8817  0A19  170B               	bsf	11,6	;volatile
  8818                           
  8819                           ;I2C_Common.c: 20: GIE = 1;
  8820  0A1A  178B               	bsf	11,7	;volatile
  8821  0A1B  0008               	return
  8822  0A1C                     __end_of_I2C_Init:	
  8823                           
  8824                           	psect	text41
  8825  0D9F                     __ptext41:	
  8826 ;; *************** function _I2C2_Setting *****************
  8827 ;; Defined at:
  8828 ;;		line 15 in file "I2C2.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  address         1    wreg     unsigned char 
  8831 ;;  mode            1    1[BANK0 ] enum E3276
  8832 ;;  Speed           1    2[BANK0 ] enum E3280
  8833 ;; Auto vars:     Size  Location     Type
  8834 ;;  address         1    4[BANK0 ] unsigned char 
  8835 ;; Return value:  Size  Location     Type
  8836 ;;                  1    wreg      void 
  8837 ;; Registers used:
  8838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8839 ;; Tracked objects:
  8840 ;;		On entry : 0/0
  8841 ;;		On exit  : 0/0
  8842 ;;		Unchanged: 0/0
  8843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8844 ;;      Params:         0       2       0       0       0       0
  8845 ;;      Locals:         0       1       0       0       0       0
  8846 ;;      Temps:          0       1       0       0       0       0
  8847 ;;      Totals:         0       4       0       0       0       0
  8848 ;;Total ram usage:        4 bytes
  8849 ;; Hardware stack levels used:    1
  8850 ;; Hardware stack levels required when called:    4
  8851 ;; This function calls:
  8852 ;;		_I2C2_PinInit
  8853 ;; This function is called by:
  8854 ;;		_I2C_Init
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           
  8859                           ;psect for function _I2C2_Setting
  8860  0D9F                     _I2C2_Setting:	
  8861                           
  8862                           ;incstack = 0
  8863                           ; Regs used in _I2C2_Setting: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8864                           ;I2C2_Setting@address stored from wreg
  8865  0D9F  0020               	movlb	0	; select bank0
  8866  0DA0  00A4               	movwf	I2C2_Setting@address
  8867                           
  8868                           ;I2C2.c: 17: I2C2_PinInit();
  8869  0DA1  3189  2136  318D   	fcall	_I2C2_PinInit
  8870                           
  8871                           ;I2C2.c: 18: I2C2_Config.Mode = mode;
  8872  0DA4  0020               	movlb	0	; select bank0
  8873  0DA5  0821               	movf	I2C2_Setting@mode,w
  8874  0DA6  00A3               	movwf	??_I2C2_Setting
  8875  0DA7  0823               	movf	??_I2C2_Setting,w
  8876  0DA8  0021               	movlb	1	; select bank1
  8877  0DA9  00C4               	movwf	(_I2C2_Config^(0+128)+18)
  8878                           
  8879                           ;I2C2.c: 20: switch(mode)
  8880  0DAA  2DD3               	goto	l3636
  8881  0DAB                     l446:	
  8882                           ;I2C2.c: 21: {
  8883                           ;I2C2.c: 22: case I2C_MODE_MASTER:
  8884                           
  8885                           
  8886                           ;I2C2.c: 23: SSP2CON1 |= (0x08<<0);
  8887  0DAB  0024               	movlb	4	; select bank4
  8888  0DAC  159D               	bsf	29,3	;volatile
  8889                           
  8890                           ;I2C2.c: 24: if(Speed==I2C_SPEED_STANDARD)
  8891  0DAD  0020               	movlb	0	; select bank0
  8892  0DAE  0822               	movf	I2C2_Setting@Speed,w
  8893  0DAF  1D03               	btfss	3,2
  8894  0DB0  2DB5               	goto	l3614
  8895                           
  8896                           ;I2C2.c: 25: {
  8897                           ;I2C2.c: 26: SSP2STAT |= (1<<7);
  8898  0DB1  0024               	movlb	4	; select bank4
  8899  0DB2  179C               	bsf	28,7	;volatile
  8900                           
  8901                           ;I2C2.c: 27: SSP2ADD = 0x4F;
  8902  0DB3  304F               	movlw	79
  8903  0DB4  2DBF               	goto	L12
  8904  0DB5                     l3614:	
  8905                           ;I2C2.c: 28: }
  8906                           
  8907                           
  8908                           ;I2C2.c: 29: else if(Speed==I2C_SPEED_HIGH)
  8909  0DB5  0020               	movlb	0	; select bank0
  8910  0DB6  0322               	decf	I2C2_Setting@Speed,w
  8911  0DB7  1D03               	btfss	3,2
  8912  0DB8  2DC0               	goto	l3620
  8913                           
  8914                           ;I2C2.c: 30: {
  8915                           ;I2C2.c: 31: SSP2STAT &= ~(1<<7);
  8916  0DB9  307F               	movlw	127
  8917  0DBA  00A3               	movwf	??_I2C2_Setting
  8918  0DBB  0823               	movf	??_I2C2_Setting,w
  8919  0DBC  0024               	movlb	4	; select bank4
  8920  0DBD  059C               	andwf	28,f	;volatile
  8921                           
  8922                           ;I2C2.c: 32: SSP2ADD = 0x13;
  8923  0DBE  3013               	movlw	19
  8924  0DBF                     L12:	
  8925  0DBF  009A               	movwf	26	;volatile
  8926  0DC0                     l3620:	
  8927                           
  8928                           ;I2C2.c: 33: }
  8929                           ;I2C2.c: 34: SSP2CON1bits.SSPEN = 1;
  8930  0DC0  0024               	movlb	4	; select bank4
  8931  0DC1  2DD1               	goto	l3632
  8932  0DC2                     l3622:	
  8933                           ;I2C2.c: 37: case I2C_MODE_SLAVE:
  8934                           
  8935                           ;I2C2.c: 35: break;
  8936                           
  8937                           
  8938                           ;I2C2.c: 38: SSP2STAT = 0x00;
  8939  0DC2  0024               	movlb	4	; select bank4
  8940  0DC3  019C               	clrf	28	;volatile
  8941                           
  8942                           ;I2C2.c: 39: SSP2CON1 |= (0x06<<0);
  8943  0DC4  3006               	movlw	6
  8944  0DC5  0020               	movlb	0	; select bank0
  8945  0DC6  00A3               	movwf	??_I2C2_Setting
  8946  0DC7  0823               	movf	??_I2C2_Setting,w
  8947  0DC8  0024               	movlb	4	; select bank4
  8948  0DC9  049D               	iorwf	29,f	;volatile
  8949                           
  8950                           ;I2C2.c: 40: SSP2CON2bits.SEN= 1;
  8951  0DCA  141E               	bsf	30,0	;volatile
  8952                           
  8953                           ;I2C2.c: 41: SSP2ADD = address << 1;
  8954  0DCB  0020               	movlb	0	; select bank0
  8955  0DCC  3524               	lslf	I2C2_Setting@address,w
  8956  0DCD  0024               	movlb	4	; select bank4
  8957  0DCE  009A               	movwf	26	;volatile
  8958                           
  8959                           ;I2C2.c: 42: SSP2MSK = 0xFE;
  8960  0DCF  30FE               	movlw	254
  8961  0DD0  009B               	movwf	27	;volatile
  8962  0DD1                     l3632:	
  8963                           
  8964                           ;I2C2.c: 43: SSP2CON1bits.SSPEN = 1;
  8965  0DD1  169D               	bsf	29,5	;volatile
  8966                           
  8967                           ;I2C2.c: 45: }
  8968                           
  8969                           ;I2C2.c: 44: break;
  8970  0DD2  2DDC               	goto	l450
  8971  0DD3                     l3636:	
  8972  0DD3  0020               	movlb	0	; select bank0
  8973  0DD4  0821               	movf	I2C2_Setting@mode,w
  8974                           
  8975                           ; Switch size 1, requested type "space"
  8976                           ; Number of cases is 2, Range of values is 0 to 1
  8977                           ; switch strategies available:
  8978                           ; Name         Instructions Cycles
  8979                           ; simple_byte            7     4 (average)
  8980                           ; direct_byte           10     6 (fixed)
  8981                           ; jumptable            260     6 (fixed)
  8982                           ;	Chosen strategy is simple_byte
  8983  0DD5  3A00               	xorlw	0	; case 0
  8984  0DD6  1903               	skipnz
  8985  0DD7  2DAB               	goto	l446
  8986  0DD8  3A01               	xorlw	1	; case 1
  8987  0DD9  1903               	skipnz
  8988  0DDA  2DC2               	goto	l3622
  8989  0DDB  2DDC               	goto	l450
  8990  0DDC                     l450:	
  8991                           
  8992                           ;I2C2.c: 46: SSP2IE = 1;
  8993  0DDC  0021               	movlb	1	; select bank1
  8994  0DDD  1414               	bsf	20,0	;volatile
  8995                           
  8996                           ;I2C2.c: 47: BCL2IE = 1;
  8997  0DDE  1494               	bsf	20,1	;volatile
  8998                           
  8999                           ;I2C2.c: 48: SSP2IF = 0;
  9000  0DDF  0020               	movlb	0	; select bank0
  9001  0DE0  1014               	bcf	20,0	;volatile
  9002                           
  9003                           ;I2C2.c: 49: BCL2IF = 0;
  9004  0DE1  1094               	bcf	20,1	;volatile
  9005  0DE2  0008               	return
  9006  0DE3                     __end_of_I2C2_Setting:	
  9007                           
  9008                           	psect	text42
  9009  0936                     __ptext42:	
  9010 ;; *************** function _I2C2_PinInit *****************
  9011 ;; Defined at:
  9012 ;;		line 9 in file "I2C2.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;		None
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;		None
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1    wreg      void 
  9019 ;; Registers used:
  9020 ;;		wreg, status,2, status,0
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9026 ;;      Params:         0       0       0       0       0       0
  9027 ;;      Locals:         0       0       0       0       0       0
  9028 ;;      Temps:          0       1       0       0       0       0
  9029 ;;      Totals:         0       1       0       0       0       0
  9030 ;;Total ram usage:        1 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:    3
  9033 ;; This function calls:
  9034 ;;		Nothing
  9035 ;; This function is called by:
  9036 ;;		_I2C2_Setting
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           
  9041                           ;psect for function _I2C2_PinInit
  9042  0936                     _I2C2_PinInit:	
  9043                           
  9044                           ;I2C2.c: 11: TRISB |= ((1<<2)|(1<<5));
  9045                           
  9046                           ;incstack = 0
  9047                           ; Regs used in _I2C2_PinInit: [wreg+status,2+status,0]
  9048  0936  3024               	movlw	36
  9049  0937  0020               	movlb	0	; select bank0
  9050  0938  00A0               	movwf	??_I2C2_PinInit
  9051  0939  0820               	movf	??_I2C2_PinInit,w
  9052  093A  0021               	movlb	1	; select bank1
  9053  093B  048D               	iorwf	13,f	;volatile
  9054                           
  9055                           ;I2C2.c: 12: ANSELB &= ~((1<<2)|(1<<5));
  9056  093C  30DB               	movlw	219
  9057  093D  0020               	movlb	0	; select bank0
  9058  093E  00A0               	movwf	??_I2C2_PinInit
  9059  093F  0820               	movf	??_I2C2_PinInit,w
  9060  0940  0023               	movlb	3	; select bank3
  9061  0941  058D               	andwf	13,f	;volatile
  9062  0942  0008               	return
  9063  0943                     __end_of_I2C2_PinInit:	
  9064                           
  9065                           	psect	text43
  9066  0B2F                     __ptext43:	
  9067 ;; *************** function _Buzzer_Init *****************
  9068 ;; Defined at:
  9069 ;;		line 11 in file "Buzzer.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;		None
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, status,0
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9083 ;;      Params:         0       0       0       0       0       0
  9084 ;;      Locals:         0       0       0       0       0       0
  9085 ;;      Temps:          0       1       0       0       0       0
  9086 ;;      Totals:         0       1       0       0       0       0
  9087 ;;Total ram usage:        1 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    3
  9090 ;; This function calls:
  9091 ;;		Nothing
  9092 ;; This function is called by:
  9093 ;;		_main
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           
  9098                           ;psect for function _Buzzer_Init
  9099  0B2F                     _Buzzer_Init:	
  9100                           
  9101                           ;Buzzer.c: 13: TRISA &= ~(0x01<<7);
  9102                           
  9103                           ;incstack = 0
  9104                           ; Regs used in _Buzzer_Init: [wreg+status,2+status,0]
  9105  0B2F  307F               	movlw	127
  9106  0B30  0020               	movlb	0	; select bank0
  9107  0B31  00A0               	movwf	??_Buzzer_Init
  9108  0B32  0820               	movf	??_Buzzer_Init,w
  9109  0B33  0021               	movlb	1	; select bank1
  9110  0B34  058C               	andwf	12,f	;volatile
  9111                           
  9112                           ;Buzzer.c: 14: ANSELA &= ~(0x01<<7);
  9113  0B35  307F               	movlw	127
  9114  0B36  0020               	movlb	0	; select bank0
  9115  0B37  00A0               	movwf	??_Buzzer_Init
  9116  0B38  0820               	movf	??_Buzzer_Init,w
  9117  0B39  0023               	movlb	3	; select bank3
  9118  0B3A  058C               	andwf	12,f	;volatile
  9119                           
  9120                           ;Buzzer.c: 15: APFCON0 |= (0x01<<3);
  9121  0B3B  0022               	movlb	2	; select bank2
  9122  0B3C  159D               	bsf	29,3	;volatile
  9123                           
  9124                           ;Buzzer.c: 17: T2CON |= (0x00<<3);
  9125  0B3D  0020               	movlb	0	; select bank0
  9126  0B3E  081C               	movf	28,w	;volatile
  9127                           
  9128                           ;Buzzer.c: 18: T2CON |= (0x02<<0);
  9129  0B3F  149C               	bsf	28,1	;volatile
  9130                           
  9131                           ;Buzzer.c: 19: T2CON |= (0x01<<2);
  9132  0B40  151C               	bsf	28,2	;volatile
  9133                           
  9134                           ;Buzzer.c: 21: TMR2 = 0x00;
  9135  0B41  019A               	clrf	26	;volatile
  9136                           
  9137                           ;Buzzer.c: 22: PR2 = 0xFF;
  9138  0B42  30FF               	movlw	255
  9139  0B43  009B               	movwf	27	;volatile
  9140                           
  9141                           ;Buzzer.c: 24: CCP2CON &= ~(0x03<<6);
  9142  0B44  303F               	movlw	63
  9143  0B45  00A0               	movwf	??_Buzzer_Init
  9144  0B46  0820               	movf	??_Buzzer_Init,w
  9145  0B47  0025               	movlb	5	; select bank5
  9146  0B48  059A               	andwf	26,f	;volatile
  9147                           
  9148                           ;Buzzer.c: 25: CCP2CON |= (0x0C<<0);
  9149  0B49  300C               	movlw	12
  9150  0B4A  0020               	movlb	0	; select bank0
  9151  0B4B  00A0               	movwf	??_Buzzer_Init
  9152  0B4C  0820               	movf	??_Buzzer_Init,w
  9153  0B4D  0025               	movlb	5	; select bank5
  9154  0B4E  049A               	iorwf	26,f	;volatile
  9155                           
  9156                           ;Buzzer.c: 26: CCPTMRS &= ~(0x03<<2);
  9157  0B4F  30F3               	movlw	243
  9158  0B50  0020               	movlb	0	; select bank0
  9159  0B51  00A0               	movwf	??_Buzzer_Init
  9160  0B52  0820               	movf	??_Buzzer_Init,w
  9161  0B53  0025               	movlb	5	; select bank5
  9162  0B54  059E               	andwf	30,f	;volatile
  9163                           
  9164                           ;Buzzer.c: 28: CCPR2L = 0x00;
  9165  0B55  0198               	clrf	24	;volatile
  9166  0B56  0008               	return
  9167  0B57                     __end_of_Buzzer_Init:	
  9168                           
  9169                           	psect	text44
  9170  098F                     __ptext44:	
  9171 ;; *************** function _Basic_Init *****************
  9172 ;; Defined at:
  9173 ;;		line 135 in file "main.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;		None
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      char 
  9180 ;; Registers used:
  9181 ;;		wreg, status,2
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9187 ;;      Params:         0       0       0       0       0       0
  9188 ;;      Locals:         0       0       0       0       0       0
  9189 ;;      Temps:          0       0       0       0       0       0
  9190 ;;      Totals:         0       0       0       0       0       0
  9191 ;;Total ram usage:        0 bytes
  9192 ;; Hardware stack levels used:    1
  9193 ;; Hardware stack levels required when called:    3
  9194 ;; This function calls:
  9195 ;;		Nothing
  9196 ;; This function is called by:
  9197 ;;		_main
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           
  9201                           
  9202                           ;psect for function _Basic_Init
  9203  098F                     _Basic_Init:	
  9204                           
  9205                           ;main.c: 137: OSCCON = 0xF0;
  9206                           
  9207                           ;incstack = 0
  9208                           ; Regs used in _Basic_Init: [wreg+status,2]
  9209  098F  30F0               	movlw	240
  9210  0990  0021               	movlb	1	; select bank1
  9211  0991  0099               	movwf	25	;volatile
  9212                           
  9213                           ;main.c: 141: TRISA = 0x00;
  9214  0992  018C               	clrf	12	;volatile
  9215                           
  9216                           ;main.c: 142: ANSELA = 0x00;
  9217  0993  0023               	movlb	3	; select bank3
  9218  0994  018C               	clrf	12	;volatile
  9219                           
  9220                           ;main.c: 144: TRISB = 0x00;
  9221  0995  0021               	movlb	1	; select bank1
  9222  0996  018D               	clrf	13	;volatile
  9223                           
  9224                           ;main.c: 145: ANSELB = 0x00;
  9225  0997  0023               	movlb	3	; select bank3
  9226  0998  018D               	clrf	13	;volatile
  9227                           
  9228                           ;main.c: 147: APFCON0 = 0x00;
  9229  0999  0022               	movlb	2	; select bank2
  9230  099A  019D               	clrf	29	;volatile
  9231                           
  9232                           ;main.c: 148: APFCON1 = 0x00;
  9233  099B  019E               	clrf	30	;volatile
  9234                           
  9235                           ;main.c: 150: PORTA = 0x00;
  9236  099C  0020               	movlb	0	; select bank0
  9237  099D  018C               	clrf	12	;volatile
  9238                           
  9239                           ;main.c: 151: PORTB = 0x00;
  9240  099E  018D               	clrf	13	;volatile
  9241  099F  0008               	return
  9242  09A0                     __end_of_Basic_Init:	
  9243                           ;main.c: 153: return 0;
  9244                           ;	Return value of _Basic_Init is never used
  9245                           
  9246                           
  9247                           	psect	intentry
  9248  0004                     __pintentry:	
  9249 ;; *************** function _Handler *****************
  9250 ;; Defined at:
  9251 ;;		line 156 in file "main.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;		None
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;		None
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      void 
  9258 ;; Registers used:
  9259 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9265 ;;      Params:         0       0       0       0       0       0
  9266 ;;      Locals:         0       0       0       0       0       0
  9267 ;;      Temps:          1       0       0       0       0       0
  9268 ;;      Totals:         1       0       0       0       0       0
  9269 ;;Total ram usage:        1 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; Hardware stack levels required when called:    2
  9272 ;; This function calls:
  9273 ;;		_Buzzer_Count1ms
  9274 ;;		_I2C_CommonInterrupt
  9275 ;;		_Timer1_Count1ms
  9276 ;;		_Timer1_DetectAssignCount
  9277 ;;		_Timer6_CheckFlag
  9278 ;;		_mTouch_IntervalDecrement
  9279 ;;		_mTouch_Read
  9280 ;; This function is called by:
  9281 ;;		Interrupt level 1
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285  0004                     _Handler:	
  9286                           
  9287                           ;incstack = 0
  9288  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9289                           
  9290                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9291  0005  3180               	pagesel	$
  9292  0006  0020               	movlb	0	; select bank0
  9293  0007  087F               	movf	127,w
  9294  0008  00FB               	movwf	??_Handler
  9295                           
  9296                           ;main.c: 158: if(Timer1_DetectAssignCount())
  9297  0009  318A  221C  3180   	fcall	_Timer1_DetectAssignCount
  9298  000C  3A00               	xorlw	0
  9299  000D  1903               	skipnz
  9300  000E  2812               	goto	i1l3472
  9301                           
  9302                           ;main.c: 159: LATA6 = !LATA6;
  9303  000F  3040               	movlw	64
  9304  0010  0022               	movlb	2	; select bank2
  9305  0011  068C               	xorwf	12,f
  9306  0012                     i1l3472:	
  9307                           
  9308                           ;main.c: 161: if(Timer6_CheckFlag())
  9309  0012  3189  2115  3180   	fcall	_Timer6_CheckFlag
  9310  0015  3A00               	xorlw	0
  9311  0016  1903               	skipnz
  9312  0017  2824               	goto	i1l400
  9313                           
  9314                           ;main.c: 162: {
  9315                           ;main.c: 163: mTouch_IntervalDecrement();
  9316  0018  3189  215F  3180   	fcall	_mTouch_IntervalDecrement
  9317                           
  9318                           ;main.c: 164: Timer1_Count1ms();
  9319  001B  318C  246B  3180   	fcall	_Timer1_Count1ms
  9320                           
  9321                           ;main.c: 166: mTouch_Read();
  9322  001E  318B  2309  3180   	fcall	_mTouch_Read
  9323                           
  9324                           ;main.c: 167: Buzzer_Count1ms();
  9325  0021  3189  21D7  3180   	fcall	_Buzzer_Count1ms
  9326  0024                     i1l400:	
  9327                           
  9328                           ;main.c: 168: }
  9329                           ;main.c: 169: I2C_CommonInterrupt();
  9330  0024  3188  20DC         	fcall	_I2C_CommonInterrupt
  9331  0026  087B               	movf	??_Handler,w
  9332  0027  0020               	movlb	0	; select bank0
  9333  0028  00FF               	movwf	127
  9334  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9335  002A  0009               	retfie
  9336  002B                     __end_of_Handler:	
  9337                           
  9338                           	psect	text46
  9339  0B09                     __ptext46:	
  9340 ;; *************** function _mTouch_Read *****************
  9341 ;; Defined at:
  9342 ;;		line 36 in file "mTouch.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;		None
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;		None
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      void 
  9349 ;; Registers used:
  9350 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9356 ;;      Params:         0       0       0       0       0       0
  9357 ;;      Locals:         0       0       0       0       0       0
  9358 ;;      Temps:          1       0       0       0       0       0
  9359 ;;      Totals:         1       0       0       0       0       0
  9360 ;;Total ram usage:        1 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; This function calls:
  9363 ;;		Nothing
  9364 ;; This function is called by:
  9365 ;;		_Handler
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           
  9370                           ;psect for function _mTouch_Read
  9371  0B09                     _mTouch_Read:	
  9372                           
  9373                           ;mTouch.c: 38: static uint8_t channel=0;
  9374                           ;mTouch.c: 40: CPS_PreData[channel] = CPS_Data[channel];
  9375                           
  9376                           ;incstack = 0
  9377                           ; Regs used in _mTouch_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9378  0B09  0875               	movf	mTouch_Read@channel,w
  9379  0B0A  3EAF               	addlw	(low (_CPS_Data| 0))& (0+255)
  9380  0B0B  0086               	movwf	6
  9381  0B0C  0187               	clrf	7
  9382  0B0D  0801               	movf	1,w
  9383  0B0E  00F6               	movwf	??_mTouch_Read
  9384  0B0F  0875               	movf	mTouch_Read@channel,w
  9385  0B10  3EAC               	addlw	(low (_CPS_PreData| 0))& (0+255)
  9386  0B11  0086               	movwf	6
  9387  0B12  0187               	clrf	7
  9388  0B13  0876               	movf	??_mTouch_Read,w
  9389  0B14  0081               	movwf	1
  9390                           
  9391                           ;mTouch.c: 42: CPSCON0 &= ~(0x01<<7);;
  9392  0B15  307F               	movlw	127
  9393  0B16  00F6               	movwf	??_mTouch_Read
  9394  0B17  0876               	movf	??_mTouch_Read,w
  9395  0B18  0020               	movlb	0	; select bank0
  9396  0B19  059E               	andwf	30,f	;volatile
  9397                           
  9398                           ;mTouch.c: 43: CPS_Data[channel] = TMR0;
  9399  0B1A  0815               	movf	21,w	;volatile
  9400  0B1B  00F6               	movwf	??_mTouch_Read
  9401  0B1C  0875               	movf	mTouch_Read@channel,w
  9402  0B1D  3EAF               	addlw	(low (_CPS_Data| 0))& (0+255)
  9403  0B1E  0086               	movwf	6
  9404  0B1F  0187               	clrf	7
  9405  0B20  0876               	movf	??_mTouch_Read,w
  9406  0B21  0081               	movwf	1
  9407                           
  9408                           ;mTouch.c: 44: TMR0 = 0x00;
  9409  0B22  0195               	clrf	21	;volatile
  9410                           
  9411                           ;mTouch.c: 45: CPSCON0 |= (0x01<<7);;
  9412  0B23  179E               	bsf	30,7	;volatile
  9413                           
  9414                           ;mTouch.c: 47: if(++channel>2)channel = 0;
  9415  0B24  3001               	movlw	1
  9416  0B25  00F6               	movwf	??_mTouch_Read
  9417  0B26  0876               	movf	??_mTouch_Read,w
  9418  0B27  07F5               	addwf	mTouch_Read@channel,f
  9419  0B28  3003               	movlw	3
  9420  0B29  0275               	subwf	mTouch_Read@channel,w
  9421  0B2A  1803               	btfsc	3,0
  9422  0B2B  01F5               	clrf	mTouch_Read@channel
  9423                           
  9424                           ;mTouch.c: 48: CPSCON1 = (uint8_t)channel;
  9425  0B2C  0875               	movf	mTouch_Read@channel,w
  9426  0B2D  009F               	movwf	31	;volatile
  9427  0B2E  0008               	return
  9428  0B2F                     __end_of_mTouch_Read:	
  9429                           
  9430                           	psect	text47
  9431  095F                     __ptext47:	
  9432 ;; *************** function _mTouch_IntervalDecrement *****************
  9433 ;; Defined at:
  9434 ;;		line 51 in file "mTouch.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;		None
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  1    wreg      void 
  9441 ;; Registers used:
  9442 ;;		wreg, status,2, status,0
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9448 ;;      Params:         0       0       0       0       0       0
  9449 ;;      Locals:         0       0       0       0       0       0
  9450 ;;      Temps:          0       0       0       0       0       0
  9451 ;;      Totals:         0       0       0       0       0       0
  9452 ;;Total ram usage:        0 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_Handler
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           
  9461                           
  9462                           ;psect for function _mTouch_IntervalDecrement
  9463  095F                     _mTouch_IntervalDecrement:	
  9464                           
  9465                           ;mTouch.c: 53: if(mTouch_Interval[0]>0)
  9466                           
  9467                           ;incstack = 0
  9468                           ; Regs used in _mTouch_IntervalDecrement: [wreg+status,2+status,0]
  9469  095F  0870               	movf	_mTouch_Interval,w
  9470  0960  1903               	btfsc	3,2
  9471  0961  2964               	goto	i1l272
  9472                           
  9473                           ;mTouch.c: 54: mTouch_Interval[0]--;
  9474  0962  3001               	movlw	1
  9475  0963  02F0               	subwf	_mTouch_Interval,f
  9476  0964                     i1l272:	
  9477                           
  9478                           ;mTouch.c: 55: if(mTouch_Interval[1]>0)
  9479  0964  0871               	movf	_mTouch_Interval+1,w
  9480  0965  1903               	btfsc	3,2
  9481  0966  2969               	goto	i1l273
  9482                           
  9483                           ;mTouch.c: 56: mTouch_Interval[1]--;
  9484  0967  3001               	movlw	1
  9485  0968  02F1               	subwf	_mTouch_Interval+1,f
  9486  0969                     i1l273:	
  9487                           
  9488                           ;mTouch.c: 57: if(mTouch_Interval[2]>0)
  9489  0969  0872               	movf	_mTouch_Interval+2,w
  9490  096A  1903               	btfsc	3,2
  9491  096B  0008               	return
  9492                           
  9493                           ;mTouch.c: 58: mTouch_Interval[2]--;
  9494  096C  3001               	movlw	1
  9495  096D  02F2               	subwf	_mTouch_Interval+2,f
  9496  096E  0008               	return
  9497  096F                     __end_of_mTouch_IntervalDecrement:	
  9498                           
  9499                           	psect	text48
  9500  0915                     __ptext48:	
  9501 ;; *************** function _Timer6_CheckFlag *****************
  9502 ;; Defined at:
  9503 ;;		line 17 in file "Timer6.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;		None
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;		None
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      unsigned char 
  9510 ;; Registers used:
  9511 ;;		wreg
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9517 ;;      Params:         0       0       0       0       0       0
  9518 ;;      Locals:         0       0       0       0       0       0
  9519 ;;      Temps:          0       0       0       0       0       0
  9520 ;;      Totals:         0       0       0       0       0       0
  9521 ;;Total ram usage:        0 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; This function calls:
  9524 ;;		Nothing
  9525 ;; This function is called by:
  9526 ;;		_Handler
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           
  9531                           ;psect for function _Timer6_CheckFlag
  9532  0915                     _Timer6_CheckFlag:	
  9533                           
  9534                           ;Timer6.c: 19: if(TMR6IE&&TMR6IF)
  9535                           
  9536                           ;incstack = 0
  9537                           ; Regs used in _Timer6_CheckFlag: [wreg]
  9538  0915  0021               	movlb	1	; select bank1
  9539  0916  1D93               	btfss	19,3	;volatile
  9540  0917  291E               	goto	i1l1964
  9541  0918  0020               	movlb	0	; select bank0
  9542  0919  1D93               	btfss	19,3	;volatile
  9543  091A  291E               	goto	i1l1964
  9544                           
  9545                           ;Timer6.c: 20: {
  9546                           ;Timer6.c: 21: TMR6IF = 0;
  9547  091B  1193               	bcf	19,3	;volatile
  9548                           
  9549                           ;Timer6.c: 22: return 1;
  9550  091C  3001               	movlw	1
  9551  091D  0008               	return
  9552  091E                     i1l1964:	
  9553                           
  9554                           ;Timer6.c: 23: }
  9555                           ;Timer6.c: 24: return 0;
  9556  091E  3000               	movlw	0
  9557  091F  0008               	return
  9558  0920                     __end_of_Timer6_CheckFlag:	
  9559                           
  9560                           	psect	text49
  9561  0A1C                     __ptext49:	
  9562 ;; *************** function _Timer1_DetectAssignCount *****************
  9563 ;; Defined at:
  9564 ;;		line 105 in file "Timer1.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;		None
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;		None
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  1    wreg      unsigned char 
  9571 ;; Registers used:
  9572 ;;		wreg
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9578 ;;      Params:         0       0       0       0       0       0
  9579 ;;      Locals:         0       0       0       0       0       0
  9580 ;;      Temps:          0       0       0       0       0       0
  9581 ;;      Totals:         0       0       0       0       0       0
  9582 ;;Total ram usage:        0 bytes
  9583 ;; Hardware stack levels used:    1
  9584 ;; This function calls:
  9585 ;;		Nothing
  9586 ;; This function is called by:
  9587 ;;		_Handler
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           
  9592                           ;psect for function _Timer1_DetectAssignCount
  9593  0A1C                     _Timer1_DetectAssignCount:	
  9594                           
  9595                           ;Timer1.c: 107: if(TMR1IF&&TMR1IE)
  9596                           
  9597                           ;incstack = 0
  9598                           ; Regs used in _Timer1_DetectAssignCount: [wreg]
  9599  0A1C  0020               	movlb	0	; select bank0
  9600  0A1D  1C11               	btfss	17,0	;volatile
  9601  0A1E  2A34               	goto	i1l3090
  9602  0A1F  0021               	movlb	1	; select bank1
  9603  0A20  1C11               	btfss	17,0	;volatile
  9604  0A21  2A34               	goto	i1l3090
  9605                           
  9606                           ;Timer1.c: 108: {
  9607                           ;Timer1.c: 109: cnts.SigmaDeltaCount+= 10UL;
  9608  0A22  300A               	movlw	10
  9609  0A23  07A8               	addwf	_cnts^(0+128),f
  9610  0A24  3000               	movlw	0
  9611  0A25  3DA9               	addwfc	(_cnts+1)^(0+128),f
  9612  0A26  3000               	movlw	0
  9613  0A27  3DAA               	addwfc	(_cnts+2)^(0+128),f
  9614  0A28  3000               	movlw	0
  9615  0A29  3DAB               	addwfc	(_cnts+3)^(0+128),f
  9616                           
  9617                           ;Timer1.c: 111: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL+1; TMR1ON = 1; };
  9618  0A2A  0020               	movlb	0	; select bank0
  9619  0A2B  1018               	bcf	24,0	;volatile
  9620  0A2C  30FF               	movlw	255
  9621  0A2D  0097               	movwf	23	;volatile
  9622  0A2E  30F6               	movlw	246
  9623  0A2F  0096               	movwf	22	;volatile
  9624  0A30  1418               	bsf	24,0	;volatile
  9625                           
  9626                           ;Timer1.c: 113: TMR1IF = 0;
  9627  0A31  1011               	bcf	17,0	;volatile
  9628                           
  9629                           ;Timer1.c: 115: return 1;
  9630  0A32  3001               	movlw	1
  9631  0A33  0008               	return
  9632  0A34                     i1l3090:	
  9633                           
  9634                           ;Timer1.c: 116: }
  9635                           ;Timer1.c: 117: return 0;
  9636  0A34  3000               	movlw	0
  9637  0A35  0008               	return
  9638  0A36                     __end_of_Timer1_DetectAssignCount:	
  9639                           
  9640                           	psect	text50
  9641  0C6B                     __ptext50:	
  9642 ;; *************** function _Timer1_Count1ms *****************
  9643 ;; Defined at:
  9644 ;;		line 76 in file "Timer1.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;		None
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  1    wreg      void 
  9651 ;; Registers used:
  9652 ;;		wreg, status,2, status,0, pclath, cstack
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9658 ;;      Params:         0       0       0       0       0       0
  9659 ;;      Locals:         0       0       0       0       0       0
  9660 ;;      Temps:          1       0       0       0       0       0
  9661 ;;      Totals:         1       0       0       0       0       0
  9662 ;;Total ram usage:        1 bytes
  9663 ;; Hardware stack levels used:    1
  9664 ;; Hardware stack levels required when called:    1
  9665 ;; This function calls:
  9666 ;;		i1_Buzzer_MiliSecond
  9667 ;; This function is called by:
  9668 ;;		_Handler
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           
  9673                           ;psect for function _Timer1_Count1ms
  9674  0C6B                     _Timer1_Count1ms:	
  9675                           
  9676                           ;Timer1.c: 78: if(TMR1ON==1)
  9677                           
  9678                           ;incstack = 0
  9679                           ; Regs used in _Timer1_Count1ms: [wreg+status,2+status,0+pclath+cstack]
  9680  0C6B  0020               	movlb	0	; select bank0
  9681  0C6C  1C18               	btfss	24,0	;volatile
  9682  0C6D  0008               	return
  9683                           
  9684                           ;Timer1.c: 79: {
  9685                           ;Timer1.c: 80: tcnt.Delta_t++;
  9686  0C6E  3001               	movlw	1
  9687  0C6F  0021               	movlb	1	; select bank1
  9688  0C70  07A2               	addwf	(_tcnt^(0+128)+2),f
  9689  0C71  3000               	movlw	0
  9690  0C72  3DA3               	addwfc	((_tcnt+1)^(0+128)+2),f
  9691  0C73  3000               	movlw	0
  9692  0C74  3DA4               	addwfc	((_tcnt+2)^(0+128)+2),f
  9693  0C75  3000               	movlw	0
  9694  0C76  3DA5               	addwfc	((_tcnt+3)^(0+128)+2),f
  9695                           
  9696                           ;Timer1.c: 81: tcnt.RenewalRersult++;
  9697  0C77  3001               	movlw	1
  9698  0C78  07A6               	addwf	(_tcnt^(0+128)+6),f
  9699  0C79  3000               	movlw	0
  9700  0C7A  3DA7               	addwfc	((_tcnt+1)^(0+128)+6),f
  9701                           
  9702                           ;Timer1.c: 83: if(tcnt.RenewalRersult>1000)
  9703  0C7B  3003               	movlw	3
  9704  0C7C  0227               	subwf	((_tcnt+1)^(0+128)+6),w
  9705  0C7D  30E9               	movlw	233
  9706  0C7E  1903               	skipnz
  9707  0C7F  0226               	subwf	(_tcnt^(0+128)+6),w
  9708  0C80  1C03               	skipc
  9709  0C81  0008               	return
  9710                           
  9711                           ;Timer1.c: 84: {
  9712                           ;Timer1.c: 85: tcnt.Second_t++;
  9713  0C82  3001               	movlw	1
  9714  0C83  00F8               	movwf	??_Timer1_Count1ms
  9715  0C84  0878               	movf	??_Timer1_Count1ms,w
  9716  0C85  07A0               	addwf	_tcnt^(0+128),f
  9717                           
  9718                           ;Timer1.c: 87: if((56<tcnt.Second_t)&&(tcnt.Second_t<60))
  9719  0C86  3039               	movlw	57
  9720  0C87  0220               	subwf	_tcnt^(0+128),w
  9721  0C88  1C03               	skipc
  9722  0C89  2C92               	goto	i1l3064
  9723  0C8A  303C               	movlw	60
  9724  0C8B  0220               	subwf	_tcnt^(0+128),w
  9725  0C8C  1803               	skipnc
  9726  0C8D  2C92               	goto	i1l3064
  9727                           
  9728                           ;Timer1.c: 88: {
  9729                           ;Timer1.c: 89: Buzzer_MiliSecond(300);
  9730  0C8E  302C               	movlw	44
  9731  0C8F  00F6               	movwf	i1Buzzer_MiliSecond@time
  9732  0C90  3001               	movlw	1
  9733  0C91  2C9F               	goto	L13
  9734  0C92                     i1l3064:	
  9735                           ;Timer1.c: 90: }
  9736                           
  9737                           
  9738                           ;Timer1.c: 91: else if(tcnt.Second_t>59)
  9739  0C92  303C               	movlw	60
  9740  0C93  0021               	movlb	1	; select bank1
  9741  0C94  0220               	subwf	_tcnt^(0+128),w
  9742  0C95  1C03               	skipc
  9743  0C96  2CA2               	goto	i1l3072
  9744                           
  9745                           ;Timer1.c: 92: {
  9746                           ;Timer1.c: 93: tcnt.Second_t = 0;
  9747  0C97  01A0               	clrf	_tcnt^(0+128)
  9748                           
  9749                           ;Timer1.c: 94: tcnt.Minute_t++;
  9750  0C98  3001               	movlw	1
  9751  0C99  00F8               	movwf	??_Timer1_Count1ms
  9752  0C9A  0878               	movf	??_Timer1_Count1ms,w
  9753  0C9B  07A1               	addwf	(_tcnt^(0+128)+1),f
  9754                           
  9755                           ;Timer1.c: 96: Buzzer_MiliSecond(600);
  9756  0C9C  3058               	movlw	88
  9757  0C9D  00F6               	movwf	i1Buzzer_MiliSecond@time
  9758  0C9E  3002               	movlw	2
  9759  0C9F                     L13:	
  9760  0C9F  00F7               	movwf	i1Buzzer_MiliSecond@time+1
  9761  0CA0  3188  20F9         	fcall	i1_Buzzer_MiliSecond
  9762  0CA2                     i1l3072:	
  9763                           
  9764                           ;Timer1.c: 97: }
  9765                           ;Timer1.c: 99: tcnt.RenewalRersult = 0;
  9766  0CA2  0021               	movlb	1	; select bank1
  9767  0CA3  01A6               	clrf	(_tcnt^(0+128)+6)
  9768  0CA4  01A7               	clrf	((_tcnt+1)^(0+128)+6)
  9769  0CA5  0008               	return
  9770  0CA6                     __end_of_Timer1_Count1ms:	
  9771                           
  9772                           	psect	text51
  9773  08F9                     __ptext51:	
  9774 ;; *************** function i1_Buzzer_MiliSecond *****************
  9775 ;; Defined at:
  9776 ;;		line 38 in file "Buzzer.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;  time            2    0[COMMON] unsigned int 
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;		None
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1    wreg      void 
  9783 ;; Registers used:
  9784 ;;		wreg, status,2, status,0
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9790 ;;      Params:         2       0       0       0       0       0
  9791 ;;      Locals:         0       0       0       0       0       0
  9792 ;;      Temps:          0       0       0       0       0       0
  9793 ;;      Totals:         2       0       0       0       0       0
  9794 ;;Total ram usage:        2 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; This function calls:
  9797 ;;		Nothing
  9798 ;; This function is called by:
  9799 ;;		_Timer1_Count1ms
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           
  9804                           ;psect for function i1_Buzzer_MiliSecond
  9805  08F9                     i1_Buzzer_MiliSecond:	
  9806                           
  9807                           ;Buzzer.c: 40: if(count==0)
  9808                           
  9809                           ;incstack = 0
  9810                           ; Regs used in i1_Buzzer_MiliSecond: [wreg+status,2+status,0]
  9811  08F9  0873               	movf	_count,w
  9812  08FA  0474               	iorwf	_count+1,w
  9813  08FB  1D03               	btfss	3,2
  9814  08FC  0008               	return
  9815                           
  9816                           ;Buzzer.c: 41: count = time;
  9817  08FD  0877               	movf	i1Buzzer_MiliSecond@time+1,w
  9818  08FE  00F4               	movwf	_count+1
  9819  08FF  0876               	movf	i1Buzzer_MiliSecond@time,w
  9820  0900  00F3               	movwf	_count
  9821  0901  0008               	return
  9822  0902                     __end_ofi1_Buzzer_MiliSecond:	
  9823                           
  9824                           	psect	text52
  9825  08DC                     __ptext52:	
  9826 ;; *************** function _I2C_CommonInterrupt *****************
  9827 ;; Defined at:
  9828 ;;		line 58 in file "I2C_Common.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;		None
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      void 
  9835 ;; Registers used:
  9836 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9842 ;;      Params:         0       0       0       0       0       0
  9843 ;;      Locals:         0       0       0       0       0       0
  9844 ;;      Temps:          0       0       0       0       0       0
  9845 ;;      Totals:         0       0       0       0       0       0
  9846 ;;Total ram usage:        0 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:    1
  9849 ;; This function calls:
  9850 ;;		_I2C2_Interrupt
  9851 ;; This function is called by:
  9852 ;;		_Handler
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856                           
  9857                           ;psect for function _I2C_CommonInterrupt
  9858  08DC                     _I2C_CommonInterrupt:	
  9859                           
  9860                           ;I2C_Common.c: 61: I2C2_Interrupt();
  9861                           
  9862                           ;incstack = 0
  9863                           ; Regs used in _I2C_CommonInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9864  08DC  318E  2681         	fcall	_I2C2_Interrupt
  9865  08DE  0008               	return
  9866  08DF                     __end_of_I2C_CommonInterrupt:	
  9867                           
  9868                           	psect	text53
  9869  0E81                     __ptext53:	
  9870 ;; *************** function _I2C2_Interrupt *****************
  9871 ;; Defined at:
  9872 ;;		line 152 in file "I2C2.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;		None
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;                  1    wreg      void 
  9879 ;; Registers used:
  9880 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/0
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9886 ;;      Params:         0       0       0       0       0       0
  9887 ;;      Locals:         0       0       0       0       0       0
  9888 ;;      Temps:          1       0       0       0       0       0
  9889 ;;      Totals:         1       0       0       0       0       0
  9890 ;;Total ram usage:        1 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; This function calls:
  9893 ;;		Nothing
  9894 ;; This function is called by:
  9895 ;;		_I2C_CommonInterrupt
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           
  9900                           ;psect for function _I2C2_Interrupt
  9901  0E81                     _I2C2_Interrupt:	
  9902                           
  9903                           ;I2C2.c: 154: if(SSP2IF&&SSP2IE)
  9904                           
  9905                           ;incstack = 0
  9906                           ; Regs used in _I2C2_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  9907  0E81  0020               	movlb	0	; select bank0
  9908  0E82  1C14               	btfss	20,0	;volatile
  9909  0E83  2ECD               	goto	i1l2696
  9910  0E84  0021               	movlb	1	; select bank1
  9911  0E85  1C14               	btfss	20,0	;volatile
  9912  0E86  2ECD               	goto	i1l2696
  9913                           
  9914                           ;I2C2.c: 155: {
  9915                           ;I2C2.c: 156: if(SSP2STATbits.D_nA)
  9916  0E87  0024               	movlb	4	; select bank4
  9917  0E88  1E9C               	btfss	28,5	;volatile
  9918  0E89  2EA4               	goto	i1l529
  9919                           
  9920                           ;I2C2.c: 157: {
  9921                           ;I2C2.c: 158: if(SSP2STATbits.R_nW)
  9922  0E8A  1D1C               	btfss	28,2	;volatile
  9923  0E8B  2E97               	goto	i1l2672
  9924                           
  9925                           ;I2C2.c: 159: {
  9926                           ;I2C2.c: 160: if(!SSP2CON2bits.ACKSTAT)
  9927  0E8C  1B1E               	btfsc	30,6	;volatile
  9928  0E8D  2ECB               	goto	i1l2694
  9929  0E8E                     i1l2664:	
  9930                           ;I2C2.c: 161: {
  9931                           ;I2C2.c: 162: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  9932                           
  9933  0E8E  081C               	movf	28,w	;volatile
  9934  0E8F  3901               	andlw	1
  9935  0E90  00F6               	movwf	??_I2C2_Interrupt
  9936  0E91  0E1D               	swapf	29,w	;volatile
  9937  0E92  3901               	andlw	1
  9938  0E93  0476               	iorwf	??_I2C2_Interrupt,w
  9939  0E94  1D03               	btfss	3,2
  9940  0E95  2E8E               	goto	i1l2664
  9941  0E96  2EB7               	goto	L14
  9942  0E97                     i1l2672:	
  9943                           ;I2C2.c: 166: }
  9944                           ;I2C2.c: 167: }
  9945                           
  9946                           ;I2C2.c: 165: SSP2CON1bits.CKP = 1;
  9947                           
  9948                           ;I2C2.c: 164: I2C2_Config.TransmitPoint++;
  9949                           
  9950                           ;I2C2.c: 163: SSP2BUF = *I2C2_Config.TransmitPoint;
  9951                           
  9952                           
  9953                           ;I2C2.c: 168: else
  9954                           ;I2C2.c: 169: {
  9955                           ;I2C2.c: 170: *I2C2_Config.ReceivePoint = SSP2BUF;
  9956  0E97  0819               	movf	25,w	;volatile
  9957  0E98  00F6               	movwf	??_I2C2_Interrupt
  9958  0E99  0021               	movlb	1	; select bank1
  9959  0E9A  0843               	movf	(low ((_I2C2_Config| 0+17)))^(0+128),w
  9960  0E9B  0086               	movwf	6
  9961  0E9C  0187               	clrf	7
  9962  0E9D  0876               	movf	??_I2C2_Interrupt,w
  9963  0E9E  0081               	movwf	1
  9964                           
  9965                           ;I2C2.c: 171: I2C2_Config.ReceivePoint++;
  9966  0E9F  3001               	movlw	1
  9967  0EA0  00F6               	movwf	??_I2C2_Interrupt
  9968  0EA1  0876               	movf	??_I2C2_Interrupt,w
  9969  0EA2  07C3               	addwf	(low ((_I2C2_Config| 0+17)))^(0+128),f
  9970  0EA3  2EC9               	goto	i1l2692
  9971  0EA4                     i1l529:	
  9972                           ;I2C2.c: 173: }
  9973                           ;I2C2.c: 174: }
  9974                           
  9975                           ;I2C2.c: 172: SSP2CON1bits.CKP = 1;
  9976                           
  9977                           
  9978                           ;I2C2.c: 175: else if(!SSP2STATbits.D_nA)
  9979  0EA4  1A9C               	btfsc	28,5	;volatile
  9980  0EA5  2ECB               	goto	i1l2694
  9981                           
  9982                           ;I2C2.c: 176: {
  9983                           ;I2C2.c: 177: SSP2BUF;
  9984  0EA6  0819               	movf	25,w	;volatile
  9985                           
  9986                           ;I2C2.c: 179: if(SSP2STATbits.R_nW)
  9987  0EA7  1D1C               	btfss	28,2	;volatile
  9988  0EA8  2EC4               	goto	i1l2690
  9989                           
  9990                           ;I2C2.c: 180: {
  9991                           ;I2C2.c: 181: I2C2_Config.TransmitPoint = I2C2_Config.SlaveTransmitBuff;
  9992  0EA9  30B2               	movlw	(low (_I2C2_Config| 0))& (0+255)
  9993  0EAA  00F6               	movwf	??_I2C2_Interrupt
  9994  0EAB  0876               	movf	??_I2C2_Interrupt,w
  9995  0EAC  0021               	movlb	1	; select bank1
  9996  0EAD  00C2               	movwf	(low ((_I2C2_Config| 0+16)))^(0+128)
  9997  0EAE                     i1l2684:	
  9998                           ;I2C2.c: 183: while((SSP2CON1bits.CKP)|(SSP2STATbits.BF));
  9999                           
 10000  0EAE  0024               	movlb	4	; select bank4
 10001  0EAF  081C               	movf	28,w	;volatile
 10002  0EB0  3901               	andlw	1
 10003  0EB1  00F6               	movwf	??_I2C2_Interrupt
 10004  0EB2  0E1D               	swapf	29,w	;volatile
 10005  0EB3  3901               	andlw	1
 10006  0EB4  0476               	iorwf	??_I2C2_Interrupt,w
 10007  0EB5  1D03               	btfss	3,2
 10008  0EB6  2EAE               	goto	i1l2684
 10009  0EB7                     L14:	
 10010                           
 10011                           ;I2C2.c: 184: SSP2BUF = *I2C2_Config.TransmitPoint;
 10012  0EB7  0021               	movlb	1	; select bank1
 10013  0EB8  0842               	movf	(low ((_I2C2_Config| 0+16)))^(0+128),w
 10014  0EB9  0086               	movwf	6
 10015  0EBA  0187               	clrf	7
 10016  0EBB  0801               	movf	1,w
 10017  0EBC  0024               	movlb	4	; select bank4
 10018  0EBD  0099               	movwf	25	;volatile
 10019                           
 10020                           ;I2C2.c: 185: I2C2_Config.TransmitPoint++;
 10021  0EBE  3001               	movlw	1
 10022  0EBF  00F6               	movwf	??_I2C2_Interrupt
 10023  0EC0  0876               	movf	??_I2C2_Interrupt,w
 10024  0EC1  0021               	movlb	1	; select bank1
 10025  0EC2  07C2               	addwf	(low ((_I2C2_Config| 0+16)))^(0+128),f
 10026                           
 10027                           ;I2C2.c: 186: }
 10028  0EC3  2EC9               	goto	i1l2692
 10029  0EC4                     i1l2690:	
 10030                           
 10031                           ;I2C2.c: 187: else
 10032                           ;I2C2.c: 188: {
 10033                           ;I2C2.c: 189: I2C2_Config.ReceivePoint = I2C2_Config.SlaveReceiveBuff;
 10034  0EC4  30BA               	movlw	(low ((_I2C2_Config| 0+8)))& (0+255)
 10035  0EC5  00F6               	movwf	??_I2C2_Interrupt
 10036  0EC6  0876               	movf	??_I2C2_Interrupt,w
 10037  0EC7  0021               	movlb	1	; select bank1
 10038  0EC8  00C3               	movwf	(low ((_I2C2_Config| 0+17)))^(0+128)
 10039  0EC9                     i1l2692:	
 10040                           
 10041                           ;I2C2.c: 190: }
 10042                           ;I2C2.c: 191: SSP2CON1bits.CKP = 1;
 10043  0EC9  0024               	movlb	4	; select bank4
 10044  0ECA  161D               	bsf	29,4	;volatile
 10045  0ECB                     i1l2694:	
 10046                           
 10047                           ;I2C2.c: 192: }
 10048                           ;I2C2.c: 193: SSP2IF = 0;
 10049  0ECB  0020               	movlb	0	; select bank0
 10050  0ECC  1014               	bcf	20,0	;volatile
 10051  0ECD                     i1l2696:	
 10052                           
 10053                           ;I2C2.c: 194: }
 10054                           ;I2C2.c: 196: if(BCL2IE&&BCL2IF)
 10055  0ECD  0021               	movlb	1	; select bank1
 10056  0ECE  1C94               	btfss	20,1	;volatile
 10057  0ECF  0008               	return
 10058  0ED0  0020               	movlb	0	; select bank0
 10059  0ED1  1C94               	btfss	20,1	;volatile
 10060  0ED2  0008               	return
 10061                           
 10062                           ;I2C2.c: 197: BCL2IF = 0;
 10063  0ED3  1094               	bcf	20,1	;volatile
 10064  0ED4  0008               	return
 10065  0ED5                     __end_of_I2C2_Interrupt:	
 10066                           
 10067                           	psect	text54
 10068  09D7                     __ptext54:	
 10069 ;; *************** function _Buzzer_Count1ms *****************
 10070 ;; Defined at:
 10071 ;;		line 44 in file "Buzzer.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;		None
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;		None
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      void 
 10078 ;; Registers used:
 10079 ;;		wreg, status,2, status,0, pclath, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10085 ;;      Params:         0       0       0       0       0       0
 10086 ;;      Locals:         0       0       0       0       0       0
 10087 ;;      Temps:          0       0       0       0       0       0
 10088 ;;      Totals:         0       0       0       0       0       0
 10089 ;;Total ram usage:        0 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:    1
 10092 ;; This function calls:
 10093 ;;		_Buzzer_SetDuty
 10094 ;; This function is called by:
 10095 ;;		_Handler
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           
 10100                           ;psect for function _Buzzer_Count1ms
 10101  09D7                     _Buzzer_Count1ms:	
 10102                           
 10103                           ;Buzzer.c: 46: if(count>0)
 10104                           
 10105                           ;incstack = 0
 10106                           ; Regs used in _Buzzer_Count1ms: [wreg+status,2+status,0+pclath+cstack]
 10107  09D7  0873               	movf	_count,w
 10108  09D8  0474               	iorwf	_count+1,w
 10109  09D9  1903               	btfsc	3,2
 10110  09DA  29E6               	goto	i1l2938
 10111                           
 10112                           ;Buzzer.c: 47: {
 10113                           ;Buzzer.c: 48: count--;
 10114  09DB  3001               	movlw	1
 10115  09DC  02F3               	subwf	_count,f
 10116  09DD  3000               	movlw	0
 10117  09DE  3BF4               	subwfb	_count+1,f
 10118                           
 10119                           ;Buzzer.c: 49: Buzzer_SetDuty(0x01FF);
 10120  09DF  30FF               	movlw	255
 10121  09E0  00F6               	movwf	Buzzer_SetDuty@duty
 10122  09E1  3001               	movlw	1
 10123  09E2  00F7               	movwf	Buzzer_SetDuty@duty+1
 10124  09E3  318A  2251         	fcall	_Buzzer_SetDuty
 10125                           
 10126                           ;Buzzer.c: 50: }
 10127  09E5  0008               	return
 10128  09E6                     i1l2938:	
 10129                           
 10130                           ;Buzzer.c: 51: else
 10131                           ;Buzzer.c: 52: {
 10132                           ;Buzzer.c: 53: Buzzer_SetDuty(0x0000);
 10133  09E6  3000               	movlw	0
 10134  09E7  00F6               	movwf	Buzzer_SetDuty@duty
 10135  09E8  00F7               	movwf	Buzzer_SetDuty@duty+1
 10136  09E9  318A  2251         	fcall	_Buzzer_SetDuty
 10137  09EB  0008               	return
 10138  09EC                     __end_of_Buzzer_Count1ms:	
 10139                           
 10140                           	psect	text55
 10141  0A51                     __ptext55:	
 10142 ;; *************** function _Buzzer_SetDuty *****************
 10143 ;; Defined at:
 10144 ;;		line 31 in file "Buzzer.c"
 10145 ;; Parameters:    Size  Location     Type
 10146 ;;  duty            2    0[COMMON] unsigned int 
 10147 ;; Auto vars:     Size  Location     Type
 10148 ;;  CCP2CON_Pre     1    4[COMMON] unsigned char 
 10149 ;; Return value:  Size  Location     Type
 10150 ;;                  1    wreg      void 
 10151 ;; Registers used:
 10152 ;;		wreg, status,2, status,0
 10153 ;; Tracked objects:
 10154 ;;		On entry : 0/0
 10155 ;;		On exit  : 0/0
 10156 ;;		Unchanged: 0/0
 10157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10158 ;;      Params:         2       0       0       0       0       0
 10159 ;;      Locals:         1       0       0       0       0       0
 10160 ;;      Temps:          2       0       0       0       0       0
 10161 ;;      Totals:         5       0       0       0       0       0
 10162 ;;Total ram usage:        5 bytes
 10163 ;; Hardware stack levels used:    1
 10164 ;; This function calls:
 10165 ;;		Nothing
 10166 ;; This function is called by:
 10167 ;;		_Buzzer_Count1ms
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           
 10172                           ;psect for function _Buzzer_SetDuty
 10173  0A51                     _Buzzer_SetDuty:	
 10174                           
 10175                           ;Buzzer.c: 33: uint8_t CCP2CON_Pre = CCP2CON & ~(0x03<<4);
 10176                           
 10177                           ;incstack = 0
 10178                           ; Regs used in _Buzzer_SetDuty: [wreg+status,2+status,0]
 10179  0A51  0025               	movlb	5	; select bank5
 10180  0A52  081A               	movf	26,w	;volatile
 10181  0A53  39CF               	andlw	207
 10182  0A54  00F8               	movwf	??_Buzzer_SetDuty
 10183  0A55  0878               	movf	??_Buzzer_SetDuty,w
 10184  0A56  00FA               	movwf	Buzzer_SetDuty@CCP2CON_Pre
 10185                           
 10186                           ;Buzzer.c: 34: CCPR2L = (duty>>2);
 10187  0A57  0877               	movf	Buzzer_SetDuty@duty+1,w
 10188  0A58  00F9               	movwf	??_Buzzer_SetDuty+1
 10189  0A59  0876               	movf	Buzzer_SetDuty@duty,w
 10190  0A5A  00F8               	movwf	??_Buzzer_SetDuty
 10191  0A5B  36F9               	lsrf	??_Buzzer_SetDuty+1,f
 10192  0A5C  0CF8               	rrf	??_Buzzer_SetDuty,f
 10193  0A5D  36F9               	lsrf	??_Buzzer_SetDuty+1,f
 10194  0A5E  0CF8               	rrf	??_Buzzer_SetDuty,f
 10195  0A5F  0878               	movf	??_Buzzer_SetDuty,w
 10196  0A60  0098               	movwf	24	;volatile
 10197                           
 10198                           ;Buzzer.c: 35: CCP2CON = CCP2CON_Pre | ((duty&0x03)<<4);
 10199  0A61  0876               	movf	Buzzer_SetDuty@duty,w
 10200  0A62  3903               	andlw	3
 10201  0A63  00F8               	movwf	??_Buzzer_SetDuty
 10202  0A64  3003               	movlw	3
 10203  0A65                     u199_25:	
 10204  0A65  35F8               	lslf	??_Buzzer_SetDuty,f
 10205  0A66  3EFF               	addlw	-1
 10206  0A67  1D03               	skipz
 10207  0A68  2A65               	goto	u199_25
 10208  0A69  3578               	lslf	??_Buzzer_SetDuty,w
 10209  0A6A  047A               	iorwf	Buzzer_SetDuty@CCP2CON_Pre,w
 10210  0A6B  009A               	movwf	26	;volatile
 10211  0A6C  0008               	return
 10212  0A6D                     __end_of_Buzzer_SetDuty:	
 10213  007E                     btemp	set	126	;btemp
 10214  007E                     int$flags	set	126
 10215  007E                     wtemp0	set	126


Data Sizes:
    Strings     485
    Constant    43
    Data        90
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     76      80
    BANK1            80      0      70
    BANK2            80      0      60
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    Show_PMT_Config$1191	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[6]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[8]), 
		 -> STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[7]), STR_17(CODE[7]), 
		 -> STR_16(CODE[7]), STR_15(CODE[7]), STR_14(CODE[7]), STR_13(CODE[6]), 
		 -> STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[6]), STR_9(CODE[5]), 
		 -> STR_8(CODE[5]), STR_7(CODE[5]), 

    Ssetting_PMT_Config$1190	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[6]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[8]), 
		 -> STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[7]), STR_17(CODE[7]), 
		 -> STR_16(CODE[7]), STR_15(CODE[7]), STR_14(CODE[7]), STR_13(CODE[6]), 
		 -> STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[6]), STR_9(CODE[5]), 
		 -> STR_8(CODE[5]), STR_7(CODE[5]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_57(CODE[7]), STR_51(CODE[5]), STR_40(CODE[5]), STR_36(CODE[7]), 
		 -> STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[7]), STR_32(CODE[7]), 
		 -> STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[6]), STR_28(CODE[6]), 
		 -> STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[5]), STR_24(CODE[5]), 
		 -> STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[8]), STR_20(CODE[8]), 
		 -> STR_19(CODE[8]), STR_18(CODE[7]), STR_17(CODE[7]), STR_16(CODE[7]), 
		 -> STR_15(CODE[7]), STR_14(CODE[7]), STR_13(CODE[6]), STR_12(CODE[6]), 
		 -> STR_11(CODE[6]), STR_10(CODE[6]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_56(CODE[12]), STR_55(CODE[12]), STR_54(CODE[17]), STR_53(CODE[17]), 
		 -> STR_52(CODE[20]), STR_50(CODE[14]), STR_49(CODE[12]), STR_48(CODE[12]), 
		 -> STR_47(CODE[17]), STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[17]), 
		 -> STR_43(CODE[17]), STR_42(CODE[11]), STR_41(CODE[20]), STR_39(CODE[14]), 
		 -> STR_38(CODE[17]), STR_37(CODE[17]), STR_6(CODE[17]), STR_5(CODE[10]), 
		 -> STR_4(CODE[17]), STR_3(CODE[16]), STR_2(CODE[17]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    Show_PMT_Config@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    Ssetting_PMT_Config@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    StartUp_Menu@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    Load_PMTConfing@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    Save_PMTConfig@data	PTR struct . size(1) Largest target is 3
		 -> main@pmt_config(BANK1[3]), 

    I2C2_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    H7826_01_Gain	PTR unsigned char [15] size(2) Largest target is 7
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[7]), STR_33(CODE[7]), 
		 -> STR_32(CODE[7]), STR_31(CODE[7]), STR_30(CODE[7]), STR_29(CODE[6]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[5]), STR_22(CODE[5]), 

    H7826_Gain	PTR unsigned char [15] size(2) Largest target is 8
		 -> STR_21(CODE[8]), STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[7]), 
		 -> STR_17(CODE[7]), STR_16(CODE[7]), STR_15(CODE[7]), STR_14(CODE[7]), 
		 -> STR_13(CODE[6]), STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[6]), 
		 -> STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[5]), 

    EEPROM_MultiRead@pData	PTR unsigned char  size(1) Largest target is 3
		 -> F3344..(BANK1[3]), main@pmt_config(BANK1[3]), 

    EEPROM_MultiWrite@pData	PTR unsigned char  size(1) Largest target is 3
		 -> F3344..(BANK1[3]), main@pmt_config(BANK1[3]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> VoltageReg(BANK0[2]), ConfigReg(BANK0[1]), 

    S40$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveReceiveBuff(BANK1[8]), I2C2_Config(BANK1[19]), 

    S40$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config(BANK1[19]), 

    I2C2_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C2_Config.SlaveTransmitBuff(BANK1[8]), I2C2_Config(BANK1[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Timer1_Count1ms->i1_Buzzer_MiliSecond
    _I2C_CommonInterrupt->_I2C2_Interrupt
    _Buzzer_Count1ms->_Buzzer_SetDuty

Critical Paths under _main in BANK0

    _main->_Show_PMT_Config
    _main->_StartUp_Menu
    _mTouch_Init->_mTouch_PortInit
    _Timer1_GetCPM->_Timer1_GetCPS
    _Timer1_GetCPS->___lldiv
    _StartUp_Menu->_printf
    _Load_PMTConfing->_EEPROM_MultiRead
    _EEPROM_MultiRead->_eeprom_read
    _DAC_WriteVoltage->_I2C_Transmit
    _Ssetting_PMT_Config->_printf
    _Save_PMTConfig->_EEPROM_MultiWrite
    _EEPROM_MultiWrite->_eeprom_write
    _Show_PMT_Config->_printf
    _printf->_Timer1_GetCPM
    _putch->_LCD_WriteData
    ___llmod->___lldiv
    ___lldiv->___lmul
    _mTouch_Check->_Buzzer_MiliSecond
    _LCD_CursorPosition->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _DAC_Initialize->_I2C_Transmit
    _I2C_Transmit->_I2C2_Transmit
    _I2C_Init->_I2C2_Setting
    _I2C2_Setting->_I2C2_PinInit

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   43257
                                             72 BANK0      4     4      0
                         _Basic_Init
                        _Buzzer_Init
                     _DAC_Initialize
                 _LCD_CursorPosition
                   _LCD_DisplayClear
                           _LCD_Init
                    _Show_PMT_Config
                _Ssetting_PMT_Config
                       _StartUp_Menu
                 _Timer1_ClearRecord
                      _Timer1_GetCPM
                      _Timer1_GetCPS
                 _Timer1_GetCountSum
                   _Timer1_GetMinute
                   _Timer1_GetSecond
                        _Timer1_Init
                  _Timer1_StartCount
                   _Timer1_StopCount
                        _Timer6_Init
                       _mTouch_Check
                        _mTouch_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
                    _mTouch_PortInit
 ---------------------------------------------------------------------------------
 (2) _mTouch_PortInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer6_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StopCount                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StartCount                                    0     0      0       0
                 _Timer1_ClearRecord
 ---------------------------------------------------------------------------------
 (2) _Timer1_ClearRecord                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetSecond                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetMinute                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        8     4      4    1795
                                             30 BANK0      8     4      4
                      _Timer1_GetCPS
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPS                                        4     0      4    1209
                                             26 BANK0      4     0      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     552
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _StartUp_Menu                                         3     3      0   10516
                                             69 BANK0      3     3      0
                   _DAC_WriteVoltage
                     _LCD_CursorHome
                 _LCD_CursorPosition
                   _LCD_DisplayClear
                    _Load_PMTConfing
                             _printf
 ---------------------------------------------------------------------------------
 (2) _Load_PMTConfing                                      2     2      0     602
                                             11 BANK0      2     2      0
                   _EEPROM_MultiRead
 ---------------------------------------------------------------------------------
 (3) _EEPROM_MultiRead                                     7     5      2     532
                                              4 BANK0      7     5      2
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (4) _eeprom_read                                          4     4      0      31
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _DAC_WriteVoltage                                     5     3      2    1620
                                             16 BANK0      5     3      2
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _Ssetting_PMT_Config                                  2     2      0    9862
                                             69 BANK0      2     2      0
                     _LCD_CursorHome
                 _LCD_CursorPosition
                   _LCD_DisplayClear
                     _Save_PMTConfig
                       _mTouch_Check
                             _printf
 ---------------------------------------------------------------------------------
 (2) _Save_PMTConfig                                       2     2      0     737
                                             11 BANK0      2     2      0
                  _EEPROM_MultiWrite
 ---------------------------------------------------------------------------------
 (3) _EEPROM_MultiWrite                                    7     5      2     667
                                              4 BANK0      7     5      2
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         4     3      1     166
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Show_PMT_Config                                      3     3      0    8877
                                             69 BANK0      3     3      0
                     _LCD_CursorHome
                 _LCD_CursorPosition
                   _LCD_DisplayClear
                       _mTouch_Check
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              35    25     10    6376
                                             38 BANK0     31    21     10
                      _Timer1_GetCPM (ARG)
                      _Timer1_GetCPS (ARG)
                 _Timer1_GetCountSum (ARG)
                   _Timer1_GetMinute (ARG)
                   _Timer1_GetSecond (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     155
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     896
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     440
                                             26 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     657
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _mTouch_Check                                         6     6      0     459
                                              2 BANK0      6     6      0
                  _Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (2) _Buzzer_MiliSecond                                    2     0      2     273
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LCD_CursorPosition                                   3     2      1    1538
                                              3 BANK0      3     2      1
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_CursorHome                                       1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     248
                                              4 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0     124
                                              3 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialize                                       2     2      0    2253
                                             16 BANK0      2     2      0
                           _I2C_Init
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C_Transmit                                         8     5      3    1454
                                              8 BANK0      8     5      3
                      _I2C2_Transmit
 ---------------------------------------------------------------------------------
 (4) _I2C2_Transmit                                        8     6      2     672
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             6     3      3     799
                                              5 BANK0      6     3      3
                       _I2C2_Setting
 ---------------------------------------------------------------------------------
 (3) _I2C2_Setting                                         4     2      2     363
                                              1 BANK0      4     2      2
                       _I2C2_PinInit
 ---------------------------------------------------------------------------------
 (4) _I2C2_PinInit                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handler                                              1     1      0     319
                                              5 COMMON     1     1      0
                    _Buzzer_Count1ms
                _I2C_CommonInterrupt
                    _Timer1_Count1ms
           _Timer1_DetectAssignCount
                   _Timer6_CheckFlag
           _mTouch_IntervalDecrement
                        _mTouch_Read
 ---------------------------------------------------------------------------------
 (6) _mTouch_Read                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _mTouch_IntervalDecrement                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer6_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_DetectAssignCount                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Timer1_Count1ms                                      1     1      0      74
                                              2 COMMON     1     1      0
                i1_Buzzer_MiliSecond
 ---------------------------------------------------------------------------------
 (7) i1_Buzzer_MiliSecond                                  2     0      2      74
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C_CommonInterrupt                                  0     0      0       0
                     _I2C2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C2_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Buzzer_Count1ms                                      0     0      0     245
                     _Buzzer_SetDuty
 ---------------------------------------------------------------------------------
 (7) _Buzzer_SetDuty                                       5     3      2     245
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _Buzzer_Init
   _DAC_Initialize
     _I2C_Init
       _I2C2_Setting
         _I2C2_PinInit
     _I2C_Transmit
       _I2C2_Transmit
   _LCD_CursorPosition
     _LCD_WriteData
   _LCD_DisplayClear
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Show_PMT_Config
     _LCD_CursorHome
       _LCD_WriteData
     _LCD_CursorPosition
       _LCD_WriteData
     _LCD_DisplayClear
       _LCD_WriteData
     _mTouch_Check
       _Buzzer_MiliSecond
     _printf
       _Timer1_GetCPM (ARG)
         _Timer1_GetCPS
           ___lldiv
             ___lmul (ARG)
           ___lmul
         ___lmul
       _Timer1_GetCPS (ARG)
         ___lldiv
           ___lmul (ARG)
         ___lmul
       _Timer1_GetCountSum (ARG)
       _Timer1_GetMinute (ARG)
       _Timer1_GetSecond (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
         _LCD_WriteData
   _Ssetting_PMT_Config
     _LCD_CursorHome
       _LCD_WriteData
     _LCD_CursorPosition
       _LCD_WriteData
     _LCD_DisplayClear
       _LCD_WriteData
     _Save_PMTConfig
       _EEPROM_MultiWrite
         _eeprom_write
     _mTouch_Check
       _Buzzer_MiliSecond
     _printf
       _Timer1_GetCPM (ARG)
         _Timer1_GetCPS
           ___lldiv
             ___lmul (ARG)
           ___lmul
         ___lmul
       _Timer1_GetCPS (ARG)
         ___lldiv
           ___lmul (ARG)
         ___lmul
       _Timer1_GetCountSum (ARG)
       _Timer1_GetMinute (ARG)
       _Timer1_GetSecond (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
         _LCD_WriteData
   _StartUp_Menu
     _DAC_WriteVoltage
       _I2C_Transmit
         _I2C2_Transmit
     _LCD_CursorHome
       _LCD_WriteData
     _LCD_CursorPosition
       _LCD_WriteData
     _LCD_DisplayClear
       _LCD_WriteData
     _Load_PMTConfing
       _EEPROM_MultiRead
         _eeprom_read
     _printf
       _Timer1_GetCPM (ARG)
         _Timer1_GetCPS
           ___lldiv
             ___lmul (ARG)
           ___lmul
         ___lmul
       _Timer1_GetCPS (ARG)
         ___lldiv
           ___lmul (ARG)
         ___lmul
       _Timer1_GetCountSum (ARG)
       _Timer1_GetMinute (ARG)
       _Timer1_GetSecond (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
       _putch (ARG)
         _LCD_WriteData
   _Timer1_ClearRecord
   _Timer1_GetCPM
     _Timer1_GetCPS
       ___lldiv
         ___lmul (ARG)
       ___lmul
     ___lmul
   _Timer1_GetCPS
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Timer1_GetCountSum
   _Timer1_GetMinute
   _Timer1_GetSecond
   _Timer1_Init
   _Timer1_StartCount
     _Timer1_ClearRecord
   _Timer1_StopCount
   _Timer6_Init
   _mTouch_Check
     _Buzzer_MiliSecond
   _mTouch_Init
     _mTouch_PortInit
   _printf
     _Timer1_GetCPM (ARG)
       _Timer1_GetCPS
         ___lldiv
           ___lmul (ARG)
         ___lmul
       ___lmul
     _Timer1_GetCPS (ARG)
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _Timer1_GetCountSum (ARG)
     _Timer1_GetMinute (ARG)
     _Timer1_GetSecond (ARG)
     ___lldiv (ARG)
       ___lmul (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Buzzer_Count1ms
     _Buzzer_SetDuty
   _I2C_CommonInterrupt
     _I2C2_Interrupt
   _Timer1_Count1ms
     i1_Buzzer_MiliSecond
   _Timer1_DetectAssignCount
   _Timer6_CheckFlag
   _mTouch_IntervalDecrement
   _mTouch_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      DE       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4C      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      46       8       87.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      DE      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Jul  1 16:38:48 2017

                  _Load_PMTConfing 092B                     _LCD_CursorHome 097F  
         __end_of_Timer1_StopCount 08E8                                  pc 0002  
                      __CFG_CP$OFF 0000                                 l54 0A19  
                   I2C2_Transmit@i 0025                                 _RD 0CA8  
                               _WR 0CA9              ??_I2C_CommonInterrupt 0077  
              ___wmul@multiplicand 0022                _Ssetting_PMT_Config 0603  
                              l601 0ED7                                l450 0DDC  
                              l604 0F5E                                l701 0ACB  
                              l446 0DAB                                l463 0F89  
                              l631 0080                                l472 0FB2  
                              l481 0FCF                                l642 00CA  
                              l723 0B81                                l660 0125  
                              l580 0610                                l813 0A76  
                              l661 017F                                l645 0148  
                              l671 01DE                                l589 066B  
                              l688 027D                                _GIE 005F  
                              _PR2 001B                    _Buzzer_Count1ms 09D7  
                     __CFG_CPD$OFF 0000                                _PR6 041D  
                     __CFG_BORV$LO 0000                                wreg 0009  
                       _Basic_Init 098F                               S4440 0800  
                     __CFG_LVP$OFF 0000         ??_Timer1_DetectAssignCount 0076  
                             l3502 0F6C                               l4230 0641  
                             l3504 0F7A                               l4240 0660  
                             l4224 062D                               l3514 0F9D  
                             l4250 0689                               l4410 05FD  
                             l3620 0DC0                               l3540 0FEC  
                             l3524 0F95                               l4236 0654  
                             l4404 05F4                               l4340 04AD  
                             l3622 0DC2                               l3614 0DB5  
                             l3542 0FF1                               l3526 0F99  
                             l4262 06BA                               l4414 050B  
                             l3632 0DD1                               l3528 0FC0  
                             l3640 0A39                               l3704 0A70  
                             l4256 069C                               l4408 05F9  
                             l3538 0FD5                               l3546 0FF4  
                             l4266 06D3                               l3722 0C1D  
                             l4370 04EF                               l4354 04C9  
                             l3636 0DD3                               l3548 0FFD  
                             l3644 0A4A                               l3900 0127  
                             l4284 0F16                               l4372 04F6  
                             l4364 04E3                               l4348 04B8  
                             l3646 0A4F                               l3750 0E78  
                             l4294 0F43                               l4278 0F07  
                             l3662 0C53                               l3718 0C13  
                             l4358 04D4                               l3736 0E3F  
                             l3760 0D65                               l4288 0F25  
                             l3680 0BF3                               l4392 0560  
                             l4376 04FC                               l4384 0516  
                             l3826 0DEB                               l3746 0E6D  
                             l3738 0E4D                               l3762 0D73  
                             l3770 0D96                               l3922 018E  
                             l3666 0C3D                               l4386 0523  
                             l3780 0A13                               l3932 01A5  
                             l3908 0159                               l3860 009B  
                             l3668 0C69                               l3684 0BDD  
                             l3838 0E2C                               l3766 0D8B  
                             l3926 019F                               l3854 0085  
                             l3686 0C08                               l4398 059E  
                             l3776 0A06                               l3960 0216  
                             l3880 00E1                               l3856 008E  
                             l3848 007B                               l3698 095D  
                             l3962 021A                               l3970 022F  
                             l3954 0207                               l3946 01FA  
                             l3938 01D2                               l3890 00FE  
                             l3882 00EF                               l3948 01FD  
                             l3892 010D                               l3876 00DF  
                             l3868 00CC                               l3966 0227  
                             l3886 00FC                               l3976 0235  
                             l3896 011A                               l3978 005F  
                ?_DAC_WriteVoltage 0030               EEPROM_MultiRead@addr 0025  
                             STR_1 0356                               STR_2 0367  
                             STR_3 0378                               STR_4 0367  
                             STR_5 03B9                               STR_6 0367  
                             STR_7 047F                               STR_8 047A  
                             STR_9 0489                               u3105 0CEC  
                             u3141 0ACA                               u3205 0BEF  
                             u3305 0C25                               u4107 09FF  
                             u4117 0989                               u3405 0D68  
                             u4127 0786                               u3335 0E42  
                             u3255 0A77                               u4137 079F  
                             u3425 0D81                               u3265 0A7C  
                             u3185 0C4F                               u4147 07B4  
                             u3355 0E4E                               u3435 0D8C  
                             u4157 07C9                               u3365 0E62  
                             u4077 0711                               u4167 0979  
                             u3455 09F4                               u3375 0E6E  
                             u4087 0749                               u3295 0C1E  
                             u4177 0CE5                               u3625 01C8  
                             u3545 00F5                               u4097 0773  
                             u3475 0E12                               _PEIE 005E  
                             u3665 01ED              Buzzer_MiliSecond@time 0020  
                             _TMR0 0015                               _TMR1 0016  
                             _TMR2 001A                               _TMR6 041C  
                  _sense_parameter 02A6               EEPROM_MultiRead@size 0024  
                             _WREN 0CAA                               _WPUB 020D  
                   ??_eeprom_write 0021                       __CFG_WRT$OFF 0000  
             ?_Ssetting_PMT_Config 0076                 ??_DAC_WriteVoltage 0032  
                             _cnts 00A8                               _main 048E  
                 __end_of_I2C_Init 0A1C                               _tcnt 00A0  
                             fsr0h 0005                               fsr1h 0007  
                             indf0 0000                               fsr0l 0004  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                      __CFG_BOREN$ON 0000  
                  ??_I2C2_Transmit 0022                               start 002B  
                    __CFG_IESO$OFF 0000                    __end_of_Handler 002B  
           __end_of_LCD_CursorHome 098F                      _LCD_WriteData 0CE2  
                    __CFG_MCLRE$ON 0000                   ??_I2C2_Interrupt 0076  
         __end_of_LCD_DisplayClear 097F              __size_of_I2C_Transmit 001B  
                 __end_of_LCD_Init 07EC                      __CFG_PLLEN$ON 0000  
                            ?_main 0076                              _EEADR 0191  
                            STR_10 0460                              STR_11 0436  
                            STR_20 03CB                              STR_12 0442  
                            STR_21 03C3                              STR_13 045A  
                            STR_30 03F7                              STR_22 046B  
                            STR_14 0413                              STR_31 0421  
                            STR_23 0470                              STR_15 040C  
                            STR_40 0466                              STR_32 03FE  
                            STR_24 0484                              STR_16 041A  
                            STR_41 02A9                              STR_33 0405  
                            STR_25 0475                              STR_17 03E2  
                    __CFG_WDTE$OFF 0000                              STR_50 0388  
                            STR_42 03AE                              STR_34 042F  
                            STR_26 0448                              STR_18 0428  
                            STR_51 0466                              STR_43 0345  
                            STR_35 03E9                              STR_27 044E  
                            STR_19 03D3                              STR_52 02A9  
                            STR_44 02DF                              STR_36 03F0  
                            STR_28 0454                              STR_45 0323  
                            STR_37 0301                              STR_53 02CE  
                            STR_29 043C                              STR_46 0334  
                            STR_54 0312                              STR_38 02BD  
                            STR_55 0396                              STR_39 0388  
                            STR_47 02F0                              STR_56 0396  
                            STR_48 03A2                              STR_49 03A2  
                            STR_57 03DB              EEPROM_MultiRead@pData 0029  
                            _CARRY 0018                    __end_of___lldiv 0E81  
                            _T1CON 0018                    __end_of___llmod 0D9F  
                            _T2CON 001C                              _LATA3 0863  
                            _LATA4 0864                              _LATA6 0866  
                            _T6CON 041E        __size_of_Timer1_ClearRecord 0014  
                            i1l400 0024                              i1l272 0964  
                            i1l273 0969                              i1l529 0EA4  
                            _PORTA 000C                              _PORTB 000D  
                            _TRISA 008C                              _TRISB 008D  
                I2C2_Transmit@size 0021                ___lmul@multiplicand 0024  
                    __CFG_PWRTE$ON 0000                     __CFG_FCMEN$OFF 0000  
       __size_of_EEPROM_MultiWrite 0031                    __end_of_dpowers 02A6  
                            _count 0073                    __end_of_isdigit 095F  
                 ??_Save_PMTConfig 002B                  ??_Timer1_Count1ms 0078  
                            _putch 0902                      ??_Buzzer_Init 0020  
            __end_of_Timer1_GetCPM 0B7F              __end_of_Timer1_GetCPS 0D5C  
            ??_Ssetting_PMT_Config 0065        __size_of_Timer1_GetCountSum 0011  
                            status 0003                              wtemp0 007E  
          __end_of_Load_PMTConfing 0936                  _Buzzer_MiliSecond 090B  
          Ssetting_PMT_Config@data 0066                       _I2C_Transmit 0A36  
               _LCD_CursorPosition 09EC                     ?_LCD_WriteData 0076  
               ?_Buzzer_MiliSecond 0020                  EEPROM_MultiRead@i 002A  
                 ??_DAC_Initialize 0030                    ?_LCD_CursorHome 0076  
                  __initialization 002D                       __end_of_main 0603  
          __end_of_Buzzer_Count1ms 09EC                ?_LCD_CursorPosition 0023  
              ??_Buzzer_MiliSecond 0022                             ??_main 0068  
         __size_of_Show_PMT_Config 0093               __end_of_mTouch_Check 0E2E  
          __end_of_sense_parameter 02A9                        ?_Basic_Init 0076  
                           _BCL2IE 04A1                             _BCL2IF 00A1  
                 ___llmod@dividend 003E               __size_of_mTouch_Init 0013  
             __size_of_mTouch_Read 0026                             _EEDATA 0193  
                           _CCPR2L 0298                             _EECON1 0195  
                           _EECON2 0196               ??_LCD_CursorPosition 0024  
                           _ANSELA 018C                             ?_putch 0076  
                           _ANSELB 018D                             _T1GCON 0019  
                           i1l3072 0CA2                             i1l3064 0C92  
                           i1l3090 0A34                             i1l2664 0E8E  
                           i1l2672 0E97                             i1l3472 0012  
                           i1l2690 0EC4                             i1l2692 0EC9  
                           i1l2684 0EAE                             i1l1964 091E  
                           i1l2694 0ECB                             i1l2696 0ECD  
                           i1l2938 09E6                    _mTouch_Interval 0070  
               I2C2_Transmit@i_560 0026          __end_of_Buzzer_MiliSecond 0915  
                           u199_25 0A65                             _OSCCON 0099  
               I2C2_Transmit@pData 0020                             _TMR1IE 0488  
                           _TMR1IF 0088                          ??_Handler 007B  
                           _TMR6IE 049B                             _TMR1ON 00C0  
                           _TMR6IF 009B                             _SSP2IE 04A0  
                           _SSP2IF 00A0           __end_of_EEPROM_MultiRead 0C0A  
         _mTouch_IntervalDecrement 095F                  ?_Timer1_GetMinute 0076  
                ?_Timer1_GetSecond 0076                    _mTouch_PortInit 0943  
                    ??_Timer1_Init 0020                __end_of_Buzzer_Init 0B57  
                    ??_Timer6_Init 0020                 ??_Timer1_GetMinute 0020  
               ??_Timer1_GetSecond 0020               __size_of_eeprom_read 0021  
                           ___lmul 0C0A                             ___wmul 0A6D  
                        ??___lldiv 0034                          ??___llmod 0042  
             __end_of_eeprom_write 0BAB                             _printf 005A  
                 I2C_Transmit@I2Cx 002E                          ??_isdigit 0020  
                        ?_I2C_Init 0025              EEPROM_MultiWrite@addr 0025  
            EEPROM_MultiWrite@size 0024                             putch@c 0023  
                 I2C_Transmit@size 002A            __end_of__initialization 0056  
                        ?_LCD_Init 0076                    eeprom_read@addr 0023  
                  ??_LCD_WriteData 0020                  ?_Timer6_CheckFlag 0076  
     __size_ofi1_Buzzer_MiliSecond 0009                   ?_Load_PMTConfing 0076  
                       _VoltageReg 006D                 ??_Timer6_CheckFlag 0076  
               Buzzer_SetDuty@duty 0076                     __pcstackCOMMON 0076  
              __size_of_Basic_Init 0011                       __pidataBANK1 0A89  
                     __pidataBANK2 0CA6                   ?_Buzzer_Count1ms 0076  
                ?_Timer1_StopCount 0076                 EEPROM_MultiWrite@i 002A  
                    __end_of_putch 090B                __end_of_Timer1_Init 0B09  
              __end_of_Timer6_Init 09C4                 ??_Timer1_StopCount 0020  
        Buzzer_SetDuty@CCP2CON_Pre 007A                         ??_I2C_Init 0028  
                eeprom_write@value 0020                  ??_Show_PMT_Config 0065  
                          ??_putch 0023            __end_of_mTouch_PortInit 0950  
                       __pbssBANK0 006C                         __pbssBANK1 00A0  
       __size_of_Buzzer_MiliSecond 000A                        _Buzzer_Init 0B2F  
                       ??_LCD_Init 0024            __size_of_Buzzer_SetDuty 001C  
                    _DAC_DataTable 013E                       I2C_Init@I2Cx 002A  
      __end_of_I2C_CommonInterrupt 08DF                       I2C_Init@mode 0026  
                       __pmaintext 048E                            ?___lmul 0020  
                          ?___wmul 0020          __size_of_DAC_WriteVoltage 002F  
                       __pintentry 0004              __size_of_mTouch_Check 004B  
                          _CCP2CON 029A                  ?_LCD_DisplayClear 0076  
                   ___lmul@product 0028                            _APFCON0 011D  
                          _APFCON1 011E                            _CCPTMRS 029E  
                          ?_printf 0046                    _Timer1_Count1ms 0C6B  
               ??_LCD_DisplayClear 0023                            _CPSCON0 001E  
                          _CPSCON1 001F                            _SSP2ADD 021A  
                          _SSP2BUF 0219                            _SSP2MSK 021B  
              I2C2_Transmit@result 0027                   ??_LCD_CursorHome 0023  
                          _Handler 0004                 mTouch_Read@channel 0075  
                     _mTouch_Check 0DE3              __end_of_I2C2_Transmit 1000  
                      _Timer1_Init 0AE8                Load_PMTConfing@data 002C  
                      _Timer6_Init 09B1              __size_of_eeprom_write 002C  
__size_of_Timer1_DetectAssignCount 001A                    __size_of___lmul 0030  
        ?_Timer1_DetectAssignCount 0076                            ___lldiv 0E2E  
                  __size_of___wmul 001C                            ___llmod 0D5C  
                  __CFG_STVREN$OFF 0000         __end_of_Timer1_ClearRecord 0800  
                          __ptext1 09C4                            __ptext2 0943  
                          __ptext3 09B1                            __ptext4 08E5  
                          __ptext5 08E8                            __ptext6 07EC  
                          __ptext7 0AE8                            __ptext8 08E2  
                          __ptext9 08DF                    __size_of_printf 0224  
                          _dpowers 027E                            _isdigit 0950  
                     ??_Basic_Init 0020        __end_of_Ssetting_PMT_Config 06DB  
       ??_mTouch_IntervalDecrement 0076                     main@pmt_config 00C5  
                          clrloop0 08EE         __end_of_Timer1_GetCountSum 09B1  
             end_of_initialization 0056                   ?_mTouch_PortInit 0076  
                          init_ram 08F3                       _eeprom_write 0B7F  
                          initloop 08F4                      ?_I2C2_PinInit 0076  
                ?_EEPROM_MultiRead 0024                        _I2C2_Config 00B2  
           EEPROM_MultiWrite@pData 0029                    ___lldiv@divisor 002C  
                    ?_I2C2_Setting 0021                    ___lldiv@counter 0039  
               ??_EEPROM_MultiRead 0026                  I2C_Transmit@pData 0029  
          __end_of_Timer1_Count1ms 0CA6                            printf@c 0062  
                          printf@f 0046                     main@state_mode 006C  
               __end_of_Basic_Init 09A0                       __pstringtext 027E  
                    ?_StartUp_Menu 0076             __size_of_Timer1_GetCPM 0028  
           __size_of_Timer1_GetCPS 003D          __size_of_Timer1_GetMinute 0003  
        __size_of_Timer1_GetSecond 0003                i1_Buzzer_MiliSecond 08F9  
                 __CFG_FOSC$INTOSC 0000                      ??_mTouch_Init 0021  
                    ??_mTouch_Read 0076            __size_of_I2C2_Interrupt 0054  
                __size_of_I2C_Init 0019        __size_of_LCD_CursorPosition 0017  
                   ??_I2C2_PinInit 0020                     _Buzzer_SetDuty 0A51  
             ?i1_Buzzer_MiliSecond 0076                      ??_eeprom_read 0020  
                      printf@width 0063                     ??_I2C2_Setting 0023  
                    _H7826_01_Gain 0120                  __size_of_LCD_Init 006F  
                _Timer1_StartCount 08E8            __size_of_Save_PMTConfig 000B  
                 _DAC_WriteVoltage 0BAB                 ?_Timer1_StartCount 0076  
                   __end_of___lmul 0C3A                     __end_of___wmul 0A89  
                        _ConfigReg 006F                     ??_StartUp_Menu 0065  
                  _Show_PMT_Config 0ED5          __size_of_Timer6_CheckFlag 000B  
              ??_Timer1_StartCount 0020            __size_of_DAC_Initialize 0020  
                   __end_of_printf 027E                start_initialization 002D  
        __size_of_Timer1_StopCount 0003             __end_of_Buzzer_SetDuty 0A6D  
                     ?_Buzzer_Init 0076                __end_of_mTouch_Init 09D7  
              __end_of_mTouch_Read 0B2F                      _Timer1_GetCPM 0B57  
                    _Timer1_GetCPS 0D1F              ??i1_Buzzer_MiliSecond 0078  
              I2C2_Setting@address 0024                    ___llmod@divisor 003A  
        __end_of_Timer1_StartCount 08ED                    ___llmod@counter 0043  
             LCD_CursorPosition@tx 0025               LCD_CursorPosition@ty 0023  
            __end_of_LCD_WriteData 0D1F                   ?_Timer1_Count1ms 0076  
                         ??___lmul 0028                           ??___wmul 0024  
              __end_of_eeprom_read 0AE8           __size_of_Load_PMTConfing 000B  
                      __pdataBANK1 00C8                        __pdataBANK2 0120  
                         ??_printf 0050           __size_of_Buzzer_Count1ms 0015  
                      __pbssCOMMON 0070                          ___latbits 0001  
                    __pcstackBANK0 0020   __end_of_mTouch_IntervalDecrement 096F  
        __size_of_LCD_DisplayClear 0010                    ?_Buzzer_SetDuty 0076  
               _Timer1_GetCPM$1189 0042                     ?_Timer1_GetCPM 003E  
                   ?_Timer1_GetCPS 003A                   eeprom_write@addr 0023  
 __end_of_Timer1_DetectAssignCount 0A36                    I2C_Init@address 0025  
                         ?_Handler 0076                   StartUp_Menu@data 0067  
                    ?_I2C_Transmit 0028                      I2C_Init@Speed 0027  
                     ?_Timer1_Init 0076              DAC_WriteVoltage@volue 0030  
                     ?_Timer6_Init 0076            __end_of_Show_PMT_Config 0F68  
                         ?___lldiv 002C                           ?___llmod 003A  
     __size_of_I2C_CommonInterrupt 0003                          __pswtext1 0800  
                 _Timer1_GetMinute 08DF                   _Timer1_GetSecond 08E2  
             __end_of_I2C2_PinInit 0943                           ?_isdigit 0076  
                         _I2C_Init 0A03               __end_of_I2C2_Setting 0DE3  
                   _I2C2_Interrupt 0E81                         _H7826_Gain 00C8  
                      _mTouch_Init 09C4                        _mTouch_Read 0B09  
               _Timer1_ClearRecord 07EC                     __size_of_putch 0009  
             __end_of_StartUp_Menu 077D                           _LCD_Init 077D  
                   ___wmul@product 0024                           _CPS_Data 00AF  
                   ??_I2C_Transmit 002B                ?_Timer1_ClearRecord 0076  
       __size_of_Timer1_StartCount 0005                          clear_ram0 08ED  
                      _eeprom_read 0AC7                     _Save_PMTConfig 0920  
               _Timer1_GetCountSum 09A0               I2C2_Transmit@address 0024  
                         _SSP2CON1 021D                           _SSP2CON2 021E  
                         _SSP2STAT 021C                ?_Timer1_GetCountSum 0020  
                 _Timer6_CheckFlag 0915          __size_of_EEPROM_MultiRead 0030  
                ___wmul@multiplier 0020                   mTouch_Check@chan 0027  
                   _DAC_Initialize 0AA7               ??_Timer1_ClearRecord 0020  
           __end_of_I2C2_Interrupt 0ED5                         printf@flag 0061  
                ??_Load_PMTConfing 002B                         printf@prec 0056  
           __size_of_I2C2_Transmit 0098                    ??_Timer1_GetCPM 0042  
                 _Timer1_StopCount 08E5                    ??_Timer1_GetCPS 003E  
         __end_of_DAC_WriteVoltage 0BDA                        _CPS_PreData 00AC  
                ___lmul@multiplier 0020                  ??_Buzzer_Count1ms 007B  
             ??_Timer1_GetCountSum 0024       __size_of_Ssetting_PMT_Config 00D8  
           __end_of_Save_PMTConfig 092B                   __size_of_Handler 0027  
             __size_of_Buzzer_Init 0028           _Timer1_DetectAssignCount 0A1C  
         __size_of_mTouch_PortInit 000D  __size_of_mTouch_IntervalDecrement 0010  
        ?_mTouch_IntervalDecrement 0076                   ?_Show_PMT_Config 0076  
          __size_of_LCD_CursorHome 0010             __end_of_DAC_Initialize 0AC7  
                 __size_of___lldiv 0053                   __size_of___llmod 0043  
               LCD_WriteData@point 0022                        _isdigit$904 0020  
                  ?_I2C2_Interrupt 0076                   __size_of_isdigit 000F  
       __end_of_LCD_CursorPosition 0A03                           __ptext10 09A0  
                         __ptext11 0B57                           __ptext20 0920  
                         __ptext12 0D1F                           __ptext21 0C3A  
                         __ptext13 0C0A                           __ptext30 0DE3  
                         __ptext22 0B7F                           __ptext14 06DB  
                         __ptext31 090B                           __ptext23 0ED5  
                         __ptext15 092B                           __ptext40 0A03  
                         __ptext32 09EC                           __ptext24 005A  
                         __ptext16 0BDA                           __ptext41 0D9F  
                         __ptext33 097F                           __ptext25 0902  
                         __ptext17 0AC7                           __ptext50 0C6B  
                         __ptext42 0936                           __ptext34 077D  
                         __ptext26 0950                           __ptext18 0BAB  
                         __ptext51 08F9                           __ptext43 0B2F  
                         __ptext35 096F                           __ptext27 0A6D  
                         __ptext19 0603                           __ptext52 08DC  
                         __ptext44 098F                           __ptext36 0CE2  
                         __ptext28 0D5C                           __ptext53 0E81  
                         __ptext37 0AA7                           __ptext29 0E2E  
                         __ptext54 09D7                           __ptext46 0B09  
                         __ptext38 0A36                           __ptext55 0A51  
                         __ptext47 095F                           __ptext39 0F68  
                         __ptext48 0915                           __ptext49 0A1C  
                 _LCD_DisplayClear 096F                       _SSP2CON1bits 021D  
                     _SSP2CON2bits 021E                      __size_of_main 0175  
                  ?_Save_PMTConfig 0076                      _I2C2_Transmit 0F68  
             __size_of_Timer1_Init 0021                           int$flags 007E  
            __size_of_I2C2_PinInit 000D                I2C_Transmit@address 0028  
             __size_of_Timer6_Init 0013                          printf@len 005A  
                  ?_DAC_Initialize 0076                          printf@val 005C  
            __size_of_I2C2_Setting 0044                Show_PMT_Config@data 0067  
                     _SSP2STATbits 021C               __end_of_I2C_Transmit 0A51  
                I2C2_Setting@Speed 0022                   ??_Buzzer_SetDuty 0078  
      __end_ofi1_Buzzer_MiliSecond 0902                           isdigit@c 0021  
            __size_of_StartUp_Menu 00A2            i1Buzzer_MiliSecond@time 0076  
                _EEPROM_MultiWrite 0C3A                           intlevel1 0000  
               ?_EEPROM_MultiWrite 0024                _I2C_CommonInterrupt 08DC  
                 ___lldiv@dividend 0030           __end_of_Timer1_GetMinute 08E2  
         __end_of_Timer1_GetSecond 08E5                  __CFG_CLKOUTEN$OFF 0000  
                     _I2C2_PinInit 0936                      ?_mTouch_Check 0076  
                   ?_I2C2_Transmit 0020                       _I2C2_Setting 0D9F  
              ??_EEPROM_MultiWrite 0026                           printf@ap 0060  
                         printf@cp 0058                 I2C_Transmit@result 002F  
                ??_mTouch_PortInit 0020                   I2C2_Setting@mode 0021  
             ?_I2C_CommonInterrupt 0076                   _EEPROM_MultiRead 0BDA  
                     _StartUp_Menu 06DB                         _OPTION_REG 0095  
         __size_of_Timer1_Count1ms 003B                   ___lldiv@quotient 0035  
                     ?_mTouch_Init 0076                       ?_mTouch_Read 0076  
           __size_of_LCD_WriteData 003D          __end_of_EEPROM_MultiWrite 0C6B  
               Save_PMTConfig@data 002C                      ?_eeprom_write 0020  
         __end_of_Timer6_CheckFlag 0920                     ??_mTouch_Check 0022  
                     ?_eeprom_read 0076  
