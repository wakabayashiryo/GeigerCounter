

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon May 22 13:23:46 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 1.41
    34                           ; Generated 25/01/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F1827 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0113                     	;# 
   118  0114                     	;# 
   119  0115                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  0118                     	;# 
   123  0119                     	;# 
   124  011A                     	;# 
   125  011B                     	;# 
   126  011D                     	;# 
   127  011E                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0194                     	;# 
   137  0195                     	;# 
   138  0196                     	;# 
   139  0199                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  020D                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0214                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0216                     	;# 
   164  0216                     	;# 
   165  0217                     	;# 
   166  0217                     	;# 
   167  0219                     	;# 
   168  021A                     	;# 
   169  021B                     	;# 
   170  021C                     	;# 
   171  021D                     	;# 
   172  021E                     	;# 
   173  021F                     	;# 
   174  0291                     	;# 
   175  0291                     	;# 
   176  0292                     	;# 
   177  0293                     	;# 
   178  0294                     	;# 
   179  0295                     	;# 
   180  0295                     	;# 
   181  0296                     	;# 
   182  0298                     	;# 
   183  0298                     	;# 
   184  0299                     	;# 
   185  029A                     	;# 
   186  029B                     	;# 
   187  029C                     	;# 
   188  029C                     	;# 
   189  029D                     	;# 
   190  029E                     	;# 
   191  029E                     	;# 
   192  0311                     	;# 
   193  0311                     	;# 
   194  0312                     	;# 
   195  0313                     	;# 
   196  0318                     	;# 
   197  0318                     	;# 
   198  0319                     	;# 
   199  031A                     	;# 
   200  0394                     	;# 
   201  0395                     	;# 
   202  0396                     	;# 
   203  039A                     	;# 
   204  039C                     	;# 
   205  039D                     	;# 
   206  039E                     	;# 
   207  039F                     	;# 
   208  0415                     	;# 
   209  0416                     	;# 
   210  0417                     	;# 
   211  041C                     	;# 
   212  041D                     	;# 
   213  041E                     	;# 
   214  0FE4                     	;# 
   215  0FE5                     	;# 
   216  0FE6                     	;# 
   217  0FE7                     	;# 
   218  0FE8                     	;# 
   219  0FE9                     	;# 
   220  0FEA                     	;# 
   221  0FEB                     	;# 
   222  0FED                     	;# 
   223  0FEE                     	;# 
   224  0FEF                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  0111                     	;# 
   274  0112                     	;# 
   275  0113                     	;# 
   276  0114                     	;# 
   277  0115                     	;# 
   278  0116                     	;# 
   279  0117                     	;# 
   280  0118                     	;# 
   281  0119                     	;# 
   282  011A                     	;# 
   283  011B                     	;# 
   284  011D                     	;# 
   285  011E                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0191                     	;# 
   289  0191                     	;# 
   290  0192                     	;# 
   291  0193                     	;# 
   292  0193                     	;# 
   293  0193                     	;# 
   294  0194                     	;# 
   295  0195                     	;# 
   296  0196                     	;# 
   297  0199                     	;# 
   298  019A                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019B                     	;# 
   303  019C                     	;# 
   304  019C                     	;# 
   305  019D                     	;# 
   306  019E                     	;# 
   307  019F                     	;# 
   308  020C                     	;# 
   309  020D                     	;# 
   310  0211                     	;# 
   311  0211                     	;# 
   312  0212                     	;# 
   313  0212                     	;# 
   314  0213                     	;# 
   315  0213                     	;# 
   316  0214                     	;# 
   317  0214                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0215                     	;# 
   321  0216                     	;# 
   322  0216                     	;# 
   323  0217                     	;# 
   324  0217                     	;# 
   325  0219                     	;# 
   326  021A                     	;# 
   327  021B                     	;# 
   328  021C                     	;# 
   329  021D                     	;# 
   330  021E                     	;# 
   331  021F                     	;# 
   332  0291                     	;# 
   333  0291                     	;# 
   334  0292                     	;# 
   335  0293                     	;# 
   336  0294                     	;# 
   337  0295                     	;# 
   338  0295                     	;# 
   339  0296                     	;# 
   340  0298                     	;# 
   341  0298                     	;# 
   342  0299                     	;# 
   343  029A                     	;# 
   344  029B                     	;# 
   345  029C                     	;# 
   346  029C                     	;# 
   347  029D                     	;# 
   348  029E                     	;# 
   349  029E                     	;# 
   350  0311                     	;# 
   351  0311                     	;# 
   352  0312                     	;# 
   353  0313                     	;# 
   354  0318                     	;# 
   355  0318                     	;# 
   356  0319                     	;# 
   357  031A                     	;# 
   358  0394                     	;# 
   359  0395                     	;# 
   360  0396                     	;# 
   361  039A                     	;# 
   362  039C                     	;# 
   363  039D                     	;# 
   364  039E                     	;# 
   365  039F                     	;# 
   366  0415                     	;# 
   367  0416                     	;# 
   368  0417                     	;# 
   369  041C                     	;# 
   370  041D                     	;# 
   371  041E                     	;# 
   372  0FE4                     	;# 
   373  0FE5                     	;# 
   374  0FE6                     	;# 
   375  0FE7                     	;# 
   376  0FE8                     	;# 
   377  0FE9                     	;# 
   378  0FEA                     	;# 
   379  0FEB                     	;# 
   380  0FED                     	;# 
   381  0FEE                     	;# 
   382  0FEF                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  0111                     	;# 
   432  0112                     	;# 
   433  0113                     	;# 
   434  0114                     	;# 
   435  0115                     	;# 
   436  0116                     	;# 
   437  0117                     	;# 
   438  0118                     	;# 
   439  0119                     	;# 
   440  011A                     	;# 
   441  011B                     	;# 
   442  011D                     	;# 
   443  011E                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0191                     	;# 
   447  0191                     	;# 
   448  0192                     	;# 
   449  0193                     	;# 
   450  0193                     	;# 
   451  0193                     	;# 
   452  0194                     	;# 
   453  0195                     	;# 
   454  0196                     	;# 
   455  0199                     	;# 
   456  019A                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019C                     	;# 
   462  019C                     	;# 
   463  019D                     	;# 
   464  019E                     	;# 
   465  019F                     	;# 
   466  020C                     	;# 
   467  020D                     	;# 
   468  0211                     	;# 
   469  0211                     	;# 
   470  0212                     	;# 
   471  0212                     	;# 
   472  0213                     	;# 
   473  0213                     	;# 
   474  0214                     	;# 
   475  0214                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0215                     	;# 
   479  0216                     	;# 
   480  0216                     	;# 
   481  0217                     	;# 
   482  0217                     	;# 
   483  0219                     	;# 
   484  021A                     	;# 
   485  021B                     	;# 
   486  021C                     	;# 
   487  021D                     	;# 
   488  021E                     	;# 
   489  021F                     	;# 
   490  0291                     	;# 
   491  0291                     	;# 
   492  0292                     	;# 
   493  0293                     	;# 
   494  0294                     	;# 
   495  0295                     	;# 
   496  0295                     	;# 
   497  0296                     	;# 
   498  0298                     	;# 
   499  0298                     	;# 
   500  0299                     	;# 
   501  029A                     	;# 
   502  029B                     	;# 
   503  029C                     	;# 
   504  029C                     	;# 
   505  029D                     	;# 
   506  029E                     	;# 
   507  029E                     	;# 
   508  0311                     	;# 
   509  0311                     	;# 
   510  0312                     	;# 
   511  0313                     	;# 
   512  0318                     	;# 
   513  0318                     	;# 
   514  0319                     	;# 
   515  031A                     	;# 
   516  0394                     	;# 
   517  0395                     	;# 
   518  0396                     	;# 
   519  039A                     	;# 
   520  039C                     	;# 
   521  039D                     	;# 
   522  039E                     	;# 
   523  039F                     	;# 
   524  0415                     	;# 
   525  0416                     	;# 
   526  0417                     	;# 
   527  041C                     	;# 
   528  041D                     	;# 
   529  041E                     	;# 
   530  0FE4                     	;# 
   531  0FE5                     	;# 
   532  0FE6                     	;# 
   533  0FE7                     	;# 
   534  0FE8                     	;# 
   535  0FE9                     	;# 
   536  0FEA                     	;# 
   537  0FEB                     	;# 
   538  0FED                     	;# 
   539  0FEE                     	;# 
   540  0FEF                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  0011                     	;# 
   556  0012                     	;# 
   557  0013                     	;# 
   558  0014                     	;# 
   559  0015                     	;# 
   560  0016                     	;# 
   561  0016                     	;# 
   562  0017                     	;# 
   563  0018                     	;# 
   564  0019                     	;# 
   565  001A                     	;# 
   566  001B                     	;# 
   567  001C                     	;# 
   568  001E                     	;# 
   569  001F                     	;# 
   570  008C                     	;# 
   571  008D                     	;# 
   572  0091                     	;# 
   573  0092                     	;# 
   574  0093                     	;# 
   575  0094                     	;# 
   576  0095                     	;# 
   577  0096                     	;# 
   578  0097                     	;# 
   579  0098                     	;# 
   580  0099                     	;# 
   581  009A                     	;# 
   582  009B                     	;# 
   583  009B                     	;# 
   584  009C                     	;# 
   585  009D                     	;# 
   586  009E                     	;# 
   587  010C                     	;# 
   588  010D                     	;# 
   589  0111                     	;# 
   590  0112                     	;# 
   591  0113                     	;# 
   592  0114                     	;# 
   593  0115                     	;# 
   594  0116                     	;# 
   595  0117                     	;# 
   596  0118                     	;# 
   597  0119                     	;# 
   598  011A                     	;# 
   599  011B                     	;# 
   600  011D                     	;# 
   601  011E                     	;# 
   602  018C                     	;# 
   603  018D                     	;# 
   604  0191                     	;# 
   605  0191                     	;# 
   606  0192                     	;# 
   607  0193                     	;# 
   608  0193                     	;# 
   609  0193                     	;# 
   610  0194                     	;# 
   611  0195                     	;# 
   612  0196                     	;# 
   613  0199                     	;# 
   614  019A                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019C                     	;# 
   620  019C                     	;# 
   621  019D                     	;# 
   622  019E                     	;# 
   623  019F                     	;# 
   624  020C                     	;# 
   625  020D                     	;# 
   626  0211                     	;# 
   627  0211                     	;# 
   628  0212                     	;# 
   629  0212                     	;# 
   630  0213                     	;# 
   631  0213                     	;# 
   632  0214                     	;# 
   633  0214                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0216                     	;# 
   638  0216                     	;# 
   639  0217                     	;# 
   640  0217                     	;# 
   641  0219                     	;# 
   642  021A                     	;# 
   643  021B                     	;# 
   644  021C                     	;# 
   645  021D                     	;# 
   646  021E                     	;# 
   647  021F                     	;# 
   648  0291                     	;# 
   649  0291                     	;# 
   650  0292                     	;# 
   651  0293                     	;# 
   652  0294                     	;# 
   653  0295                     	;# 
   654  0295                     	;# 
   655  0296                     	;# 
   656  0298                     	;# 
   657  0298                     	;# 
   658  0299                     	;# 
   659  029A                     	;# 
   660  029B                     	;# 
   661  029C                     	;# 
   662  029C                     	;# 
   663  029D                     	;# 
   664  029E                     	;# 
   665  029E                     	;# 
   666  0311                     	;# 
   667  0311                     	;# 
   668  0312                     	;# 
   669  0313                     	;# 
   670  0318                     	;# 
   671  0318                     	;# 
   672  0319                     	;# 
   673  031A                     	;# 
   674  0394                     	;# 
   675  0395                     	;# 
   676  0396                     	;# 
   677  039A                     	;# 
   678  039C                     	;# 
   679  039D                     	;# 
   680  039E                     	;# 
   681  039F                     	;# 
   682  0415                     	;# 
   683  0416                     	;# 
   684  0417                     	;# 
   685  041C                     	;# 
   686  041D                     	;# 
   687  041E                     	;# 
   688  0FE4                     	;# 
   689  0FE5                     	;# 
   690  0FE6                     	;# 
   691  0FE7                     	;# 
   692  0FE8                     	;# 
   693  0FE9                     	;# 
   694  0FEA                     	;# 
   695  0FEB                     	;# 
   696  0FED                     	;# 
   697  0FEE                     	;# 
   698  0FEF                     	;# 
   699                           
   700                           	psect	stringtext
   701  0377                     __pstringtext:	
   702  0377                     _dpowers:	
   703  0377  3401               	retlw	1
   704  0378  3400               	retlw	0
   705  0379  340A               	retlw	10
   706  037A  3400               	retlw	0
   707  037B  3464               	retlw	100
   708  037C  3400               	retlw	0
   709  037D  34E8               	retlw	232
   710  037E  3403               	retlw	3
   711  037F  3410               	retlw	16
   712  0380  3427               	retlw	39
   713  0381                     __end_of_dpowers:	
   714  0016                     _TMR1	set	22
   715  000C                     _PORTA	set	12
   716  0019                     _T1GCON	set	25
   717  0018                     _T1CON	set	24
   718  000D                     _PORTB	set	13
   719  0099                     _TMR4IF	set	153
   720  005F                     _GIE	set	95
   721  005E                     _PEIE	set	94
   722  0088                     _TMR1IF	set	136
   723  00C0                     _TMR1ON	set	192
   724  0063                     _RA3	set	99
   725  0064                     _RA4	set	100
   726  008C                     _TRISA	set	140
   727  0099                     _OSCCON	set	153
   728  008D                     _TRISB	set	141
   729  0499                     _TMR4IE	set	1177
   730  0488                     _TMR1IE	set	1160
   731  011E                     _APFCON1	set	286
   732  011D                     _APFCON0	set	285
   733  0866                     _LATA6	set	2150
   734  018C                     _ANSELA	set	396
   735  018D                     _ANSELB	set	397
   736  020D                     _WPUB	set	525
   737  0417                     _T4CON	set	1047
   738  0415                     _TMR4	set	1045
   739  0416                     _PR4	set	1046
   740  0381                     STR_1:	
   741  0381  3425               	retlw	37	;'%'
   742  0382  3475               	retlw	117	;'u'
   743  0383  346C               	retlw	108	;'l'
   744  0384  3420               	retlw	32	;' '
   745  0385  3425               	retlw	37	;'%'
   746  0386  3464               	retlw	100	;'d'
   747  0387  3400               	retlw	0
   748                           
   749                           ; #config settings
   750  0000                     
   751                           	psect	cinit
   752  0022                     start_initialization:	
   753  0022                     __initialization:	
   754                           
   755                           ; Clear objects allocated to BANK0
   756  0022  3041               	movlw	low __pbssBANK0
   757  0023  0084               	movwf	4
   758  0024  3000               	movlw	high __pbssBANK0
   759  0025  0085               	movwf	5
   760  0026  3016               	movlw	22
   761  0027  3183  23DC         	fcall	clear_ram0
   762  0029                     end_of_initialization:	
   763                           ;End of C runtime variable initialization code
   764                           
   765  0029                     __end_of__initialization:	
   766  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   767  002A  0020               	movlb	0
   768  002B  3182  2ABF         	ljmp	_main	;jump to C main() function
   769                           
   770                           	psect	bssBANK0
   771  0041                     __pbssBANK0:	
   772  0041                     _cnts:	
   773  0041                     	ds	14
   774  004F                     _tcnt:	
   775  004F                     	ds	6
   776  0055                     Timer1_DetectAssignCount@PreviousTimer1:	
   777  0055                     	ds	2
   778                           
   779                           	psect	clrtext
   780  03DC                     clear_ram0:	
   781                           ;	Called with FSR0 containing the base address, and
   782                           ;	WREG with the size to clear
   783                           
   784  03DC  0064               	clrwdt	;clear the watchdog before getting into this loop
   785  03DD                     clrloop0:	
   786  03DD  0180               	clrf	0	;clear RAM location pointed to by FSR
   787  03DE  3101               	addfsr 0,1
   788  03DF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   789  03E0  2BDD               	goto	clrloop0	;have we reached the end yet?
   790  03E1  3400               	retlw	0	;all done for this memory range, return
   791                           
   792                           	psect	cstackCOMMON
   793  0070                     __pcstackCOMMON:	
   794  0070                     ?_LCD_DisplayClear:	
   795  0070                     ?_Timer1_ClearRecord:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_Basic_Init:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_LCD_WriteData:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_LCD_Init:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_putch:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_LCD_CursorHome:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_Timer1_Init:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_Timer1_StartCount:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_Timer1_Count200us:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ??_Timer1_Count200us:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_Timer1_DetectAssignCount:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_Timer4_Init:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_Timer4_Handler:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ??_Timer4_Handler:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_main:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_Handler:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?___lldiv:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ___lldiv@divisor:	
   847                           ; 4 bytes @ 0x0
   848                           
   849                           
   850                           ; 4 bytes @ 0x0
   851  0070                     	ds	4
   852  0074                     ___lldiv@dividend:	
   853                           
   854                           ; 4 bytes @ 0x4
   855  0074                     	ds	4
   856  0078                     ??___lldiv:	
   857                           
   858                           ; 1 bytes @ 0x8
   859  0078                     	ds	1
   860  0079                     ___lldiv@quotient:	
   861                           
   862                           ; 4 bytes @ 0x9
   863  0079                     	ds	4
   864  007D                     ___lldiv@counter:	
   865                           
   866                           ; 1 bytes @ 0xD
   867  007D                     	ds	1
   868  007E                     ??_Timer1_DetectAssignCount:	
   869                           
   870                           	psect	cstackBANK0
   871  0020                     __pcstackBANK0:	
   872                           ; 1 bytes @ 0xE
   873                           
   874  0020                     ??_Handler:	
   875                           
   876                           ; 1 bytes @ 0x0
   877  0020                     	ds	1
   878  0021                     ??_Timer1_ClearRecord:	
   879  0021                     ??_Basic_Init:	
   880                           ; 1 bytes @ 0x1
   881                           
   882  0021                     ??_LCD_WriteData:	
   883                           ; 1 bytes @ 0x1
   884                           
   885  0021                     ??_Timer1_Init:	
   886                           ; 1 bytes @ 0x1
   887                           
   888  0021                     ??_Timer1_StartCount:	
   889                           ; 1 bytes @ 0x1
   890                           
   891  0021                     ??_Timer4_Init:	
   892                           ; 1 bytes @ 0x1
   893                           
   894  0021                     ?_Timer1_GetCPM:	
   895                           ; 1 bytes @ 0x1
   896                           
   897  0021                     ?___lwdiv:	
   898                           ; 2 bytes @ 0x1
   899                           
   900  0021                     ?_Timer1_GetCountSum:	
   901                           ; 2 bytes @ 0x1
   902                           
   903  0021                     ___lwdiv@divisor:	
   904                           ; 4 bytes @ 0x1
   905                           
   906                           
   907                           ; 2 bytes @ 0x1
   908  0021                     	ds	2
   909  0023                     ??_Timer1_GetCPM:	
   910  0023                     LCD_WriteData@point:	
   911                           ; 1 bytes @ 0x3
   912                           
   913  0023                     ___lwdiv@dividend:	
   914                           ; 1 bytes @ 0x3
   915                           
   916                           
   917                           ; 2 bytes @ 0x3
   918  0023                     	ds	1
   919  0024                     ??_LCD_DisplayClear:	
   920  0024                     ??_putch:	
   921                           ; 1 bytes @ 0x4
   922                           
   923  0024                     ??_LCD_CursorHome:	
   924                           ; 1 bytes @ 0x4
   925                           
   926  0024                     putch@c:	
   927                           ; 1 bytes @ 0x4
   928                           
   929                           
   930                           ; 1 bytes @ 0x4
   931  0024                     	ds	1
   932  0025                     ??_LCD_Init:	
   933  0025                     ??_Timer1_GetCountSum:	
   934                           ; 1 bytes @ 0x5
   935                           
   936  0025                     ??___lwdiv:	
   937                           ; 1 bytes @ 0x5
   938                           
   939                           
   940                           ; 1 bytes @ 0x5
   941  0025                     	ds	1
   942  0026                     ___lwdiv@quotient:	
   943                           
   944                           ; 2 bytes @ 0x6
   945  0026                     	ds	2
   946  0028                     ___lwdiv@counter:	
   947                           
   948                           ; 1 bytes @ 0x8
   949  0028                     	ds	1
   950  0029                     ?___lwmod:	
   951  0029                     ___lwmod@divisor:	
   952                           ; 2 bytes @ 0x9
   953                           
   954                           
   955                           ; 2 bytes @ 0x9
   956  0029                     	ds	2
   957  002B                     ___lwmod@dividend:	
   958                           
   959                           ; 2 bytes @ 0xB
   960  002B                     	ds	2
   961  002D                     ??___lwmod:	
   962                           
   963                           ; 1 bytes @ 0xD
   964  002D                     	ds	1
   965  002E                     ___lwmod@counter:	
   966                           
   967                           ; 1 bytes @ 0xE
   968  002E                     	ds	1
   969  002F                     ?_printf:	
   970  002F                     printf@f:	
   971                           ; 2 bytes @ 0xF
   972                           
   973                           
   974                           ; 2 bytes @ 0xF
   975  002F                     	ds	8
   976  0037                     ??_printf:	
   977                           
   978                           ; 1 bytes @ 0x17
   979  0037                     	ds	4
   980  003B                     printf@prec:	
   981                           
   982                           ; 1 bytes @ 0x1B
   983  003B                     	ds	1
   984  003C                     printf@ap:	
   985                           
   986                           ; 1 bytes @ 0x1C
   987  003C                     	ds	1
   988  003D                     printf@flag:	
   989                           
   990                           ; 1 bytes @ 0x1D
   991  003D                     	ds	1
   992  003E                     printf@val:	
   993                           
   994                           ; 2 bytes @ 0x1E
   995  003E                     	ds	2
   996  0040                     printf@c:	
   997                           
   998                           ; 1 bytes @ 0x20
   999  0040                     	ds	1
  1000  0041                     ??_main:	
  1001                           
  1002                           	psect	maintext
  1003  02BF                     __pmaintext:	
  1004                           ; 1 bytes @ 0x21
  1005 ;;
  1006 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1007 ;;
  1008 ;; *************** function _main *****************
  1009 ;; Defined at:
  1010 ;;		line 13 in file "main.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;		None
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      char 
  1017 ;; Registers used:
  1018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : B1F/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1024 ;;      Params:         0       0       0       0       0       0
  1025 ;;      Locals:         0       0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0
  1027 ;;      Totals:         0       0       0       0       0       0
  1028 ;;Total ram usage:        0 bytes
  1029 ;; Hardware stack levels required when called:    6
  1030 ;; This function calls:
  1031 ;;		_Basic_Init
  1032 ;;		_LCD_CursorHome
  1033 ;;		_LCD_Init
  1034 ;;		_Timer1_GetCPM
  1035 ;;		_Timer1_GetCountSum
  1036 ;;		_Timer1_Init
  1037 ;;		_Timer1_StartCount
  1038 ;;		_Timer4_Init
  1039 ;;		_printf
  1040 ;; This function is called by:
  1041 ;;		Startup code after reset
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           
  1046                           ;psect for function _main
  1047  02BF                     _main:	
  1048                           
  1049                           ;main.c: 15: Basic_Init();
  1050                           
  1051                           ;incstack = 0
  1052                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1053  02BF  3183  2362  3182   	fcall	_Basic_Init
  1054                           
  1055                           ;main.c: 17: LCD_Init();
  1056  02C2  3181  2190  3182   	fcall	_LCD_Init
  1057                           
  1058                           ;main.c: 18: Timer1_Init();
  1059  02C5  3183  2341  3182   	fcall	_Timer1_Init
  1060                           
  1061                           ;main.c: 19: Timer4_Init();
  1062  02C8  3183  23A8  3182   	fcall	_Timer4_Init
  1063                           
  1064                           ;main.c: 21: Timer1_StartCount();
  1065  02CB  3183  23E8  3182   	fcall	_Timer1_StartCount
  1066  02CE                     l168:	
  1067                           ;main.c: 23: while(1)
  1068                           
  1069                           
  1070                           ;main.c: 24: {
  1071                           ;main.c: 25: LCD_CursorHome();
  1072  02CE  3183  2398  3182   	fcall	_LCD_CursorHome
  1073                           
  1074                           ;main.c: 26: printf("%ul %d", Timer1_GetCPM(),Timer1_GetCountSum());
  1075  02D1  3081               	movlw	low (STR_1| (0+32768))
  1076  02D2  0020               	movlb	0	; select bank0
  1077  02D3  00AF               	movwf	printf@f
  1078  02D4  3083               	movlw	high (STR_1| (0+32768))
  1079  02D5  00B0               	movwf	printf@f+1
  1080  02D6  3183  23E2  3182   	fcall	_Timer1_GetCPM
  1081  02D9  0020               	movlb	0	; select bank0
  1082  02DA  0822               	movf	?_Timer1_GetCPM+1,w
  1083  02DB  00B2               	movwf	?_printf+3
  1084  02DC  0821               	movf	?_Timer1_GetCPM,w
  1085  02DD  00B1               	movwf	?_printf+2
  1086  02DE  3183  23C1  3182   	fcall	_Timer1_GetCountSum
  1087  02E1  0020               	movlb	0	; select bank0
  1088  02E2  0824               	movf	?_Timer1_GetCountSum+3,w
  1089  02E3  00B6               	movwf	?_printf+7
  1090  02E4  0823               	movf	?_Timer1_GetCountSum+2,w
  1091  02E5  00B5               	movwf	?_printf+6
  1092  02E6  0822               	movf	?_Timer1_GetCountSum+1,w
  1093  02E7  00B4               	movwf	?_printf+5
  1094  02E8  0821               	movf	?_Timer1_GetCountSum,w
  1095  02E9  00B3               	movwf	?_printf+4
  1096  02EA  3180  202D  3182   	fcall	_printf
  1097  02ED  2ACE               	goto	l168
  1098  02EE                     __end_of_main:	
  1099                           ;main.c: 27: }
  1100                           ;main.c: 29: return 0;
  1101                           ;	Return value of _main is never used
  1102                           
  1103                           
  1104                           	psect	text1
  1105  002D                     __ptext1:	
  1106 ;; *************** function _printf *****************
  1107 ;; Defined at:
  1108 ;;		line 464 in file "/opt/microchip/xc8/v1.41/sources/common/doprnt.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  f               2   15[BANK0 ] PTR const unsigned char 
  1111 ;;		 -> STR_1(7), 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  tmpval          4    0        struct .
  1114 ;;  val             2   30[BANK0 ] unsigned int 
  1115 ;;  cp              2    0        PTR const unsigned char 
  1116 ;;  len             2    0        unsigned int 
  1117 ;;  c               1   32[BANK0 ] char 
  1118 ;;  flag            1   29[BANK0 ] unsigned char 
  1119 ;;  ap              1   28[BANK0 ] PTR void [1]
  1120 ;;		 -> ?_printf(2), 
  1121 ;;  prec            1   27[BANK0 ] char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  2   15[BANK0 ] int 
  1124 ;; Registers used:
  1125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1131 ;;      Params:         0       8       0       0       0       0
  1132 ;;      Locals:         0       6       0       0       0       0
  1133 ;;      Temps:          0       4       0       0       0       0
  1134 ;;      Totals:         0      18       0       0       0       0
  1135 ;;Total ram usage:       18 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    5
  1138 ;; This function calls:
  1139 ;;		___lwdiv
  1140 ;;		___lwmod
  1141 ;;		_putch
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           
  1148                           ;psect for function _printf
  1149  002D                     _printf:	
  1150                           
  1151                           ;doprnt.c: 466: va_list ap;
  1152                           ;doprnt.c: 499: signed char c;
  1153                           ;doprnt.c: 506: signed char prec;
  1154                           ;doprnt.c: 508: unsigned char flag;
  1155                           ;doprnt.c: 523: union {
  1156                           ;doprnt.c: 524: unsigned long vd;
  1157                           ;doprnt.c: 525: double integ;
  1158                           ;doprnt.c: 526: } tmpval;
  1159                           ;doprnt.c: 528: unsigned int val;
  1160                           ;doprnt.c: 529: unsigned len;
  1161                           ;doprnt.c: 530: const char * cp;
  1162                           ;doprnt.c: 533: *ap = __va_start();
  1163                           
  1164                           ;incstack = 0
  1165                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1166  002D  3031               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1167  002E  0020               	movlb	0	; select bank0
  1168  002F  00B7               	movwf	??_printf
  1169  0030  0837               	movf	??_printf,w
  1170  0031  00BC               	movwf	printf@ap
  1171  0032                     l1392:	
  1172                           ;doprnt.c: 536: while(c = *f++) {
  1173                           
  1174  0032  0020               	movlb	0	; select bank0
  1175  0033  0830               	movf	printf@f+1,w
  1176  0034  00B8               	movwf	??_printf+1
  1177  0035  082F               	movf	printf@f,w
  1178  0036  00B7               	movwf	??_printf
  1179  0037  0AAF               	incf	printf@f,f
  1180  0038  1903               	skipnz
  1181  0039  0AB0               	incf	printf@f+1,f
  1182  003A  0837               	movf	??_printf,w
  1183  003B  0084               	movwf	4
  1184  003C  0838               	movf	??_printf+1,w
  1185  003D  0085               	movwf	5
  1186  003E  0800               	movf	0,w	;code access
  1187  003F  00B9               	movwf	??_printf+2
  1188  0040  0839               	movf	??_printf+2,w
  1189  0041  00C0               	movwf	printf@c
  1190  0042  0840               	movf	printf@c,w
  1191  0043  1903               	btfsc	3,2
  1192  0044  0008               	return
  1193                           
  1194                           ;doprnt.c: 538: if(c != '%')
  1195  0045  3025               	movlw	37
  1196  0046  0640               	xorwf	printf@c,w
  1197  0047  1903               	btfsc	3,2
  1198  0048  284E               	goto	l1348
  1199                           
  1200                           ;doprnt.c: 540: {
  1201                           ;doprnt.c: 541: (putch(c) );
  1202  0049  0840               	movf	printf@c,w
  1203  004A  3183  23D5  3180   	fcall	_putch
  1204                           
  1205                           ;doprnt.c: 542: continue;
  1206  004D  2832               	goto	l1392
  1207  004E                     l1348:	
  1208                           
  1209                           ;doprnt.c: 543: }
  1210                           ;doprnt.c: 548: flag = 0;
  1211  004E  0020               	movlb	0	; select bank0
  1212  004F  01BD               	clrf	printf@flag
  1213                           
  1214                           ;doprnt.c: 635: switch(c = *f++) {
  1215  0050  2853               	goto	l1352
  1216  0051                     l200:	
  1217                           ;doprnt.c: 817: case 'u':
  1218                           
  1219                           ;doprnt.c: 813: continue;
  1220                           
  1221                           ;doprnt.c: 802: default:
  1222                           
  1223                           ;doprnt.c: 698: case 'i':
  1224                           ;doprnt.c: 699: break;
  1225                           
  1226                           ;doprnt.c: 697: case 'd':
  1227                           
  1228                           ;doprnt.c: 638: goto alldone;
  1229                           
  1230                           ;doprnt.c: 637: case 0:
  1231                           
  1232                           
  1233                           ;doprnt.c: 818: flag |= 0x40;
  1234  0051  173D               	bsf	printf@flag,6
  1235                           
  1236                           ;doprnt.c: 822: }
  1237                           
  1238                           ;doprnt.c: 819: break;
  1239  0052  286D               	goto	l198
  1240  0053                     l1352:	
  1241  0053  0830               	movf	printf@f+1,w
  1242  0054  00B8               	movwf	??_printf+1
  1243  0055  082F               	movf	printf@f,w
  1244  0056  00B7               	movwf	??_printf
  1245  0057  0AAF               	incf	printf@f,f
  1246  0058  1903               	skipnz
  1247  0059  0AB0               	incf	printf@f+1,f
  1248  005A  0837               	movf	??_printf,w
  1249  005B  0084               	movwf	4
  1250  005C  0838               	movf	??_printf+1,w
  1251  005D  0085               	movwf	5
  1252  005E  0800               	movf	0,w	;code access
  1253  005F  00C0               	movwf	printf@c
  1254                           
  1255                           ; Switch size 1, requested type "space"
  1256                           ; Number of cases is 4, Range of values is 0 to 117
  1257                           ; switch strategies available:
  1258                           ; Name         Instructions Cycles
  1259                           ; simple_byte           13     7 (average)
  1260                           ; direct_byte          242     6 (fixed)
  1261                           ; jumptable            260     6 (fixed)
  1262                           ;	Chosen strategy is simple_byte
  1263  0060  3A00               	xorlw	0	; case 0
  1264  0061  1903               	skipnz
  1265  0062  28F8               	goto	l212
  1266  0063  3A64               	xorlw	100	; case 100
  1267  0064  1903               	skipnz
  1268  0065  286D               	goto	l198
  1269  0066  3A0D               	xorlw	13	; case 105
  1270  0067  1903               	skipnz
  1271  0068  286D               	goto	l198
  1272  0069  3A1C               	xorlw	28	; case 117
  1273  006A  1903               	skipnz
  1274  006B  2851               	goto	l200
  1275  006C  2832               	goto	l1392
  1276  006D                     l198:	
  1277                           
  1278                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  1279  006D  1B3D               	btfsc	printf@flag,6
  1280  006E  2886               	goto	l1364
  1281                           
  1282                           ;doprnt.c: 1253: {
  1283                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1284  006F  083C               	movf	printf@ap,w
  1285  0070  0086               	movwf	6
  1286  0071  0187               	clrf	7
  1287  0072  3F40               	moviw [0]fsr1
  1288  0073  00BE               	movwf	printf@val
  1289  0074  3F41               	moviw [1]fsr1
  1290  0075  00BF               	movwf	printf@val+1
  1291  0076  3002               	movlw	2
  1292  0077  00B7               	movwf	??_printf
  1293  0078  0837               	movf	??_printf,w
  1294  0079  07BC               	addwf	printf@ap,f
  1295                           
  1296                           ;doprnt.c: 1261: if((int)val < 0) {
  1297  007A  1FBF               	btfss	printf@val+1,7
  1298  007B  2891               	goto	l1368
  1299                           
  1300                           ;doprnt.c: 1262: flag |= 0x03;
  1301  007C  3003               	movlw	3
  1302  007D  00B7               	movwf	??_printf
  1303  007E  0837               	movf	??_printf,w
  1304  007F  04BD               	iorwf	printf@flag,f
  1305                           
  1306                           ;doprnt.c: 1263: val = -val;
  1307  0080  09BE               	comf	printf@val,f
  1308  0081  09BF               	comf	printf@val+1,f
  1309  0082  0ABE               	incf	printf@val,f
  1310  0083  1903               	skipnz
  1311  0084  0ABF               	incf	printf@val+1,f
  1312                           
  1313                           ;doprnt.c: 1264: }
  1314                           ;doprnt.c: 1266: }
  1315  0085  2891               	goto	l1368
  1316  0086                     l1364:	
  1317                           
  1318                           ;doprnt.c: 1268: else
  1319                           ;doprnt.c: 1273: {
  1320                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1321  0086  083C               	movf	printf@ap,w
  1322  0087  0086               	movwf	6
  1323  0088  0187               	clrf	7
  1324  0089  3F40               	moviw [0]fsr1
  1325  008A  00BE               	movwf	printf@val
  1326  008B  3F41               	moviw [1]fsr1
  1327  008C  00BF               	movwf	printf@val+1
  1328  008D  3002               	movlw	2
  1329  008E  00B7               	movwf	??_printf
  1330  008F  0837               	movf	??_printf,w
  1331  0090  07BC               	addwf	printf@ap,f
  1332  0091                     l1368:	
  1333                           
  1334                           ;doprnt.c: 1287: }
  1335                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1336  0091  01C0               	clrf	printf@c
  1337  0092  0AC0               	incf	printf@c,f
  1338  0093  3005               	movlw	5
  1339  0094  0640               	xorwf	printf@c,w
  1340  0095  1903               	btfsc	3,2
  1341  0096  28B6               	goto	l1380
  1342  0097                     l1374:	
  1343                           
  1344                           ;doprnt.c: 1306: if(val < dpowers[c])
  1345  0097  0840               	movf	printf@c,w
  1346  0098  00B7               	movwf	??_printf
  1347  0099  01B8               	clrf	??_printf+1
  1348  009A  35B7               	lslf	??_printf,f
  1349  009B  0DB8               	rlf	??_printf+1,f
  1350  009C  3077               	movlw	low (_dpowers| (0+32768))
  1351  009D  0737               	addwf	??_printf,w
  1352  009E  0084               	movwf	4
  1353  009F  3083               	movlw	high (_dpowers| (0+32768))
  1354  00A0  3D38               	addwfc	??_printf+1,w
  1355  00A1  0085               	movwf	5
  1356  00A2  3F00               	moviw [0]fsr0
  1357  00A3  00B9               	movwf	??_printf+2
  1358  00A4  3F01               	moviw [1]fsr0
  1359  00A5  00BA               	movwf	??_printf+3
  1360  00A6  083A               	movf	??_printf+3,w
  1361  00A7  023F               	subwf	printf@val+1,w
  1362  00A8  1D03               	skipz
  1363  00A9  28AC               	goto	u775
  1364  00AA  0839               	movf	??_printf+2,w
  1365  00AB  023E               	subwf	printf@val,w
  1366  00AC                     u775:	
  1367  00AC  1C03               	btfss	3,0
  1368  00AD  28B6               	goto	l1380
  1369                           
  1370                           ;doprnt.c: 1307: break;
  1371  00AE  3001               	movlw	1
  1372  00AF  00B7               	movwf	??_printf
  1373  00B0  0837               	movf	??_printf,w
  1374  00B1  07C0               	addwf	printf@c,f
  1375  00B2  3005               	movlw	5
  1376  00B3  0640               	xorwf	printf@c,w
  1377  00B4  1D03               	btfss	3,2
  1378  00B5  2897               	goto	l1374
  1379  00B6                     l1380:	
  1380                           
  1381                           ;doprnt.c: 1422: {
  1382                           ;doprnt.c: 1438: if(flag & 0x03)
  1383  00B6  083D               	movf	printf@flag,w
  1384  00B7  3903               	andlw	3
  1385  00B8  1903               	btfsc	3,2
  1386  00B9  28BE               	goto	l1384
  1387                           
  1388                           ;doprnt.c: 1439: (putch('-') );
  1389  00BA  302D               	movlw	45
  1390  00BB  3183  23D5  3180   	fcall	_putch
  1391  00BE                     l1384:	
  1392                           
  1393                           ;doprnt.c: 1469: }
  1394                           ;doprnt.c: 1472: prec = c;
  1395  00BE  0020               	movlb	0	; select bank0
  1396  00BF  0840               	movf	printf@c,w
  1397  00C0  00B7               	movwf	??_printf
  1398  00C1  0837               	movf	??_printf,w
  1399  00C2  00BB               	movwf	printf@prec
  1400  00C3                     l1390:	
  1401                           ;doprnt.c: 1474: while(prec--) {
  1402                           
  1403  00C3  30FF               	movlw	255
  1404  00C4  0020               	movlb	0	; select bank0
  1405  00C5  00B7               	movwf	??_printf
  1406  00C6  0837               	movf	??_printf,w
  1407  00C7  07BB               	addwf	printf@prec,f
  1408  00C8  0A3B               	incf	printf@prec,w
  1409  00C9  1903               	btfsc	3,2
  1410  00CA  2832               	goto	l1392
  1411                           
  1412                           ;doprnt.c: 1478: {
  1413                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1414  00CB  300A               	movlw	10
  1415  00CC  00A9               	movwf	___lwmod@divisor
  1416  00CD  3000               	movlw	0
  1417  00CE  00AA               	movwf	___lwmod@divisor+1
  1418  00CF  083B               	movf	printf@prec,w
  1419  00D0  00B7               	movwf	??_printf
  1420  00D1  01B8               	clrf	??_printf+1
  1421  00D2  35B7               	lslf	??_printf,f
  1422  00D3  0DB8               	rlf	??_printf+1,f
  1423  00D4  3077               	movlw	low (_dpowers| (0+32768))
  1424  00D5  0737               	addwf	??_printf,w
  1425  00D6  0084               	movwf	4
  1426  00D7  3083               	movlw	high (_dpowers| (0+32768))
  1427  00D8  3D38               	addwfc	??_printf+1,w
  1428  00D9  0085               	movwf	5
  1429  00DA  3F00               	moviw [0]fsr0
  1430  00DB  00A1               	movwf	___lwdiv@divisor
  1431  00DC  3F01               	moviw [1]fsr0
  1432  00DD  00A2               	movwf	___lwdiv@divisor+1
  1433  00DE  083F               	movf	printf@val+1,w
  1434  00DF  00A4               	movwf	___lwdiv@dividend+1
  1435  00E0  083E               	movf	printf@val,w
  1436  00E1  00A3               	movwf	___lwdiv@dividend
  1437  00E2  3182  228A  3180   	fcall	___lwdiv
  1438  00E5  0020               	movlb	0	; select bank0
  1439  00E6  0822               	movf	?___lwdiv+1,w
  1440  00E7  00AC               	movwf	___lwmod@dividend+1
  1441  00E8  0821               	movf	?___lwdiv,w
  1442  00E9  00AB               	movwf	___lwmod@dividend
  1443  00EA  3182  22EE  3180   	fcall	___lwmod
  1444  00ED  0020               	movlb	0	; select bank0
  1445  00EE  0829               	movf	?___lwmod,w
  1446  00EF  3E30               	addlw	48
  1447  00F0  00B9               	movwf	??_printf+2
  1448  00F1  0839               	movf	??_printf+2,w
  1449  00F2  00C0               	movwf	printf@c
  1450                           
  1451                           ;doprnt.c: 1523: }
  1452                           ;doprnt.c: 1524: (putch(c) );
  1453  00F3  0840               	movf	printf@c,w
  1454  00F4  3183  23D5  3180   	fcall	_putch
  1455  00F7  28C3               	goto	l1390
  1456  00F8                     l212:	
  1457                           ;doprnt.c: 1540: return 0;
  1458                           ;	Return value of _printf is never used
  1459                           
  1460                           ;doprnt.c: 1525: }
  1461                           ;doprnt.c: 1533: }
  1462                           ;doprnt.c: 1535: alldone:
  1463                           
  1464  00F8  0008               	return
  1465  00F9                     __end_of_printf:	
  1466                           
  1467                           	psect	text2
  1468  03D5                     __ptext2:	
  1469 ;; *************** function _putch *****************
  1470 ;; Defined at:
  1471 ;;		line 64 in file "LCD.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  c               1    wreg     unsigned char 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  c               1    4[BANK0 ] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, pclath, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1485 ;;      Params:         0       0       0       0       0       0
  1486 ;;      Locals:         0       1       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0
  1488 ;;      Totals:         0       1       0       0       0       0
  1489 ;;Total ram usage:        1 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    4
  1492 ;; This function calls:
  1493 ;;		_LCD_WriteData
  1494 ;; This function is called by:
  1495 ;;		_printf
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _putch
  1501  03D5                     _putch:	
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  1505                           ;putch@c stored from wreg
  1506  03D5  0020               	movlb	0	; select bank0
  1507  03D6  00A4               	movwf	putch@c
  1508                           
  1509                           ;LCD.c: 66: RA3 = 1;
  1510  03D7  158C               	bsf	12,3	;volatile
  1511                           
  1512                           ;LCD.c: 67: LCD_WriteData(c);
  1513  03D8  0824               	movf	putch@c,w
  1514  03D9  3182  224F         	fcall	_LCD_WriteData
  1515  03DB  0008               	return
  1516  03DC                     __end_of_putch:	
  1517                           
  1518                           	psect	text3
  1519  02EE                     __ptext3:	
  1520 ;; *************** function ___lwmod *****************
  1521 ;; Defined at:
  1522 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  divisor         2    9[BANK0 ] unsigned int 
  1525 ;;  dividend        2   11[BANK0 ] unsigned int 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  counter         1   14[BANK0 ] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  2    9[BANK0 ] unsigned int 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1537 ;;      Params:         0       4       0       0       0       0
  1538 ;;      Locals:         0       1       0       0       0       0
  1539 ;;      Temps:          0       1       0       0       0       0
  1540 ;;      Totals:         0       6       0       0       0       0
  1541 ;;Total ram usage:        6 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    3
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_printf
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function ___lwmod
  1553  02EE                     ___lwmod:	
  1554                           
  1555                           ;incstack = 0
  1556                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1557  02EE  0020               	movlb	0	; select bank0
  1558  02EF  0829               	movf	___lwmod@divisor,w
  1559  02F0  042A               	iorwf	___lwmod@divisor+1,w
  1560  02F1  1903               	btfsc	3,2
  1561  02F2  2B16               	goto	l1178
  1562  02F3  01AE               	clrf	___lwmod@counter
  1563  02F4  0AAE               	incf	___lwmod@counter,f
  1564  02F5                     l1168:	
  1565  02F5  1BAA               	btfsc	___lwmod@divisor+1,7
  1566  02F6  2B01               	goto	l1170
  1567  02F7  3001               	movlw	1
  1568  02F8                     u625:	
  1569  02F8  35A9               	lslf	___lwmod@divisor,f
  1570  02F9  0DAA               	rlf	___lwmod@divisor+1,f
  1571  02FA  0B89               	decfsz	9,f
  1572  02FB  2AF8               	goto	u625
  1573  02FC  3001               	movlw	1
  1574  02FD  00AD               	movwf	??___lwmod
  1575  02FE  082D               	movf	??___lwmod,w
  1576  02FF  07AE               	addwf	___lwmod@counter,f
  1577  0300  2AF5               	goto	l1168
  1578  0301                     l1170:	
  1579  0301  082A               	movf	___lwmod@divisor+1,w
  1580  0302  022C               	subwf	___lwmod@dividend+1,w
  1581  0303  1D03               	skipz
  1582  0304  2B07               	goto	u645
  1583  0305  0829               	movf	___lwmod@divisor,w
  1584  0306  022B               	subwf	___lwmod@dividend,w
  1585  0307                     u645:	
  1586  0307  1C03               	skipc
  1587  0308  2B0D               	goto	l1174
  1588  0309  0829               	movf	___lwmod@divisor,w
  1589  030A  02AB               	subwf	___lwmod@dividend,f
  1590  030B  082A               	movf	___lwmod@divisor+1,w
  1591  030C  3BAC               	subwfb	___lwmod@dividend+1,f
  1592  030D                     l1174:	
  1593  030D  3001               	movlw	1
  1594  030E                     u655:	
  1595  030E  36AA               	lsrf	___lwmod@divisor+1,f
  1596  030F  0CA9               	rrf	___lwmod@divisor,f
  1597  0310  0B89               	decfsz	9,f
  1598  0311  2B0E               	goto	u655
  1599  0312  3001               	movlw	1
  1600  0313  02AE               	subwf	___lwmod@counter,f
  1601  0314  1D03               	btfss	3,2
  1602  0315  2B01               	goto	l1170
  1603  0316                     l1178:	
  1604  0316  082C               	movf	___lwmod@dividend+1,w
  1605  0317  00AA               	movwf	?___lwmod+1
  1606  0318  082B               	movf	___lwmod@dividend,w
  1607  0319  00A9               	movwf	?___lwmod
  1608  031A  0008               	return
  1609  031B                     __end_of___lwmod:	
  1610                           
  1611                           	psect	text4
  1612  028A                     __ptext4:	
  1613 ;; *************** function ___lwdiv *****************
  1614 ;; Defined at:
  1615 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwdiv.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  divisor         2    1[BANK0 ] unsigned int 
  1618 ;;  dividend        2    3[BANK0 ] unsigned int 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  quotient        2    6[BANK0 ] unsigned int 
  1621 ;;  counter         1    8[BANK0 ] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  2    1[BANK0 ] unsigned int 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1631 ;;      Params:         0       4       0       0       0       0
  1632 ;;      Locals:         0       3       0       0       0       0
  1633 ;;      Temps:          0       1       0       0       0       0
  1634 ;;      Totals:         0       8       0       0       0       0
  1635 ;;Total ram usage:        8 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    3
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_printf
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function ___lwdiv
  1647  028A                     ___lwdiv:	
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1651  028A  0020               	movlb	0	; select bank0
  1652  028B  01A6               	clrf	___lwdiv@quotient
  1653  028C  01A7               	clrf	___lwdiv@quotient+1
  1654  028D  0821               	movf	___lwdiv@divisor,w
  1655  028E  0422               	iorwf	___lwdiv@divisor+1,w
  1656  028F  1903               	btfsc	3,2
  1657  0290  2ABA               	goto	l1156
  1658  0291  01A8               	clrf	___lwdiv@counter
  1659  0292  0AA8               	incf	___lwdiv@counter,f
  1660  0293                     l1144:	
  1661  0293  1BA2               	btfsc	___lwdiv@divisor+1,7
  1662  0294  2A9F               	goto	l1146
  1663  0295  3001               	movlw	1
  1664  0296                     u555:	
  1665  0296  35A1               	lslf	___lwdiv@divisor,f
  1666  0297  0DA2               	rlf	___lwdiv@divisor+1,f
  1667  0298  0B89               	decfsz	9,f
  1668  0299  2A96               	goto	u555
  1669  029A  3001               	movlw	1
  1670  029B  00A5               	movwf	??___lwdiv
  1671  029C  0825               	movf	??___lwdiv,w
  1672  029D  07A8               	addwf	___lwdiv@counter,f
  1673  029E  2A93               	goto	l1144
  1674  029F                     l1146:	
  1675  029F  3001               	movlw	1
  1676  02A0                     u575:	
  1677  02A0  35A6               	lslf	___lwdiv@quotient,f
  1678  02A1  0DA7               	rlf	___lwdiv@quotient+1,f
  1679  02A2  0B89               	decfsz	9,f
  1680  02A3  2AA0               	goto	u575
  1681  02A4  0822               	movf	___lwdiv@divisor+1,w
  1682  02A5  0224               	subwf	___lwdiv@dividend+1,w
  1683  02A6  1D03               	skipz
  1684  02A7  2AAA               	goto	u585
  1685  02A8  0821               	movf	___lwdiv@divisor,w
  1686  02A9  0223               	subwf	___lwdiv@dividend,w
  1687  02AA                     u585:	
  1688  02AA  1C03               	skipc
  1689  02AB  2AB1               	goto	l1152
  1690  02AC  0821               	movf	___lwdiv@divisor,w
  1691  02AD  02A3               	subwf	___lwdiv@dividend,f
  1692  02AE  0822               	movf	___lwdiv@divisor+1,w
  1693  02AF  3BA4               	subwfb	___lwdiv@dividend+1,f
  1694  02B0  1426               	bsf	___lwdiv@quotient,0
  1695  02B1                     l1152:	
  1696  02B1  3001               	movlw	1
  1697  02B2                     u595:	
  1698  02B2  36A2               	lsrf	___lwdiv@divisor+1,f
  1699  02B3  0CA1               	rrf	___lwdiv@divisor,f
  1700  02B4  0B89               	decfsz	9,f
  1701  02B5  2AB2               	goto	u595
  1702  02B6  3001               	movlw	1
  1703  02B7  02A8               	subwf	___lwdiv@counter,f
  1704  02B8  1D03               	btfss	3,2
  1705  02B9  2A9F               	goto	l1146
  1706  02BA                     l1156:	
  1707  02BA  0827               	movf	___lwdiv@quotient+1,w
  1708  02BB  00A2               	movwf	?___lwdiv+1
  1709  02BC  0826               	movf	___lwdiv@quotient,w
  1710  02BD  00A1               	movwf	?___lwdiv
  1711  02BE  0008               	return
  1712  02BF                     __end_of___lwdiv:	
  1713                           
  1714                           	psect	text5
  1715  03A8                     __ptext5:	
  1716 ;; *************** function _Timer4_Init *****************
  1717 ;; Defined at:
  1718 ;;		line 3 in file "Timer4.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1732 ;;      Params:         0       0       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0
  1735 ;;      Totals:         0       0       0       0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    3
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function _Timer4_Init
  1748  03A8                     _Timer4_Init:	
  1749                           
  1750                           ;Timer4.c: 5: PR4 = 0x64;
  1751                           
  1752                           ;incstack = 0
  1753                           ; Regs used in _Timer4_Init: [wreg+status,2]
  1754  03A8  3064               	movlw	100
  1755  03A9  0028               	movlb	8	; select bank8
  1756  03AA  0096               	movwf	22	;volatile
  1757                           
  1758                           ;Timer4.c: 6: TMR4 = 0x00;
  1759  03AB  0195               	clrf	21	;volatile
  1760                           
  1761                           ;Timer4.c: 7: T4CON |= (0x02<<0);
  1762  03AC  1497               	bsf	23,1	;volatile
  1763                           
  1764                           ;Timer4.c: 8: T4CON |= (0x00<<3);
  1765  03AD  0817               	movf	23,w	;volatile
  1766                           
  1767                           ;Timer4.c: 9: T4CON |= (0x01<<2);
  1768  03AE  1517               	bsf	23,2	;volatile
  1769                           
  1770                           ;Timer4.c: 11: TMR4IF = 0;
  1771  03AF  0020               	movlb	0	; select bank0
  1772  03B0  1093               	bcf	19,1	;volatile
  1773                           
  1774                           ;Timer4.c: 12: TMR4IE = 1;
  1775  03B1  0021               	movlb	1	; select bank1
  1776  03B2  1493               	bsf	19,1	;volatile
  1777                           
  1778                           ;Timer4.c: 13: PEIE = 1;
  1779  03B3  170B               	bsf	11,6	;volatile
  1780                           
  1781                           ;Timer4.c: 14: GIE = 1;
  1782  03B4  178B               	bsf	11,7	;volatile
  1783  03B5  0008               	return
  1784  03B6                     __end_of_Timer4_Init:	
  1785                           
  1786                           	psect	text6
  1787  03E8                     __ptext6:	
  1788 ;; *************** function _Timer1_StartCount *****************
  1789 ;; Defined at:
  1790 ;;		line 31 in file "Timer1.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0, pclath, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1804 ;;      Params:         0       0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0
  1807 ;;      Totals:         0       0       0       0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    4
  1811 ;; This function calls:
  1812 ;;		_Timer1_ClearRecord
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           
  1819                           ;psect for function _Timer1_StartCount
  1820  03E8                     _Timer1_StartCount:	
  1821                           
  1822                           ;Timer1.c: 33: Timer1_ClearRecord();
  1823                           
  1824                           ;incstack = 0
  1825                           ; Regs used in _Timer1_StartCount: [wreg+status,2+status,0+pclath+cstack]
  1826  03E8  3183  231B         	fcall	_Timer1_ClearRecord
  1827                           
  1828                           ;Timer1.c: 34: TMR1ON = 1;
  1829  03EA  0020               	movlb	0	; select bank0
  1830  03EB  1418               	bsf	24,0	;volatile
  1831  03EC  0008               	return
  1832  03ED                     __end_of_Timer1_StartCount:	
  1833                           
  1834                           	psect	text7
  1835  031B                     __ptext7:	
  1836 ;; *************** function _Timer1_ClearRecord *****************
  1837 ;; Defined at:
  1838 ;;		line 42 in file "Timer1.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1852 ;;      Params:         0       0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0
  1855 ;;      Totals:         0       0       0       0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    3
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_Timer1_StartCount
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           
  1867                           ;psect for function _Timer1_ClearRecord
  1868  031B                     _Timer1_ClearRecord:	
  1869                           
  1870                           ;Timer1.c: 44: {TMR1ON = 0; TMR1 = (uint16_t)0x0000; TMR1ON = 1; };
  1871                           
  1872                           ;incstack = 0
  1873                           ; Regs used in _Timer1_ClearRecord: [wreg+status,2]
  1874  031B  0020               	movlb	0	; select bank0
  1875  031C  1018               	bcf	24,0	;volatile
  1876  031D  0196               	clrf	22	;volatile
  1877  031E  0197               	clrf	23	;volatile
  1878  031F  1418               	bsf	24,0	;volatile
  1879                           
  1880                           ;Timer1.c: 45: cnts.SigmaDeltaCount= 0;
  1881  0320  3000               	movlw	0
  1882  0321  00C4               	movwf	_cnts+3
  1883  0322  3000               	movlw	0
  1884  0323  00C3               	movwf	_cnts+2
  1885  0324  3000               	movlw	0
  1886  0325  00C2               	movwf	_cnts+1
  1887  0326  3000               	movlw	0
  1888  0327  00C1               	movwf	_cnts
  1889                           
  1890                           ;Timer1.c: 46: cnts.SigmaCPM = 0;
  1891  0328  3000               	movlw	0
  1892  0329  00C8               	movwf	_cnts+7
  1893  032A  3000               	movlw	0
  1894  032B  00C7               	movwf	_cnts+6
  1895  032C  3000               	movlw	0
  1896  032D  00C6               	movwf	_cnts+5
  1897  032E  3000               	movlw	0
  1898  032F  00C5               	movwf	_cnts+4
  1899                           
  1900                           ;Timer1.c: 47: cnts.Num_of_Detect = 0;
  1901  0330  3000               	movlw	0
  1902  0331  00CE               	movwf	_cnts+13
  1903  0332  3000               	movlw	0
  1904  0333  00CD               	movwf	_cnts+12
  1905  0334  3000               	movlw	0
  1906  0335  00CC               	movwf	_cnts+11
  1907  0336  3000               	movlw	0
  1908  0337  00CB               	movwf	_cnts+10
  1909                           
  1910                           ;Timer1.c: 48: tcnt.Delta_t = 0;
  1911  0338  3000               	movlw	0
  1912  0339  00D2               	movwf	_tcnt+3
  1913  033A  3000               	movlw	0
  1914  033B  00D1               	movwf	_tcnt+2
  1915  033C  3000               	movlw	0
  1916  033D  00D0               	movwf	_tcnt+1
  1917  033E  3000               	movlw	0
  1918  033F  00CF               	movwf	_tcnt
  1919  0340  0008               	return
  1920  0341                     __end_of_Timer1_ClearRecord:	
  1921                           
  1922                           	psect	text8
  1923  0341                     __ptext8:	
  1924 ;; *************** function _Timer1_Init *****************
  1925 ;; Defined at:
  1926 ;;		line 6 in file "Timer1.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1940 ;;      Params:         0       0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0       0
  1942 ;;      Temps:          0       1       0       0       0       0
  1943 ;;      Totals:         0       1       0       0       0       0
  1944 ;;Total ram usage:        1 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    3
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function _Timer1_Init
  1956  0341                     _Timer1_Init:	
  1957                           
  1958                           ;Timer1.c: 8: TRISB |= (1<<6);
  1959                           
  1960                           ;incstack = 0
  1961                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  1962  0341  0021               	movlb	1	; select bank1
  1963  0342  170D               	bsf	13,6	;volatile
  1964                           
  1965                           ;Timer1.c: 9: ANSELB &= ~(1<<6);
  1966  0343  30BF               	movlw	191
  1967  0344  0020               	movlb	0	; select bank0
  1968  0345  00A1               	movwf	??_Timer1_Init
  1969  0346  0821               	movf	??_Timer1_Init,w
  1970  0347  0023               	movlb	3	; select bank3
  1971  0348  058D               	andwf	13,f	;volatile
  1972                           
  1973                           ;Timer1.c: 10: WPUB |= (1<<6);
  1974  0349  0024               	movlb	4	; select bank4
  1975  034A  170D               	bsf	13,6	;volatile
  1976                           
  1977                           ;Timer1.c: 12: T1CON |= (0x01<<2);
  1978  034B  0020               	movlb	0	; select bank0
  1979  034C  1518               	bsf	24,2	;volatile
  1980                           
  1981                           ;Timer1.c: 13: T1CON &= ~(0x01<<3);
  1982  034D  30F7               	movlw	247
  1983  034E  00A1               	movwf	??_Timer1_Init
  1984  034F  0821               	movf	??_Timer1_Init,w
  1985  0350  0598               	andwf	24,f	;volatile
  1986                           
  1987                           ;Timer1.c: 14: T1CON |= (0x00<<4);
  1988  0351  0818               	movf	24,w	;volatile
  1989                           
  1990                           ;Timer1.c: 15: T1CON |= (0x02<<6);
  1991  0352  1798               	bsf	24,7	;volatile
  1992                           
  1993                           ;Timer1.c: 17: T1GCON = 0x00;
  1994  0353  0199               	clrf	25	;volatile
  1995                           
  1996                           ;Timer1.c: 19: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF - 10UL; TMR1ON = 1; };
  1997  0354  1018               	bcf	24,0	;volatile
  1998  0355  30FF               	movlw	255
  1999  0356  0097               	movwf	23	;volatile
  2000  0357  30F5               	movlw	245
  2001  0358  0096               	movwf	22	;volatile
  2002  0359  1418               	bsf	24,0	;volatile
  2003                           
  2004                           ;Timer1.c: 21: TMR1IF = 0;
  2005  035A  1011               	bcf	17,0	;volatile
  2006                           
  2007                           ;Timer1.c: 22: TMR1IE = 1;
  2008  035B  0021               	movlb	1	; select bank1
  2009  035C  1411               	bsf	17,0	;volatile
  2010                           
  2011                           ;Timer1.c: 23: PEIE = 1;
  2012  035D  170B               	bsf	11,6	;volatile
  2013                           
  2014                           ;Timer1.c: 24: GIE = 1;
  2015  035E  178B               	bsf	11,7	;volatile
  2016                           
  2017                           ;Timer1.c: 26: TMR1ON = 0;
  2018  035F  0020               	movlb	0	; select bank0
  2019  0360  1018               	bcf	24,0	;volatile
  2020  0361  0008               	return
  2021  0362                     __end_of_Timer1_Init:	
  2022                           
  2023                           	psect	text9
  2024  03C1                     __ptext9:	
  2025 ;; *************** function _Timer1_GetCountSum *****************
  2026 ;; Defined at:
  2027 ;;		line 51 in file "Timer1.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;		None
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  4    1[BANK0 ] unsigned long 
  2034 ;; Registers used:
  2035 ;;		wreg
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2041 ;;      Params:         0       4       0       0       0       0
  2042 ;;      Locals:         0       0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0
  2044 ;;      Totals:         0       4       0       0       0       0
  2045 ;;Total ram usage:        4 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; Hardware stack levels required when called:    3
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function _Timer1_GetCountSum
  2057  03C1                     _Timer1_GetCountSum:	
  2058                           
  2059                           ;Timer1.c: 53: return cnts.SigmaDeltaCount;
  2060                           
  2061                           ;incstack = 0
  2062                           ; Regs used in _Timer1_GetCountSum: [wreg]
  2063  03C1  0020               	movlb	0	; select bank0
  2064  03C2  0844               	movf	_cnts+3,w
  2065  03C3  00A4               	movwf	?_Timer1_GetCountSum+3
  2066  03C4  0843               	movf	_cnts+2,w
  2067  03C5  00A3               	movwf	?_Timer1_GetCountSum+2
  2068  03C6  0842               	movf	_cnts+1,w
  2069  03C7  00A2               	movwf	?_Timer1_GetCountSum+1
  2070  03C8  0841               	movf	_cnts,w
  2071  03C9  00A1               	movwf	?_Timer1_GetCountSum
  2072  03CA  0008               	return
  2073  03CB                     __end_of_Timer1_GetCountSum:	
  2074                           
  2075                           	psect	text10
  2076  03E2                     __ptext10:	
  2077 ;; *************** function _Timer1_GetCPM *****************
  2078 ;; Defined at:
  2079 ;;		line 56 in file "Timer1.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  2    1[BANK0 ] unsigned int 
  2086 ;; Registers used:
  2087 ;;		wreg
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2093 ;;      Params:         0       2       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0
  2096 ;;      Totals:         0       2       0       0       0       0
  2097 ;;Total ram usage:        2 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    3
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function _Timer1_GetCPM
  2109  03E2                     _Timer1_GetCPM:	
  2110                           
  2111                           ;Timer1.c: 58: return cnts.AverageCPM;
  2112                           
  2113                           ;incstack = 0
  2114                           ; Regs used in _Timer1_GetCPM: [wreg]
  2115  03E2  0020               	movlb	0	; select bank0
  2116  03E3  084A               	movf	_cnts+9,w
  2117  03E4  00A2               	movwf	?_Timer1_GetCPM+1
  2118  03E5  0849               	movf	_cnts+8,w
  2119  03E6  00A1               	movwf	?_Timer1_GetCPM
  2120  03E7  0008               	return
  2121  03E8                     __end_of_Timer1_GetCPM:	
  2122                           
  2123                           	psect	text11
  2124  0190                     __ptext11:	
  2125 ;; *************** function _LCD_Init *****************
  2126 ;; Defined at:
  2127 ;;		line 28 in file "LCD.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0, pclath, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2141 ;;      Params:         0       0       0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0       0
  2143 ;;      Temps:          0       2       0       0       0       0
  2144 ;;      Totals:         0       2       0       0       0       0
  2145 ;;Total ram usage:        2 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    5
  2148 ;; This function calls:
  2149 ;;		_LCD_DisplayClear
  2150 ;;		_LCD_WriteData
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _LCD_Init
  2158  0190                     _LCD_Init:	
  2159                           
  2160                           ;LCD.c: 30: RA3 = 0;
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2164  0190  0020               	movlb	0	; select bank0
  2165  0191  118C               	bcf	12,3	;volatile
  2166                           
  2167                           ;LCD.c: 31: RA4 = 0;
  2168  0192  120C               	bcf	12,4	;volatile
  2169                           
  2170                           ;LCD.c: 33: _delay((unsigned long)((30)*(32000000/4000.0)));
  2171  0193  3002               	movlw	2
  2172  0194  0020               	movlb	0	; select bank0
  2173  0195  00A6               	movwf	??_LCD_Init+1
  2174  0196  3038               	movlw	56
  2175  0197  00A5               	movwf	??_LCD_Init
  2176  0198  30AD               	movlw	173
  2177  0199                     u897:	
  2178  0199  0B89               	decfsz	9,f
  2179  019A  2999               	goto	u897
  2180  019B  0BA5               	decfsz	??_LCD_Init,f
  2181  019C  2999               	goto	u897
  2182  019D  0BA6               	decfsz	??_LCD_Init+1,f
  2183  019E  2999               	goto	u897
  2184                           
  2185                           ;LCD.c: 34: PORTB = ( ((0x03&0x0C)<<1)|(0x03&0x03) );
  2186  019F  3003               	movlw	3
  2187  01A0  0020               	movlb	0	; select bank0
  2188  01A1  008D               	movwf	13	;volatile
  2189                           
  2190                           ;LCD.c: 35: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2191  01A2  160C               	bsf	12,4	;volatile
  2192  01A3  3200               	nop2	;2 cycle nop
  2193  01A4  3200               	nop2	;2 cycle nop
  2194  01A5  3200               	nop2	;2 cycle nop
  2195  01A6  3200               	nop2	;2 cycle nop
  2196  01A7  0020               	movlb	0	; select bank0
  2197  01A8  120C               	bcf	12,4	;volatile
  2198  01A9  3200               	nop2	;2 cycle nop
  2199  01AA  3200               	nop2	;2 cycle nop
  2200  01AB  3200               	nop2	;2 cycle nop
  2201  01AC  3200               	nop2	;2 cycle nop
  2202                           
  2203                           ;LCD.c: 36: _delay((unsigned long)((5)*(32000000/4000.0)));
  2204  01AD  3034               	movlw	52
  2205  01AE  0020               	movlb	0	; select bank0
  2206  01AF  00A5               	movwf	??_LCD_Init
  2207  01B0  30F1               	movlw	241
  2208  01B1                     u907:	
  2209  01B1  0B89               	decfsz	9,f
  2210  01B2  29B1               	goto	u907
  2211  01B3  0BA5               	decfsz	??_LCD_Init,f
  2212  01B4  29B1               	goto	u907
  2213  01B5  3200               	nop2
  2214                           
  2215                           ;LCD.c: 37: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2216  01B6  0020               	movlb	0	; select bank0
  2217  01B7  160C               	bsf	12,4	;volatile
  2218  01B8  3200               	nop2	;2 cycle nop
  2219  01B9  3200               	nop2	;2 cycle nop
  2220  01BA  3200               	nop2	;2 cycle nop
  2221  01BB  3200               	nop2	;2 cycle nop
  2222  01BC  0020               	movlb	0	; select bank0
  2223  01BD  120C               	bcf	12,4	;volatile
  2224  01BE  3200               	nop2	;2 cycle nop
  2225  01BF  3200               	nop2	;2 cycle nop
  2226  01C0  3200               	nop2	;2 cycle nop
  2227  01C1  3200               	nop2	;2 cycle nop
  2228                           
  2229                           ;LCD.c: 38: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2230  01C2  3005               	movlw	5
  2231  01C3  0020               	movlb	0	; select bank0
  2232  01C4  00A5               	movwf	??_LCD_Init
  2233  01C5  3026               	movlw	38
  2234  01C6                     u917:	
  2235  01C6  0B89               	decfsz	9,f
  2236  01C7  29C6               	goto	u917
  2237  01C8  0BA5               	decfsz	??_LCD_Init,f
  2238  01C9  29C6               	goto	u917
  2239  01CA  0000               	nop
  2240                           
  2241                           ;LCD.c: 39: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2242  01CB  0020               	movlb	0	; select bank0
  2243  01CC  160C               	bsf	12,4	;volatile
  2244  01CD  3200               	nop2	;2 cycle nop
  2245  01CE  3200               	nop2	;2 cycle nop
  2246  01CF  3200               	nop2	;2 cycle nop
  2247  01D0  3200               	nop2	;2 cycle nop
  2248  01D1  0020               	movlb	0	; select bank0
  2249  01D2  120C               	bcf	12,4	;volatile
  2250  01D3  3200               	nop2	;2 cycle nop
  2251  01D4  3200               	nop2	;2 cycle nop
  2252  01D5  3200               	nop2	;2 cycle nop
  2253  01D6  3200               	nop2	;2 cycle nop
  2254                           
  2255                           ;LCD.c: 40: _delay((unsigned long)((400)*(32000000/4000000.0)));
  2256  01D7  3005               	movlw	5
  2257  01D8  0020               	movlb	0	; select bank0
  2258  01D9  00A5               	movwf	??_LCD_Init
  2259  01DA  3026               	movlw	38
  2260  01DB                     u927:	
  2261  01DB  0B89               	decfsz	9,f
  2262  01DC  29DB               	goto	u927
  2263  01DD  0BA5               	decfsz	??_LCD_Init,f
  2264  01DE  29DB               	goto	u927
  2265  01DF  0000               	nop
  2266                           
  2267                           ;LCD.c: 41: PORTB = ( ((0x02&0x0C)<<1)|(0x02&0x03) );
  2268  01E0  3002               	movlw	2
  2269  01E1  0020               	movlb	0	; select bank0
  2270  01E2  008D               	movwf	13	;volatile
  2271                           
  2272                           ;LCD.c: 42: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2273  01E3  160C               	bsf	12,4	;volatile
  2274  01E4  3200               	nop2	;2 cycle nop
  2275  01E5  3200               	nop2	;2 cycle nop
  2276  01E6  3200               	nop2	;2 cycle nop
  2277  01E7  3200               	nop2	;2 cycle nop
  2278  01E8  0020               	movlb	0	; select bank0
  2279  01E9  120C               	bcf	12,4	;volatile
  2280  01EA  3200               	nop2	;2 cycle nop
  2281  01EB  3200               	nop2	;2 cycle nop
  2282  01EC  3200               	nop2	;2 cycle nop
  2283  01ED  3200               	nop2	;2 cycle nop
  2284                           
  2285                           ;LCD.c: 44: LCD_WriteData(0x28);
  2286  01EE  3028               	movlw	40
  2287  01EF  3182  224F  3181   	fcall	_LCD_WriteData
  2288                           
  2289                           ;LCD.c: 45: LCD_WriteData(0x0c);
  2290  01F2  300C               	movlw	12
  2291  01F3  3182  224F  3181   	fcall	_LCD_WriteData
  2292                           
  2293                           ;LCD.c: 46: LCD_DisplayClear();
  2294  01F6  3183  2388  3181   	fcall	_LCD_DisplayClear
  2295                           
  2296                           ;LCD.c: 47: LCD_WriteData(0x06);
  2297  01F9  3006               	movlw	6
  2298  01FA  3182  224F         	fcall	_LCD_WriteData
  2299  01FC  0008               	return
  2300  01FD                     __end_of_LCD_Init:	
  2301                           
  2302                           	psect	text12
  2303  0388                     __ptext12:	
  2304 ;; *************** function _LCD_DisplayClear *****************
  2305 ;; Defined at:
  2306 ;;		line 73 in file "LCD.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0, pclath, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2320 ;;      Params:         0       0       0       0       0       0
  2321 ;;      Locals:         0       0       0       0       0       0
  2322 ;;      Temps:          0       1       0       0       0       0
  2323 ;;      Totals:         0       1       0       0       0       0
  2324 ;;Total ram usage:        1 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    4
  2327 ;; This function calls:
  2328 ;;		_LCD_WriteData
  2329 ;; This function is called by:
  2330 ;;		_LCD_Init
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _LCD_DisplayClear
  2336  0388                     _LCD_DisplayClear:	
  2337                           
  2338                           ;LCD.c: 75: RA3 = 0;
  2339                           
  2340                           ;incstack = 0
  2341                           ; Regs used in _LCD_DisplayClear: [wreg+status,2+status,0+pclath+cstack]
  2342  0388  0020               	movlb	0	; select bank0
  2343  0389  118C               	bcf	12,3	;volatile
  2344                           
  2345                           ;LCD.c: 76: LCD_WriteData(0x01);
  2346  038A  3001               	movlw	1
  2347  038B  3182  224F  3183   	fcall	_LCD_WriteData
  2348                           
  2349                           ;LCD.c: 77: _delay((unsigned long)((2)*(32000000/4000.0)));
  2350  038E  3015               	movlw	21
  2351  038F  0020               	movlb	0	; select bank0
  2352  0390  00A4               	movwf	??_LCD_DisplayClear
  2353  0391  30C6               	movlw	198
  2354  0392                     u937:	
  2355  0392  0B89               	decfsz	9,f
  2356  0393  2B92               	goto	u937
  2357  0394  0BA4               	decfsz	??_LCD_DisplayClear,f
  2358  0395  2B92               	goto	u937
  2359  0396  0000               	nop
  2360  0397  0008               	return
  2361  0398                     __end_of_LCD_DisplayClear:	
  2362                           
  2363                           	psect	text13
  2364  0398                     __ptext13:	
  2365 ;; *************** function _LCD_CursorHome *****************
  2366 ;; Defined at:
  2367 ;;		line 84 in file "LCD.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, pclath, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2381 ;;      Params:         0       0       0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0       0
  2383 ;;      Temps:          0       1       0       0       0       0
  2384 ;;      Totals:         0       1       0       0       0       0
  2385 ;;Total ram usage:        1 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    4
  2388 ;; This function calls:
  2389 ;;		_LCD_WriteData
  2390 ;; This function is called by:
  2391 ;;		_main
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           
  2396                           ;psect for function _LCD_CursorHome
  2397  0398                     _LCD_CursorHome:	
  2398                           
  2399                           ;LCD.c: 86: RA3 = 0;
  2400                           
  2401                           ;incstack = 0
  2402                           ; Regs used in _LCD_CursorHome: [wreg+status,2+status,0+pclath+cstack]
  2403  0398  0020               	movlb	0	; select bank0
  2404  0399  118C               	bcf	12,3	;volatile
  2405                           
  2406                           ;LCD.c: 87: LCD_WriteData(0x02);
  2407  039A  3002               	movlw	2
  2408  039B  3182  224F  3183   	fcall	_LCD_WriteData
  2409                           
  2410                           ;LCD.c: 88: _delay((unsigned long)((2)*(32000000/4000.0)));
  2411  039E  3015               	movlw	21
  2412  039F  0020               	movlb	0	; select bank0
  2413  03A0  00A4               	movwf	??_LCD_CursorHome
  2414  03A1  30C6               	movlw	198
  2415  03A2                     u947:	
  2416  03A2  0B89               	decfsz	9,f
  2417  03A3  2BA2               	goto	u947
  2418  03A4  0BA4               	decfsz	??_LCD_CursorHome,f
  2419  03A5  2BA2               	goto	u947
  2420  03A6  0000               	nop
  2421  03A7  0008               	return
  2422  03A8                     __end_of_LCD_CursorHome:	
  2423                           
  2424                           	psect	text14
  2425  024F                     __ptext14:	
  2426 ;; *************** function _LCD_WriteData *****************
  2427 ;; Defined at:
  2428 ;;		line 15 in file "LCD.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  point           1    wreg     char 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  point           1    3[BANK0 ] char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2442 ;;      Params:         0       0       0       0       0       0
  2443 ;;      Locals:         0       1       0       0       0       0
  2444 ;;      Temps:          0       2       0       0       0       0
  2445 ;;      Totals:         0       3       0       0       0       0
  2446 ;;Total ram usage:        3 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    3
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_LCD_Init
  2453 ;;		_putch
  2454 ;;		_LCD_DisplayClear
  2455 ;;		_LCD_CursorHome
  2456 ;;		_LCD_Put
  2457 ;;		_LCD_CursorPosition
  2458 ;;		_LCD_CursorShift
  2459 ;;		_LCD_DispShift
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           
  2464                           ;psect for function _LCD_WriteData
  2465  024F                     _LCD_WriteData:	
  2466                           
  2467                           ;incstack = 0
  2468                           ; Regs used in _LCD_WriteData: [wreg+status,2+status,0]
  2469                           ;LCD_WriteData@point stored from wreg
  2470  024F  0020               	movlb	0	; select bank0
  2471  0250  00A3               	movwf	LCD_WriteData@point
  2472                           
  2473                           ;LCD.c: 17: _delay((unsigned long)((80)*(32000000/4000000.0)));
  2474  0251  30D5               	movlw	213
  2475  0252                     u957:	
  2476  0252  0B89               	decfsz	9,f
  2477  0253  2A52               	goto	u957
  2478  0254  0000               	nop
  2479                           
  2480                           ;LCD.c: 18: PORTB = ( (((point>>4)&0x0F&0x0C)<<1)|((point>>4)&0x0F&0x03) );
  2481  0255  0020               	movlb	0	; select bank0
  2482  0256  0823               	movf	LCD_WriteData@point,w
  2483  0257  00A1               	movwf	??_LCD_WriteData
  2484  0258  3004               	movlw	4
  2485  0259                     u465:	
  2486  0259  1003               	clrc
  2487  025A  1BA1               	btfsc	??_LCD_WriteData,7
  2488  025B  1403               	setc
  2489  025C  0CA1               	rrf	??_LCD_WriteData,f
  2490  025D  0B89               	decfsz	9,f
  2491  025E  2A59               	goto	u465
  2492  025F  3003               	movlw	3
  2493  0260  0521               	andwf	??_LCD_WriteData,w
  2494  0261  00A2               	movwf	??_LCD_WriteData+1
  2495  0262  0E23               	swapf	LCD_WriteData@point,w
  2496  0263  390F               	andlw	15
  2497  0264  1989               	btfsc	9,3
  2498  0265  38F0               	iorlw	240
  2499  0266  390C               	andlw	12
  2500  0267  0709               	addwf	9,w
  2501  0268  0422               	iorwf	??_LCD_WriteData+1,w
  2502  0269  008D               	movwf	13	;volatile
  2503                           
  2504                           ;LCD.c: 19: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2505  026A  160C               	bsf	12,4	;volatile
  2506  026B  3200               	nop2	;2 cycle nop
  2507  026C  3200               	nop2	;2 cycle nop
  2508  026D  3200               	nop2	;2 cycle nop
  2509  026E  3200               	nop2	;2 cycle nop
  2510  026F  0020               	movlb	0	; select bank0
  2511  0270  120C               	bcf	12,4	;volatile
  2512  0271  3200               	nop2	;2 cycle nop
  2513  0272  3200               	nop2	;2 cycle nop
  2514  0273  3200               	nop2	;2 cycle nop
  2515  0274  3200               	nop2	;2 cycle nop
  2516                           
  2517                           ;LCD.c: 20: PORTB = ( ((point&0x0F&0x0C)<<1)|(point&0x0F&0x03) );
  2518  0275  3003               	movlw	3
  2519  0276  0020               	movlb	0	; select bank0
  2520  0277  0523               	andwf	LCD_WriteData@point,w
  2521  0278  00A1               	movwf	??_LCD_WriteData
  2522  0279  0823               	movf	LCD_WriteData@point,w
  2523  027A  390C               	andlw	12
  2524  027B  0709               	addwf	9,w
  2525  027C  0421               	iorwf	??_LCD_WriteData,w
  2526  027D  008D               	movwf	13	;volatile
  2527                           
  2528                           ;LCD.c: 21: {RA4 = 1; _delay((unsigned long)((1)*(32000000/4000000.0))); RA4 = 0; _delay
      +                          ((unsigned long)((1)*(32000000/4000000.0)));};
  2529  027E  160C               	bsf	12,4	;volatile
  2530  027F  3200               	nop2	;2 cycle nop
  2531  0280  3200               	nop2	;2 cycle nop
  2532  0281  3200               	nop2	;2 cycle nop
  2533  0282  3200               	nop2	;2 cycle nop
  2534  0283  0020               	movlb	0	; select bank0
  2535  0284  120C               	bcf	12,4	;volatile
  2536  0285  3200               	nop2	;2 cycle nop
  2537  0286  3200               	nop2	;2 cycle nop
  2538  0287  3200               	nop2	;2 cycle nop
  2539  0288  3200               	nop2	;2 cycle nop
  2540  0289  0008               	return
  2541  028A                     __end_of_LCD_WriteData:	
  2542                           
  2543                           	psect	text15
  2544  0362                     __ptext15:	
  2545 ;; *************** function _Basic_Init *****************
  2546 ;; Defined at:
  2547 ;;		line 32 in file "main.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      char 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2561 ;;      Params:         0       0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0       0
  2563 ;;      Temps:          0       0       0       0       0       0
  2564 ;;      Totals:         0       0       0       0       0       0
  2565 ;;Total ram usage:        0 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    3
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           
  2576                           ;psect for function _Basic_Init
  2577  0362                     _Basic_Init:	
  2578                           
  2579                           ;main.c: 34: OSCCON = 0xF0;
  2580                           
  2581                           ;incstack = 0
  2582                           ; Regs used in _Basic_Init: [wreg+status,2]
  2583  0362  30F0               	movlw	240
  2584  0363  0021               	movlb	1	; select bank1
  2585  0364  0099               	movwf	25	;volatile
  2586                           
  2587                           ;main.c: 38: TRISA = 0x07;
  2588  0365  3007               	movlw	7
  2589  0366  008C               	movwf	12	;volatile
  2590                           
  2591                           ;main.c: 39: ANSELA = 0x07;
  2592  0367  3007               	movlw	7
  2593  0368  0023               	movlb	3	; select bank3
  2594  0369  008C               	movwf	12	;volatile
  2595                           
  2596                           ;main.c: 41: TRISB = 0x40;
  2597  036A  3040               	movlw	64
  2598  036B  0021               	movlb	1	; select bank1
  2599  036C  008D               	movwf	13	;volatile
  2600                           
  2601                           ;main.c: 42: ANSELB = 0x00;
  2602  036D  0023               	movlb	3	; select bank3
  2603  036E  018D               	clrf	13	;volatile
  2604                           
  2605                           ;main.c: 44: APFCON0 = 0x08;
  2606  036F  3008               	movlw	8
  2607  0370  0022               	movlb	2	; select bank2
  2608  0371  009D               	movwf	29	;volatile
  2609                           
  2610                           ;main.c: 45: APFCON1 = 0x00;
  2611  0372  019E               	clrf	30	;volatile
  2612                           
  2613                           ;main.c: 47: PORTA = 0x00;
  2614  0373  0020               	movlb	0	; select bank0
  2615  0374  018C               	clrf	12	;volatile
  2616                           
  2617                           ;main.c: 48: PORTB = 0x00;
  2618  0375  018D               	clrf	13	;volatile
  2619  0376  0008               	return
  2620  0377                     __end_of_Basic_Init:	
  2621                           ;main.c: 50: return 0;
  2622                           ;	Return value of _Basic_Init is never used
  2623                           
  2624                           
  2625                           	psect	intentry
  2626  0004                     __pintentry:	
  2627 ;; *************** function _Handler *****************
  2628 ;; Defined at:
  2629 ;;		line 53 in file "main.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2643 ;;      Params:         0       0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0
  2645 ;;      Temps:          0       1       0       0       0       0
  2646 ;;      Totals:         0       1       0       0       0       0
  2647 ;;Total ram usage:        1 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    2
  2650 ;; This function calls:
  2651 ;;		_Timer1_Count200us
  2652 ;;		_Timer1_DetectAssignCount
  2653 ;;		_Timer4_Handler
  2654 ;; This function is called by:
  2655 ;;		Interrupt level 1
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659  0004                     _Handler:	
  2660                           
  2661                           ;incstack = 0
  2662  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2663                           
  2664                           ; Regs used in _Handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2665  0005  3180               	pagesel	$
  2666  0006  0020               	movlb	0	; select bank0
  2667  0007  087F               	movf	127,w
  2668  0008  00A0               	movwf	??_Handler
  2669                           
  2670                           ;main.c: 55: if(Timer4_Handler())
  2671  0009  3183  23B6  3180   	fcall	_Timer4_Handler
  2672  000C  3A00               	xorlw	0
  2673  000D  1903               	skipnz
  2674  000E  2812               	goto	i1l1436
  2675                           
  2676                           ;main.c: 56: Timer1_Count200us();
  2677  000F  3183  23CB  3180   	fcall	_Timer1_Count200us
  2678  0012                     i1l1436:	
  2679                           
  2680                           ;main.c: 58: if(Timer1_DetectAssignCount())
  2681  0012  3180  20F9  3180   	fcall	_Timer1_DetectAssignCount
  2682  0015  3A00               	xorlw	0
  2683  0016  1903               	skipnz
  2684  0017  281B               	goto	i1l179
  2685                           
  2686                           ;main.c: 59: LATA6 = !LATA6;
  2687  0018  3040               	movlw	64
  2688  0019  0022               	movlb	2	; select bank2
  2689  001A  068C               	xorwf	12,f
  2690  001B                     i1l179:	
  2691  001B  0020               	movlb	0	; select bank0
  2692  001C  0820               	movf	??_Handler,w
  2693  001D  00FF               	movwf	127
  2694  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2695  001F  0009               	retfie
  2696  0020                     __end_of_Handler:	
  2697                           
  2698                           	psect	text17
  2699  03B6                     __ptext17:	
  2700 ;; *************** function _Timer4_Handler *****************
  2701 ;; Defined at:
  2702 ;;		line 17 in file "Timer4.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;		None
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      unsigned char 
  2709 ;; Registers used:
  2710 ;;		wreg
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2716 ;;      Params:         0       0       0       0       0       0
  2717 ;;      Locals:         0       0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0
  2719 ;;      Totals:         0       0       0       0       0       0
  2720 ;;Total ram usage:        0 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_Handler
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           
  2730                           ;psect for function _Timer4_Handler
  2731  03B6                     _Timer4_Handler:	
  2732                           
  2733                           ;Timer4.c: 19: if(TMR4IE&&TMR4IF)
  2734                           
  2735                           ;incstack = 0
  2736                           ; Regs used in _Timer4_Handler: [wreg]
  2737  03B6  0021               	movlb	1	; select bank1
  2738  03B7  1C93               	btfss	19,1	;volatile
  2739  03B8  2BBF               	goto	i1l952
  2740  03B9  0020               	movlb	0	; select bank0
  2741  03BA  1C93               	btfss	19,1	;volatile
  2742  03BB  2BBF               	goto	i1l952
  2743                           
  2744                           ;Timer4.c: 20: {
  2745                           ;Timer4.c: 21: TMR4IF = 0;
  2746  03BC  1093               	bcf	19,1	;volatile
  2747                           
  2748                           ;Timer4.c: 22: return 1;
  2749  03BD  3001               	movlw	1
  2750  03BE  0008               	return
  2751  03BF                     i1l952:	
  2752                           
  2753                           ;Timer4.c: 23: }
  2754                           ;Timer4.c: 24: return 0;
  2755  03BF  3000               	movlw	0
  2756  03C0  0008               	return
  2757  03C1                     __end_of_Timer4_Handler:	
  2758                           
  2759                           	psect	text18
  2760  00F9                     __ptext18:	
  2761 ;; *************** function _Timer1_DetectAssignCount *****************
  2762 ;; Defined at:
  2763 ;;		line 67 in file "Timer1.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      unsigned char 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2777 ;;      Params:         0       0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0
  2780 ;;      Totals:         0       0       0       0       0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    1
  2784 ;; This function calls:
  2785 ;;		___lldiv
  2786 ;; This function is called by:
  2787 ;;		_Handler
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _Timer1_DetectAssignCount
  2793  00F9                     _Timer1_DetectAssignCount:	
  2794                           
  2795                           ;Timer1.c: 69: static uint16_t PreviousTimer1;
  2796                           ;Timer1.c: 71: if((tcnt.Delta_t>50000)&&(TMR1==PreviousTimer1))
  2797                           
  2798                           ;incstack = 0
  2799                           ; Regs used in _Timer1_DetectAssignCount: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  2800  00F9  0020               	movlb	0	; select bank0
  2801  00FA  0852               	movf	_tcnt+3,w
  2802  00FB  1D03               	btfss	3,2
  2803  00FC  2906               	goto	i1l1278
  2804  00FD  0851               	movf	_tcnt+2,w
  2805  00FE  1D03               	btfss	3,2
  2806  00FF  2906               	goto	i1l1278
  2807  0100  3051               	movlw	81
  2808  0101  024F               	subwf	_tcnt,w
  2809  0102  30C3               	movlw	195
  2810  0103  3B50               	subwfb	_tcnt+1,w
  2811  0104  1C03               	btfss	3,0
  2812  0105  2916               	goto	i1l97
  2813  0106                     i1l1278:	
  2814  0106  0856               	movf	Timer1_DetectAssignCount@PreviousTimer1+1,w
  2815  0107  0617               	xorwf	23,w	;volatile
  2816  0108  1D03               	skipz
  2817  0109  290C               	goto	u68_25
  2818  010A  0855               	movf	Timer1_DetectAssignCount@PreviousTimer1,w
  2819  010B  0616               	xorwf	22,w	;volatile
  2820  010C                     u68_25:	
  2821  010C  1D03               	skipz
  2822  010D  2916               	goto	i1l97
  2823                           
  2824                           ;Timer1.c: 72: cnts.SigmaCPM = 0;
  2825  010E  3000               	movlw	0
  2826  010F  00C8               	movwf	_cnts+7
  2827  0110  3000               	movlw	0
  2828  0111  00C7               	movwf	_cnts+6
  2829  0112  3000               	movlw	0
  2830  0113  00C6               	movwf	_cnts+5
  2831  0114  3000               	movlw	0
  2832  0115  00C5               	movwf	_cnts+4
  2833  0116                     i1l97:	
  2834                           
  2835                           ;Timer1.c: 73: PreviousTimer1 = (uint16_t)TMR1;
  2836  0116  0817               	movf	23,w	;volatile
  2837  0117  00D6               	movwf	Timer1_DetectAssignCount@PreviousTimer1+1
  2838  0118  0816               	movf	22,w	;volatile
  2839  0119  00D5               	movwf	Timer1_DetectAssignCount@PreviousTimer1
  2840                           
  2841                           ;Timer1.c: 75: tcnt.RenewalCPM++;
  2842  011A  3001               	movlw	1
  2843  011B  07D3               	addwf	_tcnt+4,f
  2844  011C  3000               	movlw	0
  2845  011D  3DD4               	addwfc	_tcnt+5,f
  2846                           
  2847                           ;Timer1.c: 76: if((tcnt.RenewalCPM>5000)&&cnts.Num_of_Detect)
  2848  011E  3013               	movlw	19
  2849  011F  0254               	subwf	_tcnt+5,w
  2850  0120  3089               	movlw	137
  2851  0121  1903               	skipnz
  2852  0122  0253               	subwf	_tcnt+4,w
  2853  0123  1C03               	skipc
  2854  0124  294D               	goto	i1l1288
  2855  0125  084E               	movf	_cnts+13,w
  2856  0126  044D               	iorwf	_cnts+12,w
  2857  0127  044C               	iorwf	_cnts+11,w
  2858  0128  044B               	iorwf	_cnts+10,w
  2859  0129  1903               	skipnz
  2860  012A  294D               	goto	i1l1288
  2861                           
  2862                           ;Timer1.c: 77: {
  2863                           ;Timer1.c: 78: tcnt.RenewalCPM = 0;
  2864  012B  01D3               	clrf	_tcnt+4
  2865  012C  01D4               	clrf	_tcnt+5
  2866                           
  2867                           ;Timer1.c: 79: cnts.AverageCPM = cnts.SigmaCPM/cnts.Num_of_Detect;
  2868  012D  300A               	movlw	10
  2869  012E  3E41               	addlw	(low (_cnts| 0))& (0+255)
  2870  012F  0086               	movwf	6
  2871  0130  0187               	clrf	7
  2872  0131  3F40               	moviw [0]fsr1
  2873  0132  00F0               	movwf	___lldiv@divisor
  2874  0133  3F41               	moviw [1]fsr1
  2875  0134  00F1               	movwf	___lldiv@divisor+1
  2876  0135  3F42               	moviw [2]fsr1
  2877  0136  00F2               	movwf	___lldiv@divisor+2
  2878  0137  3F43               	moviw [3]fsr1
  2879  0138  00F3               	movwf	___lldiv@divisor+3
  2880  0139  3004               	movlw	4
  2881  013A  3E41               	addlw	(low (_cnts| 0))& (0+255)
  2882  013B  0086               	movwf	6
  2883  013C  0187               	clrf	7
  2884  013D  3F40               	moviw [0]fsr1
  2885  013E  00F4               	movwf	___lldiv@dividend
  2886  013F  3F41               	moviw [1]fsr1
  2887  0140  00F5               	movwf	___lldiv@dividend+1
  2888  0141  3F42               	moviw [2]fsr1
  2889  0142  00F6               	movwf	___lldiv@dividend+2
  2890  0143  3F43               	moviw [3]fsr1
  2891  0144  00F7               	movwf	___lldiv@dividend+3
  2892  0145  3181  21FD  3180   	fcall	___lldiv
  2893  0148  0871               	movf	?___lldiv+1,w
  2894  0149  0020               	movlb	0	; select bank0
  2895  014A  00CA               	movwf	_cnts+9
  2896  014B  0870               	movf	?___lldiv,w
  2897  014C  00C9               	movwf	_cnts+8
  2898  014D                     i1l1288:	
  2899                           
  2900                           ;Timer1.c: 80: }
  2901                           ;Timer1.c: 82: if(TMR1IF&&TMR1IE)
  2902  014D  1C11               	btfss	17,0	;volatile
  2903  014E  298E               	goto	i1l1312
  2904  014F  0021               	movlb	1	; select bank1
  2905  0150  1C11               	btfss	17,0	;volatile
  2906  0151  298E               	goto	i1l1312
  2907                           
  2908                           ;Timer1.c: 83: {
  2909                           ;Timer1.c: 84: cnts.SigmaDeltaCount+= 10UL;
  2910  0152  300A               	movlw	10
  2911  0153  0020               	movlb	0	; select bank0
  2912  0154  07C1               	addwf	_cnts,f
  2913  0155  3000               	movlw	0
  2914  0156  3DC2               	addwfc	_cnts+1,f
  2915  0157  3000               	movlw	0
  2916  0158  3DC3               	addwfc	_cnts+2,f
  2917  0159  3000               	movlw	0
  2918  015A  3DC4               	addwfc	_cnts+3,f
  2919                           
  2920                           ;Timer1.c: 86: cnts.SigmaCPM += (uint16_t)((10UL * 12000UL) / tcnt.Delta_t);
  2921  015B  0852               	movf	_tcnt+3,w
  2922  015C  00F3               	movwf	___lldiv@divisor+3
  2923  015D  0851               	movf	_tcnt+2,w
  2924  015E  00F2               	movwf	___lldiv@divisor+2
  2925  015F  0850               	movf	_tcnt+1,w
  2926  0160  00F1               	movwf	___lldiv@divisor+1
  2927  0161  084F               	movf	_tcnt,w
  2928  0162  00F0               	movwf	___lldiv@divisor
  2929  0163  3000               	movlw	0
  2930  0164  00F7               	movwf	___lldiv@dividend+3
  2931  0165  3001               	movlw	1
  2932  0166  00F6               	movwf	___lldiv@dividend+2
  2933  0167  30D4               	movlw	212
  2934  0168  00F5               	movwf	___lldiv@dividend+1
  2935  0169  30C0               	movlw	192
  2936  016A  00F4               	movwf	___lldiv@dividend
  2937  016B  3181  21FD         	fcall	___lldiv
  2938  016D  0870               	movf	?___lldiv,w
  2939  016E  0020               	movlb	0	; select bank0
  2940  016F  07C5               	addwf	_cnts+4,f
  2941  0170  0871               	movf	?___lldiv+1,w
  2942  0171  3DC6               	addwfc	_cnts+5,f
  2943  0172  3000               	movlw	0
  2944  0173  3DC7               	addwfc	_cnts+6,f
  2945  0174  3DC8               	addwfc	_cnts+7,f
  2946                           
  2947                           ;Timer1.c: 87: cnts.Num_of_Detect++;
  2948  0175  3001               	movlw	1
  2949  0176  07CB               	addwf	_cnts+10,f
  2950  0177  3000               	movlw	0
  2951  0178  3DCC               	addwfc	_cnts+11,f
  2952  0179  3000               	movlw	0
  2953  017A  3DCD               	addwfc	_cnts+12,f
  2954  017B  3000               	movlw	0
  2955  017C  3DCE               	addwfc	_cnts+13,f
  2956                           
  2957                           ;Timer1.c: 89: tcnt.Delta_t = 0;
  2958  017D  3000               	movlw	0
  2959  017E  00D2               	movwf	_tcnt+3
  2960  017F  3000               	movlw	0
  2961  0180  00D1               	movwf	_tcnt+2
  2962  0181  3000               	movlw	0
  2963  0182  00D0               	movwf	_tcnt+1
  2964  0183  3000               	movlw	0
  2965  0184  00CF               	movwf	_tcnt
  2966                           
  2967                           ;Timer1.c: 90: {TMR1ON = 0; TMR1 = (uint16_t)0xFFFF-10UL; TMR1ON = 1; };
  2968  0185  1018               	bcf	24,0	;volatile
  2969  0186  30FF               	movlw	255
  2970  0187  0097               	movwf	23	;volatile
  2971  0188  30F5               	movlw	245
  2972  0189  0096               	movwf	22	;volatile
  2973  018A  1418               	bsf	24,0	;volatile
  2974                           
  2975                           ;Timer1.c: 91: TMR1IF = 0;
  2976  018B  1011               	bcf	17,0	;volatile
  2977                           
  2978                           ;Timer1.c: 92: return 1;
  2979  018C  3001               	movlw	1
  2980  018D  0008               	return
  2981  018E                     i1l1312:	
  2982                           
  2983                           ;Timer1.c: 93: }
  2984                           ;Timer1.c: 94: return 0;
  2985  018E  3000               	movlw	0
  2986  018F  0008               	return
  2987  0190                     __end_of_Timer1_DetectAssignCount:	
  2988                           
  2989                           	psect	text19
  2990  01FD                     __ptext19:	
  2991 ;; *************** function ___lldiv *****************
  2992 ;; Defined at:
  2993 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  divisor         4    0[COMMON] unsigned long 
  2996 ;;  dividend        4    4[COMMON] unsigned long 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  quotient        4    9[COMMON] unsigned long 
  2999 ;;  counter         1   13[COMMON] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  4    0[COMMON] unsigned long 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3009 ;;      Params:         8       0       0       0       0       0
  3010 ;;      Locals:         5       0       0       0       0       0
  3011 ;;      Temps:          1       0       0       0       0       0
  3012 ;;      Totals:        14       0       0       0       0       0
  3013 ;;Total ram usage:       14 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_Timer1_DetectAssignCount
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function ___lldiv
  3024  01FD                     ___lldiv:	
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3028  01FD  3000               	movlw	0
  3029  01FE  00FC               	movwf	___lldiv@quotient+3
  3030  01FF  3000               	movlw	0
  3031  0200  00FB               	movwf	___lldiv@quotient+2
  3032  0201  3000               	movlw	0
  3033  0202  00FA               	movwf	___lldiv@quotient+1
  3034  0203  3000               	movlw	0
  3035  0204  00F9               	movwf	___lldiv@quotient
  3036  0205  0873               	movf	___lldiv@divisor+3,w
  3037  0206  0472               	iorwf	___lldiv@divisor+2,w
  3038  0207  0471               	iorwf	___lldiv@divisor+1,w
  3039  0208  0470               	iorwf	___lldiv@divisor,w
  3040  0209  1903               	skipnz
  3041  020A  2A46               	goto	i1l1130
  3042  020B  01FD               	clrf	___lldiv@counter
  3043  020C  0AFD               	incf	___lldiv@counter,f
  3044  020D                     i1l1116:	
  3045  020D  1BF3               	btfsc	___lldiv@divisor+3,7
  3046  020E  2A1B               	goto	i1l1118
  3047  020F  3001               	movlw	1
  3048  0210                     u48_25:	
  3049  0210  35F0               	lslf	___lldiv@divisor,f
  3050  0211  0DF1               	rlf	___lldiv@divisor+1,f
  3051  0212  0DF2               	rlf	___lldiv@divisor+2,f
  3052  0213  0DF3               	rlf	___lldiv@divisor+3,f
  3053  0214  0B89               	decfsz	9,f
  3054  0215  2A10               	goto	u48_25
  3055  0216  3001               	movlw	1
  3056  0217  00F8               	movwf	??___lldiv
  3057  0218  0878               	movf	??___lldiv,w
  3058  0219  07FD               	addwf	___lldiv@counter,f
  3059  021A  2A0D               	goto	i1l1116
  3060  021B                     i1l1118:	
  3061  021B  3001               	movlw	1
  3062  021C                     u50_25:	
  3063  021C  35F9               	lslf	___lldiv@quotient,f
  3064  021D  0DFA               	rlf	___lldiv@quotient+1,f
  3065  021E  0DFB               	rlf	___lldiv@quotient+2,f
  3066  021F  0DFC               	rlf	___lldiv@quotient+3,f
  3067  0220  0B89               	decfsz	9,f
  3068  0221  2A1C               	goto	u50_25
  3069  0222  0873               	movf	___lldiv@divisor+3,w
  3070  0223  0277               	subwf	___lldiv@dividend+3,w
  3071  0224  1D03               	skipz
  3072  0225  2A30               	goto	u51_25
  3073  0226  0872               	movf	___lldiv@divisor+2,w
  3074  0227  0276               	subwf	___lldiv@dividend+2,w
  3075  0228  1D03               	skipz
  3076  0229  2A30               	goto	u51_25
  3077  022A  0871               	movf	___lldiv@divisor+1,w
  3078  022B  0275               	subwf	___lldiv@dividend+1,w
  3079  022C  1D03               	skipz
  3080  022D  2A30               	goto	u51_25
  3081  022E  0870               	movf	___lldiv@divisor,w
  3082  022F  0274               	subwf	___lldiv@dividend,w
  3083  0230                     u51_25:	
  3084  0230  1C03               	skipc
  3085  0231  2A3B               	goto	i1l1126
  3086  0232  0870               	movf	___lldiv@divisor,w
  3087  0233  02F4               	subwf	___lldiv@dividend,f
  3088  0234  0871               	movf	___lldiv@divisor+1,w
  3089  0235  3BF5               	subwfb	___lldiv@dividend+1,f
  3090  0236  0872               	movf	___lldiv@divisor+2,w
  3091  0237  3BF6               	subwfb	___lldiv@dividend+2,f
  3092  0238  0873               	movf	___lldiv@divisor+3,w
  3093  0239  3BF7               	subwfb	___lldiv@dividend+3,f
  3094  023A  1479               	bsf	___lldiv@quotient,0
  3095  023B                     i1l1126:	
  3096  023B  3001               	movlw	1
  3097  023C                     u52_25:	
  3098  023C  36F3               	lsrf	___lldiv@divisor+3,f
  3099  023D  0CF2               	rrf	___lldiv@divisor+2,f
  3100  023E  0CF1               	rrf	___lldiv@divisor+1,f
  3101  023F  0CF0               	rrf	___lldiv@divisor,f
  3102  0240  0B89               	decfsz	9,f
  3103  0241  2A3C               	goto	u52_25
  3104  0242  3001               	movlw	1
  3105  0243  02FD               	subwf	___lldiv@counter,f
  3106  0244  1D03               	btfss	3,2
  3107  0245  2A1B               	goto	i1l1118
  3108  0246                     i1l1130:	
  3109  0246  087C               	movf	___lldiv@quotient+3,w
  3110  0247  00F3               	movwf	?___lldiv+3
  3111  0248  087B               	movf	___lldiv@quotient+2,w
  3112  0249  00F2               	movwf	?___lldiv+2
  3113  024A  087A               	movf	___lldiv@quotient+1,w
  3114  024B  00F1               	movwf	?___lldiv+1
  3115  024C  0879               	movf	___lldiv@quotient,w
  3116  024D  00F0               	movwf	?___lldiv
  3117  024E  0008               	return
  3118  024F                     __end_of___lldiv:	
  3119                           
  3120                           	psect	text20
  3121  03CB                     __ptext20:	
  3122 ;; *************** function _Timer1_Count200us *****************
  3123 ;; Defined at:
  3124 ;;		line 62 in file "Timer1.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3138 ;;      Params:         0       0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_Handler
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function _Timer1_Count200us
  3153  03CB                     _Timer1_Count200us:	
  3154                           
  3155                           ;Timer1.c: 64: tcnt.Delta_t++;
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _Timer1_Count200us: [wreg]
  3159  03CB  3001               	movlw	1
  3160  03CC  0020               	movlb	0	; select bank0
  3161  03CD  07CF               	addwf	_tcnt,f
  3162  03CE  3000               	movlw	0
  3163  03CF  3DD0               	addwfc	_tcnt+1,f
  3164  03D0  3000               	movlw	0
  3165  03D1  3DD1               	addwfc	_tcnt+2,f
  3166  03D2  3000               	movlw	0
  3167  03D3  3DD2               	addwfc	_tcnt+3,f
  3168  03D4  0008               	return
  3169  03D5                     __end_of_Timer1_Count200us:	
  3170  007E                     btemp	set	126	;btemp
  3171  007E                     int$flags	set	126
  3172  007E                     wtemp0	set	126


Data Sizes:
    Strings     7
    Constant    10
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      55
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Timer1_DetectAssignCount->___lldiv

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_LCD_WriteData
    ___lwmod->___lwdiv
    _LCD_Init->_LCD_DisplayClear
    _LCD_DisplayClear->_LCD_WriteData
    _LCD_CursorHome->_LCD_WriteData

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Handler in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1393
                         _Basic_Init
                     _LCD_CursorHome
                           _LCD_Init
                      _Timer1_GetCPM
                 _Timer1_GetCountSum
                        _Timer1_Init
                  _Timer1_StartCount
                        _Timer4_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              26    18      8    1129
                                             15 BANK0     18    10      8
                      _Timer1_GetCPM (ARG)
                 _Timer1_GetCountSum (ARG)
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     110
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              9 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              1 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer4_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_StartCount                                    0     0      0       0
                 _Timer1_ClearRecord
 ---------------------------------------------------------------------------------
 (2) _Timer1_ClearRecord                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCountSum                                   4     0      4       0
                                              1 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_GetCPM                                        2     0      2       0
                                              1 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              5 BANK0      2     2      0
                   _LCD_DisplayClear
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayClear                                     1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorHome                                       1     1      0      88
                                              4 BANK0      1     1      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteData                                        3     3      0      88
                                              1 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Handler                                              1     1      0     374
                                              0 BANK0      1     1      0
                  _Timer1_Count200us
           _Timer1_DetectAssignCount
                     _Timer4_Handler
 ---------------------------------------------------------------------------------
 (5) _Timer4_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Timer1_DetectAssignCount                             0     0      0     374
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (5) _Timer1_Count200us                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _LCD_CursorHome
     _LCD_WriteData
   _LCD_Init
     _LCD_DisplayClear
       _LCD_WriteData
     _LCD_WriteData
   _Timer1_GetCPM
   _Timer1_GetCountSum
   _Timer1_Init
   _Timer1_StartCount
     _Timer1_ClearRecord
   _Timer4_Init
   _printf
     _Timer1_GetCPM (ARG)
     _Timer1_GetCountSum (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     _putch (ARG)
       _LCD_WriteData

 _Handler (ROOT)
   _Timer1_Count200us
   _Timer1_DetectAssignCount
     ___lldiv
   _Timer4_Handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      45       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     21      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      45      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon May 22 13:23:46 2017

                        _LCD_CursorHome 0398                             __CFG_CP$OFF 0000  
                                   l200 0051                                     l212 00F8  
                                   l168 02CE                                     l198 006D  
                                   _GIE 005F                                     _RA3 0063  
                                   _RA4 0064                                     _PR4 0416  
                          __CFG_CPD$OFF 0000                                     u465 0259  
                                   u625 02F8                                     u555 0296  
                                   u645 0307                                     u575 02A0  
                                   u655 030E                                     u585 02AA  
                                   u907 01B1                                     u595 02B2  
                                   u917 01C6                                     u927 01DB  
                                   u775 00AC                                     u937 0392  
                                   u947 03A2                                     u957 0252  
                                   u897 0199                            __CFG_BORV$LO 0000  
                                   wreg 0009                              _Basic_Init 0362  
                          __CFG_LVP$OFF 0000              ??_Timer1_DetectAssignCount 007E  
                                  l1152 02B1                                    l1144 0293  
                                  l1146 029F                                    l1170 0301  
                                  l1156 02BA                                    l1174 030D  
                                  l1168 02F5                                    l1352 0053  
                                  l1178 0316                                    l1380 00B6  
                                  l1364 0086                                    l1348 004E  
                                  l1390 00C3                                    l1374 0097  
                                  l1384 00BE                                    l1368 0091  
                                  l1392 0032                                    STR_1 0381  
                                  _PEIE 005E                                    i1l97 0116  
                                  _TMR1 0016                                    _TMR4 0415  
                                  _WPUB 020D                            __CFG_WRT$OFF 0000  
                                  _cnts 0041                                    _main 02BF  
                                  _tcnt 004F                                    fsr0h 0005  
                                  fsr1h 0007                                    indf0 0000  
                                  fsr0l 0004                                    fsr1l 0006  
                                  btemp 007E                           __CFG_BOREN$ON 0000  
                                  start 0020                           __CFG_IESO$OFF 0000  
                       __end_of_Handler 0020                  __end_of_LCD_CursorHome 03A8  
                         _LCD_WriteData 024F                           __CFG_MCLRE$ON 0000  
              __end_of_LCD_DisplayClear 0398                        __end_of_LCD_Init 01FD  
                         __CFG_PLLEN$ON 0000                                   ?_main 0070  
                         __CFG_WDTE$OFF 0000                         __end_of___lldiv 024F  
                                 _T1CON 0018                                   _LATA6 0866  
                                 _T4CON 0417                         __end_of___lwdiv 02BF  
           __size_of_Timer1_ClearRecord 0026                         __end_of___lwmod 031B  
                                 i1l179 001B                                   i1l952 03BF  
                                 u50_25 021C                                   _PORTA 000C  
                                 _PORTB 000D                                   u51_25 0230  
                                 u52_25 023C                                   u48_25 0210  
                                 _TRISA 008C                                   _TRISB 008D  
                                 u68_25 010C                           __CFG_PWRTE$ON 0000  
                        __CFG_FCMEN$OFF 0000                         __end_of_dpowers 0381  
                                 _putch 03D5                   __end_of_Timer1_GetCPM 03E8  
           __size_of_Timer1_GetCountSum 000A                                   status 0003  
                                 wtemp0 007E                          ?_LCD_WriteData 0070  
                       ?_LCD_CursorHome 0070                         __initialization 0022  
                          __end_of_main 02EE                                  ??_main 0041  
                           ?_Basic_Init 0070                                  _ANSELA 018C  
                                ?_putch 0070                                  _ANSELB 018D  
                                _T1GCON 0019                                  i1l1130 0246  
                                i1l1116 020D                                  i1l1126 023B  
                                i1l1118 021B                                  i1l1312 018E  
                                i1l1436 0012                                  i1l1278 0106  
                                i1l1288 014D                                  _OSCCON 0099  
                        _Timer4_Handler 03B6                                  _TMR1IE 0488  
                                _TMR1IF 0088                               ??_Handler 0020  
                                _TMR4IE 0499                                  _TMR4IF 0099  
                                _TMR1ON 00C0                           ??_Timer1_Init 0021  
                         ??_Timer4_Init 0021                               ??___lldiv 0078  
                             ??___lwdiv 0025                               ??___lwmod 002D  
                                _printf 002D                                  putch@c 0024  
                __end_of_Timer4_Handler 03C1                 __end_of__initialization 0029  
                             ?_LCD_Init 0070                         ??_LCD_WriteData 0021  
                        __pcstackCOMMON 0070                     __size_of_Basic_Init 0015  
                         __end_of_putch 03DC                     __end_of_Timer1_Init 0362  
                   __end_of_Timer4_Init 03B6                                 ??_putch 0024  
                       ?_Timer4_Handler 0070                              __pbssBANK0 0041  
                            ??_LCD_Init 0025                              __pmaintext 02BF  
                            __pintentry 0004                       ?_LCD_DisplayClear 0070  
                               _APFCON0 011D                                 _APFCON1 011E  
                               ?_printf 002F                      ??_LCD_DisplayClear 0024  
                      ??_LCD_CursorHome 0024                                 _Handler 0004  
                     _Timer1_Count200us 03CB                             _Timer1_Init 0341  
                           _Timer4_Init 03A8                      ?_Timer1_Count200us 0070  
     __size_of_Timer1_DetectAssignCount 0097               ?_Timer1_DetectAssignCount 0070  
                               ___lldiv 01FD                                 ___lwdiv 028A  
                               ___lwmod 02EE                         __CFG_STVREN$OFF 0000  
            __end_of_Timer1_ClearRecord 0341                                 __ptext1 002D  
                               __ptext2 03D5                                 __ptext3 02EE  
                               __ptext4 028A                                 __ptext5 03A8  
                               __ptext6 03E8                                 __ptext7 031B  
                               __ptext8 0341                                 __ptext9 03C1  
                   ??_Timer1_Count200us 0070                         __size_of_printf 00CC  
                               _dpowers 0377                            ??_Basic_Init 0021  
                               clrloop0 03DD              __end_of_Timer1_GetCountSum 03CB  
                  end_of_initialization 0029               __end_of_Timer1_Count200us 03D5  
                       ___lldiv@divisor 0070                         ___lldiv@counter 007D  
                               printf@c 0040                                 printf@f 002F  
                    __end_of_Basic_Init 0377                            __pstringtext 0377  
                __size_of_Timer1_GetCPM 0006                        __CFG_FOSC$INTOSC 0000  
                     __size_of_LCD_Init 006D                       _Timer1_StartCount 03E8  
                    ?_Timer1_StartCount 0070                     ??_Timer1_StartCount 0021  
                        __end_of_printf 00F9                        ??_Timer4_Handler 0070  
                   start_initialization 0022                           _Timer1_GetCPM 03E2  
            __size_of_Timer1_Count200us 000A               __end_of_Timer1_StartCount 03ED  
                 __end_of_LCD_WriteData 028A                                ??_printf 0037  
                             ___latbits 0001                           __pcstackBANK0 0020  
             __size_of_LCD_DisplayClear 0010                          ?_Timer1_GetCPM 0021  
      __end_of_Timer1_DetectAssignCount 0190                                ?_Handler 0070  
                          ?_Timer1_Init 0070                        ___lwdiv@dividend 0023  
                          ?_Timer4_Init 0070                                ?___lldiv 0070  
                              ?___lwdiv 0021                                ?___lwmod 0029  
Timer1_DetectAssignCount@PreviousTimer1 0055                        ___lwdiv@quotient 0026  
                    _Timer1_ClearRecord 031B                          __size_of_putch 0007  
                              _LCD_Init 0190                     ?_Timer1_ClearRecord 0070  
            __size_of_Timer1_StartCount 0005                               clear_ram0 03DC  
                    _Timer1_GetCountSum 03C1                     ?_Timer1_GetCountSum 0021  
                  ??_Timer1_ClearRecord 0021                              printf@flag 003D  
                            printf@prec 003B                         ??_Timer1_GetCPM 0023  
                  ??_Timer1_GetCountSum 0025                        __size_of_Handler 001C  
              _Timer1_DetectAssignCount 00F9                 __size_of_LCD_CursorHome 0010  
                      __size_of___lldiv 0052                        __size_of___lwdiv 0035  
                      __size_of___lwmod 002D                      LCD_WriteData@point 0023  
                       ___lwdiv@divisor 0021                         ___lwdiv@counter 0028  
                              __ptext10 03E2                                __ptext11 0190  
                              __ptext20 03CB                                __ptext12 0388  
                              __ptext13 0398                                __ptext14 024F  
                              __ptext15 0362                                __ptext17 03B6  
                              __ptext18 00F9                                __ptext19 01FD  
                      _LCD_DisplayClear 0388                           __size_of_main 002F  
                  __size_of_Timer1_Init 0021                                int$flags 007E  
                  __size_of_Timer4_Init 000E                               printf@val 003E  
                              intlevel1 0000                        ___lwmod@dividend 002B  
                      ___lldiv@dividend 0074                       __CFG_CLKOUTEN$OFF 0000  
                              printf@ap 003C                        ___lldiv@quotient 0079  
                       ___lwmod@divisor 0029                         ___lwmod@counter 002E  
                __size_of_LCD_WriteData 003B                 __size_of_Timer4_Handler 000B  
